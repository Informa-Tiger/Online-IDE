{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/types/Types.ts","webpack:///../../../src/client/interpreter/RuntimeObject.ts","webpack:///../../../../src/client/compiler/parser/LabelManager.ts","webpack:///../../../../src/client/compiler/types/Class.ts","webpack:///../../../../src/client/compiler/types/Array.ts","webpack:///../../../../src/client/compiler/types/ObjectClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/IntegerClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/FloatClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/CharacterClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/BooleanClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/DoubleClass.ts","webpack:///../../../../src/client/compiler/types/PrimitiveTypes.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/types/Enum.ts","webpack:///../../../src/client/runtimelibrary/Input.ts","webpack:///../../../../src/client/compiler/parser/CodeGenerator.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/types/TypeTools.ts","webpack:///../../../../src/client/compiler/parser/TypeResolver.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/runtimelibrary/collections/ListIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/ArrayList.ts","webpack:///../../../../src/client/runtimelibrary/collections/Collection.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterable.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterator.ts","webpack:///../../../../src/client/runtimelibrary/collections/List.ts","webpack:///../../../../src/client/runtimelibrary/collections/Stack.ts","webpack:///../../../../src/client/runtimelibrary/collections/Vector.ts","webpack:///../../../../src/client/runtimelibrary/collections/Set.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedHashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/Queue.ts","webpack:///../../../../src/client/runtimelibrary/collections/Deque.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedList.ts","webpack:///../../../src/client/runtimelibrary/Console.ts","webpack:///../../../../src/client/main/gui/PrintManager.ts","webpack:///../../../src/client/interpreter/InputManager.ts","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../src/client/interpreter/DebuggerElement.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../src/client/interpreter/WatcherElement.ts","webpack:///../../../src/client/interpreter/Debugger.ts","webpack:///../../../src/client/compiler/AdhocCompiler.ts","webpack:///../../../src/client/interpreter/Evaluator.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../src/client/tools/SoundTools.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../../src/client/compiler/parser/ProgramPrinter.ts","webpack:///../../../../../src/client/main/gui/console/ConsoleEntry.ts","webpack:///../../../../../src/client/main/gui/console/MyConsole.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/compiler/types/DeclarationHelper.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/MyJava.ts","webpack:///../../../../src/client/main/gui/Dialog.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/SpeedControl.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/WorkspaceSettingsDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../../src/client/main/gui/diagrams/ZoomControl.ts","webpack:///../../../../../src/client/main/gui/diagrams/Diagram.ts","webpack:///../../../../../src/client/main/gui/diagrams/DiagramElement.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassBox.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ArrowHead.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/DiagramArrow.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ListDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagramVariant.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagram.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/WindowStateManager.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../src/client/tools/KeyboardTool.ts","webpack:///../../../src/client/tools/GamepadTool.ts","webpack:///../../../src/client/interpreter/Interpreter.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ColorHelper.ts","webpack:///../../../../src/client/runtimelibrary/graphics/World.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Actor.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Alignment.ts","webpack:///../../../src/client/tools/MatheTools.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Shape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Bitmap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/FilledShape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Circle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sector.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Arc.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Color.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Ellipse.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Group.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Key.ts","webpack:///../../../src/client/tools/ConvexHull.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Polygon.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Rectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RepeatType.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RoundedRectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ScaleMode.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sound.ts","webpack:///../../../../src/client/runtimelibrary/graphics/PolygonStore.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sprite.ts","webpack:///../../../../src/client/runtimelibrary/graphics/SpriteLibraryEnum.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Text.ts","webpack:///../../../src/client/runtimelibrary/Gamepad.ts","webpack:///../../../src/client/runtimelibrary/Math.ts","webpack:///../../../src/client/runtimelibrary/MathToolsClass.ts","webpack:///../../../src/client/runtimelibrary/System.ts","webpack:///../../../src/client/runtimelibrary/SystemTools.ts","webpack:///../../../src/client/runtimelibrary/Timer.ts","webpack:///../../../../src/client/runtimelibrary/collections/Map.ts","webpack:///../../../../src/client/runtimelibrary/collections/MapHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashMap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Triangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/LocalDateTime.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Line.ts","webpack:///../../../src/client/runtimelibrary/Vector2.ts","webpack:///../../../../src/client/runtimelibrary/graphics/MouseListener.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocketClient.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocket.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Processing.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Turtle.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGEreignisbehandlung.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGZeichenfenster.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGRechteck.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGFarben.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGBaseFigur.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGAktionsempfaenger.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGDreieck.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGKreis.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGTurtle.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGText.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGFigur.ts","webpack:///../../../src/client/runtimelibrary/Random.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Direction.ts","webpack:///../../../../src/client/compiler/parser/Patcher.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../src/client/embedded/EmbeddedSlider.ts","webpack:///../../../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../../../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../../../src/client/embedded/MainEmbedded.ts","webpack:///../../../src/client/embedded/EmbeddedStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TokenType","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordClass","keywordThis","keywordSuper","keywordNew","keywordInterface","keywordEnum","keywordVoid","keywordAbstract","keywordPublic","keywordProtected","keywordPrivate","keywordTransient","keywordStatic","keywordExtends","keywordImplements","keywordWhile","keywordDo","keywordFor","keywordSwitch","keywordCase","keywordDefault","keywordIf","keywordThen","keywordElse","keywordReturn","keywordBreak","keywordContinue","keywordNull","keywordFinal","keywordInstanceof","keywordPrint","keywordPrintln","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","doubleMinus","doublePlus","lower","greater","lowerOrEqual","greaterOrEqual","equal","notEqual","assignment","plusAssignment","minusAssignment","multiplicationAssignment","divisionAssignment","moduloAssignment","ampersand","and","or","not","ANDAssigment","XORAssigment","ORAssigment","shiftLeftAssigment","shiftRightAssigment","shiftRightUnsignedAssigment","OR","XOR","tilde","shiftLeft","shiftRight","shiftRightUnsigned","ternaryOperator","semicolon","colon","ellipsis","comma","backslash","at","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","linefeed","keywordList","EscapeSequenceList","\"","Type","onlyFirstPass","usagePositions","Map","documentation","this","PrimitiveType","initialValue","description","type","operation","secondOperandType","opTypeMap","operationTable","canCastToMap","Attribute","updateValue","isStatic","visibility","isFinal","Method","parameterlist","returnType","invokeOrAST","isAbstract","isConstructor","isVirtual","reserveStackForLocalVariables","genericTypeMap","invoke","program","method","signature","id","parameters","hasGenericTypes","canCastTo","length","myParameter","mParameter","isEllipsis","index","label","getTypeIdentifier","arrayOfType","leftBracketAlreadyThere","snippet","isVoidReturnDelta","firstOperand","secondOperand","Parameterlist","computeId","map","tv","join","klass","intrinsicData","class","initializeAttributeValues","attributeIndex","av","attributes","Array","numberOfAttributesIncludingBaseClass","fill","att","v","baseClass","Visibility","booleanPrimitiveTypeCopy","maxLabelIndex","labeledNodes","labelMap","jumpNodesToResolve","switchStatements","insertPosition","insertedLength","ln","position","switchStatement","push","codeGenerator","labelIndex","statementList","statements","node","stepFinished","pushStatements","registerJumpNode","offset","labeledNode","set","indexOf","newNode","ntr","noOp","jn","dest","destination","sw","destinationLabels","dl","destinationMap","constant","defaultDestination","typeVariables","isTypeVariable","typeVariablesReady","implements","firstPassImplements","postConstructorCallbacks","methods","methodMap","attributeMap","public","staticClass","attributeInitializationProgram","labelManager","setupAttributeIndicesRecursive","numberOfAttributesInBaseClasses","k","isGenericVariantFrom","getThisOrExtendedInterface","getNonGenericIdentifier","i2","usedSystemClasses","isSystemModule","getCompositeData","cd","interf","cdMap","a","Klass","cda","multiples","clearUsagePositions","callbacks","concat","visibilityUpTo","identifierAndBracketAfterCursor","rangeToReplace","currentMethod","itemList","getAttributes","attribute","kind","monaco","languages","CompletionItemKind","Field","insertText","range","undefined","getMethods","pushSuperCompletionItem","getCompletionLabel","filterText","command","title","arguments","getCompletionSnippet","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","getCompletionItems","replace","programStack","programPosition","textPosition","line","column","callbackAfterReturn","isCalledFromOutside","addMethod","addAttribute","nullType","firstOpClass","typeLeft","typeRight","upToVisibility","filter","baseClassUptoVisibility","protected","found","upToVisibilityInBaseClass","hasConstructor","hasConstructorWithParameters","hasParameterlessConstructor","getParameterlessConstructor","parameterTypes","classIdentifier","constructors","getConstructor","findSuitableMethods","searchConstructor","methodList","staticMethods","getMethodsThatFitWithCasting","error","getMethod","foundButInvisible","attributeNotFound","baseClassAttribute","getAttribute","stringPrimitiveType","Math","min","dontInheritFrom","message","missingMethods","missingAbstractMethods","implementedMethods","missingInterfaceMethods","hierarchy","abstractMethods","isImplemented","getSignatureWithReturnParameter","maxLength","private","getValue","debugOutput","newKlass","slice","classObject","visibilityUpToBaseClass","notFound","baseClassAttributeWithError","extends","if2","newInterface","Interface","methodsWithSubInterfaces","visitedInterfaces","visitedMethods","todo","pop","type2","suitableMethods","howManyCastingsMax","oneWithCorrectIdentifierFound","howManyCastings","hasEllipsis","getParameterCount","suits","mParameterType","getParameterType","givenType","mParameterTypeEllispsis","getParameter","j","typeString","getVisibilityUpTo","objectType","currentClassContext","hasAncestorOrIs","lengthAttribute","intPrimitiveType","ArrayType","equals","referenceElement","array","destType","castTo","s1","unboxableAs","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","floatPrimitiveType","doublePrimitiveType","declaration","parseInt","v0","v1","booleanPrimitiveType","sign","toString","MAX_VALUE","MIN_VALUE","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","parseFloat","trunc","isNaN","Infinity","charPrimitiveType","charCodeAt","charAt","match","toLocaleUpperCase","toLocaleLowerCase","toLowerCase","negation","automatic","needsStatement","String","fromCharCode","stringClass","forEach","localeCompare","caseFirst","sensitivity","endsWith","startsWith","substring","trim","lastIndexOf","pattern","regExp","RegExp","strings","split","values","voidPrimitiveType","LexerState","varType","IntegerType","FloatType","DoubleType","CharacterType","BooleanType","TokenTypeToDataTypeMap","spaceTokens","correspondingBracket","input","tokenList","errorList","bracketError","bracketStack","pos","nonSpaceLastTokenType","tokens","errors","currentChar","nextChar","mainState","bracketOpen","bracketClosed","setBracketError","tt","openBracket","char","specialCharToken","pushToken","next","checkClosingBracket","lexMultilineComment","lexEndofLineComment","lexShiftLeft","lexShiftRight","isDigit","lexNumber","lexCharacterConstant","lexStringConstant","lexSpace","lexAnnotation","lexIdentifierOrKeyword","lexShiftRightUnsigned","text","errorLevel","level","base","charCode","posStart","posEnd","escapeChar","pushError","lastCharWasNewline","firstChar","radix","exponent","posExponentStart","exponentString","pow","isSpace","autoFormatTriggerCharacters","displayName","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","model","ch","options","token","edits","format","Promise","resolve","e","e1","endLineNumber","startLineNumber","endColumn","startColumn","splice","delta","substr","editor","EndOfLinePreference","LF","tokenlist","lex","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","deleteSpaces","replaceBetween","token1","insertSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","nextNonSpaceToken","getNextNonSpaceToken","lastTokenIsOperator","nextTokenIsOperator","beginNextLine","token2","currentIndentation","il","correctIndentation","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","return","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","keys","cssColors","style","setProperty","parentSymbolTable","SymbolTable","maxId","beginsNewStackframe","childSymbolTables","variableMap","classContext","parent","imitation","st","maxStackPos","variable","stackPos","stackframeSize","completionItems","Snippet","Variable","getLocalVariableCompletionItems","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","EnumRuntimeObject","en","enumValue","enumValueNodes","enumInfoList","identifierToInfoMap","indexToInfoMap","valueList","evn","ev","ordinal","ei","that","vi","valueIdentifier","enumInfo","enumObject","setBaseClass","typeStore","getType","initStackFrameNodes","moduleStore","symbolTable","heap","symbolTableStack","currentSymbolTable","oldStackframeSize","nextFreeRelativeStackPos","currentProgram","breakNodeStack","continueNodeStack","generateMain","lastToken","mainSymbolTable","generateClasses","lookForStaticVoidMain","mainProgram","mainMethod","classDefinitionsAST","classNode","ct","resolvedType","pt","initCurrentProgram","callMainMethod","closeStackframe","generateClass","generateEnum","checkDoubleMethodDeclaration","enumNode","pushNewSymbolTable","scopeFrom","scopeTo","enumClass","initialization","initializeAttribute","lastStatement","copyReturnValueToStackframePos0","leaveThisObjectOnStack","resolveNodes","methodNode","compileMethod","popSymbolTable","enumValueNode","constructorParameters","pushEnumValue","processEnumConstructorCall","commaPositions","rightBracketPosition","programEnd","constructorCallProgram","parameterNodes","typeNode","processNode","pushMethodCallPosition","isAssignable","srcType","getCastInformation","castValue","newType","stackPosRelative","stackframeDelta","ellipsisParameterCount","makeEllipsisArray","parameterCount","arrayType","callMethod","isSuperCall","stackframeBegin","inheritanceError","checkInheritance","getInheritanceQuickFix","cie","signatureMap","cieType","editsProvider","uri","resource","edit","nodes","superconstructorCallsFound","isFirstStatement","superConstructorCall","scopeNode","getSuperconstructorCalls","checkIfMethodIsVirtual","getParameterList","superconstructorCalls","superconstructorCallEnsured","quickFix","methodCall","severity","MarkerSeverity","Error","baseClassConstructor","pushLocalVariableToStack","stackposOfVariable","actorClass","returnIfDestroyed","generateStatements","withReturnStatement","rt","getReturnType","getModules","mo","typeList","pushStaticAttribute","attributeIdentifier","pushAttribute","useThisObject","initializationType","ensureAutomaticCasting","attributeType","leaveValueOnStack","isAdhocCompilation","mainProgramAst","hasMainProgram","decreaseStackpointer","removeLastStatement","lastPosition","mainProgramEnd","pauseAfterProgramEnd","typeFrom","typeTo","nodeFrom","checkIfAssignmentInstedOfEqual","toStringStatement","getToStringStatement","castInfo","toStringMethod","getMethodBySignature","conditionType","binaryOp","operator","endPosition","processStatementsInsideBlock","lastNode","assign","popCount","isArray","statement","deleteStepFinishedFlagOnStepBefore","stepBefore","jumpAlways","lst","removeNode","beginNewStackframe","initStackFrameNode","initStackframe","reserveForLocalVariables","declarationError","usedBeforeInitialization","initStackframeNode","jumpIfTrue","jumpIfFalse","jumpIfFalseAndLeaveOnStack","jumpIfTrueAndLeaveOnStack","breakNode","continueNode","breakTargetLabel","lm","breakNodes","bn","continueTargetLabel","continueNodes","isLeftSideOfAssignment","processBinaryOp","unaryOp","processUnaryOp","pushConstant","stackType","resolveIdentifier","initialized","selectArrayElement","incrementDecrementBefore","incrementDecrementAfter","incrementDecrementBeforeOrAfter","constructorCall","superconstructorCall","pushThisOrSuper","newObject","processWhile","processDo","processFor","forLoopOverCollection","processForLoopOverCollection","processIf","processSwitch","processReturn","localVariableDeclaration","arrayInitialization","processArrayLiteral","newArray","processNewArray","processPrint","processManualCast","pushBreakNode","pushContinueNode","termInsideBrackets","pushTypePosition","typeFrom1","whatToCast","castToType","checkCast","print","println","withColor","color","empty","dimension","elementCount","ec","pushEmptyArray","bes","beginArray","ain","sType","targetType","addToArray","numberOfElementsToAdd","dontWarnWhenNoInitialization","variableType","declareVariableOnHeap","pushUsagePosition","heapVariableDeclaration","pushOnTopOfStackForInitialization","initType","initializer","term","condition","isString","isEnum","switchType","endLabel","insertJumpNode","registerSwitchStatement","openBreakScope","caseNodes","caseNode","caseTerm","markJumpDestination","info","ls","getOrdinal","closeBreakScope","endOfIf","withReturnStatementElse","beginElse","withReturnStatementIf","statementsIfTrue","statementsIfFalse","statementsBefore","labelBeforeCondition","labelAfterForLoop","openContinueScope","continueLabelIndex","closeContinueScope","statementsAfter","stackPosForCollection","collection","collectionElementType","collectionType","popAndStoreIntoVariable","getImplementedInterface","noCastingNeeded","variableIdentifier","variablePosition","variableStackPos","stackPosOfCounterVariableOrIterator","extendedForLoopInit","stackPosOfCollection","stackPosOfElement","typeOfElement","stackPosOfCounter","lastStatementBeforeCasting","jumpNode","extendedForLoopCheckCounterAndGetElement","oldStatementCount","conditionBeginLabel","afterWhileStatementLabel","statementsBeginLabel","classType","newStatement","subsequentConstructorCall","positionsAfterParameterStatements","allStatements","constructorOperands","staticClassContext","castingStatements","correctPositionsAfterInsert","getPostConstructorCallbacks","processPostConstructorCallbacks","ot","attributeWithError","staticAttributeWithError","find","pushArrayLength","element","addIdentifierPosition","isSuper","methodContext","isSuperConstructorCall","superclassType","operands","errorInOperands","operand","incrementDecrementBy","indexType","positionList","findLocalVariable","pushFromHeapToStack","findAttribute","cc","scc","klassModule","pushStaticClassObject","staticAttribute","objectNode","thisClass","posBeforeParameterEvaluation","insertStatements","visible","callInputMethod","constantType","dataType","isAssignment","CodeGenerator","assignmentOperators","processTernaryOperator","leftType","programPosAfterLeftOpoerand","lazyEvaluationDest","rightType","resultType","getResultType","unboxableLeft","unboxableRight","leftTypes","rightTypes","lt","opIndex","variantFalseLabel","firstType","secondType","isInConsoleMode","lookahead","endToken","tokensNotAfterCasting","typeNodes","initializeLookahead","astNodes","parseMain","mainProgramAST","classDefinitionAST","lastComment","commentBefore","cct","skip","invokeSemicolonAngel","isOperatorOrDot","main","getSemicolonAngel","register","nextToken","Parser","operatorPrecedence","op","getCurrentPosition","classDefinitions","isEnd","oldPos","comesToken","BeforeClassDefinitionTokens","parseClassDefinition","parseStatement","expectSemicolon","retStatements","ret","parseVariableDeclarationOrTerm","expect","parseWhile","parseFor","parseDo","parseIf","parseReturn","parsePrint","parseSwitch","position1","dontSkip","retStmt","checkIfStatementHasNoEffekt","parseTerm","semicolonPositions","parseForLoopOverCollection","parseType","variableIdentifierPosition","mcp","parseMethodCallParameters","paramenters","switchTerm","switchNode","defaultAlreadyThere","casePosition","isDefault","parseUnary","switchCaseNode","getEndOfCurrentToken","elseStatements","comesGenericType","vd","parseVariableDeclaration","parseTermBinary","precedence","left","parsePlusPlusMinusMinus","operators","first","opData","position2","wrong","right","correctOp","constantFolding","isConstant","pcLeft","pcRight","result","compute","considerIntDivisionWarning","toTokenType","leftConstant","rightConstant","isIntegerType","floor","parseDotOrArrayChains","bracketOrCasting","tt1","pcTerm","typeTerm","parseNew","isStringConstant","identifier1","identifierPosition","genericParameterTypes","typenode","arrayDimension","parseArrayLiteral","newDimension","al","parameter","positionEnd","modifiers","collectModifiers","ClassTokens","typeParameters","parseTypeParameterDefinition","extendsImplements","parseExtendsImplements","parseEnum","methodsAndAttributes","parseClassBody","identifierMap","tp","typeParameter","parseTypeParameterBounds","im","parseEnumValues","className","annotation","parseMethodDeclarationParameters","methodDeclaration","isTransient","attributeDeclaration","parameterDeclaration","parameterType","isInterface","sextends","simplements","done","TokenTypeToVisibilityMap","forwardToInsideClass","VisibilityTokens","objectToIndexMap","nextIndex","json","JSON","stringify","toJsonObj","rto","objectToJsonObj","serializedObject","serializedAttributes","jsonString","interpreter","indexToObjectMap","valuesToResolve","obj","parse","fromJsonObj","vtr","objectFromJsonObj","klass1","instantiateObjectImmediately","CompilerStatus","moduleToTypeParameterListMap","genericTypes","genericTypesInClassDefinitions","typeParameterList","classes","interfaces","enums","unresolvedTypes","resolveTypesInModules","setupClassesAndInterfaces","unresolvedGenericTypesInClasses","resolveTypeVariables","resolveUnresolvedTypes","resolveGenericTypes","resolveExtendsImplements","unresolvedGenericTypes","setupMethodsAndAttributes","checkDoubleIdentifierDefinition","checkGenericTypesAgainsTypeGuards","setupAttributeIndices","cl","tn","ci","actualType","typeGuard","genericParameterType","ifList","tgInterface","implementsInterface","adjustMethodsAndAttributesToTypeParameters","classOrInterface","methodListAltered","newMethodList","newMethod","getAdjustedMethod","altered","newAttributes","newAttributeMap","attributesAltered","newAttribute","getAdjustedAttribute","ext","nt","getAdjustedType","nrt","parameterAltered","newParameters","pNew","adjustMethodsAndAttributesRecursive","newTypeVariables","newClassInterface","clone","todoList","resolveGenericType","genericParameterTypesResolved","typeVariablesOldToNewMap","oldTypeVariable","type1","newTypeVariable","newCi","propagateTypeParameterToBaseClassesAndImplementedInterfaces","newClass","tv1","baseKlass","impl","identifierModuleMap","otherModule","file","otherType","baseModule","getBaseModule","tpn","lastPass","dependsOnModules","ut","utNew","resolveType","getInterpreter","fromJson","toJson","classesOrEnums","cn","mn","setupMethod","addFromJsonMethod","addToJsonMethod","ic","m1","typesOK","par","definition","pl","typeModule","getArrayType","registerGenericType","tg","typKlasse","toUpperCase","iNode","iType","eType","cdn","addType","registerTypeVariables","ready","extType","resolveTypeVariable","typeParameterKlass","tp1","isInClassDefinition","compilerStatus","compiledButNothingToRun","compiling","t0","performance","now","lexer","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","start","errorfree","dependsOnModulesWithErrors","hasErrors","atLeastOneModuleIsStartable","isStartable","config","withFileList","renderStartButton","readyToRun","dt","round","getCurrentWorkspace","compilerMessage","healSemicolons","typeE","tvE","iteratorInterface","hasNext","remove","listHelper","IteratorHelper","nextPos","objectArray","throwException","valueArray","typeA","tvA","listInterface","iteratorType","ah","getIterator","add","adAll","contains","removeObject","isEmpty","size","to_String","runtimeObject","allElementsPrimitive","toStringParameters","methodWasInjected","runTimer","iterableInterface","collectionInterface","vectorType","peek","MapHelper","SetIteratorHelper","console","log","addToSet","delete","setInterface","mh","QueueInterface","dequeInterface","removeFirst_or_error","poll_or_null","peek_or_null","removeFirstOccurrence","addFirst","addLast","removeLast_or_error","peek_first_or_null","peek_last_or_null","$consoleTab","append","PrintManager","$runDiv","lastSpan","maxLines","$lines","newLines","printCommands","currentLinelength","beginOfLineState","jQuery","$outputDiv","lastPrinting","setInterval","doPrinting","scrollTop","scrollHeight","setTimeout","$programEndDiv","show","addClass","removeClass","hide","nl","newLine","$lastSpan","pc","$lastDiv","$input","inputManager","insertBefore","linesToDelete","$linesToDelete","tList","callback","defaultValue","printManager","dvt","val","on","onSubmit","focus","valueAndError","detach","scrollIntoView","off","ajax","url","request","successCallback","errorCallback","showNetworkBusy","$","async","data","contentType","success","response","jqXHR","statusText","status","busy","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","forcedUpdateEvery","forcedUpdatesInARow","secondsTillNextUpdate","errorHappened","attr","interval","clearInterval","counterTillForcedUpdate","user","forceUpdate","sendUpdates","$rect","css","sendIfNothingIsDirty","sendBeacon","is_testuser","projectExplorer","writeEditorTextToFile","classDiagram","rightDiv","userSettings","settings","userDataDirty","serialize","sendUpdateUserSettings","wdList","fdList","workspaceList","ws","saved","getWorkspaceData","getFileData","workspacesWithoutFiles","files","owner_id","workspacesOwnerId","userId","language","navigator","updateWorkspaces","w","random","entity","workspace_id","workspace","klasse","student_ids","class_id","publish_to","repoName","repoDescription","is_copy_of_id","repository_file_version","repository_id","has_write_permission_to_repository","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","workspaces","wd","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","currentWorkspace","removeModule","version","setValue","lastSavedVersionId","getAlternativeVersionId","remoteFile","createFile","alert","workspaceListPanel","sortElements","withSort","createNewWorkspace","path","isFolder","addElement","externalElement","iconClass","fileData","ae","f","identical_to_repository_version","panelElement","getNewModule","putModule","caption","children","isOpen","getLevel","$debuggerElement","getIndent","$deFirstLine","canOpen","event","onFirstOpening","toggleClass","stopPropagation","renderValue","ro","renderListElements","de","DebuggerElement","render","$childContainer","removeAllChildren","html","escapeHtml","unsafe","twoDez","z","stringWrap","formatAsJavadocComment","indent","indentString","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","mousePointer","window","PointerEvent","width","height","setSelectionRange","end","after","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","link","$item","subMenu","top","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","tabs","target","trigger","convertPxToNumber","pxString","makeDiv","div","jo_mouseDetected","animateToTransparent","$element","cssProperty","startColorRgb","duration","colorPraefix","animate","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","elements","dontSortElements","addPanel","$newFolderAction","preventDefault","addFolder","newElement","newFolderCallback","$htmlFirstLine","addAction","$collapseAllAction","hasClass","slideUp","$captionElement","$listElement","fixed","grow","enabled","$buttonNew","pathArray","selectedElement","getSelectedElement","name1","path1","name2","path2","nameWithPath1","nameWithPath2","compareWithPath","insertIndex","getElementIndex","prepend","elementAtIndex","renderElement","insertElement","renameElement","$accordionDiv","close","getCurrentlySelectedPath","newElementCallback","$htmlSecondLine","insertAfter","selectCallback","select","$listOuter","$ce","$li","button","targetGrow","parts","AccordionPanel","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","sort","b","aName","sortName","bName","cssClass","$div","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","originalEvent","dataTransfer","effectAllowed","ctrlKey","dropEffect","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","contextMenuProvider","cmi","pageX","pageY","addEventListener","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","el","moveCallback","folder","pointPos","selection","newText","invokeCallback","ae1","findElement","pathString","ps","Accordion","$html","panel","renderOuterHtmlElements","WatcherElement","expression","accordionElement","$secondLine","$rightTextInFirstLine","evaluator","evaluate","setError","colorize","tabSize","then","$result","$debuggerDiv","$projectexplorerDiv","lastDebuggerElements","variablePanel","watchPanel","callbackIfSuccesful","addWatchExpression","watchExpression","deleteWatchExpression","newName","renameWatchExpression","stack","stackframe","elementsToKeep","findSymbolTableAtPosition","oldDebuggerElements","$variableList","thisString","visibleVariablesMap","oldDe","child","lastSymboltable","evaluateWatcherExpressions","watcherElement","state","InterpreterState","paused","$rightTextAfterFilename","we","code","getImitation","resolvedTypeAndModule","codeGeneratorErrors","startAdhocCompilation","programMap","compiler","pmEntry","compilation","compile","getDebugger","libraries","libaries","Workspace","setAdditionalLibraries","restoreFromData","currentFileId","currentlyOpenModule","withFiles","sql_baseDatabase","sql_history","sql_manipulateDatabaseStatements","$buttonDiv","myMain","$button","synchronizeWithRepository","networkManager","synchronizationManager","synchronizeWithWorkspace","SoundTools","sounds","sound","player","Howl","src","preload","soundMap","play","$mainElement","actions","keyEntries","buttons","executeKeyDownEvent","isEmbedded","running","getMonacoEditor","hasTextFocus","actionIdentifier","action","active","init","activeElement","tagName","keyCode","shiftKey","altKey","actionEntries","actionEntry","$bottomDiv","$pcodeTab","printProgram","$pcode","printModule","labels","lastLabelNumber","number","printNode","format3","printVariable","withBottomBorder","$consoleEntry","ConsoleEntry","$firstLine","valueString","span","history","historyPos","isDirty","readyToExecute","consoleEntries","errorDecoration","$consoleTabHeading","$consoleClear","layout","initConsoleClearButton","$editorDiv","automaticLayout","renderLineHighlight","renderIndentGuides","overviewRulerLanes","lineNumbers","glyphMargin","folding","lineDecorationsWidth","lineNumbersMinChars","fixedOverflowWidgets","fontSize","fontFamily","fontWeight","roundedSelection","occurrencesHighlight","suggest","localityBonus","snippetsPreventQuickSuggestions","minimap","scrollbar","vertical","horizontal","addCommand","KeyCode","Enter","compileIfDirty","getModel","execute","UpArrow","nextHistoryPos","setPosition","lineNumber","DownArrow","lastVersionId","onDidChangeContent","versionId","startTimer","showHelper","stopTimer","timerHandle","showErrors","markers","setModelMarkers","executeRapidly","showProgramPointerAndVariables","pushCurrentProgram","currentProgramPosition","stacksizeBefore","oldInterpreterState","setState","stackTop","writeConsoleEntry","$entry","consoleTop","commandEntry","resultEntry","detachValue","dontDetectLastChange","setModuleActive","revealRangeInCenter","deltaDecorations","isWholeLine","parents","$mainDiv","oldDecorations","oldErrorDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","errorCountMap","$errorDiv","ms","decorations","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","onClickFunction","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","MinimapPosition","Inline","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$lineColumn","category","$message","showError","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","hideRevision","showRevision","originalModel","createModel","text_before_revision","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","showHomeWorkRevisionButton","dispose","daysWithModules","dateString","submitted_date","date","Date","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","m2","moduleWithWorkspace","setWorkspaceActive","programPrinter","homeworkManager","initGUI","printCurrentlyExecutedModule","printModuleToBottomDiv","triggerCharacters","context","_contentWidgets","widget","toggleDetails","consoleModel","isConsole","isMainWindow","getModuleByMonacoModel","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","triggerCharacter","getCompletionItemsAfterNew","countLower","countGreater","getCompletionItemsAfterClass","ibMatch","dotMatch","getCompletionItemsAfterDot","varOrClassMatch","getCompletionItemsInsideIdentifier","posMin","posMax","watchDog","getTypeCompletionItems","item","detail","suggestions","insideGenericParameterDefinition","startsWithCurlyBrace","trimLeft","getOverridableMethodsCompletion","sortText","getKeywordCompletion","textAfterDot","dotColumn","tStatic","getTypeAtPosition","keywordCompletionItems","alreadyImplemented","getDeclarationAsString","short","getTypeVariableDeclaration","getGenericParameterDefinition","decl","implList","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","reject","provideSignatureHelpLater","methodCallPositions","methodCallPosition","rightMostPosition","getSignatureHelp","parameterIndex","cp","signatureInformationList","possibleMethods","makeIntrinsicSignatureInformation","makeSignatureInformation","activeParameter","activeSignature","signatures","parameterInformationList","posFrom","posTo","pi","getSelection","getElementAtPosition","declarationAsString","contents","typeIdentifier","word","getWordUnderCursor","desc","MyHoverProvider","keywordDescriptions","widenDeclaration","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","diagnostics","isPreferred","MyReferenceProvider","referencePositions","upInCurrentModule","up","showMinimap","highlightCurrentMethod","cw","dontPushNextCursorMove","lastPushTime","lastTime","elementDecoration","extensions","conf","indentationRules","decreaseIndentPattern","increaseIndentPattern","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","types","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","cases","include","whitespace","javadoc","string","defineMyJava","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","peekWidgetDefaultFocus","quickSuggestions","quickSuggestionsDelay","selectOnLineNumbers","scrollBeyondLastLine","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","insertMode","parameterHints","cycle","mouseWheelZoom","onKeyDown","not_initialized","getActionManager","mouseWheelListener","changeEditorFontSize","deltaY","_main","windowStateManager","registerBackButtonListener","historyEntry","findModuleById","module_id","revealPosition","pushHistoryState","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","currentModelId","source","abs","getPositionForHistory","onEvaluateSelectedText","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerRenameProvider","registerDefinitionProvider","provideDefinition","cancellationToken","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","getPosition","replaceState","time","getTime","pushState","insertEndOfComment","newColumn","prevLine","getLineContent","trimRight","getLineCount","spacesAtBeginningOfLine","fontSizePx","editorfs","getOptions","viewModeController","saveFontSize","updateOptions","factor","bottomDiv1","bottomDiv","dynamic","newEditorFs","setFontSize","keybindings","KeyMod","CtrlCmd","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","removeContentWidget","getId","getDomNode","preference","ContentWidgetPositionPreference","ABOVE","BELOW","addContentWidget","toggleBreakpoint","runningModule","findModuleByFile","overviewRuler","darkColor","OverviewRulerLane","Left","getMethodDeclarationAtPosition","zIndex","currentlyEditedModule","resourceEdits","usagePositionsInModule","Dialog","$dialog","$dialogMain","colorStyle","placeholder","$buttonRow","ischecked","$checkbox","$description","prop","is","$userSettingsButton","dialog","heading","$oldPassword","$newPassword1","$newPassword2","waitDiv","waitMessage","oldPassword","newPassword","currentSubmenu","openSubmenusOnMousemove","mainMenu","switchTheme","repositoryUpdateManager","repositoryCheckoutManager","is_admin","is_schooladmin","is_teacher","confirm","initMenu","menu","$link","initMenuitemCallbacks","opensubmenu","$container","gripWidth","overallWidth","$outer","$bar","$grip","$display","mousedownX","oldPosition","xMax","setSpeed","clientX","deltaX","stepsPerSecond","intervalBorders","maxStepsPerSecond","max","gripIntervalLength","gripPosition","setInterpreterSpeed","newPosition","intervalDelta","intervalIndex","intervalMin","speed","hideProgrampointerPosition","speedString","ceil","$buttonsContainer","$editorContainer","buttonActiveMatrix","speedControl","$buttonStart","$buttonPause","$buttonStop","$buttonStepOver","$buttonStepInto","$buttonStepOut","$buttonRestart","setInterpreter","DistributeToStudentsDialog","studentCount","$studentList","student","$studentLine","$studentClass","$studentName","rufname","familienname","students","each","back","distributeWorkspace","registerOneTimeBackButtonListener","sendDistributeWorkspace","subHeading","currentLibraries","library","cbs","addCheckbox","checkboxState","changed","newLibs","lib","used","alterAdditionalLibraries","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","student_edited_after_revision","sendCreateFile","callbackIfSuccessful","sendDeleteWorkspaceOrFile","cmiList","getHours","getMinutes","renderHomeworkButton","$synchronizeAction","$homeworkButtonDiv","sendCreateWorkspace","enableNewButton","renderSynchronizeButton","removeWorkspace","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","sendDuplicateWorkspace","workspaceData","newWorkspace","teacherExplorer","classPanel","repositoryOn","repositoryCreateManager","setElementClass","restoreOwnWorkspaces","setCaption","moduleList","errorCount","errorCountS","setTextAfterFilename","helperHistory","repositoryButtonDone","stop","renderFiles","nonSystemModules","newFileHelperDone","showRepositoryButtonIfNeeded","cem","getBreakpointPositionsFromEditor","editorState","saveViewState","hideHomeworkRevisionButton","restoreViewState","renderBreakpointDecorators","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","$parentElement","gripHeight","overallHeight","zoomMin","zoomMax","$zoomcontrolOuter","mousedownY","$zoomcontrolBar","$zoomcontrolDisplay","yMax","setZoom","clientY","ZoomControl","preventFading","fadeIn","fadeOut","zoomfactor","zfs","Alignment","$htmlElement","inlineStyles","marginCm","minDistance","minWidthHeightCm","widthCm","heightCm","$menuButton","$scrollpane","overflow","$canvas","zoomControl","transform","svgElement","createElementNS","appendChild","$centerRectangle","createElement","adjustCenterRectangle","ev1","screenX","screenY","dx","dy","scrollLeft","diagramElements","xMin","yMin","leftCm","topCm","isAdjusted","newWidthCm","newHeightCm","move","setSize","styles","defs","refreshInlineStyles","selector","stylesForSelector","textContent","radius","fertig","xCm","yCm","isFree","insideX","insideY","lines","backgroundColor","withRaster","adjustToRaster","font","textElement","bbox","getBBox","DiagramElement","cmPerPx","alignment","bold","italics","$group","textPosYCm","maxWidthCm","createTextElement","center","onClick","metrics","getTextMetrics","textHeightCm","textWidthCm","tooltip","thicknessCm","textCenter","textRight","stroke","$g","x1","y1","x2","y2","diagram","withMethods","withAttributes","attachToClass","isSystemClass","moveTo","scb","cb","ClassBox","hashedSignature","filename","klassSignature","getSignature","renderLines","addMouseEvents","jumpToDeclaration","parametersWithTypes","currentClassBoxes","addTextLine","getVisibilityText","$dropdownTriangle","getTrianglePath","adjustClassDiagramSize","updateArrows","stopImmediatePropagation","cmPerPixel","inDebounce","hash","position1Cm","position2Cm","sqrt","ex","ey","arrow","arrows","steps","step","angle","PI","ex1","cos","sin","ey1","rauteAlpha","routingArrow","DiagramArrow","points","minimalPoints","getPathCoordinates","arrowData","arrowType","endsOnArrowWithIdentifier","head","makeHead","point","classBoxesRepository","currentWorkspaceId","straightArrowSectionAfterRectangle","distanceFromRectangles","slotDistance","displaysSystemClasses","displaySystemClasses","drawDiagram","scd","classBoxes","workspaceId","classBox","serializedClassDiagram","inactive","deserialize","adjustSizeAndElements","cbs1","getClassBoxes","onlyUpdateIdentifiers","switchToWorkspace","newClassBoxes","anyTypelistThere","newClassesToDraw","findAndEnableClass","registerUsedSystemClasses","uscList1","usc","freePos","findFreeSpace","colorIndex","routingInput","drawArrows","routingWorker","terminate","Worker","onmessage","arrowsWithoutColorLast","arrowIdentifierToColorMap","arrowsWithoutColor","da","postMessage","rectangles","getRoutingRectangle","cb1","findClassbox","drawArrwow","intf","cb2","destRectangleIndex","sourceRectangleIndex","destinationIdentifier","hasSignatureAndFileOf","$selectElement","selected","rootIdentifier","rootValue","objectDiagram","selfReferenceType","rootValueSelfReferenceType","analyzeSelfReference","attributesWithSelfReference","sr","tImplements","tExtends","$objectDiagramDiv","variants","currentVariant","$typeOption","variant","getName","currentTarget","intValue","updateSettings","$settingsDiv","getSettingsElement","updateDiagram","$rightDiv","isWholePage","$tabs","$headings","withClassDiagram","withObjectDiagram","drawClassDiagrams","onObjectDiagramEnabled","rightdiv_width","$wholeWindow","worldHelper","screenHeight","screenWidthToHeight","worldWidthToHeight","newWidth","newHeight","isObjectDiagramEnabled","md","mm","moveLeftPanel","moveBottomDiv","moveRightDiv","sliderknobLeft","sliderknobRight","$editor","mewidth","meheight","$leftPanel","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","startAnimations","$loginSpinner","loginHappened","loginRequest","username","password","consoleHelperDone","newWorkspaceHelperDone","speedControlHelperDone","homeButtonHelperDone","stepButtonHelperDone","folderButtonDone","viewModes","waitForGUICallback","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","startupComplete","errorMessage","showLoginForm","closeAllWebsockets","clearAfterLogout","removePanels","ViewModeController","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","rightDivWidth","editorWidth","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","monitor","presentation","SemicolonAngel","isThereAgain","oldEvidence","firstSeenMs","cursorLine","isCurrentModule","editOperations","setSelection","WindowStateManager","oneTimeBackButtonListener","backButtonListener","listener","programIsExecutable","debugger","showProgramPointerPosition","hideProgramPointerPosition","semicolonAngel","revealLineInCenter","matchMedia","matches","login","initSliders","initTypes","checkStartupComplete","correctPIXITransform","PIXI","utils","skipHello","Transform","updateTransform","parentTransform","localTransform","_localID","_currentLocalID","_parentID","_worldID","worldTransform","wt","tx","ty","renderErrorCount","startable","getStartableModule","copyExecutableModuleStoreToInterpreter","isClassDiagramEnabled","debounceDiagramDrawing","copy","moduleStoreVersion","currentWorkspace_id","targetElement","direction","$helper","bottom","to","Helper","mainBase","flag","controlButtons","openHelper","pressedKeys","keyPressedCallbacks","keyUpCallbacks","keyDownCallbacks","registerListeners","kpc","GamepadTool","gamepads","gamepad","axes","gamepadIndex","buttonIndex","gp","getGamepads","pressed","axisIndex","debugger_","timerDelayMs","stackframes","timerStopped","timerExtern","timeNetto","timeWhenProgramStarted","stepOverNestingLevel","leaveLine","additionalStepFinishedFlag","showProgrampointerUptoStepsPerSecond","webSocketsToCloseAfterProgramHalt","timerEvents","lastStepTime","lastTimeBetweenEvents","lastPrintedModule","runningStates","waitingForInput","keyboardTool","gamepadTool","timerId","timerFunction","req","send","startFunction","pauseFunction","pause","isActive","oneStep","stepOut","currentlyEditedModuleIsClassOnly","mainModule","lastMainModule","clearExceptions","getCompiler","detachValues","newMainModule","currentStackframe","initializeEnums","initializeClasses","popProgram","currentCallbackAfterReturn","currentIsCalledFromOutside","stackElementsToPushBeforeFirstExecuting","se","pushStaticInitializationPrograms","staticValueList","valueInitializationProgram","hasAttributeInitializationProgram","initializeEnumValue","clearErrors","callbackAfterExecution","resetRuntime","getTimerClass","getModule","forceRun","maxWorkloadFactor","timeBetweenSteps","exception","n_stepsPerTimerGoal","nextStep","comesStatement","consolePresent","withBottomPanel","withConsole","positionString","currentStatement","errorLine","showTab","destroyWorld","processingHelper","gngEreignisbehandlungHelper","detachEvents","restart","spriteAnimations","cacheAsBitmap","showData","showNode","stepInto","oldStepOverNestingLevel","executeNode","breakpoint","relPos","object1","value1","resultValue","oldValue","parameterBegin2","ellipsisArray","parameterBegin","parameters1","returnValue","method1","parameterBegin1","oldState","readInput","aip","pcc","counter","list","list1","shapes","hasActors","hasAktionsEmpfaenger","timerEntries","showProgramEnd","counts","makeEmptyArray","tvo","switchValue","shapeRuntimeObject","actionId","setActive","clearActorLists","disable","unsubscribeAllListeners","enable","socket","stackElements","isActor","stepCount","valuesToPushBeforeExecuting","oldProgramPosition","numberOfStackframesBefore","executeImmediatelyInNewStackframe","constructor","ColorHelper","alpha","predefinedColors","m3","groupType","shapeType","mouseListenerType","breite","höhe","gh","getWorldHelper","setBackgroundColor","wh","matrix","Matrix","copyFrom","stage","projectionTransform","identity","translate","computeCurrentWorldBounds","shapesNotAffectedByWorldTransforms","shape","frameWidth","shapeHelper","moveX","moveY","shapeX","getCenterX","shapeY","getCenterY","outsideRight","currentLeft","currentWidth","outsideLeft","outsideBottom","currentTop","currentHeight","outsideTop","angleRad","rotate","scale","initialWidth","initialHeight","group","defaultGroup","addMouseListener","cursor","setCursor","worldObject","ratio","$containerOuter","getRightDiv","adjustWidthToWorld","WorldContainer","sourceFrame","destinationFrame","Container","renderer","projection","projectionMatrix","renderTexture","current","batch","flush","world","actActors","keyPressedActors","keyUpActors","keyDownActors","actorHelpersToDestroy","mouseListenerShapes","mouseListeners","actorsFinished","summedDelta","scaledTextures","actorsNotFinished","ticks","deltaSum","SCALE_MODE","SCALE_MODES","NEAREST","TARGET_FPMS","globalScale","$graphicsDiv","getGraphicsDiv","$coordinateDiv","$jo_tabs","maxWidth","maxHeight","$containerInner","oncontextmenu","pixiApp","app","resize","Application","antialias","tickerFunction","tick","Ticker","shared","elapsedMS","ticker","maxFPS","Rectangle","addChild","view","kpa","runActorWhenKeyEvent","listenerType","eventType","offsetX","offsetY","Point","applyInverse","onMouseEvent","invokeMouseListener","gngEreignisbehandlung","handleMouseClickedEvent","p1","p2","setHitPolygonDirty","actorData","actorHelper","timerPaused","isDestroyed","runActor","actorList","displayObject","destroy","parseColorToOpenGL","scaleMin","brt","BaseRenderTexture","scaleMode","LINEAR","RenderTexture","removeChildren","sprite","Sprite","onChange","containsPoint","trackMouseMove","invokeShapeMouseListener","mouseLastSeenInsideObject","reactToMouseEventsWhenInvisible","findIndex","mls","sd","methodSignatures","actorListIdentifier","isKeyDown","isGamepadButtonPressed","isGamepadConnected","getGamepadAxisValue","setTimerPaused","isPressed","streckeSchneidetStrecke","p0","p3","schnittpunkt","a1","a2","b1","b2","c1","c2","det","schneidet","abstand","polygonEnthältPunkt","punkte","punkt","inside","vertexCount","schnittpunkteKreisStrecke","schnittpunkte","determiante","t1","t2","abstandPunktZuStrecke","q","lambda","fx","fy","s2","abstandPunktZuGerade","directionType","vector2Class","helper","sh","testdestroyed","angleInDeg","centerX","centerY","mirrorXY","isOutsideView","sh1","collidesWith","keepColliding","moveBackFrom","directionRelativeTo","defineCenter","defineCenterRelative","angleDeg","setVisible","setStatic","tint","react","directionRad","distance","forward","getCopy","bringToFront","sendToBack","getHitPolygon","hitPolygonInitial","hitPolygonTransformed","hitPolygonDirty","scaleFactor","lastMoveDx","lastMoveDy","centerXInitial","centerYInitial","container","highestIndex","getChildIndex","setChildIndex","bb","getBounds","bb1","transformHitPolygon","punkte1","punkte2","istGeschlossen1","istGeschlossen2","normaleDerBerührtenGerade1","endIndex1","endIndex2","minAbstand","minIndex","p1a","p1b","p2a","p2b","polygonBerührtPolygonExakt","dx1","dx2","dy1","dy2","enuminfo","pairs","lmdx","lmdy","parameterMax","currentParameter","newParameter","parameterMin","isColliding","np","apply","bounds","cX","cY","scaleX","scaleY","belongsToGroup","index1","groupHelper","collidingShapes","colorType","pointsX","pointsY","rh","getFarbeAsObject","setzeFarbe","istFarbe","fillAll","getCopyOrClone","anzahlX","anzahlY","bitmapToCopy","isBigEndian","uInt32","Uint32Array","uInt8","Uint8Array","buffer","initGraphics","addToDefaultGroup","bh","BitmapHelperNew","u8Array","texture","bufferResource","BufferResource","bt","BaseTexture","Texture","baseTexture","update","red","green","blue","hex","intColorToHexRGB","uploadData","g","fillColor","borderColor","borderWidth","setAlpha","fillAlpha","setFillColor","setBorderColor","setBorderWidth","rgb","borderAlpha","fsh","mx","my","setRadius","CircleHelper","deltaAlpha","Graphics","beginFill","lineStyle","drawCircle","closePath","endFill","radius1","radius2","d1","d2","startAngle","endAngle","drawRadii","startAngleRad","endAngleRad","SectorHelper","arc","lineTo","atan2","towPI","normalizedStartAngle","normalizedEndAngle","ri","ra","ArcHelper","beginHole","endHole","r2","colorName","intColor","intColorToRGB","cid","o1","h","hslToRgb","rx","ry","setRadiusX","setRadiusY","EllipseHelper","drawEllipse","collisionPairType","collisionPairArrayType","getElement","removeElementAt","shapeArrayType","getCollidingObjects","group2","maxOneCollisionPerShape","groupHelper2","getCollidingObjects2","removeAllChidren","destroyChildren","getCollidingShapes","doCache","groupHelperCopy","GroupHelper","roCopy","shapeHelperCopy","hasCircularReference","inverse","invert","xSum","ySum","deregister","removeChildAt","inverseStageTransform","hasOverlappingBoundingBoxWith","collisionPairs","alreadyCollidedHelpers2","shapeHelper1","shapeHelper2","shapeToAdd","convexhull","makeHull","newPoints","POINT_COMPARATOR","makeHullPresorted","upperHull","lowerHull","shapeClass","closeAndFill","pointsNumber","ph","extractPoints","addPoint","insertPoint","movePointTo","isClosed","points1","PolygonHelper","RectangleHelper","addCenterCircle","RoundedRectangleHelper","midx","midy","angleStart","dw","drawRoundedRect","spriteHelper","polygon","HitPolygonStore","polygonStore","getPolygon","pixels","plugins","extract","probes","addPointsOnLine","additionalPointsPerHalfBorder","mid","probe","isTransparent","scaleModeClass","spriteLibraryEntry","setTexture","textureName","indexArray","repeatType","imagesPerSecond","indices","playAnimation","fromIndex","toIndex","stopAnimation","pauseAnimation","resumeAnimation","getWidth","getHeight","makeTiling","isTileSprite","TileHelper","copyFromOtherShape","animationIndices","animationRuns","imagesPerMillisecond","animationTime","animationPaused","copyBitmapFromShape","tileSprite","TilingSprite","mipmap","MIPMAP_MODES","OFF","setParent","tilePosition","dob","SpriteHelper","prefix","javaOnlineDir","sheet","Loader","resources","spritesheet","nameWithIndex","textures","dynamicTexture1","getPolygonForTexture","setInvisible","spriteHelperList","deltaTime","image","period2","numberOfPeriodsDone","timeIntoPeriod","period","tileScale","SpriteLibrary","sle","fontsize","setFontsize","setAlignment","setText","textStyle","TextStyle","strokeThickness","dropShadow","wordWrap","align","TextHelper","Text","anchor","tm","TextMetrics","measureText","E","exp","log10","tan","asin","acos","atan","vectorArrayClass","xIndex","yIndex","returnArray","pVector","deltaTimeMillis","printStream","setSpeedInStepsPerSecond","timerRunning","timerStarted","tl","timerEntry","timerListener","lastTimeFired","processTimerEntries","timerentry","runEntry","typeK","tvK","typeV","tvV","keyArray","old","containsKey","containsValue","dayOfWeekType","MonthType","year","month","dayOfMonth","hour","minute","second","days","oldDate","newDate","oldMs","newMs","getSeconds","td","dow","getDay","monthIndex","setPoint","setPoints","alphaDeg","oRet","messageType","setUserData","getUserData","help","WebSocketClientHelper","webSocketHelper","nickname","keyValueStore","connected","sendToClient","webSocketClientType","systemClassType","sessionCode","nickName","connect","sendToAll","count","findClientsFromCount","nicknames","nnv","findClientsFromNicknames","disconnect","clientList","client","idToClientMap","unsentMessages","onOpenMethod","onCloseMethod","onMessageMethod","onClientConnectedMethod","onClientDisconnectedMethod","onClientsFoundMethod","location","protocol","host","connection","WebSocket","onerror","onError","onclose","onClose","onMessage","onopen","sendIntern","onOpen","runMethod","clientId","recipient_id","wtr","clientRuntimeObject","wch","user_id","clientHelper","from_client_id","clientHelper1","disconnecting_client_id","currentTimeMills","client_id","onClientsFound","own_index","otherClients","clients","otherClient","arrayValue","p5o","getProcessingHelper","loop","noLoop","createCanvas","addProcessingMethod","parameterNames","pList","processingObject","loopStopped","onSizeChanged","setupProcessing","drawMethodPending","p5","setup","P2D","afterFinishingBoth","draw","mousePressed","mouseReleased","mouseClicked","mouseDragged","mouseEntered","mouseExited","mouseMoved","keyPressed","keyReleased","methodIdentifier","showTurtle","turn","penIsDown","setShowTurtle","xStart","yStart","lineElements","isFilled","initialHitPolygonDirty","turtleSize","lastLineWidth","lastColor","lastAlpha","lastPosX","lastPosY","renderJobPresent","lineWidth","calculateCenter","lineGraphic","turtle","drawTurtle","lastLineElement","angleInDegrees","cx","cy","TurtleHelper","newLineElement","vx","vy","vxp","vyp","lengthForward","lengthBackward","lengthBackwardP","firstPoint","le","setupInitialHitPolygon","polygonBerührtPolygon","farbe","GNGEreignisbehandlung","getHelper","registerEvents","dauer","taktdauer","bindEvents","aktionsempfaengerTypes","methodSignatureList","methodToAktionsempfaengerTypeMap","keyToKeyCodeMap","aktionsempfaengerMap","remainingTime","onKeyDownMethod","invokeMethod","unshift","liste","aktionsempfaengerType","aktionsempfaenger","unregisterEvents","GNGFarben","grad","winkel","sichtbarkeit","bringOnePlaneFurtherToFront","bringOnePlaneFurtherToBack","setAllPointsUntransformed","größe","länge","touchesAtLeastOneFigure","farbeString","touchesColor","objectShapeHelper","touchesShape","polygonClass","circleClass","ellipseClass","rectangleClass","FigurHelper","drawInitialTriangle","groesse","newFactor","partHelper","x3","y3","triangle","rectangleHelper","ellipseHelper","triangleClass","th","gngEreignisbehandlungsHelper","bound","from","Patcher","patches","patch","new","patchedText","breakpoints","breakpointDecorators","decoratorIdToBreakpointMap","identifierPositions","uriCounter","Module","uriMap","Uri","scheme","main1","methodAST","file_type","mcpList","rerender","getBreakpoint","setBreakpoint","attachToStatement","programList","getPrograms","nearestStatement","nearestDistance","marginClassName","stickiness","TrackedRangeStickiness","NeverGrowsWhenTypingAtEdges","getAllDecorations","decoration","positionsOnLine","foundPosition","bestFoundPosition","programs","TypeStore","e2","errorLevelCompare","level1","level2","$startButtonDiv","patched","maxUriNumber","registerWorldType","withBaseModule","additionalLibraries","moduleMap","addLibraryModule","ModuleStore","includeSystemModules","excludedModuleName","moduleName","moduleContext","Struct","Class","generic","typeMap","EmbeddedSlider","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","slide","otherHeight","newOtherHeight","otherWidth","newOtherWidth","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeFile","script","$fileDiv","hint","onDelete","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","code_inline","idx","env","self","content","md2","codeMap","uncoloredtext","EmbeddedIndexedDB","indexedDB","onsuccess","db","onupgradeneeded","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","scriptId","objectStore","put","scriptList","compileRunsAfterCodeReset","readConfig","initScripts","hideStartPanel","readScripts","fileExplorer","getFirstModule","removeAllFiles","initWorkspace","$filesListDiv","setFirstFileActive","addHint","configJson","hideEditor","withPCode","withErrorList","markFile","getScript","scriptListJSon","saveScripts","countDown","eraseDokuwikiSearchMarkup","$resetButton","oneNotSaved","writeScript","removeScript","considerShowingCodeResetButton","$centerDiv","$resetModalWindow","makeCodeResetModalWindow","makeRightDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$coordinates","$infoButton","$parent","$window","deleteScriptsInDB","$filesHeader","$tabheadings","$thRightSide","$thConsoleClear","$thErrors","$thConsole","$thPCode","$tabError","$tabConsole","$tabPCode","$thRun","$thVariables","$vd","$alternativeText","mainEmbeddedList","initJavaOnlineDivs","$script","initDiv","embeddedStarter","editorPath","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules","initEditor","load"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,6SClFzCC,E,+HAAZ,SAAYA,GACR,+BAEA,yCACA,qDACA,yCACA,uCACA,mCACA,mBACA,qBAEA,mCACA,uCACA,oCACA,kCACA,oCACA,gCACA,4CACA,kCACA,kCACA,0CACA,sCACA,4CACA,wCACA,4CACA,sCACA,wCACA,8CACA,oCACA,8BACA,gCACA,sCACA,kCACA,wCACA,8BACA,kCACA,kCACA,sCACA,oCACA,0CACA,kCACA,oCACA,8CAQA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kCAAa,gCAGb,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,sBAAO,0BAAS,oCAAc,wCAC9B,sBACA,4BACA,gCACA,wCACA,0CACA,4DACA,gDACA,4CACA,kBAAK,gBACL,8BAEA,oCACA,oCACA,kCACA,gDACA,kDACA,kEACA,gBACA,kBAEA,sBACA,gDACA,gCACA,8BAEA,0CACA,sBACA,4BAEA,kBAGA,8BAGA,sBAGA,8BAGA,gBAGA,sBAEA,kBAGA,0BAGA,4BAGA,wCAGA,0BAGA,4BACA,4CAEA,2CAGA,6BACA,2BACA,6DACA,2DACA,6DACA,2DACA,mDACA,uCACA,2CACA,qCACA,uDACA,mDACA,qEACA,+BACA,+BACA,iDACA,iCACA,yCACA,2EACA,2CACA,+CACA,qDACA,yCACA,2CACA,yEACA,yBACA,+BACA,mCACA,iCACA,iEACA,+DACA,iCACA,qBACA,6DACA,2DACA,iCACA,iCACA,iCACA,yCACA,uDAGA,qBACA,uCACA,qDACA,+CACA,qDACA,qDACA,2CACA,6BACA,mDACA,uBACA,2BACA,uCACA,mDACA,+BACA,+CACA,mDACA,6FAhMJ,CAAYA,MAAS,KAmMd,IAAIC,GAAiB,OACvBD,EAAUE,WAAa,kBADA,IAGvBF,EAAUG,gBAAkB,0BAHL,IAIvBH,EAAUI,sBAAwB,6BAJX,IAKvBJ,EAAUK,gBAAkB,4BALL,IAMvBL,EAAUM,eAAiB,gCANJ,IAOvBN,EAAUO,aAAe,uBAPF,IAQvBP,EAAUQ,KAAO,QARM,IASvBR,EAAUS,MAAQ,SATK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B,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QAEvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QAEvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QAEV,EAAKhmB,UAAUC,QAAQ,SAAU0/F,oBAG9C,EAAK3/F,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QAEvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,QAIvBp4B,GAAoBvV,OAApB,MAvGsB,EAD9B,iEAmHuB,2BACf,YAAiBgJ,KAAK2e,UAAU2G,SAAhC,+CAA0C,SACjCpd,uBAFM,uFAnHvB,GAAgC,IA6HnB,GAAb,YACI,WAAYmtB,EAAgBvW,GAAwB,yBAEhD,0BAAM,CAAEtnB,KAAM,8BAA+B0e,KAAM,GAAIs5C,qBAAsB,KAAMgB,eAAgB,KAAMqY,+BAA+B,EAAOnjC,OAAO,EAAO6K,OAAO,EAAM4C,QAAS,EAAImB,iCAAiC,GAAOjf,KAE1N5tB,gBAAiB,EACtB,EAAKoY,YAAc,KAEnB,EAAK8lB,QAEL,EAAKhnB,UAAUgmB,QAAQ,IAAI,GAAJ,QACvB,EAAKhmB,UAAUgmB,QAAQ,IAAI,GAAJ,MAA4B7lB,IACnD,EAAKH,UAAUgmB,QAAQ,IAAI,GAAJ,MAAiC7lB,IACxD,EAAKH,UAAUgmB,QAAQ,IAAI,GAAJ,MAAgC7lB,IACvD,EAAKH,UAAUgmB,QAAQ,IAAI,GAAJ,MAA2B7lB,IAClD,EAAKH,UAAUgmB,QAAQ,IAAI,GAAJ,MAA0B7lB,IACjD,EAAKH,UAAUgmB,QAAQ,IAAI,GAAJ,MAAwB7lB,IAC/C,EAAKH,UAAUgmB,QAAQ,IAAI,GAAJ,MAAuB7lB,IAC9C,EAAKH,UAAUgmB,QAAQ,IAAI,GAAJ,MAAyB7lB,IAChD,EAAKH,UAAUgmB,QAAQ,IAAI,GAAJ,MAAwB7lB,IAlBC,EADxD,iEAuBuB,2BACf,YAAiB9e,KAAK2e,UAAU2G,SAAhC,+CAA0C,SACjCpd,uBAFM,uFAvBvB,GAA+B,IAkClB,GAAb,WAQI,WAAoBmtB,EAAgBkpF,GAAmE,IAAlCC,EAAkC,uDAAF,GAAE,WAAnF,KAAAnpF,OAAiD,KAAAmpF,sBAN7D,KAAArnH,QAAoB,GACpB,KAAAsnH,UAAsC,GAG9C,KAAA/4E,OAAiB,EAGT64E,IACAv+G,KAAK0iC,WAAa,IAAI,GAAWrN,GACjCr1B,KAAKy0C,UAAUz0C,KAAK0iC,aAH2E,2BAQnG,YAAe87E,EAAf,+CAAmC,KAA3Bp2C,EAA2B,QAC/BpoE,KAAK0+G,iBAAiBt2C,IATyE,mFAR3G,oDAqBqBjvE,GACb,OAAOA,GACH,IAAK,MAAO6G,KAAKy0C,UAAU,IAAI,GAAUz0C,KAAKq1B,KAAMr1B,UAvBhE,6CA4B2Bw+G,GAEnBx+G,KAAK7I,QAAU6I,KAAK7I,QAAQ4T,QAAQ,SAAA1T,GAAC,OAAMA,EAAEoQ,gBAAmBpQ,aAAa,MAC7E2I,KAAKy+G,UAAY,GAH+B,2BAKhD,YAAaz+G,KAAK7I,QAAlB,+CAA0B,KAAlBE,EAAkB,QACtB2I,KAAKy+G,UAAUpnH,EAAEmrC,KAAKhrC,MAASH,GANa,kFAShD,GAA0B,MAAvBmnH,EAA4B,4BAC3B,YAAeA,EAAf,+CAAmC,KAA3Bp2C,EAA2B,QAC/BpoE,KAAK0+G,iBAAiBt2C,IAFC,sFArCvC,qCA6CmB7L,GAAiB,2BAC5B,YAAkBv8D,KAAK7I,QAAvB,+CAA+B,KAAvBH,EAAuB,QAC3B,GAAGA,EAAOwrC,KAAK5gC,IAAM26D,EAAW,OAAOvlE,GAFf,kFAI5B,OAAO,OAjDf,sCAqDQ,OAAOgJ,KAAK0iC,aArDpB,4CAyDQ1iC,KAAK0iC,WAAWx6B,wBAzDxB,6BA6DQ,IAAIklD,EAAkB,IAAIuxD,EAAY3+G,KAAKq1B,MAAM,GADjD,uBAEA,YAAcr1B,KAAK7I,QAAnB,+CAA4B,KAAnBE,EAAmB,QACnBA,EAAEoQ,gBACH2lD,EAAG3Y,UAAUp9C,EAAEgsF,SAJvB,kFAOA,OAAOj2B,IAnEf,uCAsEqB5qB,GAAU,2BACvB,YAAcxiC,KAAK7I,QAAnB,+CAA4B,KAAnBE,EAAmB,QACxB,GAAIA,EAAEmrC,MAAQA,EACV,OAAOnrC,GAHQ,kFAMvB,OAAO,OA5Ef,kCA+Ea,2BACL,YAAc2I,KAAK7I,QAAnB,+CAA4B,CACxB,GADwB,QAClBovC,YACF,OAAO,GAHV,kFAML,OAAO,IArFf,uCAyFQ,GAAIvmC,KAAK7I,QAAQ6K,OAAS,EAAG,4BACzB,YAAehC,KAAK7I,QAApB,+CAA6B,KAApBkuB,EAAoB,QACzB,IAAKA,EAAG5d,eACJ,OAAO4d,GAHU,mFAO7B,OAAO,OAhGf,gCAqGQ,GAAIrlB,KAAK0lC,MAEL,OADA1lC,KAAK0lC,OAAQ,GACN,EAGX,IAAIA,GAAQ,EAPT,uBAQH,YAAc1lC,KAAK7I,QAAnB,+CAA4B,CACxB,GADwB,QAClBqrC,KAAKkD,MAAO,CACdA,GAAQ,EACR,QAXL,kFAcH,OAAOA,IAjHf,iCAqHek5E,EAA+BC,GACtC,IAAIvoF,EAAM,GADuD,uBAEjE,YAAct2B,KAAK7I,QAAnB,+CAA4B,KAAnBE,EAAmB,QACpBA,EAAEmrC,KAAKhrC,MAAQqnH,IACVxnH,EAAEoQ,iBAAkBm3G,GACrBtoF,EAAI3xB,KAAKtN,KAL4C,kFASjE,OAAOi/B,IA9Hf,gCAiIct/B,GACNgJ,KAAK7I,QAAQwN,KAAK3N,GAClBgJ,KAAKy+G,UAAUznH,EAAOwrC,KAAKhrC,MAAQR,IAnI3C,2CAsIyBwrC,GAAU,2BAC3B,YAAcxiC,KAAK7I,QAAnB,+CAA4B,KAAnBE,EAAmB,QACxB,GAAIA,EAAEmrC,MAAQA,EAAM,CAChBxiC,KAAKkzC,aAAa77C,GAClB,QAJmB,qFAtInC,mCA+IiBL,GAELgJ,KAAK7I,QAAQoO,QAAQvO,GAAU,IAEnCgJ,KAAK7I,QAAQkhB,OAAOrY,KAAK7I,QAAQoO,QAAQvO,GAAS,GAClDgJ,KAAKy+G,UAAUznH,EAAOwrC,KAAKhrC,WAAQ2R,EACnCnJ,KAAK0lC,OAAQ,KArJrB,gCAwJco5E,GACN,OAAO9+G,KAAKy+G,UAAUK,KAzJ9B,8BA4JY3lH,GAAkB,2BACtB,YAAmB6G,KAAK7I,QAAxB,+CAAiC,KAAxBH,EAAwB,QAC7B,GAAwB,MAApBA,EAAO2nB,UAAmB,CAC1B,IAAIve,EAAOpJ,EAAO2nB,UAAUC,QAAQzlB,GACpC,GAAY,MAARiH,EACA,MAAO,CAAEA,KAAMA,EAAMpJ,OAAQA,KALnB,kFAUtB,OAAO,OAtKf,6CAyK2B+nH,EAAuBx2G,GAE1C,IAAIyU,EAAqD,GAFc,uBAIvE,YAAmBhd,KAAK7I,QAAxB,+CAAiC,KAAxBH,EAAwB,QAC7B,GAAwB,MAApBA,EAAO2nB,UAAmB,4BAC1B,YAAiB3nB,EAAO2nB,UAAU2G,SAAlC,+CAA4C,KAAnCllB,EAAmC,QACxC,GAAIpJ,GAAU+nH,GAAkB3+G,aAAgB,GAASA,EAAKS,YAAckD,EAAW8C,QAChF7P,EAAOyQ,eAAgB,CAE1B,IAAI6rD,EAAS,SAEY,MAAtBlzD,EAAKL,cACJuzD,EAASlzD,EAAKL,cACP/I,EAAOyQ,iBAEV6rD,EADAlzD,aAAgBH,EACP,sBAEA,gBAIjB,IAAIozD,EAAO,CACPhxD,MAAOjC,EAAKjH,WACZm6D,OAAQA,EACRrqD,WAAY7I,EAAKjH,WACjByP,KAAMxI,aAAgBH,EAClB4I,OAAOC,UAAUC,mBAAmBi2G,OAASn2G,OAAOC,UAAUC,mBAAmBk2G,MACrF/1G,MAAOX,EACP22G,SAAW9+G,aAAgB,GAASA,aAAgB,IAAcA,EAAKgG,cAAcpE,OAAS,GAGlGgb,EAAgBrY,KAAK0uD,KA3BH,qFALqC,kFAsCvE,OAAOr2C,MA/Mf,KAyNa8gG,GAAb,mCAEI,KAAAx4F,SAAmB,GACnB,KAAA65F,QAA6B,IAAIr/G,IAHrC,2CAKYM,GACJJ,KAAKslB,SAAS3gB,KAAKvE,GACnBJ,KAAKm/G,QAAQ75G,IAAIlF,EAAKjH,WAAYiH,KAP1C,8BAWQJ,KAAKslB,SAAStjB,OAAS,EACvBhC,KAAKm/G,QAAQx5E,UAZrB,8BAeYxsC,GACJ,OAAO6G,KAAKm/G,QAAQrnH,IAAIqB,OAhBhC,K,uKCplCO,IAAMimH,GAAb,WAaI,WAAoB/6C,EACRg7C,EAA4BC,EAC3B5yE,EAA+C6yE,I,4FAA+B,SAFvE,KAAAl7C,aACR,KAAAg7C,YAA4B,KAAAC,UAC3B,KAAA5yE,WAA+C,KAAA6yE,YACpDv/G,KAAKw/G,a,UAhBjB,O,EAAA,G,EAAA,oCAmBc,WACFnhG,EAAOre,KAEU,MAAlBA,KAAKu/G,WACJv/G,KAAKqkE,WAAW5nD,SAASk4B,WAAW4yB,MAAK,SAACnlE,EAAOkvB,GAC1CA,GAAW,EAAK+yC,WAAW,KAC1BhmD,EAAKkhG,UAAYr0E,OAAO5Z,OAKpCtxB,KAAKy/G,WAAav0E,OAAO,kCAEzBlrC,KAAKy/G,WAAWnwE,IAAI,CAChByH,MAAO/2C,KAAKs/G,QAAU,OAAS,MAC/BtoE,OAAQh3C,KAAKs/G,QAAU,MAAQ,OAC/BvvB,OAAQ/vF,KAAKs/G,QAAU,aAAe,eAGvCt/G,KAAKq/G,UACJr/G,KAAKy/G,WAAWnwE,IAAI,CAChB0I,IAAK,MACLtf,KAAM,QAGP14B,KAAKs/G,QACJt/G,KAAKy/G,WAAWnwE,IAAI,CAChBq0C,OAAQ,MACRjrD,KAAM,QAGV14B,KAAKy/G,WAAWnwE,IAAI,CAChB0I,IAAK,MACL/e,MAAO,QAKnBj5B,KAAKqkE,WAAW75B,OAAOxqC,KAAKy/G,YAE5B,IAAI7oE,EAAeC,OAAOC,aAAe,UAAY,QAErD92C,KAAKy/G,WAAW1yE,GAAG6J,EAAe,QAAQ,SAAC+kC,GAEvC,IAAIpkC,EAAIokC,EAAG3W,QACPxtB,EAAImkC,EAAG7O,QAEX5hC,OAAOtvB,UAAUmxB,GAAG6J,EAAe,eAAe,SAACglC,GAC/C,IAAIhN,EAAKgN,EAAG5W,QAAUztB,EAClBs3B,EAAK+M,EAAG9O,QAAUt1B,EAEtBn5B,EAAKqhG,MAAM9wC,EAAIC,GAEft3B,EAAIqkC,EAAG5W,QACPxtB,EAAIokC,EAAG9O,WAIX5hC,OAAOtvB,UAAUmxB,GAAG6J,EAAe,aAAa,WAC5C1L,OAAOtvB,UAAUyxB,IAAIuJ,EAAe,eACpC1L,OAAOtvB,UAAUyxB,IAAIuJ,EAAe,mBAM5CnL,YAAW,WACPptB,EAAKqhG,MAAM,EAAG,KACf,OAvFX,+BA2Fa9zF,GACL5rB,KAAKy/G,WAAWnwE,IAAI,mBAAoB1jB,KA5FhD,4BA+FUgjD,EAAYC,GACd,GAAG7uE,KAAKs/G,QAAQ,CACZ,IAAItoE,EAAS5mC,OAAOM,SAAS1Q,KAAKqkE,WAAW/0B,IAAI,UAAUtlC,QAAQ,KAAM,KACrE21G,EAAcvvG,OAAOM,SAAS1Q,KAAKu/G,UAAUjwE,IAAI,UAAUtlC,QAAQ,KAAM,KACzEyxE,EAAYz7E,KAAKq/G,UAAYroE,GAAU63B,EAAK73B,GAAU63B,EACtD+wC,EAAiB5/G,KAAKq/G,UAAYM,GAAe9wC,EAAK8wC,GAAe9wC,EACzE7uE,KAAKqkE,WAAW/0B,IAAI,SAAUmsC,EAAY,MAC1Cz7E,KAAKu/G,UAAUjwE,IAAI,SAAUswE,EAAiB,MAC9C5/G,KAAK0sC,SAAS+uC,OACX,CACH,IAAI1kC,EAAQ3mC,OAAOM,SAAS1Q,KAAKqkE,WAAW/0B,IAAI,SAAStlC,QAAQ,KAAM,KACnE61G,EAAazvG,OAAOM,SAAS1Q,KAAKu/G,UAAUjwE,IAAI,SAAStlC,QAAQ,KAAM,KACvEwxE,EAAWx7E,KAAKq/G,UAAYtoE,GAAS63B,EAAK73B,GAAS63B,EACnDkxC,EAAgB9/G,KAAKq/G,UAAYQ,GAAcjxC,EAAKixC,GAAcjxC,EACtE5uE,KAAKqkE,WAAW/0B,IAAI,QAASksC,EAAW,MACxCx7E,KAAKu/G,UAAUjwE,IAAI,QAASwwE,EAAgB,MAC5C9/G,KAAK0sC,SAAS8uC,GAElBx7E,KAAKqkE,WAAW/0B,IAAI,OAAQ,iB,6BAjHpC,K,uKCWO,IAAM,GAAb,WAKI,WAAoBxwB,EAAkCihG,EAA2C1qF,GAAkB,Y,4FAAA,SAA/F,KAAAvW,cAAkC,KAAAihG,eAA2C,KAAA1qF,OAFjG,KAAAsb,MAAoB,GAIhB,IAAItyB,EAAOre,KAFoG,uBAI/G,YAAmB8e,EAAYsG,YAAW,GAA1C,+CAAkD,KAAzCpuB,EAAyC,QAE9CgJ,KAAKggH,UAAUhpH,IAN4F,kFAU/G,GAAmB,MAAhB+oH,EAAqB,CACpB,IAAIE,EAAYF,EAAatjG,SACzByjG,EAAah1E,OAAO,mGACxB+0E,EAAUz1E,OAAO01E,GAEjBA,EAAWnzE,GAAG,SAAS,WAEnB,IAAI/1C,EAAS,EAAKq+B,KAAK2qF,UAAU,CAAE9pG,KAAM,GAAIzM,MAAO,kBAAmBrJ,KAAM,SACzE+zC,EAAW,EAAK6rE,UAAUhpH,GAE9B,EAAKqlD,cAAclI,GAAU,WAErB91B,EAAK8hG,aAAehsE,GACpB91B,EAAK+hG,WAAWjsE,U,UA5BxC,O,EAAA,G,EAAA,wCAoCkB,WACVn0C,KAAK2wC,MAAMr+B,SAAQ,SAAA+hC,GAAC,OAAI,EAAKgsE,WAAWhsE,QArChD,8BAyCYisE,GACJ,IAAIjiG,EAAOre,KACPugH,EAAWr1E,OAAO,oHAClBo1E,EAAO72G,MAAQ,8DACnBzJ,KAAK+/G,aAAav1E,OAAO+1E,GAEzB,IAAIpsE,EAAqB,CACrBn9C,OAAQ,KACRupH,SAAUA,EACVngH,KAAM,OACNogH,KAAMF,EAAOpqG,MAGjBlW,KAAK2wC,MAAMhsC,KAAKwvC,GAEhBosE,EAASxzE,GAAG,SAAS,SAACmI,GAClB72B,EAAK+hG,WAAWjsE,QAzD5B,gCA+Dcn9C,GACN,IAAIqnB,EAAOre,KACPugH,EAAWr1E,OAAO,wIAAD,OAEgCl0C,EAAOwrC,KAAKhrC,KAF5C,yKAKG,MAArBwI,KAAK+/G,cACJ//G,KAAK+/G,aAAav1E,OAAO+1E,GAG7B,IAAIpsE,EAAqB,CACrBn9C,OAAQA,EACRupH,SAAUA,EACVngH,KAAM,QAgCV,OA7BAJ,KAAK2wC,MAAMhsC,KAAKwvC,GAEhBn9C,EAAOwrC,KAAK+R,aAAe,CACvB/8C,KAAMR,EAAOwrC,KAAKhrC,KAClBkjD,eAAgB6lE,EAChBxsE,UAAU,EACVD,KAAM,IAGVysE,EAASnvF,KAAK,cAAc2b,GAAG,aAAa,SAACh1B,GACzCsG,EAAKoiG,SAAStsE,EAAUp8B,MAG5BwoG,EAASnvF,KAAK,cAAc2b,GAAG,SAAS,SAACh1B,GAAQA,EAAEuiC,iBAAkBviC,EAAEs9B,qBAEvEkrE,EAASxzE,GAAG,SAAS,SAACmI,GAClB72B,EAAK+hG,WAAWjsE,MAGpBosE,EAAS,GAAGlhE,iBAAiB,eAAe,SAAUnK,GAClDA,EAAMoF,iBACNjD,GAAgB,CAAC,CACb3C,QAAS,aACThI,SAAU,WACNruB,EAAKg+B,cAAclI,GAAU,kBAEjCe,EAAMiK,MAAOjK,EAAMkK,UACxB,GAEIjL,IA7Gf,+BAiHaA,EAAoBj2B,GACzBA,EAAGo8B,iBACHp8B,EAAGm3B,kBACH,IAAIh3B,EAAOre,KACXq3C,GAAgB,CAAC,CACb3C,QAAS,YACThI,SAAU,cAGX,CACCgI,QAAS,+BACT9oB,MAAO,UACP8gB,SAAU,WACNruB,EAAKgiG,WAAWlsE,MAEpBj2B,EAAGihC,MAAQ,EAAGjhC,EAAGkhC,MAAQ,KAhIrC,iCAoIejL,GACPA,EAASosE,SAASh5E,SAClBvnC,KAAKq1B,KAAK6d,aAAaiB,EAASn9C,QAChCgJ,KAAK2wC,MAAQ3wC,KAAK2wC,MAAM5lC,QAAO,SAAC4nC,GAAD,OAAQA,GAAMwB,KACzCn0C,KAAKmgH,aAAehsE,IAChBn0C,KAAK2wC,MAAM3uC,OAAS,EACpBhC,KAAKogH,WAAWpgH,KAAK2wC,MAAM,KAE3B3wC,KAAKq1B,KAAK+wB,kBAAkBhT,SAAS,0BACrCpzC,KAAKq1B,KAAK+wB,kBAAkBuZ,cAAc,CAAE5P,UAAU,MAI9D/vD,KAAK2wC,MAAMr+B,SAAQ,SAACkwB,GACE,MAAfA,EAAKxrC,SACJwrC,EAAKxrC,OAAOwrC,KAAK+N,OAAQ,QAnJzC,mCAwJiBv5C,GAAc,2BACvB,YAAqBgJ,KAAK2wC,MAA1B,+CAAiC,KAAxBwD,EAAwB,QACzBA,EAASn9C,QAAUA,GACnBgJ,KAAKqgH,WAAWlsE,IAHD,qFAxJ/B,oCAgKkBA,EAAoBzH,GAC9B,IACIqR,EAAO5J,EAASosE,SAASnvF,KAAK,gBAC9B8uB,EAAW/L,EAASn9C,OAAOwrC,KAAKhrC,KAAK+N,QAAQ,KAEjDgxC,GAAawH,EAAMA,GAAM,SAACqC,GACtBjM,EAASn9C,OAAOwrC,KAAKhrC,KAAO4oD,EAC5BrC,EAAKjI,KAAKsK,GACM,MAAZ1T,GAAkBA,MAJE,MAAZwT,EAAmB,KAAO,CAAE9Z,MAAO,EAAG8Q,IAAKgJ,MApKnE,2CA+KYlgD,KAAK2wC,MAAM3uC,OAAS,GACpBhC,KAAKogH,WAAWpgH,KAAK2wC,MAAM,MAhLvC,iCAoLewD,GAAkB,WACzB,GAAgB,MAAZA,EACJ,OAAQA,EAAS/zC,MACb,IAAK,OACDJ,KAAKq1B,KAAKqrF,SAAS50E,OACnB9rC,KAAKq1B,KAAKsrF,WAAWh1E,OACrB3rC,KAAKq1B,KAAKk3B,gBAAgBpY,EAASn9C,QACnCgJ,KAAKq1B,KAAK+wB,kBAAkBnZ,QAC5B,MACJ,IAAK,OACDjtC,KAAKq1B,KAAKsrF,WAAW70E,OACrB9rC,KAAKq1B,KAAKqrF,SAAS/0E,OAEnB,IAAIi1E,EAAwC,GACxCr9D,EAAiB,GAGjBs9D,EAAMhqE,OAAOiqE,WAAW,CACxBC,UAAW,SAAUC,EAAKC,GAEtB,OADA19D,EAAK5+C,KAAKq8G,GACH,MAIfH,EAAInwB,SAASl2B,MAAM0mD,YAAc,SAAU3sG,EAAQ4sG,EAAK1pG,EAAS2pG,EAAKC,GAClE,IAAI3pG,EAAQnD,EAAO4sG,GAGnB,OAFA59D,EAAK5+C,KAAK+S,EAAM4pG,SAET,IAGXT,EAAIlrE,OAAOxB,EAASqsE,MAEpBxgH,KAAKshD,SAASiC,EAAMq9D,GAAW,WAE3B,IAAIW,EAAM1qE,OAAOiqE,WAAW,CACxBC,UAAW,SAAUC,EAAKC,GACtB,OAAOL,EAAUI,MAIzBO,EAAI7wB,SAASl2B,MAAM0mD,YAAc,SAAU3sG,EAAQ4sG,EAAK1pG,EAAS2pG,EAAKC,GAClE,IAAI3pG,EAAQnD,EAAO4sG,GAEnB,OAAOP,EAAUlpG,EAAM4pG,SAASt3G,QAAQ,QAAS,KAIrD,IAAI8rC,EAAOyrE,EAAI5rE,OAAOxB,EAASqsE,MAC/B,EAAKnrF,KAAKqrF,SAAS5qE,KAAKA,MAE5B91C,KAAK+/G,aAAa3uF,KAAK,YAAYya,YAAY,aAC/CsI,EAASosE,SAAS30E,SAAS,gBAxO3C,+BA6Oa2X,EAAgBi+D,EAAqC90E,GAC1D,IAAIruB,EAAOre,KACX,GAAIujD,EAAKvhD,OAAS,EAAG,CACjB,IAAIy/G,EAAgBl+D,EAAKj1C,MACzBzF,OAAO2P,OAAO8oC,SAASmgE,EAAe,SAAU,CAAElgE,QAAS,IAAKC,MAAK,SAACtrC,GAClEsrG,EAAQC,GAAiBvrG,EACzBmI,EAAKijC,SAASiC,EAAMi+D,EAAS90E,WAIjCA,MAvPZ,+BA6Pa11C,GACmB,MAArBgJ,KAAK+/G,eACR//G,KAAK+/G,aAAa3uF,KAAK,YAAYya,YAAY,aAE/C7rC,KAAKmgH,YAAcngH,KAAK2wC,MAAMvf,MAAK,SAAC+iB,GAAD,OAAcA,EAASn9C,QAAUA,KAE5C,MAApBgJ,KAAKmgH,aAAqBngH,KAAKmgH,YAAYI,SAAS30E,SAAS,mB,6BAnQzE,K,uKCZO,IAAM81E,GAAb,yB,4FAAA,S,UAAA,O,EAAA,G,EAAA,4BAIgBj0E,GAER,GAAIoJ,OAAO8qE,UAAW,CAElB,IAAIn0E,EAA4BqJ,OAAO8qE,UAAU1oD,KAAK,SAAU,GAE5D56C,EAAOre,KAEXwtC,EAAQglE,QAAU,SAAyCt0F,GACvDorB,QAAQC,IAAI,4BAA8BrrB,EAAG9d,OAGjDotC,EAAQo0E,UAAY,SAAyC1jG,GACzDG,EAAKwjG,GAAKr0E,EAAQjU,OAClBlb,EAAKwjG,GAAGrP,QAAU,SAASt9D,GAGvB5L,QAAQC,IAAI,oBAAsB2L,EAAMyD,OAAO1sC,MAAMU,UAEvD8gC,KAGND,EAAQs0E,gBAAkB,SAAS5jG,GAE/BG,EAAKwjG,GAAK3jG,EAAGy6B,OAAOpf,OACFlb,EAAKwjG,GAAGE,kBAAkB,UAAW,CAAEC,QAAS,WAAYC,eAAe,IAGjFC,YAAYC,WAAa,SAASjtE,WAOlD5L,QAAQC,IAAI,8BAvCxB,kCA6CuB64E,EAAkB9B,GAETtgH,KAAK6hH,GAAGK,YAAY,UAAW,aAAaG,YAAY,WAE9DC,IAAI,CAClBF,SAAUA,EACV9B,OAAQA,MAnDpB,mCAwDwB8B,GAEQpiH,KAAK6hH,GAAGK,YAAY,UAAW,aAAaG,YAAY,WAE9D54E,OAAO24E,KA5DjC,gCAiEqBA,EAAkB11E,GAE/B,IAEIc,EAFoBxtC,KAAK6hH,GAAGK,YAAY,UAAW,aAAaG,YAAY,WAEhDvqH,IAAIsqH,GAEpC50E,EAAQglE,QAAU,SAACt9D,GACfxI,EAAS,OAGbc,EAAQo0E,UAAY,SAAC1sE,GACI,MAAlB1H,EAAQjU,OACPmT,EAAS,MAETA,EAASc,EAAQjU,OAAO+mF,c,6BA/ExC,K,uKCkCO,IAAM,GAAb,WAsFI,WAAYviE,EAAmCwkE,GAAsB,Y,4FAAA,SAAtB,KAAAA,aAvC/C,KAAA/5C,yBAAqC,GAqBrC,KAAA2Y,qBAAsB,EACtB,KAAAhuC,QAAkB,EAalB,KAAAqvE,0BAAoC,EAMhCxiH,KAAKyiH,WAAW1kE,GAEhB/9C,KAAKuxD,QAAQxT,GAEb/9C,KAAK0iH,cAED1iH,KAAK0mC,OAAOi8E,iBACZ3iH,KAAK2hH,UAAY,IAAID,GACrB1hH,KAAK2hH,UAAU1oD,MAAK,WAEM,MAAlB,EAAKvyB,OAAO9kC,IACZ,EAAKghH,kBAMjB5iH,KAAKuhF,eAAiB,IAAIhB,GAAevgF,M,UAzGjD,O,EAAA,G,EAAA,oCAI4B,OAAO,IAJnC,wCAMsBhJ,EAAgByZ,MANtC,oCASQ,OAAOzQ,KAAK6jD,WATpB,uCAYQ,OAAO7jD,KAAK09B,cAZpB,4CAeQ,OAAO19B,KAAKizC,mBAfpB,oCAkBQ,OAAOjzC,KAAKohF,WAlBpB,wCAqBQ,OAAOphF,KAAKwY,OAAOA,SArB3B,oCAyBQ,OAAOxY,KAAK6vC,WAzBpB,qCA6BQ,OAAO7vC,KAAK8/D,YA7BpB,yCAiCQ,OAAO9/D,KAAKy/E,gBAjCpB,iD,MAqCQ,OAAIz/E,KAAK0mC,OAAOC,aACwB,QAApC,EAAO3mC,KAAK6iH,aAAa1C,mBAAW,eAAEnpH,OAE/BgJ,KAAKizC,iBAAiBn0B,YAAYgkG,mBAxCrD,oCA6Ge,I,EAAA,OAEU,QAAjB,EAAA9iH,KAAK6iH,oBAAY,SAAEE,iBAEnB/iH,KAAKgjH,cAAchjH,KAAKuiH,YAEpBviH,KAAK0mC,OAAOC,cACZ3mC,KAAK6iH,aAAe,IAAI,GAAqB7iH,KAAKizC,iBAAiBn0B,YAAa9e,KAAKijH,cAAejjH,MACpGA,KAAK6iH,aAAaK,qBAClBljH,KAAKuiH,WAAWx3G,QAAO,SAACu1G,GAAD,MAA2B,QAAfA,EAAOlgH,QAAgBkS,SAAQ,SAACguG,GAAD,OAAY,EAAKuC,aAAaM,QAAQ7C,OAExGtgH,KAAKusD,gBAAgBvsD,KAAKizC,iBAAiBn0B,YAAYgkG,oBAxHnE,iCA8He/kE,GACP,IAAIqlE,EAA8BrlE,EAAKjQ,KAAK,eAExC9tC,KAAK0mC,OADS,MAAd08E,GAA2C,iBAAdA,EACflmF,KAAKY,MAAMslF,EAAWjwG,MAAM,KAAKlQ,KAAK,MAEtC,GAGW,MAA1BjD,KAAK0mC,OAAO28E,aAAoBrjH,KAAK0mC,OAAO28E,YAAa,GAC3B,MAA9BrjH,KAAK0mC,OAAOi8E,iBAAwB3iH,KAAK0mC,OAAOi8E,gBAAiB,GAElC,MAA/B3iH,KAAK0mC,OAAOuiD,kBACXjpF,KAAK0mC,OAAOuiD,gBAAkBjpF,KAAK0mC,OAAOwiD,aAAelpF,KAAK0mC,OAAO48E,WAAatjH,KAAK0mC,OAAOC,cAAgB3mC,KAAK0mC,OAAO68E,eAG3HvjH,KAAK0mC,OAAO28E,aACXrjH,KAAK0mC,OAAOuiD,iBAAkB,EAC9BjpF,KAAK0mC,OAAOC,cAAe,EAC3B3mC,KAAK0mC,OAAOwiD,aAAc,EAC1BlpF,KAAK0mC,OAAO48E,WAAY,EACxBtjH,KAAK0mC,OAAO68E,eAAgB,GAG7BvjH,KAAK0mC,OAAOuiD,kBACqB,MAA5BjpF,KAAK0mC,OAAOC,eAAsB3mC,KAAK0mC,OAAOC,cAAe,GACpC,MAAzB3mC,KAAK0mC,OAAO48E,YAAmBtjH,KAAK0mC,OAAO48E,WAAY,GAC5B,MAA3BtjH,KAAK0mC,OAAOwiD,cAAqBlpF,KAAK0mC,OAAOwiD,aAAc,GAC9B,MAA7BlpF,KAAK0mC,OAAO68E,gBAAuBvjH,KAAK0mC,OAAO68E,eAAgB,IAG/C,MAArBvjH,KAAK0mC,OAAOm/B,QAAe7lE,KAAK0mC,OAAOm/B,MAAQ,GACtB,MAAzB7lE,KAAK0mC,OAAOwd,YAAmBlkD,KAAK0mC,OAAOwd,UAAY,MA7JlE,sCAkKoBltD,GAERgJ,KAAK0mC,OAAOC,cAAiD,MAAjC3mC,KAAK6iH,aAAa1C,cAC9CngH,KAAK6iH,aAAa1C,YAAYnpH,OAAOw0E,YAAcxrE,KAAKomD,kBAAkBqlB,iBAG1EzrE,KAAK0mC,OAAOC,cACZ3mC,KAAK6iH,aAAaW,SAASxsH,GAS/BgJ,KAAKomD,kBAAkBuZ,cAAc,CACjC5P,UAAU,EACV1G,oBAAqB,IAEzBrpD,KAAKwY,OAAOA,OAAOy3C,SAASj5D,EAAOugB,OAGT,MAAtBvgB,EAAOw0E,aACPxrE,KAAKomD,kBAAkBulB,iBAAiB30E,EAAOw0E,aAGnDx0E,EAAO40E,+BA7Lf,gDAiM8B11D,GACtB,OAAOA,EAAKlM,QAAQ,2CAA4C,QAlMxE,oCAqMe,WAEH7S,EAAU6I,KAAKizC,iBAAiBn0B,YAAYsG,YAAW,GAEvD/G,EAAOre,KAEXA,KAAK2hH,UAAU8B,UAAUzjH,KAAK0mC,OAAO9kC,IAAI,SAAC8hH,G,MAChB,MAAlBA,EACAr4E,aAAY,WACRhtB,EAAKslG,gBACN,KACA,WAEH,IAAIpB,EAAuBrlF,KAAKY,MAAM4lF,GAClCE,EAAYrB,EAAWvgH,OAHxB,uBAKH,YAAmB7K,EAAnB,+CAA4B,KAAnBH,EAAmB,QACP,QAAjB,EAAAqnB,EAAKwkG,oBAAY,SAAE3vE,aAAal8C,GAChCqnB,EAAK60B,aAAal8C,IAPnB,6GAUH,IAVG,IAUH,EAVG,iBAUMQ,EAVN,QAYK4qH,EAAW,EAAK17E,OAAO9kC,GAAKpK,EAChC,EAAKmqH,UAAU8B,UAAUrB,GAAU,SAAC9B,G,QAChC,GAAc,MAAVA,EAAgB,CAEhBA,EAAS,EAAKuD,0BAA0BvD,GAExC,IAAI,EAASjiG,EAAK2hG,UAAU,CACxBv2G,MAAOjS,EACP0e,KAAMoqG,EACNlgH,KAAM,SAGO,QAAjB,EAAAie,EAAKwkG,oBAAY,SAAE7C,UAAU,GAC7B3hG,EAAKylG,aAAa72C,OAAO,KAK7B,GAAiB,KADjB22C,IAEIv4E,aAAY,WACRhtB,EAAKslG,gBACN,KACc,QAAjB,EAAAtlG,EAAKwkG,oBAAY,SAAEK,qBACM,MAArB7kG,EAAKwkG,cAAsB,CAC3B,IAAI,EAAUxkG,EAAK40B,iBAAiBn0B,YAAYsG,YAAW,GACvD,EAAQpjB,OAAS,GAAGqc,EAAKkuC,gBAAgB,EAAQ,SA3BrE,EAAiBg2D,EAAjB,+CAA6B,IAV1B,2FAhNnB,oCAsQQ,IAAIprH,EAAU6I,KAAKizC,iBAAiBn0B,YAAYsG,YAAW,GAEvDm9F,EAAuB,GACvBwB,GAAuB,EAI3B,GAFA5sH,EAAQmb,SAAQ,SAAAjb,GAAC,OAAI0sH,EAAcA,IAAgB1sH,EAAEmrC,KAAK+N,SAEtDwzE,EAAa,4BAEb,YAAmB5sH,EAAnB,+CAA4B,KAAnBH,EAAmB,QACxBurH,EAAW59G,KAAK3N,EAAOwrC,KAAKhrC,MAC5B,IAAI4qH,EAAWpiH,KAAK0mC,OAAO9kC,GAAK5K,EAAOwrC,KAAKhrC,KAC5CwI,KAAK2hH,UAAUqC,YAAY5B,EAAUprH,EAAO6uC,iCAC5C7uC,EAAOwrC,KAAK+N,OAAQ,GANX,kFAUbvwC,KAAK2hH,UAAUqC,YAAYhkH,KAAK0mC,OAAO9kC,GAAIs7B,KAAKC,UAAUolF,OAvRtE,0CA4RqB,WACbviH,KAAK2hH,UAAU8B,UAAUzjH,KAAK0mC,OAAO9kC,IAAI,SAAC8hH,GACtC,GAAsB,MAAlBA,EAAJ,CAII,IAAInB,EAAuBrlF,KAAKY,MAAM4lF,GAFnC,uBAIH,YAAiBnB,EAAjB,+CAA6B,KAApB/qH,EAAoB,QAErB4qH,EAAW,EAAK17E,OAAO9kC,GAAKpK,EAChC,EAAKmqH,UAAUsC,aAAa7B,IAP7B,kFAUH,EAAKT,UAAUsC,aAAa,EAAKv9E,OAAO9kC,UA1SxD,oCAmTkB2gH,GACVviH,KAAKizC,iBAAmB,IAAI,GAAU,qBAAsBjzC,KAAM,GAClEA,KAAKizC,iBAAiBlD,SAASmU,UAAYlkD,KAAK0mC,OAAOwd,UACvDlkD,KAAKizC,iBAAiBq1B,2BAEtB,IALgC,uBAMhC,YAAmBi6C,EAAnB,+CAA+B,KAAtBjC,EAAsB,QACR,QAAfA,EAAOlgH,MACPJ,KAAKggH,UAAUM,IARS,qFAnTxC,gCAkUcA,GACN,IAAItpH,EAAiB,GAAOstD,gBAAgB,CACxC1iD,GAAI5B,KAAKizC,iBAAiBn0B,YAAYsG,YAAW,GAAMpjB,OACvDxK,KAAM8oH,EAAO72G,MACbyM,KAAMoqG,EAAOpqG,KACbs5C,qBAAsB,KACtBgB,eAAgB,KAChBqY,+BAA+B,EAC/B11B,QAAS,EACT9B,aAAc,EACdlC,aAAa,EACbmF,iCAAiC,EACjCooE,UAAW,GACZ18G,MAEHA,KAAKizC,iBAAiBn0B,YAAY21B,UAAUz9C,GAE5C,IAAIqnB,EAAOre,KAMX,OAJAhJ,EAAOugB,MAAMwzC,oBAAmB,WAC5B1sC,EAAK6lG,oCAGFltH,IAzVf,mCA4ViBA,GACTgJ,KAAKizC,iBAAiBn0B,YAAYo0B,aAAal8C,KA7VvD,8BAiWY+mD,GAAyB,WAI7BA,EAAKzO,IAAI,CACL,mBAAoB,OACpB,kBAAmB,SAGvB,IAAI60E,EAAaj5E,OAAO,qCACpBk5E,EAAoBpkH,KAAKqkH,yBAAyBtmE,GAElD28B,EAAY16E,KAAKskH,eAEjB17D,EAAa1d,OAAO,qCACxBlrC,KAAK2gH,WAAaz1E,OAAO,qCACzBlrC,KAAK0gH,SAAWx1E,OAAO,iDACvBlrC,KAAK8jH,aAAe54E,OAAO,mHAE3B0d,EAAWpe,OAAOxqC,KAAK2gH,WAAY3gH,KAAK0gH,SAAU1gH,KAAK8jH,cAEvD,IAAIS,EAAmBvkH,KAAKwkH,sBAC5B57D,EAAWpe,OAAO+5E,GAElBvkH,KAAK8jH,aAAah4E,OAElB9rC,KAAK8jH,aAAa/2E,GAAG,SAAS,WAAQq3E,EAAkBz4E,UAExD3rC,KAAK0gH,SAAS50E,OAEd,IAAI24E,EAAev5E,OAAO,uCACtBw5E,EAAkBx5E,OAAO,0CAG7B,GAAIlrC,KAAK0mC,OAAOuiD,gBAAiB,CAC7B,IAAIhiC,EAAa/b,OAAO,qCAGxB,GAFAlrC,KAAK2kH,cAAcD,EAAiBD,GACpCx9D,EAAWzc,OAAOk6E,GACd1kH,KAAK0mC,OAAOC,aAAc,CAC1B,IAAIs5E,EAAYjgH,KAAK4kH,eACrB39D,EAAWhL,QAAQgkE,GACnB,IAAIb,GAAea,GAAW,GAAO,GAAO,eAEhD1nE,GAASmsE,GAGTP,EAAW35E,OAAOoe,EAAY3B,GAC9B,IAAIm4D,GAAen4D,GAAY,GAAM,GAAM,WAAQ,EAAKzuC,OAAOA,OAAOkwC,iBAEtEy7D,EAAWloE,QAAQ2M,GAMlB5oD,KAAK0mC,OAAOuiD,kBACVjpF,KAAK0mC,OAAO28E,WACX3oC,EAAUz+B,QAAQwoE,IAElBN,EAAWloE,QAAQwoE,GACnBA,EAAa74E,SAAS,wBACtBgd,EAAWtZ,IAAI,CACX,SAAY,WACZ,OAAU,UAKtByO,EAAKnS,SAAS,qBACdmS,EAAKvT,OAAO25E,EAAYzpC,GAEpB16E,KAAK0mC,OAAO28E,YACZ,IAAIjE,GAAe1kC,GAAW,GAAM,GAAO,WACvCxvC,OAAO,gBAAgB0N,QAAQ,eAC/B,EAAKpgC,OAAOA,OAAOkwC,YAI3B1oD,KAAKwY,OAAS,IAAI,GAAOxY,MAAM,GAAO,GACtCA,KAAKwY,OAAO+4C,QAAQvxD,KAAK2gH,YACzB3gH,KAAK2gH,WAAWvvF,KAAK,kBAAkBke,IAAI,UAAW,MAEzB,MAAzByO,EAAKjP,KAAK,aAAqBiP,EAAKjP,KAAK,WAAY,KACzD9uC,KAAKy/E,cAAgB,IAAI,GAAc1hC,EAAM/9C,MAC7CA,KAAKy/E,cAAch5B,OAEnBzmD,KAAK8/D,UAAY,IAAI,GAAU9/D,KAAM0kH,EAAiB3mE,GACtD/9C,KAAK8/D,UAAUvO,UAEfvxD,KAAK6vC,SAAW,IAAI,GAAS7vC,KAAMA,KAAK6kH,gBACxC7kH,KAAK6vC,SAAS0hB,UAEd,IAAIuzD,EAAsB55E,OAAO,iDAC7B65E,EAAe75E,OAAO,2CAC1BlrC,KAAK6kH,eAAer6E,OAAOs6E,GAC3BA,EAAoBt6E,OAAOu6E,GAE3B/kH,KAAKohF,SAAW,IAAI,GAASphF,KAAMA,KAAK0hD,aAAc,MAEtD1hD,KAAK09B,YAAc,IAAI,GAAY19B,KAAMA,KAAKohF,SAC1C,IAAI,GAAsBqjC,EAAc77D,GACxC5oD,KAAK0qC,SAET,IAAIs6E,EAAc95E,OAAO,uFACzBu5E,EAAaj6E,OAAOw6E,GAEpBA,EAAYj4E,GAAG,aAAa,SAAC7uB,GACzBA,EAAGo8B,iBACHp8B,EAAGm3B,kBACHgC,GAAgB,CAAC,CACb3C,QAAS,0BACTmD,KAAM,4BACNnL,SAAU,eAELxuB,EAAGihC,MAAQ,EAAGjhC,EAAGkhC,MAAQ,MAGtC3T,YAAW,WACP,EAAK/N,YAAY6zB,UACjB,EAAK/4C,OAAOA,OAAOkwC,SACnB,EAAK7E,SAAW,IAAI,GAAS,GAC7B,EAAKnmB,YAAYsmD,eAAe5d,aAAaunC,yBAAyB,EAAKjnE,OAAOm/B,OAClF,EAAK5a,eACN,KAEAjrD,KAAK0mC,OAAO28E,aACXc,EAAWr4E,OACX4uC,EAAUprC,IAAI,OAAQ,KAClBtvC,KAAK0mC,OAAOi8E,eAKZ5kE,EAAK3sB,KAAK,oBAAoB0a,QAJ9BiS,EAAK3sB,KAAK,sBAAsBke,IAAI,SAAU,qBAC9CyO,EAAK3sB,KAAK,oBAAoBke,IAAI,UAAW,OAC7CyO,EAAK3sB,KAAK,0BAA0Bke,IAAI,UAAW,UApenE,4CA8eQ,OAAOpE,OAAO,6UA9etB,+CAwf6B+5E,GAA4B,WAC7CC,EAAUh6E,OAAO,u4BAyCrB,OAnBAg6E,EAAQp5E,OAERm5E,EAAQz6E,OAAO06E,GAEfh6E,OAAO,6BAA6B6B,GAAG,SAAS,WAC5Cm4E,EAAQp5E,UAGZZ,OAAO,yBAAyB6B,GAAG,SAAS,WAExC,EAAK21E,cACL,EAAKyC,oBAELD,EAAQp5E,OACR,EAAKg4E,aAAah4E,OAClB,EAAK02E,0BAA4B,KAI9B0C,IAliBf,iDAqiB+B1iF,EAAY/9B,GAEnC,GAAY,MAAR+9B,EAAJ,CAIA,GAAIxiC,KAAK0mC,OAAOC,aAAc,CAC1B,IAAIwN,EAAWn0C,KAAK6iH,aAAalyE,MAAMvf,MAAK,SAAC+iB,GAAD,OAAcA,EAASn9C,OAAOwrC,MAAQA,KAClF,GAAgB,MAAZ2R,EACA,OAGAA,EAASn9C,QAAUgJ,KAAK8lC,4BACxB9lC,KAAKusD,gBAAgBpY,EAASn9C,QAGlCgJ,KAAKuoE,qBAAuBp0B,EAASn9C,YAErCgJ,KAAKuoE,qBAAuBvoE,KAAKizC,iBAAiBn0B,YAAYgkG,iBAGlE,IAAI55G,EAAQ,CACRkP,YAAa3T,EAAS4F,OAAQ6N,gBAAiBzT,EAAS2F,KACxD+N,UAAW1T,EAAS4F,OAAS5F,EAASzC,OAAQiW,cAAexT,EAAS2F,MAG1EpK,KAAKomD,kBAAkB4lB,qCAAqC9iE,GAC5DlJ,KAAKwoE,yBAA2BxoE,KAAKomD,kBAAkBqG,iBAAiBzsD,KAAKwoE,yBAA0B,CACnG,CACIt/D,MAAOA,EACPuO,QAAS,CAAEukB,UAAW,0BAA2B0wB,aAAa,IAElE,CACIxjD,MAAOA,EACPuO,QAAS,CAAEy0D,uBAAwB,uCAvkBnD,mDAglBYlsE,KAAK8lC,4BAA8B9lC,KAAKuoE,sBACxCvoE,KAAKomD,kBAAkBqG,iBAAiBzsD,KAAKwoE,yBAA0B,IAE3ExoE,KAAKuoE,qBAAuB,KAC5BvoE,KAAKwoE,yBAA2B,KAplBxC,qCA0lBQ,IAAIy3C,EAAY/0E,OAAO,wDAEnBk6E,EAAel6E,OAAO,yGAU1B,OARAlrC,KAAKijH,cAAgB/3E,OAAO,mDAM5B+0E,EAAUz1E,OAAO46E,EAAcplH,KAAKijH,eAE7BhD,IAtmBf,mCA0mBgC,MAApBjgH,KAAKorD,aACLpc,cAAchvC,KAAKorD,aAGvB,IAAI/sC,EAAOre,KACXA,KAAKorD,YAAc/f,aAAY,WAE3BhtB,EAAKisC,mBAEN,OAnnBX,uC,QA0nBQ,GAA6B,MAAzBtqD,KAAKizC,kBAELjzC,KAAKizC,iBAAiBn0B,YAAYspC,WAClCpoD,KAAK6jD,SAAS1e,gBAAkB/G,GAAeiH,WAC5CrlC,KAAK09B,YAAYwlB,OAASC,GAAiBgD,SAC3CnmD,KAAK09B,YAAYwlB,OAASC,GAAiBC,OAC9C,IAEIpjD,KAAK6jD,SAASG,QAAQhkD,KAAKizC,iBAAiBn0B,aAGrB,QADb,EACD,QADC,EAAG9e,KACb8/D,iBAAS,eAAE95B,oBAAY,SAAEqlB,WAAWrrD,KAAKizC,kBAEzCjzC,KAAKwY,OAAOskD,0BAA0B,MAEtC98D,KAAKmnD,eAELnnD,KAAKmzC,UAEL,IAAI6vC,EAAsF,MAA1EhjF,KAAK09B,YAAYulD,mBAAmBjjF,KAAKizC,iBAAiBn0B,aAEtEkkE,GACAhjF,KAAK09B,YAAYwlB,OAASC,GAAiB0Y,kBAC3C77D,KAAKkjF,yCACLljF,KAAK09B,YAAYouB,SAAS3I,GAAiBxmB,MACxC38B,KAAK0mC,OAAOi8E,gBACX3iH,KAAKy/E,cAAc7mC,QAAQ,sBAK9BoqC,GACAhjF,KAAK09B,YAAYwlB,OAASC,GAAiBxmB,MAAQ38B,KAAK09B,YAAYwlB,OAASC,GAAiBl3C,OAC/FjM,KAAK09B,YAAYouB,SAAS3I,GAAiB0Y,iBAKjD,MAAO9jD,GACLuxB,QAAQr9B,MAAM8L,GACd/X,KAAK6jD,SAAS1e,eAAiB/G,GAAenyB,SAlqB9D,uDAyqBQjM,KAAKwiH,4BACiC,GAAlCxiH,KAAKwiH,2BACLxiH,KAAK8jH,aAAa72C,OAAO,OA3qBrC,qCAgrBQjtE,KAAK8/D,UAAUrO,uBAAuBzxD,KAAKizC,iBAAkBjzC,KAAK8lC,8BAhrB1E,wCAorBsBkxC,MAprBtB,+DA4rBQ,IAAI5pB,EAAKptD,KAAKizC,iBAAiBn0B,YAAYukE,OAC3CrjF,KAAK09B,YAAY5e,YAAcsuC,EAC/BptD,KAAK09B,YAAY4lD,mBAAqBtjF,KAAKmzC,QAEvCnzC,KAAK09B,YAAYwlB,OAASC,GAAiB0Y,iBAAmB77D,KAAKmhF,qBACnEnhF,KAAK09B,YAAYouB,SAAS3I,GAAiBxmB,QAjsBvD,oCAwsBkBsqB,EAAiCpC,GAE3C,IAAIwgE,EAAen6E,OAAO,sCAC1Bm6E,EAAa/1E,IAAI,WAAY,YAC7B,IAAIg2E,EAAep6E,OAAO,yDAE1B,GAAIlrC,KAAK0mC,OAAOwiD,YAAa,CACzB,IAAIq8B,EAAkBr6E,OAAO,2IAE7Bo6E,EAAa96E,OAAO+6E,GAKxB,GAFAD,EAAa96E,OAAOqa,GAEhB7kD,KAAK0mC,OAAO68E,cAAe,CAC3B,IAAIiC,EAAYt6E,OAAO,0GACvBm6E,EAAa76E,OAAOg7E,GAIxB,GAAIxlH,KAAK0mC,OAAOwiD,YAAa,CACzB,IAAIu8B,EAAav6E,OAAO,iHACxBm6E,EAAa76E,OAAOi7E,GAGxB,GAAIzlH,KAAK0mC,OAAO48E,UAAW,CACvB,IAAIoC,EAAWx6E,OAAO,8FACtBm6E,EAAa76E,OAAOk7E,GAGxBL,EAAa76E,OAAO86E,GAEpBr+D,EAAWzc,OAAO66E,GAElB,IAAIzqC,EAAQ1vC,OAAO,6CAEnB,GAAIlrC,KAAK0mC,OAAO68E,cAAe,CAC3B,IAAIoC,EAAYz6E,OAAO,4DACvB0vC,EAAMpwC,OAAOm7E,GAGjB,GAAI3lH,KAAK0mC,OAAOwiD,YAAa,CACzB,IAAI08B,EAAc16E,OAAO,uPAUzB0vC,EAAMpwC,OAAOo7E,GAGjB,GAAI5lH,KAAK0mC,OAAO48E,UAAW,CACvB,IAAIuC,EAAY36E,OAAO,sDACvB0vC,EAAMpwC,OAAOq7E,GAGjB5+D,EAAWzc,OAAOowC,KApwB1B,qCA0wBQ,IAAIF,EAAYxvC,OAAO,oCAgCvB,GA/BAlrC,KAAK6kH,eAAiB35E,OAAO,yCAC7BwvC,EAAUlwC,OAAOxqC,KAAK6kH,gBAEtB7kH,KAAK0hD,aAAexW,OAAO,uCAC3BlrC,KAAK0qC,QAAUQ,OAAO,8wBA2BlBlrC,KAAK0mC,OAAO28E,WA4BRrjH,KAAK6kH,eAAer6E,OAAOxqC,KAAK0qC,aA5Bb,CACvB,IAAI26E,EAAen6E,OAAO,sCAC1Bm6E,EAAa/1E,IAAI,WAAY,YAC7B,IAAIw2E,EAAS56E,OAAO,qGAChB66E,EAAe76E,OAAO,qHAC1Bm6E,EAAa76E,OAAOs7E,EAAQC,GAC5B/lH,KAAK6kH,eAAer6E,OAAO66E,GAC3B,IAAIW,EAAM96E,OAAO,uEAEb+6E,EAAmB/6E,OAAO,quBAa1B86E,EAAIx7E,OAAOxqC,KAAK0hD,aAAcukE,GAC9B,IAAIrrC,EAAQ1vC,OAAO,6CACnB0vC,EAAMpwC,OAAOxqC,KAAK0qC,QAASs7E,GAC3BhmH,KAAK6kH,eAAer6E,OAAOowC,GAC3BriC,GAASmiC,GAKjB,OAAOA,IAz0Bf,0CA60BQ,OAAO16E,KAAKuhF,oB,6BA70BpB,K,wNCnBO,IAAM,GAAb,yB,4FAAA,SAGI,KAAA5C,gBAAkB,EAIlB,KAAAunC,iBAAmC,G,UAPvC,O,EAAA,G,EAAA,iCAWQlmH,KAAK6hF,YAEL7hF,KAAK8hF,uBAEL9hF,KAAK+hF,uBAELC,KAAKC,MAAMC,YAEXliF,KAAKmgF,aAAe,IAAI/kE,KAnBhC,6CAwBQ4mE,KAAKG,UAAUtpF,UAAUupF,gBAAkB,SAAUC,GACjD,IAAIruD,EAAKh0B,KAAKsiF,eAOd,GANItiF,KAAKuiF,WAAaviF,KAAKwiF,kBACvBxiF,KAAKwiF,gBAAkBxiF,KAAKuiF,SAE5BviF,KAAKyiF,WAAa,GAGlBziF,KAAKyiF,YAAcJ,EAAgBK,SAAU,CAE7C,IAAIviE,EAAKkiE,EAAgBM,eACrBC,EAAK5iF,KAAK2iF,eACdC,EAAG96E,EAAKksB,EAAGlsB,EAAIqY,EAAGrY,EAAMksB,EAAG0pB,EAAIv9B,EAAG7oB,EAClCsrF,EAAGllC,EAAK1pB,EAAGlsB,EAAIqY,EAAGu9B,EAAM1pB,EAAG0pB,EAAIv9B,EAAG5oB,EAClCqrF,EAAGtrF,EAAK08B,EAAG18B,EAAI6oB,EAAGrY,EAAMksB,EAAGz8B,EAAI4oB,EAAG7oB,EAClCsrF,EAAGrrF,EAAKy8B,EAAG18B,EAAI6oB,EAAGu9B,EAAM1pB,EAAGz8B,EAAI4oB,EAAG5oB,EAClCqrF,EAAGC,GAAM7uD,EAAG6uD,GAAK1iE,EAAGrY,EAAMksB,EAAG8uD,GAAK3iE,EAAG7oB,EAAK6oB,EAAG0iE,GAC7CD,EAAGE,GAAM9uD,EAAG6uD,GAAK1iE,EAAGu9B,EAAM1pB,EAAG8uD,GAAK3iE,EAAG5oB,EAAK4oB,EAAG2iE,GAE7C9iF,KAAKyiF,UAAYJ,EAAgBK,SAEjC1iF,KAAK0iF,eA7CrB,oCAqDQ,IAAI,IAAYj8B,OAChBzmD,KAAK8hF,yBAtDb,6CA0DQ9hF,KAAK2+E,kBACuB,GAAxB3+E,KAAK2+E,iBACL3+E,KAAKomC,UA5DjB,kCAiEQ/yB,GAAkBozC,OAClB92C,GAAiB82C,OACjBl2C,GAAmBk2C,OACnBj2C,GAAoBi2C,OACpB51C,GAAqB41C,OACrBl6C,GAAoBk6C,OACpBh1C,GAAkBg1C,OAElBjzC,GAAYizC,OACZhzC,GAAUgzC,OACV/yC,GAAW+yC,OACX9yC,GAAc8yC,OACd7yC,GAAY6yC,SA7EpB,8BAkFQzmD,KAAKmmH,uBAlFb,2CA2FsB,WAEdj7E,OAAO,gBAAgBq8B,MAAK,SAACnlE,EAAekvB,GACxC,IAAIysB,EAAO7S,OAAO5Z,GACdixF,EAAyB,GAC7BxkE,EAAK3sB,KAAK,UAAUm2C,MAAK,SAACnlE,EAAekvB,GACrC,IAAI80F,EAAUl7E,OAAO5Z,GACjBlxB,EAAmB,OACI,MAAxBgmH,EAAQt4E,KAAK,UAAiB1tC,EAAoBgmH,EAAQt4E,KAAK,SAClE,IAAIwyE,EAAmB,CACnBlgH,KAAMA,EACNqJ,MAAO28G,EAAQt3E,KAAK,SACpB54B,KAAMkwG,EAAQlwG,OAAOrD,QAEzBytG,EAAOpqG,KAAO,EAAK2tG,0BAA0BvD,EAAOpqG,MACpDqsG,EAAW59G,KAAK27G,MAGpB,EAAK+F,QAAQtoE,EAAMwkE,QA7G/B,gDAmH8BrsG,GACtB,OAAOA,EAAKlM,QAAQ,2CAA4C,QApHxE,8BAuHY+zC,EAA2BwkE,GAER,IAAI,GAAaxkE,EAAMwkE,Q,6BAzHtD,KA+HAr3E,QAAO,WAEH,IAAIo7E,EAAkB,IAAI,GAEtB9b,EAAS,GACT+b,EAAa,2BAEU,MAAxB1vE,OAAO4zD,gBAEND,EAAS3zD,OAAO4zD,eAIU,MAA3B5zD,OAAO2vE,mBAEND,EAAa1vE,OAAO2vE,kBAIxB3vE,OAAO4vE,QAAQ//E,OAAO,CAAEggF,MAAO,CAAE,GAAMlc,EAAS+b,KAEhD1vE,OAAO4vE,QAAQ//E,OAAO,CAClB,SAAU,CACNigF,mBAAoB,CAChB,IAAK,OAGbC,uBAAwB,CAAC,2BAG7B/vE,OAAO4vE,QAAQ,CAAC,0BAA0B,WAEtCH,EAAgBO,aAChBP,EAAgB/0D,aAIpBywB,KAAKjyC,SAASgiD,WAAa/P,KAAKgQ,YAAYC,QAC5CjQ,KAAK2oB,OACAvX,OAAOhrD,IAAIoiE,EAAS,oCACpBsc,MAAK","file":"javaOnline-embedded.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordPrint,\r\n    keywordPrintln,\r\n    keywordClass,\r\n    keywordThis,\r\n    keywordSuper,\r\n    keywordNew,\r\n    keywordInterface,\r\n    keywordEnum,\r\n    keywordVoid,\r\n    keywordAbstract,\r\n    keywordPublic,\r\n    keywordProtected,\r\n    keywordPrivate,\r\n    keywordTransient,\r\n    keywordStatic,\r\n    keywordExtends,\r\n    keywordImplements,\r\n    keywordWhile,\r\n    keywordDo,\r\n    keywordFor,\r\n    keywordSwitch,\r\n    keywordCase,\r\n    keywordDefault,\r\n    keywordIf,\r\n    keywordThen,\r\n    keywordElse,\r\n    keywordReturn,\r\n    keywordBreak,\r\n    keywordContinue,\r\n    keywordNull,\r\n    keywordFinal,\r\n    keywordInstanceof,\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // operators\r\n    doubleMinus, doublePlus,\r\n\r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    equal, // ==\r\n    notEqual, // !=\r\n    assignment, // =\r\n    plusAssignment, // +=\r\n    minusAssignment, // -=\r\n    multiplicationAssignment, // *=\r\n    divisionAssignment, // /=\r\n    moduloAssignment, // /%=\r\n    and, or,   // &&, ||\r\n    ampersand, // &\r\n\r\n    ANDAssigment,\r\n    XORAssigment,\r\n    ORAssigment,\r\n    shiftLeftAssigment,\r\n    shiftRightAssigment,\r\n    shiftRightUnsignedAssigment,\r\n    OR, // |\r\n    XOR, // ^\r\n    // AND, // & see TokenType.ampersand above\r\n    tilde, // ~\r\n    shiftRightUnsigned, // >>>\r\n    shiftRight, // >>\r\n    shiftLeft, // <<\r\n\r\n    ternaryOperator,\r\n    colon, //:\r\n    ellipsis, // ...\r\n\r\n    not,    // !\r\n    \r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    // used by parser\r\n    negation, \r\n    referenceElement, // for arrays\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    binaryOp, // +, -, *, <=, ...\r\n    unaryOp, // ! and - \r\n    localVariableDeclaration,\r\n    heapVariableDeclaration,\r\n    pushLocalVariableToStack, // push value of a local variable to stack\r\n    popAndStoreIntoVariable,\r\n    pushFromHeapToStack, // push value from heap to stack\r\n    pushAttribute, // value of a attribute to stack\r\n    pushArrayLength, \r\n    pushConstant, // literal\r\n    pushStaticClassObject, // push class-Object to stack (which holds static attributes)\r\n    pushStaticAttribute, // push static attribute to stack\r\n    pushStaticAttributeIntrinsic, // push static attribute to stack\r\n    checkCast, // check if object may get casted to class or interface\r\n    castValue, // cast value on top of stack to other type\r\n    selectArrayElement, // select Element from Array (e.g. a[20])\r\n    callMethod,\r\n    callMainMethod,\r\n    processPostConstructorCallbacks, \r\n    callInputMethod, // Methods of Input class\r\n    makeEllipsisArray,\r\n    decreaseStackpointer, // decrease stack-pointer, nothing else\r\n    initStackframe,\r\n    closeStackframe,\r\n    increaseSpaceForLocalVariables,\r\n    return,\r\n    newObject,\r\n    jumpIfFalse,\r\n    jumpIfTrue,\r\n    jumpIfFalseAndLeaveOnStack,\r\n    jumpIfTrueAndLeaveOnStack,\r\n    jumpAlways,\r\n    noOp, // acts as jump destination\r\n    incrementDecrementBefore, // ++i, --i\r\n    incrementDecrementAfter, // i++, i--\r\n    programEnd,\r\n    beginArray, // push empty array to stack\r\n    addToArray, // pop element form stack and add it to array (on second stack position)\r\n    pushEmptyArray, // push multidimensional empty array to stack\r\n    forLoopOverCollection,\r\n\r\n    // additional AST node types\r\n    type, // e.g. int[][]\r\n    typeParameter, // e.g. <E extends String implements Comparable<E>>\r\n    attributeDeclaration,\r\n    methodDeclaration,\r\n    parameterDeclaration,\r\n    superConstructorCall,\r\n    constructorCall,       // call constructor with this() inside another constructor\r\n    newArray,\r\n    arrayInitialization,\r\n    print,\r\n    println, \r\n    pushEnumValue,\r\n    initializeEnumValue, \r\n    scopeNode,\r\n    returnIfDestroyed,\r\n    extendedForLoopInit,\r\n    extendedForLoopCheckCounterAndGetElement,\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordClass]: \"class\",\r\n    [TokenType.keywordThis]: \"this\",\r\n    [TokenType.keywordSuper]: \"super\",\r\n    [TokenType.keywordNew]: \"new\",\r\n    [TokenType.keywordInterface]: \"interface\",\r\n    [TokenType.keywordEnum]: \"enum\",\r\n    [TokenType.keywordVoid]: \"void\",\r\n    [TokenType.keywordAbstract]: \"abstract\",\r\n    [TokenType.keywordPublic]: \"public\",\r\n    [TokenType.keywordProtected]: \"protected\",\r\n    [TokenType.keywordPrivate]: \"private\",\r\n    [TokenType.keywordTransient]: \"transient\",\r\n    [TokenType.keywordStatic]: \"static\",\r\n    [TokenType.keywordExtends]: \"extends\",\r\n    [TokenType.keywordImplements]: \"implements\",\r\n    [TokenType.keywordWhile]: \"while\",\r\n    [TokenType.keywordDo]: \"do\",\r\n    [TokenType.keywordFor]: \"for\",\r\n    [TokenType.keywordSwitch]: \"switch\",\r\n    [TokenType.keywordCase]: \"case\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordThen]: \"then\",\r\n    [TokenType.keywordElse]: \"else\",\r\n    [TokenType.keywordReturn]: \"return\",\r\n    [TokenType.keywordBreak]: \"break\",\r\n    [TokenType.keywordContinue]: \"continue\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordFinal]: \"final\",\r\n    [TokenType.keywordInstanceof]: \"instanceof\",\r\n    [TokenType.keywordPrint]: \"print\",\r\n    [TokenType.keywordPrintln]: \"println\",\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.doubleMinus]: \"--\", \r\n    [TokenType.doublePlus]: \"++\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.equal]: \"==\", // ==\r\n    [TokenType.notEqual]: \"!=\", // !=\r\n    [TokenType.assignment]: \"=\", // =\r\n    [TokenType.plusAssignment]: \"+=\", // +=\r\n    [TokenType.minusAssignment]: \"-=\", // -=\r\n    [TokenType.multiplicationAssignment]: \"*=\", // *=\r\n    [TokenType.divisionAssignment]: \"/=\", // /=\r\n    [TokenType.moduloAssignment]: \"%=\",\r\n    [TokenType.ampersand]: \"&\", \r\n    [TokenType.and]: \"&&\", \r\n    [TokenType.or]: \"||\", \r\n    [TokenType.not]: \"!\", \r\n\r\n    [TokenType.ANDAssigment]: \"&=\",\r\n    [TokenType.XORAssigment]: \"^=\",\r\n    [TokenType.ORAssigment]: \"|=\",\r\n    [TokenType.shiftLeftAssigment]: \"<<=\",\r\n    [TokenType.shiftRightAssigment]: \">>=\",\r\n    [TokenType.shiftRightUnsignedAssigment]: \">>>=\",\r\n    // [TokenType.AND]: \"&\", \r\n    [TokenType.OR]: \"|\",\r\n    [TokenType.XOR]: \"^\",\r\n    [TokenType.tilde]: \"~\",\r\n    [TokenType.shiftLeft]: \"<<\",\r\n    [TokenType.shiftRight]: \">>\",\r\n    [TokenType.shiftRightUnsigned]: \">>>\",\r\n\r\n\r\n    [TokenType.ternaryOperator]: \"?\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n\r\n    [TokenType.colon]: \":\", // ;\r\n    [TokenType.ellipsis]: \"...\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.assignment,\r\n    \"&\": TokenType.and,\r\n    \"|\": TokenType.or,\r\n    \"!\": TokenType.not,\r\n    \"?\": TokenType.ternaryOperator,\r\n\r\n    \"^\": TokenType.XOR,\r\n    \"~\": TokenType.tilde,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    '...': TokenType.ellipsis,\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"class\": TokenType.keywordClass,\r\n    \"this\": TokenType.keywordThis,\r\n    \"super\": TokenType.keywordSuper,\r\n    \"new\": TokenType.keywordNew,\r\n    \"interface\": TokenType.keywordInterface,\r\n    \"enum\": TokenType.keywordEnum,\r\n    \"void\": TokenType.keywordVoid,\r\n    \"abstract\": TokenType.keywordAbstract,\r\n    \"public\": TokenType.keywordPublic,\r\n    \"protected\": TokenType.keywordProtected,\r\n    \"private\": TokenType.keywordPrivate,\r\n    \"transient\": TokenType.keywordTransient,\r\n    \"static\": TokenType.keywordStatic,\r\n    \"extends\": TokenType.keywordExtends,\r\n    \"implements\": TokenType.keywordImplements,\r\n    \"while\": TokenType.keywordWhile,\r\n    \"do\": TokenType.keywordDo,\r\n    \"for\": TokenType.keywordFor,\r\n    \"switch\": TokenType.keywordSwitch,\r\n    \"case\": TokenType.keywordCase,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"if\": TokenType.keywordIf,\r\n    \"then\": TokenType.keywordThen,\r\n    \"else\": TokenType.keywordElse,\r\n    \"return\": TokenType.keywordReturn,\r\n    \"break\": TokenType.keywordBreak,\r\n    \"continue\": TokenType.keywordContinue,\r\n    \"null\": TokenType.keywordNull,\r\n    \"final\": TokenType.keywordFinal,\r\n    \"instanceof\": TokenType.keywordInstanceof,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"print\": TokenType.keywordPrint,\r\n    \"println\": TokenType.keywordPrintln,\r\n    // \"int\": TokenType.keywordInt,\r\n    // \"boolean\": TokenType.keywordBoolean,\r\n    // \"String\": TokenType.keywordString,\r\n    // \"float\": TokenType.keywordFloat,\r\n    // \"char\": TokenType.keywordChar\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Visibility, TypeVariable } from \"./Class.js\";\r\n\r\nexport type UsagePositions = Map<Module, TextPosition[]>;\r\n\r\nexport type TextPositionWithModule = {\r\n    module: Module,\r\n    position: TextPosition,\r\n    monacoModel?: monaco.editor.ITextModel\r\n}\r\n\r\nexport type CastInformation = {\r\n    automatic: boolean,\r\n    needsStatement: boolean\r\n}\r\n\r\nexport abstract class Type {\r\n\r\n    public onlyFirstPass = false;\r\n\r\n    public usagePositions: UsagePositions = new Map();\r\n    public declaration: TextPositionWithModule;\r\n\r\n    public identifier: string;\r\n    public documentation: string = \"\";\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public abstract getResultType(operation: TokenType, secondOperandType?: Type): Type;\r\n\r\n    public abstract compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any;\r\n\r\n    public abstract canCastTo(type: Type): boolean;\r\n\r\n    public abstract castTo(value: Value, type: Type): Value;\r\n\r\n    public abstract equals(type: Type): boolean;\r\n\r\n    public toTokenType(): TokenType {\r\n        return null;\r\n    };\r\n\r\n    public abstract debugOutput(value: Value, maxLength?: number): string;\r\n\r\n    clearUsagePositions() {\r\n        this.usagePositions = new Map();\r\n    }\r\n\r\n}\r\n\r\nexport abstract class PrimitiveType extends Type {\r\n\r\n    public initialValue: any = null;\r\n\r\n    public description: string = \"\";\r\n\r\n    protected operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    protected canCastToMap: { [type: string]: CastInformation };\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return this.canCastToMap[type.identifier] != null;\r\n    }\r\n\r\n    public getCastInformation(type: Type): CastInformation {\r\n        return this.canCastToMap[type.identifier];\r\n    }\r\n\r\n}\r\n\r\nexport class Attribute {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    identifier: string;\r\n\r\n    index: number;\r\n\r\n    type: Type;\r\n    isStatic: boolean;\r\n    isFinal: boolean;\r\n    isTransient: boolean;\r\n    visibility: Visibility;\r\n    updateValue: (value: Value) => void;\r\n    usagePositions: UsagePositions;\r\n    declaration: TextPositionWithModule;\r\n    documentation: string;\r\n    annotation?: string;\r\n\r\n    constructor(name: string, type: Type, updateValue: (value: Value) => void,\r\n        isStatic: boolean, visibility: Visibility, isFinal: boolean, documentation?: string) {\r\n        this.identifier = name;\r\n        this.type = type;\r\n        this.updateValue = updateValue;\r\n        this.isStatic = isStatic;\r\n        this.visibility = visibility;\r\n        this.isFinal = isFinal;\r\n        this.usagePositions = new Map();\r\n        this.documentation = documentation;\r\n    }\r\n}\r\n\r\nexport class Method extends Type {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    visibility: Visibility;\r\n\r\n    isAbstract: boolean;\r\n    isStatic: boolean;\r\n    isConstructor: boolean = false;\r\n    isVirtual: boolean = false; // true, if child class has method with same signature\r\n\r\n    parameterlist: Parameterlist;\r\n    returnType: Type;\r\n    annotation?: string;\r\n\r\n    invoke?: (parameters: Value[]) => any;  // only for system functions\r\n    program?: Program;\r\n\r\n    reserveStackForLocalVariables: number = 0;\r\n\r\n    hasGenericTypes: boolean;\r\n\r\n    genericTypeMap: { [identifier: string]: Type } = null;\r\n\r\n    public signature: string;\r\n\r\n    implements(m: Method): boolean {\r\n        if(this.identifier != m.identifier) return false;\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            if(m.returnType != null && m.returnType.identifier != \"void\") return false;\r\n        } else {\r\n\r\n            if(m.returnType instanceof PrimitiveType){\r\n                if(m.returnType != this.returnType) {\r\n                    return false;\r\n                }\r\n            } else if(!this.returnType.canCastTo(m.returnType)){\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if(this.parameterlist.parameters.length != m.parameterlist.parameters.length) return false;\r\n\r\n        for(let i = 0; i < this.parameterlist.parameters.length; i++){\r\n            let myParameter = this.parameterlist.parameters[i];\r\n            let mParameter = m.parameterlist.parameters[i];\r\n\r\n            if(mParameter.type instanceof PrimitiveType){\r\n                if(mParameter.type != myParameter.type){\r\n                    return false;\r\n                }\r\n            } else if(!mParameter.type.canCastTo(myParameter.type)) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasEllipsis(): boolean {\r\n        if(this.parameterlist.parameters.length == 0) return false;\r\n        return this.parameterlist.parameters[this.parameterlist.parameters.length - 1].isEllipsis;\r\n    }\r\n\r\n\r\n    getParameterType(index: number): Type {\r\n        return this.parameterlist.parameters[index].type;\r\n    }\r\n\r\n    getParameter(index: number): Variable {\r\n        return this.parameterlist.parameters[index];\r\n    }\r\n\r\n    getReturnType(): Type {\r\n        return this.returnType;\r\n    }\r\n\r\n    getParameterCount() {\r\n        return this.parameterlist.parameters.length;\r\n    }\r\n\r\n    getParameterList(): Parameterlist {\r\n        return this.parameterlist;\r\n    }\r\n\r\n\r\n\r\n    constructor(name: string, parameterlist: Parameterlist, returnType: Type,\r\n        invokeOrAST: ((parameters: Value[]) => any) | Program,\r\n        isAbstract: boolean, isStatic: boolean, documentation?: string, isConstructor: boolean = false) {\r\n        super();\r\n        this.identifier = name;\r\n        this.parameterlist = parameterlist;\r\n        this.returnType = returnType;\r\n        this.isAbstract = isAbstract;\r\n        this.isStatic = isStatic;\r\n        this.visibility = 0;\r\n        this.documentation = documentation;\r\n        this.isConstructor = isConstructor;\r\n\r\n        if (invokeOrAST != null) {\r\n            if (typeof invokeOrAST == \"function\") {\r\n                this.invoke = invokeOrAST;\r\n            } else {\r\n                this.program = invokeOrAST;\r\n                invokeOrAST.method = this;\r\n            }\r\n        }\r\n\r\n        this.signature = name + parameterlist.id;\r\n\r\n        for (let p of parameterlist.parameters) {\r\n            if (p[\"isTypeVariable\"] == true) {\r\n                this.hasGenericTypes = true; break;\r\n            }\r\n        }\r\n\r\n        this.hasGenericTypes = this.hasGenericTypes || (this.returnType != null && this.returnType[\"isTypeVariable\"] == true);\r\n    }\r\n\r\n    getSignatureWithReturnParameter(){\r\n        if(this.returnType != null){\r\n            return this.returnType.identifier + \" \" + this.signature;\r\n        } else {\r\n            return \"void \" + this.signature;\r\n        }\r\n    }\r\n\r\n    getCompletionLabel() {\r\n\r\n        let label = \"\";\r\n\r\n        if (this.returnType != null && this.returnType.identifier != \"void\") {\r\n            label += getTypeIdentifier(this.returnType) + \" \";\r\n        }\r\n\r\n        label += this.identifier + \"(\";\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            if(p.isEllipsis){\r\n                let arrayType: ArrayType = <any>p.type;\r\n                label += getTypeIdentifier(arrayType.arrayOfType) + \"... \" + p.identifier;\r\n            } else {\r\n                label += getTypeIdentifier(p.type) + \" \" + p.identifier;\r\n            }\r\n\r\n            if (i < parameters.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        label += \")\";\r\n\r\n        return label;\r\n    }\r\n\r\n\r\n    getCompletionSnippet(leftBracketAlreadyThere: boolean) {\r\n\r\n        if (leftBracketAlreadyThere) return this.identifier + \"($0\";\r\n\r\n        let snippet = \"\";\r\n\r\n        snippet += this.identifier + \"(\";\r\n\r\n        let isVoidReturn = this.returnType == null || this.returnType.identifier == \"void\";\r\n        let isVoidReturnDelta = isVoidReturn ? 1 : 0;\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            snippet += \"${\" + ((i + 1) % (parameters.length + isVoidReturnDelta)) + \":\" + p.identifier + \"}\";\r\n\r\n            if (i < parameters.length - 1) {\r\n                snippet += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        snippet += \")\";\r\n\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            snippet += \";$0\";\r\n        }\r\n\r\n        return snippet;\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\";\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        return null;\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return false;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value { return value }\r\n\r\n\r\n}\r\n\r\nexport class Parameterlist {\r\n\r\n    id: string;\r\n\r\n    parameters: Variable[];\r\n\r\n    constructor(parameters: Variable[]) {\r\n        this.parameters = parameters;\r\n        this.computeId();\r\n    }\r\n\r\n    computeId() {\r\n        this.id = \"(\";\r\n        let i = 0;\r\n        while (i < this.parameters.length) {\r\n            this.id += this.parameters[i].type.identifier;\r\n            if (i < this.parameters.length - 1) {\r\n                this.id += \", \";\r\n            }\r\n            i++;\r\n        }\r\n        this.id += \")\";\r\n    }\r\n}\r\n\r\nexport type Variable = {\r\n    identifier: string,\r\n    type: Type,\r\n    stackPos?: number;\r\n    usagePositions: UsagePositions,\r\n    declaration: TextPositionWithModule,\r\n    isFinal: boolean,\r\n    isEllipsis?: boolean,\r\n    value?: Value // only for variables on heap,\r\n    declarationError?: any,     // if v.declarationError != null then variable has been used before initialization.\r\n    usedBeforeInitialization?: boolean,\r\n    initialized?: boolean\r\n}\r\n\r\nexport type Heap = { [identifier: string]: Variable };\r\n\r\nexport type Value = {\r\n    type: Type;\r\n    value: any;\r\n    updateValue?: (value: Value) => void;\r\n    object?: RuntimeObject;\r\n}\r\n\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if(type[\"typeVariables\"]){\r\n        if(type[\"typeVariables\"].length > 0){\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier) \r\n            + \"<\";\r\n               s += type[\"typeVariables\"].map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n","import { Klass, StaticClass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { PrimitiveType, Value } from \"../compiler/types/Types.js\";\r\n\r\n\r\n\r\nexport class RuntimeObject {\r\n\r\n    class: Klass | StaticClass;\r\n\r\n    intrinsicData: {[classIdentifier: string]: any} = {};  // for intrinsic (= builtin) classes to store data\r\n\r\n    // Attributes of class and base-classes\r\n    // Map class-identifier to Map <attribute-identifier, attribute-value>\r\n    // attributeValues: Map<string, Map<string, Value>> = new Map();\r\n    attributes: Value[];\r\n\r\n    constructor(klass: Klass | StaticClass ) {\r\n\r\n        this.class = klass;\r\n\r\n        this.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    getValue(attributeIndex: number):Value{\r\n\r\n        let av: Value = this.attributes[attributeIndex];\r\n        if(av?.updateValue != null){\r\n            av.updateValue(av);\r\n        }\r\n        return av;\r\n\r\n    }\r\n\r\n    private initializeAttributeValues(){\r\n\r\n        this.attributes = Array(this.class.numberOfAttributesIncludingBaseClass).fill(null);\r\n\r\n        let klass = this.class;\r\n        while(klass != null){\r\n\r\n            for(let att of klass.attributes){\r\n                \r\n                let value:any = null;\r\n                if(att.type instanceof PrimitiveType){\r\n                    value = att.type.initialValue;\r\n                }\r\n\r\n                let v: Value = {\r\n                    type: att.type,\r\n                    value: value\r\n                };\r\n\r\n                if(att.updateValue != null){\r\n                    v.updateValue = att.updateValue;\r\n                    v.object = this;\r\n                } \r\n                \r\n                this.attributes[att.index] = v;\r\n\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function deepCopy(obj: any): any {\r\n\r\n    var copy: any;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(obj.getTime());\r\n        return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n        copy = [];\r\n        for (var i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = deepCopy(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n        copy = {};\r\n        for (var attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) copy[attr] = deepCopy(obj[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n\r\n}\r\n\r\n","import { Statement, JumpNode, Program, JumpOnSwitchStatement } from \"./Program.js\";\r\nimport { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { CodeGenerator } from \"./CodeGenerator.js\";\r\n\r\ntype nodeToResolve = {\r\n    node: JumpNode,\r\n    labelIndex: number\r\n}\r\n\r\ntype LabeledNode = {\r\n    node?: Statement,\r\n    labelIndex: number,\r\n    position?: number\r\n}\r\n\r\n\r\nexport class LabelManager {\r\n\r\n    maxLabelIndex: number = 0;\r\n\r\n    labeledNodes: LabeledNode[] = [];\r\n    \r\n    labelMap: Map<number, LabeledNode> = new Map();\r\n    jumpNodesToResolve: nodeToResolve[] = [];\r\n\r\n    switchStatements: JumpOnSwitchStatement[] = [];\r\n\r\n    program: Program;\r\n\r\n    constructor(program: Program){\r\n        this.program = program;\r\n    }\r\n\r\n    correctPositionsAfterInsert(insertPosition: number, insertedLength: number) {\r\n        for(let ln of this.labeledNodes){\r\n            if(ln.position != null && ln.position >= insertPosition){\r\n                ln.position += insertedLength;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    registerSwitchStatement(switchStatement: JumpOnSwitchStatement) {\r\n        this.switchStatements.push(switchStatement);\r\n    }\r\n\r\n    insertJumpNode(type: TokenType.jumpIfTrue|TokenType.jumpIfFalse|TokenType.jumpAlways|\r\n        TokenType.jumpIfFalseAndLeaveOnStack|TokenType.jumpIfTrueAndLeaveOnStack,\r\n         position: TextPosition, codeGenerator: CodeGenerator, labelIndex?: number): number {\r\n        \r\n        let statementList = this.program.statements;\r\n\r\n        if(position == null){\r\n            if(statementList.length > 0){\r\n                position = statementList[statementList.length - 1].position;\r\n            }\r\n        }\r\n\r\n        let node: JumpNode = {\r\n            type: type,\r\n            position: position,\r\n            stepFinished: true\r\n        };\r\n\r\n        codeGenerator.pushStatements(node);\r\n\r\n        return this.registerJumpNode(node, labelIndex);\r\n\r\n    }\r\n\r\n    markJumpDestination(offset: number, labelIndex?:number): number {\r\n        \r\n        let position = this.program.statements.length - 1 + offset;\r\n        \r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let labeledNode = {\r\n            position: position,\r\n            labelIndex: labelIndex\r\n        };\r\n\r\n        this.labeledNodes.push(labeledNode);\r\n\r\n        this.labelMap.set(labelIndex, labeledNode);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    removeNode(node: Statement){\r\n        for(let i = 0; i < this.labeledNodes.length; i++){\r\n            let n = this.labeledNodes[i];\r\n            if(n.node == node){\r\n\r\n                let index = this.program.statements.indexOf(node);\r\n               \r\n                if(index < this.program.statements.length - 1){\r\n                    let newNode = this.program.statements[index + 1];\r\n                    n.node = newNode;\r\n                }\r\n\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerJumpDestination(node: Statement, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let label: LabeledNode = {\r\n            node: node,\r\n            labelIndex: labelIndex\r\n        }\r\n\r\n        this.labeledNodes.push(label);\r\n        this.labelMap.set(labelIndex, label);\r\n\r\n        return labelIndex;\r\n    }\r\n\r\n    public registerJumpNode(node: JumpNode, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let ntr: nodeToResolve = {\r\n            labelIndex: labelIndex,\r\n            node: node\r\n        }\r\n\r\n        this.jumpNodesToResolve.push(ntr);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    resolveNodes(){\r\n        for(let ln of this.labeledNodes){\r\n\r\n            if(ln.position == null){\r\n                ln.position = this.program.statements.indexOf(ln.node);\r\n            } else {\r\n                while(ln.position > this.program.statements.length - 1){\r\n                    this.program.statements.push({\r\n                        type: TokenType.noOp,\r\n                        position: null\r\n                    });\r\n                }\r\n                ln.node = this.program.statements[ln.position];\r\n            }\r\n\r\n        }\r\n\r\n        for(let jn of this.jumpNodesToResolve){\r\n            let dest = this.labelMap.get(jn.labelIndex);\r\n            if(dest != null){\r\n                jn.node.destination = dest.position;\r\n            }\r\n        }\r\n\r\n        for(let sw of this.switchStatements){\r\n            for(let dl of sw.destinationLabels){\r\n                sw.destinationMap[dl.constant] = this.labelMap.get(dl.label).position;\r\n            }\r\n            sw.destinationLabels = null;\r\n            if(sw.defaultDestination != null){\r\n                sw.defaultDestination = this.labelMap.get(sw.defaultDestination).position;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { ProgramStackElement } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { LabelManager } from \"../parser/LabelManager.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { SymbolTable } from \"../parser/SymbolTable.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { nullType, stringPrimitiveType, voidPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\n\r\nexport enum Visibility { public, protected, private };\r\n\r\nvar booleanPrimitiveTypeCopy: any;\r\nexport function setBooleanPrimitiveTypeCopy(bpt: Type) {\r\n    booleanPrimitiveTypeCopy = bpt;\r\n}\r\n\r\n// Used for class diagrams:\r\nexport type CompostionData = { klass: Klass | Interface, multiples: boolean, identifier: string };\r\n\r\n/**\r\n * For Generic types\r\n */\r\nexport type TypeVariable = {\r\n    identifier: string;\r\n    type: Klass;\r\n    scopeFrom: TextPosition;\r\n    scopeTo: TextPosition;\r\n}\r\n\r\n\r\nexport class Klass extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Klass;\r\n    isTypeVariable: boolean = false;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    private static dontInheritFrom: string[] = [\"Integer\", \"Float\", \"Double\", \"Boolean\", \"Character\", \"String\", \"Shape\", \"FilledShape\"];\r\n\r\n    baseClass: Klass;\r\n    firstPassBaseClass: string;\r\n\r\n    staticClass: StaticClass;\r\n\r\n    module: Module;\r\n\r\n    visibility: Visibility;\r\n\r\n    implements: Interface[] = [];\r\n    firstPassImplements: string[] = [];\r\n\r\n    isAbstract: boolean = false;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    postConstructorCallbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    public symbolTable: SymbolTable;\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n\r\n        this.documentation = documentation;\r\n\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n        this.visibility = Visibility.public;\r\n\r\n        this.staticClass = new StaticClass(this);\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    getNonGenericClass(): Klass {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    implementsInterface(i: Interface): boolean {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                if (i1.getThisOrExtendedInterface(i.getNonGenericIdentifier()) != null) return true;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getImplementedInterface(identifier: string): Interface {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                let i2: Interface = i1.getThisOrExtendedInterface(identifier);\r\n                if (i2 != null) return i2;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    registerUsedSystemClasses(usedSystemClasses: (Klass | Interface)[]) {\r\n        if (this.baseClass != null && this.baseClass.module != null && this.baseClass.module.isSystemModule &&\r\n            usedSystemClasses.indexOf(this.baseClass) < 0) {\r\n            usedSystemClasses.push(this.baseClass);\r\n        }\r\n        for (let cd of this.getCompositeData()) {\r\n            if (cd.klass != null && cd.klass.module != null && cd.klass.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(cd.klass) < 0) {\r\n                usedSystemClasses.push(cd.klass);\r\n            }\r\n        }\r\n        for (let interf of this.implements) {\r\n            if (interf != null && interf.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(interf) < 0) {\r\n                usedSystemClasses.push(interf);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCompositeData(): CompostionData[] {\r\n\r\n        let cd: CompostionData[] = [];\r\n        let cdMap: Map<Klass | Interface, CompostionData> = new Map();\r\n\r\n        for (let a of this.attributes) {\r\n            if (a.type instanceof Klass || a.type instanceof Interface) {\r\n                let cda = cdMap.get(a.type);\r\n                if (cda == null) {\r\n                    cda = {\r\n                        klass: a.type,\r\n                        multiples: false,\r\n                        identifier: a.identifier\r\n                    };\r\n                    cdMap.set(a.type, cda);\r\n                    cd.push(cda);\r\n                } else {\r\n                    cda.identifier += \", \" + a.identifier;\r\n                }\r\n            } else {\r\n                let type: Type = a.type;\r\n                while (type instanceof ArrayType) {\r\n                    type = type.arrayOfType;\r\n                }\r\n                if (type instanceof Klass || type instanceof Interface) {\r\n                    let cda = cdMap.get(type);\r\n                    if (cda == null) {\r\n                        cda = {\r\n                            klass: type,\r\n                            multiples: true,\r\n                            identifier: a.identifier\r\n                        };\r\n                        cdMap.set(type, cda);\r\n                        cd.push(cda);\r\n                    } else {\r\n                        cda.identifier += \", \" + a.identifier;\r\n                        cda.multiples = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return cd;\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n        if (this.staticClass != null) {\r\n            this.staticClass.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getPostConstructorCallbacks(): ((r: RuntimeObject) => void)[] {\r\n        let c: Klass = this;\r\n        let callbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n        while (c != null) {\r\n            if (c.postConstructorCallbacks != null) {\r\n                if (callbacks == null) { callbacks = c.postConstructorCallbacks; }\r\n                else {\r\n                    callbacks = callbacks.concat(c.postConstructorCallbacks);\r\n                }\r\n            }\r\n            c = c.baseClass;\r\n        }\r\n        return callbacks;\r\n    }\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange, currentMethod?: Method): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier + \"\",\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            if (method.isConstructor) {\r\n                if (currentMethod?.isConstructor && currentMethod != method && this.baseClass.methods.indexOf(method) >= 0) {\r\n                    this.pushSuperCompletionItem(itemList, method, leftBracketAlreadyThere, rangeToReplace);\r\n                    continue;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        itemList = itemList.concat(this.staticClass.getCompletionItems(visibilityUpTo,\r\n            leftBracketAlreadyThere, identifierAndBracketAfterCursor,\r\n            rangeToReplace));\r\n\r\n        return itemList;\r\n    }\r\n\r\n    pushSuperCompletionItem(itemList: monaco.languages.CompletionItem[], method: Method, leftBracketAlreadyThere: boolean,\r\n        rangeToReplace: monaco.IRange) {\r\n        itemList.push({\r\n            label: method.getCompletionLabel().replace(method.identifier, \"super\"),\r\n            filterText: \"super\",\r\n            command: {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            },\r\n            kind: monaco.languages.CompletionItemKind.Method,\r\n            insertText: method.getCompletionSnippet(leftBracketAlreadyThere).replace(method.identifier, \"super\"),\r\n            range: rangeToReplace,\r\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n            documentation: method.documentation == null ? undefined : {\r\n                value: method.documentation\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    pushStaticInitializationPrograms(programStack: ProgramStackElement[]) {\r\n\r\n        if (this.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            programStack.push({\r\n                program: this.staticClass.attributeInitializationProgram,\r\n                programPosition: 0,\r\n                textPosition: { line: 1, column: 1, length: 0 },\r\n                method: \"Initialisierung statischer Variablen der Klasse \" + this.staticClass.identifier,\r\n                callbackAfterReturn: null,\r\n                isCalledFromOutside: \"Initialisierung statischer Attribute\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getMethodBySignature(signature: string): Method {\r\n\r\n        let c: Klass = this;\r\n        while (c != null) {\r\n            let method = c.methodMap.get(signature);\r\n            if (method != null) return method;\r\n            c = c.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    setBaseClass(baseClass: Klass) {\r\n        this.baseClass = baseClass;\r\n        this.staticClass.baseClass = baseClass.staticClass;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        if (method.isConstructor) {\r\n            method.returnType = null;\r\n        }\r\n        if (method.isStatic) {\r\n            this.staticClass.addMethod(method);\r\n        } else {\r\n            this.methods.push(method);\r\n            this.methodMap.set(method.signature, method);\r\n        }\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        if (attribute.isStatic) {\r\n            this.staticClass.addAttribute(attribute);\r\n        } else {\r\n            this.attributes.push(attribute);\r\n            this.attributeMap.set(attribute.identifier, attribute);\r\n        }\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            if (secondOperandType instanceof Klass || secondOperandType == nullType) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            let firstOpClass = firstOperand?.value?.class;\r\n            if (firstOpClass == null) return false;\r\n            let typeLeft: Klass = <Klass>firstOpClass;\r\n            let typeRight = secondOperand.type;\r\n            if (typeRight instanceof StaticClass) {\r\n\r\n                while (typeLeft != null) {\r\n                    if (typeLeft === typeRight.Klass) return true;\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n                return false;\r\n            }\r\n            if (typeRight instanceof Interface) {\r\n                while (typeLeft != null) {\r\n                    for (let i of typeLeft.implements) {\r\n                        if (i === typeRight) return true;\r\n                    }\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * returns all visible methods of this class and all of its base classes\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || method.identifier == identifier);\r\n        });\r\n\r\n        if (this.baseClass != null && (identifier == null || identifier != this.identifier || methods.length == 0)) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier == this.identifier ? this.baseClass.identifier : identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all visible attributes of this class and all of its base classes\r\n     */\r\n    public getAttributes(upToVisibility: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = [];\r\n        for (let a of this.attributes) {\r\n            if (a.visibility <= upToVisibility) {\r\n                attributes.push(a);\r\n            }\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(upToVisibilityInBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                if (a.visibility > upToVisibilityInBaseClass) continue;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public hasConstructor() {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) return true;\r\n        }\r\n\r\n        if (this.baseClass != null) return this.baseClass.hasConstructor();\r\n\r\n        return false;\r\n    }\r\n\r\n    public hasParameterlessConstructor() {\r\n        let hasConstructorWithParameters: boolean = false;\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) {\r\n                if (m.parameterlist.parameters.length == 0) {\r\n                    return true;\r\n                } else {\r\n                    hasConstructorWithParameters = true;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasConstructorWithParameters && this.baseClass != null) {\r\n            return this.baseClass.hasParameterlessConstructor();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public getParameterlessConstructor(): Method {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor && m.parameterlist.parameters.length == 0) return m;\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n            return this.baseClass.getParameterlessConstructor();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    public getConstructor(parameterTypes: Type[], upToVisibility: Visibility, classIdentifier: string = this.identifier): { error: string, methodList: Method[] } {\r\n\r\n        let constructors: Method[] = this.methods.filter((m) => {\r\n            return m.isConstructor;\r\n        });\r\n\r\n        if (constructors.length == 0 && this.baseClass != null) {\r\n            return this.baseClass.getConstructor(parameterTypes, upToVisibility, classIdentifier);\r\n        } else {\r\n            return findSuitableMethods(constructors, this.identifier, parameterTypes, classIdentifier, true);\r\n        }\r\n\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        let allMethods = this.getMethods(upToVisibility);\r\n\r\n        let methods = findSuitableMethods(allMethods, identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n        if (methods.methodList.length == 0 && !searchConstructor) {\r\n            let staticMethods = this.staticClass.getMethodsThatFitWithCasting(identifier, parameterTypes, false, upToVisibility);\r\n            if (staticMethods.error == null) {\r\n                return staticMethods;\r\n            }\r\n\r\n            return methods;\r\n        }\r\n\r\n        return methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean } {\r\n\r\n        let error = null;\r\n        let foundButInvisible: boolean = false;\r\n\r\n        let attribute = this.attributeMap.get(identifier);\r\n        let attributeNotFound = attribute == null;\r\n\r\n        if (attribute == null) {\r\n            error = \"Das Attribut \" + identifier + \" kann nicht gefunden werden.\";\r\n        } else\r\n            if (attribute.visibility > upToVisibility) {\r\n                error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist daher hier nicht sichtbar.\";\r\n                attribute = null;\r\n                foundButInvisible = true;\r\n            }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttribute = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (baseClassAttribute.attribute != null || attributeNotFound) {\r\n                return baseClassAttribute;\r\n            }\r\n\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: foundButInvisible };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        if (type instanceof Klass) {\r\n            let baseClass: Klass = this;\r\n\r\n            while (baseClass != null) {\r\n                if (type.getNonGenericIdentifier() == baseClass.getNonGenericIdentifier()) {\r\n                    if (type.typeVariables.length > 0) {\r\n                        let n: number = Math.min(type.typeVariables.length, baseClass.typeVariables.length);\r\n                        for (let i = 0; i < n; i++) {\r\n                            if (!baseClass.typeVariables[i].type.canCastTo(type.typeVariables[i].type)) return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return true;\r\n                }\r\n                baseClass = baseClass.baseClass;\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n\r\n            let klass: Klass = this;\r\n            while (klass != null) {\r\n                for (let i of klass.implements) {\r\n                    if (type.getNonGenericIdentifier() == i.getNonGenericIdentifier()) {\r\n                        return true;\r\n                    }\r\n                }\r\n                klass = klass.baseClass;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n    checkInheritance(): { message: string, missingMethods: Method[] } {\r\n\r\n        if (this.baseClass != null && Klass.dontInheritFrom.indexOf(this.baseClass.identifier) >= 0) {\r\n            return { message: \"Aus Performancegründen ist es leider nicht möglich, Unterklassen der Klassen String, Boolean, Character, Integer, Float und Double zu bilden.\", missingMethods: [] };\r\n        }\r\n\r\n        let message = \"\";\r\n        let missingAbstractMethods: Method[] = [];\r\n        let implementedMethods: Method[] = [];\r\n\r\n        let missingInterfaceMethods: Method[] = [];\r\n\r\n        let klass: Klass = this;\r\n        let hierarchy: string[] = [klass.identifier];\r\n        while (klass.baseClass != null) {\r\n            klass = klass.baseClass;\r\n            if (hierarchy.indexOf(klass.identifier) >= 0) {\r\n                klass.baseClass = null;  // This is necessary to avoid infinite loops in further compilation\r\n                hierarchy = [klass.identifier].concat(hierarchy);\r\n                message = \"Die Klasse \" + klass.identifier + \" erbt von sich selbst: \";\r\n                message += \"(\" + hierarchy.join(\" extends \") + \")\";\r\n                break;\r\n            }\r\n            hierarchy = [klass.identifier].concat(hierarchy);\r\n        }\r\n\r\n        if (message == \"\") {\r\n\r\n            if (this.baseClass != null) {\r\n\r\n                let abstractMethods: Method[] = [];\r\n\r\n                let klass: Klass = this;\r\n\r\n                // collect abstract Methods\r\n                while (klass != null) {\r\n                    for (let m of klass.methods) {\r\n                        if (m.isAbstract) {\r\n                            abstractMethods.push(m);\r\n                            let isImplemented: boolean = false;\r\n                            for (let m1 of implementedMethods) {\r\n                                if (m1.implements(m)) {\r\n                                    isImplemented = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (!isImplemented) {\r\n                                missingAbstractMethods.push(m);\r\n                            }\r\n                        } else {\r\n                            implementedMethods.push(m);\r\n                        }\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n            }\r\n\r\n            if (missingAbstractMethods.length > 0 && !this.isAbstract) {\r\n                message = \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden ihrer abstrakten Basisklassen implementieren: \";\r\n\r\n                message += missingAbstractMethods.map((m) => m.getSignatureWithReturnParameter()).join(\", \");\r\n\r\n            }\r\n\r\n            for (let i of this.implements) {\r\n                for (let m of i.getMethods()) {\r\n                    let isImplemented: boolean = false;\r\n                    for (let m1 of implementedMethods) {\r\n                        if (m1.implements(m)) {\r\n                            isImplemented = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!isImplemented) {\r\n                        missingInterfaceMethods.push(m);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (missingInterfaceMethods.length > 0) {\r\n\r\n                if (message != \"\") message += \"\\n\";\r\n\r\n                message += \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden der von ihr implementierten Interfaces implementieren: \";\r\n\r\n                message += missingInterfaceMethods.map((m) => m.signature).join(\", \");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return { message: message, missingMethods: missingAbstractMethods.concat(missingInterfaceMethods) };\r\n\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        let id = a.identifier;\r\n        if (a instanceof Klass) id = a.getNonGenericIdentifier();\r\n\r\n        while (c != null) {\r\n            if (c.getNonGenericIdentifier() == id) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = <RuntimeObject>value.value;\r\n\r\n        if (object == null) {\r\n            return \"null\";\r\n        }\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            let v = object.getValue(attribute.index);\r\n            if (attribute.type instanceof PrimitiveType) {\r\n                s += attribute.identifier + \":&nbsp;\" + attribute.type.debugOutput(v, maxLength / 2);\r\n            } else {\r\n                s += attribute.identifier + \":&nbsp; {...}\";\r\n            }\r\n            if (i < attributes.length - 1) {\r\n                s += \",&nbsp;\";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Klass {\r\n        // Klass.count++;\r\n\r\n        let newKlass: Klass = Object.create(this);\r\n\r\n        newKlass.implements = this.implements.slice(0);\r\n        newKlass.usagePositions = new Map();\r\n        newKlass.isGenericVariantFrom = this;\r\n\r\n        return newKlass;\r\n    }\r\n\r\n}\r\n\r\nexport class StaticClass extends Type {\r\n\r\n    baseClass: StaticClass;\r\n    Klass: Klass;\r\n    // TODO: Initialize\r\n    classObject: RuntimeObject;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    constructor(klass: Klass) {\r\n        super();\r\n\r\n        this.Klass = klass;\r\n        this.identifier = klass.identifier;\r\n\r\n        if (klass.baseClass != null) {\r\n            this.baseClass = klass.baseClass.staticClass;\r\n        }\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.Klass.module,\r\n            statements: [],\r\n            labelManager: null\r\n        }\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = this.classObject;\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            s += attribute.identifier + \": \" + object == null ? '---' : attribute.type.debugOutput(object.getValue(attribute.index), maxLength / 2);\r\n            if (i < attributes.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        this.attributes.push(attribute);\r\n        this.attributeMap.set(attribute.identifier, attribute);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        return null;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(upToVisibility), identifier, parameterTypes,\r\n            this.Klass.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this class and all of its base classes\r\n     * @param isStatic returns only static methods if true\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.slice().filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || identifier == method.identifier);\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? Visibility.public : Visibility.protected;\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all attributes of this class and all of its base classes\r\n     * @param isStatic return only static attributes if true\r\n     */\r\n    public getAttributes(visibilityUpTo: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = this.attributes.filter((attribute) => {\r\n            return attribute.visibility <= visibilityUpTo;\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let visibilityUpToBaseClass = visibilityUpTo == Visibility.public ? visibilityUpTo : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(visibilityUpToBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass } {\r\n\r\n        let error = \"\";\r\n        let notFound = false;\r\n        let attribute = this.attributeMap.get(identifier);\r\n\r\n        if (attribute == null) {\r\n            notFound = true;\r\n            error = \"Das Attribut \" + identifier + \" konnte nicht gefunden werden.\";\r\n        } else if (attribute.visibility > upToVisibility) {\r\n            error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist hier daher nicht sichtbar.\";\r\n            attribute = null;\r\n        }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttributeWithError = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (notFound) {\r\n                return baseClassAttributeWithError;\r\n            }\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: !notFound, staticClass: this };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        while (c != null) {\r\n            if (c == a) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport class Interface extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Interface;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    public module: Module;\r\n\r\n    public extends: Interface[] = [];\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Interface = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    getThisOrExtendedInterface(identifier: String) {\r\n        if (this.getNonGenericIdentifier() == identifier) return this;\r\n        for (let if1 of this.extends) {\r\n            let if2 = if1.getThisOrExtendedInterface(identifier);\r\n            if (if2 != null) return if2;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Interface {\r\n        // Interface.count++;\r\n        let newInterface: Interface = Object.create(this);\r\n\r\n        newInterface.usagePositions = new Map();\r\n        newInterface.isGenericVariantFrom = this;\r\n\r\n        return newInterface;\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCompletionItems(leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let method of this.getMethods()) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        if (value.value == null) {\r\n            return \"null\";\r\n        } else {\r\n            if (value.value instanceof RuntimeObject) {\r\n                return value.value.class.debugOutput(value);\r\n            } else {\r\n                return \"{...}\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            return booleanPrimitiveTypeCopy;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    methodsWithSubInterfaces: Method[];\r\n\r\n    /**\r\n     * returns all methods of this interface\r\n     * @param isStatic is not used in interfaces\r\n     */\r\n    public getMethods(): Method[] {\r\n\r\n        if (this.extends.length == 0) return this.methods;\r\n\r\n        if (this.methodsWithSubInterfaces != null) return this.methodsWithSubInterfaces;\r\n\r\n        let visitedInterfaces: { [key: string]: boolean } = {};\r\n        let visitedMethods: { [signature: string]: boolean } = {};\r\n\r\n        this.methodsWithSubInterfaces = this.methods.slice(0);\r\n        for (let m of this.methods) visitedMethods[m.signature] = true;\r\n        visitedInterfaces[this.identifier] = true;\r\n\r\n        let todo: Interface[] = this.extends.slice(0);\r\n\r\n        while (todo.length > 0) {\r\n            let interf = todo.pop();\r\n            for (let m of interf.methods) {\r\n                if (!visitedMethods[m.signature]) {\r\n                    this.methodsWithSubInterfaces.push(m);\r\n                    visitedMethods[m.signature] = true;\r\n                }\r\n            }\r\n            for (let i of interf.extends) {\r\n                if (!visitedInterfaces[i.identifier]) {\r\n                    todo.push(i);\r\n                    visitedInterfaces[i.identifier] = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.methodsWithSubInterfaces;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        return this.methodMap.get(identifier + parameterlist.id);\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type instanceof Interface) {\r\n            let nonGenericCastable = false;\r\n            if (type.getNonGenericIdentifier() == this.getNonGenericIdentifier()) {\r\n                nonGenericCastable = true;\r\n                if (this.typeVariables.length == 0) return true;\r\n                let type2 = <Interface>type;\r\n                if (this.typeVariables.length != type2.typeVariables.length) return false;\r\n                for (let i = 0; i < this.typeVariables.length; i++) {\r\n                    let tv = this.typeVariables[i];\r\n                    let tvOther = type2.typeVariables[i];\r\n                    if (!tvOther.type.canCastTo(tv.type)) return false;\r\n                }\r\n                return false;\r\n            } else {\r\n                for (let type1 of this.extends) {\r\n                    if (type1.canCastTo(type)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        } else {\r\n            if (type instanceof Klass && type.getNonGenericIdentifier() == \"Object\") {\r\n\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // return (type instanceof Klass) || (type instanceof Interface);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[], searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(), identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction findSuitableMethods(methodList: Method[], identifier: string, parameterTypes: Type[],\r\n    classIdentifier: string,\r\n    searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n    let suitableMethods: Method[] = [];\r\n    let howManyCastingsMax: number = 10000;\r\n    let error = null;\r\n\r\n    let oneWithCorrectIdentifierFound = false;\r\n\r\n    for (let m of methodList) {\r\n\r\n        let howManyCastings = 0;\r\n        if (m.identifier == identifier || m.isConstructor && searchConstructor) {\r\n\r\n            oneWithCorrectIdentifierFound = true;\r\n\r\n            let isEllipsis = m.hasEllipsis();\r\n            if (m.getParameterCount() == parameterTypes.length || (isEllipsis && m.getParameterCount() <= parameterTypes.length)) {\r\n\r\n                let suits = true;\r\n\r\n                let i = 0;\r\n\r\n                for (i = 0; i < m.getParameterCount() - (isEllipsis ? 1 : 0); i++) {\r\n                    let mParameterType = m.getParameterType(i);\r\n                    let givenType = parameterTypes[i];\r\n\r\n                    if (givenType == null) {\r\n                        suits = false; break;\r\n                    }\r\n\r\n                    if (mParameterType == givenType) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (givenType.canCastTo(mParameterType)) {\r\n                        howManyCastings++;\r\n                        continue;\r\n                    }\r\n\r\n                    suits = false;\r\n                    break;\r\n                }\r\n\r\n                // Ellipsis!\r\n                if (suits && isEllipsis) {\r\n                    let mParameterEllipsis = m.getParameter(i);\r\n                    let mParameterTypeEllispsis = (<ArrayType>mParameterEllipsis.type).arrayOfType;\r\n\r\n\r\n                    for (let j = i; j < parameterTypes.length; j++) {\r\n                        let givenType = parameterTypes[i];\r\n\r\n                        if (givenType == null) {\r\n                            suits = false; break;\r\n                        }\r\n\r\n                        if (mParameterTypeEllispsis == givenType) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (givenType.canCastTo(mParameterTypeEllispsis)) {\r\n                            howManyCastings++;\r\n                            continue;\r\n                        }\r\n\r\n                        suits = false;\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n                if (suits && howManyCastings <= howManyCastingsMax) {\r\n                    if (howManyCastings < howManyCastingsMax) {\r\n                        suitableMethods = [];\r\n                    }\r\n                    suitableMethods.push(m);\r\n                    howManyCastingsMax = howManyCastings;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length == 0) {\r\n\r\n        if (oneWithCorrectIdentifierFound) {\r\n            if (parameterTypes.length == 0) {\r\n                error = searchConstructor ? \"Es gibt keinen parameterlosen Konstruktor der Klasse \" + classIdentifier : \"Die vorhandenen Methoden mit dem Bezeichner \" + identifier + \" haben alle mindestens einen Parameter. Hier wird aber kein Parameterwert übergeben.\";\r\n            } else {\r\n                let typeString = parameterTypes.map(type => type?.identifier).join(\", \");\r\n                error = searchConstructor ? `Die Parametertypen (${typeString}) passen zu keinem Konstruktor der Klasse ${classIdentifier}` : `Die Parametertypen (${typeString}) passen zu keiner der vorhandenen Methoden mit dem Bezeichner ${identifier}.`;\r\n            }\r\n        } else {\r\n            error = \"Der Typ \" + classIdentifier + \" besitzt keine Methode mit dem Bezeichner \" + identifier + \".\";\r\n            if (identifier == 'setCenter') {\r\n                error += ' Tipp: Die Methode setCenter der Klasse Shape wurde umbenannt in \"moveTo\".'\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length > 1) {\r\n        suitableMethods = suitableMethods.slice(0, 1);\r\n        // error = \"Zu den gegebenen Parametern hat der Typ \" + classIdentifier + \" mehrere passende Methoden.\";\r\n    }\r\n\r\n    return {\r\n        error: error,\r\n        methodList: suitableMethods\r\n    };\r\n\r\n}\r\n\r\nexport function getVisibilityUpTo(objectType: Klass | StaticClass, currentClassContext: Klass | StaticClass): Visibility {\r\n\r\n    if (currentClassContext == null) {\r\n        return Visibility.public;\r\n    }\r\n\r\n    if (objectType instanceof StaticClass) objectType = objectType.Klass;\r\n    if (currentClassContext instanceof StaticClass) currentClassContext = currentClassContext.Klass;\r\n\r\n    if (objectType == currentClassContext) {\r\n        return Visibility.private;\r\n    }\r\n\r\n    if (currentClassContext.hasAncestorOrIs(objectType)) {\r\n        return Visibility.protected;\r\n    }\r\n\r\n    return Visibility.public;\r\n\r\n}\r\n\r\n","import { Method, Attribute, Value, Type, Parameterlist, PrimitiveType } from \"./Types.js\";\r\nimport { TokenType } from \"../lexer/Token.js\";\r\nimport { intPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Visibility } from \"./Class.js\";\r\n\r\nexport class ArrayType extends Type {\r\n\r\n    public arrayOfType: Type;\r\n    private lengthAttribute: Attribute;\r\n\r\n    constructor(arrayOfType: Type){\r\n        super();\r\n        this.arrayOfType = arrayOfType;\r\n        this.identifier = \"Array\";\r\n\r\n        if(arrayOfType != null){\r\n            this.identifier = arrayOfType.identifier + \"[]\";\r\n        }\r\n\r\n        this.lengthAttribute = new Attribute(\"length\", intPrimitiveType, (object: Value) => {\r\n            return (<any[]>object.value).length;\r\n        }, false, Visibility.public, true);\r\n    }   \r\n\r\n    public equals(type:Type): boolean{\r\n        return (type instanceof ArrayType) && type.arrayOfType.equals(this.arrayOfType);\r\n    }\r\n\r\n    public get id():string{\r\n        return this.arrayOfType.identifier + \"[]\";\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        if(operation == TokenType.referenceElement){\r\n            return this.arrayOfType;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        if(operation == TokenType.referenceElement){\r\n            return <any[]>firstOperand.value[<number>secondOperand.value];\r\n        }\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, signature: Parameterlist): Method{\r\n        return null;\r\n    }\r\n\r\n    public getAttribute(identifier: string): Attribute{\r\n        if(identifier == \"length\"){\r\n            return this.lengthAttribute;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean{\r\n\r\n        if(!(type instanceof ArrayType)){\r\n            return false;\r\n        }\r\n\r\n        return this.arrayOfType.canCastTo(type.arrayOfType);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        let array = (<Value[]>value.value).slice();\r\n        let destType = (<ArrayType><unknown>type).arrayOfType;\r\n\r\n        for(let a of array){\r\n            this.arrayOfType.castTo(a, destType);\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            value: array\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40):string {\r\n\r\n        let length: number = 0;\r\n\r\n        if(value.value != null){\r\n\r\n            let s: string = \"[\";\r\n\r\n                let a: Value[] = <Value[]>value.value;\r\n\r\n                for(let i = 0; i < a.length; i++){\r\n\r\n                    let v = a[i];\r\n\r\n                    let s1 = v.type.debugOutput(v, maxLength/2);\r\n\r\n                    s += s1;\r\n                    if(i < a.length - 1) s += \",&nbsp;\";\r\n                    length += s1.length;\r\n\r\n                    if(length > maxLength) break;\r\n\r\n                }\r\n\r\n            return s + \"]\"\r\n\r\n        } else return \"null\";\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Method, Parameterlist, Value } from \"./Types.js\";\r\nimport { stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\n// neu:\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { type } from \"jquery\";\r\nimport { json } from \"express\";\r\nimport { ArrayType } from \"./Array.js\";\r\n\r\n\r\n/**\r\n * Base class for all classes\r\n */\r\n\r\nexport class ObjectClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Object\", module, \"Basisklasse aller Klassen\");\r\n\r\n        // stringPrimitiveType is used here before it is initialized. This problem is solved\r\n        // in the constructor of StringprimitiveType.\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return \"(\" + (<RuntimeObject><unknown>parameters[0].value).class.identifier + \")\";\r\n\r\n            }, false, false));\r\n\r\n\r\n        // // Add default parameterless constructor\r\n        // let m = new Method(\"Object\", new Parameterlist([]), null,\r\n        // (parameters) => {\r\n\r\n        // }, false, false);\r\n        \r\n        // m.isConstructor = true;\r\n\r\n        // this.addMethod(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class IntegerClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Integer\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", intPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ int annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", intPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ int annehmen kann\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean{\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"int-wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen int-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[1].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class FloatClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Float\", null, \"Wrapper-Klasse, um float-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ float\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt, indem die übergebene Zeichenkette in einen float-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Float-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseFloat\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen float-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value } from \"../Types.js\";\r\n\r\n\r\nexport class CharacterClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Character\", null, \"Wrapper-Klasse, um char-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [charPrimitiveType, stringPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Character\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Character-Objekt\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([]), charPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Character-Objekt in einen char-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[0].value).charCodeAt(0);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den char-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"digit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Gibt den numerischen Wert des Zeichens zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"forDigit\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value).toString(parameters[2].value).charAt(0);\r\n            }, false, true, \"Gibt den übergebenen Wert als Ziffer im Zahlensystem zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"getNumericValue\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).charCodeAt(0);\r\n            }, false, true, \"Wandelt das Zeichen in einen numerischen Wert (Unicode-Wert) um.\"));\r\n\r\n        this.addMethod(new Method(\"isLetter\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen ist.\"));\r\n\r\n        this.addMethod(new Method(\"isLetterOrDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen oder eine Ziffer ist.\"));\r\n\r\n        this.addMethod(new Method(\"isDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen eine Ziffer ist.\"));\r\n\r\n            this.addMethod(new Method(\"isWhitespace\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[ \\r\\n\\t]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein Leerzeichen, Tabulatorzeichen oder Zeilenumbruch ist.\"));\r\n\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleUpperCase();\r\n            }, false, true, \"Wandelt das Zeichen in Großschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleLowerCase();\r\n            }, false, true, \"Wandelt das Zeichen in Kleinschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den char-Wert in ein Character-Objekt um.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass, Visibility } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Attribute } from \"../Types.js\";\r\n\r\n\r\nexport class BooleanClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Boolean\", null, \"Wrapper-Klasse, um boolean-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"TRUE\", this, (value) => { value.value = true }, true, Visibility.public, true, \"das Boolean-Objekt, das TRUE repräsentiert\"));\r\n        this.addAttribute(new Attribute(\"FALSE\", this, (value) => { value.value = false }, true, Visibility.public, true, \"das Boolean-Objekt, das FALSE repräsentiert\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [booleanPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1] != null && parameters[1].value.toLowerCase() == \"true\";\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt: Es nimmt genau dann den Wert true an, wenn die übergebene Zeichenkette ohne Berücksichtigung von Klein-/Großschreibung den Wert \\\"true\\\" hat.\", true));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Boolean-Objekt in einen boolean-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                return v0 == v1 ? 0 : 1;\r\n            }, false, false, \"Gibt genau dann 0 zurück, wenn der Wert des Objekts gleich dem übergebenen Wert ist, ansonsten 1.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<boolean>parameters[0].value) ? 0 : 1;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den boolean-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den boolean-Wert in ein Boolean-Objekt um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n        this.addMethod(new Method(\"parseBoolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, floatPrimitiveType, doublePrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class DoubleClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Double\", null, \"Wrapper-Klasse, um double-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ double\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt, indem die übergebene Zeichenkette in einen double-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Double-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseDouble\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen double-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass, setBooleanPrimitiveTypeCopy } from \"./Class.js\";\r\nimport { ObjectClass } from \"./ObjectClass.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\nimport { IntegerClass } from \"./boxedTypes/IntegerClass.js\";\r\nimport { FloatClass } from \"./boxedTypes/FloatClass.js\";\r\nimport { CharacterClass } from \"./boxedTypes/CharacterClass.js\";\r\nimport { BooleanClass } from \"./boxedTypes/BooleanClass.js\";\r\nimport { DoubleClass } from \"./boxedTypes/DoubleClass.js\";\r\n\r\nexport class NullType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"null\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"null\";\r\n    }\r\n}\r\n\r\nexport class VarType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"var\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"var\";\r\n    }\r\n}\r\n\r\nexport class IntPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"int\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.modulo]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.division]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.tilde]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n\r\n            // binary ops\r\n            [TokenType.OR]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.XOR]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.ampersand]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftLeft]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRight]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRightUnsigned]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.integerConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            };\r\n        }\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == charPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: String.fromCharCode(<number>value.value)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value / <number>(secondOperand.value));\r\n                }\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.modulo:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value % <number>(secondOperand.value));\r\n                }\r\n                return 1;\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.tilde:\r\n                return ~value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n            case TokenType.OR:\r\n                return value | <number>(secondOperand.value);\r\n\r\n            case TokenType.XOR:\r\n                return value ^ <number>(secondOperand.value);\r\n\r\n            case TokenType.ampersand:\r\n                return value & <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftLeft:\r\n                return value << <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRight:\r\n                return value >> <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRightUnsigned:\r\n                return value >>> <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class FloatPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"float\";\r\n\r\n        this.description = \"Fließkommazahl mit einfacher Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": floatPrimitiveType, \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.negation]: { \"none\": floatPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, doublePrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class DoublePrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"double\";\r\n\r\n        this.description = \"Fließkommazahl mit doppelter Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": doublePrimitiveType, \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.negation]: { \"none\": doublePrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, floatPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == floatPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BooleanPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"boolean\";\r\n\r\n        this.description = \"boolescher Wert (true oder false)\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType },\r\n            [TokenType.and]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.or]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.not]: { \"none\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"boolean\": booleanPrimitiveType },\r\n        };\r\n\r\n        this.canCastToMap = {\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"boolean\": { automatic: true, needsStatement: false },\r\n            \"Boolean\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.booleanConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <boolean>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <boolean>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <boolean>(secondOperand.value);\r\n\r\n            case TokenType.and:\r\n                return value && <boolean>(secondOperand.value);\r\n\r\n            case TokenType.or:\r\n                return value || <boolean>(secondOperand.value);\r\n\r\n            case TokenType.not:\r\n                return !value;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <boolean>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class VoidPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"void\";\r\n\r\n        this.description = \"leerer Rückgabewert\"\r\n\r\n        this.operationTable = {\r\n        };\r\n\r\n        this.canCastToMap = {};\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.keywordVoid;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"void\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class StringPrimitiveType extends Klass {\r\n\r\n    private operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.stringConstant;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            return super.getResultType(operation, secondOperandType);\r\n        }\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"String\", null, \"Ein Objekt der Klasse String speichert eine Zeichenkette.\");\r\n        this.baseClass = baseClass;\r\n        let stringClass = this;\r\n        baseClass.methods.filter(m => m.identifier == \"toString\").forEach(m => m.returnType = stringClass);\r\n    }\r\n\r\n    init() {\r\n        this.operationTable = {\r\n            [TokenType.plus]: {\r\n                \"String\": stringPrimitiveType, \"int\": stringPrimitiveType,\r\n                \"float\": stringPrimitiveType, \"double\": doublePrimitiveType,\r\n                \"boolean\": stringPrimitiveType, \"char\": stringPrimitiveType\r\n            },\r\n            [TokenType.equal]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"String\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n\r\n        this.addMethod(new Method(\"length\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).length; }, false, false, \"Länge der Zeichenkette, d.h. Anzahl der Zeichen in der Zeichenkette.\"));\r\n        this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return <string>parameters[0].value == <string>(parameters[1].value); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (unter Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { caseFirst: 'upper' }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"compareToIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { sensitivity: \"accent\" }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"equalsIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLowerCase() == (<string>(parameters[1].value).toLowerCase()); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (**ohne** Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"endsWith\", new Parameterlist([{ identifier: \"suffix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).endsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = suffix) endet. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"startsWith\", new Parameterlist([{ identifier: \"präfix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).startsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = präfix) beginnt. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleLowerCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Großbuchstaben durch den entsprechenden Kleinbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleUpperCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Kleinbuchstaben durch den entsprechenden Großbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value)); }, false, false, \"Gibt das hintere Ende der Zeichenkette ab **beginIndex** zurück. **beginIndex** == 1 bedeutet, dass die Zeichenkette ab dem 2.(!) Zeichen zurückgegeben wird. \"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        { identifier: \"endIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die Teil-Zeichenkette von **beginIndex** bis **endIndex** zurück.\\n**Vorsicht: ** beginIndex und endIndex sind nullbasiert, d.h. beginIndex == 0 bedeutet die Position vor dem ersten Zeichen.\"));\r\n        this.addMethod(new Method(\"trim\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).trim(); }, false, false, \"Gibt die Zeichenkette zurück, die entsteht, wenn man am Anfang und Ende der Zeichenkette alle Leerzeichen, Tabs und Zeilenumbrüche entfernt.\"));\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)) == \"\"; }, false, false, \"Gibt genau dann wahr zurück, wenn die Zeichenkette leer ist.\\n**Warnung: ** Die Methode darf nicht mit dem '''null'''-Objekt aufgerufen werden!\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex mit der Suche begonnen.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex - von rechts her beginnend - gesucht.\"));\r\n        this.addMethod(new Method(\"replace\", new Parameterlist([\r\n            { identifier: \"target\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).replace(<string>(parameters[1].value), <string>(parameters[2].value)); }, false, false, \"Ersetzt alle Vorkommen von **target** durch **replacement** und gibt die entstandene Zeichenkette zurück. Die Zeichenkette selbst wird nicht verändert.\"));\r\n        this.addMethod(new Method(\"replaceAll\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **alle** Fundstellen durch **replacement**.\"));\r\n        this.addMethod(new Method(\"replaceFirst\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **die erste** Fundstelle durch **replacement**.\"));\r\n        this.addMethod(new Method(\"split\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), new ArrayType(stringPrimitiveType),\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                let strings = (<string>(parameters[0].value)).split(regExp);\r\n                let values: Value[] = [];\r\n                for (let s of strings) {\r\n                    values.push({ type: stringPrimitiveType, value: s });\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, \"Teilt die Zeichenkette an den Stellen, die durch den regulären Ausdruck (regex) definiert sind, in Teile auf. Die Fundstellen des regex werden dabei weggelassen. Gibt die Teile als String-Array zurück.\"));\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType || secondOperand.type == charPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else if (secondOperand.type == booleanPrimitiveType) {\r\n                    return value + <boolean>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.lower:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) < 0;\r\n                // return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) > 0;\r\n                // return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) <= 0;\r\n                // return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) >= 0;\r\n                // return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n            case TokenType.keywordInstanceof:\r\n                return super.compute(operation, firstOperand, secondOperand);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return '\"' + <string>value.value + '\"';\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class CharPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = \"\\u0000\";\r\n\r\n        this.identifier = \"char\";\r\n\r\n        this.description = \"ein Zeichen\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"char\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: true, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: true },\r\n            \"String\": { automatic: true, needsStatement: false },\r\n            \"char\": { automatic: true, needsStatement: false },\r\n            \"Character\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.charConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return value;\r\n        }\r\n\r\n        if (type == intPrimitiveType || type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: (<string>value.value).charCodeAt(0)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"'\" + <string>value.value + \"'\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport var voidPrimitiveType = new VoidPrimitiveType();\r\nexport var intPrimitiveType = new IntPrimitiveType();\r\nexport var floatPrimitiveType = new FloatPrimitiveType();\r\nexport var doublePrimitiveType = new DoublePrimitiveType();\r\nexport var booleanPrimitiveType = new BooleanPrimitiveType();\r\nsetBooleanPrimitiveTypeCopy(booleanPrimitiveType);\r\nexport var objectType = new ObjectClass(null);\r\nexport var stringPrimitiveType = new StringPrimitiveType(objectType);\r\nexport var charPrimitiveType = new CharPrimitiveType();\r\nexport var nullType = new NullType();\r\nexport var varType = new VarType();\r\n\r\nexport var IntegerType = new IntegerClass(objectType);\r\nexport var FloatType = new FloatClass(objectType);\r\nexport var DoubleType = new DoubleClass(objectType);\r\nexport var CharacterType = new CharacterClass(objectType);\r\nexport var BooleanType = new BooleanClass(objectType);\r\n\r\nexport var TokenTypeToDataTypeMap: { [tt: number]: Type } = {\r\n    [TokenType.integerConstant]: intPrimitiveType,\r\n    [TokenType.floatingPointConstant]: floatPrimitiveType,\r\n    [TokenType.booleanConstant]: booleanPrimitiveType,\r\n    [TokenType.stringConstant]: stringPrimitiveType,\r\n    [TokenType.charConstant]: charPrimitiveType,\r\n    [TokenType.keywordNull]: nullType\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\nimport { text } from \"express\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.and:\r\n                    if (this.nextChar == \"&\") {\r\n                        this.pushToken(TokenType.and, \"&&\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ANDAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.ampersand, \"&\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.or:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ORAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.OR, \"|\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.XOR:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.XORAssigment, \"^=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.XOR, \"^\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.multiplication:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.multiplicationAssignment, \"*=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.multiplication, \"*\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.not:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.notEqual, \"!=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.not, \"!\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.divisionAssignment, \"/=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    } else if (this.nextChar == '/') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.modulo:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.moduloAssignment, \"%=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.modulo, \"/\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.plus:\r\n                    if (this.nextChar == '+') {\r\n                        this.pushToken(TokenType.doublePlus, '++');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.plusAssignment, '+=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.plus, '+');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '<') {\r\n                        this.lexShiftLeft();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '>') {\r\n                        this.lexShiftRight();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.dot:\r\n                    if (this.nextChar == '.' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == \".\") {\r\n                        this.pushToken(TokenType.ellipsis, '...');\r\n                        this.next();\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.dot, '.');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n\r\n                case TokenType.assignment:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.equal, '==');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.assignment, '=');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.minus:\r\n                    if (this.nextChar == '-') {\r\n                        this.pushToken(TokenType.doubleMinus, '--');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    }\r\n                    else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.minusAssignment, '-=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexCharacterConstant();\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant();\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n    lexShiftRight(){\r\n        this.next(); // Consume first > of >>\r\n\r\n        if(this.nextChar == \">\"){\r\n            this.lexShiftRightUnsigned();\r\n        } else if(this.nextChar == \"=\"){\r\n            this.pushToken(TokenType.shiftRightAssigment, \">>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRight, \">>\");\r\n            this.next(); // Consume second >\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftRightUnsigned(){\r\n        this.next(); // Consume second > of >>>\r\n\r\n        if(this.nextChar == \"=\"){\r\n            this.pushToken(TokenType.shiftRightUnsignedAssigment, \">>>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRightUnsigned, \">>>\");\r\n            this.next(); // Consume next\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftLeft(){\r\n        this.next(); // Consume first < of <<\r\n\r\n        if(this.nextChar == '='){\r\n            this.pushToken(TokenType.shiftLeftAssigment, \"<<=\")\r\n            this.next(); // Consume second <\r\n            this.next(); // Consume =\r\n        } else{\r\n            this.pushToken(TokenType.shiftLeft, \"<<\")\r\n            this.next(); // Consume second <\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                if (this.nextChar == \"u\") {\r\n                    this.next();\r\n\r\n                } else {\r\n                    let escapeChar = EscapeSequenceList[this.nextChar];\r\n                    if (escapeChar == null) {\r\n                        this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                    } else {\r\n                        char = escapeChar;\r\n                        this.next();\r\n                    }\r\n                }\r\n            } else if (char == '\"') {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"//\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n\r\n        this.next(); // consume @\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                case TokenType.keywordPrint:\r\n                case TokenType.keywordPrintln:\r\n                    if (this.nonSpaceLastTokenType == TokenType.dot) {\r\n                        this.pushToken(TokenType.identifier, text, line, column);\r\n                    } else {\r\n                        this.pushToken(tt, text, line, column);\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.keywordSwitch:\r\n                    switchHappend = true;\r\n                    break;\r\n                case TokenType.keywordCase:\r\n                case TokenType.keywordDefault:\r\n                    // outdent: line with case:\r\n                    if (t.position.column > 3) {\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                    }\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            if(lastNonSpaceToken.position.line == t.position.line){\r\n                                this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let nextNonSpaceToken = this.getNextNonSpaceToken(i, tokenlist);\r\n\r\n                        // no additional indent after \"case 12 :\"\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt) && lastNonSpaceToken?.tt != TokenType.colon;\r\n                        let nextTokenIsOperator = this.isBinaryOperator(nextNonSpaceToken.tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline || nextNonSpaceToken.tt == TokenType.comment) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.assignment, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space || tokenlist[j].tt == TokenType.return)){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.colon;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token.js\";\r\nimport { Type, Variable, Method } from \"../types/Types.js\";\r\nimport { Klass, StaticClass } from \"../types/Class.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\n\r\n\r\nexport class SymbolTable {\r\n\r\n    static maxId: number = 0;\r\n\r\n    public id = SymbolTable.maxId++;\r\n\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    beginsNewStackframe: boolean = false;\r\n    stackframeSize: number;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    variableMap: Map<string, Variable> = new Map();\r\n\r\n    classContext: Klass | StaticClass = null;\r\n    method: Method = null;\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n        this.classContext = parentSymbolTable == null ? null : parentSymbolTable.classContext;\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n            this.method = this.parent.method;\r\n        }\r\n    }\r\n\r\n    getImitation(): SymbolTable {\r\n        let imitation = new SymbolTable(null, { line: 1, column: 1, length: 0 }, { line: 1, column: 10000, length: 0 });\r\n\r\n        imitation.beginsNewStackframe = true;\r\n        let st: SymbolTable = this;\r\n\r\n        let maxStackPos = -1;\r\n\r\n        while (st != null) {\r\n            if (st.classContext != null) {\r\n                imitation.classContext = st.classContext;\r\n            }\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                if (imitation.variableMap.get(identifier) == null) {\r\n                    imitation.variableMap.set(identifier, variable);\r\n                }\r\n\r\n                if (variable.stackPos > maxStackPos) {\r\n                    maxStackPos = variable.stackPos;\r\n                }\r\n\r\n            });\r\n\r\n            st = st.parent;\r\n\r\n        }\r\n\r\n        imitation.stackframeSize = maxStackPos + 1;\r\n\r\n        return imitation;\r\n    }\r\n\r\n\r\n\r\n    getLocalVariableCompletionItems(rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        this.variableMap.forEach((variable, identifier) => {\r\n\r\n            //@ts-ignore\r\n            if(identifier == 0) return;\r\n\r\n            // TODO: Zu einem Objekt mit identifier == 0 kommt es, wenn man ArrayList<In tippt und dann <Strg + Leertaste>.\r\n\r\n            if (variable != null && variable.type != null && variable.type instanceof ArrayType) {\r\n                completionItems.push({\r\n                    label: identifier + \"[]\",\r\n                    insertText: identifier + \"[$0]\",\r\n                    documentation: \"Element des Arrays\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: rangeToReplace\r\n                });\r\n\r\n            }\r\n            \r\n            completionItems.push({\r\n                label: identifier,\r\n                insertText: identifier,\r\n                kind: monaco.languages.CompletionItemKind.Variable,\r\n                range: rangeToReplace\r\n            });\r\n\r\n\r\n        });\r\n\r\n        if (this.parent != null && this.parent.classContext == this.classContext) {\r\n            completionItems = completionItems.concat(this.parent.getLocalVariableCompletionItems(rangeToReplace));\r\n        }\r\n\r\n        return completionItems;\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line) return column >= this.positionFrom.column;\r\n        if (line == this.positionTo.line) return column <= this.positionTo.column;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Program } from \"../parser/Program.js\";\r\nimport { Klass, Visibility } from \"./Class.js\";\r\nimport { Value, Attribute, Method, Parameterlist, Type } from \"./Types.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { EnumValueNode } from \"../parser/AST.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, objectType } from \"./PrimitiveTypes.js\";\r\n\r\nexport class EnumRuntimeObject extends RuntimeObject {\r\n\r\n    enumValue: EnumInfo;\r\n\r\n    constructor(en: Enum, enumValue: EnumInfo) {\r\n        super(en);\r\n        this.enumValue = enumValue;\r\n    }\r\n\r\n}\r\n\r\nexport type EnumInfo = {\r\n    identifier: string,\r\n    ordinal: number,\r\n    position?: TextPosition,\r\n    object?: EnumRuntimeObject,\r\n    constructorCallProgram?: Program\r\n}\r\n\r\n\r\nexport class Enum extends Klass {\r\n\r\n    enumInfoList: EnumInfo[] = [];\r\n    identifierToInfoMap: { [identifier: string]: EnumInfo } = {};\r\n    indexToInfoMap: { [index: number]: EnumInfo } = {};\r\n\r\n    valueList: Value = null;\r\n\r\n    getOrdinal(valueIdentifier: string): number {\r\n\r\n        let enumInfo: EnumInfo = this.identifierToInfoMap[valueIdentifier];\r\n        if (enumInfo == null) return -1;\r\n        return enumInfo.ordinal;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        let enumObject = <EnumRuntimeObject>value.value;\r\n        return this.identifier + \".\" + enumObject.enumValue.identifier;\r\n    }\r\n\r\n    constructor(identifier: string, module: Module, enumValueNodes: EnumValueNode[]) {\r\n\r\n        super(identifier, module);\r\n        this.baseClass = objectType;\r\n\r\n        let i: number = 0;\r\n\r\n        for (let evn of enumValueNodes) {\r\n\r\n            let attribute: Attribute = new Attribute(evn.identifier, this, null, true, Visibility.public, true);\r\n\r\n            if (evn.position != null) {\r\n                attribute.declaration = {\r\n                    module: module,\r\n                    position: evn.position\r\n                }\r\n\r\n                attribute.usagePositions.set(module, [evn.position]);\r\n            }\r\n\r\n            this.staticClass.addAttribute(\r\n                attribute\r\n            );\r\n\r\n\r\n            let ev: EnumInfo = {\r\n                identifier: evn.identifier,\r\n                ordinal: i++\r\n            }\r\n\r\n            this.enumInfoList.push(ev);\r\n            this.identifierToInfoMap[evn.identifier] = ev;\r\n            this.indexToInfoMap[ev.ordinal] = ev;\r\n\r\n        }\r\n\r\n        if(module.isSystemModule){\r\n            this.valueList = {\r\n                type: new ArrayType(this),\r\n                value: []\r\n            };\r\n            for(let ei of this.enumInfoList){\r\n\r\n                ei.object = new EnumRuntimeObject(this, ei);\r\n\r\n                this.valueList.value.push({\r\n                    type: this,\r\n                    value: ei.object\r\n                })\r\n            }\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.staticClass.addMethod(new Method(\"getValues\",\r\n            new Parameterlist([]), new ArrayType(this), (parameters: Value[]) => {\r\n\r\n                if (this.valueList == null) {\r\n\r\n                    let values = [];\r\n                    for (let vi of this.enumInfoList) {\r\n\r\n                        values.push({\r\n                            type: that,\r\n                            value: vi.object\r\n                        });\r\n\r\n                    }\r\n\r\n                    this.valueList = {\r\n                        type: new ArrayType(that),\r\n                        value: values\r\n                    }\r\n\r\n                }\r\n\r\n                return this.valueList.value;\r\n\r\n            }, false, true)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toString\",\r\n            new Parameterlist([]), stringPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.identifier;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toOrdinal\",\r\n            new Parameterlist([]), intPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.ordinal;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        return super.canCastTo(type);\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            let en = <EnumRuntimeObject>value.value;\r\n            return {\r\n                type: intPrimitiveType,\r\n                value: en.enumValue.ordinal\r\n            };\r\n        }\r\n\r\n        return super.castTo(value, type);\r\n    }\r\n\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, charPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Input\", module, \"Klasse mit statischen Methoden zur Eingabe von Text per Tastatur\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n        /**\r\n         * Same methods without default value:\r\n         */\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n    }\r\n\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, StaticClass, Visibility, getVisibilityUpTo } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, nullType, voidPrimitiveType, varType, doublePrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Type, Variable, Value, PrimitiveType, UsagePositions, Method, Heap, getTypeIdentifier, Parameterlist } from \"../types/Types.js\";\r\nimport { ASTNode, AttributeDeclarationNode, BinaryOpNode, ClassDeclarationNode, ConstantNode, DoWhileNode, ForNode, IdentifierNode, IfNode, IncrementDecrementNode, MethodcallNode, MethodDeclarationNode, NewObjectNode, ReturnNode, SelectArrayElementNode, SelectArributeNode, SuperconstructorCallNode, SuperNode, ThisNode, UnaryOpNode, WhileNode, LocalVariableDeclarationNode, ArrayInitializationNode, NewArrayNode, PrintNode, CastManuallyNode, EnumDeclarationNode, TermNode, SwitchNode, ScopeNode, ParameterNode, ForNodeOverCollecion, ConstructorCallNode } from \"./AST.js\";\r\nimport { LabelManager } from \"./LabelManager.js\";\r\nimport { Module, ModuleStore, MethodCallPosition } from \"./Module.js\";\r\nimport { AssignmentStatement, InitStackframeStatement, JumpAlwaysStatement, Program, Statement, BeginArrayStatement, NewObjectStatement, JumpOnSwitchStatement, Breakpoint, ExtendedForLoopCheckCounterAndGetElement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Enum, EnumInfo } from \"../types/Enum.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\n\r\ntype StackType = {\r\n    type: Type,\r\n    isAssignable: boolean,\r\n    isSuper?: boolean, // used for method calls with super.\r\n    withReturnStatement?: boolean\r\n};\r\n\r\nexport class CodeGenerator {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment,\r\n    TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.ANDAssigment, TokenType.ORAssigment,\r\n    TokenType.XORAssigment, TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    moduleStore: ModuleStore;\r\n    module: Module;\r\n\r\n    symbolTableStack: SymbolTable[];\r\n    currentSymbolTable: SymbolTable;\r\n\r\n    heap: Heap;\r\n\r\n    currentProgram: Program;\r\n\r\n    errorList: Error[];\r\n\r\n    nextFreeRelativeStackPos: number;\r\n\r\n    breakNodeStack: JumpAlwaysStatement[][];\r\n    continueNodeStack: JumpAlwaysStatement[][];\r\n\r\n    startAdhocCompilation(module: Module, moduleStore: ModuleStore, symbolTable: SymbolTable, heap: Heap): Error[] {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.symbolTableStack.push(symbolTable);\r\n        this.currentSymbolTable = symbolTable;\r\n\r\n        this.heap = heap;\r\n\r\n        let oldStackframeSize = symbolTable.stackframeSize;\r\n        this.nextFreeRelativeStackPos = oldStackframeSize;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain(true);\r\n\r\n        return this.errorList;\r\n\r\n    }\r\n\r\n    start(module: Module, moduleStore: ModuleStore) {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.currentSymbolTable = null;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.nextFreeRelativeStackPos = 0;\r\n\r\n        if (this.module.tokenList.length > 0) {\r\n            let lastToken = this.module.tokenList[this.module.tokenList.length - 1];\r\n            this.module.mainSymbolTable.positionTo = { line: lastToken.position.line, column: lastToken.position.column + 1, length: 1 };\r\n        }\r\n\r\n        this.symbolTableStack.push(this.module.mainSymbolTable);\r\n        this.currentSymbolTable = this.module.mainSymbolTable;\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain();\r\n\r\n        this.generateClasses();\r\n\r\n        this.lookForStaticVoidMain();\r\n\r\n        this.module.errors[3] = this.errorList;\r\n\r\n    }\r\n\r\n    lookForStaticVoidMain() {\r\n\r\n        let mainProgram = this.module.mainProgram;\r\n\r\n        if (mainProgram != null && mainProgram.statements.length > 2) return;\r\n\r\n        let mainMethod: Method = null;\r\n        let staticClass: StaticClass = null;\r\n        let classNode1: ASTNode;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n\r\n                let ct = classNode.resolvedType;\r\n\r\n                for (let m of ct.staticClass.methods) {\r\n                    if (m.identifier == \"main\" && m.parameterlist.parameters.length == 1) {\r\n                        let pt = m.parameterlist.parameters[0];\r\n                        if (pt.type instanceof ArrayType && pt.type.arrayOfType == stringPrimitiveType) {\r\n                            if (mainMethod != null) {\r\n                                this.pushError(\"Es existieren mehrere Klassen mit statischen main-Methoden.\", classNode.position);\r\n                            } else {\r\n                                mainMethod = m;\r\n                                staticClass = ct.staticClass;\r\n                                classNode1 = classNode;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (mainMethod != null) {\r\n\r\n            let position: TextPosition = mainMethod.usagePositions[0];\r\n            if (mainMethod.program != null && mainMethod.program.statements.length > 0) {\r\n                position = mainMethod.program.statements[0].position;\r\n            }\r\n\r\n            this.initCurrentProgram();\r\n\r\n            this.module.mainProgram = this.currentProgram;\r\n\r\n            this.pushStatements([{\r\n                type: TokenType.callMainMethod,\r\n                position: position,\r\n                stepFinished: false,\r\n                method: mainMethod,\r\n                staticClass: staticClass\r\n            }, {\r\n                type: TokenType.closeStackframe,\r\n                position: mainMethod.usagePositions.get(this.module)[0]\r\n            }\r\n            ], false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    generateClasses() {\r\n        if (this.module.classDefinitionsAST == null) return;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n                this.generateClass(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordEnum) {\r\n                this.generateEnum(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordInterface) {\r\n                let interf = classNode.resolvedType;\r\n                if (interf != null) {\r\n                    this.checkDoubleMethodDeclaration(interf);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    generateEnum(enumNode: EnumDeclarationNode) {\r\n\r\n        if (enumNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        let enumClass = <Enum>enumNode.resolvedType;\r\n\r\n        // this.pushUsagePosition(enumNode.position, enumClass);\r\n\r\n        this.currentSymbolTable.classContext = enumClass;\r\n        this.currentProgram = enumClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (enumClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // constructor calls\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        for (let enumValueNode of enumNode.values) {\r\n\r\n            if (enumValueNode.constructorParameters != null) {\r\n\r\n                let p: Program = {\r\n                    module: this.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                }\r\n\r\n                this.currentProgram = p;\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: enumValueNode.position,\r\n                    enumClass: enumClass,\r\n                    valueIdentifier: enumValueNode.identifier\r\n                });\r\n\r\n                this.processEnumConstructorCall(enumClass, enumValueNode.constructorParameters,\r\n                    enumValueNode.position, enumValueNode.commaPositions, enumValueNode.rightBracketPosition);\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.programEnd,\r\n                    position: enumValueNode.position,\r\n                    stepFinished: true\r\n                });\r\n\r\n                let enumInfo: EnumInfo = enumClass.identifierToInfoMap[enumValueNode.identifier];\r\n                enumInfo.constructorCallProgram = p;\r\n                enumInfo.position = enumValueNode.position;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = enumClass.staticClass;\r\n        this.currentProgram = enumClass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n        this.checkDoubleMethodDeclaration(enumClass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    processEnumConstructorCall(enumClass: Enum, parameterNodes: TermNode[],\r\n        position: TextPosition, commaPositions: TextPosition[], rightBracketPosition: TextPosition) {\r\n        let parameterTypes: Type[] = [];\r\n\r\n        for (let p of parameterNodes) {\r\n            let typeNode = this.processNode(p);\r\n            if (typeNode == null) continue;\r\n            parameterTypes.push(typeNode.type);\r\n        }\r\n\r\n        let methods = enumClass.getMethodsThatFitWithCasting(enumClass.identifier,\r\n            parameterTypes, true, Visibility.private);\r\n\r\n        this.module.pushMethodCallPosition(position, commaPositions, enumClass.getMethods(Visibility.private, enumClass.identifier), rightBracketPosition);\r\n\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            let srcType = parameterTypes[i];\r\n            if (!srcType.equals(destType)) {\r\n\r\n                if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n                    if (srcType.getCastInformation(destType).needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: null,\r\n                            newType: destType,\r\n                            stackPosRelative: -parameterTypes.length + 1 + i\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: parameterNodes[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            position: position,\r\n            stepFinished: true,\r\n            isSuperCall: false,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n    }\r\n\r\n    generateClass(classNode: ClassDeclarationNode) {\r\n\r\n        if (classNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        let klass = <Klass>classNode.resolvedType;\r\n\r\n        //this.pushUsagePosition(classNode.position, klass);\r\n\r\n        let inheritanceError = klass.checkInheritance();\r\n\r\n        if (inheritanceError.message != \"\") {\r\n            this.pushError(inheritanceError.message, classNode.position, \"error\", this.getInheritanceQuickFix(classNode.scopeTo, inheritanceError));\r\n        }\r\n\r\n        let baseClass = klass.baseClass;\r\n        if (baseClass != null && baseClass.module != klass.module && baseClass.visibility == Visibility.private) {\r\n            this.pushError(\"Die Basisklasse \" + baseClass.identifier + \" der Klasse \" + klass.identifier + \" ist hier nicht sichtbar.\", classNode.position);\r\n        }\r\n\r\n        this.currentSymbolTable.classContext = klass;\r\n        this.currentProgram = klass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.checkDoubleMethodDeclaration(klass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = klass.staticClass;\r\n        this.currentProgram = klass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n    }\r\n\r\n    checkDoubleMethodDeclaration(cie: Klass | Interface) {  // N.B.: Enum extends Klass\r\n\r\n        let signatureMap: { [key: string]: Method } = {};\r\n\r\n        for (let m of cie.methods) {\r\n\r\n            let signature = m.getSignatureWithReturnParameter();\r\n            if (signatureMap[signature] != null) {\r\n\r\n                let cieType: String = \"In der Klasse \";\r\n                if (cie instanceof Interface) cieType = \"Im Interface \";\r\n                if (cie instanceof Enum) cieType = \"Im Enum \";\r\n\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, m.usagePositions.get(this.module)[0], \"error\");\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, signatureMap[signature].usagePositions.get(this.module)[0], \"error\");\r\n\r\n            } else {\r\n                signatureMap[signature] = m;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getInheritanceQuickFix(position: TextPosition, inheritanceError: { message: string; missingMethods: Method[]; }): QuickFix {\r\n\r\n        let s: string = \"\";\r\n        for (let m of inheritanceError.missingMethods) {\r\n            s += \"\\tpublic \" + (m.returnType == null ? \" void\" : getTypeIdentifier(m.returnType)) + \" \" + m.identifier + \"(\";\r\n            s += m.parameterlist.parameters.map(p => getTypeIdentifier(p.type) + \" \" + p.identifier).join(\", \");\r\n            s += \") {\\n\\t\\t//TODO: Methode füllen\\n\\t}\\n\\n\";\r\n        }\r\n\r\n        return {\r\n            title: \"Fehlende Methoden einfügen\",\r\n            editsProvider: (uri) => {\r\n                return [\r\n                    {\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: { startLineNumber: position.line, startColumn: position.column - 1, endLineNumber: position.line, endColumn: position.column - 1 },\r\n                            text: s\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getSuperconstructorCalls(nodes: ASTNode[], superconstructorCallsFound: ASTNode[], isFirstStatement: boolean): boolean {\r\n        for(let node of nodes){\r\n            if(node.type == TokenType.superConstructorCall){\r\n\r\n                if(!isFirstStatement){\r\n                    if(superconstructorCallsFound.length > 0){\r\n                        this.pushError(\"Ein Konstruktor darf nur einen einzigen Aufruf des Superkonstruktors enthalten.\", node.position, \"error\");\r\n                    } else {\r\n                        this.pushError(\"Vor dem Aufruf des Superkonstruktors darf keine andere Anweisung stehen.\", node.position, \"error\");\r\n                    }\r\n                }\r\n\r\n                superconstructorCallsFound.push(node);\r\n                isFirstStatement = false;\r\n            } else if(node.type == TokenType.scopeNode && node.statements != null){\r\n                isFirstStatement = isFirstStatement && this.getSuperconstructorCalls(node.statements, superconstructorCallsFound, isFirstStatement);\r\n            } else {\r\n                isFirstStatement = false;\r\n            }\r\n        }\r\n        return isFirstStatement;\r\n    }\r\n\r\n\r\n    compileMethod(methodNode: MethodDeclarationNode) {\r\n        // Assumption: methodNode != null\r\n        let method = methodNode.resolvedType;\r\n\r\n        this.checkIfMethodIsVirtual(method);\r\n\r\n        if (method == null) return;\r\n\r\n        // this.pushUsagePosition(methodNode.position, method);\r\n\r\n        this.initCurrentProgram();\r\n        method.program = this.currentProgram;\r\n\r\n        this.pushNewSymbolTable(false, methodNode.scopeFrom, methodNode.scopeTo);\r\n        this.currentSymbolTable.method = method;\r\n\r\n        let stackPos: number = 1;\r\n\r\n        for (let v of method.getParameterList().parameters) {\r\n            v.stackPos = stackPos++;\r\n\r\n            this.currentSymbolTable.variableMap.set(v.identifier, v);\r\n        }\r\n\r\n        // \" + 1\" is for \"this\"-object\r\n        this.nextFreeRelativeStackPos = methodNode.parameters.length + 1;\r\n\r\n        if (method.isConstructor && this.currentSymbolTable.classContext instanceof Klass && methodNode.statements != null ) {\r\n            let c: Klass = this.currentSymbolTable.classContext;\r\n\r\n            let superconstructorCalls: ASTNode[] = [];\r\n            this.getSuperconstructorCalls(methodNode.statements, superconstructorCalls, true);\r\n\r\n            let superconstructorCallEnsured: boolean = superconstructorCalls.length > 0;\r\n\r\n            // if (methodNode.statements.length > 0 && methodNode.statements[0].type == TokenType.scopeNode) {\r\n            //     let stm = methodNode.statements[0].statements;\r\n            //     if (stm.length > 0 && [TokenType.superConstructorCall, TokenType.constructorCall].indexOf(stm[0].type) >= 0) {\r\n            //         superconstructorCallEnsured = true;\r\n            //     }\r\n            // } else if ([TokenType.superConstructorCall, TokenType.constructorCall].indexOf(methodNode.statements[0].type) >= 0) {\r\n            //     superconstructorCallEnsured = true;\r\n            // }\r\n\r\n            if (c != null && c.baseClass?.hasConstructor() && !c.baseClass?.hasParameterlessConstructor()) {\r\n                let error: boolean = false;\r\n                if (methodNode.statements == null || methodNode.statements.length == 0) error = true;\r\n                if (!error) {\r\n                    error = !superconstructorCallEnsured;\r\n                }\r\n                if (error) {\r\n                    let quickFix: QuickFix = null;\r\n                    let constructors = c.baseClass.methods.filter(m => m.isConstructor);\r\n                    if (constructors.length == 1) {\r\n                        let methodCall = \"super(\" + constructors[0].parameterlist.parameters.map(p => p.identifier).join(\", \") + \");\";\r\n                        let position = methodNode.position;\r\n                        quickFix = {\r\n                            title: 'Aufruf des Konstruktors der Basisklasse einfügen',\r\n                            //06.06.2020\r\n                            editsProvider: (uri) => {\r\n                                return [{\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: {\r\n                                            startLineNumber: position.line + 1, startColumn: 0, endLineNumber: position.line + 1, endColumn: 0,\r\n                                            message: \"\",\r\n                                            severity: monaco.MarkerSeverity.Error\r\n                                        },\r\n                                        text: \"\\t\\t\" + methodCall + \"\\n\"\r\n                                    }\r\n                                }\r\n                                ];\r\n                            }\r\n                        }\r\n                    }\r\n                    this.pushError(\"Die Basisklasse der Klasse \" + c.identifier + \" besitzt keinen parameterlosen Konstruktor, daher muss diese Konstruktordefinition mit einem Aufruf eines Konstruktors der Basisklasse (super(...)) beginnen.\",\r\n                        methodNode.position, \"error\", quickFix);\r\n                }\r\n            } else if (!superconstructorCallEnsured && c.baseClass?.hasParameterlessConstructor()) {\r\n                // invoke parameterless constructor\r\n                let baseClassConstructor = c.baseClass.getParameterlessConstructor();\r\n                this.pushStatements([\r\n                    // Push this-object to stack:\r\n                    {\r\n                        type: TokenType.pushLocalVariableToStack,\r\n                        position: methodNode.position,\r\n                        stackposOfVariable: 0\r\n                    },\r\n                    {\r\n                        type: TokenType.callMethod,\r\n                        method: baseClassConstructor,\r\n                        isSuperCall: true,\r\n                        position: methodNode.position,\r\n                        stackframeBegin: -1 // this-object followed by parameters\r\n                    }\r\n\r\n                ])\r\n            }\r\n        }\r\n\r\n        let actorClass = <Klass>this.moduleStore.getType(\"Actor\").type;\r\n        let methodIdentifiers = [\"act\", \"onKeyTyped\", \"onKeyDown\", \"onKeyUp\",\r\n            \"onMouseDown\", \"onMouseUp\", \"onMouseMove\", \"onMouseEnter\", \"onMouseLeave\"];\r\n        if (methodIdentifiers.indexOf(method.identifier) >= 0 && this.currentSymbolTable.classContext.hasAncestorOrIs(actorClass)) {\r\n            this.pushStatements([\r\n\r\n                {\r\n                    type: TokenType.returnIfDestroyed,\r\n                    position: methodNode.position\r\n                },\r\n            ]);\r\n        }\r\n\r\n        let withReturnStatement = this.generateStatements(methodNode.statements).withReturnStatement;\r\n\r\n        if (!withReturnStatement) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: methodNode.scopeTo,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: true,\r\n                leaveThisObjectOnStack: false\r\n            });\r\n\r\n            let rt = method.getReturnType();\r\n            if (!method.isConstructor && rt != null && rt != voidPrimitiveType) {\r\n                this.pushError(\"Die Deklaration der Methode verlangt die Rückgabe eines Wertes vom Typ \" + rt.identifier + \". Es fehlt (mindestens) eine entsprechende return-Anweisung.\", methodNode.position);\r\n            }\r\n        }\r\n\r\n        method.reserveStackForLocalVariables = this.nextFreeRelativeStackPos\r\n            - methodNode.parameters.length - 1;\r\n\r\n        this.popSymbolTable();\r\n        this.currentProgram.labelManager.resolveNodes();\r\n    }\r\n\r\n\r\n    /**\r\n     * checks if child classes have method with same signature\r\n     */\r\n    checkIfMethodIsVirtual(method: Method) {\r\n\r\n        let klass = this.currentSymbolTable.classContext;\r\n        if (klass != null) {\r\n\r\n            for (let mo of this.moduleStore.getModules(false)) {\r\n                for (let c of mo.typeStore.typeList) {\r\n                    if (c instanceof Klass && c != klass && c.hasAncestorOrIs(klass)) {\r\n                        for (let m of c.methods) {\r\n                            if (m != null && method != null && m.signature == method.signature) {\r\n                                method.isVirtual = true;\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initializeAttribute(attribute: AttributeDeclarationNode) {\r\n\r\n        if (attribute == null) return;\r\n\r\n        // assumption: attribute != null\r\n        if (attribute.identifier == null || attribute.initialization == null) return;\r\n\r\n        if (attribute.isStatic) {\r\n            this.pushStatements({\r\n                type: TokenType.pushStaticAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.resolvedType.identifier,\r\n                position: attribute.initialization.position,\r\n                klass: <StaticClass>(this.currentSymbolTable.classContext)\r\n            });\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.identifier,\r\n                position: attribute.initialization.position,\r\n                useThisObject: true\r\n            });\r\n        }\r\n\r\n\r\n        let initializationType = this.processNode(attribute.initialization);\r\n\r\n        if (initializationType != null && initializationType.type != null) {\r\n            if (!this.ensureAutomaticCasting(initializationType.type, attribute.attributeType.resolvedType)) {\r\n\r\n                if (attribute.attributeType.resolvedType == null) {\r\n                    this.pushError(\"Der Datentyp von \" + attribute.identifier + \" konnte nicht ermittelt werden. \", attribute.position);\r\n                } else {\r\n                    this.pushError(\"Der Wert des Term vom Datentyp \" + initializationType.type + \" kann dem Attribut \" + attribute.identifier + \" vom Typ \" + attribute.attributeType.resolvedType.identifier + \" nicht zugewiesen werden.\", attribute.initialization.position);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.assignment,\r\n                position: attribute.initialization.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: false\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    initCurrentProgram() {\r\n\r\n        this.currentProgram = {\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.currentProgram.labelManager = new LabelManager(this.currentProgram);\r\n\r\n        this.lastStatement = null;\r\n\r\n    }\r\n\r\n    generateMain(isAdhocCompilation: boolean = false) {\r\n\r\n        this.initCurrentProgram();\r\n\r\n        let position: TextPosition = { line: 1, column: 1, length: 0 };\r\n\r\n        let mainProgramAst = this.module.mainProgramAst;\r\n        if (mainProgramAst != null && mainProgramAst.length > 0 && mainProgramAst[0] != null) {\r\n            position = this.module.mainProgramAst[0].position;\r\n        }\r\n\r\n        if (!isAdhocCompilation) {\r\n            this.pushNewSymbolTable(true, position, { line: 100000, column: 1, length: 0 }, this.currentProgram);\r\n            this.heap = {};\r\n        }\r\n\r\n        this.module.mainProgram = this.currentProgram;\r\n\r\n        let hasMainProgram: boolean = false;\r\n\r\n        if (this.module.mainProgramAst != null && this.module.mainProgramAst.length > 0) {\r\n\r\n            hasMainProgram = true;\r\n            this.generateStatements(this.module.mainProgramAst);\r\n\r\n            if (isAdhocCompilation && this.lastStatement != null && this.lastStatement.type == TokenType.decreaseStackpointer) {\r\n                this.removeLastStatement();\r\n            }\r\n\r\n            this.lastPosition = this.module.mainProgramEnd;\r\n            if (this.lastPosition == null) this.lastPosition = { line: 100000, column: 0, length: 0 };\r\n            // if(this.lastPosition == null) this.lastPosition = {line: 100000, column: 0, length: 0};\r\n\r\n            this.currentSymbolTable.positionTo = this.lastPosition;\r\n            if (!isAdhocCompilation) this.popSymbolTable(this.currentProgram, true);\r\n            this.heap = null;\r\n\r\n            this.pushStatements({\r\n                type: TokenType.programEnd,\r\n                position: this.lastPosition,\r\n                stepFinished: true,\r\n                pauseAfterProgramEnd: true\r\n            }, true);\r\n\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        if (!isAdhocCompilation && !hasMainProgram) {\r\n            this.popSymbolTable(this.currentProgram);\r\n            this.heap = null;\r\n        }\r\n\r\n    }\r\n\r\n    ensureAutomaticCasting(typeFrom: Type, typeTo: Type, position?: TextPosition, nodeFrom?: ASTNode): boolean {\r\n\r\n        if (typeFrom == null) return false;\r\n\r\n        if (typeFrom.equals(typeTo)) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom == null || typeTo == null) return false;\r\n\r\n        if (!typeFrom.canCastTo(typeTo)) {\r\n\r\n            if (typeTo == booleanPrimitiveType && nodeFrom != null) {\r\n\r\n                this.checkIfAssignmentInstedOfEqual(nodeFrom);\r\n\r\n            }\r\n\r\n\r\n            return false;\r\n        }\r\n\r\n        if (typeFrom[\"unboxableAs\"] != null && typeFrom[\"unboxableAs\"].indexOf(typeTo) >= 0) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n\r\n            let toStringStatement = this.getToStringStatement(typeFrom, position);\r\n\r\n            if (toStringStatement != null) {\r\n                this.pushStatements(toStringStatement);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n\r\n        if (typeFrom instanceof PrimitiveType && (typeTo instanceof PrimitiveType || typeTo == stringPrimitiveType)) {\r\n            let castInfo = typeFrom.getCastInformation(typeTo);\r\n            if (!castInfo.automatic) {\r\n                return false;\r\n            }\r\n            if (castInfo.needsStatement) {\r\n                this.pushStatements({\r\n                    type: TokenType.castValue,\r\n                    newType: typeTo,\r\n                    position: position\r\n                });\r\n            }\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    getToStringStatement(type: Klass, position: TextPosition): Statement {\r\n        let toStringMethod = type.getMethodBySignature(\"toString()\");\r\n        if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n            return {\r\n                type: TokenType.callMethod,\r\n                position: position,\r\n                method: toStringMethod,\r\n                isSuperCall: false,\r\n                stackframeBegin: -1,\r\n                stepFinished: false\r\n            };\r\n\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    checkIfAssignmentInstedOfEqual(nodeFrom: ASTNode, conditionType?: Type) {\r\n        if (nodeFrom == null) return;\r\n\r\n        if (nodeFrom.type == TokenType.binaryOp && nodeFrom.operator == TokenType.assignment) {\r\n            let pos = nodeFrom.position;\r\n            this.pushError(\"= ist der Zuweisungsoperator. Du willst sicher zwei Werte vergleichen. Dazu benötigst Du den Vergleichsoperator ==.\",\r\n                pos, conditionType == booleanPrimitiveType ? \"warning\" : \"error\", {\r\n                title: '= durch == ersetzen',\r\n                editsProvider: (uri) => {\r\n                    return [{\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: {\r\n                                startLineNumber: pos.line, startColumn: pos.column, endLineNumber: pos.line, endColumn: pos.column + 1,\r\n                                message: \"\",\r\n                                severity: monaco.MarkerSeverity.Error\r\n                            },\r\n                            text: \"==\"\r\n                        }\r\n                    }\r\n                    ];\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    generateStatements(nodes: ASTNode[]): { withReturnStatement: boolean, endPosition?: TextPosition } {\r\n\r\n\r\n        if (nodes == null || nodes.length == 0 || nodes[0] == null) return { withReturnStatement: false };\r\n\r\n        let withReturnStatement: boolean = this.processStatementsInsideBlock(nodes);\r\n\r\n        let lastNode = nodes[nodes.length - 1];\r\n        let endPosition: TextPosition;\r\n        if (lastNode != null) {\r\n            if (lastNode.type == TokenType.scopeNode) {\r\n                endPosition = lastNode.positionTo;\r\n            } else {\r\n                endPosition = Object.assign({}, lastNode.position);\r\n                if (endPosition != null) {\r\n                    endPosition.column += endPosition.length;\r\n                    endPosition.length = 1;\r\n                }\r\n            }\r\n            this.lastPosition = endPosition;\r\n        } else {\r\n            endPosition = this.lastPosition;\r\n        }\r\n\r\n        return { withReturnStatement: withReturnStatement, endPosition: endPosition };\r\n\r\n    }\r\n\r\n    processStatementsInsideBlock(nodes: ASTNode[]) {\r\n        let withReturnStatement = false;\r\n\r\n        for (let node of nodes) {\r\n\r\n            if (node == null) continue;\r\n\r\n            let type = this.processNode(node);\r\n\r\n            if (type != null && type.withReturnStatement != null && type.withReturnStatement) {\r\n                withReturnStatement = true;\r\n            }\r\n\r\n            // If last Statement has value which is not used further then pop this value from stack.\r\n            // e.g. statement 12 + 17 -7;\r\n            // Parser issues a warning in this case, see Parser.checkIfStatementHasNoEffekt\r\n            if (type != null && type.type != null && type.type != voidPrimitiveType) {\r\n\r\n                if (this.lastStatement != null &&\r\n                    this.lastStatement.type == TokenType.assignment && this.lastStatement.leaveValueOnStack) {\r\n                    this.lastStatement.leaveValueOnStack = false;\r\n                } else {\r\n                    this.pushStatements({\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: null,\r\n                        popCount: 1,\r\n                        stepFinished: true\r\n                    }, true)\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return withReturnStatement;\r\n    }\r\n\r\n\r\n    lastPosition: TextPosition;\r\n    lastStatement: Statement;\r\n\r\n    insertStatements(pos: number, statements: Statement | Statement[]) {\r\n        if (statements == null) return;\r\n        if (!Array.isArray(statements)) statements = [statements];\r\n        for (let st of statements) {\r\n            this.currentProgram.statements.splice(pos++, 0, st);\r\n        }\r\n    }\r\n\r\n    pushStatements(statement: Statement | Statement[], deleteStepFinishedFlagOnStepBefore: boolean = false) {\r\n\r\n        if (statement == null) return;\r\n\r\n        if (deleteStepFinishedFlagOnStepBefore && this.currentProgram.statements.length > 0) {\r\n            let stepBefore: Statement = this.currentProgram.statements[this.currentProgram.statements.length - 1];\r\n            stepBefore.stepFinished = false;\r\n        }\r\n\r\n        if (Array.isArray(statement)) {\r\n            for (let st of statement) {\r\n                this.currentProgram.statements.push(st);\r\n                if (st.type == TokenType.return || st.type == TokenType.jumpAlways) {\r\n                    if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n                }\r\n                if (st.position != null) {\r\n                    this.lastPosition = st.position;\r\n                } else {\r\n                    st.position = this.lastPosition;\r\n                }\r\n                this.lastStatement = st;\r\n            }\r\n        } else {\r\n            this.currentProgram.statements.push(statement);\r\n            if (statement.type == TokenType.return || statement.type == TokenType.jumpAlways) {\r\n                if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n            }\r\n            if (statement.position != null) {\r\n                this.lastPosition = statement.position;\r\n            } else {\r\n                statement.position = this.lastPosition;\r\n            }\r\n\r\n            this.lastStatement = statement;\r\n        }\r\n    }\r\n\r\n    removeLastStatement() {\r\n        let lst = this.currentProgram.statements.pop();\r\n        if(this.currentProgram.labelManager != null){\r\n            this.currentProgram.labelManager.removeNode(lst);\r\n        }\r\n    }\r\n\r\n    initStackFrameNodes: InitStackframeStatement[] = [];\r\n\r\n\r\n    pushNewSymbolTable(beginNewStackframe: boolean, positionFrom: TextPosition, positionTo: TextPosition,\r\n        program?: Program): SymbolTable {\r\n\r\n        let st = new SymbolTable(this.currentSymbolTable, positionFrom, positionTo);\r\n\r\n        this.symbolTableStack.push(this.currentSymbolTable);\r\n\r\n        if (beginNewStackframe) {\r\n            st.beginsNewStackframe = true;\r\n            this.currentSymbolTable.stackframeSize = this.nextFreeRelativeStackPos;\r\n            this.nextFreeRelativeStackPos = 0;\r\n\r\n            if (program != null) {\r\n                let initStackFrameNode: InitStackframeStatement = {\r\n                    type: TokenType.initStackframe,\r\n                    position: positionFrom,\r\n                    reserveForLocalVariables: 0\r\n                }\r\n\r\n                program.statements.push(initStackFrameNode);\r\n                this.initStackFrameNodes.push(initStackFrameNode);\r\n            }\r\n\r\n        }\r\n\r\n        this.currentSymbolTable = st;\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    popSymbolTable(program?: Program, deleteStepFinishedFlagOnStepBefore: boolean = false): void {\r\n\r\n        let st = this.currentSymbolTable;\r\n        this.currentSymbolTable = this.symbolTableStack.pop();\r\n\r\n        // if v.declarationError != null then variable has been used before initialization.\r\n        st.variableMap.forEach(v => {\r\n            if (v.declarationError != null && v.usedBeforeInitialization) {\r\n                this.errorList.push(v.declarationError);\r\n                v.declarationError = null;\r\n            }\r\n        });\r\n\r\n        // if (!st.beginsNewStackframe && st.variableMap.size == 0 && removeI) {\r\n        //     // empty symbol table => remove it!\r\n        //     if (st.parent != null) {\r\n        //         st.parent.childSymbolTables.pop();\r\n        //     }\r\n        // } else \r\n        {\r\n            // TODO: add length of token\r\n\r\n            if (st.beginsNewStackframe) {\r\n\r\n                st.stackframeSize = this.nextFreeRelativeStackPos;\r\n                this.nextFreeRelativeStackPos = this.currentSymbolTable.stackframeSize;\r\n\r\n                if (program != null) {\r\n                    let initStackframeNode = this.initStackFrameNodes.pop();\r\n                    if (initStackframeNode != null) initStackframeNode.reserveForLocalVariables = st.stackframeSize;\r\n\r\n                    if (program.statements.length > 0 && deleteStepFinishedFlagOnStepBefore) {\r\n                        let statement = program.statements[program.statements.length - 1];\r\n\r\n                        // don't set stepFinished = false in jump-statements\r\n                        // as this could lead to infinity-loop is user sets \"while(true);\" just before program end\r\n                        if ([TokenType.jumpAlways, TokenType.jumpIfTrue, TokenType.jumpIfFalse, TokenType.jumpIfFalseAndLeaveOnStack, TokenType.jumpIfTrueAndLeaveOnStack].indexOf(statement.type) == -1) {\r\n                            program.statements[program.statements.length - 1].stepFinished = false;\r\n                        }\r\n                    }\r\n\r\n                    program.statements.push({\r\n                        type: TokenType.closeStackframe,\r\n                        position: st.positionTo\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushError(text: string, position: TextPosition, errorLevel: ErrorLevel = \"error\", quickFix?: QuickFix) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    openBreakScope() {\r\n        this.breakNodeStack.push([]);\r\n    }\r\n\r\n    openContinueScope() {\r\n        this.continueNodeStack.push([]);\r\n    }\r\n\r\n    pushBreakNode(breakNode: JumpAlwaysStatement) {\r\n        if (this.breakNodeStack.length == 0) {\r\n            this.pushError(\"Eine break-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", breakNode.position);\r\n        } else {\r\n            this.breakNodeStack[this.breakNodeStack.length - 1].push(breakNode);\r\n            this.pushStatements(breakNode);\r\n        }\r\n    }\r\n\r\n    pushContinueNode(continueNode: JumpAlwaysStatement) {\r\n        if (this.continueNodeStack.length == 0) {\r\n            this.pushError(\"Eine continue-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", continueNode.position);\r\n        } else {\r\n            this.continueNodeStack[this.continueNodeStack.length - 1].push(continueNode);\r\n            this.pushStatements(continueNode);\r\n        }\r\n    }\r\n\r\n    closeBreakScope(breakTargetLabel: number, lm: LabelManager) {\r\n        let breakNodes = this.breakNodeStack.pop();\r\n        for (let bn of breakNodes) {\r\n            lm.registerJumpNode(bn, breakTargetLabel);\r\n        }\r\n    }\r\n\r\n    closeContinueScope(continueTargetLabel: number, lm: LabelManager) {\r\n        let continueNodes = this.continueNodeStack.pop();\r\n        for (let bn of continueNodes) {\r\n            lm.registerJumpNode(bn, continueTargetLabel);\r\n        }\r\n    }\r\n\r\n    breakOccured(): boolean {\r\n        return this.breakNodeStack.length > 0 && this.breakNodeStack[this.breakNodeStack.length - 1].length > 0;\r\n    }\r\n\r\n    processNode(node: ASTNode, isLeftSideOfAssignment: boolean = false): StackType {\r\n\r\n        if (node == null) return;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                return this.processBinaryOp(node);\r\n            case TokenType.unaryOp:\r\n                return this.processUnaryOp(node);\r\n            case TokenType.pushConstant:\r\n                return this.pushConstant(node);\r\n            case TokenType.callMethod:\r\n                return this.callMethod(node);\r\n            case TokenType.identifier:\r\n                {\r\n                    let stackType = this.resolveIdentifier(node);\r\n                    let v = node.variable;\r\n                    if (v != null) {\r\n                        if (isLeftSideOfAssignment) {\r\n                            v.initialized = true;\r\n                            if (!v.usedBeforeInitialization) {\r\n                                v.declarationError = null;\r\n                            }\r\n                        } else {\r\n                            if (v.initialized != null && !v.initialized) {\r\n                                v.usedBeforeInitialization = true;\r\n                                this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                            }\r\n                        }\r\n                    }\r\n                    return stackType;\r\n                }\r\n            case TokenType.selectArrayElement:\r\n                return this.selectArrayElement(node);\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                return this.incrementDecrementBeforeOrAfter(node);\r\n            case TokenType.superConstructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.constructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.keywordThis:\r\n                return this.pushThisOrSuper(node, false);\r\n            case TokenType.keywordSuper:\r\n                return this.pushThisOrSuper(node, true);\r\n            case TokenType.pushAttribute:\r\n                return this.pushAttribute(node);\r\n            case TokenType.newObject:\r\n                return this.newObject(node);\r\n            case TokenType.keywordWhile:\r\n                return this.processWhile(node);\r\n            case TokenType.keywordDo:\r\n                return this.processDo(node);\r\n            case TokenType.keywordFor:\r\n                return this.processFor(node);\r\n            case TokenType.forLoopOverCollection:\r\n                return this.processForLoopOverCollection(node);\r\n            case TokenType.keywordIf:\r\n                return this.processIf(node);\r\n            case TokenType.keywordSwitch:\r\n                return this.processSwitch(node);\r\n            case TokenType.keywordReturn:\r\n                return this.processReturn(node);\r\n            case TokenType.localVariableDeclaration:\r\n                return this.localVariableDeclaration(node);\r\n            case TokenType.arrayInitialization:\r\n                return this.processArrayLiteral(node);\r\n            case TokenType.newArray:\r\n                return this.processNewArray(node);\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                return this.processPrint(node);\r\n            case TokenType.castValue:\r\n                return this.processManualCast(node);\r\n            case TokenType.keywordBreak:\r\n                this.pushBreakNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.keywordContinue:\r\n                this.pushContinueNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.rightBracket:\r\n                let type = this.processNode(node.termInsideBrackets);\r\n                if (type != null && type.type instanceof Klass) this.pushTypePosition(node.position, type.type);\r\n                return type;\r\n            case TokenType.scopeNode:\r\n                this.pushNewSymbolTable(false, node.position, node.positionTo);\r\n\r\n                let withReturnStatement = this.processStatementsInsideBlock(node.statements);\r\n\r\n                this.popSymbolTable();\r\n\r\n                return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processManualCast(node: CastManuallyNode): StackType {\r\n\r\n        let typeFrom1 = this.processNode(node.whatToCast);\r\n\r\n        if (typeFrom1 == null || typeFrom1.type == null) return;\r\n        let typeFrom: Type = typeFrom1.type;\r\n\r\n        if (typeFrom != null && node.castToType != null && node.castToType.resolvedType != null) {\r\n\r\n            let typeTo = node.castToType.resolvedType;\r\n\r\n            if (typeFrom.canCastTo(typeTo)) {\r\n\r\n                if (typeFrom instanceof PrimitiveType && typeTo instanceof PrimitiveType) {\r\n                    let castInfo = typeFrom.getCastInformation(typeTo);\r\n                    if (castInfo.needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n                } else if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n                    let toStringMethod = typeFrom.getMethodBySignature(\"toString()\");\r\n                    if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n                        this.pushStatements({\r\n                            type: TokenType.callMethod,\r\n                            position: node.position,\r\n                            method: toStringMethod,\r\n                            isSuperCall: false,\r\n                            stackframeBegin: -1,\r\n                            stepFinished: false\r\n                        });\r\n\r\n                    } else {\r\n                        this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n\r\n            }\r\n\r\n            if ((typeFrom instanceof Klass || typeFrom instanceof Interface) && (typeTo instanceof Klass || typeTo instanceof Interface))\r\n\r\n            // if (typeFrom instanceof Klass &&\r\n            //     (typeTo instanceof Klass && !typeFrom.hasAncestorOrIs(typeTo) && typeTo.hasAncestorOrIs(typeFrom)) ||\r\n            //     (typeTo instanceof Interface && !(<Klass>typeFrom).implementsInterface(typeTo))) \r\n            {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.checkCast,\r\n                    position: node.position,\r\n                    newType: typeTo,\r\n                    stepFinished: false\r\n                });\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n            }\r\n            else {\r\n                this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processPrint(node: PrintNode): StackType {\r\n\r\n        let type = node.type == TokenType.keywordPrint ? TokenType.print : TokenType.println;\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, TokenTypeReadable[node.type], node.rightBracketPosition);\r\n\r\n        if (node.text != null) {\r\n\r\n            let type = this.processNode(node.text);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                    this.pushError(\"Die Methoden print und println erwarten einen Parameter vom Typ String. Gefunden wurde ein Wert vom Typ \" + type.type?.identifier + \".\", node.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        let withColor: boolean = false;\r\n\r\n        if (node.color != null) {\r\n\r\n            let type = this.processNode(node.color);\r\n\r\n            if (type != null) {\r\n                if (type.type != stringPrimitiveType && type.type != intPrimitiveType) {\r\n                    if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                        this.pushError(\"Die Methoden print und println erwarten als Farbe einen Parameter vom Typ String oder int. Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                    }\r\n                }\r\n            }\r\n\r\n            withColor = true;\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: type,\r\n            position: node.position,\r\n            empty: (node.text == null),\r\n            stepFinished: true,\r\n            withColor: withColor\r\n        });\r\n\r\n\r\n        return null;\r\n    }\r\n\r\n    processNewArray(node: NewArrayNode): StackType {\r\n\r\n        if (node.initialization != null) {\r\n            return this.processArrayLiteral(node.initialization);\r\n        }\r\n\r\n        // int[7][2][] are 7 arrays each with arrays of length 2 which are empty\r\n\r\n        let dimension = 0;\r\n        for (let ec of node.elementCount) {\r\n            if (ec != null) {\r\n                this.processNode(ec); // push number of elements for this dimension on stack\r\n                dimension++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // for the array above: arrayType is array of array of int; dimension is 2; stack: 7 2\r\n        this.pushStatements({\r\n            type: TokenType.pushEmptyArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType,\r\n            dimension: dimension\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n\r\n    processArrayLiteral(node: ArrayInitializationNode): StackType {\r\n\r\n        let bes: BeginArrayStatement = {\r\n            type: TokenType.beginArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType\r\n        };\r\n\r\n        this.pushStatements(bes);\r\n\r\n        for (let ain of node.nodes) {\r\n\r\n            // Did an error occur when parsing a constant?\r\n            if (ain == null) {\r\n                continue;\r\n            }\r\n\r\n            if (ain.type == TokenType.arrayInitialization) {\r\n                this.processArrayLiteral(ain);\r\n            } else {\r\n                let sType = this.processNode(ain);\r\n                if (sType == null) {\r\n                    return;\r\n                }\r\n                let targetType = (<ArrayType>node.arrayType.resolvedType).arrayOfType;\r\n                if (!this.ensureAutomaticCasting(sType.type, targetType, ain.position)) {\r\n                    this.pushError(\"Der Datentyp des Terms (\" + sType.type.identifier + \") kann nicht in den Datentyp \" + targetType.identifier + \" konvertiert werden.\", ain.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.addToArray,\r\n            position: node.position,\r\n            numberOfElementsToAdd: node.nodes.length\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n    localVariableDeclaration(node: LocalVariableDeclarationNode, dontWarnWhenNoInitialization: boolean = false): StackType {\r\n\r\n        if (node.variableType.resolvedType == null) {\r\n            node.variableType.resolvedType = nullType; // Make the best out of it...\r\n        }\r\n\r\n        let declareVariableOnHeap = (this.heap != null && this.symbolTableStack.length <= 2);\r\n\r\n        let variable: Variable = {\r\n            identifier: node.identifier,\r\n            stackPos: declareVariableOnHeap ? null : this.nextFreeRelativeStackPos++,\r\n            type: node.variableType.resolvedType,\r\n            usagePositions: new Map(),\r\n            declaration: { module: this.module, position: node.position },\r\n            isFinal: node.isFinal\r\n        };\r\n\r\n        this.pushUsagePosition(node.position, variable);\r\n\r\n        if (declareVariableOnHeap) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.heapVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            });\r\n\r\n            if (this.heap[variable.identifier]) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.heap[variable.identifier] = variable;\r\n            // only for code completion:\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n        } else {\r\n\r\n            if (this.currentSymbolTable.variableMap.get(node.identifier)) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n            this.pushStatements({\r\n                type: TokenType.localVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            })\r\n\r\n        }\r\n\r\n        if (node.initialization != null) {\r\n            let initType = this.processNode(node.initialization);\r\n\r\n            if (initType != null) {\r\n\r\n                if (variable.type == varType) {\r\n                    variable.type = initType.type;\r\n                } else if (initType.type == null) {\r\n                    this.pushError(\"Der Typ des Terms auf der rechten Seite des Zuweisungsoperators (=) konnte nicht bestimmt werden.\", node.initialization.position);\r\n                } else\r\n                    if (!this.ensureAutomaticCasting(initType.type, variable.type)) {\r\n                        this.pushError(\"Der Term vom Typ \" + initType.type.identifier + \" kann der Variable vom Typ \" + variable.type.identifier + \" nicht zugeordnet werden.\", node.initialization.position);\r\n                    };\r\n                this.pushStatements({\r\n                    type: TokenType.assignment,\r\n                    position: node.initialization.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                });\r\n            }\r\n\r\n        } else {\r\n            if (variable.type == varType) {\r\n                this.pushError(\"Die Verwendung von var ist nur dann zulässig, wenn eine lokale Variable in einer Anweisung deklariert und initialisiert wird, also z.B. var i = 12;\", node.variableType.position);\r\n            } else {\r\n                let initializer: string = \" = null\";\r\n                if (variable.type == intPrimitiveType) initializer = \" = 0\";\r\n                if (variable.type == doublePrimitiveType) initializer = \" = 0.0\";\r\n                if (variable.type == booleanPrimitiveType) initializer = \" = false\";\r\n                if (variable.type == charPrimitiveType) initializer = \" = ' '\";\r\n                if (variable.type == stringPrimitiveType) initializer = ' = \"\"';\r\n\r\n                variable.declarationError = {\r\n                    text: \"Jede lokale Variable sollte vor ihrer ersten Verwendung initialisiert werden.\",\r\n                    position: node.position,\r\n                    quickFix:\r\n                    {\r\n                        title: initializer + \" ergänzen\",\r\n                        editsProvider: (uri) => {\r\n                            let pos = node.position;\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: pos.line, startColumn: pos.column + pos.length, endLineNumber: pos.line, endColumn: pos.column + pos.length },\r\n                                        text: initializer\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    level: \"info\"\r\n                }\r\n\r\n                variable.usedBeforeInitialization = false;\r\n                variable.initialized = dontWarnWhenNoInitialization;\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    processReturn(node: ReturnNode): StackType {\r\n\r\n        let method = this.currentSymbolTable.method;\r\n\r\n        if (method == null) {\r\n            this.pushError(\"Eine return-Anweisung ist nur im Kontext einer Methode erlaubt.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (node.term != null) {\r\n\r\n            if (method.getReturnType() == null) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet keinen Rückgabewert.\", node.position);\r\n                return null;\r\n            }\r\n\r\n            let type = this.processNode(node.term);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, method.getReturnType(), null, node)) {\r\n                    this.pushError(\"Die Methode \" + method.identifier + \" erwaret einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \". Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            if (method.getReturnType() != null && method.getReturnType() != voidPrimitiveType) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \", daher ist die leere Return-Anweisung (return;) nicht ausreichend.\", node.position);\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.return,\r\n            position: node.position,\r\n            copyReturnValueToStackframePos0: node.term != null,\r\n            stepFinished: true,\r\n            leaveThisObjectOnStack: false\r\n        });\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: true };\r\n\r\n    }\r\n\r\n    processSwitch(node: SwitchNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let ct = this.processNode(node.condition);\r\n        if (ct == null || ct.type == null) return;\r\n\r\n        let conditionType = ct.type;\r\n\r\n        let isString = conditionType == stringPrimitiveType || conditionType == charPrimitiveType;\r\n        let isInteger = conditionType == intPrimitiveType;\r\n        let isEnum = conditionType instanceof Enum;\r\n\r\n        if (!(isString || isInteger || isEnum)) {\r\n            this.pushError(\"Der Unterscheidungsterms einer switch-Anweisung muss den Datentyp String, char, int oder enum besitzen. Dieser hier ist vom Typ \" + conditionType.identifier, node.condition.position);\r\n        }\r\n\r\n        if (isEnum) {\r\n            this.pushStatements({\r\n                type: TokenType.castValue,\r\n                position: node.condition.position,\r\n                newType: intPrimitiveType\r\n            });\r\n        }\r\n\r\n        let switchStatement: JumpOnSwitchStatement = {\r\n            type: TokenType.keywordSwitch,\r\n            position: node.position,\r\n            defaultDestination: null,\r\n            switchType: isString ? \"string\" : \"number\",\r\n            destinationLabels: [],\r\n            destinationMap: {}\r\n        }\r\n\r\n        this.pushStatements(switchStatement);\r\n\r\n        // if value not included in case-statement and no default-statement present:\r\n        let endLabel = lm.insertJumpNode(TokenType.jumpAlways, node.position, this);\r\n\r\n        switchStatement.stepFinished = true;\r\n\r\n        lm.registerSwitchStatement(switchStatement);\r\n\r\n        this.openBreakScope();\r\n\r\n        let withReturnStatement = node.caseNodes.length > 0;\r\n\r\n        for (let caseNode of node.caseNodes) {\r\n\r\n            let isDefault = caseNode.caseTerm == null;\r\n\r\n            if (!isDefault) {\r\n\r\n                let constant: string | number = null;\r\n\r\n                if (isEnum && caseNode.caseTerm.type == TokenType.identifier) {\r\n                    let en: Enum = <Enum>conditionType;\r\n                    let info = en.identifierToInfoMap[caseNode.caseTerm.identifier];\r\n                    if (info == null) {\r\n                        this.pushError(\"Die Enum-Klasse \" + conditionType.identifier + \" hat kein Element mit dem Bezeichner \" + caseNode.caseTerm.identifier, caseNode.position, \"error\");\r\n                    } else {\r\n                        constant = info.ordinal;\r\n                    }\r\n                } else {\r\n                    let caseTerm = this.processNode(caseNode.caseTerm);\r\n\r\n                    let ls = this.lastStatement;\r\n\r\n                    if (ls.type == TokenType.pushConstant) {\r\n                        constant = ls.value;\r\n                    }\r\n\r\n                    if (ls.type == TokenType.pushEnumValue) {\r\n                        constant = ls.enumClass.getOrdinal(ls.valueIdentifier);\r\n                    }\r\n\r\n                    this.removeLastStatement();\r\n                }\r\n\r\n                if (constant == null) {\r\n                    this.pushError(\"Der Term bei case muss konstant sein.\", caseNode.caseTerm.position);\r\n                }\r\n\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n\r\n                switchStatement.destinationLabels.push({\r\n                    constant: constant,\r\n                    label: label\r\n                });\r\n            } else {\r\n                let label = lm.markJumpDestination(1);\r\n                this.generateStatements(caseNode.statements);\r\n                switchStatement.defaultDestination = label;\r\n            }\r\n\r\n\r\n        }\r\n\r\n        lm.markJumpDestination(1, endLabel);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n    }\r\n\r\n    processIf(node: IfNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        this.checkIfAssignmentInstedOfEqual(node.condition, conditionType?.type);\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'if' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let beginElse = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        let withReturnStatementIf = this.generateStatements(node.statementsIfTrue).withReturnStatement;\r\n\r\n        let endOfIf: number;\r\n        if (node.statementsIfFalse != null) {\r\n            endOfIf = lm.insertJumpNode(TokenType.jumpAlways, null, this);\r\n        }\r\n\r\n        lm.markJumpDestination(1, beginElse);\r\n\r\n        let withReturnStatementElse: boolean;\r\n        if (node.statementsIfFalse == null || node.statementsIfFalse.length == 0) {\r\n            withReturnStatementElse = false;\r\n        } else {\r\n            withReturnStatementElse = this.generateStatements(node.statementsIfFalse).withReturnStatement;\r\n        }\r\n\r\n        if (endOfIf != null) {\r\n            lm.markJumpDestination(1, endOfIf);\r\n        }\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatementIf && withReturnStatementElse };\r\n\r\n    }\r\n\r\n\r\n    processFor(node: ForNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        this.generateStatements(node.statementsBefore);\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert der Bedingung muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n        this.generateStatements(node.statementsAfter);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processForLoopOverCollection(node: ForNodeOverCollecion): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        // reserve position on stack for collection\r\n        let stackPosForCollection = this.nextFreeRelativeStackPos++;\r\n\r\n        // assign value of collection term to collection\r\n        let ct = this.processNode(node.collection);\r\n        if (ct == null) return;\r\n        let collectionType = ct.type;\r\n\r\n        this.pushStatements({\r\n            type: TokenType.popAndStoreIntoVariable,\r\n            position: node.collection.position,\r\n            stackposOfVariable: stackPosForCollection,\r\n            stepFinished: false\r\n        })\r\n\r\n        let collectionElementType: Type;\r\n\r\n        let kind: \"array\" | \"internalList\" | \"group\" | \"userDefinedIterable\" = null;\r\n\r\n        if (collectionType instanceof ArrayType) {\r\n            collectionElementType = collectionType.arrayOfType;\r\n            kind = \"array\";\r\n        } else if (collectionType instanceof Klass && collectionType.getImplementedInterface(\"Iterable\") != null) {\r\n            if (collectionType.module.isSystemModule) {\r\n                kind = \"internalList\";\r\n            } else {\r\n                kind = \"userDefinedIterable\";\r\n            }\r\n            let iterableInterface = collectionType.getImplementedInterface(\"Iterable\");\r\n            collectionElementType = collectionType.typeVariables[0].type;\r\n        } else if (collectionType instanceof Klass && collectionType.identifier == \"Group\") {\r\n            kind = \"group\";\r\n            collectionElementType = this.moduleStore.getType(\"Shape\").type;\r\n        }\r\n        else {\r\n            this.pushError(\"Mit der vereinfachten for-Schleife (for identifier : collectionOrArray) kann man nur über Arrays oder Klassen, die das Interface Iterable implementieren, iterieren.\", node.collection.position);\r\n            return null;\r\n        }\r\n\r\n        let variableType = node.variableType.resolvedType;\r\n        if (variableType == null) return null;\r\n\r\n        let noCastingNeeded = variableType == varType;\r\n        if (noCastingNeeded) {\r\n            variableType = collectionElementType;\r\n            node.variableType.resolvedType = collectionElementType\r\n        } else {\r\n            if (!collectionElementType.canCastTo(variableType)) {\r\n                this.pushError(\"Der ElementTyp \" + collectionElementType.identifier + \" der Collection kann nicht in den Typ \" + variableType.identifier + \" der Iterationsvariable \" + node.variableIdentifier + \" konvertiert werden.\", node.position);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        this.localVariableDeclaration({\r\n            type: TokenType.localVariableDeclaration,\r\n            identifier: node.variableIdentifier,\r\n            initialization: null,\r\n            isFinal: false,\r\n            position: node.variablePosition,\r\n            variableType: node.variableType\r\n        }, true)\r\n\r\n        let variableStackPos = this.nextFreeRelativeStackPos - 1;\r\n        let stackPosOfCounterVariableOrIterator = this.nextFreeRelativeStackPos++;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            this.pushStatements([{\r\n                type: TokenType.extendedForLoopInit,\r\n                position: node.position,\r\n                stepFinished: false,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                typeOfElement: variableType,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator\r\n            }], true);\r\n        } else {\r\n            // get Iterator from collection\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosOfCounterVariableOrIterator,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"iterator\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }], true);\r\n        }\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n        let labelAfterForLoop: number;\r\n        let lastStatementBeforeCasting: Statement;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            let jumpNode: ExtendedForLoopCheckCounterAndGetElement = {\r\n                type: TokenType.extendedForLoopCheckCounterAndGetElement,\r\n                kind: kind,\r\n                position: node.variablePosition,\r\n                stepFinished: true,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator,\r\n                destination: 0 // gets filled in later,\r\n            };\r\n            lastStatementBeforeCasting = jumpNode;\r\n            labelAfterForLoop = lm.registerJumpNode(jumpNode);\r\n\r\n            this.pushStatements(\r\n                jumpNode\r\n            );\r\n\r\n        } else {\r\n            // call collection.hasNext()\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.variablePosition,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"hasNext\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n            ]);\r\n            labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n            // call collection.next() and assign to loop variable\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: variableStackPos,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"next\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }]);\r\n        }\r\n\r\n        if (!noCastingNeeded) {\r\n            let oldStatementCount = this.currentProgram.statements.length;\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variableStackPos,\r\n                stepFinished: false\r\n            });\r\n            this.ensureAutomaticCasting(collectionElementType, variableType);\r\n            if (this.currentProgram.statements.length < oldStatementCount + 2) {\r\n                // casting needed no statement, so delete pushLocalVariabletoStack-Statement\r\n                this.currentProgram.statements.pop();\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.popAndStoreIntoVariable,\r\n                    stackposOfVariable: variableStackPos,\r\n                    position: node.position,\r\n                    stepFinished: true\r\n                });\r\n                lastStatementBeforeCasting.stepFinished = false;\r\n            }\r\n        }\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processWhile(node: WhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let conditionBeginLabel = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let position = node.position;\r\n\r\n        if (node.condition != null) {\r\n            position = node.condition.position;\r\n        }\r\n\r\n        let afterWhileStatementLabel = lm.insertJumpNode(TokenType.jumpIfFalse, position, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        this.closeContinueScope(conditionBeginLabel, lm);\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, conditionBeginLabel);\r\n\r\n        lm.markJumpDestination(1, afterWhileStatementLabel);\r\n\r\n        this.closeBreakScope(afterWhileStatementLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processDo(node: DoWhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let statementsBeginLabel = lm.markJumpDestination(1);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        lm.insertJumpNode(TokenType.jumpIfTrue, statements.endPosition, this, statementsBeginLabel);\r\n\r\n        let endLabel = lm.markJumpDestination(1);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    newObject(node: NewObjectNode): StackType {\r\n\r\n        if (node.classType == null || node.classType.resolvedType == null) return null;\r\n\r\n        let resolvedType: Klass = <Klass>node.classType.resolvedType;\r\n        if (!(resolvedType instanceof Klass)) {\r\n            this.pushError(node.classType.identifier + \" ist keine Klasse, daher kann davon mit 'new' kein Objekt erzeugt werden.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (resolvedType.isAbstract) {\r\n            this.pushError(`${node.classType.identifier} ist eine abstrakte Klasse, daher kann von ihr mit 'new' kein Objekt instanziert werden. Falls ${node.classType.identifier} nicht-abstrakte Kindklassen besitzt, könntest Du von DENEN mit new Objekte instanzieren...`, node.position);\r\n            return null;\r\n        }\r\n\r\n        //this.pushTypePosition(node.rightBracketPosition, classType);\r\n\r\n        if (resolvedType.module != this.module && resolvedType.visibility != Visibility.public) {\r\n            this.pushError(\"Die Klasse \" + resolvedType.identifier + \" ist hier nicht sichtbar.\", node.position);\r\n        }\r\n\r\n        let newStatement: NewObjectStatement = {\r\n            type: TokenType.newObject,\r\n            position: node.position,\r\n            class: resolvedType,\r\n            subsequentConstructorCall: false,\r\n            stepFinished: true\r\n        };\r\n\r\n        this.pushStatements(newStatement);\r\n        this.pushTypePosition(node.rightBracketPosition, resolvedType); // to enable code completion when typing a point after the closing bracket\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n        let allStatements = this.currentProgram.statements;\r\n\r\n        if (node.constructorOperands?.length > 0) {\r\n            // for (let p of node.constructorOperands) {\r\n            for (let j = 0; j < node.constructorOperands.length; j++) {\r\n                let p = node.constructorOperands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n        let upToVisibility = getVisibilityUpTo(resolvedType, this.currentSymbolTable.classContext);\r\n\r\n        // let methods = resolvedType.getMethodsThatFitWithCasting(resolvedType.identifier,\r\n        //     parameterTypes, true, upToVisibility);\r\n\r\n        let methods = resolvedType.getConstructor(parameterTypes, upToVisibility);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, resolvedType.getMethods(Visibility.public, resolvedType.identifier), node.rightBracketPosition);\r\n\r\n        // if there's no parameterless constructor then return without error:\r\n        if (parameterTypes.length > 0 || resolvedType.hasConstructor()) {\r\n\r\n            if (methods.error != null) {\r\n                this.pushError(methods.error, node.position);\r\n                return { type: resolvedType, isAssignable: false }; // try to continue...\r\n            }\r\n\r\n            let method = methods.methodList[0];\r\n            this.pushUsagePosition(node.position, method);\r\n\r\n            let staticClassContext = null;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext != null && classContext instanceof Klass) {\r\n                staticClassContext = classContext.staticClass;\r\n            }\r\n\r\n            if (method.visibility == Visibility.private && resolvedType != classContext && resolvedType != staticClassContext) {\r\n                this.pushError(\"Die Konstruktormethode ist private und daher hier nicht sichtbar.\", node.position);\r\n            }\r\n\r\n\r\n            let destType: Type = null;\r\n            for (let i = 0; i < parameterTypes.length; i++) {\r\n                if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                    destType = method.getParameterType(i);\r\n                    if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                        destType = (<ArrayType>destType).arrayOfType;\r\n                    }\r\n                }\r\n\r\n                let srcType = parameterTypes[i];\r\n                // for (let st of parameterStatements[i]) {\r\n                //     this.currentProgram.statements.push(st);\r\n                // }\r\n                let programPosition = allStatements.length;\r\n                if (!this.ensureAutomaticCasting(srcType, destType, node.constructorOperands[i].position, node.constructorOperands[i])) {\r\n                    this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.constructorOperands[i].position);\r\n                }\r\n\r\n                if(allStatements.length > programPosition){\r\n                    let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                    allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                    this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n                }\r\n    \r\n            }\r\n\r\n            let stackframeDelta = 0;\r\n            if (method.hasEllipsis()) {\r\n                let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n                stackframeDelta = - (ellipsisParameterCount - 1);\r\n                this.pushStatements({\r\n                    type: TokenType.makeEllipsisArray,\r\n                    position: node.constructorOperands[method.getParameterCount() - 1].position,\r\n                    parameterCount: ellipsisParameterCount,\r\n                    stepFinished: false,\r\n                    arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n                })\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: false,\r\n                stepFinished: resolvedType.getPostConstructorCallbacks() == null,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            }, true);\r\n\r\n            newStatement.subsequentConstructorCall = true;\r\n            newStatement.stepFinished = false;\r\n\r\n        }\r\n\r\n        if (resolvedType.getPostConstructorCallbacks() != null) {\r\n            this.pushStatements({\r\n                type: TokenType.processPostConstructorCallbacks,\r\n                position: node.position,\r\n                stepFinished: true\r\n            }, true);\r\n        }\r\n\r\n        return { type: resolvedType, isAssignable: false };\r\n\r\n    }\r\n\r\n    pushAttribute(node: SelectArributeNode): StackType {\r\n\r\n        if (node.object == null || node.identifier == null) return null;\r\n\r\n        let ot = this.processNode(node.object);\r\n        if (ot == null) {\r\n            this.pushError('Links vom Punkt steht kein Objekt.', node.position);\r\n            return null;\r\n        }\r\n\r\n        if (!(ot.type instanceof Klass || ot.type instanceof StaticClass || ot.type instanceof ArrayType)) {\r\n            if (ot.type == null) {\r\n                this.pushError('Der Ausdruck links vom Punkt hat kein Attribut ' + node.identifier + \".\", node.position);\r\n            } else {\r\n                this.pushError('Links vom Punkt steht ein Ausdruck vom Datentyp ' + ot.type.identifier + \". Dieser hat kein Attribut \" + node.identifier + \".\", node.position);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | ArrayType = ot.type;\r\n\r\n        if (objectType instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            let attributeWithError = objectType.getAttribute(node.identifier, visibilityUpTo);\r\n\r\n            let staticAttributeWithError: { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass }\r\n                = null;\r\n            if (attributeWithError.attribute == null) {\r\n                staticAttributeWithError = objectType.staticClass.getAttribute(node.identifier, visibilityUpTo);\r\n            }\r\n\r\n            if (attributeWithError.attribute == null && staticAttributeWithError.attribute == null) {\r\n                if (attributeWithError.foundButInvisible || !staticAttributeWithError.foundButInvisible) {\r\n                    this.pushError(attributeWithError.error, node.position);\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                }\r\n                return {\r\n                    type: objectType,\r\n                    isAssignable: false\r\n                }\r\n            } else {\r\n                let attribute: Attribute;\r\n                if (attributeWithError.attribute != null) {\r\n                    this.pushStatements({\r\n                        type: TokenType.pushAttribute,\r\n                        position: node.position,\r\n                        attributeIndex: attributeWithError.attribute.index,\r\n                        attributeIdentifier: attributeWithError.attribute.identifier,\r\n                        useThisObject: false\r\n                    });\r\n                    attribute = attributeWithError.attribute;\r\n                } else {\r\n                    this.pushStatements([{\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: node.position,\r\n                        popCount: 1\r\n                    }, {\r\n                        type: TokenType.pushStaticAttribute,\r\n                        position: node.position,\r\n                        // klass: (<Klass>objectType).staticClass,\r\n                        klass: staticAttributeWithError.staticClass,\r\n                        attributeIndex: staticAttributeWithError.attribute.index,\r\n                        attributeIdentifier: staticAttributeWithError.attribute.identifier\r\n                    }]);\r\n                    attribute = staticAttributeWithError.attribute;\r\n                }\r\n\r\n                this.pushUsagePosition(node.position, attribute);\r\n\r\n                return {\r\n                    type: attribute.type,\r\n                    isAssignable: !attribute.isFinal\r\n                }\r\n            }\r\n\r\n        } else if (objectType instanceof StaticClass) {\r\n            // Static class\r\n            if (objectType.Klass instanceof Enum) {\r\n                this.removeLastStatement(); // remove push static enum class to stack\r\n\r\n                let enumInfo = objectType.Klass.enumInfoList.find(ei => ei.identifier == node.identifier);\r\n\r\n                if (enumInfo == null) {\r\n                    this.pushError(\"Die enum-Klasse \" + objectType.identifier + \" hat keinen enum-Wert mit dem Bezeichner \" + node.identifier, node.position);\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: node.position,\r\n                    enumClass: objectType.Klass,\r\n                    valueIdentifier: node.identifier\r\n                });\r\n\r\n                return {\r\n                    type: objectType.Klass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n                let staticAttributeWithError = objectType.getAttribute(node.identifier, upToVisibility);\r\n                if (staticAttributeWithError.attribute != null) {\r\n                    // if (staticAttributeWithError.attribute.updateValue != undefined) {\r\n                    //     this.removeLastStatement();\r\n                    //     this.pushStatements({\r\n                    //         type: TokenType.pushStaticAttributeIntrinsic,\r\n                    //         position: node.position,\r\n                    //         attribute: staticAttributeWithError.attribute\r\n                    //     });\r\n                    // } else \r\n                    {\r\n                        this.removeLastStatement();\r\n                        this.pushStatements({\r\n                            type: TokenType.pushStaticAttribute,\r\n                            position: node.position,\r\n                            attributeIndex: staticAttributeWithError.attribute.index,\r\n                            attributeIdentifier: staticAttributeWithError.attribute.identifier,\r\n                            klass: staticAttributeWithError.staticClass\r\n                        });\r\n                        this.pushUsagePosition(node.position, staticAttributeWithError.attribute);\r\n\r\n                    }\r\n                    return {\r\n                        type: staticAttributeWithError.attribute.type,\r\n                        isAssignable: !staticAttributeWithError.attribute.isFinal\r\n                    }\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                    return {\r\n                        type: objectType,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            if (node.identifier != \"length\") {\r\n                this.pushError('Der Wert vom Datentyp ' + ot.type.identifier + \" hat kein Attribut \" + node.identifier, node.position);\r\n                return null;\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.pushArrayLength,\r\n                position: node.position\r\n            });\r\n\r\n            let element: Attribute = new Attribute(\"length\", intPrimitiveType, null, true, Visibility.public, true, \"Länge des Arrays\");\r\n\r\n            this.module.addIdentifierPosition(node.position, element);\r\n\r\n            return {\r\n                type: intPrimitiveType,\r\n                isAssignable: false\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushThisOrSuper(node: ThisNode | SuperNode, isSuper: boolean): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (isSuper && classContext != null) {\r\n            classContext = classContext.baseClass;\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null) {\r\n            this.pushError(\"Das Objekt \" + (isSuper ? \"super\" : \"this\") + \" existiert nur innerhalb einer Methodendeklaration.\", node.position);\r\n            return null;\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: 0\r\n            })\r\n\r\n            this.pushTypePosition(node.position, classContext);\r\n            return { type: classContext, isAssignable: false, isSuper: isSuper };\r\n        }\r\n\r\n    }\r\n\r\n    superconstructorCall(node: SuperconstructorCallNode | ConstructorCallNode): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        let isSuperConstructorCall: boolean = node.type == TokenType.superConstructorCall;\r\n\r\n        if (isSuperConstructorCall) {\r\n            if (classContext?.baseClass == null || classContext.baseClass.identifier == \"Object\") {\r\n                this.pushError(\"Die Klasse ist nur Kindklasse der Klasse Object, daher ist der Aufruf des Superkonstruktors nicht möglich.\", node.position);\r\n            }\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null || !methodContext.isConstructor) {\r\n            this.pushError(\"Ein Aufruf des Konstruktors oder des Superkonstructors ist nur innerhalb des Konstruktors einer Klasse möglich.\", node.position);\r\n            return null;\r\n        }\r\n\r\n\r\n        let superclassType: Klass | StaticClass;\r\n\r\n        if (isSuperConstructorCall) {\r\n            superclassType = <Klass>classContext.baseClass;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine super-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n            if (superclassType == null) superclassType = <Klass>this.moduleStore.getType(\"Object\").type;\r\n        } else {\r\n            superclassType = <Klass>classContext;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine this-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n        }\r\n\r\n        // Push this-object to stack:\r\n        this.pushStatements({\r\n            type: TokenType.pushLocalVariableToStack,\r\n            position: node.position,\r\n            stackposOfVariable: 0\r\n        });\r\n\r\n        let parameterTypes: Type[] = [];\r\n\r\n        if (node.operands != null) {\r\n            let errorInOperands: boolean = false;\r\n            for (let p of node.operands) {\r\n                let pt = this.processNode(p);\r\n                if (pt != null) {\r\n                    parameterTypes.push(pt.type);\r\n                } else {\r\n                    errorInOperands = true;\r\n                }\r\n            }\r\n            if (errorInOperands) {\r\n                return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n            }\r\n        }\r\n\r\n        let methods = superclassType.getConstructor(parameterTypes, Visibility.protected);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, superclassType.getMethods(Visibility.protected, superclassType.identifier),\r\n            node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            isSuperCall: isSuperConstructorCall,\r\n            position: node.position,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n        // Pabst, 21.10.2020:\r\n        // super method is constructor => returns nothing even if method.getReturnType() is class object\r\n        // return { type: method.getReturnType(), isAssignable: false };\r\n        return { type: null, isAssignable: false };\r\n\r\n    }\r\n\r\n    incrementDecrementBeforeOrAfter(node: IncrementDecrementNode): StackType {\r\n        let type = this.processNode(node.operand);\r\n\r\n        if (type == null) return;\r\n\r\n        if (!type.isAssignable) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Variablen angewendet werden, nicht auf konstante Werte oder Rückgabewerte von Methoden.\", node.position);\r\n            return type;\r\n        }\r\n\r\n        if (!type.type.canCastTo(floatPrimitiveType)) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Zahlen angewendet werden, nicht auf Werte des Datentyps \" + type.type.identifier, node.position);\r\n            return type;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: node.type,\r\n            position: node.position,\r\n            incrementDecrementBy: node.operator == TokenType.doubleMinus ? - 1 : 1\r\n\r\n        });\r\n\r\n        return type;\r\n\r\n    }\r\n\r\n    selectArrayElement(node: SelectArrayElementNode): StackType {\r\n\r\n        let arrayType = this.processNode(node.object); // push array-object \r\n        let indexType = this.processNode(node.index); // push index\r\n\r\n        if (arrayType == null || indexType == null) return;\r\n\r\n        if (!(arrayType.type instanceof ArrayType)) {\r\n            this.pushError(\"Der Typ der Variablen ist kein Array, daher ist [] nicht zulässig. \", node.object.position);\r\n            return null;\r\n        }\r\n\r\n        this.module.addIdentifierPosition({\r\n            line: node.position.line,\r\n            column: node.position.column + node.position.length,\r\n            length: 0  // Module.getTypeAtPosition needs length == 0 here to know that this type-position is not in static context for code completion\r\n        }, arrayType.type.arrayOfType);\r\n\r\n        if (!this.ensureAutomaticCasting(indexType.type, intPrimitiveType)) {\r\n            this.pushError(\"Als Index eines Arrays wird ein ganzzahliger Wert erwartet. Gefunden wurde ein Wert vom Typ \" + indexType.type.identifier + \".\", node.index.position);\r\n            return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: TokenType.selectArrayElement,\r\n            position: node.position\r\n        })\r\n\r\n        return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n\r\n    }\r\n\r\n    pushTypePosition(position: TextPosition, type: Type) {\r\n        if (position == null) return;\r\n        if (position.length > 0) {\r\n            position = {\r\n                line: position.line,\r\n                column: position.column + position.length,\r\n                length: 0\r\n            }\r\n        }\r\n        this.module.addIdentifierPosition(position, type);\r\n    }\r\n\r\n\r\n\r\n    pushUsagePosition(position: TextPosition, element: Klass | Interface | Method | Attribute | Variable) {\r\n\r\n        this.module.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(this.module);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(this.module, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): StackType {\r\n\r\n        if (node.identifier == null) return null;\r\n\r\n        let variable = this.findLocalVariable(node.identifier);\r\n        if (variable != null) {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variable.stackPos\r\n            })\r\n\r\n            this.pushUsagePosition(node.position, variable);\r\n            node.variable = variable;\r\n\r\n            return { type: variable.type, isAssignable: !variable.isFinal };\r\n        }\r\n\r\n        if (this.heap != null) {\r\n            let variable = this.heap[node.identifier];\r\n            if (variable != null) {\r\n                this.pushStatements({\r\n                    type: TokenType.pushFromHeapToStack,\r\n                    position: node.position,\r\n                    identifier: node.identifier\r\n                })\r\n\r\n                this.pushUsagePosition(node.position, variable);\r\n                node.variable = variable;\r\n\r\n\r\n                return { type: variable.type, isAssignable: !variable.isFinal };\r\n            }\r\n\r\n        }\r\n\r\n        let attribute = this.findAttribute(node.identifier, node.position);\r\n        if (attribute != null) {\r\n\r\n            if (attribute.isStatic) {\r\n                let cc = this.currentSymbolTable.classContext;\r\n                let scc = (cc instanceof StaticClass) ? cc : cc.staticClass;\r\n\r\n                while (scc != null && scc.attributes.indexOf(attribute) == -1) {\r\n                    scc = scc.baseClass;\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticAttribute,\r\n                    position: node.position,\r\n                    klass: scc,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier\r\n                });\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushAttribute,\r\n                    position: node.position,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier,\r\n                    useThisObject: true\r\n                });\r\n                node.attribute = attribute;\r\n            }\r\n\r\n\r\n            this.pushUsagePosition(node.position, attribute);\r\n\r\n            return { type: attribute.type, isAssignable: !attribute.isFinal };\r\n        }\r\n\r\n        let klassModule = this.moduleStore.getType(node.identifier);\r\n        if (klassModule != null) {\r\n            let klass = klassModule.type;\r\n            if (!(klass instanceof Klass || klass instanceof Interface)) {\r\n                this.pushError(\"Der Typ \" + klass.identifier + \" hat keine statischen Attribute/Methoden.\", node.position);\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticClassObject,\r\n                    position: node.position,\r\n                    klass: klass\r\n                });\r\n\r\n                this.pushUsagePosition(node.position, klass);\r\n\r\n                return {\r\n                    type: klass instanceof Klass ? klass.staticClass : klass,\r\n                    isAssignable: false\r\n                }\r\n            }\r\n\r\n            return {\r\n                type: klass,\r\n                isAssignable: false\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Der Bezeichner \" + node.identifier + \" ist hier nicht bekannt.\", node.position);\r\n\r\n    }\r\n\r\n    findLocalVariable(identifier: string): Variable {\r\n        let st = this.currentSymbolTable;\r\n\r\n        while (st != null) {\r\n\r\n            let variable = st.variableMap.get(identifier);\r\n\r\n            if (variable != null && variable.stackPos != null) {\r\n                return variable;\r\n            }\r\n\r\n            st = st.parent;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAttribute(identifier: string, position: TextPosition): Attribute {\r\n        let classContext = this.currentSymbolTable.classContext;\r\n        if (classContext == null) {\r\n            return null;\r\n        }\r\n\r\n        let attribute = classContext.getAttribute(identifier, Visibility.private);\r\n        if (attribute.attribute != null) return attribute.attribute;\r\n\r\n        if (classContext instanceof Klass) {\r\n            let staticAttribute = classContext.staticClass.getAttribute(identifier, Visibility.private);\r\n            if (staticAttribute.attribute != null) return staticAttribute.attribute;\r\n        }\r\n\r\n        // this.pushError(attribute.error, position);\r\n\r\n        return null;\r\n    }\r\n\r\n    callMethod(node: MethodcallNode): StackType {\r\n\r\n        let objectNode: StackType = null;\r\n\r\n        if (node.object == null) {\r\n\r\n            // call method of this-class?\r\n\r\n            let thisClass = this.currentSymbolTable.classContext;\r\n            if (thisClass != null) {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: 0\r\n                });\r\n\r\n                objectNode = {\r\n                    type: thisClass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                this.pushError(\"Ein Methodenaufruf (hier: \" + node.identifier +\r\n                    \") ohne Punktschreibweise ist nur innerhalb anderer Methoden möglich.\", node.position);\r\n                return null;\r\n            }\r\n\r\n        } else {\r\n            objectNode = this.processNode(node.object);\r\n        }\r\n\r\n        if (objectNode == null) return null;\r\n\r\n        if (!(\r\n            (objectNode.type instanceof Klass) || (objectNode.type instanceof StaticClass) ||\r\n            (objectNode.type instanceof Interface && (node.object[\"variable\"] != null || node.object[\"attribute\"] != null)) || (objectNode.type instanceof Enum))) {\r\n\r\n            if (objectNode.type == null) {\r\n                this.pushError(\"Werte dieses Datentyps besitzen keine Methoden.\", node.position);\r\n            } else {\r\n                if(objectNode.type instanceof Interface){\r\n                    this.pushError('Methodendefinitionen eines Interfaces können nicht statisch aufgerufen werden.', node.position);\r\n                } else {\r\n                    this.pushError('Werte des Datentyps ' + objectNode.type.identifier + \" besitzen keine Methoden.\", node.position);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | Interface = <any>objectNode.type;\r\n\r\n        let posBeforeParameterEvaluation = this.currentProgram.statements.length;\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n\r\n        let allStatements = this.currentProgram.statements;\r\n        if (node.operands != null) {\r\n            // for (let p of node.operands) {\r\n            for (let j = 0; j < node.operands.length; j++) {\r\n                let p = node.operands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let methods: { error: string, methodList: Method[] };\r\n        if (objectType instanceof Interface) {\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false);\r\n        } else {\r\n            let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false, upToVisibility);\r\n\r\n        }\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, objectType.getMethods(Visibility.private, node.identifier), node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        // You CAN call a static method on a object..., so:\r\n        if (method.isStatic && objectType instanceof Klass && objectType.identifier != \"PrintStream\") {\r\n            this.pushError(\"Es ist kein guter Programmierstil, statische Methoden einer Klasse mithilfe eines Objekts aufzurufen. Besser wäre hier \" + objectType.identifier + \".\" + method.identifier + \"(...).\", node.position, \"info\");\r\n            this.insertStatements(posBeforeParameterEvaluation, [{\r\n                type: TokenType.decreaseStackpointer,\r\n                position: node.position,\r\n                popCount: 1\r\n            },\r\n            {\r\n                type: TokenType.pushStaticClassObject,\r\n                position: node.position,\r\n                klass: objectType\r\n            }\r\n            ]);\r\n        }\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            // Marker 1\r\n            let srcType = parameterTypes[i];\r\n            // for (let st of parameterStatements[i]) {\r\n            //     this.currentProgram.statements.push(st);\r\n            // }\r\n            let programPosition = allStatements.length;\r\n\r\n            if (!this.ensureAutomaticCasting(srcType, destType, node.operands[i].position, node.operands[i])) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.operands[i].position);\r\n            }\r\n\r\n            if (allStatements.length > programPosition) {\r\n                let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n            }\r\n\r\n\r\n            // if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n            //     if (srcType.getCastInformation(destType).needsStatement) {\r\n            //         this.pushStatements({\r\n            //             type: TokenType.castValue,\r\n            //             position: null,\r\n            //             newType: destType,\r\n            //             stackPosRelative: -parameterTypes.length + 1 + i\r\n            //         });\r\n            //     }\r\n            // }\r\n\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        if (method.visibility != Visibility.public) {\r\n\r\n            let visible = true;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext == null) {\r\n                visible = false;\r\n            } else {\r\n                if (classContext != objectType &&\r\n                    !(classContext instanceof Klass && classContext.implements.indexOf(<Interface>objectType) > 0)) {\r\n                    if (method.visibility == Visibility.private) {\r\n                        visible = false;\r\n                    } else {\r\n                        visible = classContext.hasAncestorOrIs(<Klass | StaticClass>objectType);\r\n                    }\r\n                }\r\n            }\r\n            if (!visible) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" ist an dieser Stelle des Programms nicht sichtbar.\", node.position);\r\n            }\r\n        }\r\n\r\n        if (method.isStatic && objectNode.type != null &&\r\n            (objectNode.type instanceof StaticClass) &&\r\n            (objectNode.type.Klass instanceof InputClass)) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callInputMethod,\r\n                method: method,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: objectNode.isSuper == null ? false : objectNode.isSuper,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.pushTypePosition(node.rightBracketPosition, method.getReturnType());\r\n\r\n        return { type: method.getReturnType(), isAssignable: false };\r\n\r\n    }\r\n\r\n    pushConstant(node: ConstantNode): StackType {\r\n\r\n        let type: Type;\r\n\r\n        switch (node.constantType) {\r\n            case TokenType.integerConstant:\r\n                type = intPrimitiveType;\r\n                break;\r\n            case TokenType.booleanConstant:\r\n                type = booleanPrimitiveType;\r\n                break;\r\n            case TokenType.floatingPointConstant:\r\n                type = floatPrimitiveType;\r\n                break;\r\n            case TokenType.stringConstant:\r\n                type = stringPrimitiveType;\r\n                this.pushTypePosition(node.position, type);\r\n                break;\r\n            case TokenType.charConstant:\r\n                type = charPrimitiveType;\r\n                break;\r\n            case TokenType.keywordNull:\r\n                type = nullType\r\n                break;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.pushConstant,\r\n            dataType: type,\r\n            position: node.position,\r\n            value: node.constant\r\n        })\r\n\r\n        return { type: type, isAssignable: false };\r\n\r\n    }\r\n\r\n    processBinaryOp(node: BinaryOpNode): StackType {\r\n\r\n        let isAssignment = CodeGenerator.assignmentOperators.indexOf(node.operator) >= 0;\r\n\r\n        if (node.operator == TokenType.ternaryOperator) {\r\n            return this.processTernaryOperator(node);\r\n        }\r\n\r\n        let leftType = this.processNode(node.firstOperand, isAssignment);\r\n\r\n        let programPosAfterLeftOpoerand = this.currentProgram.statements.length;\r\n\r\n        let lazyEvaluationDest = null;\r\n        if (node.operator == TokenType.and) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfFalseAndLeaveOnStack, node.firstOperand.position, this);\r\n        } else if (node.operator == TokenType.or) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfTrueAndLeaveOnStack, node.firstOperand.position, this);\r\n        }\r\n\r\n        let rightType = this.processNode(node.secondOperand);\r\n\r\n        if (leftType == null || leftType.type == null || rightType == null || rightType.type == null) return null;\r\n\r\n        if (isAssignment) {\r\n            if (!this.ensureAutomaticCasting(rightType.type, leftType.type, node.position, node.firstOperand)) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + rightType.type.identifier + \" auf der rechten Seite kann der Variablen auf der linken Seite (Datentyp \" + leftType.type.identifier + \") nicht zugewiesen werden.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n            if (!leftType.isAssignable) {\r\n                this.pushError(\"Dem Term/der Variablen auf der linken Seite des Zuweisungsoperators (=) kann kein Wert zugewiesen werden.\", node.position);\r\n            }\r\n\r\n            let statement: AssignmentStatement = {\r\n                //@ts-ignore\r\n                type: node.operator,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: true\r\n            };\r\n\r\n            this.pushStatements(statement);\r\n\r\n\r\n            return leftType;\r\n\r\n        } else {\r\n\r\n            if (node.firstOperand.type == TokenType.identifier && node.firstOperand.variable != null) {\r\n                let v = node.firstOperand.variable;\r\n                if (v.initialized != null && !v.initialized) {\r\n                    v.usedBeforeInitialization = true;\r\n                    this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                }\r\n            }\r\n\r\n            let resultType = leftType.type.getResultType(node.operator, rightType.type);\r\n\r\n            let unboxableLeft = leftType.type[\"unboxableAs\"];\r\n            let unboxableRight = rightType.type[\"unboxableAs\"];\r\n\r\n            if (resultType == null && (unboxableLeft != null || unboxableRight != null)) {\r\n                let leftTypes: Type[] = unboxableLeft == null ? [leftType.type] : unboxableLeft;\r\n                let rightTypes: Type[] = unboxableRight == null ? [rightType.type] : unboxableRight;\r\n\r\n                for (let lt of leftTypes) {\r\n                    for (let rt of rightTypes) {\r\n                        resultType = lt.getResultType(node.operator, rt);\r\n                        if (resultType != null) {\r\n                            leftType.type = lt;\r\n                            rightType.type = rt;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (resultType != null) break;\r\n                }\r\n            }\r\n\r\n            // Situation Object + String: insert toString()-Method\r\n            if (resultType == null && node.operator == TokenType.plus) {\r\n                if (leftType.type instanceof Klass && rightType.type == stringPrimitiveType) {\r\n                    this.insertStatements(programPosAfterLeftOpoerand, this.getToStringStatement(leftType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                } else if (rightType.type instanceof Klass && leftType.type == stringPrimitiveType) {\r\n                    this.pushStatements(this.getToStringStatement(rightType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                }\r\n            }\r\n\r\n\r\n            if (node.operator in [TokenType.and, TokenType.or]) {\r\n                this.checkIfAssignmentInstedOfEqual(node.firstOperand);\r\n                this.checkIfAssignmentInstedOfEqual(node.secondOperand);\r\n            }\r\n\r\n            if (resultType == null) {\r\n                let bitOperators = [TokenType.ampersand, TokenType.OR];\r\n                let booleanOperators = [\"&& (boolescher UND-Operator)\", \"|| (boolescher ODER-Operator)\"];\r\n                let betterOperators = [\"& &\", \"||\"];\r\n                let opIndex = bitOperators.indexOf(node.operator);\r\n                if (opIndex >= 0 && leftType.type == booleanPrimitiveType && rightType.type == booleanPrimitiveType) {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert. Du meintest wahrscheinlich den Operator \" + booleanOperators[opIndex] + \".\", node.position, \"error\",\r\n                        {\r\n                            title: \"Operator \" + betterOperators[opIndex] + \" verwenden statt \" + TokenTypeReadable[node.operator],\r\n                            editsProvider: (uri) => {\r\n                                return [\r\n                                    {\r\n                                        resource: uri,\r\n                                        edit: {\r\n                                            range: { startLineNumber: node.position.line, startColumn: node.position.column, endLineNumber: node.position.line, endColumn: node.position.column },\r\n                                            text: TokenTypeReadable[node.operator]\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n\r\n                        });\r\n                } else {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert.\", node.position);\r\n                }\r\n                return leftType;\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.binaryOp,\r\n                leftType: leftType.type,\r\n                operator: node.operator,\r\n                position: node.position\r\n            });\r\n\r\n            if (lazyEvaluationDest != null) {\r\n                this.currentProgram.labelManager.markJumpDestination(1, lazyEvaluationDest);\r\n            }\r\n\r\n            return { type: resultType, isAssignable: false };\r\n        }\r\n\r\n\r\n    }\r\n\r\n    processTernaryOperator(node: BinaryOpNode): StackType {\r\n\r\n        let leftType = this.processNode(node.firstOperand);\r\n\r\n        if (leftType == null) return;\r\n\r\n        if (this.ensureAutomaticCasting(leftType.type, booleanPrimitiveType, null, node.firstOperand)) {\r\n\r\n            let secondOperand = node.secondOperand;\r\n            if (secondOperand != null) {\r\n                if (secondOperand.type != TokenType.binaryOp || secondOperand.operator != TokenType.colon) {\r\n                    this.pushError(\"Auf den Fragezeichenoperator müssen - mit Doppelpunkt getrennt - zwei Alternativterme folgen.\", node.position);\r\n                } else {\r\n                    let lm = this.currentProgram.labelManager;\r\n                    let variantFalseLabel = lm.insertJumpNode(TokenType.jumpIfFalse, node.position, this);\r\n                    let firstType = this.processNode(secondOperand.firstOperand);\r\n\r\n                    let endLabel = lm.insertJumpNode(TokenType.jumpAlways, secondOperand.firstOperand.position, this);\r\n                    lm.markJumpDestination(1, variantFalseLabel);\r\n                    let secondType = this.processNode(secondOperand.secondOperand);\r\n                    lm.markJumpDestination(1, endLabel);\r\n\r\n                    let type = firstType.type;\r\n                    if (secondType != null && type != secondType.type && type.canCastTo(secondType.type)) {\r\n                        type = secondType.type;\r\n                    }\r\n\r\n                    return {\r\n                        type: type,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processUnaryOp(node: UnaryOpNode): StackType {\r\n        let leftType = this.processNode(node.operand);\r\n\r\n        if (leftType == null || leftType.type == null) return;\r\n\r\n        if (node.operator == TokenType.minus) {\r\n            if (!leftType.type.canCastTo(floatPrimitiveType)) {\r\n                this.pushError(\"Der Operator - ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        if (node.operator == TokenType.not) {\r\n            if (!(leftType.type == booleanPrimitiveType)) {\r\n                this.checkIfAssignmentInstedOfEqual(node.operand);\r\n                this.pushError(\"Der Operator ! ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.unaryOp,\r\n            operator: node.operator,\r\n            position: node.position\r\n        });\r\n\r\n        return leftType;\r\n    }\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Visibility, Klass } from \"../types/Class.js\";\r\nimport { ArrayInitializationNode, ASTNode, AttributeDeclarationNode, MethodDeclarationNode, NewArrayNode, ParameterNode, TermNode, TypeNode, EnumValueNode, SwitchNode, SwitchCaseNode, ConstantNode, BracketsNode, ScopeNode, TypeParameterNode, LocalVariableDeclarationNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, charPrimitiveType, TokenTypeToDataTypeMap, voidPrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { PrimitiveType, Type } from \"../types/Types.js\";\r\n\r\ntype ASTNodes = ASTNode[];\r\n\r\nexport class Parser {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, \r\n        TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.moduloAssignment, \r\n        TokenType.ANDAssigment, TokenType.XORAssigment, TokenType.ORAssigment, \r\n        TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    static operatorPrecedence: TokenType[][] = [Parser.assignmentOperators,\r\n    [TokenType.ternaryOperator], [TokenType.colon],\r\n\r\n    [TokenType.or], [TokenType.and], [TokenType.OR], [TokenType.XOR], [TokenType.ampersand],\r\n    [TokenType.equal, TokenType.notEqual],\r\n    [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual],\r\n    [TokenType.shiftLeft, TokenType.shiftRight, TokenType.shiftRightUnsigned],\r\n\r\n    // [TokenType.or], [TokenType.and],\r\n    // [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual],\r\n    \r\n    [TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo]\r\n    ];\r\n\r\n    static TokenTypeToVisibilityMap = {\r\n        [TokenType.keywordPublic]: Visibility.public,\r\n        [TokenType.keywordPrivate]: Visibility.private,\r\n        [TokenType.keywordProtected]: Visibility.protected\r\n    };\r\n\r\n    static forwardToInsideClass = [TokenType.keywordPublic, TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordVoid,\r\n    TokenType.identifier, TokenType.rightCurlyBracket, TokenType.keywordStatic, TokenType.keywordAbstract,\r\n    TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n    typeNodes: TypeNode[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n\r\n    constructor(private isInConsoleMode: boolean){\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.mainProgramAst = [];\r\n            this.module.classDefinitionsAST = [];\r\n            this.module.typeNodes = [];\r\n            this.module.errors[1] = this.errorList;\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n        this.typeNodes = [];\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        let astNodes = this.parseMain();\r\n        this.module.mainProgramAst = astNodes.mainProgramAST;\r\n        this.module.classDefinitionsAST = astNodes.classDefinitionAST;\r\n        this.module.mainProgramEnd = astNodes.mainProgramEnd;\r\n        this.module.typeNodes = this.typeNodes;\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if(token1.tt == TokenType.comment){\r\n                    this.lastComment = token1;\r\n                } \r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if(this.lastComment != null){\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if(token.tt == TokenType.comment){\r\n                this.lastComment = token;\r\n            } \r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    expect(tt: TokenType, skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt) \r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n\r\n            this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[]): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            return this.tt == token;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    static ClassTokens: TokenType[] = [TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n    static VisibilityTokens: TokenType[] = [TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordPublic];\r\n    static BeforeClassDefinitionTokens: TokenType[] = Parser.ClassTokens.concat(Parser.VisibilityTokens).concat(TokenType.keywordAbstract).concat(Parser.ClassTokens);\r\n\r\n    parseMain(): { mainProgramAST: ASTNodes, mainProgramEnd: TextPosition, classDefinitionAST: ASTNodes } {\r\n\r\n        let mainProgram: ASTNodes = [];\r\n        let classDefinitions: ASTNodes = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            if (this.comesToken(Parser.BeforeClassDefinitionTokens)) {\r\n                let cd = this.parseClassDefinition();\r\n                if (cd != null) classDefinitions = classDefinitions.concat(cd);\r\n            } else {\r\n                let st = this.parseStatement();\r\n\r\n                if (st != null) {\r\n                    mainProgram = mainProgram.concat(st);\r\n                }\r\n                mainProgramEnd = this.getCurrentPosition();\r\n            }\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                this.pos++;\r\n                this.initializeLookahead();\r\n            }\r\n\r\n        }\r\n\r\n        return {\r\n            mainProgramAST: mainProgram,\r\n            classDefinitionAST: classDefinitions,\r\n            mainProgramEnd: mainProgramEnd\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkIfStatementHasNoEffekt(st: ASTNode) {\r\n        \r\n        if(this.isInConsoleMode) return;\r\n\r\n        if ((st.type == TokenType.binaryOp && Parser.assignmentOperators.indexOf(st.operator) < 0)) {\r\n            let s = \"dieses Terms\";\r\n            switch (st.operator) {\r\n                case TokenType.plus: s = \"dieser Summe\"; break;\r\n                case TokenType.minus: s = \"dieser Differenz\"; break;\r\n                case TokenType.multiplication: s = \"dieses Produkts\"; break;\r\n                case TokenType.division: s = \"dieses Quotienten\"; break;\r\n            }\r\n            s += \" (Operator \" + TokenTypeReadable[st.operator] + \")\"\r\n            this.pushError(`Der Wert ${s} wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?`,\r\n                \"info\", st.position);\r\n        } else if (\r\n            [TokenType.unaryOp, TokenType.pushConstant,\r\n            TokenType.identifier, TokenType.selectArrayElement].indexOf(st.type) >= 0) {\r\n            this.pushError(\"Der Wert dieses Terms wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?\",\r\n                \"info\", st.position);\r\n        }\r\n    }\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode[] {\r\n\r\n        let retStatements: ASTNode[] = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n            case TokenType.identifier:\r\n            case TokenType.keywordThis:\r\n            case TokenType.keywordSuper:\r\n            case TokenType.keywordFinal:\r\n            case TokenType.charConstant:\r\n            case TokenType.integerConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.keywordNew:\r\n                let ret = this.parseVariableDeclarationOrTerm();\r\n                if (expectSemicolon) this.expect(TokenType.semicolon, true, true);\r\n                retStatements = ret;\r\n                break;\r\n            case TokenType.leftCurlyBracket:\r\n                let statements: ASTNode[] = [];\r\n                let positionFrom = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && Parser.BeforeClassDefinitionTokens.indexOf(this.tt) < 0) {\r\n                    statements = statements.concat(this.parseStatement());\r\n                }\r\n                let positionTo = this.getCurrentPosition();\r\n                positionTo.column = positionTo.column + positionTo.length;\r\n                positionTo.length = 0;\r\n                this.expect(TokenType.rightCurlyBracket);\r\n\r\n                retStatements = [{\r\n                    type: TokenType.scopeNode,\r\n                    position: positionFrom,\r\n                    positionTo: positionTo,\r\n                    statements: statements\r\n                }];\r\n                break;\r\n\r\n            case TokenType.keywordWhile:\r\n                retStatements = this.parseWhile();\r\n                break;\r\n            case TokenType.keywordFor:\r\n                retStatements = this.parseFor();\r\n                break;\r\n            case TokenType.keywordDo:\r\n                retStatements = this.parseDo();\r\n                break;\r\n            case TokenType.keywordIf:\r\n                retStatements = this.parseIf();\r\n                break;\r\n            case TokenType.keywordReturn:\r\n                retStatements = this.parseReturn();\r\n                break;\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                retStatements = this.parsePrint();\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                retStatements = this.parseSwitch();\r\n                break;\r\n            case TokenType.keywordBreak:\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordBreak,\r\n                    position: position\r\n                }];\r\n                break;\r\n            case TokenType.keywordContinue:\r\n                let position1 = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordContinue,\r\n                    position: position1\r\n                }];\r\n                break;\r\n            case TokenType.semicolon:\r\n                break;\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n\r\n                let dontSkip = Parser.BeforeClassDefinitionTokens.indexOf(this.tt) >= 0;\r\n                if (!dontSkip) {\r\n                    this.nextToken();\r\n                }\r\n                break;\r\n        }\r\n\r\n        if(retStatements == null){\r\n            // skip additional semicolons if present...\r\n            while (this.tt == TokenType.semicolon && expectSemicolon) {\r\n                this.nextToken();\r\n            }\r\n        }\r\n\r\n        if(retStatements != null && retStatements.length > 0){\r\n            let retStmt = retStatements[retStatements.length - 1];\r\n            if(retStmt != null){\r\n                this.checkIfStatementHasNoEffekt(retStatements[retStatements.length - 1]);\r\n            } else {\r\n                retStatements = null;\r\n            }\r\n        }\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseReturn(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        let term: TermNode;\r\n\r\n        if (!(this.tt == TokenType.semicolon)) {\r\n            term = this.parseTerm();\r\n            this.expect(TokenType.semicolon, true, true);\r\n        }\r\n\r\n        return [{\r\n            type: TokenType.keywordReturn,\r\n            position: position,\r\n            term: term\r\n        }];\r\n\r\n    }\r\n\r\n    parseWhile(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume while\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition  = this.getCurrentPosition();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"while\", rightBracketPosition);\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese while-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordWhile,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseFor(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let semicolonPositions: TextPosition[] = [];\r\n\r\n        this.nextToken(); // consume for\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            if (this.ct[2].tt == TokenType.colon) {\r\n                return this.parseForLoopOverCollection(position, scopeFrom);\r\n            }\r\n\r\n            let statementsBefore = this.parseStatement(false);\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon);\r\n            let condition = this.parseTerm();\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon, true);\r\n            let statementsAfter = this.parseStatement(false);\r\n\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            this.module.pushMethodCallPosition(position, semicolonPositions, \"for\", rightBracketPosition);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            if (condition == null) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordFor,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statementsBefore: statementsBefore,\r\n                    statementsAfter: statementsAfter,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseForLoopOverCollection(position: TextPosition, scopeFrom: TextPosition): ASTNode[] {\r\n\r\n        let variableType = this.parseType();\r\n\r\n        let variableIdentifier = <string>this.cct.value;\r\n        let variableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        this.expect(TokenType.colon, true);\r\n\r\n        let collection = this.parseTerm();\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n        }\r\n\r\n        let statements = this.parseStatement();\r\n        let scopeTo = this.getCurrentPosition();\r\n        scopeTo.length = 0;\r\n\r\n        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n            scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n        }\r\n\r\n        if (collection == null || variableType == null || statements == null) return [];\r\n\r\n        return [\r\n            {\r\n                type: TokenType.forLoopOverCollection,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                variableIdentifier: variableIdentifier,\r\n                variableType: variableType,\r\n                variablePosition: variableIdentifierPosition,\r\n                collection: collection,\r\n                statements: statements\r\n            }\r\n        ];\r\n\r\n    }\r\n\r\n    parsePrint(): ASTNode[] {\r\n\r\n        let tt = this.tt;\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.leftBracket, false)) {\r\n            let mcp = this.parseMethodCallParameters();\r\n            let paramenters = mcp.nodes;\r\n            if (paramenters.length > 2) {\r\n                this.pushError(\"Die Methoden print und println haben maximal zwei Parameter.\", \"error\", position);\r\n            }\r\n\r\n            this.expect(TokenType.semicolon, true, true);\r\n\r\n            return [{\r\n                //@ts-ignore\r\n                type: tt,\r\n                position: position,\r\n                text: paramenters.length == 0 ? null : paramenters[0],\r\n                color: paramenters.length <= 1 ? null : paramenters[1],\r\n                commaPositions: mcp.commaPositions,\r\n                rightBracketPosition: mcp.rightBracketPosition\r\n            }];\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseSwitch(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            let switchTerm = this.parseTerm();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"switch\", this.getCurrentPosition());\r\n\r\n            this.expect(TokenType.rightBracket);\r\n            let scopeFrom = this.getCurrentPosition();\r\n\r\n            this.expect(TokenType.leftCurlyBracket, true);\r\n\r\n            let switchNode: SwitchNode = {\r\n                type: TokenType.keywordSwitch,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: null,\r\n                condition: switchTerm,\r\n                caseNodes: []\r\n            }\r\n\r\n            let defaultAlreadyThere = false;\r\n\r\n            while (this.tt == TokenType.keywordCase || this.tt == TokenType.keywordDefault) {\r\n                let casePosition = this.getCurrentPosition();\r\n\r\n                let isDefault = this.tt == TokenType.keywordDefault;\r\n                if (isDefault) {\r\n                    if (defaultAlreadyThere) {\r\n                        this.pushError(\"Eine switch-Anweisung darf nur maximal einen default-Zweig haben.\", \"error\", casePosition);\r\n                    } else {\r\n                        defaultAlreadyThere = true;\r\n                    }\r\n                }\r\n\r\n                this.nextToken();\r\n\r\n                let caseTerm = null;\r\n                if (!isDefault) {\r\n                    caseTerm = this.parseUnary();\r\n                }\r\n\r\n                this.expect(TokenType.colon, true);\r\n\r\n                let statements: ASTNode[] = [];\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && this.tt != TokenType.keywordCase && this.tt != TokenType.keywordDefault\r\n                ) {\r\n                    let statement = this.parseStatement();\r\n                    if (statement != null) {\r\n                        statements = statements.concat(statement);\r\n                    }\r\n                }\r\n\r\n                let switchCaseNode: SwitchCaseNode = {\r\n                    type: TokenType.keywordCase,\r\n                    position: casePosition,\r\n                    caseTerm: caseTerm,\r\n                    statements: statements\r\n                }\r\n\r\n                switchNode.caseNodes.push(switchCaseNode);\r\n\r\n            }\r\n\r\n            switchNode.scopeTo = this.getEndOfCurrentToken();\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n            return [switchNode];\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseIf(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume if\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.module.pushMethodCallPosition(position, [], \"if\", rightBracketPosition);\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Falls die Bedingung zutrifft, wird nur der Strichpunkt ausgeführt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n            let statements = this.parseStatement();\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let elseStatements: ASTNode[] = null;\r\n\r\n            if (this.comesToken(TokenType.keywordElse)) {\r\n                this.nextToken();\r\n                elseStatements = this.parseStatement();\r\n            }\r\n\r\n            if (condition == null && this.errorList.length == 0) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordIf,\r\n                    position: position,\r\n                    condition: condition,\r\n                    statementsIfTrue: statements,\r\n                    statementsIfFalse: elseStatements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseDo(): ASTNode[] {\r\n\r\n        // let i = 10;\r\n        // do {\r\n        //     i = i +7;\r\n        // } while (i < 100);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        this.nextToken(); // consume do\r\n        let statements = this.parseStatement();\r\n\r\n        if (this.expect(TokenType.keywordWhile, true)) {\r\n            if (this.expect(TokenType.leftBracket, true)) {\r\n                let condition = this.parseTerm();\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n\r\n                this.expect(TokenType.rightBracket, true);\r\n\r\n                return [\r\n                    {\r\n                        type: TokenType.keywordDo,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        condition: condition,\r\n                        statements: statements\r\n                    }\r\n                ];\r\n\r\n            }\r\n        }\r\n        return [];\r\n\r\n    }\r\n\r\n    comesGenericType(): boolean {\r\n        if (this.ct[1].tt != TokenType.lower) return false;\r\n        if (this.ct[2].tt != TokenType.identifier) return false;\r\n        return this.ct[3].tt == TokenType.greater || this.ct[3].tt == TokenType.comma;\r\n\r\n    }\r\n\r\n    parseVariableDeclarationOrTerm(): ASTNode[] {\r\n\r\n        // Two identifiers in a row or identifier[]\r\n        if (\r\n            (this.tt == TokenType.identifier || this.tt == TokenType.keywordFinal) &&\r\n            (this.ct[1].tt == TokenType.identifier\r\n                || this.ct[1].tt == TokenType.leftRightSquareBracket ||\r\n                this.comesGenericType() \r\n            )\r\n        ) {\r\n            let ret: ASTNode[] = [];\r\n            let type: TypeNode = null;\r\n            do {\r\n                if (type != null) this.expect(TokenType.comma, true);\r\n                let vd = this.parseVariableDeclaration(type);\r\n                ret.push(vd);\r\n                type = vd?.variableType;\r\n                //@ts-ignore\r\n            } while (this.tt == TokenType.comma);\r\n\r\n            return ret;\r\n        } else {\r\n            return [this.parseTerm()];\r\n        }\r\n\r\n    }\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parsePlusPlusMinusMinus();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        // 28.05.2021: This broke evalation of ternery operator, so i commented it out.\r\n        // Don't know why it was there in the first place, so i expect some havoc to come...\r\n        // 15 Minutes later:\r\n        // This if-clause was here to make terms aber case possible, e.g. switch(a){ case 7 + 2: println(\"Here!\")}\r\n        // -> Bad idea. I changed this to only parse unary Terms left of the colon so i can comment out this if-clause here\r\n        // and fix the ternary operator.\r\n        //\r\n        // if (this.tt == TokenType.colon) {\r\n        //     return left;\r\n        // }\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n\r\n            for (let opData of [{ op: TokenType.lower, wrong: \"=<\", right: \"<=\", correctOp: TokenType.lowerOrEqual }, \r\n                                { op: TokenType.greater, wrong: \"=>\", right: \">=\", correctOp: TokenType.greaterOrEqual }]) {\r\n                if (operator == TokenType.assignment && this.tt == opData.op) {\r\n                    let position2 = this.getCurrentPosition();\r\n                    this.pushError(`Den Operator ${opData.wrong} gibt es nicht. Du meintest sicher: ${opData.right}`, \"error\",\r\n                        Object.assign({}, position, { length: 2 }), {\r\n                        title: `${opData.wrong} durch ${opData.right} ersetzen`,\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position2.column + position2.length },\r\n                                        text: opData.right\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    });\r\n                    this.nextToken();\r\n                    operator = opData.correctOp;\r\n                }\r\n            }\r\n\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parsePlusPlusMinusMinus();\r\n            }\r\n\r\n            if (right != null) {\r\n\r\n                let constantFolding = false;\r\n                if (this.isConstant(left) && this.isConstant(right)) {\r\n                    let pcLeft = <ConstantNode>left;\r\n                    let pcRight = <ConstantNode>right;\r\n                    let typeLeft = TokenTypeToDataTypeMap[pcLeft.constantType];\r\n                    let typeRight = TokenTypeToDataTypeMap[pcRight.constantType];\r\n                    let resultType = typeLeft.getResultType(operator, typeRight);\r\n                    if (resultType != null) {\r\n                        constantFolding = true;\r\n                        let result = typeLeft.compute(operator, { type: typeLeft, value: pcLeft.constant },\r\n                            { type: typeRight, value: pcRight.constant });\r\n\r\n                        this.considerIntDivisionWarning(operator, typeLeft, pcLeft.constant, typeRight, pcRight.constant, position);\r\n\r\n                        pcLeft.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcLeft.constant = result;\r\n                        pcLeft.position.length = pcRight.position.column + pcRight.position.length - pcLeft.position.column;\r\n                    }\r\n                }\r\n\r\n                if (!constantFolding)\r\n                    left = {\r\n                        type: TokenType.binaryOp,\r\n                        position: position,\r\n                        operator: operator,\r\n                        firstOperand: left,\r\n                        secondOperand: right\r\n                    };\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n    considerIntDivisionWarning(operator: TokenType, typeLeft: Type, leftConstant: any, typeRight: Type, rightConstant: any, position: TextPosition) {\r\n    \r\n        if(operator == TokenType.division){\r\n            if(this.isIntegerType(typeLeft) && this.isIntegerType(typeRight)){\r\n                if(rightConstant != 0 && leftConstant/rightConstant != Math.floor(leftConstant/rightConstant)){\r\n                    this.pushError(\"Da \" + leftConstant + \" und \" + rightConstant + \" ganzzahlige Werte sind, wird diese Division als Ganzzahldivision ausgeführt und ergibt den Wert \" + Math.floor(leftConstant/rightConstant) + \". Falls das nicht gewünscht ist, hänge '.0' an einen der Operanden.\", \"info\", position);\r\n                }\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n    isIntegerType(type: Type): boolean {\r\n        return type == intPrimitiveType;\r\n    }\r\n\r\n    isConstant(node: TermNode) {\r\n\r\n        return (node != null && node.type == TokenType.pushConstant);\r\n\r\n    }\r\n\r\n    parsePlusPlusMinusMinus(): TermNode {\r\n\r\n        let incrementDecrementBefore: TokenType = null;\r\n        let position = null;\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            incrementDecrementBefore = this.tt;\r\n            position = this.getCurrentPosition();\r\n            this.nextToken();\r\n        }\r\n\r\n        let t: TermNode = this.parseUnary();\r\n\r\n        if (incrementDecrementBefore != null) {\r\n            t = {\r\n                type: TokenType.incrementDecrementBefore,\r\n                position: position,\r\n                operator: incrementDecrementBefore,\r\n                operand: t\r\n            }\r\n        }\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            t = {\r\n                type: TokenType.incrementDecrementAfter,\r\n                position: this.getCurrentPosition(),\r\n                operator: this.tt,\r\n                operand: t\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return t;\r\n\r\n    }\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseDotOrArrayChains(this.bracketOrCasting());\r\n            case TokenType.minus:\r\n            case TokenType.not:\r\n            case TokenType.tilde:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                if (this.isConstant(term)) {\r\n                    let pcTerm = <ConstantNode>term;\r\n                    let typeTerm = TokenTypeToDataTypeMap[pcTerm.constantType];\r\n                    let resultType = typeTerm.getResultType(tt1);\r\n                    if (resultType != null) {\r\n                        let result = typeTerm.compute(tt1, { type: typeTerm, value: pcTerm.constant });\r\n                        pcTerm.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcTerm.constant = result;\r\n                        position.length = pcTerm.position.column - position.column + 1;\r\n                        return pcTerm;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n            case TokenType.keywordSuper:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.superConstructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordSuper,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordThis:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.constructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordThis,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordNew:\r\n                return this.parseDotOrArrayChains(this.parseNew());\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.keywordNull:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.keywordNull,\r\n                    constant: null\r\n                };\r\n                this.nextToken();\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                }\r\n\r\n                return this.parseDotOrArrayChains(term);\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder this oder super. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    tokensNotAfterCasting: TokenType[] = [TokenType.multiplication, TokenType.division, TokenType.plus,\r\n    TokenType.minus, TokenType.dot, TokenType.modulo, TokenType.semicolon, TokenType.rightBracket];\r\n\r\n    bracketOrCasting(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.identifier && this.ct[1].tt == TokenType.rightBracket &&\r\n            this.tokensNotAfterCasting.indexOf(this.ct[2].tt) < 0) {\r\n\r\n            let castToType = this.parseType();\r\n            let position1 = this.getCurrentPosition(); // Position of )\r\n            position.length = position1.column - position.column + 1;\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let whatToCast = this.parsePlusPlusMinusMinus();\r\n\r\n            return {\r\n                type: TokenType.castValue,\r\n                position: position,\r\n                castToType: castToType,\r\n                whatToCast: whatToCast\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.isConstant(term)) {\r\n                return term;\r\n            }\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseNew(): TermNode {\r\n\r\n        this.nextToken();\r\n        let position = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            let identifier = <string>this.cct.value;\r\n            let identifierPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n\r\n            let genericParameterTypes: TypeNode[] = null;\r\n\r\n            if (this.tt == TokenType.lower) {\r\n\r\n                genericParameterTypes = [];\r\n                let first: boolean = true;\r\n                this.nextToken();\r\n\r\n                //@ts-ignore\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                    if (!first) this.nextToken(); // consume comma\r\n\r\n                    first = false;\r\n\r\n                    genericParameterTypes.push(this.parseType());\r\n\r\n                }\r\n\r\n                this.expect(TokenType.greater);\r\n                if (genericParameterTypes.length == 0) genericParameterTypes = null;\r\n            }\r\n\r\n            if (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n\r\n                let typenode: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: position,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n                this.typeNodes.push(typenode);\r\n\r\n                let elementCount: TermNode[] = [];\r\n\r\n                while (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n                    typenode.arrayDimension++;\r\n\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.leftRightSquareBracket) {\r\n                        elementCount.push(null);\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.nextToken();\r\n                        elementCount.push(this.parseTerm());\r\n                        this.expect(TokenType.rightSquareBracket, true);\r\n                    }\r\n\r\n                }\r\n\r\n                let initialization = null;\r\n\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    initialization = this.parseArrayLiteral(typenode);\r\n                }\r\n\r\n                let newArrayNode: NewArrayNode = {\r\n                    type: TokenType.newArray,\r\n                    position: position,\r\n                    arrayType: typenode,\r\n                    elementCount: elementCount,\r\n                    initialization: initialization\r\n                }\r\n\r\n                return newArrayNode;\r\n\r\n\r\n            } else if (this.tt == TokenType.leftBracket) {\r\n                let parameters = this.parseMethodCallParameters();\r\n\r\n                let classType: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: identifierPosition,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n\r\n                this.typeNodes.push(classType);\r\n\r\n                return {\r\n                    type: TokenType.newObject,\r\n                    position: position,\r\n                    classType: classType,\r\n                    constructorOperands: parameters.nodes,\r\n                    rightBracketPosition: parameters.rightBracketPosition,\r\n                    commaPositions: parameters.commaPositions\r\n                }\r\n            } else {\r\n                this.pushError(\"Konstruktoraufruf (also runde Klammer auf) oder Array-Intanzierung (eckige Klammer auf) erwartet.\", \"error\", this.getCurrentPosition());\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseArrayLiteral(arrayType: TypeNode): ArrayInitializationNode {\r\n        // expects { as next token\r\n\r\n        let nodes: (ArrayInitializationNode | TermNode)[] = [];\r\n        let position = this.getCurrentPosition();\r\n        let dimension = null;\r\n\r\n        this.expect(TokenType.leftCurlyBracket, true);\r\n        if (this.tt != TokenType.rightCurlyBracket) {\r\n\r\n            let first = true;\r\n            while (first || this.tt == TokenType.comma) {\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                let newDimension: number;\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    let newType: TypeNode = {\r\n                        type: TokenType.type,\r\n                        position: this.getCurrentPosition(),\r\n                        arrayDimension: arrayType.arrayDimension - 1,\r\n                        identifier: arrayType.identifier\r\n                    }\r\n                    this.typeNodes.push(newType);\r\n                    let al = this.parseArrayLiteral(newType);\r\n                    newDimension = al.dimension + 1;\r\n                    nodes.push(al);\r\n                } else {\r\n                    nodes.push(this.parseTerm());\r\n                    newDimension = 1;\r\n                }\r\n\r\n                if (dimension != null) {\r\n                    if (dimension != newDimension) {\r\n                        this.pushError(\"Die Dimension dieses Array-Literals (\" + (newDimension - 1) + \" ist ungleich derjenigen der vorangegangenen Array-Literale (\" + (dimension - 1) + \").\", \"error\", position1);\r\n                    }\r\n                }\r\n                dimension = newDimension;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n        let ain: ArrayInitializationNode = {\r\n            type: TokenType.arrayInitialization,\r\n            position: position,\r\n            arrayType: arrayType,\r\n            dimension: dimension,\r\n            nodes: nodes\r\n        }\r\n\r\n        return ain;\r\n\r\n    }\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            let parameter = this.parseTerm();\r\n            if (parameter != null) {\r\n                parameters.push(parameter);\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.pushAttribute,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        object: term\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // let position = this.getCurrentPosition();\r\n                let position = term.position;\r\n                this.nextToken();\r\n                let index = this.parseTerm();\r\n                let positionEnd = this.getCurrentPosition();\r\n                let position1: TextPosition = Object.assign({}, position);\r\n                this.expect(TokenType.rightSquareBracket, true);\r\n                if (positionEnd.line == position.line) {\r\n                    position1.length = positionEnd.column + positionEnd.length - position1.column;\r\n                } else {\r\n                    position1 = positionEnd;\r\n                }\r\n                term = {\r\n                    type: TokenType.selectArrayElement,\r\n                    position: position1,\r\n                    index: index,\r\n                    object: term\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n    parseVariableDeclaration(type: TypeNode): LocalVariableDeclarationNode {\r\n\r\n        let isFinal = false;\r\n        if (this.tt == TokenType.keywordFinal) {\r\n            isFinal = true;\r\n            this.nextToken();\r\n        }\r\n\r\n        if (type == null) {\r\n            type = this.parseType();\r\n        }\r\n\r\n        if(this.tt != TokenType.identifier){\r\n            this.pushError(\"Hier wird ein Bezeichner (Name) einer Variable erwartet.\", \"error\", this.getCurrentPosition());\r\n            return null;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let initialization: TermNode = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.assignment) {\r\n            this.nextToken();\r\n            //@ts-ignore\r\n            if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                initialization = this.parseArrayLiteral(type);\r\n            } else {\r\n                initialization = this.parseTerm();\r\n            }\r\n        }\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.endofSourcecode && type == null && identifier == null) return null;\r\n\r\n        return {\r\n            type: TokenType.localVariableDeclaration,\r\n            position: position,\r\n            identifier: identifier,\r\n            variableType: type,\r\n            initialization: initialization,\r\n            isFinal: isFinal\r\n        }\r\n\r\n    }\r\n\r\n    parseType(): TypeNode {\r\n\r\n        /**\r\n         * e.g. int, int[][], Integer, ArrayList<Integer> ,HashMap<Integer, ArrayList<String>>[][]\r\n         */\r\n\r\n\r\n        if(this.tt != TokenType.identifier && this.tt != TokenType.keywordVoid){\r\n            this.pushError(\"Erwartet wird ein Datentyp. Dieser muss mit einem Bezeichner beginnen. Gefunden wurde: \" + this.cct.value, \"error\", this.getCurrentPosition());\r\n                this.nextToken();\r\n            return {\r\n                type: TokenType.type,\r\n                position: this.getCurrentPosition(),\r\n                arrayDimension: 0,\r\n                identifier: \"int\",\r\n                genericParameterTypes: []\r\n            };\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let genericParameterTypes: TypeNode[] = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.lower) {\r\n\r\n            genericParameterTypes = [];\r\n            let first: boolean = true;\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                if (!first) this.nextToken(); // consume comma\r\n\r\n                first = false;\r\n\r\n                genericParameterTypes.push(this.parseType());\r\n\r\n            }\r\n\r\n            this.expect(TokenType.greater);\r\n\r\n        }\r\n\r\n        let arrayDimension = 0;\r\n        //@ts-ignore\r\n        while (this.tt == TokenType.leftRightSquareBracket) {\r\n            arrayDimension++;\r\n            position.length += 2;\r\n            this.nextToken();\r\n        }\r\n\r\n        let typenode: TypeNode = {\r\n            type: TokenType.type,\r\n            position: position,\r\n            arrayDimension: arrayDimension,\r\n            identifier: identifier,\r\n            genericParameterTypes: genericParameterTypes\r\n        }\r\n\r\n        this.typeNodes.push(typenode);\r\n\r\n        return typenode;\r\n\r\n    }\r\n\r\n\r\n    parseClassDefinition(): ASTNode {\r\n\r\n        let commentBefore = this.cct.commentBefore;\r\n        let modifiers = this.collectModifiers();\r\n\r\n        if (!this.comesToken(Parser.ClassTokens)) {\r\n            this.pushError(\"Erwartet wird class, interface oder enum. Gefunden wurde: \" + this.cct.value);\r\n            return null;\r\n        }\r\n\r\n        let classType = this.tt;\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n\r\n            let identifier = <string>this.cct.value;\r\n            let position = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n            let typeParameters: TypeParameterNode[] = [];\r\n            // For Generics: parse expression like <E, F extends Test implements Comparable<Test>>\r\n            if (this.tt == TokenType.lower) {\r\n                typeParameters = this.parseTypeParameterDefinition();\r\n            }\r\n\r\n            let extendsImplements = this.parseExtendsImplements(classType == TokenType.keywordInterface);\r\n\r\n            if (classType == TokenType.keywordEnum) {\r\n                return this.parseEnum(identifier, extendsImplements, position, modifiers.visibility, commentBefore);\r\n            }\r\n\r\n            let scopeFrom = this.getCurrentPosition();\r\n            if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n                let methodsAndAttributes = this.parseClassBody(classType, identifier);\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n                this.expect(TokenType.rightCurlyBracket, true);\r\n                switch (classType) {\r\n\r\n                    case TokenType.keywordClass: return {\r\n                        type: TokenType.keywordClass,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        identifier: identifier,\r\n                        attributes: methodsAndAttributes.attributes,\r\n                        methods: methodsAndAttributes.methods,\r\n                        isAbstract: modifiers.isAbstract,\r\n                        visibility: modifiers.visibility,\r\n                        extends: extendsImplements.extends,\r\n                        implements: extendsImplements.implements,\r\n                        typeParameters: typeParameters,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                    case TokenType.keywordInterface: return {\r\n                        type: TokenType.keywordInterface,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        methods: methodsAndAttributes.methods,\r\n                        typeParameters: typeParameters,\r\n                        extends: extendsImplements.implements,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseTypeParameterDefinition(): TypeParameterNode[] {\r\n\r\n        let typeParameters: TypeParameterNode[] = [];\r\n\r\n        let identifierMap = {};\r\n\r\n        this.expect(TokenType.lower, true);\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n            if (!first) this.expect(TokenType.comma, true);\r\n\r\n            let tp: TypeParameterNode = {\r\n                type: TokenType.typeParameter,\r\n                position: this.getCurrentPosition(),\r\n                identifier: <string>this.cct.value,\r\n                extends: null,\r\n                implements: null\r\n            };\r\n\r\n            if (identifierMap[tp.identifier] != null) {\r\n                this.pushError(\"Zwei Typparameter dürfe nicht denselben Bezeichner tragen.\");\r\n            }\r\n\r\n            identifierMap[tp.identifier] = true;\r\n\r\n            this.nextToken();\r\n\r\n            let extendsImplements = this.parseTypeParameterBounds();\r\n\r\n            tp.extends = extendsImplements.extends;\r\n\r\n            if (tp.extends != null && tp.extends.arrayDimension > 0) {\r\n                this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n            }\r\n\r\n            tp.implements = extendsImplements.implements;\r\n\r\n            tp.implements.forEach((im) => {\r\n                if (im.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n                }\r\n            });\r\n\r\n            first = false;\r\n\r\n            typeParameters.push(tp);\r\n\r\n        }\r\n\r\n        this.expect(TokenType.greater, true);\r\n\r\n        return typeParameters;\r\n    }\r\n\r\n    parseEnum(identifier: string, extendsImplements: {\r\n        extends: TypeNode;\r\n        implements: TypeNode[];\r\n    }, position: TextPosition, visibility: Visibility, commentBefore: Token): ASTNode {\r\n\r\n        if (extendsImplements.extends != null) {\r\n            this.pushError(\"Ein enum kann nicht mit extends erweitert werden.\");\r\n        }\r\n        if (extendsImplements.implements.length > 0) {\r\n            this.pushError(\"Ein enum kann kein Interface implementieren.\");\r\n        }\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n            let values: EnumValueNode[] = this.parseEnumValues();\r\n\r\n            let methodsAndAttributes = this.parseClassBody(TokenType.keywordEnum, identifier);\r\n\r\n            let scopeTo = this.getEndOfCurrentToken();\r\n\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n\r\n            return {\r\n                type: TokenType.keywordEnum,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                attributes: methodsAndAttributes.attributes,\r\n                methods: methodsAndAttributes.methods,\r\n                identifier: identifier,\r\n                values: values,\r\n                visibility: visibility,\r\n                commentBefore: commentBefore\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseEnumValues(): EnumValueNode[] {\r\n\r\n        let values: EnumValueNode[] = [];\r\n\r\n        let pos: number = 0;\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || this.tt == TokenType.comma) {\r\n            pos = this.pos;\r\n            if (!first) this.nextToken(); // skip comma\r\n            first = false;\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                let constructorParameters: TermNode[] = null;\r\n\r\n                let commaPositions: TextPosition[] = [];\r\n                let rightBracketPosition: TextPosition = null;\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let mcp = this.parseMethodCallParameters();\r\n                    constructorParameters = mcp.nodes;\r\n                    commaPositions = mcp.commaPositions;\r\n                    rightBracketPosition = mcp.rightBracketPosition;\r\n                }\r\n\r\n                values.push({\r\n                    type: TokenType.pushEnumValue,\r\n                    constructorParameters: constructorParameters,\r\n                    identifier: identifier,\r\n                    position: position,\r\n                    commaPositions: commaPositions,\r\n                    rightBracketPosition: rightBracketPosition\r\n                });\r\n\r\n            };\r\n\r\n            if (this.pos == pos) {\r\n                this.nextToken(); // in case of parsing-emergency\r\n            }\r\n        }\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return values;\r\n\r\n    }\r\n\r\n    parseClassBody(classType: TokenType, className: string): { methods: MethodDeclarationNode[], attributes: AttributeDeclarationNode[] } {\r\n\r\n        // Assumption: { is already consumed\r\n\r\n        let methods: MethodDeclarationNode[] = [];\r\n        let attributes: AttributeDeclarationNode[] = [];\r\n\r\n        while (true) {\r\n\r\n            if (this.tt == TokenType.rightCurlyBracket || this.tt == TokenType.endofSourcecode) {\r\n                break;\r\n            }\r\n\r\n            let commentBefore: Token = this.cct.commentBefore;\r\n\r\n            let annotation = null;\r\n            if(this.tt == TokenType.at){\r\n                annotation = this.cct.value;\r\n                this.nextToken();\r\n            }\r\n            let modifiers = this.collectModifiers();\r\n\r\n            let isConstructor = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            if (this.tt == TokenType.identifier && <string>this.cct.value == className && this.ct[1].tt == TokenType.leftBracket) {\r\n                isConstructor = true;\r\n            }\r\n\r\n            let type = this.parseType();\r\n\r\n            if(isConstructor) {\r\n                type = {\r\n                    identifier: \"void\",\r\n                    arrayDimension: 0,\r\n                    position: type.position,\r\n                    type: TokenType.type\r\n                }\r\n            }\r\n\r\n            if (isConstructor || this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = className;\r\n\r\n                if (!isConstructor) {\r\n                    position = this.getCurrentPosition();\r\n\r\n                    identifier = <string>this.cct.value;\r\n                    this.nextToken();\r\n                }\r\n\r\n                if (this.tt == TokenType.leftBracket) {\r\n\r\n                    if (isConstructor && classType == TokenType.keywordEnum && modifiers.visibility != Visibility.private) {\r\n                        this.pushError(\"Konstruktoren in enums müssen private sein.\", \"error\", position);\r\n                    }\r\n\r\n                    let parameters: ParameterNode[] = this.parseMethodDeclarationParameters();\r\n\r\n                    let statements: ASTNode[];\r\n                    let scopeFrom: TextPosition = this.getCurrentPosition();\r\n                    let scopeTo: TextPosition = scopeFrom;\r\n\r\n                    if (modifiers.isAbstract) {\r\n                        this.expect(TokenType.semicolon, true);\r\n                        if (isConstructor) {\r\n                            this.pushError(\"Ein Konstruktor kann nicht abstrakt sein.\", \"error\", position);\r\n                        }\r\n                        statements = [];\r\n                    } else {\r\n                        scopeFrom = this.getCurrentPosition();\r\n                        statements = this.parseStatement();\r\n                        scopeTo = this.getEndOfCurrentToken();\r\n                        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                            let scopeNode = <ScopeNode>statements[0];\r\n                            scopeFrom = scopeNode.position;\r\n                            scopeTo = scopeNode.positionTo;\r\n                        }\r\n\r\n                    }\r\n\r\n                    methods.push({\r\n                        type: TokenType.methodDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        parameters: parameters,\r\n                        statements: statements,\r\n                        visibility: modifiers.visibility,\r\n                        isAbstract: modifiers.isAbstract || classType == TokenType.keywordInterface,\r\n                        isStatic: modifiers.isStatic,\r\n                        isConstructor: isConstructor,\r\n                        returnType: type,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                } else {\r\n\r\n                    if (identifier == className) {\r\n                        this.pushError(\"Das Attribut \" + className + \" darf nicht denselben Bezeichner haben wie die Klasse.\", \"error\", position);\r\n                    }\r\n\r\n                    let initialization: TermNode = null;\r\n\r\n                    if (this.tt == TokenType.assignment) {\r\n                        this.nextToken();\r\n                        //@ts-ignore\r\n                        if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                            initialization = this.parseArrayLiteral(type);\r\n                        } else {\r\n                            initialization = this.parseTerm();\r\n                        }\r\n                    }\r\n\r\n                    this.expect(TokenType.semicolon);\r\n\r\n                    attributes.push({\r\n                        type: TokenType.attributeDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        attributeType: type,\r\n                        isStatic: modifiers.isStatic,\r\n                        isFinal: modifiers.isFinal,\r\n                        visibility: modifiers.visibility,\r\n                        initialization: initialization,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                    if (classType == TokenType.keywordInterface) {\r\n                        this.pushError(\"Interfaces dürfen keine Attribute enthalten.\", \"error\", position);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        return { methods: methods, attributes: attributes }\r\n\r\n    }\r\n\r\n    parseMethodDeclarationParameters(): ParameterNode[] {\r\n\r\n        // Assumption: next token is (\r\n        let parameters: ParameterNode[] = [];\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.rightBracket) {\r\n            this.nextToken();\r\n            return [];\r\n        }\r\n\r\n        let ellipsis = false;\r\n\r\n        while (true) {\r\n            if (ellipsis) {\r\n                this.pushError(\"Nur der letzte Parameter darf als Ellipsis (...) definiert werden.\");\r\n            }\r\n            let isFinal = this.tt == TokenType.keywordFinal;\r\n\r\n            if (isFinal) this.nextToken();\r\n\r\n            let type: TypeNode = this.parseType();\r\n\r\n            ellipsis = this.tt == TokenType.ellipsis;\r\n            if (ellipsis) {\r\n                this.nextToken();\r\n                type.arrayDimension++;\r\n            }\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n                let identifier = <string>this.cct.value;\r\n                parameters.push({\r\n                    type: TokenType.parameterDeclaration,\r\n                    position: this.getCurrentPosition(),\r\n                    identifier: identifier,\r\n                    parameterType: type,\r\n                    isFinal: isFinal,\r\n                    isEllipsis: ellipsis\r\n                });\r\n                this.nextToken();\r\n            }\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken(); // consume comma\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return parameters;\r\n\r\n    }\r\n\r\n    parseExtendsImplements(isInterface: boolean): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        while(this.comesToken([TokenType.keywordExtends, TokenType.keywordImplements])){\r\n            if (this.comesToken(TokenType.keywordExtends) && !isInterface) {\r\n                if(sextends != null){\r\n                    this.pushError(\"Eine Klasse kann nicht Unterklasse von zwei anderen Klassen sein, es darf also hier nur ein Mal 'extends...' stehen.\", \"error\", sextends.position);\r\n                }\r\n                this.nextToken(); // skip extends\r\n                sextends = this.parseType();\r\n                if (sextends != null && sextends.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp der Basisklasse darf kein Array sein.\", \"error\", sextends.position);\r\n                }\r\n            }\r\n    \r\n            if ((!isInterface && this.comesToken(TokenType.keywordImplements)) || (isInterface && this.comesToken(TokenType.keywordExtends))) {\r\n                if(simplements.length > 0){\r\n                    this.pushError(\"Es darf hier nur ein Mal 'implements' stehen, hinter 'implements' ist aber eine kommaseparierte Liste von Interfaces erlaubt.\", \"warning\");\r\n                }\r\n                this.nextToken(); // Skip implements/extends\r\n                let first = true;\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n                    if (!first) this.nextToken(); // skip comma\r\n                    first = false;\r\n                    simplements.push(this.parseType());\r\n                }\r\n            }\r\n        }\r\n\r\n        simplements.forEach((im) => {\r\n            if (im.arrayDimension > 0) {\r\n                this.pushError(im.identifier + \"[] ist kein Interface, sondern ein Array. Array-Datentypen sind hier nicht erlaubt.\");\r\n            }\r\n        });\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n    }\r\n\r\n    parseTypeParameterBounds(): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        if (this.comesToken(TokenType.keywordExtends)) {\r\n            this.nextToken(); // skip extends\r\n            sextends = this.parseType();\r\n        }\r\n\r\n        while (this.comesToken(TokenType.ampersand)) {\r\n            this.nextToken(); // Skip ampersand\r\n            simplements.push(this.parseType());\r\n        }\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n\r\n    }\r\n\r\n    collectModifiers(): { isAbstract: boolean, isStatic: boolean, visibility: Visibility, isFinal: boolean, isTransient: boolean } {\r\n\r\n        let visibility = Visibility.public;\r\n        let isAbstract = false;\r\n        let isStatic = false;\r\n        let isFinal = false;\r\n        let isTransient = false;\r\n\r\n        let done = false;\r\n\r\n        while (!done) {\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPublic:\r\n                    visibility = Visibility.public;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordPrivate:\r\n                    visibility = Visibility.private;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordProtected:\r\n                    visibility = Visibility.protected;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordStatic:\r\n                    isStatic = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordAbstract:\r\n                    isAbstract = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordFinal:\r\n                    isFinal = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordTransient:\r\n                    isTransient = true;\r\n                    this.nextToken();\r\n                    break;\r\n                default: done = true;\r\n            }\r\n\r\n        }\r\n\r\n        return { isAbstract: isAbstract, isStatic: isStatic, visibility: visibility, isFinal: isFinal, isTransient: isTransient };\r\n\r\n    }\r\n\r\n\r\n}","import { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ModuleStore } from \"../parser/Module.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\ntype SerializedObject = {\r\n    \"!k\"?: string, // Class identifier or object index\r\n    \"!i\": number  // index\r\n}\r\n\r\nexport class JsonTool {\r\n    // to deserialize:\r\n    indexToObjectMap: { [index: number]: Value };\r\n    valuesToResolve: { v: Value, i: number }[];\r\n\r\n    // to serialize:\r\n    objectToIndexMap: Map<RuntimeObject, number>;\r\n    nextIndex: number;\r\n\r\n    toJson(value: Value): string {\r\n        this.objectToIndexMap = new Map();\r\n        this.nextIndex = 0;\r\n        let json = JSON.stringify(this.toJsonObj(value));\r\n        this.objectToIndexMap = null; // free memory\r\n        return json;\r\n    }\r\n\r\n    toJsonObj(value: Value): any {\r\n        let type = value.type;\r\n        let v = value.value;\r\n        if (v == null) return null;\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.identifier != \"String\") {\r\n\r\n            if (type instanceof Enum) {\r\n                let enumObj = <EnumRuntimeObject>v;\r\n                return enumObj.enumValue.ordinal;\r\n            }\r\n\r\n            let rto = <RuntimeObject>v;\r\n            return this.objectToJsonObj(rto);\r\n        } else if (type instanceof ArrayType) {\r\n            let arrayValues: Value[] = v;\r\n            return arrayValues.map(value => this.toJsonObj(value));\r\n        } else {\r\n            // primitive Type\r\n            return value.value;\r\n        }\r\n    }\r\n\r\n    objectToJsonObj(rto: RuntimeObject): SerializedObject {\r\n        // We solve circular object references by serializing an index when the same object occurs more than once.\r\n        let index = this.objectToIndexMap.get(rto);\r\n        if (index != null) {\r\n            return { \"!i\": index };\r\n        }\r\n\r\n        index = this.nextIndex++;\r\n        this.objectToIndexMap.set(rto, index);\r\n        let klass: Klass = <Klass>rto.class;\r\n\r\n        // Don't serialize system classes unless they are explicitely serializable\r\n        if (klass.module.isSystemModule && klass.getMethodBySignature(\"String toJson()\") == null) {\r\n            return null;\r\n        }\r\n\r\n        let serializedObject: SerializedObject = { \"!k\": klass.identifier, \"!i\": index };\r\n        while (klass != null) {\r\n            let first: boolean = true;\r\n            let serializedAttributes: any;\r\n            for (let attribute of klass.attributes) {\r\n                if (!attribute.isStatic && !attribute.isTransient) {\r\n                    if (first) {\r\n                        first = false;\r\n                        serializedAttributes = {};\r\n                        serializedObject[klass.identifier] = serializedAttributes;\r\n                    }\r\n                    serializedAttributes[attribute.identifier] = this.toJsonObj(rto.attributes[attribute.index]);\r\n                }\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return serializedObject;\r\n    }\r\n\r\n    fromJson(jsonString: string, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): any {\r\n        this.indexToObjectMap = {};\r\n        this.valuesToResolve = [];\r\n\r\n        let obj: any = JSON.parse(jsonString);\r\n        let ret = this.fromJsonObj(obj, type, moduleStore, interpreter);\r\n\r\n        for (let vtr of this.valuesToResolve) {\r\n            let value = this.indexToObjectMap[vtr.i];\r\n            if (value != null) {\r\n                vtr.v.type = value.type;\r\n                vtr.v.value = value.value;\r\n            }\r\n        }\r\n\r\n        this.indexToObjectMap = null; // free memory\r\n        this.valuesToResolve = null;\r\n        return ret.value;\r\n    }\r\n\r\n    fromJsonObj(obj: any, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): Value {\r\n        if (obj == null) return { type: type, value: null };\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.identifier != \"String\") {\r\n\r\n            if (type instanceof Enum) {\r\n                return {\r\n                    type: type,\r\n                    value: type.indexToInfoMap[obj].object\r\n                }\r\n            }\r\n\r\n            let serializedObject = <SerializedObject>obj;\r\n            return this.objectFromJsonObj(serializedObject, type, moduleStore, interpreter);\r\n\r\n        } else if (type instanceof ArrayType) {\r\n            let jsonArray: any[] = obj;\r\n            return {\r\n                type: type,\r\n                value: jsonArray.map(v => this.fromJsonObj(v, type.arrayOfType, moduleStore, interpreter))\r\n            }\r\n        } else {\r\n            // primitive Type\r\n            return { type: type, value: obj }\r\n        }\r\n\r\n    }\r\n\r\n    objectFromJsonObj(serializedObject: SerializedObject, type: Klass | Interface, moduleStore: ModuleStore,\r\n        interpreter: Interpreter): Value {\r\n\r\n        let identifier: string = serializedObject[\"!k\"];\r\n        let index = serializedObject[\"!i\"];\r\n        if (identifier != null) {\r\n\r\n            let klass1: Klass = <Klass>moduleStore.getType(identifier).type;\r\n            let klass = klass1;\r\n\r\n            let rto: RuntimeObject = interpreter.instantiateObjectImmediately(klass);\r\n\r\n            while (klass != null) {\r\n                let attributes = rto.attributes;\r\n                let serializedAttributes = serializedObject[klass.identifier];\r\n                if (attributes != null && serializedObject != null) {\r\n                    for (let attribute of klass.attributes) {\r\n                        if (!attribute.isStatic && !attribute.isTransient) {\r\n                            attributes[attribute.index] = this.fromJsonObj(serializedAttributes[attribute.identifier], attribute.type, moduleStore, interpreter);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                klass = klass.baseClass;\r\n            }\r\n\r\n            let value: Value = { type: klass1, value: rto };\r\n            this.indexToObjectMap[index] = value;\r\n            return value;\r\n\r\n        } else {\r\n            let index = serializedObject[\"!i\"];\r\n            let value = this.indexToObjectMap[index];\r\n            if (value == null) {\r\n                value = { type: type, value: null };\r\n                this.valuesToResolve.push({ v: value, i: index });\r\n                return value;\r\n            } else {\r\n                return { type: value.type, value: value.value }; // return copy\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, TypeVariable } from \"../types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Type, Variable, PrimitiveType } from \"../types/Types.js\";\r\nimport { ClassDeclarationNode, InterfaceDeclarationNode, MethodDeclarationNode, TypeNode, EnumDeclarationNode, TypeParameterNode } from \"./AST.js\";\r\nimport { Module, ModuleStore } from \"./Module.js\";\r\nimport { nullType, intPrimitiveType, booleanPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType, objectType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { JsonTool } from \"../types/TypeTools.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype GenericTypeList = { typeNode: TypeNode, module: Module }[];\r\n\r\ntype TypeParameterInfo = {\r\n    tpn: TypeParameterNode;\r\n    tp: TypeVariable;\r\n    ci: Klass | Interface;\r\n    cdn: ClassDeclarationNode | InterfaceDeclarationNode;\r\n    index: number\r\n};\r\n\r\n// TODO: find cyclic references in extends ...\r\nexport class TypeResolver {\r\n\r\n    moduleStore: ModuleStore;\r\n\r\n    classes: ClassDeclarationNode[];\r\n    interfaces: InterfaceDeclarationNode[];\r\n    enums: EnumDeclarationNode[];\r\n\r\n    moduleToTypeParameterListMap: Map<Module, TypeVariable[]> = new Map();\r\n\r\n    unresolvedTypes: Map<Module, TypeNode[]>;\r\n\r\n    genericTypes: GenericTypeList = [];\r\n    genericTypesInClassDefinitions: GenericTypeList = [];\r\n\r\n    typeParameterList: TypeParameterInfo[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    start(moduleStore: ModuleStore) {\r\n\r\n        this.classes = [];\r\n        this.interfaces = [];\r\n        this.enums = [];\r\n        this.unresolvedTypes = new Map();\r\n\r\n        this.moduleStore = moduleStore;\r\n\r\n        this.resolveTypesInModules();\r\n\r\n        this.setupClassesAndInterfaces();\r\n\r\n        let unresolvedGenericTypesInClasses = this.resolveTypeVariables();\r\n\r\n        this.resolveUnresolvedTypes(false);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypesInClasses);\r\n\r\n        this.resolveExtendsImplements();\r\n\r\n        let unresolvedGenericTypes = this.resolveGenericTypes(this.genericTypes);\r\n\r\n        this.resolveUnresolvedTypes(true);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n        this.setupMethodsAndAttributes();\r\n\r\n        this.checkDoubleIdentifierDefinition();\r\n\r\n        this.checkGenericTypesAgainsTypeGuards();\r\n\r\n        this.setupAttributeIndices();\r\n\r\n    }\r\n    \r\n    setupAttributeIndices() {\r\n        for(let cl of this.classes){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n        for(let cl of this.enums){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkGenericTypesAgainsTypeGuards() {\r\n\r\n        for (let tn of this.genericTypes) {\r\n            if (tn.typeNode.genericParameterTypes == null) continue; // Error in resolveGenericType => nothing to do.\r\n\r\n            let ci: Klass | Interface = <any>tn.typeNode.resolvedType;\r\n\r\n            if (ci.isGenericVariantFrom == null) continue;\r\n\r\n            if (ci.typeVariables.length != ci.isGenericVariantFrom.typeVariables.length) {\r\n                tn.module.errors[2].push({\r\n                    position: tn.typeNode.position,\r\n                    text: \"Der Generische Typ \" + ci.isGenericVariantFrom.identifier + \" hat \" + ci.isGenericVariantFrom.typeVariables.length + \" Typparameter. Hier wurden aber \" + ci.typeVariables.length + \" angegeben.\",\r\n                    level: \"error\"\r\n                });\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < ci.typeVariables.length; i++) {\r\n\r\n                let error: string = null;\r\n\r\n                let actualType = ci.typeVariables[i];\r\n                let typeGuard = ci.isGenericVariantFrom.typeVariables[i];\r\n                let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n                actualType.scopeFrom = typeGuard.scopeFrom;\r\n                actualType.scopeTo = typeGuard.scopeTo;\r\n                actualType.identifier = typeGuard.identifier;\r\n\r\n                error = \"\";\r\n                if (!actualType.type.hasAncestorOrIs(typeGuard.type)) {\r\n                    error += \"Die Klasse \" + actualType.type.identifier + \" ist keine Unterklasse von \" + typeGuard.type.identifier + \" und pass damit nicht zum Typparamter \" + typeGuard.identifier + \" der Klasse \" + ci.isGenericVariantFrom.identifier + \". \";\r\n                }\r\n\r\n                let ifList: string[] = [];\r\n                for (let tgInterface of typeGuard.type.implements) {\r\n                    if (!actualType.type.implementsInterface(tgInterface)) {\r\n                        ifList.push(tgInterface.identifier);\r\n                    }\r\n                }\r\n\r\n                if (ifList.length > 0) {\r\n                    error += \"Die Klasse \" + actualType.identifier + \" implementiert nicht die Interfaces \" + ifList.join(\", \");\r\n                }\r\n\r\n                if (error != \"\") {\r\n                    tn.module.errors[2].push({\r\n                        position: genericParameterType.position,\r\n                        text: \"Der angegebene Wert des Typparameters passt nicht zur Definition: \" + error,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            this.adjustMethodsAndAttributesToTypeParameters(ci);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    adjustMethodsAndAttributesToTypeParameters(classOrInterface: Klass | Interface) {\r\n\r\n        if (classOrInterface != null && classOrInterface.isGenericVariantFrom != null && classOrInterface.typeVariables.length != 0) {\r\n\r\n            let methodListAltered: boolean = false;\r\n            let newMethodList: Method[] = [];\r\n            for (let m of classOrInterface.methods) {\r\n                let newMethod = this.getAdjustedMethod(m, classOrInterface.typeVariables);\r\n                methodListAltered = methodListAltered || newMethod.altered;\r\n                newMethodList.push(newMethod.newMethod);\r\n            }\r\n\r\n            if (methodListAltered) classOrInterface.methods = newMethodList;\r\n\r\n            if (classOrInterface instanceof Klass) {\r\n\r\n                let newAttributes: Attribute[] = [];\r\n                let newAttributeMap: Map<string, Attribute> = new Map();\r\n                let attributesAltered: boolean = false;\r\n\r\n                for (let attribute of classOrInterface.attributes) {\r\n                    let newAttribute = this.getAdjustedAttribute(attribute, classOrInterface.typeVariables);\r\n                    attributesAltered = attributesAltered || newAttribute.altered;\r\n                    newAttributes.push(newAttribute.newAttribute);\r\n                    newAttributeMap.set(attribute.identifier, newAttribute.newAttribute);\r\n                }\r\n\r\n                if (attributesAltered) {\r\n                    classOrInterface.attributes = newAttributes;\r\n                    classOrInterface.attributeMap = newAttributeMap;\r\n                }\r\n\r\n                this.adjustMethodsAndAttributesToTypeParameters(classOrInterface.baseClass);\r\n\r\n                // for (let impl of classOrInterface.implements) {\r\n                //     this.adjustMethodsAndAttributesToTypeParameters(impl);\r\n                // }\r\n            } else {\r\n                for (let ext of classOrInterface.extends) {\r\n                    this.adjustMethodsAndAttributesToTypeParameters(ext);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedAttribute(attribute: Attribute, typeVariables: TypeVariable[]): { altered: boolean, newAttribute: Attribute } {\r\n\r\n        let nt = this.getAdjustedType(attribute.type, typeVariables, true);\r\n        if (nt.altered) {\r\n            let a: Attribute = Object.create(attribute);\r\n            a.type = nt.newType;\r\n            return { altered: true, newAttribute: a }\r\n        } else {\r\n            return { altered: false, newAttribute: attribute }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedMethod(method: Method, typeVariables: TypeVariable[]): { altered: boolean, newMethod: Method } {\r\n\r\n        let nrt = this.getAdjustedType(method.returnType, typeVariables, true);\r\n\r\n        let parameterAltered: boolean = false;\r\n        let newParameters: Variable[] = [];\r\n        for (let p of method.parameterlist.parameters) {\r\n            let nt = this.getAdjustedType(p.type, typeVariables, false);\r\n            if (nt.altered) {\r\n                parameterAltered = true;\r\n                let pNew: Variable = Object.create(p);\r\n                pNew.type = nt.newType;\r\n                newParameters.push(pNew);\r\n            } else {\r\n                newParameters.push(p);\r\n            }\r\n        }\r\n\r\n        if (nrt.altered || parameterAltered) {\r\n            let newMethod: Method = Object.create(method);\r\n            if (nrt.altered) newMethod.returnType = nrt.newType;\r\n            if (parameterAltered) {\r\n                newMethod.parameterlist = new Parameterlist(newParameters);\r\n            }\r\n            return { altered: true, newMethod: newMethod }\r\n        } else {\r\n            return { altered: false, newMethod: method };\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedType(type: Type, typeVariables: TypeVariable[], adjustMethodsAndAttributesRecursive: boolean): { altered: boolean, newType: Type } {\r\n\r\n        if (type == null) return { altered: false, newType: type };\r\n\r\n        if (type[\"isTypeVariable\"] == true) {\r\n            for (let tv of typeVariables) {\r\n                if (tv.identifier == type.identifier) {\r\n                    return { altered: true, newType: tv.type };\r\n                }\r\n            }\r\n            return { altered: false, newType: type };\r\n        }\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0) {\r\n            let newTypeVariables: TypeVariable[] = [];\r\n            let altered: boolean = false;\r\n            for (let tv of type.typeVariables) {\r\n                let nt = this.getAdjustedType(tv.type, typeVariables, false);\r\n                if (nt.altered) {\r\n                    newTypeVariables.push({\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: <Klass>nt.newType\r\n                    })\r\n                    altered = true;\r\n                } else {\r\n                    newTypeVariables.push(tv);\r\n                }\r\n            }\r\n            if (altered) {\r\n                let newClassInterface = type.clone();\r\n                newClassInterface.typeVariables = newTypeVariables;\r\n                if (adjustMethodsAndAttributesRecursive) this.adjustMethodsAndAttributesToTypeParameters(newClassInterface);\r\n                return { altered: true, newType: newClassInterface }\r\n            } else {\r\n                return { altered: false, newType: type }\r\n            }\r\n        }\r\n\r\n        if(type instanceof ArrayType){\r\n            let nt = this.getAdjustedType(type.arrayOfType, typeVariables, adjustMethodsAndAttributesRecursive);\r\n            return {\r\n                altered: nt.altered,\r\n                newType: nt.altered ? new ArrayType(nt.newType) : type\r\n            }\r\n        }\r\n\r\n        return { altered: false, newType: type };\r\n    }\r\n\r\n    resolveGenericTypes(genericTypes: GenericTypeList): GenericTypeList {\r\n        let done: boolean = false;\r\n        let todoList: GenericTypeList = genericTypes.slice(0);\r\n        while (!done) {\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tn = todoList[i];\r\n\r\n                if (this.resolveGenericType(tn)) {\r\n                    done = false;\r\n                }\r\n                if (tn.typeNode.genericParameterTypes == null || tn.typeNode.genericParameterTypesResolved != null) {\r\n                    todoList.splice(todoList.indexOf(tn), 1);\r\n                    i--;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return todoList;\r\n    }\r\n\r\n    // returns true if something new could be resolved\r\n    resolveGenericType(tn: { typeNode: TypeNode, module: Module }): boolean {\r\n\r\n        if (tn.typeNode.genericParameterTypesResolved != null) return false;\r\n        if (tn.typeNode.genericParameterTypes == null) return true;\r\n\r\n        /**\r\n         * e.g. Map<Integer, String> test = new Map<>();\r\n         * Subsequent Code processes the type Map<Integer, String>\r\n         */\r\n\r\n        let ci: Klass | Interface = <any>tn.typeNode.resolvedType; // in example: Map\r\n        if (ci == null || !(ci instanceof Interface || ci instanceof Klass)) { // There had been an error... (in example: Map has not been resolved)\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return false; // => exit gracefully\r\n        }\r\n\r\n        if (!ci.typeVariablesReady) return false;\r\n\r\n        let parameterTypes: (Klass | Interface)[] = [];\r\n        for (let i = 0; i < tn.typeNode.genericParameterTypes.length; i++) {\r\n            let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n            let resolvedType = genericParameterType.resolvedType;\r\n\r\n            if (resolvedType == null) {\r\n                return false;\r\n            }\r\n\r\n            if (genericParameterType.genericParameterTypes != null && genericParameterType.genericParameterTypesResolved == null) {\r\n                return false; // first resolve this type!\r\n            }\r\n\r\n            if (!(resolvedType instanceof Interface || resolvedType instanceof Klass)) {\r\n                tn.module.errors[2].push({\r\n                    position: genericParameterType.position,\r\n                    text: \"Hier wird ein Interface- oder Klassentyp erwartet. Der Typ \" + genericParameterType.identifier + \" ist aber keiner.\",\r\n                    level: \"error\"\r\n                });\r\n                tn.typeNode.genericParameterTypes = null;\r\n                return true; // => exit gracefully\r\n            }\r\n\r\n            parameterTypes.push(<any>genericParameterType.resolvedType);\r\n\r\n        }\r\n\r\n        let typeVariablesOldToNewMap: Map<Klass, Klass> = new Map();\r\n\r\n        if (ci.typeVariables.length != parameterTypes.length) {\r\n            tn.module.errors[2].push({\r\n                position: tn.typeNode.position,\r\n                text: (ci instanceof Klass ? \"Die Klasse \" : \"Das Interface \") + ci.identifier + \" hat \" + ci.typeVariables.length + \" Typparameter, hier sind aber \" + parameterTypes.length + \" angegeben.\",\r\n                level: \"error\"\r\n            });\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return true; // => exit gracefully\r\n        }\r\n\r\n        let i = 0;\r\n        for (let type of parameterTypes) {\r\n\r\n            let oldTypeVariable = ci.typeVariables[i];\r\n\r\n            if (type instanceof Interface) {\r\n                let type1 = objectType.clone();\r\n                type1.implements.push(type);\r\n                type = type1;\r\n            }\r\n\r\n            let newTypeVariable = {\r\n                identifier: oldTypeVariable.identifier,\r\n                scopeFrom: oldTypeVariable.scopeFrom,\r\n                scopeTo: oldTypeVariable.scopeTo,\r\n                type: type\r\n            };\r\n\r\n            typeVariablesOldToNewMap.set(ci.typeVariables[i].type, newTypeVariable.type)\r\n            i++;\r\n        }\r\n\r\n        let newCi =\r\n            this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(ci, typeVariablesOldToNewMap);\r\n\r\n        tn.typeNode.resolvedType = newCi;\r\n        tn.typeNode.genericParameterTypesResolved = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    propagateTypeParameterToBaseClassesAndImplementedInterfaces(classOrInterface: Klass | Interface,\r\n        typeVariablesOldToNewMap: Map<Klass, Klass>): Klass | Interface {\r\n\r\n        if (classOrInterface instanceof Klass) {\r\n            let newClass: Klass = classOrInterface.clone();\r\n\r\n            newClass.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newClass.typeVariables.push(tv1);\r\n            }\r\n\r\n            let baseKlass = classOrInterface.baseClass;\r\n            if (baseKlass != null && baseKlass.isGenericVariantFrom != null) {\r\n\r\n                newClass.setBaseClass(<Klass>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(baseKlass, typeVariablesOldToNewMap));\r\n\r\n            }\r\n\r\n            newClass.implements = [];\r\n            for (let impl of classOrInterface.implements) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newClass.implements.push(impl);\r\n                } else {\r\n                    newClass.implements.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newClass;\r\n\r\n        } else {\r\n            let newInterface: Interface = classOrInterface.clone();\r\n\r\n            newInterface.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newInterface.typeVariables.push(tv1);\r\n            }\r\n\r\n            newInterface.extends = [];\r\n            for (let impl of classOrInterface.extends) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newInterface.extends.push(impl);\r\n                } else {\r\n                    newInterface.extends.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newInterface;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkDoubleIdentifierDefinition() {\r\n        let identifierModuleMap: Map<string, Module> = new Map();\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            for (let type of module.typeStore.typeList) {\r\n                let otherModule = identifierModuleMap.get(type.identifier);\r\n                if (otherModule != null) {\r\n                    module.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                        position: type.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                    let otherType = otherModule.typeStore.getType(type.identifier);\r\n                    if (otherType != null) {\r\n                        otherModule.errors[1].push({\r\n                            text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                                otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                            position: otherType.declaration.position,\r\n                            level: \"error\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    identifierModuleMap.set(type.identifier, module);\r\n                }\r\n            }\r\n        }\r\n\r\n        let baseModule = this.moduleStore.getBaseModule();\r\n\r\n        for (let tp of this.typeParameterList) {\r\n            let module = tp.ci.module;\r\n            let otherModule = identifierModuleMap.get(tp.tpn.identifier);\r\n            if (otherModule == null) {\r\n                let systemType = baseModule.typeStore.getType(tp.tpn.identifier);\r\n                if (systemType != null) otherModule = baseModule;\r\n            }\r\n            if (otherModule != null) {\r\n                module.errors[1].push({\r\n                    text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                        module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                    position: tp.tpn.position,\r\n                    level: \"error\"\r\n                });\r\n                let otherType = otherModule.typeStore.getType(tp.tpn.identifier);\r\n                if (otherType != null && otherModule != baseModule) {\r\n                    otherModule.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                        position: otherType.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveUnresolvedTypes(lastPass: boolean) {\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            module.dependsOnModules = new Map();\r\n        }\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            let ut = this.unresolvedTypes.get(module);\r\n            let utNew: TypeNode[] = [];\r\n            for (let type of ut) {\r\n                if (!this.resolveType(type, module, lastPass)) {\r\n                    utNew.push(type);\r\n                }\r\n            }\r\n            this.unresolvedTypes.set(module, utNew);\r\n        }\r\n    }\r\n\r\n    addFromJsonMethod(klass: Klass) {\r\n        let interpreter = this.main.getInterpreter();\r\n        klass.addMethod(new Method(\"fromJson\", new Parameterlist([\r\n            { identifier: \"jsonString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), klass,\r\n            (parameters) => {\r\n                let json: string = parameters[1].value;\r\n                return new JsonTool().fromJson(json, klass, this.moduleStore, interpreter);\r\n            }, false, true, `Konvertiert eine Json-Zeichenkette in ein ${klass.identifier}-Objekt (\"deserialisieren\"). Vor dem Deserialisieren eines Objekts werden die Attributinitialisierer angewandt und - falls vorhanden - ein parameterloser Konstruktor ausgeführt. Der Algorithmus kommt auch mit zyklischen Objektreferenzen zurecht.`, false));\r\n\r\n    }\r\n\r\n    addToJsonMethod(klass: Klass) {\r\n        klass.addMethod(new Method(\"toJson\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return new JsonTool().toJson(parameters[0]);\r\n            }, false, false, `Konvertiert ein Objekt (rekursiv mitsamt referenzierter Objekte) in eine Json-Zeichenkette. Nicht konvertiert werden Systemklassen (außer: ArrayList) sowie mit dem Schlüsselwort transient ausgezeichnete Attribute.`));\r\n\r\n    }\r\n\r\n\r\n    setupMethodsAndAttributes() {\r\n\r\n        let classesOrEnums: (ClassDeclarationNode | EnumDeclarationNode)[] = [];\r\n        classesOrEnums = classesOrEnums.concat(this.classes);\r\n        classesOrEnums = classesOrEnums.concat(this.enums);\r\n\r\n        for (let cn of classesOrEnums) {\r\n            for (let mn of cn.methods) {\r\n                let m: Method = this.setupMethod(mn, cn.resolvedType.module, cn.resolvedType);\r\n                if (m != null) {\r\n                    if(mn.commentBefore != null) m.documentation = \"\" + mn.commentBefore.value;\r\n                    cn.resolvedType.addMethod(m);\r\n                }\r\n            }\r\n\r\n            this.addFromJsonMethod(cn.resolvedType);\r\n            this.addToJsonMethod(cn.resolvedType);\r\n\r\n            for (let att of cn.attributes) {\r\n\r\n                this.resolveType(att.attributeType, cn.resolvedType.module, true);\r\n                let type = att.attributeType.resolvedType;\r\n                if (type == null) {\r\n                    continue;\r\n                }\r\n\r\n                let attribute: Attribute = new Attribute(att.identifier, type, null, att.isStatic, att.visibility, att.isFinal);\r\n                att.resolvedType = attribute;\r\n                if(att.commentBefore != null) attribute.documentation = \"\" + att.commentBefore.value;\r\n                attribute.annotation = att.annotation;\r\n                attribute.isTransient = att.isTransient;\r\n                if (cn.resolvedType.attributeMap.get(attribute.identifier) != null) {\r\n                    cn.resolvedType.module.errors[2].push({\r\n                        text: \"Es darf nicht mehrere Attribute mit demselben Bezeichner '\" + attribute.identifier + \"' in derselben Klassse geben.\",\r\n                        position: att.position, level: \"error\"\r\n                    });\r\n                }\r\n                cn.resolvedType.addAttribute(attribute);\r\n\r\n                this.pushUsagePosition(cn.resolvedType.module, att.position, attribute);\r\n                attribute.declaration = { module: cn.resolvedType.module, position: att.position };\r\n\r\n            }\r\n        }\r\n\r\n        for (let ic of this.interfaces) {\r\n            for (let mn of ic.methods) {\r\n                let m1: Method = this.setupMethod(mn, ic.resolvedType.module, ic.resolvedType);\r\n                if (m1 != null) {\r\n                    ic.resolvedType.addMethod(m1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setupMethod(mn: MethodDeclarationNode, m: Module, c: Klass | Interface): Method {\r\n\r\n        let typesOK = true;\r\n\r\n        typesOK = typesOK && this.resolveType(mn.returnType, m, true);\r\n\r\n        let parameters: Variable[] = [];\r\n        for (let par of mn.parameters) {\r\n            typesOK = typesOK && this.resolveType(par.parameterType, m, true);\r\n            if (typesOK) {\r\n                let parameter = {\r\n                    definition: par.position,\r\n                    identifier: par.identifier,\r\n                    usagePositions: new Map(),\r\n                    type: par.parameterType.resolvedType,\r\n                    declaration: { module: m, position: par.position },\r\n                    isFinal: par.isFinal,\r\n                    isEllipsis: par.isEllipsis\r\n                };\r\n                parameters.push(parameter);\r\n                this.pushUsagePosition(m, par.position, parameter);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let pl: Parameterlist = new Parameterlist(parameters);\r\n\r\n        if (typesOK) {\r\n            let method = new Method(mn.identifier, pl, mn.returnType.resolvedType, null, mn.isAbstract, mn.isStatic);\r\n            method.isConstructor = mn.identifier == c.identifier;\r\n            method.visibility = mn.visibility;\r\n            method.isConstructor = mn.isConstructor;\r\n            mn.resolvedType = method;\r\n            method.annotation = mn.annotation;\r\n\r\n            this.pushUsagePosition(m, mn.position, method);\r\n            method.declaration = {\r\n                module: m,\r\n                position: mn.position\r\n            }\r\n\r\n            return method;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    pushUsagePosition(m: Module, position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n\r\n        m.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(m);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(m, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveType(tn: TypeNode, m: Module, lastPass: boolean): boolean {\r\n        if (tn.resolvedType == null) {\r\n            let typeModule = this.moduleStore.getType(tn.identifier);\r\n            if (typeModule != null) {\r\n                let type = typeModule.type;\r\n                m.dependsOnModules.set(typeModule.module, true);\r\n                this.pushUsagePosition(m, tn.position, type);\r\n                type = getArrayType(type, tn.arrayDimension);\r\n                this.registerGenericType(tn, m, false);\r\n                tn.resolvedType = type;\r\n                return true;\r\n            }\r\n\r\n            let typeParameterList = this.moduleToTypeParameterListMap.get(m);\r\n            if (typeParameterList != null) {\r\n                for (let tg of typeParameterList) {\r\n                    if (tg.identifier == tn.identifier) {\r\n                        let position = tn.position;\r\n                        if (position.line > tg.scopeFrom.line || position.line == tg.scopeFrom.line && position.column >= tg.scopeFrom.column) {\r\n                            if (position.line < tg.scopeTo.line || position.line == tg.scopeTo.line && position.column <= tg.scopeTo.column) {\r\n                                this.pushUsagePosition(m, tn.position, tg.type);\r\n                                tn.resolvedType = tg.type;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (lastPass) {\r\n\r\n                let typKlasse = (tn.identifier.length > 0 && tn.identifier[0].toUpperCase() == tn.identifier[0]) ? \"Die Klasse\" : \"Der Typ\";\r\n\r\n                m.errors[2].push({\r\n                    position: tn.position,\r\n                    text: typKlasse + \" \" + tn.identifier + \" konnte nicht gefunden werden.\" +\r\n                        (tn.identifier == \"string\" ? \" Meinten Sie String (großgeschrieben)?\" : \"\"),\r\n                    level: \"error\",\r\n                    quickFix: (tn.identifier == \"string\") ? {\r\n                        title: \"String groß schreiben\",\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: tn.position.line, startColumn: tn.position.column - 1, endLineNumber: tn.position.line, endColumn: tn.position.column + 6 },\r\n                                        text: \"String\"\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n\r\n                    } : null\r\n                });\r\n            }\r\n            tn.resolvedType = null;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    resolveExtendsImplements() {\r\n        for (let cn of this.classes) {\r\n\r\n            let c = cn.resolvedType;\r\n            for (let iNode of cn.implements) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei implements... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.implements.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n            if (cn.extends != null) {\r\n                this.resolveType(cn.extends, c.module, true);\r\n                let eType = cn.extends.resolvedType;\r\n                if (eType == null || !(eType instanceof Klass)) {\r\n                    c.module.errors[2].push({\r\n                        position: cn.extends.position,\r\n                        text: \"Der Typ \" + cn.extends.identifier + \" ist keine Klasse, darf also nicht hinter extends stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n\r\n                c.setBaseClass(<Klass>eType);\r\n                cn.extends.resolvedType = eType;\r\n            } else {\r\n                c.setBaseClass(<Klass>this.moduleStore.getType(\"Object\").type)\r\n            }\r\n\r\n        }\r\n        for (let interf of this.interfaces) {\r\n\r\n            let c = interf.resolvedType;\r\n            for (let iNode of interf.extends) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei extends... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.extends.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    setupClassesAndInterfaces() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            if (m.classDefinitionsAST != null) {\r\n                for (let cdn of m.classDefinitionsAST) {\r\n                    switch (cdn.type) {\r\n                        case TokenType.keywordClass:\r\n                            this.classes.push(cdn);\r\n                            let c = new Klass(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) c.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = c;\r\n                            c.visibility = cdn.visibility;\r\n                            c.isAbstract = cdn.isAbstract;\r\n                            m.typeStore.addType(c);\r\n                            this.pushUsagePosition(m, cdn.position, c);\r\n                            c.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, c);\r\n                            if (cdn.extends != null) this.registerGenericType(cdn.extends, m, true);\r\n                            if (cdn.implements != null) {\r\n                                for (let im of cdn.implements) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n                        case TokenType.keywordEnum:\r\n                            this.enums.push(cdn);\r\n                            let e = new Enum(cdn.identifier, m, cdn.values);\r\n                            if(cdn.commentBefore != null) e.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = e;\r\n                            e.visibility = cdn.visibility;\r\n                            m.typeStore.addType(e);\r\n                            this.pushUsagePosition(m, cdn.position, e);\r\n                            e.declaration = { module: m, position: cdn.position };\r\n                            break;\r\n                        case TokenType.keywordInterface:\r\n                            this.interfaces.push(cdn);\r\n                            let i = new Interface(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) i.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = i;\r\n                            m.typeStore.addType(i);\r\n                            this.pushUsagePosition(m, cdn.position, i);\r\n                            i.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, i);\r\n                            if (cdn.extends != null) {\r\n                                for (let im of cdn.extends) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveTypeVariables(): GenericTypeList {\r\n\r\n        let todoList = this.typeParameterList.slice(0);\r\n        let done = false;\r\n\r\n        let unresolvedGenericTypes: GenericTypeList = this.genericTypesInClassDefinitions.slice(0);\r\n\r\n        while (!done) {\r\n            this.resolveUnresolvedTypes(false);\r\n            unresolvedGenericTypes = this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tv = todoList[i];\r\n                let ready: boolean = true;\r\n                let ext: TypeNode[] = tv.tpn.extends == null ? [] : [tv.tpn.extends];\r\n                if (tv.tpn.implements != null) ext = ext.concat(tv.tpn.implements);\r\n                for (let extType of ext) {\r\n                    if (extType.genericParameterTypes != null && !(extType.genericParameterTypesResolved == true)) {\r\n                        ready = false;\r\n                    }\r\n                }\r\n\r\n                if (ready) {\r\n                    this.resolveTypeVariable(tv);\r\n                    todoList.splice(todoList.indexOf(tv), 1);\r\n                    i--;\r\n                    done = false;\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return unresolvedGenericTypes;\r\n    }\r\n\r\n\r\n    resolveTypeVariable(tp: TypeParameterInfo) {\r\n\r\n\r\n        let typeParameterKlass: Klass;\r\n        if (tp.tpn.extends != null && tp.tpn.extends.resolvedType != null) {\r\n            typeParameterKlass = (<Klass>tp.tpn.extends.resolvedType).clone();\r\n        } else {\r\n            typeParameterKlass = objectType.clone();\r\n        }\r\n\r\n        typeParameterKlass.identifier = tp.tpn.identifier;\r\n        typeParameterKlass.isTypeVariable = true;\r\n\r\n        typeParameterKlass.declaration = {\r\n            module: tp.ci.module,\r\n            position: tp.tpn.position\r\n        };\r\n\r\n\r\n        if (tp.tpn.implements != null) {\r\n            for (let impl of tp.tpn.implements) {\r\n                if (typeParameterKlass.implements.indexOf(<Interface>impl.resolvedType) < 0) {\r\n                    typeParameterKlass.implements.push(<Interface>impl.resolvedType);\r\n                }\r\n            }\r\n        }\r\n\r\n        let tp1: TypeVariable = {\r\n            identifier: tp.tpn.identifier,\r\n            type: typeParameterKlass,\r\n            scopeFrom: tp.cdn.position,\r\n            scopeTo: tp.cdn.scopeTo\r\n        };\r\n\r\n        tp.ci.typeVariables[tp.index] = tp1;\r\n        tp.ci.typeVariablesReady = true;\r\n        for (let tv of tp.ci.typeVariables) if (tv == null) tp.ci.typeVariablesReady = false;\r\n\r\n        let typeParameterList = this.moduleToTypeParameterListMap.get(tp.ci.module);\r\n        if (typeParameterList == null) {\r\n            typeParameterList = [];\r\n            this.moduleToTypeParameterListMap.set(tp.ci.module, typeParameterList);\r\n        }\r\n\r\n        typeParameterList.push(tp1);\r\n\r\n        this.pushUsagePosition(tp.ci.module, tp.tpn.position, typeParameterKlass);\r\n\r\n    }\r\n\r\n    registerTypeVariables(cdn: ClassDeclarationNode | InterfaceDeclarationNode, classOrInterface: Klass | Interface) {\r\n        let index = 0;\r\n        for (let typeParameter of cdn.typeParameters) {\r\n            if (typeParameter.extends != null) this.registerGenericType(typeParameter.extends, classOrInterface.module, true);\r\n            if (typeParameter.implements != null) {\r\n                for (let im of typeParameter.implements) {\r\n                    this.registerGenericType(im, classOrInterface.module, true);\r\n                }\r\n            }\r\n\r\n            classOrInterface.typeVariablesReady = false;\r\n            classOrInterface.typeVariables.push(null); // leave room\r\n\r\n            this.typeParameterList.push({\r\n                tpn: typeParameter, tp: {\r\n                    identifier: typeParameter.identifier,\r\n                    type: null,\r\n                    scopeFrom: cdn.position,\r\n                    scopeTo: cdn.scopeTo\r\n                }, ci: classOrInterface, cdn: cdn,\r\n                index: index++\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTypesInModules() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            let ut: TypeNode[] = [];\r\n            this.unresolvedTypes.set(m, ut);\r\n            for (let tn of m.typeNodes) {\r\n                if (tn.resolvedType == null) {\r\n                    let typeModule = this.moduleStore.getType(tn.identifier);\r\n                    if (typeModule != null) {\r\n                        let type = typeModule.type;\r\n                        this.pushUsagePosition(m, tn.position, type);\r\n                        tn.resolvedType = getArrayType(type, tn.arrayDimension);\r\n                        this.registerGenericType(tn, m, false);\r\n                    } else {\r\n                        ut.push(tn);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    registerGenericType(typeNode: TypeNode, module: Module, isInClassDefinition: boolean) {\r\n        if (typeNode.genericParameterTypes != null) {\r\n            if (isInClassDefinition) {\r\n                this.genericTypesInClassDefinitions.push({ typeNode: typeNode, module: module });\r\n            } else {\r\n                this.genericTypes.push({ typeNode: typeNode, module: module });\r\n            }\r\n        } else {\r\n            // new ArrayList<>() (without type Parameters!) should be castable to ANY other type with same name regarldess of it's type variable types (Java 7-style!)\r\n            let type = typeNode.resolvedType;\r\n            if (type != null && type instanceof Klass && type.typeVariables.length > 0) {\r\n                let type1 = <Klass>type.clone();\r\n                type1.typeVariables = []; // now this type can cast to ANY other type with same name regardless of it's type variable types!\r\n                typeNode.resolvedType = type1;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getArrayType(type: Type, arrayDimension: number) {\r\n    while (arrayDimension > 0) {\r\n        type = new ArrayType(type);\r\n        arrayDimension--;\r\n    }\r\n    return type;\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver } from \"./parser/TypeResolver.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { Klass, Interface } from \"./types/Class.js\";\r\nimport { SemicolonAngel } from \"./parser/SemicolonAngel.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        moduleStore.clearUsagePositions();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            if(m.file.name == this.main.getCurrentlyEditedModule()?.file?.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser(false);\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n\r\n        // 3rd pass: resolve types and populate typeStores; checks intermodular dependencies\r\n\r\n        let typeResolver: TypeResolver = new TypeResolver(this.main);\r\n\r\n        // Klass.count = 0;\r\n        // Interface.count = 0;\r\n        typeResolver.start(moduleStore);\r\n        // console.log(\"Klass-Klone: \" + Klass.count + \", Interface-Klone: \" + Interface.count);\r\n\r\n        // 4th pass: code generation\r\n\r\n        let codeGenerator = new CodeGenerator();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            codeGenerator.start(m, moduleStore);\r\n        }\r\n\r\n        let errorfree = true;\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.dependsOnModulesWithErrors = m.hasErrors();\r\n            if(m.dependsOnModulesWithErrors) errorfree = false;\r\n        }\r\n\r\n        let done = false;\r\n        while(!done){\r\n            done = true;\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if(!m.dependsOnModulesWithErrors)\r\n                for (let m1 of moduleStore.getModules(false)) {\r\n                    if(m.dependsOnModules.get(m1) && m1.dependsOnModulesWithErrors){\r\n                        m.dependsOnModulesWithErrors = true;\r\n                        done = false;\r\n                        break;\r\n                    }\r\n                }                            \r\n            }            \r\n        }\r\n        \r\n        this.atLeastOneModuleIsStartable = false;        \r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.isStartable = m.hasMainProgram() && !m.dependsOnModulesWithErrors;\r\n            if(m.isStartable){\r\n                this.atLeastOneModuleIsStartable = true;\r\n            }\r\n            if(!(this.main instanceof MainEmbedded) || this.main.config.withFileList){\r\n                m.renderStartButton();\r\n            } \r\n        }\r\n\r\n        if (this.atLeastOneModuleIsStartable) {\r\n\r\n            this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        } else {\r\n\r\n            this.compilerStatus = errorfree ? CompilerStatus.error : CompilerStatus.compiledButNothingToRun;\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class ListIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(listHelper: ListHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"ListIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"IteratorHelper\"] = new IteratorHelper(listHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ListIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass IteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private listHelper: ListHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = listHelper.objectArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos - 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos - 1, 1);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos + 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos + 1, 1);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos++];\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos--];\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.listHelper.objectArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType, DoubleType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\n\r\nexport class ArrayListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ArrayList\", module, \"Liste mit Zugriff auf das n-te Objekt in konstanter Zeit, Einfügen in konstanter Zeit und Suchen in linearer Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"ArrayList\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue ArrayList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let r: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r, index);\r\n\r\n            }, false, false, \"Fügt das Element an der Position index der Liste ein. Tipp: Das erste Element der Liste hat index == 0.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n                \r\n                return ah.get(index)?.value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index);\r\n\r\n                return null;\r\n\r\n            }, true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ListHelper {\r\n\r\n    valueArray: Value[] = [];\r\n    objectArray: any[] = []; // wird mitgeführt, um schnelle indexOf-Operationen zu ermöglichen\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n                break;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.objectArray.map(o => \"\" + o).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => {}, true);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ah: ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            this.valueArray = this.valueArray.concat(ah.valueArray);\r\n            this.objectArray = this.objectArray.concat(ah.objectArray);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    get(index: number): Value {\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            return this.valueArray[index];\r\n        }\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        return null;\r\n    }\r\n\r\n    remove(index: number): Value {\r\n\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return null;\r\n        }\r\n\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n\r\n        return null;\r\n    }\r\n\r\n    add(r: Value, index?): boolean {\r\n        if(index == null){\r\n            this.valueArray.push(r);\r\n            this.objectArray.push(r.value);\r\n        } else {\r\n            if(index <= this.objectArray.length && index >= 0){\r\n                this.valueArray.splice(index, 0, r);\r\n                this.objectArray.splice(index, 0, r.value);\r\n            } else {\r\n                this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    pop(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    peek(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    indexOf(o: Value): number {\r\n        return this.objectArray.indexOf(o.value);\r\n    }\r\n\r\n    size(): number {\r\n        return this.objectArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.objectArray.splice(index, 1);\r\n            this.valueArray.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.objectArray.indexOf(object.value) >= 0;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.objectArray = [];\r\n    }\r\n\r\n    peek_last_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n    peek_first_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[0];\r\n        }\r\n    }\r\n    \r\n    removeLast_or_error(){\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    };\r\n\r\n    addLast(object: Value) {\r\n        this.valueArray.push(object);\r\n        this.objectArray.push(object.value);\r\n        return true;\r\n    }\r\n    addFirst(object: Value): any {\r\n        this.valueArray.splice(0, 0, object);\r\n        this.objectArray.splice(0, 0, object.value);\r\n        return true;\r\n    }\r\n    removeFirstOccurrence(object: Value): boolean {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if(index >= 0){\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    peek_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    poll_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    removeFirst_or_error(): any {\r\n        if(this.objectArray.length == 0){\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        } else {\r\n            let object = this.objectArray[0];\r\n            this.objectArray.splice(0, 1);\r\n            this.valueArray.splice(0, 1);\r\n            return object;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class CollectionClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Collection\", module, \"Interface für Listen, Maps, Sets usw. mit Methoden zum Einfügen von Objekten, Zugriff auf Objekte und zur Ermittlung der Anzahl der Objekte\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iterableInterface = (<Interface>module.typeStore.getType(\"Iterable\")).clone();\r\n        iterableInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(iterableInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt der Collection ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Collection dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        // TODO: Implement\r\n        // this.addMethod(new Method(\"removeAll\", new Parameterlist([\r\n        //     { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), booleanPrimitiveType,\r\n        //     null,  // no implementation!\r\n        //     true, false, \"Löscht alle Elemente aus dieser Collection, die in c enthalten sind.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n    \r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IterableClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterable\", module, \"Interface mit Funktionalität zum iterieren (d.h. Durchlaufen aller Elemente)\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IteratorClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterator\", module);\r\n\r\n        let typeA: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeA.identifier = \"E\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ListClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"List\", module, \"Interface mit Methoden einer Liste (d.h. Anfügen von Elementen nur am Ende)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element der Liste an der Stelle index zurück. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n            this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class StackClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Stack\", module, \"Stack (Stapelspeicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n        let vectorType = <Klass>module.typeStore.getType(\"Vector\");\r\n\r\n        this.setBaseClass(vectorType);\r\n        this.typeVariables = vectorType.typeVariables;\r\n        let typeE = this.typeVariables[0].type;\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.add(r);\r\n\r\n                return r.value;\r\n\r\n            }, false, false, \"Pushed ein Element oben auf den Stack. Gibt das gerade gepushte Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            }, false, false, \"Nimmt das oberste Element vom Stack und gibt es zurück.\"));\r\n\r\n            this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek();\r\n\r\n            }, false, false, \"Gibt das oberste Element des Stacks zurück, nimmt es aber nicht vom Stack herunter.\"));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"search\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                let index = ah.indexOf(r);\r\n                return index == -1 ? index : ah.objectArray.length - index;\r\n\r\n            },\r\n            true, false, \"Gibt die Position des Objekts auf dem Stack zurück. Dabei hat das oberste Element den Index 1, das nächstunterste den Index 2 usw. . Falls sich das Objekt nicht auf dem Stack befindet, wird -1 zurückgegeben.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, TypeVariable, Interface } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\n\r\nexport class VectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector\", module, \"Liste mit Zugriff auf das n-te Element in konstanter Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"Vector\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert ein neues Vector-Objekt', true));\r\n\r\n            this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n            ]), iteratorType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n    \r\n                    return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n    \r\n                }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n    \r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index).value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index).value;\r\n\r\n                return null;\r\n\r\n            }, false, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, false, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class SetClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Set\", module, \"Interface mit Methoden eines Set, d.h. einer Menge, die jedes Element maximal einmal enthält\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set das Objekt o enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set alle Elemente der übergebenen Collection enthält.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class SetIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(MapHelper: SetHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"SetIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"SetIteratorHelper\"] = new SetIteratorHelper(MapHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"SetIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass SetIteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private MapHelper: SetHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = MapHelper.valueArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos - 1].value);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos + 1].value);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos++];\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos--];\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.MapHelper.valueArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class SetHelper {\r\n\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, boolean> = new Map(); // Maps key objects to index in keyArray/valueArray\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.valueArray.map(o => \"\" + o.value).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.valueArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    // Only for Set\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ret: boolean = false;\r\n        let ah: SetHelper | ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            for (let value of ah.valueArray) {\r\n                ret = ret || this.addToSet(value);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    addToSet(r: Value): boolean {\r\n        if (this.contains(r)) return false;\r\n\r\n        this.valueArray.push(r);\r\n        this.map.set(r.value, true);\r\n        return true;\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n\r\n        if(this.map.get(object.value) == null) return false;\r\n\r\n        for(let i = 0; i < this.valueArray.length; i++){\r\n            if(this.valueArray[i].value == object.value){\r\n                this.valueArray.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        this.map.delete(object.value);\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.map.get(object.value) != null;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class HashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashSet\", module, \"Set mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"HashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues HashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class LinkedHashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedHashSet\", module, \"Ein LinkedHashSet speichert jedes Element nur genau ein Mal.\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"LinkedHashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues LinkedHashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class QueueClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Queue\", module);\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class DequeClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Deque\", module, \"Interface für Liste mit zweiseitigem Zugriff (insbesondere Anfügen an beiden Enden)\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let QueueInterface = (<Interface>module.typeStore.getType(\"Queue\")).clone();\r\n        QueueInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(QueueInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge (Ende -> Anfang) durchläuft.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class LinkedListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedList\", module, \"Verkettete Liste\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let dequeInterface = (<Interface>module.typeStore.getType(\"Deque\")).clone();\r\n        dequeInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(dequeInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"LinkedList\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue LinkedList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"descending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge durchläuft (Ende -> Anfang).\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste am Ende ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.poll_or_null();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addFirst(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addLast(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeLast_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_first_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_last_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class ConsoleClass extends Klass {\r\n\r\n    constructor(module: Module){\r\n        super(\"Console\", module, \"Klasse zur Textausgabe in der Konsole.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod( new Method(\"log\", new Parameterlist([{identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false}]), null, \r\n                (parameters) => { \r\n                    // console.log(<string>(parameters[0].value)); \r\n                    module.main.getBottomDiv()?.console.$consoleTab.find('.jo_console-top').append(\"<div>\" + <string>(parameters[1].value) + \"</div>\"); \r\n                }, false, true));\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\n\r\ntype PrintCommand = {\r\n    text: string;\r\n    color: string;\r\n    newLine: boolean;\r\n}\r\n\r\nexport class PrintManager {\r\n\r\n    color: string = \"\";\r\n    lastSpan: string = \"\";\r\n    $lastSpan: JQuery<HTMLElement>;\r\n\r\n    $lastDiv: JQuery<HTMLElement>;\r\n    $outputDiv: JQuery<HTMLElement>;\r\n\r\n    maxLines: number = 2000;\r\n    $lines: JQuery<HTMLElement>[] = [];\r\n\r\n    newLines: number = 0;\r\n\r\n    printCommands: PrintCommand[] = [];\r\n\r\n    currentLinelength: number = 0;\r\n    beginOfLineState: boolean = true; // Spaces at begin of line are converted to &nbsp;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase) {\r\n        jQuery(() => {\r\n            this.$outputDiv = $runDiv.find('.jo_output');\r\n            this.clear();\r\n\r\n            let that = this;\r\n\r\n            let n: number = 0;\r\n\r\n            let dirty = false;\r\n            let lastPrinting = performance.now();\r\n\r\n            setInterval(() => {\r\n                if (that.printCommands.length > 0) {\r\n                    that.doPrinting();\r\n                    if (performance.now() - lastPrinting > 200) {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                    } else {\r\n                        dirty = true;\r\n                    }\r\n                    lastPrinting = performance.now();\r\n                }\r\n\r\n                if (n++ % 20 == 0 && dirty) {\r\n                    setTimeout(() => {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                        dirty = false;\r\n                    }, 200);\r\n                }\r\n\r\n            }, 50);\r\n\r\n\r\n        });\r\n    }\r\n\r\n    getGraphicsDiv():JQuery<HTMLElement> {\r\n        return this.$runDiv.find('.jo_graphics');\r\n    }\r\n\r\n    showProgramEnd() {\r\n        let $programEndDiv = this.$runDiv.find('.jo_run-programend');\r\n        $programEndDiv.show();\r\n        $programEndDiv.addClass('jo_programendkf');\r\n        setTimeout(() => {\r\n            $programEndDiv.removeClass('jo_programendkf');\r\n            $programEndDiv.hide();\r\n        }, 3000);\r\n    }\r\n\r\n    doPrinting() {\r\n\r\n        // If there are more than maxLines in next output batch: \r\n        // Delete surplus lines before printing them and empty output-div\r\n        if (this.newLines >= this.maxLines) {\r\n\r\n            this.$outputDiv.empty();\r\n\r\n            let i = this.printCommands.length - 1;\r\n            let nl = 0;\r\n\r\n            while (i >= 0) {\r\n\r\n                if (this.printCommands[i].newLine) {\r\n                    nl++;\r\n                    if (nl >= this.maxLines) {\r\n                        this.printCommands.splice(0, i + 1);\r\n                        break;\r\n                    }\r\n                }\r\n                i--;\r\n            }\r\n\r\n        }\r\n\r\n        this.newLines = 0;\r\n\r\n        // reopen last printed span-element\r\n        if(this.$lastSpan != null){\r\n            this.$lastSpan.remove();\r\n            if(this.lastSpan.endsWith(\"</span>\")) this.lastSpan = this.lastSpan.substring(0, this.lastSpan.length - 7);\r\n        }\r\n\r\n\r\n        for (let pc of this.printCommands) {\r\n\r\n            // replace spaces with &nbsp;'s\r\n            // pc.text = pc.text.replace(/ /g, \"&nbsp;\");\r\n\r\n\r\n            if (this.beginOfLineState && pc.text.startsWith(\" \")) {\r\n                let match = pc.text.match(/^( *)(.*)$/);\r\n                if (match[2].length > 0) this.beginOfLineState = false;\r\n            } else {\r\n                if (pc.text.length > 0) this.beginOfLineState = false;\r\n            }\r\n\r\n            pc.text = pc.text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n\r\n            if (pc.color == null) pc.color = \"var(--defaultOutputColor)\";\r\n\r\n            if (this.lastSpan == \"\" || this.color != pc.color) {\r\n                if (this.lastSpan != \"\") this.lastSpan += \"</span>\";      // new color => close old span\r\n                this.lastSpan += '<span style=\"color: ' + pc.color + '\">';\r\n                if(pc.newLine && pc.text == \"\") this.lastSpan += \"\\u200b\"; // makes empty lines possible; \\u200b is a space with 0 width but full height.\r\n                this.color = pc.color;\r\n            }\r\n\r\n            if (this.currentLinelength <= 10000) {\r\n                this.lastSpan += pc.text;\r\n                this.currentLinelength += pc.text.length;\r\n            }\r\n\r\n\r\n            if (pc.newLine) {\r\n                this.beginOfLineState = true;\r\n                if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n                this.$lastSpan = jQuery(this.lastSpan);\r\n                this.$lastDiv.append(this.$lastSpan);\r\n                \r\n                this.lastSpan = \"\";\r\n                this.$lastSpan = null;\r\n\r\n                this.$lastDiv = jQuery('<div></div>');\r\n\r\n                let $input = this.main.getInterpreter().inputManager.$input;\r\n                if($input != null){\r\n                    this.$lastDiv.insertBefore($input);\r\n                } else {\r\n                    this.$outputDiv.append(this.$lastDiv);\r\n                }\r\n\r\n                this.$lines.push(this.$lastDiv);\r\n                this.currentLinelength = 0;\r\n            }\r\n\r\n        }\r\n\r\n        if (this.lastSpan != \"\") {\r\n            if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n            this.$lastSpan = jQuery(this.lastSpan);\r\n            this.$lastDiv.append(this.$lastSpan);\r\n        }\r\n\r\n        if (this.$lines.length > this.maxLines * 1.5) {\r\n            let that = this;\r\n            let linesToDelete = that.$lines.length - that.maxLines;\r\n\r\n            let $linesToDelete = that.$lines.splice(0, linesToDelete);\r\n\r\n            for (let $line of $linesToDelete) {\r\n                $line.remove();\r\n            }\r\n\r\n        }\r\n\r\n        this.printCommands = [];\r\n    }\r\n\r\n    clear() {\r\n        this.$outputDiv.empty();\r\n        this.$lastDiv = jQuery('<div></div>');\r\n        this.$lines.push(this.$lastDiv);\r\n        this.$outputDiv.append(this.$lastDiv);\r\n        this.currentLinelength = 0;\r\n        this.color = \"\";\r\n        this.lastSpan = \"\";\r\n        this.printCommands = [];\r\n    }\r\n\r\n    print(text: string | null, color?: string|number) {\r\n        if (text == null) return;\r\n\r\n        if(typeof color == \"number\"){\r\n            color = color.toString(16);\r\n            while(color.length < 6) color = \"0\" + color;\r\n            color = \"#\" + color;\r\n        }\r\n\r\n        text = text.toString();\r\n        if (text.indexOf(\"\\n\") >= 0) {\r\n            let tList = text.split(\"\\n\");\r\n            for (let i = 0; i < tList.length; i++) {\r\n                let t = tList[i];\r\n                let newLine = i < tList.length - 1;\r\n                if (t == \"\" && i == tList.length - 1) continue;\r\n                this.printCommands.push({\r\n                    text: t,\r\n                    color: color,\r\n                    newLine: newLine\r\n                });\r\n                if (newLine) this.newLines++;\r\n            }\r\n        } else {\r\n            this.printCommands.push({\r\n                text: text,\r\n                color: color,\r\n                newLine: false\r\n            });\r\n        }\r\n    }\r\n\r\n    println(text: string | null, color?: string|number) {\r\n        if (text == null) text = \"\";\r\n        this.print(text + \"\\n\", color);\r\n    }\r\n\r\n}","import { Type, Method, Value } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType, charPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputManager {\r\n\r\n    $input: JQuery<HTMLInputElement>;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public readInput(method: Method, parameters: Value[], callback: (value: Value) => void){\r\n\r\n        let returnType = method.getReturnType();\r\n        let message = parameters[1].value;\r\n        let defaultValue = parameters.length == 3 ? parameters[2].value : null;\r\n\r\n        let printManager: PrintManager = this.main.getInterpreter().printManager;\r\n        if(message != null && message != \"\"){\r\n            printManager.beginOfLineState = true;\r\n            printManager.println(\"\\n\" + message);\r\n            printManager.doPrinting();\r\n        }\r\n\r\n        this.$input = jQuery('<input class=\"jo_newInput\" type=\"text\"/>');\r\n\r\n        let $od = printManager.$outputDiv;\r\n        $od.append(this.$input);\r\n\r\n        let dvt = defaultValue == null ? \"\" : defaultValue;\r\n        this.$input.val(dvt);\r\n\r\n        let that = this;\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').on('mousedown', (e)=>{\r\n        //     e.preventDefault();\r\n        //     that.onSubmit(returnType, callback);\r\n        // });\r\n        \r\n        this.$input.on('keydown', (e) => {\r\n            if(e.key == \"Enter\"){\r\n                that.onSubmit(returnType, callback);\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            that.$input.focus();\r\n        }, 200);\r\n\r\n        printManager.$outputDiv.on('mousedown.inputmanager', (e) => {\r\n            setTimeout(() => {\r\n                that.$input.focus();\r\n            }, 200);\r\n        })\r\n\r\n    }\r\n\r\n    onSubmit(type: Type, callback: (value: Value) => void){\r\n        let v: string = <string>(this.$input.val());\r\n        let printManager = this.main.getInterpreter().printManager;\r\n\r\n        let valueAndError = this.parse(v, type);\r\n\r\n        if(valueAndError.error != null){\r\n            // jQuery('<div style=\"color: red\">' + valueAndError.error + '</div>').insertBefore(this.$input);\r\n            this.$input.detach();\r\n            printManager.println(valueAndError.error, \"#ff0000\");\r\n            printManager.doPrinting();\r\n            printManager.$outputDiv.append(this.$input);\r\n            this.$input[0].scrollIntoView();\r\n            this.$input.focus();\r\n            return;\r\n        }\r\n        \r\n        printManager.$outputDiv.off('mousedown.inputmanager');\r\n        printManager.println(v);\r\n        this.$input.off('keydown');\r\n        this.hide();\r\n\r\n        callback(valueAndError.value);\r\n\r\n    }\r\n\r\n    parse(v: string, type: Type):{value: Value, error: string} {\r\n\r\n        if(type == stringPrimitiveType){\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v.length == 0) return {error: \"Leere Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            if(v.length > 1) return {error: \"Zu lange Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v != \"true\" && v != \"false\") return {error: \"Erwartet wird true oder false.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v == \"true\", type: type}\r\n            }\r\n        }\r\n\r\n        v = v.replace(\",\", \".\");\r\n\r\n        let n = Number(v);\r\n\r\n        if(n == null){\r\n            return {error: \"Erwartet wird eine Zahl.\", value: null};\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(n != Math.round(n)) return {error: \"Erwartet wird eine ganze Zahl.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: Math.round(n), type: type}\r\n            }\r\n        }\r\n\r\n        return {\r\n            error: null,\r\n            value: {value: n, type: type}\r\n        }\r\n\r\n    }\r\n\r\n\r\n    hide(){\r\n\r\n        if(this.$input != null){\r\n            this.$input.remove();\r\n            this.$input = null;\r\n        }\r\n\r\n        // this.$runDiv.find('.jo_run-input').css('display', 'none');\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').off('mousedown');\r\n        \r\n        // this.$runDiv.find('.jo_run-input-input').off('keydown');\r\n\r\n    }\r\n\r\n\r\n}","import { LoginRequest } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n    errorCallback?: (message: string) => void) {\r\n    showNetworkBusy(true);\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: url,\r\n        success: function (response: any) {\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').show();\r\n    } else {\r\n        jQuery('.jo_network-busy').hide();\r\n    }\r\n}\r\n\r\n\r\n\r\n// export function newLogin(url: string, request: any, successCallback: (response: any) => void,\r\n//     errorCallback?: (message: string) => void) {\r\n\r\n//     if (credentials.username == null) return;\r\n//     let loginRequest: LoginRequest = {username: credentials.username, password: credentials.password};\r\n\r\n//     $.ajax({\r\n//         type: 'POST',\r\n//         data: JSON.stringify(loginRequest),\r\n//         contentType: 'application/json',\r\n//         url: \"login\",\r\n//         success: function (response: any) {\r\n//             if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n//             } else {\r\n//                 ajax(url, request, successCallback, errorCallback);\r\n//             }\r\n//             return;\r\n//         },\r\n//         error: function (jqXHR, message) {\r\n// //            ajax(url, request, successCallback, errorCallback);\r\n//         }\r\n//     });\r\n// }\r\n","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\n\r\nexport class NetworkManager {\r\n    \r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 25;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 25;\r\n    forcedUpdateEvery: number = 2;\r\n    forcedUpdatesInARow: number = 0;\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>){        \r\n        \r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if(this.interval != null) clearInterval(this.interval);\r\n\r\n        let counterTillForcedUpdate: number = this.forcedUpdateEvery;\r\n\r\n        this.interval = setInterval(()=>{\r\n            \r\n            if(that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if(that.secondsTillNextUpdate < 0 ){\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                counterTillForcedUpdate--;\r\n                let forceUpdate = counterTillForcedUpdate == 0;\r\n                if(forceUpdate){\r\n                    this.forcedUpdatesInARow++;\r\n                    counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                    if(this.forcedUpdatesInARow > 50){\r\n                        counterTillForcedUpdate = this.forcedUpdateEvery * 50;\r\n                    }\r\n                } \r\n                that.sendUpdates(() => {}, forceUpdate);\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n            \r\n            if(that.errorHappened){\r\n                $rect.css('fill', '#c00000');                \r\n                this.$updateTimerDiv.attr('title',\"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');                \r\n                this.$updateTimerDiv.attr('title',that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n        }, 1000);\r\n        \r\n    }\r\n    \r\n    sendUpdates(callback?: ()=>void, sendIfNothingIsDirty: boolean = false, sendBeacon: boolean = false){\r\n\r\n        if(this.main.user == null || this.main.user.is_testuser){\r\n            if(callback != null) callback();\r\n            return;\r\n        } \r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let classDiagram = this.main.rightDiv?.classDiagram;\r\n        let userSettings = this.main.user.settings;\r\n\r\n        if(classDiagram?.dirty || this.main.userDataDirty){\r\n            \r\n            this.main.userDataDirty = false;\r\n            userSettings.classDiagram = classDiagram?.serialize();\r\n            this.sendUpdateUserSettings(() => {}, sendBeacon);\r\n            this.forcedUpdatesInARow = 0;\r\n        }\r\n\r\n        classDiagram.dirty = false;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for(let ws of this.main.workspaceList){\r\n\r\n            if(!ws.saved){\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n                this.forcedUpdatesInARow = 0;\r\n            }\r\n            \r\n            for(let m of ws.moduleStore.getModules(false)){\r\n                if(!m.file.saved){\r\n                    this.forcedUpdatesInARow = 0;\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n        \r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList, \r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 0\r\n        }\r\n\r\n        let that = this;\r\n        if(wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty){\r\n\r\n            if(sendBeacon){\r\n                navigator.sendBeacon(\"sendUpdates\", JSON.stringify(request));\r\n            } else {\r\n\r\n                ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                    that.errorHappened = !response.success;\r\n                    if(!that.errorHappened){\r\n    \r\n                        if(this.main.workspacesOwnerId == this.main.user.id){\r\n                            that.updateWorkspaces(request, response);\r\n                        }\r\n    \r\n                        if(callback != null){\r\n                            callback();\r\n                            return;\r\n                        }\r\n                    }\r\n                }, () => {\r\n                    that.errorHappened = true;\r\n                } );\r\n\r\n            }\r\n\r\n        } else {\r\n            if(callback != null){\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n    sendCreateWorkspace(w: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            w.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let wd: WorkspaceData = w.getWorkspaceData(false);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,            \r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            w.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            m.file.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\", null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 0\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 0\r\n            }\r\n    \r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n    \r\n        }, false);\r\n\r\n    }\r\n\r\n\r\n    sendCreateRepository(ws: Workspace, publish_to: number, repoName: string, repoDescription: string, callback: (error: string, repository_id?: number) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request = {\r\n                workspace_id: ws.id,\r\n                publish_to: publish_to,\r\n                name: repoName,\r\n                description: repoDescription\r\n            }\r\n    \r\n            ajax(\"createRepository\", request, (response: {success: boolean, message?: string, repository_id?: number}) => {\r\n                ws.moduleStore.getModules(false).forEach(m => {\r\n                    m.file.is_copy_of_id = m.file.id;\r\n                    m.file.repository_file_version = 1;\r\n                })\r\n                ws.repository_id = response.repository_id;\r\n                ws.has_write_permission_to_repository = true;\r\n                callback(response.message, response.repository_id)\r\n            }, callback);\r\n    \r\n        }, true);\r\n\r\n\r\n    }\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if(response.success){\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void, sendBeacon: boolean = false){\r\n\r\n        if(this.main.user.is_testuser){\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        if(sendBeacon){\r\n            navigator.sendBeacon(\"updateUserSettings\", JSON.stringify(request));\r\n        } else {\r\n            ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n                if(response.success){\r\n                    callback(null);\r\n                } else {\r\n                    callback(\"Netzwerkfehler!\");\r\n                }\r\n            }, callback);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    private updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse){\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for(let workspace of this.main.workspaceList){\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if(remoteWorkspace != null){\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n                \r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for(let module of workspace.moduleStore.getModules(false)){\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if(remoteFileData == null){\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if(remoteFileData.version > module.file.version){\r\n                        if(fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate){\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for(let remoteFile of remoteWorkspace.files){\r\n                    if(idToModuleMap.get(remoteFile.id) == null){\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }        \r\n\r\n        if(newWorkspaceNames.length > 0){\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false):Workspace {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.repository_id = remoteWorkspace.repository_id;\r\n        w.has_write_permission_to_repository = remoteWorkspace.has_write_permission_to_repository;\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if(path.length == 1 && path[0] == \"\") path = [];\r\n        this.main.projectExplorer.workspaceListPanel.addElement({\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: remoteWorkspace.repository_id == null ? \"workspace\" : \"repository\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        });\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if(withSort){\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n        return w;\r\n    }\r\n\r\n    private createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            is_copy_of_id: remoteFile.is_copy_of_id,\r\n            repository_file_version: remoteFile.repository_file_version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Value, Type, Variable } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\n\r\nexport class DebuggerElement {\r\n\r\n    caption: string; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: DebuggerElement;\r\n    children: DebuggerElement[] = [];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    value: Value;\r\n    variable: Variable;\r\n\r\n    type: Type;\r\n    identifier: string;\r\n\r\n    $debuggerElement: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string, parent: DebuggerElement, identifier: string, value: Value, type: Type, variable: Variable) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n        this.type = type;\r\n        this.variable = variable;\r\n        this.identifier = identifier;\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.$debuggerElement == null) {\r\n            this.$debuggerElement = jQuery('<div>');\r\n            this.$debuggerElement.addClass(\"jo_debuggerElement\");\r\n            this.$debuggerElement.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n            let $deFirstLine = jQuery('<div class=\"jo_deFirstline\"><span class=\"jo_deIdentifier\">' +\r\n                this.identifier + '</span>:&nbsp;<span class=\"jo_deValue\"></span></div>');\r\n\r\n            this.$debuggerElement.append($deFirstLine);\r\n\r\n            // show compound types in own branch of visible tree\r\n            if (this.type instanceof ArrayType ||\r\n                (this.type instanceof Klass && !(this.type instanceof Enum) && !(this.type == stringPrimitiveType))\r\n                || this.type instanceof StaticClass\r\n                || this.type instanceof Interface\r\n            ) {\r\n                this.canOpen = true;\r\n                this.$debuggerElement.addClass('jo_canOpen');\r\n                this.$debuggerElement.append(jQuery('<div class=\"jo_deChildContainer\"></div>'));\r\n\r\n                this.$debuggerElement.find('.jo_deFirstline').on('mousedown', (event) => {\r\n                    if (this.value != null && this.value.value != null) {\r\n                        if (this.children.length == 0) {\r\n                            this.onFirstOpening();\r\n                        }\r\n                        this.$debuggerElement.toggleClass('jo_expanded');\r\n                        this.isOpen = !this.isOpen;\r\n                    } else {\r\n                        this.children = [];\r\n                    }\r\n\r\n                    event.stopPropagation();\r\n\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        if (this.type instanceof Klass) {\r\n\r\n            let ro: RuntimeObject = this.value.value;\r\n            let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n            if (listHelper != null) {\r\n                this.renderListElements(listHelper);\r\n            } else {\r\n                for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n            }\r\n\r\n\r\n        } else if (this.type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$debuggerElement.find('.jo_deChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new DebuggerElement(null, this, \"[\" + i + \"]\", a[i], this.type.arrayOfType, null);\r\n                de.render();\r\n                $childContainer.append(de.$debuggerElement);\r\n\r\n            }\r\n\r\n        } else if (this.type instanceof StaticClass) {\r\n\r\n            for (let a of this.type.getAttributes(Visibility.private)) {\r\n                let ro = this.type.classObject;\r\n                let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n            }\r\n\r\n        } else if (this.type instanceof Interface) {\r\n\r\n            if (this.value.value != null && this.value.value instanceof RuntimeObject) {\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n\r\n            } else {\r\n                this.children == [];\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderListElements(listHelper: ListHelper) {\r\n\r\n        let valueArray = listHelper.valueArray;\r\n        if (this.children.length > valueArray.length) {\r\n            for (let i = valueArray.length; i < this.children.length; i++) {\r\n                let childElement = this.children[i];\r\n                childElement.$debuggerElement.remove();\r\n            }\r\n            this.children.splice(valueArray.length);\r\n        }\r\n\r\n        if (this.children.length < valueArray.length && this.children.length < 100) {\r\n            for (let i = this.children.length; i < valueArray.length && i <= 100; i++) {\r\n                let v: Value = valueArray[i];\r\n                let title = \"\" + i;\r\n                if (i == 100) {\r\n                    v = { type: stringPrimitiveType, value: \"\" + (listHelper.valueArray.length - 100) + \" weitere...\" };\r\n                    title = \"...\";\r\n                }\r\n                let de = new DebuggerElement(null, this, title, v, v.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').first().append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n        let s: string;\r\n        let v = this.value;\r\n\r\n        if (v == null) {\r\n            this.$debuggerElement.hide();\r\n            return;\r\n        }\r\n\r\n        this.$debuggerElement.show();\r\n        if (v.value == null) {\r\n            s = \"null\";\r\n            this.removeAllChildren();\r\n        } else {\r\n\r\n            if (v.updateValue != null) {\r\n                v.updateValue(v);\r\n            }\r\n\r\n            s = v.type.debugOutput(v);\r\n\r\n            if (this.type instanceof Klass) {\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n                let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n                if (listHelper != null) {\r\n                    this.renderListElements(listHelper);\r\n                    if(listHelper.allElementsPrimitive()){\r\n                        s = \"\" +listHelper.valueArray.length + \" El: \"\r\n                        s += \"[\" + listHelper.objectArray.slice(0, 20).map(o => \"\" + o).join(\", \") + \"]\"\r\n                    } else {\r\n                        s = v.type.identifier + \" (\" +listHelper.valueArray.length + \" Elemente)\";\r\n                    }\r\n                }\r\n            } \r\n            \r\n        }\r\n\r\n        this.$debuggerElement.find('.jo_deValue').first().html(s);\r\n\r\n\r\n        for (let child of this.children) {\r\n            child.renderValue();\r\n        }\r\n    }\r\n\r\n    removeAllChildren() {\r\n        for (let de of this.children) {\r\n            de.$debuggerElement.remove();\r\n        }\r\n        this.children = []\r\n    }\r\n\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'down.contextmenu', () => {\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", () => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number){\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value/(duration/20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if(value < 0){\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n","import { openContextMenu, makeEditable, ContextMenuItem, jo_mouseDetected, animateToTransparent } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { isJSDocThisTag, isThisTypeNode } from \"typescript\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => { \r\n                         this.sortElements();\r\n                         newElement.$htmlFirstLine[0].scrollIntoView(); \r\n                         animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n            \r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                for(let element of that.elements){\r\n                    if(element.isFolder){\r\n                        if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                            element.$htmlFirstLine.removeClass('jo_expanded');\r\n                            element.$htmlFirstLine.addClass('jo_collapsed');\r\n                        }                        \r\n                    }\r\n                    if(element.path.length > 0){\r\n                        element.$htmlFirstLine.slideUp(200);\r\n                    }\r\n                }                \r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], name2: string, path2: string[]) {\r\n\r\n        let nameWithPath1 = path1.join(\"/\");\r\n        if (nameWithPath1 != \"\") nameWithPath1 += \"/\";\r\n        nameWithPath1 += name1;\r\n\r\n        let nameWithPath2 = path2.join(\"/\");\r\n        if (nameWithPath2 != \"\") nameWithPath2 += \"/\";\r\n        nameWithPath2 += name2;\r\n\r\n        return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[]): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, element.name, element.path) < 0) return i - 1;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path);\r\n        if(ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n            jQuery(elementAtIndex).after(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement) {\r\n        this.elements.push(element);\r\n        element.$htmlFirstLine = this.renderElement(element);\r\n        this.$listElement.prepend(element.$htmlFirstLine);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, bName, b.path);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = \" jo_expanded\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if(element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonHomework\"></div>\r\n           <div class=\"jo_additionalButtonStart\"></div>\r\n           <div class=\"jo_additionalButtonRepository\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'down', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => { \r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView(); \r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                           });\r\n                            });\r\n            \r\n                        }\r\n                    }, {\r\n                        caption: \"Neuer Workspace...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            that.$buttonNew.trigger(mousePointer + 'down');\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'down', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n                this.renderElement(el);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n\r\n                        if (pathString.startsWith(el.path.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor($html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class WatcherElement {\r\n\r\n    constructor(public expression: string, public accordionElement: AccordionElement,\r\n        private main: MainBase, private $secondLine: JQuery<HTMLElement>, private $rightTextInFirstLine: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    setError(error: string) {\r\n        this.$secondLine.empty();\r\n        this.$secondLine.append(jQuery('<div class=\"jo_watcherResult\">' + \"---\" + '</div>'));\r\n    }\r\n\r\n    evaluate() {\r\n\r\n        let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n        let result = evaluator.evaluate(this.expression);\r\n        if (result.error != null) {\r\n            this.setError(result.error);\r\n        } else {\r\n\r\n            let v = \"---\";\r\n            if (result.value != null) {\r\n                v = result.value.type.debugOutput(result.value);\r\n            }\r\n\r\n            this.$secondLine.empty();\r\n            this.$rightTextInFirstLine.empty();\r\n\r\n            monaco.editor.colorize(v, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n                let $result = jQuery('<div class=\"jo_watcherResult\">' + command + '</div>');\r\n\r\n                if (this.expression.length + v.length < 20) {\r\n                    this.$rightTextInFirstLine.append($result);\r\n                } else {\r\n                    this.$secondLine.append($result);\r\n                }\r\n\r\n            }\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Interpreter, ProgramStackElement, InterpreterState } from \"./Interpreter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Value, Heap } from \"../compiler/types/Types.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { DebuggerElement } from \"./DebuggerElement.js\";\r\nimport { Accordion, AccordionPanel, AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { StaticClass } from \"../compiler/types/Class.js\";\r\nimport { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { WatcherElement } from \"./WatcherElement.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Debugger {\r\n\r\n    lastSymboltable: SymbolTable;\r\n    lastDebuggerElements: DebuggerElement[] = [];\r\n    accordion: Accordion;\r\n\r\n    variablePanel: AccordionPanel;\r\n\r\n    watchPanel: AccordionPanel;\r\n\r\n\r\n    constructor(private main: MainBase, private $debuggerDiv: JQuery<HTMLElement>, private $projectexplorerDiv?: JQuery<HTMLElement>) {\r\n\r\n        this.accordion = new Accordion($debuggerDiv);\r\n\r\n        this.variablePanel = new AccordionPanel(this.accordion, \"Variablen\", \"3\", null, null, \"\", false, false, \"file\", false, []);\r\n        this.variablePanel.$listElement.css('margin-left', '4px');\r\n\r\n        this.watchPanel = new AccordionPanel(this.accordion, \"Beobachten\", \"2\",\r\n            \"img_add-dark\", \"Beobachtungsterm hinzufügen\",\r\n            \"watcher\", true, false, \"file\", false, []);\r\n        this.watchPanel.$listElement.css('margin-left', '4px');\r\n\r\n        let that = this;\r\n        this.watchPanel.newElementCallback = (accordionElement, callbackIfSuccesful) => {\r\n            that.addWatchExpression(accordionElement);\r\n            callbackIfSuccesful(accordionElement.externalElement);\r\n            return null;\r\n        };\r\n\r\n        this.watchPanel.deleteCallback = (watchExpression, callbackIfSuccesful) => {\r\n            that.deleteWatchExpression(watchExpression);\r\n            callbackIfSuccesful();\r\n        };\r\n\r\n        this.watchPanel.renameCallback = (watchExpression, newName) => {\r\n            that.renameWatchExpression(watchExpression, newName);\r\n            return newName;\r\n        }\r\n\r\n        this.$debuggerDiv.hide();\r\n    }\r\n\r\n    public enable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.hide();\r\n        }\r\n        this.$debuggerDiv.show();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").hide();\r\n    }\r\n\r\n    public disable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.show();\r\n        }\r\n        this.$debuggerDiv.hide();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").show();\r\n    }\r\n\r\n    showData(currentProgram: Program, textPosition: TextPosition,\r\n        stack: Value[], stackframe: number, heap: Heap) {\r\n\r\n        if (currentProgram.module.file == null) return; // inside command line\r\n\r\n        let elementsToKeep: HTMLElement[] = [];\r\n\r\n        let module = currentProgram.module;\r\n        let symbolTable = module.findSymbolTableAtPosition(textPosition.line, textPosition.column);\r\n\r\n        let oldDebuggerElements = this.lastDebuggerElements;\r\n\r\n        this.lastDebuggerElements = [];\r\n        let $variableList = this.variablePanel.$listElement;\r\n\r\n        let st = symbolTable;\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        if (st.classContext != null) {\r\n\r\n            let object = stack[stackframe];\r\n            // same object context as before?\r\n            if (oldDebuggerElements.length > 0 && oldDebuggerElements[0].value == object && oldDebuggerElements[0].variable == null) {\r\n                // yes => keep old Debugger Element and html-Element\r\n                this.lastDebuggerElements.push(oldDebuggerElements[0]);\r\n                elementsToKeep.push(this.lastDebuggerElements[0].$debuggerElement[0]);\r\n            } else {\r\n                // no => make a new one\r\n                let thisString = (st.classContext instanceof StaticClass) ? st.classContext.identifier : \"this\";\r\n                let de: DebuggerElement = new DebuggerElement(null, null, thisString, object, st.classContext, null);\r\n                this.lastDebuggerElements.push(de);\r\n            }\r\n\r\n        }\r\n\r\n        // in nested scopes there may be a variable in inner scope with same\r\n        // identifier as variable in outer scope. We only want to show the variable in \r\n        // the inner scope, so we iterate from inner scope to outer scope and keep\r\n        // track of already shown variable names:\r\n        let visibleVariablesMap: { [identifier: string]: boolean } = {};\r\n\r\n        // iterate over SymbolTable from inside to outside\r\n        while (st != null) {\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                // had there been a variable with same identifier in inner scope?\r\n                if (visibleVariablesMap[variable.identifier] == null) {\r\n                    // no\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    // Reuse old Debugger Element vor variable, if present\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            if (de.value == null && de.variable != null) {\r\n                                de.value = stack[stackframe + de.variable.stackPos];\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // no old debugger element present, so make a new one\r\n                    if (de == null) {\r\n                        let value = stack[stackframe + variable.stackPos];\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n\r\n            }, this);\r\n\r\n            // next outer symbol table\r\n            st = st.parent;\r\n        }\r\n\r\n        // if we are outside class context, then variables on heap are visible:\r\n        if (symbolTable.classContext == null) {\r\n            for (let identifier in heap) {\r\n\r\n                let variable = heap[identifier];\r\n\r\n                if (visibleVariablesMap[variable.identifier] != true) {\r\n\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            de.value = de.variable.value;\r\n\r\n                        }\r\n                    }\r\n\r\n                    if (de == null) {\r\n                        let value = variable.value;\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // remove unused elements from html DOM:\r\n        for (let child of $variableList.children()) {\r\n            if (!(elementsToKeep.indexOf(child) >= 0)) {\r\n                child.remove();\r\n            }\r\n        }\r\n\r\n        // inject new values into debugger elements:\r\n        for (let de of this.lastDebuggerElements) {\r\n\r\n            if (de.variable != null) {\r\n                if (de.variable.stackPos != null) {\r\n                    de.value = stack[stackframe + de.variable.stackPos];\r\n                } else {\r\n                    de.value = de.variable.value;\r\n                }\r\n            }\r\n\r\n            de.render();\r\n\r\n            // if html element corresponding to debugger element is not already present in Browser-DOM\r\n            // then append it to DOM\r\n            if (elementsToKeep.indexOf(de.$debuggerElement[0]) < 0) {\r\n                $variableList.append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n        this.lastSymboltable = symbolTable;\r\n\r\n        // this.evaluateWatcherExpressions(currentProgram, textPosition, stack, stackframe);\r\n        this.evaluateWatcherExpressions();\r\n\r\n    }\r\n\r\n    renameWatchExpression(watcherElement: WatcherElement, newName: string) {\r\n        watcherElement.expression = newName;\r\n\r\n        monaco.editor.colorize(newName, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = watcherElement.accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', watcherElement.expression);\r\n\r\n        });\r\n\r\n        if (this.main.getInterpreter().state == InterpreterState.paused) {\r\n            watcherElement.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteWatchExpression(watchExpression: any) {\r\n        // nothing to do\r\n    }\r\n\r\n    addWatchExpression(accordionElement: AccordionElement) {\r\n\r\n        accordionElement.$htmlSecondLine = jQuery('<div></div>');\r\n        let $rightTextAfterFilename = accordionElement.$htmlFirstLine.parent().find('.jo_textAfterName').first();\r\n\r\n        let we = new WatcherElement(accordionElement.name, accordionElement,\r\n            this.main, accordionElement.$htmlSecondLine, $rightTextAfterFilename);\r\n\r\n        accordionElement.externalElement = we;\r\n\r\n        monaco.editor.colorize(accordionElement.name, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', accordionElement.externalElement.expression);\r\n\r\n        });\r\n\r\n        we.evaluate();\r\n\r\n    }\r\n\r\n    evaluateWatcherExpressions() {\r\n\r\n        for (let ae of this.watchPanel.elements) {\r\n            let we: WatcherElement = ae.externalElement;\r\n            we.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver, getArrayType } from \"./parser/TypeResolver.js\";\r\nimport { SymbolTable } from \"./parser/SymbolTable.js\";\r\nimport { Program } from \"./parser/Program.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Heap } from \"./types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { TokenType } from \"./lexer/Token.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport type Compilation = {\r\n    errors: Error[],\r\n    program: Program,\r\n    symbolTable: SymbolTable\r\n}\r\n\r\nexport class AdhocCompiler {\r\n\r\n    moduleStore: ModuleStore;\r\n    lexer: Lexer;\r\n    module: Module;\r\n    parser: Parser;\r\n    codeGenerator: CodeGenerator;\r\n\r\n    constructor(private main: MainBase) {\r\n        this.moduleStore = new ModuleStore(this.main, true);\r\n        this.lexer = new Lexer();\r\n        this.parser = new Parser(true);\r\n        this.codeGenerator = new CodeGenerator();\r\n        this.module = new Module(null, main);\r\n    }\r\n\r\n    compile(code: string, moduleStore: ModuleStore, heap: Heap, symbolTable?: SymbolTable): Compilation {\r\n\r\n        let t0 = performance.now();\r\n\r\n        let errors: Error[] = [];\r\n\r\n        this.module.clear();\r\n        if (symbolTable == null) {\r\n            symbolTable = new SymbolTable(null, { column: 1, line: 1, length: 0 }, { column: 1, line: 100, length: 0 });\r\n            symbolTable.beginsNewStackframe = true;\r\n        } else {\r\n            symbolTable = symbolTable.getImitation();\r\n        }\r\n\r\n        // 1st pass: lexing\r\n        let lexed = this.lexer.lex(code);\r\n        errors = lexed.errors;\r\n        this.module.tokenList = lexed.tokens;\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        let parser: Parser = new Parser(true);\r\n        parser.parse(this.module);\r\n        errors = errors.concat(this.module.errors[1]);\r\n\r\n        // 3rd pass: resolve types and populate typeStores\r\n\r\n        for (let typenode of this.module.typeNodes) {\r\n            if (typenode.resolvedType == null) {\r\n                let resolvedTypeAndModule = moduleStore.getType(typenode.identifier);\r\n                if (resolvedTypeAndModule == null) {\r\n                    errors.push({\r\n                        text: \"Der Datentyp \" + typenode.identifier + \" ist nicht bekannt.\",\r\n                        position: typenode.position,\r\n                        level: \"error\"\r\n                    })\r\n                } else {\r\n                    typenode.resolvedType = getArrayType(resolvedTypeAndModule.type, typenode.arrayDimension);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 4th pass: code generation\r\n\r\n        // let codeGeneratorErrors = this.codeGenerator\r\n        //     .startAdhocCompilation(this.module, this.moduleStore, symbolTable, heap);\r\n        let codeGeneratorErrors = this.codeGenerator\r\n            .startAdhocCompilation(this.module, moduleStore, symbolTable, heap);\r\n        errors = errors.concat(codeGeneratorErrors);\r\n\r\n\r\n\r\n        if (errors.length == 0) {\r\n\r\n            let statements = this.module.mainProgram.statements;\r\n            for (let statement of statements) {\r\n                statement.stepFinished = false;\r\n            }\r\n\r\n            if (statements.length > 0 && statements[statements.length - 1].type == TokenType.programEnd) {\r\n                statements.splice(statements.length - 1, 1);\r\n            }\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        return {\r\n            program: this.module.mainProgram,\r\n            errors: errors,\r\n            symbolTable: symbolTable\r\n        };\r\n    }\r\n\r\n\r\n}","import { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { Heap, Value } from \"../compiler/types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Evaluator {\r\n\r\n    private programMap: Map<string, Map<number, Program>> = new Map();\r\n    private compiler: AdhocCompiler;\r\n\r\n    constructor(private workspace: Workspace, private main: MainBase){\r\n        this.compiler = new AdhocCompiler(main);\r\n    }\r\n\r\n    compile(expression: string, symbolTable: SymbolTable): {error: string, program: Program} {\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        let pmEntry = this.programMap.get(expression);\r\n        if(pmEntry != null){\r\n            let program = pmEntry.get(symbolTable.id);\r\n            if(program != null){\r\n                return {error: null, program: program};\r\n            }\r\n        } else {\r\n            pmEntry = new Map();\r\n            this.programMap.set(expression, pmEntry);\r\n        }\r\n\r\n        let moduleStore = this.workspace.moduleStore;\r\n        let heap: Heap = this.main.getInterpreter().heap;\r\n\r\n        if (expression.length > 0 && moduleStore != null) {\r\n\r\n            let compilation = this.compiler.compile(expression, moduleStore, heap, symbolTable);\r\n\r\n            if (compilation.errors.length > 0) {\r\n                return { error: compilation.errors[0].text, program: null};\r\n            } else {\r\n\r\n                pmEntry.set(symbolTable.id, compilation.program);\r\n\r\n                return {error: null, program: compilation.program};\r\n            }\r\n\r\n        } else {\r\n            return {error: \"Leerer Ausdruck\", program: null};\r\n        }\r\n    }\r\n\r\n    evaluate(expression: string, symbolTable?: SymbolTable): { error: string, value: Value } {\r\n\r\n        if(symbolTable == null) symbolTable = this.main.getDebugger().lastSymboltable;\r\n\r\n        let c = this.compile(expression, symbolTable);\r\n\r\n        if(c?.error != null){\r\n            return { error: c.error, value: null};\r\n        }\r\n\r\n        if(c == null){\r\n            return { error: \"Fehler beim Kompilieren\", value: null};\r\n        }\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n\r\n        return interpreter.evaluate(c.program);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { WorkspaceData, WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Evaluator } from \"../interpreter/Evaluator.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string;\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    // published_to 0: none; 1: class; 2: school; 3: all\r\n    published_to: number;\r\n    \r\n    repository_id: number;    // id of repository-workspace\r\n    has_write_permission_to_repository: boolean; // true if owner of this working copy has write permission to repository workspace\r\n\r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    evaluator: Evaluator;\r\n\r\n    settings: WorkspaceSettings = {\r\n        libraries: []\r\n    };\r\n    \r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main, true, this.settings.libraries);\r\n        this.evaluator = new Evaluator(this, main);\r\n    }\r\n\r\n    alterAdditionalLibraries() {\r\n        this.moduleStore.setAdditionalLibraries(this.settings.libraries);\r\n        this.moduleStore.dirty = true;\r\n    }\r\n\r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            path: this.path,\r\n            isFolder: this.isFolder,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            version: this.version,\r\n            repository_id: this.repository_id,\r\n            has_write_permission_to_repository: this.has_write_permission_to_repository,\r\n            language: 0,\r\n            sql_baseDatabase: \"\",\r\n            sql_history: \"\",\r\n            sql_manipulateDatabaseStatements: \"\",\r\n            settings: JSON.stringify(this.settings)\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n\r\n    renderSynchronizeButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonRepository');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        let that = this;\r\n        let myMain: Main = <Main>this.main;\r\n\r\n        if (this.repository_id != null && this.owner_id == myMain.user.id) {\r\n            let $button = jQuery('<div class=\"jo_startButton img_open-change jo_button jo_active\" title=\"Workspace mit Repository synchronisieren\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.synchronizeWithRepository();\r\n\r\n            });\r\n\r\n        } else {\r\n            $buttonDiv.find('.jo_startButton').remove();\r\n        }\r\n    }\r\n\r\n    synchronizeWithRepository(){\r\n        let myMain: Main = <Main>this.main;\r\n        if(this.repository_id != null && this.owner_id == myMain.user.id){\r\n            myMain.networkManager.sendUpdates(() => {\r\n                myMain.synchronizationManager.synchronizeWithWorkspace(this);\r\n            }, true);\r\n        }\r\n    }\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let settings: WorkspaceSettings = (ws.settings != null && ws.settings.startsWith(\"{\")) ? JSON.parse(ws.settings) : {libraries: []}; \r\n\r\n        //@ts-ignore\r\n        if(settings.libaries){\r\n            //@ts-ignore\r\n            settings.libraries = settings.libaries;\r\n        }\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.version = ws.version;\r\n        w.repository_id = ws.repository_id;\r\n        w.has_write_permission_to_repository = ws.has_write_permission_to_repository;\r\n        w.settings = settings;\r\n\r\n        if(w.settings.libraries == null){\r\n            w.settings.libraries = [];\r\n        }\r\n\r\n        if(w.settings.libraries.length > 0){\r\n            w.moduleStore.setAdditionalLibraries(w.settings.libraries);\r\n        }\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","export type SoundType = {\r\n    url: string,\r\n    name: string,\r\n    //@ts-ignore\r\n    player?: Howl,\r\n    description: string\r\n}\r\n\r\nexport class SoundTools {\r\n\r\n    static sounds: SoundType[] = [\r\n        {\r\n            url: \"assets/mp3/nearby_explosion_with_debris.mp3\",\r\n            name: \"nearby_explosion_with_debris\",\r\n            description: \"nahe Explosion mit herabfallenden Trümmern\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/nearby_explosion.mp3\",\r\n            name: \"nearby_explosion\",\r\n            description: \"nahe Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_bomb.mp3\",\r\n            name: \"far_bomb\",\r\n            description: \"fernes Geräusch einer Bombe\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/cannon_boom.mp3\",\r\n            name: \"cannon_boom\",\r\n            description: \"einzelner Kanonendonner\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_explosion.mp3\",\r\n            name: \"far_explosion\",\r\n            description: \"ferne Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/laser_shoot.mp3\",\r\n            name: \"laser_shoot\",\r\n            description: \"Laserschuss (oder was man dafür hält...)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_bell.mp3\",\r\n            name: \"short_bell\",\r\n            description: \"kurzes Klingeln (wie bei alter Landenkasse)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/flamethrower.mp3\",\r\n            name: \"flamethrower\",\r\n            description: \"Flammenwerfer\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/digging.mp3\",\r\n            name: \"digging\",\r\n            description: \"Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_digging.mp3\",\r\n            name: \"short_digging\",\r\n            description: \"kurzes Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/shoot.mp3\",\r\n            name: \"shoot\",\r\n            description: \"Schussgeräusch\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_shoot.mp3\",\r\n            name: \"short_shoot\",\r\n            description: \"ein kurzer Schuss\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/step.mp3\",\r\n            name: \"step\",\r\n            description: \"ein Schritt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/boulder.mp3\",\r\n            name: \"boulder\",\r\n            description: \"Geräusch eines Steins, der auf einen zweiten fällt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_d5.wav\",\r\n            name: \"pong_d\",\r\n            description: \"Tiefer Pong-Ton\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_f5.wav\",\r\n            name: \"pong_f\",\r\n            description: \"Hoher Pong-Ton\"\r\n        },\r\n    ]\r\n\r\n    static soundMap: Map<string, SoundType> = new Map();\r\n\r\n    public static init(){\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            //@ts-ignore\r\n            sound.player = new Howl({src: [sound.url], preload: true})\r\n            SoundTools.soundMap.set(sound.name, sound);\r\n        }\r\n\r\n    }\r\n\r\n    public static play(name: string){\r\n        let st: SoundType = SoundTools.soundMap.get(name);\r\n        if(st != null){\r\n            st.player.play();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n\r\n                /*\r\n                 * Event is bubbling down to body element\r\n                 * when pressing space bar in embedded mode while program runs.\r\n                 * This leads to scrolling page down. To prevent this:\r\n                 */\r\n                if(event.key == \" \" && that.main.isEmbedded() && \r\n                   that.main.getInterpreter().state == InterpreterState.running && !that.main.getMonacoEditor().hasTextFocus()){\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            button.on(mousePointer + 'down', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n                if(identifier == \"interpreter.start\" && this.main.isEmbedded()){\r\n                    SoundTools.init();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Variable } from \"../types/Types.js\";\r\nimport { Statement } from \"./Program.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Klass } from \"../types/Class.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype Label = {\r\n    number: number;\r\n}\r\n\r\nexport class ProgramPrinter {\r\n\r\n\r\n\r\n    private $pcodeTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>){\r\n        this.$pcodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n    }\r\n\r\n    showNode(node: Statement) {\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pCodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n        $pCodeTab.find('div').removeClass(\"jo_revealProgramPointer\");\r\n        let $div:JQuery<HTMLElement> = node[\"$div\"];\r\n        if($div != null){\r\n            $div.addClass(\"jo_revealProgramPointer\");\r\n            let pos = $div.position().top + this.$pcodeTab.scrollTop();\r\n            pos -= this.$pcodeTab.height()/2;\r\n            this.$pcodeTab.scrollTop(pos);\r\n\r\n            // $div[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\r\n        }\r\n    }\r\n\r\n    initGUI(){\r\n        this.$pcodeTab.on('myshow', () => {\r\n            this.main.printProgram();\r\n        });\r\n\r\n    }\r\n\r\n    printModuleToBottomDiv(workspace: Workspace, m: Module){\r\n\r\n        if(m == null) return;\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pcode = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n        $pcode.html(\"\");\r\n        $pcode.append(this.printModule(m));\r\n\r\n        if(workspace != null && workspace.compilerMessage != null){\r\n            $pcode.prepend(\"<div>\" + workspace.compilerMessage + \"</div>\");\r\n        }\r\n        \r\n\r\n        $pcode.find('.jo_label_destination').on(\"click\", (ev) => {\r\n            let dest = jQuery(ev.target).data('destination');\r\n            if(dest == null){\r\n                dest = jQuery(ev.target).parent().data('destination');\r\n            }\r\n            if(dest != null){\r\n                let $dest = this.$pcodeTab.find('.' + dest);\r\n                $dest[0].scrollIntoView();            \r\n            } \r\n                \r\n        });\r\n\r\n    }\r\n\r\n    printModule(m: Module): JQuery<HTMLElement>[] {\r\n\r\n        if (m == null) {\r\n            return [jQuery(\"<div></div>\")];\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n\r\n        if (m.mainProgram != null) {\r\n            s.push(jQuery(\"<h3>Main Program: </h3>\"));\r\n            s = s.concat(this.print(m.mainProgram.statements));\r\n        }\r\n\r\n        if (m.typeStore != null && m.typeStore.typeList != null) {\r\n\r\n            for (let c of m.typeStore.typeList) {\r\n                if (c instanceof Klass) {\r\n                    s.push(jQuery(\"<h2>Class \" + c.identifier + \":</h2>\"));\r\n\r\n                    if(c.attributeInitializationProgram.statements.length > 0){\r\n                        s.push(jQuery(\"<h3>Attribute-initialization:</h3>\"));\r\n                        s = s.concat(this.print(c.attributeInitializationProgram.statements));\r\n                }\r\n\r\n                    for (let m of c.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                    for (let m of c.staticClass.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Static Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    print(statements: Statement[], indent: string = \"\"): JQuery<HTMLElement>[] {\r\n\r\n        let labels: Map<number, Label> = new Map();\r\n        let lastLabelNumber: number = 0;\r\n\r\n        for(let statement of statements){\r\n            if(statement.type == TokenType.jumpAlways || statement.type == TokenType.jumpIfFalse || \r\n                statement.type == TokenType.jumpIfTrue || statement.type == TokenType.jumpIfFalseAndLeaveOnStack || \r\n                statement.type == TokenType.jumpIfTrueAndLeaveOnStack || statement.type ==TokenType.extendedForLoopCheckCounterAndGetElement ){\r\n                let dest = statement.destination;\r\n                let label = labels.get(dest);\r\n                if(label == null){\r\n                    labels.set(dest, {\r\n                        number: lastLabelNumber++\r\n                    });\r\n                }\r\n            }\r\n            if(statement.type == TokenType.keywordSwitch){\r\n                for(let value in statement.destinationMap){\r\n                    let dest = statement.destinationMap[value];\r\n                    let label = labels.get(dest);\r\n                    if(label == null){\r\n                        labels.set(dest, {\r\n                            number: lastLabelNumber++\r\n                        });\r\n                    }                        \r\n                }\r\n                if(statement.defaultDestination != null){\r\n                    let label = labels.get(statement.defaultDestination);\r\n                    if(label == null){\r\n                        labels.set(statement.defaultDestination, {\r\n                            number: lastLabelNumber++\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n        let i = 0;\r\n\r\n        for (let statement of statements) {\r\n            s.push(this.printNode(statement, indent, i, labels));\r\n            i++;\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    printNode(node: Statement, indent: string, n: number, labels: Map<number, Label>): JQuery<HTMLElement> {\r\n\r\n        let s = indent;\r\n\r\n        let label = labels.get(n);\r\n        if(label != null){\r\n            s += \"<span style='font-weight: bold' class='label\" + label.number + \"'>Label&nbsp;<span style='color: green'>\" + label.number + \":</span></span><br>\";\r\n        }\r\n\r\n        if (node.position != null) {\r\n            s += \"(l\" + this.format3(node.position.line) + \",&nbsp;c\" + this.format3(node.position.column) + \"): \";\r\n        } else {\r\n            s += \"(l&nbsp;xxx,&nbsp;c&nbsp;xxx):\";\r\n        }\r\n        // s += \"<span style='fontweight: bold; color: darkgreen'>[\" + n + \"]</span>&nbsp;\";\r\n        s += \"<span style='fontweight: bold; color: #8080ff'>\" + TokenType[node.type] + \"</span>&nbsp;\";\r\n\r\n        let s1: string = \"\";\r\n        switch (node.type) {\r\n            case TokenType.localVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                s1 += \"StackPos: \" + node.stackposOfVariable;\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                s1 += \"v: \" + node.identifier;    \r\n            break;\r\n            case TokenType.pushAttribute:\r\n                s1 += \"Attribut: \" + node.attributeIdentifier + \", use THIS-Object: \" + node.useThisObject\r\n                break;\r\n            case TokenType.assignment:\r\n            case TokenType.plusAssignment:\r\n            case TokenType.minusAssignment:\r\n            case TokenType.multiplicationAssignment:\r\n            case TokenType.divisionAssignment:\r\n                s1 += \"Assignmenttype: \" + TokenTypeReadable[node.type] + \"&nbsp;&nbsp;\";\r\n                if(node.type == TokenType.assignment){\r\n                    s1 += \", leaveValueOnStack: \" + node.leaveValueOnStack;\r\n                }\r\n                \r\n                break;\r\n            case TokenType.binaryOp:\r\n            case TokenType.unaryOp:\r\n                s1 += \"Operator: \" + TokenTypeReadable[node.operator];\r\n                break;\r\n            case TokenType.pushConstant:\r\n                s1 += \"Value: \" + node.value;\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                s1 += \"Static class: \" + node.klass.identifier;\r\n                break;\r\n            case TokenType.castValue:\r\n                s1 += \"New Type: \" + node.newType.identifier;\r\n                break;\r\n            case TokenType.selectArrayElement:\r\n                break;\r\n            case TokenType.callMethod:\r\n                s1 += node.method.identifier;\r\n                s1 += \", StackframeBegin: \" + node.stackframeBegin\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                s1 += \"count: \" + node.popCount;\r\n                break;\r\n            case TokenType.return:\r\n                s1 += \"copyReturnValueToStackframePos0: \" + node.copyReturnValueToStackframePos0;\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n            case TokenType.jumpAlways:\r\n            case TokenType.jumpIfFalse:\r\n            case TokenType.jumpIfTrue:\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                let number: number = labels.get(node.destination).number;\r\n                s1 += \"destination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                s1 += \"amount: \" + node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.beginArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                break;\r\n            case TokenType.addToArray:\r\n                s1 += \"count: \" + node.numberOfElementsToAdd;\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                s1 += \", dimension: \" + node.dimension;\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                s1 += \"destinationMap: {\";\r\n                for(let key in node.destinationMap){\r\n                    let number: number = labels.get(node.destinationMap[key]).number;\r\n                    s1 += key + \": <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\" + \", \";\r\n                }\r\n\r\n                if(s1.endsWith(\", \")) s1 = s1.substring(0, s1.length - 2);\r\n\r\n                s1 += \"}\";\r\n                if(node.defaultDestination != null){\r\n                    let number = labels.get(node.defaultDestination).number;\r\n                    s1 += \", defaultDestination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                if(node.klass != null)\r\n                s1 += \"class: \" + node.klass.identifier + \", attribute: \" + node.attributeIdentifier;\r\n                break;\r\n            case TokenType.newObject: \r\n                s1 += \"class: \" + node.class.identifier;\r\n                break;\r\n        }\r\n\r\n\r\n        if(s1 != \"\") s += ` [${s1}]`;\r\n\r\n        if (node.stepFinished == true) {\r\n            s += \"::\"\r\n        }\r\n\r\n        s = \"<div>\" + s + \"</div>\";\r\n\r\n        let $div = jQuery(s);\r\n\r\n        node[\"$div\"] = $div;\r\n\r\n        return $div;\r\n    }\r\n\r\n    printVariable(v: Variable): string {\r\n        return v.type.identifier + \" \" + v.identifier + (v.stackPos == null ? \"\" :\" (sp: \" + v.stackPos + \")\");\r\n    }\r\n\r\n    format3(n: number):string{\r\n        if(n >= 100) return \"\" + n;\r\n        if(n >= 10) return \"&nbsp;\" + n;\r\n        return \"&nbsp;&nbsp;\" + n;\r\n    }\r\n\r\n}","import { Value } from \"../../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ConsoleEntry {\r\n\r\n    caption: string|JQuery<HTMLElement>; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: ConsoleEntry;\r\n    children: ConsoleEntry[];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    identifier: string;\r\n    value: Value;\r\n\r\n    $consoleEntry: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string|JQuery<HTMLElement>, value: Value, identifier: string, parent: ConsoleEntry, \r\n        private withBottomBorder: boolean, private color: string = null ) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n\r\n        this.identifier = identifier;\r\n\r\n        this.render();\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        this.$consoleEntry = jQuery('<div>');\r\n        this.$consoleEntry.addClass(\"jo_consoleEntry\");\r\n        this.$consoleEntry.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n        if(this.color != null){\r\n            this.$consoleEntry.css('background-color', this.color);\r\n        }\r\n\r\n        if(this.withBottomBorder){\r\n            this.$consoleEntry.addClass('jo_withBorder');\r\n        }\r\n\r\n        let $deFirstLine = jQuery('<div class=\"jo_ceFirstline\"></div>');\r\n\r\n        this.$consoleEntry.append($deFirstLine);\r\n\r\n\r\n        if (this.value != null && this.value.type != null && (this.value.type instanceof ArrayType ||\r\n            (this.value.type instanceof Klass && !(this.value.type instanceof Enum) && !(this.value.type == stringPrimitiveType))\r\n            || this.value.type instanceof Interface\r\n            )) {\r\n            this.canOpen = true;\r\n            this.$consoleEntry.addClass('jo_canOpen');\r\n            this.$consoleEntry.append(jQuery('<div class=\"jo_ceChildContainer\"></div>'));\r\n\r\n            this.$consoleEntry.find('.jo_ceFirstline').on('mousedown', (event) => {\r\n                if (this.value != null && this.value.value != null) {\r\n                    if (this.children == null) {\r\n                        this.onFirstOpening();\r\n                    }\r\n                    this.$consoleEntry.toggleClass('jo_expanded');\r\n                    this.isOpen = !this.isOpen;\r\n                } else {\r\n                    this.children = null;\r\n                }\r\n\r\n                event.stopPropagation();\r\n\r\n            });\r\n\r\n        } else {\r\n            if(this.caption == null && this.getLevel() == 0){\r\n                this.$consoleEntry.addClass('jo_cannotOpen');\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        let type = this.value.type;\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                let ro = <RuntimeObject>this.value.value;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                this.$consoleEntry.find('.jo_ceChildContainer').append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new ConsoleEntry(null, a[i], \"[\" + i + \"]\", this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n\r\n            }\r\n\r\n        } else if (type instanceof StaticClass) {\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let a of type.getAttributes(Visibility.private)) {\r\n                let ro = type.classObject;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof Interface) {\r\n\r\n            if(this.value.value != null && this.value.value instanceof RuntimeObject){\r\n\r\n                let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                    de.render();\r\n                    $childContainer.append(de.$consoleEntry);\r\n                }\r\n\r\n            } else {\r\n                this.children == null;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n\r\n        let $firstLine = this.$consoleEntry.find('.jo_ceFirstline');\r\n\r\n        let v = this.value;\r\n        \r\n        if (v == null) {\r\n            if(this.caption != null){\r\n                if(typeof this.caption == \"string\" ){\r\n                    $firstLine.append(jQuery('<span class=\"jo_ceCaption\">' + this.caption + \"</span>\"));\r\n                } else {\r\n                    let span = jQuery('<span class=\"jo_ceCaption\"></span>');\r\n                    span.append(this.caption);\r\n                    $firstLine.append(span);\r\n                }\r\n            } else {\r\n                $firstLine.append(jQuery('<span class=\"jo_ceNoValue\">Kein Wert zurückgegeben.</span>'));\r\n            }\r\n            return;\r\n        }\r\n        \r\n        let valueString = \"\";\r\n        if (v.value == null) {\r\n            valueString = \"null\";\r\n        } else {\r\n            valueString = v.type.debugOutput(v, 400);\r\n        }\r\n        \r\n        if(this.identifier != null){\r\n            $firstLine.append(jQuery('<span class=\"jo_ceIdentifier\">' + this.identifier + \":&nbsp;</span>\"));\r\n        }\r\n        $firstLine.append(jQuery('<span class=\"jo_ceValue\">' + valueString + \"</span>\"));\r\n    }\r\n\r\n    detachValue() {\r\n        this.value = undefined;\r\n        this.$consoleEntry.removeClass('jo_canOpen');\r\n        if(this.getLevel() == 0 && this.caption == null){\r\n            this.$consoleEntry.addClass('jo_cannotOpen');\r\n        }\r\n    }\r\n\r\n}","import { AdhocCompiler } from \"../../../compiler/AdhocCompiler.js\";\r\nimport { Error } from \"../../../compiler/lexer/Lexer.js\";\r\nimport { Heap, Value } from \"../../../compiler/types/Types.js\";\r\nimport { InterpreterState, Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { ConsoleEntry } from \"./ConsoleEntry.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { TextPosition, TokenType } from \"../../../compiler/lexer/Token.js\";\r\nimport { Program } from \"../../../compiler/parser/Program.js\";\r\nimport { Helper } from \"../Helper.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport class MyConsole {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n    history: string[] = [];\r\n    historyPos: number = 0;\r\n\r\n    timerHandle: any;\r\n    isDirty: boolean = false;\r\n    readyToExecute: boolean = false;\r\n\r\n    compiler: AdhocCompiler;\r\n\r\n    consoleEntries: ConsoleEntry[] = [];\r\n\r\n    errorDecoration: string[] = [];\r\n    $consoleTabHeading: JQuery<HTMLElement>;\r\n    $consoleTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>){\r\n        if($bottomDiv == null) return; // Console is only used to highlight exceptions\r\n\r\n        this.$consoleTabHeading = $bottomDiv.find('.jo_tabheadings>.jo_console-tab');\r\n        this.$consoleTab = $bottomDiv.find('.jo_tabs>.jo_consoleTab');\r\n    }\r\n\r\n    initConsoleClearButton(){\r\n\r\n        let that = this;\r\n\r\n        let $consoleClear = this.$consoleTabHeading.parent().find('.jo_console-clear');\r\n\r\n        this.$consoleTab.on('myshow', () => {\r\n            $consoleClear.show();\r\n            that.editor.layout();\r\n        });\r\n\r\n        this.$consoleTab.on('myhide', () => {\r\n            $consoleClear.hide();\r\n        });\r\n\r\n        $consoleClear.on('mousedown', (e) => {\r\n            e.stopPropagation();\r\n            that.clear();\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        if(this.$bottomDiv == null) return;\r\n\r\n        this.initConsoleClearButton();\r\n\r\n        let $editorDiv = this.$consoleTab.find('.jo_commandline');\r\n\r\n        this.editor = monaco.editor.create($editorDiv[0], {\r\n            value: [\r\n                ''\r\n            ].join('\\n'),\r\n            automaticLayout: false,\r\n            renderLineHighlight: \"none\",\r\n            renderIndentGuides: false,\r\n            overviewRulerLanes: 0,\r\n            lineNumbers: 'off',\r\n            glyphMargin: false,\r\n            folding: false,\r\n            // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882\r\n            lineDecorationsWidth: 0,\r\n            lineNumbersMinChars: 0,\r\n            fixedOverflowWidgets: true,\r\n            language: 'myJava',\r\n\r\n            fontSize: 14,\r\n            fontFamily: \"Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            occurrencesHighlight: false,\r\n            suggest: { \r\n                localityBonus: true,\r\n                snippetsPreventQuickSuggestions: false\r\n            },\r\n            minimap: {\r\n                enabled: false\r\n            },\r\n            scrollbar: {\r\n                vertical: 'hidden',\r\n                horizontal: 'hidden'\r\n            },\r\n            theme: \"myCustomThemeDark\"\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.layout();\r\n        \r\n        let that = this;\r\n\r\n        this.editor.addCommand(monaco.KeyCode.Enter, () => {\r\n\r\n            that.compileIfDirty();\r\n\r\n            if (that.readyToExecute) {\r\n                let command = that.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n\r\n                if(command == \"\"){\r\n                    return;\r\n                }\r\n\r\n                that.history.push(command);\r\n                that.historyPos = 0;\r\n\r\n                that.execute();\r\n\r\n                that.editor.setValue(\"\");\r\n\r\n            } else {\r\n                // TODO: Fehlermeldung!\r\n            }\r\n\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.UpArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos + 1);\r\n            if (nextHistoryPos >= 0) {\r\n                that.historyPos++;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.DownArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos - 1);\r\n            if (nextHistoryPos <= that.history.length - 1) {\r\n                that.historyPos--;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            } else {\r\n                that.editor.setValue(\"\");\r\n                that.historyPos = 0;\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.compiler = new AdhocCompiler(this.main);\r\n\r\n        let model = this.editor.getModel();\r\n        let lastVersionId = 0;\r\n\r\n        model.onDidChangeContent(() => {\r\n            let versionId = model.getAlternativeVersionId();\r\n\r\n            if (versionId != lastVersionId) {\r\n                that.isDirty = true;\r\n                lastVersionId = versionId;\r\n            }\r\n        });\r\n\r\n        this.startTimer();\r\n\r\n        this.$consoleTabHeading.on(\"mousedown\", ()=>{\r\n            Helper.showHelper(\"consoleHelper\", this.main);\r\n\r\n            setTimeout(() => {\r\n                that.editor.focus();\r\n            }, 500);\r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        this.stopTimer();\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n            this.timerHandle = null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.isDirty) {\r\n\r\n            let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n            let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n            let symbolTable = this.main.getDebugger().lastSymboltable;\r\n            let heap = this.main.getInterpreter().heap;\r\n\r\n            if (command.length > 0 && moduleStore != null) {\r\n\r\n                let compilation = this.compiler.compile(command, moduleStore, heap, symbolTable);\r\n\r\n                this.readyToExecute = compilation.errors.length == 0;\r\n\r\n                this.showErrors(compilation.errors);\r\n\r\n                this.isDirty = false;\r\n\r\n            } else {\r\n                this.showErrors([]);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    showErrors(errors: Error[]) {\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n\r\n        for (let error of errors) {\r\n            markers.push({\r\n                startLineNumber: error.position.line,\r\n                startColumn: error.position.column,\r\n                endLineNumber: error.position.line,\r\n                endColumn: error.position.column + error.position.length,\r\n                message: error.text,\r\n                severity: monaco.MarkerSeverity.Error\r\n            });\r\n\r\n        }\r\n\r\n        monaco.editor.setModelMarkers(this.editor.getModel(), 'Fehler', markers);\r\n\r\n    }\r\n\r\n    execute() {\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n        let module = this.compiler.module;\r\n        let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n        let program = module.mainProgram;\r\n\r\n        monaco.editor.colorize(command, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            // if(this.programHasMethodCalls(program)){\r\n                // this.executeInStepMode(interpreter, program, command);\r\n            // } else {\r\n                this.executeRapidly(interpreter, program, command);\r\n                interpreter.showProgramPointerAndVariables();\r\n            // }\r\n\r\n        });\r\n\r\n    }\r\n    programHasMethodCalls(program: Program): boolean {\r\n        \r\n        for(let statement of program.statements){\r\n            if(statement.type == TokenType.callMethod && statement.method.invoke == null){\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n\r\n    }\r\n\r\n    executeInStepMode(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        interpreter.pushCurrentProgram();\r\n\r\n        interpreter.currentProgram = program;\r\n        interpreter.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = interpreter.stack.length;\r\n        let oldInterpreterState = interpreter.state;\r\n\r\n        interpreter.setState(InterpreterState.paused);\r\n\r\n        interpreter.start(() => {\r\n\r\n            let stackTop: Value;\r\n            if (interpreter.stack.length > stacksizeBefore) {\r\n                stackTop = interpreter.stack.pop();\r\n\r\n                while (interpreter.stack.length > stacksizeBefore) {\r\n                    interpreter.stack.pop();\r\n                }\r\n\r\n            }\r\n\r\n            this.writeConsoleEntry(command, stackTop);\r\n\r\n            interpreter.setState(oldInterpreterState);\r\n            if (oldInterpreterState == InterpreterState.paused) {\r\n                interpreter.showProgramPointerAndVariables();\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    executeRapidly(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        let result = interpreter.evaluate(program);\r\n\r\n        if(result.error == null){\r\n            \r\n            this.writeConsoleEntry(command, result.value);\r\n\r\n        } else {\r\n\r\n            let $entry = jQuery('<div><div>' + command + '</div></div>');\r\n            $entry.append(jQuery('<div class=\"jo_console-error\"> ' + result.error + '</div>'));\r\n\r\n            this.writeConsoleEntry($entry, null)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showTab(){\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        this.$consoleTabHeading.trigger(mousePointer + \"down\");\r\n    }\r\n\r\n    writeConsoleEntry(command: string|JQuery<HTMLElement>, stackTop: Value, color: string = null) {\r\n\r\n        if(this.$consoleTab == null){\r\n            return;\r\n        }\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n\r\n        let commandEntry = new ConsoleEntry(command, null, null, null, stackTop == null, color);\r\n        this.consoleEntries.push(commandEntry);\r\n        consoleTop.append(commandEntry.$consoleEntry);\r\n\r\n        if(stackTop != null){\r\n            let resultEntry = new ConsoleEntry(null, stackTop, null, null, true, color);\r\n            this.consoleEntries.push(resultEntry);\r\n            consoleTop.append(resultEntry.$consoleEntry);\r\n        }\r\n\r\n        var height = consoleTop[0].scrollHeight;\r\n        consoleTop.scrollTop(height);\r\n\r\n    }\r\n\r\n    clear() {\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        consoleTop.children().remove(); // empty();\r\n        this.consoleEntries = [];\r\n    }\r\n\r\n    detachValues() {\r\n        for(let ce of this.consoleEntries){\r\n            ce.detachValue();\r\n        }\r\n    }\r\n\r\n    showError(m: Module, position: TextPosition) {\r\n\r\n        if(this.main instanceof Main){\r\n            if (m?.file?.name != this.main.projectExplorer.getCurrentlyEditedModule()?.file?.name) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealError' }\r\n\r\n            },\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealErrorWholeLine', isWholeLine: true }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n    clearErrors(){\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n        ]);\r\n    }\r\n\r\n    clearExceptions(){\r\n        if(this.$bottomDiv == null) return;\r\n        let $consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        $consoleTop.find('.jo_exception').parents('.jo_consoleEntry').remove();\r\n    }\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\")\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton);\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('jo_active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace, true);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MyConsole } from \"./console/MyConsole.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    programPrinter: ProgramPrinter;\r\n    console: MyConsole;\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n        if (this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab').length > 0) {\r\n            this.programPrinter = new ProgramPrinter(main, $bottomDiv);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_console-tab').length > 0) {\r\n            this.console = new MyConsole(main, $bottomDiv);\r\n        } else {\r\n            this.console = new MyConsole(main, null);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.programPrinter != null) this.programPrinter.initGUI();\r\n        if (this.console != null) this.console.initGUI();\r\n        if(this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n        let that = this;\r\n        jQuery(\".jo_pcodeTab\").on(\"myshow\", () => {\r\n            that.printCurrentlyExecutedModule();\r\n        });\r\n\r\n    }\r\n\r\n    printCurrentlyExecutedModule() {\r\n        let interpreter = this.main.getInterpreter();\r\n        if (interpreter.state == InterpreterState.running || interpreter.state == InterpreterState.paused) {\r\n            let module = interpreter.currentProgram?.module;\r\n            this.printModuleToBottomDiv(null, module);\r\n        }\r\n    }\r\n\r\n    printModuleToBottomDiv(currentWorkspace: Workspace, module: Module) {\r\n        if (this.programPrinter != null) this.programPrinter.printModuleToBottomDiv(currentWorkspace, module);\r\n    }\r\n\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_homeworkTabheading').trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_tabheadings').children().first().trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, getVisibilityUpTo, Interface, Visibility, StaticClass } from \"../../compiler/types/Class.js\";\r\nimport { SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' '];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n            if (this.first) {\r\n                sw.toggleDetails();\r\n                this.first = false;\r\n            }\r\n            // sw.toggleSuggestionDetails();\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.toggleSuggestionDetails', {});\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.triggerSuggest', {});\r\n            // this.main.monaco.trigger(monaco.KeyMod.CtrlCmd + monaco.KeyCode.Space, 'type', {});\r\n        }, 300);\r\n\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        this.isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(this.isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = this.isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        if (context.triggerCharacter == \" \") {\r\n            let newMatch = textUntilPosition.match(/.*(new )$/);\r\n            if (newMatch != null) {\r\n                return this.getCompletionItemsAfterNew(module);\r\n            }\r\n            let classMatch = textUntilPosition.match(/.*(class )[\\wöäüÖÄÜß<> ,]*[\\wöäüÖÄÜß<> ] $/);\r\n            if (classMatch != null) {\r\n\r\n                let classIndex = textUntilPosition.lastIndexOf('class');\r\n                let countLower = 0;\r\n                let countGreater = 0;\r\n                for (let i = classIndex; i < textUntilPosition.length; i++) {\r\n                    let c = textUntilPosition.charAt(i);\r\n                    switch (c) {\r\n                        case '<': countLower++; break;\r\n                        case '>': countGreater++; break;\r\n                    }\r\n                }\r\n\r\n                return this.getCompletionItemsAfterClass(module, countLower > countGreater, textAfterPosition);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*\\(?)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        let leftBracketAlreadyThere = identifierAndBracketAfterCursor.endsWith(\"(\");\r\n\r\n        // First guess:  dot followed by part of Identifier?\r\n        let dotMatch = textUntilPosition.match(/.*(\\.)([\\wöäüÖÄÜß]*)$/);\r\n        if (dotMatch != null) {\r\n            if (this.isConsole) {\r\n                this.main.getBottomDiv()?.console?.compileIfDirty();\r\n            } else {\r\n                this.main.compileIfDirty();\r\n            }\r\n        }\r\n\r\n        let symbolTable = this.isConsole ? this.main.getDebugger().lastSymboltable : module.findSymbolTableAtPosition(position.lineNumber, position.column);\r\n        let classContext = symbolTable == null ? null : symbolTable.classContext;\r\n\r\n\r\n        if (dotMatch != null) {\r\n            return this.getCompletionItemsAfterDot(dotMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere);\r\n        }\r\n\r\n        let varOrClassMatch = textUntilPosition.match(/.*[^\\wöäüÖÄÜß]([\\wöäüÖÄÜß]*)$/);\r\n\r\n        if (varOrClassMatch == null) {\r\n            varOrClassMatch = textUntilPosition.match(/^([\\wöäüÖÄÜß]*)$/);\r\n        }\r\n\r\n        if (varOrClassMatch != null) {\r\n\r\n            return this.getCompletionItemsInsideIdentifier(varOrClassMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere, symbolTable);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getCompletionItemsAfterNew(module: Module): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        for (let i = 0; i < completionItems.length; i++) {\r\n            let item = completionItems[i];\r\n            if (item.detail.match('Primitiv')) {\r\n                completionItems.splice(i, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n            if (item[\"generic\"]) {\r\n                item.insertText += \"<>($0)\";\r\n            } else {\r\n                item.insertText += \"($0)\";\r\n            }\r\n            item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n            item.command = {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            };\r\n\r\n        }\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterClass(module: Module, insideGenericParameterDefinition: boolean, textAfterPosition: string): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let startsWithCurlyBrace: boolean = textAfterPosition.trimLeft().startsWith(\"{\");\r\n\r\n        completionItems = completionItems.concat([\r\n            {\r\n                label: \"extends\",\r\n                insertText: \"extends $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"extends-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"implements\",\r\n                insertText: \"implements $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"implements-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"{}\",\r\n                insertText: \"{\\n\\t$0\\n}\",\r\n                detail: \"Klassenrumpf\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            },\r\n        ]);\r\n\r\n        // completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsInsideIdentifier(varOrClassMatch: RegExpMatchArray, position: monaco.Position, module: Module, identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean, symbolTable: SymbolTable): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let text = varOrClassMatch[1];\r\n\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - text.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        if (symbolTable?.classContext != null && symbolTable?.method == null && symbolTable.classContext instanceof Klass) {\r\n            completionItems = completionItems.concat(this.getOverridableMethodsCompletion(symbolTable.classContext));\r\n        }\r\n\r\n        if (symbolTable != null) {\r\n            completionItems = completionItems.concat(symbolTable.getLocalVariableCompletionItems(rangeToReplace).map(ci => {\r\n                ci.sortText = \"aaa\" + ci.label;\r\n                return ci;\r\n            }));\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, rangeToReplace));\r\n\r\n        if (classContext != null && symbolTable?.method != null) {\r\n            completionItems = completionItems.concat(\r\n                classContext.getCompletionItems(Visibility.private, leftBracketAlreadyThere, identifierAndBracketAfterCursor, rangeToReplace, symbolTable.method)\r\n                    .map(ci => {\r\n                        ci.sortText = \"aa\" + ci.label;\r\n                        return ci;\r\n                    })\r\n            );\r\n            completionItems.push(\r\n                {\r\n                    label: \"super\",\r\n                    filterText: \"super\",\r\n                    insertText: \"super.\",\r\n                    detail: \"Aufruf einer Methode einer Basisklasse\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined,\r\n                    command: {\r\n                        id: \"editor.action.triggerSuggest\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    }    \r\n                }\r\n            )\r\n        } else {\r\n            // Use filename to generate completion-item for class ... ?\r\n            let name = module.file?.name;\r\n            if (name != null) {\r\n                if (name.endsWith(\".java\")) name = name.substr(0, name.indexOf(\".java\"));\r\n                let m = name.match(/([\\wöäüÖÄÜß]*)$/);\r\n                if (module.classDefinitionsAST.length == 0 && m != null && m.length > 0 && m[0] == name && name.length > 0) {\r\n                    name = name.charAt(0).toUpperCase() + name.substring(1);\r\n                    completionItems.push({\r\n                        label: \"class \" + name,\r\n                        filterText: \"class\",\r\n                        insertText: \"class ${1:\" + name + \"} {\\n\\t$0\\n}\\n\",\r\n                        detail: \"Definition der Klasse \" + name,\r\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                        kind: monaco.languages.CompletionItemKind.Snippet,\r\n                        range: undefined\r\n                    },\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.getKeywordCompletion(symbolTable));\r\n\r\n\r\n        // console.log(\"Complete variable/Class/Keyword \" + text);\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterDot(dotMatch: RegExpMatchArray, position: monaco.Position, module: Module,\r\n        identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let textAfterDot = dotMatch[2];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let tStatic = module.getTypeAtPosition(position.lineNumber, dotColumn);\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        if (tStatic == null) return null;\r\n\r\n        let { type, isStatic } = tStatic;\r\n\r\n\r\n        // console.log(\"Complete element.praefix; praefix: \" + textAfterDot + \", Type: \" + (type == null ? null : type.identifier));\r\n\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(type, classContext);\r\n\r\n            if (isStatic) {\r\n                return Promise.resolve({\r\n                    suggestions: type.staticClass.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace)\r\n                });\r\n            } else {\r\n                return Promise.resolve({\r\n                    suggestions: type.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace, null)\r\n                });\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n            return Promise.resolve({\r\n                suggestions: type.getCompletionItems(leftBracketAlreadyThere,\r\n                    identifierAndBracketAfterCursor, rangeToReplace)\r\n            });\r\n        }\r\n\r\n        if (type instanceof ArrayType) {\r\n            return Promise.resolve({\r\n                suggestions: [\r\n                    {\r\n                        label: \"length\",\r\n                        filterText: \"length\",\r\n                        kind: monaco.languages.CompletionItemKind.Field,\r\n                        insertText: \"length\",\r\n                        range: rangeToReplace,\r\n                        documentation: {\r\n                            value: \"Anzahl der Elemente des Arrays\"\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getKeywordCompletion(symbolTable: SymbolTable): monaco.languages.CompletionItem[] {\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n        if (!this.isConsole && (symbolTable?.classContext == null || symbolTable?.method != null))\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"while(Bedingung){Anweisungen}\",\r\n                    detail: \"while-Wiederholung\",\r\n                    filterText: 'while',\r\n                    // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                    insertText: \"while($1){\\n\\t$0\\n}\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for( $1 ; $2 ; $3 ){\\n\\t$0\\n}\",\r\n                    detail: \"for-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(int i = 0; i < 10; i++){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for(int ${1:i} = 0; ${1:i} < ${2:10}; ${1:i}++){\\n\\t$0\\n}\",\r\n                    detail: \"Zähl-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"switch(){case...}\",\r\n                    // insertText: \"switch(${1:Selektor}){\\n\\tcase ${2:Wert_1}: {\\n\\t\\t ${3:Anweisungen}\\n\\t\\t}\\n\\tcase ${4:Wert_2}: {\\n\\t\\t ${0:Anweisungen}\\n\\t\\t}\\n}\",\r\n                    insertText: \"switch($1){\\n\\tcase $2:\\n\\t\\t $3\\n\\t\\tbreak;\\n\\tcase $4:\\n\\t\\t $5\\n\\t\\tbreak;\\n\\tdefault:\\n\\t\\t $0\\n}\",\r\n                    detail: \"switch-Anweisung\",\r\n                    filterText: 'switch',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){}\",\r\n                    // insertText: \"if(${1:Bedingung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"if($1){\\n\\t$0\\n}\",\r\n                    detail: \"Bedingung\",\r\n                    filterText: 'if',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){} else {}\",\r\n                    insertText: \"if($1){\\n\\t$2\\n}\\nelse {\\n\\t$0\\n}\",\r\n                    detail: \"Zweiseitige Bedingung\",\r\n                    filterText: 'if',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }]);\r\n\r\n        if (symbolTable?.classContext == null || symbolTable?.method != null) {\r\n\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"instanceof\",\r\n                    insertText: \"instanceof $0\",\r\n                    detail: \"instanceof-Operator\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"print\",\r\n                    insertText: \"print($1);$0\",\r\n                    detail: \"Ausgabe (ggf. mit Farbe \\nals zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"println\",\r\n                    insertText: \"println($1);$0\",\r\n                    detail: \"Ausgabe mit Zeilenumbruch (ggf. mit \\nFarbe als zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n\r\n            ]);\r\n        }\r\n\r\n        if (!this.isConsole && (symbolTable == null || symbolTable.classContext == null)) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"class\",\r\n                    filterText: \"class\",\r\n                    insertText: \"class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public class\",\r\n                    filterText: \"public class\",\r\n                    insertText: \"public class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Öffentliche Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n\r\n            ]);\r\n        } else if (!this.isConsole && symbolTable?.method == null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"public\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public \",\r\n                    detail: \"Schlüsselwort public\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public void method(){}\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public ${1:void} ${2:Bezeichner}(${3:Parameter}) {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Methodendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"protected\",\r\n                    filterText: \"protected\",\r\n                    insertText: \"protected \",\r\n                    detail: \"Schlüsselwort protected\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"static\",\r\n                    filterText: \"static\",\r\n                    insertText: \"static \",\r\n                    detail: \"Schlüsselwort static\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"private\",\r\n                    filterText: \"private\",\r\n                    insertText: \"private \",\r\n                    detail: \"Schlüsselwort private\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        if (symbolTable != null && symbolTable.method != null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"return\",\r\n                    filterText: \"return\",\r\n                    insertText: \"return\",\r\n                    detail: \"Schlüsselwort return\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n    getOverridableMethodsCompletion(classContext: Klass) {\r\n\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let methods: Method[] = [];\r\n        let c = classContext.baseClass;\r\n        while (c != null) {\r\n            methods = methods.concat(c.methods.filter((m) => {\r\n                if (m.isAbstract || (m.program == null && m.invoke == null)) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }));\r\n            c = c.baseClass;\r\n        }\r\n\r\n        for (let i of classContext.implements) {\r\n            methods = methods.concat(i.getMethods());\r\n        }\r\n\r\n        for (let m of methods) {\r\n\r\n            let alreadyImplemented = false;\r\n            for (let m1 of classContext.methods) {\r\n                if (m1.signature == m.signature) {\r\n                    alreadyImplemented = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (alreadyImplemented) continue;\r\n\r\n            let label: string = (m.isAbstract ? \"implement \" : \"override \") + m.getCompletionLabel();\r\n            let filterText = m.identifier;\r\n            let insertText = Visibility[m.visibility] + \" \" + (m.getReturnType() == null ? \"void\" : m.getReturnType().identifier) + \" \";\r\n            insertText += m.identifier + \"(\";\r\n            for (let i = 0; i < m.getParameterList().parameters.length; i++) {\r\n                let p = m.getParameterList().parameters[i];\r\n                insertText += m.getParameterType(i).identifier + \" \" + p.identifier;\r\n                if (i < m.getParameterCount() - 1) {\r\n                    insertText += \", \";\r\n                }\r\n            }\r\n            insertText += \") {\\n\\t$0\\n}\";\r\n\r\n            keywordCompletionItems.push(\r\n                {\r\n                    label: label,\r\n                    detail: (m.isAbstract ? \"Implementiere \" : \"Überschreibe \") + \"die Methode \" + label + \" der Basisklasse.\",\r\n                    filterText: filterText,\r\n                    insertText: insertText,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            );\r\n\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n}","import { Klass, Interface, Visibility } from \"./Class.js\";\r\nimport { Method, Attribute, Type, PrimitiveType, Variable } from \"./Types.js\";\r\nimport { objectType } from \"./PrimitiveTypes.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { formatAsJavadocComment } from \"../../tools/StringTools.js\";\r\n\r\nexport function getDeclarationAsString(element: Klass | Interface | Method | Attribute | Variable,\r\n    indent: string = \"\", short: boolean = false): string {\r\n\r\n    if (element instanceof Klass) {\r\n\r\n        if (element.isTypeVariable) {\r\n            return getTypeVariableDeclaration(element);\r\n        }\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\") {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                // s += indent + \"/**  \\n\" + element.documentation + \"  \\n**/  \\n\" + indent;\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n        if (element.isAbstract) s += \"abstract \";\r\n        s += \"class \" + element.identifier + \" \";\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            s += getGenericParameterDefinition(element);\r\n        }\r\n\r\n\r\n        if (element.baseClass != null && element.baseClass.identifier != \"Object\") {\r\n            s += \"extends \" + element.baseClass.identifier + \" \";\r\n            if (element.baseClass.typeVariables.length > 0) {\r\n                s += getGenericParameterDefinition(element.baseClass);\r\n            }\r\n        }\r\n\r\n        if (element.implements != null && element.implements.length > 0) {\r\n            s += \"implements \";\r\n            for (let i = 0; i < element.implements.length; i++) {\r\n                s += element.implements[i].identifier;\r\n                if (element.implements[i].typeVariables.length > 0) {\r\n                    s += getGenericParameterDefinition(element.implements[i]);\r\n                }\r\n                if (i < element.implements.length - 1) {\r\n                    s += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (short) return s;\r\n\r\n        s += indent + \"{\\n  \";\r\n\r\n        for (let a of element.getAttributes(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let a of element.staticClass.getAttributes(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n        for (let m of element.getMethods(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let m of element.staticClass.getMethods(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n\r\n        s += \"\\n}\";\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    if (element instanceof Interface) {\r\n\r\n        let decl = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                decl += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                decl += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        decl += indent + \"interface \" + element.identifier;\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            decl += getGenericParameterDefinition(element);\r\n        }\r\n\r\n        if (element.extends != null && element.extends.length > 0) {\r\n            decl += \"extends \";\r\n            for (let i = 0; i < element.extends.length; i++) {\r\n                decl += element.extends[i].identifier;\r\n                if (element.extends[i].typeVariables.length > 0) {\r\n                    decl += getGenericParameterDefinition(element.extends[i]);\r\n                }\r\n                if (i < element.extends.length - 1) {\r\n                    decl += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!short) {\r\n\r\n            decl += \"{\\n\";\r\n\r\n            for (let m of element.methods) {\r\n                decl += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n\r\n            decl += \"\\n}\";\r\n        }\r\n\r\n        return decl;\r\n\r\n    }\r\n\r\n    if (element instanceof Attribute) {\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        s += getTypeIdentifier(element.type) + \" \" + element.identifier;\r\n\r\n        return s;\r\n    }\r\n\r\n    if (element instanceof Method) {\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        if (element.getReturnType() != null) {\r\n            s += getTypeIdentifier(element.getReturnType()) + \" \";\r\n        } else {\r\n            s += element.isConstructor ? \"\" : \"void \";\r\n        }\r\n\r\n        s += element.identifier + \"(\";\r\n\r\n        let parameters = element.getParameterList().parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            let type: Type = element.getParameterType(i);\r\n\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            s += getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n\r\n            if (i < parameters.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        s += \")\";\r\n\r\n        return s;\r\n\r\n\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nfunction getTypeVariableDeclaration(element: Klass) {\r\n    let s: string = element.identifier;\r\n\r\n    if (element.isGenericVariantFrom != objectType) s += \" extends \" + getTypeIdentifier(element.isGenericVariantFrom);\r\n    if (element.implements.length > 0) {\r\n        let implList = element.implements.filter(impl => element.isGenericVariantFrom.implements.indexOf(impl) < 0)\r\n            .map(impl => getTypeIdentifier(impl)).join(\", \");\r\n        if (implList != \"\") {\r\n            s += \" implements \" + implList;\r\n        }\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if (type instanceof Klass || type instanceof Interface) {\r\n        if (type.typeVariables.length > 0) {\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type.isGenericVariantFrom?.identifier) : type.identifier)\r\n                + \"<\";\r\n            s += type.typeVariables.map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n\r\nexport function getGenericParameterDefinition(element: Klass | Interface): string {\r\n\r\n    let s: string = \"\";\r\n\r\n    if (element.typeVariables.length > 0) {\r\n        s = \"<\";\r\n\r\n        let typeList: string[] = [];\r\n        for (let tv of element.typeVariables) {\r\n            let t: string = tv.type.identifier;\r\n            let k: Klass = tv.type;\r\n            if (k.isGenericVariantFrom != null && k.isGenericVariantFrom.identifier != \"Object\") {\r\n                t += \" extends \" + k.isGenericVariantFrom.identifier;\r\n            }\r\n            if (k.implements != null) {\r\n\r\n                let implList = k.implements;\r\n                if (k.isGenericVariantFrom != null) {\r\n                    implList = implList.filter(impl => k.isGenericVariantFrom.implements.indexOf(impl) < 0);\r\n                }\r\n\r\n                for (let im of implList) {\r\n                    t += \" & \" + im.identifier;\r\n                }\r\n            }\r\n            typeList.push(t);\r\n        }\r\n\r\n        s += typeList.join(\", \");\r\n        s += \"> \";\r\n    }\r\n\r\n    return s;\r\n}","import { Main } from \"../Main.js\";\r\nimport { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { sign } from \"crypto\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { getTypeIdentifier } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model == this.main.getBottomDiv()?.console?.editor?.getModel());\r\n\r\n        if (!isConsole && model != this.main.getMonacoEditor().getModel()) {\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                if (isConsole) {\r\n                    this.main.getBottomDiv()?.console?.compileIfDirty();\r\n                } else {\r\n                    this.main.compileIfDirty();\r\n                }\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        if ((typeof methodCallPosition.possibleMethods) == \"string\") {\r\n            signatureInformationList = signatureInformationList.concat(this.makeIntrinsicSignatureInformation(<string>methodCallPosition.possibleMethods, parameterIndex));\r\n        } else {\r\n            for (let method of methodCallPosition.possibleMethods) {\r\n                let m = <Method>method;\r\n                if (m.getParameterCount() > parameterIndex) {\r\n\r\n                    signatureInformationList = signatureInformationList.concat(this.makeSignatureInformation(m));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n    makeIntrinsicSignatureInformation(method: string, parameterIndex: number): monaco.languages.SignatureInformation[] {\r\n\r\n        switch (method) {\r\n            case \"while\":\r\n                return [\r\n                    {\r\n                        label: \"while(Bedingung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit Anfangsbedingung (while-loop)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                        ]\r\n                    }];\r\n            case \"if\":\r\n                return [\r\n                    {\r\n                        label: \"if(Bedingung){ Anweisungen1 } else { Anweisungen2 }\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Ist die Bedingung erfüllt (d.h. hat sie den Wert true), so werden die Anweisungen1 ausgeführt. Trifft die Bedingung nicht zu (d.h. hat sie den Wert false), so werden die Anweisungen2 ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"switch\":\r\n                return [\r\n                    {\r\n                        label: \"switch(Selektor){case Wert_1: Anweisungen1; break; case Wert_2 Anweisungen2; break; default: Defaultanweisungen; break;}\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Selektor\", documentation: \"Der Wert des Selektor-Terms wird ausgewertet. Hat er den Wert Wert_1, so werden die Anweisungen1 ausgeführt. Hat er den Wert Wert_2, so werden die Anweisungen2 ausgeführt usw. Hat er keinen der bei case... aufgeführten Werte, so werden die Defaultanweisungen ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"for\":\r\n                return [\r\n                    {\r\n                        label: \"for(Startanweisung; Bedingung; Anweisung am Ende jeder Wiederholung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit for (for-loop)\",\r\n                        parameters: [\r\n                            { label: \"Startanweisung\", documentation: \"Diese Anweisung wird vor der ersten Wiederholung einmal ausgeführt.\" },\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                            { label: \"Anweisung am Ende jeder Wiederholung\", documentation: \"Diese Anweisung wird stets am Ende jeder Wiederholung ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"print\":\r\n                let methods: monaco.languages.SignatureInformation[] =\r\n                    [\r\n                        {\r\n                            label: \"print(text: String, color: String)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255)) oder statisches Attribut der Klasse Color, z.B. Color.red\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String, color: int)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe als int-Wert kodiert, z.B. 0xff00ff\" },\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String)\",\r\n                            documentation: \"Gibt Text in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                            ]\r\n                        }\r\n                    ];\r\n                return methods;\r\n            case \"println\":\r\n\r\n                return [\r\n                    {\r\n                        label: \"println(text: String, color: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255) oder statisches Attribut der Klasse Color, z.B. Color.red)\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String, color: int)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: int\", documentation: \"Farbe als int-kodierter Wert, z.B. 0xffffff\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                        ]\r\n                    },\r\n                ];\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeSignatureInformation(method: Method): monaco.languages.SignatureInformation[] {\r\n\r\n        let label: string = \"\";\r\n\r\n        if (method.getReturnType() != null && !method.isConstructor) {\r\n            label += getTypeIdentifier(method.getReturnType()) + \" \";\r\n        }\r\n\r\n        label += method.identifier + \"(\";\r\n\r\n        let parameterInformationList: monaco.languages.ParameterInformation[] = [];\r\n\r\n        let pl = method.getParameterList().parameters;\r\n\r\n        for (let i = 0; i < pl.length; i++) {\r\n\r\n            let p = pl[i];\r\n            let posFrom = label.length;\r\n            let type = p.type;\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            let pLabel = getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n            label += pLabel;\r\n            let posTo = label.length;\r\n\r\n            if (i < pl.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n            let pi: monaco.languages.ParameterInformation = {\r\n                label: [posFrom, posTo],\r\n                documentation: \"\" //Test: Parameter documentation\"\r\n            };\r\n\r\n            parameterInformationList.push(pi);\r\n\r\n        }\r\n\r\n\r\n\r\n        label += \")\";\r\n\r\n        return [{\r\n            label: label,\r\n            parameters: parameterInformationList,\r\n            documentation: method.documentation == null ? \"\" : method.documentation\r\n        }]\r\n\r\n    }\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString, getGenericParameterDefinition } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"|\": \"```\\na | b\\n```  \\n (sprich: 'a or b') berechnet die **bitweise oder-Verknüpfung** der Werte a und b.\",\r\n        \"&\": \"```\\na & b\\n```  \\n (sprich: 'a und b') berechnet die **bitweise und-Verknüpfung** der Werte a und b.\",\r\n        \"^\": \"```\\na ^ b\\n```  \\n (sprich: 'a xor b') berechnet die **bitweise exklusiv-oder-Verknüpfung** der Werte a und b.\",\r\n        \">>\": \"```\\na >> b\\n```  \\n (sprich: 'a right shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach rechts verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a/(2 hoch b).\",\r\n        \"<<\": \"```\\na >> b\\n```  \\n (sprich: 'a left shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach links verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a*(2 hoch b).\",\r\n        \"~\": \"```\\n~a\\n```  \\n (sprich: 'nicht a') berechnet den Wert, der entsteht, wenn man **alle Bits von a umkehrt**.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwor ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null) {\r\n            if (element instanceof Klass || element instanceof Method || element instanceof Interface\r\n                || element instanceof Attribute) {\r\n                declarationAsString = getDeclarationAsString(element);\r\n            } else if (element instanceof PrimitiveType) {\r\n                declarationAsString = \"```\\n\" + element.identifier + \"\\n```  \\nprimitiver Datentyp: \" + element.description + \"\";\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: declarationAsString }],\r\n                }\r\n            } else {\r\n                // Variable\r\n                let typeIdentifier: string = element?.type?.identifier;\r\n                if(element?.type instanceof Klass || element?.type instanceof Interface){\r\n                    typeIdentifier += \" \" + getGenericParameterDefinition(element.type);\r\n                }\r\n\r\n                if (typeIdentifier == null) {\r\n                    typeIdentifier = \"\";\r\n                } else {\r\n                    typeIdentifier += \" \";\r\n                }\r\n\r\n                declarationAsString = typeIdentifier + element?.identifier;\r\n            }\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n        let state = this.editor.main.getInterpreter().state;\r\n\r\n        let value: string = null;\r\n\r\n        if (state == InterpreterState.paused) {\r\n            let evaluator = this.editor.main.getCurrentWorkspace().evaluator;\r\n\r\n            let identifier: string = this.widenDeclaration(model, position, element?.identifier);\r\n\r\n            if(identifier == null){\r\n                return null;\r\n            }\r\n\r\n            let result = evaluator.evaluate(identifier);\r\n            if (result.error == null && result.value != null) {\r\n                value = result.value.type.debugOutput(result.value);\r\n                declarationAsString = identifier;\r\n            }\r\n\r\n        }\r\n\r\n        let contents = [];\r\n\r\n        if (value == null && declarationAsString.length == 0) {\r\n            return null;\r\n        }\r\n\r\n        if (value != null) {\r\n            if (value.length + declarationAsString.length > 40) {\r\n                contents.push({ value: '```\\n' + declarationAsString + ' ==\\n```' });\r\n                contents.push({ value: '```\\n' + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            } else {\r\n                contents.push({ value: '```\\n' + declarationAsString + \" == \" + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            }\r\n        } else {\r\n            contents.push({ value: '```\\n' + declarationAsString + '\\n```' });\r\n        }\r\n\r\n        let range = null;\r\n\r\n        return {\r\n            range: range,\r\n            contents: contents,\r\n        }\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\n\r\nexport type HistoryEntry = {\r\n    module_id: number,\r\n    workspace_id: number,\r\n    position: monaco.Position;\r\n}\r\n\r\nexport class Editor implements monaco.languages.RenameProvider {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    highlightCurrentMethod: boolean = true;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    lastPosition: HistoryEntry;\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineMyJava();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'print', foreground: 'dcdcaa', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: 'b5cea8' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: '9cdcfe' },\r\n                { token: 'statement', foreground: 'bb96c0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '68bed4', fontStyle: 'bold' },\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightMethod\": \"#2b2b7d\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'print', foreground: '811f3f', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '001080' },\r\n                { token: 'statement', foreground: '8000e0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightMethod\": \"#babaec\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'myJava',\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.onKeyDown((e: monaco.IKeyboardEvent) => {\r\n            let state = this.main.getInterpreter().state;\r\n\r\n            if ([InterpreterState.done, InterpreterState.error, InterpreterState.not_initialized].indexOf(state) < 0) {\r\n\r\n                if (e.code.indexOf(\"Arrow\") >= 0 || e.code.indexOf(\"Page\") >= 0) return; // don't react to Cursor keys\r\n\r\n                this.main.getActionManager().trigger(\"interpreter.stop\");\r\n            }\r\n        });\r\n\r\n        // this.uri = monaco.Uri.from({ path: '/file1.java', scheme: 'file' })\r\n        // this.modelJava = monaco.editor.createModel(\"\", \"myJava\", this.uri);\r\n        // this.editor.setModel(this.modelJava);\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n        if (!this.isEmbedded) {\r\n\r\n            let _main: Main = <Main>this.main;\r\n\r\n            _main.windowStateManager.registerBackButtonListener((event: PopStateEvent) => {\r\n                let historyEntry: HistoryEntry = <HistoryEntry>event.state;\r\n                if(event.state == null) return;\r\n                let workspace: Workspace = _main.workspaceList.find((ws) => ws.id == historyEntry.workspace_id);\r\n                if(workspace == null) return;\r\n                let module: Module = workspace.moduleStore.findModuleById(historyEntry.module_id);\r\n                if(module == null) return; \r\n\r\n                // console.log(\"Processing pop state event, returning to module \" + historyEntry.module_id);\r\n\r\n                if(workspace != _main.currentWorkspace) \r\n                {\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setWorkspaceActive(workspace);\r\n                    that.dontPushNextCursorMove--;\r\n                }\r\n                if(module != _main.getCurrentlyEditedModule()){\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setModuleActive(module);\r\n                    that.dontPushNextCursorMove--;\r\n                } \r\n                that.dontPushNextCursorMove++;\r\n                that.editor.setPosition(historyEntry.position);\r\n                that.editor.revealPosition(historyEntry.position);\r\n                that.dontPushNextCursorMove--;\r\n                that.pushHistoryState(true, historyEntry);\r\n            });\r\n        }\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            let currentModelId = this.main.getCurrentlyEditedModule().file.id;\r\n            let pushNeeded = this.lastPosition == null\r\n                || event.source == \"api\"\r\n                || currentModelId != this.lastPosition.module_id\r\n                || Math.abs(this.lastPosition.position.lineNumber - event.position.lineNumber) > 20;\r\n            \r\n            if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                this.pushHistoryState(false, this.getPositionForHistory());\r\n            } else if(currentModelId == history.state?.module_id){\r\n\r\n                    this.pushHistoryState(true, this.getPositionForHistory());\r\n            }\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n            that.onEvaluateSelectedText(event);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                // if(!this.dontPushHistoryStateOnNextModelChange){\r\n                //     this.lastPosition = {\r\n                //         position: this.editor.getPosition(),\r\n                //         workspace_id: this.main.getCurrentWorkspace().id,\r\n                //         module_id: module.file.id\r\n                //     }\r\n                //     this.pushHistoryState(false);\r\n                // }\r\n                // this.dontPushHistoryStateOnNextModelChange = false;\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n\r\n                let pushNeeded = this.lastPosition == null\r\n                    || module.file.id != this.lastPosition.module_id;\r\n                \r\n                if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                    this.pushHistoryState(false, this.getPositionForHistory());\r\n                }    \r\n\r\n            }\r\n\r\n        });\r\n\r\n        monaco.languages.registerRenameProvider('myJava', this);\r\n\r\n        monaco.languages.registerDefinitionProvider('myJava', {\r\n            provideDefinition: (model, position, cancellationToken) => {\r\n                return that.provideDefinition(model, position, cancellationToken);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('myJava', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('myJava', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('myJava', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('myJava', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('myJava', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n    getPositionForHistory(): HistoryEntry {\r\n        return {\r\n            position: this.editor.getPosition(),\r\n            workspace_id: this.main.getCurrentWorkspace().id,\r\n            module_id: this.main.getCurrentlyEditedModule().file.id\r\n        }\r\n    }\r\n\r\n    lastPushTime: number = 0;\r\n    pushHistoryState(replace: boolean, historyEntry: HistoryEntry){\r\n        \r\n        if(this.main.isEmbedded()) return;\r\n\r\n        if(replace){\r\n            history.replaceState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${this.lastPosition.position.lineNumber}, Spalte ${this.lastPosition.position.column})`);\r\n            // console.log(\"Replace History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        } else {\r\n            let time = new Date().getTime();\r\n            if(time - this.lastPushTime > 200){\r\n                history.pushState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${historyEntry.position.lineNumber}, Spalte ${historyEntry.position.column})`);\r\n            } else {\r\n                history.replaceState(historyEntry, \"\");\r\n            }\r\n            this.lastPushTime = time;\r\n            // console.log(\"Pushed History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        }\r\n\r\n        this.lastPosition = historyEntry;\r\n    }\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if(!nextLine.trim().startsWith(\"*\")){\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n            let bottomDiv1 = this.main.getBottomDiv();\r\n            if (bottomDiv1 != null && bottomDiv1.console != null) {\r\n                bottomDiv1.console.editor.updateOptions({\r\n                    fontSize: fontSizePx / factor\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        let bottomDiv = this.main.getBottomDiv();\r\n        if (bottomDiv != null && bottomDiv.console != null) {\r\n            let $commandLine = bottomDiv.$bottomDiv.find('.jo_commandline');\r\n            $commandLine.css({\r\n                height: (fontSizePx * 1.1 + 4) + \"px\",\r\n                \"line-height\": (fontSizePx * 1.1 + 4) + \"px\"\r\n            })\r\n            bottomDiv.console.editor.layout();\r\n        }\r\n\r\n\r\n        // let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        // console.log({editorFS: editorfs, newFs: fontSizePx, newEditorFs: newEditorfs});\r\n\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        //console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onEvaluateSelectedText(event: monaco.editor.ICursorPositionChangedEvent) {\r\n\r\n        let that = this;\r\n\r\n        if (that.cw != null) {\r\n            that.editor.removeContentWidget(that.cw);\r\n            that.cw = null;\r\n        }\r\n\r\n        if (that.main.getInterpreter().state == InterpreterState.paused) {\r\n\r\n            let model = that.editor.getModel();\r\n            let text = model.getValueInRange(that.editor.getSelection());\r\n            if (text != null && text.length > 0) {\r\n                let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n                let result = evaluator.evaluate(text);\r\n                if (result.error == null && result.value != null) {\r\n                    let v = result.value.type.debugOutput(result.value);\r\n\r\n                    monaco.editor.colorize(text + \": \", 'myJava', { tabSize: 3 }).then((text) => {\r\n                        if (text.endsWith(\"<br/>\")) text = text.substr(0, text.length - 5);\r\n                        that.cw = {\r\n                            getId: function () {\r\n                                return 'my.content.widget';\r\n                            },\r\n                            getDomNode: function () {\r\n                                let dn = jQuery('<div class=\"jo_editorTooltip jo_codeFont\">' + text + v + '</div>');\r\n                                return dn[0];\r\n                            },\r\n                            getPosition: function () {\r\n                                return {\r\n                                    position: event.position,\r\n                                    preference: [monaco.editor.ContentWidgetPositionPreference.ABOVE, monaco.editor.ContentWidgetPositionPreference.BELOW]\r\n                                };\r\n                            }\r\n                        };\r\n                        that.editor.addContentWidget(that.cw);\r\n\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        module.toggleBreakpoint(lineNumber, true);\r\n\r\n        if (this.main.getInterpreter().moduleStore != null) {\r\n            let runningModule = this.main.getInterpreter().moduleStore.findModuleByFile(module.file);\r\n            if (runningModule != null) runningModule.toggleBreakpoint(lineNumber, false);\r\n        }\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (this.highlightCurrentMethod) {\r\n\r\n            let method = module.getMethodDeclarationAtPosition(position);\r\n            if (method != null) {\r\n                decorations.push({\r\n                    range: { startColumn: 0, startLineNumber: method.position.line, endColumn: 100, endLineNumber: method.scopeTo.line },\r\n                    options: {\r\n                        className: 'jo_highlightMethod', isWholeLine: true, overviewRuler: {\r\n                            color: { id: \"jo_highlightMethod\" },\r\n                            darkColor: { id: \"jo_highlightMethod\" },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: 'jo_highlightMethod' },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n    dontDetectLastChange() {\r\n        // this.dontDetectLastChanging = true;\r\n    }\r\n\r\n    provideRenameEdits(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        newName: string, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.WorkspaceEdit & monaco.languages.Rejection> {\r\n\r\n        let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n        if (currentlyEditedModule == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let resourceEdits: monaco.languages.WorkspaceTextEdit[] = [];\r\n\r\n        usagePositions.forEach((usagePositionsInModule, module) => {\r\n            if (usagePositionsInModule != null) {\r\n                let edits: monaco.languages.TextEdit[] = [];\r\n                for (let up of usagePositionsInModule) {\r\n                    resourceEdits.push(\r\n                        {\r\n                            resource: module.uri, edit:\r\n                            {\r\n                                range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length },\r\n                                text: newName\r\n                            }\r\n                        });\r\n                }\r\n                if (edits.length > 0) {\r\n                    module.file.dirty = true;\r\n                    module.file.saved = false;\r\n                    module.file.identical_to_repository_version = false;\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        console.log(resourceEdits);\r\n\r\n        return {\r\n            edits: resourceEdits\r\n        }\r\n\r\n    }\r\n\r\n    provideDefinition(model: monaco.editor.ITextModel, position: monaco.Position, cancellationToken: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Definition> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) return null;\r\n\r\n        let decl = element.declaration;\r\n\r\n        if (decl == null) {\r\n            // class from Base-Module? Let definition point to current position, so that ctrl + click opens peek references widget\r\n            if (element instanceof Klass || element instanceof Enum || element instanceof Interface || element instanceof Method || element instanceof Attribute) {\r\n                return Promise.resolve({\r\n                    range: {\r\n                        startLineNumber: position.lineNumber, endLineNumber: position.lineNumber,\r\n                        startColumn: position.column, endColumn: position.column + element.identifier.length\r\n                    },\r\n                    uri: module.uri\r\n                });\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            range: {\r\n                startLineNumber: decl.position.line, endLineNumber: decl.position.line,\r\n                startColumn: decl.position.column, endColumn: decl.position.column + decl.position.length\r\n            },\r\n            uri: decl.module.uri\r\n        });\r\n\r\n    }\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineMyJava() {\r\n    monaco.languages.register({ id: 'myJava', \r\n    extensions: ['.learnJava'],\r\n    //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        indentationRules: {\r\n            // ^(.*\\*/)?\\s*\\}.*$\r\n            decreaseIndentPattern: /^(.*\\*\\/)?\\s*\\}.*$/,\r\n            // ^.*\\{[^}\"']*$\r\n            increaseIndentPattern: /^.*\\{[^}\"']*$/\r\n        },\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                // beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                beforeText: /^(\\t|(\\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        // the default separators except `@$`\r\n        wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n        comments: {\r\n            lineComment: '//',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')'],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n            { open: '<', close: '>' },\r\n        ],\r\n        folding: {\r\n            markers: {\r\n                start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n                end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n            }\r\n        },\r\n\r\n    };\r\n    let language = {\r\n        defaultToken: '',\r\n        tokenPostfix: '.java',\r\n        keywords: [\r\n            'abstract', 'continue', 'new', 'switch', 'assert', 'default',\r\n            'goto', 'package', 'synchronized', 'private',\r\n            'this', 'implements', 'protected', 'throw',\r\n            'import', 'public', 'throws', 'case', 'instanceof', 'return',\r\n            'transient', 'catch', 'extends', 'try', 'final',\r\n            'static', 'finally', 'strictfp',\r\n            'volatile', 'const', 'native', 'super', 'true', 'false', 'null'\r\n        ],\r\n        print: ['print', 'println'],\r\n        statements: ['for', 'while', 'if', 'then', 'else', 'do', 'break', 'continue'],\r\n        types: ['int', 'boolean', 'char', 'float', 'double', 'long', 'void', 'byte', 'short',\r\n        'class', 'enum', 'interface'],\r\n        operators: [\r\n            '=', '>', '<', '!', '~', '?', ':',\r\n            '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n            '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n            '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n            '^=', '%=', '<<=', '>>=', '>>>='\r\n        ],\r\n        // we include these common regular expressions\r\n        symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        digits: /\\d+(_+\\d+)*/,\r\n        octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n        binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n        hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n        // The main tokenizer for our languages\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                // [/[a-zA-Z_$][\\w$]*/, {\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@print': { token: 'print.$0' },\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöüß][\\w$äöüßÄÖÜ]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*/, 'class'],\r\n                // whitespace\r\n                { include: '@whitespace' },\r\n                // delimiters and operators\r\n                [/[{}()\\[\\]]/, '@brackets'],\r\n                [/[<>](?!@symbols)/, '@brackets'],\r\n                [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n                // @ annotations.\r\n                [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n                // numbers\r\n                [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n                [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n                [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n                [/(@digits)[fFdD]/, 'number.float'],\r\n                [/(@digits)[lL]?/, 'number'],\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, 'delimiter'],\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n                [/\"/, 'string', '@string'],\r\n                // characters\r\n                [/'[^\\\\']'/, 'string'],\r\n                [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n                [/'/, 'string.invalid']\r\n            ],\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, ''],\r\n                [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\r\n                [/\\/\\*/, 'comment', '@comment'],\r\n                [/\\/\\/.*$/, 'comment'],\r\n            ],\r\n            comment: [\r\n                [/[^\\/*]+/, 'comment'],\r\n                // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n                // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n                [/\\*\\//, 'comment', '@pop'],\r\n                [/[\\/*]/, 'comment']\r\n            ],\r\n            //Identical copy of comment above, except for the addition of .doc\r\n            javadoc: [\r\n                [/[^\\/*]+/, 'comment.doc'],\r\n                // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\r\n                [/\\/\\*/, 'comment.doc.invalid'],\r\n                [/\\*\\//, 'comment.doc', '@pop'],\r\n                [/[\\/*]/, 'comment.doc']\r\n            ],\r\n            string: [\r\n                [/[^\\\\\"]+/, 'string'],\r\n                [/@escapes/, 'string.escape'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/\"/, 'string', '@pop']\r\n            ],\r\n        },\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('myJava', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('myJava', language);\r\n\r\n    // monaco.languages.registerCompletionItemProvider(\"myJava\", {    // Or any other language...\r\n    //     provideCompletionItems: (model, position) => {\r\n    //         // Retrieve the text until the current cursor's position, anything\r\n    //         // after that doesn't really matter.\r\n    //         var textToMatch = model.getValueInRange({\r\n    //             startLineNumber: 1,\r\n    //             startColumn: 1,\r\n    //             endLineNumber: position.lineNumber,\r\n    //             endColumn: position.column\r\n    //         });\r\n\r\n    //         // Return JSON array containing all completion suggestions.\r\n    //         return {\r\n    //             suggestions: [\r\n    //                 // Example: io.write ()\r\n    //                 {\r\n    //                     label: \"io.write (string)\",\r\n    //                     kind: monaco.languages.CompletionItemKind.Function,\r\n    //                     documentation: \"Writes a string to stdout.\",\r\n    //                     insertText: \"io.write (\\\"\\\")\",  // Escape JSON as needed.\r\n    //                     range: {\r\n    //                         startLineNumber: position.lineNumber,\r\n    //                         endLineNumber: position.lineNumber,\r\n    //                         startColumn: position.column,\r\n    //                         endColumn: position.column\r\n    //                     }\r\n    //                 },  // Other items.\r\n    //             ]\r\n    //         };\r\n    //     }\r\n    // });\r\n\r\n\r\n}","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport type CheckboxState = () => boolean;\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    subHeading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-subheading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    addCheckbox(description: string, ischecked: boolean, name: string): CheckboxState {\r\n        let cb: string = '<input type=\"checkbox\" name=\"' + name + '\"' + (ischecked ? ' checked' : '') + '>';\r\n        let $checkbox = jQuery(cb);\r\n        let $description = jQuery('<label for=\"' + name + '\">' + description + \"</label>\");\r\n        \r\n        let $div = jQuery('<div class=\"jo_checkbox_div\"></div>')\r\n        $div.append($checkbox, $description);\r\n\r\n        $description.on('click', () => {$checkbox.prop(\"checked\", !$checkbox.prop(\"checked\"))})\r\n\r\n        this.$dialogMain.append($div);\r\n        return () => {\r\n            return $checkbox.is(':checked');\r\n        }\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); }},\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Repository\", subMenu: {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Eigene Repositories verwalten ...\",\r\n                                action: () => {this.main.repositoryUpdateManager.show(null)}\r\n                            },\r\n                            {\r\n                                identifier: \"Workspace mit Repository verbinden (checkout) ...\",\r\n                                action: () => {this.main.repositoryCheckoutManager.show(null)}\r\n                            },\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Hilfe\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Kurze Video-Tutorials zur Bedienung dieser IDE\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:ide_manual:start\"\r\n                            },\r\n                            {\r\n                                identifier: \"Interaktives Java-Tutorial mit vielen Beispielen\",\r\n                                link: \"https://www.learnj.de/doku.php\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"API-Dokumentation\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                // link: \"api_documentation.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"API-Verzeichnis\",\r\n                                //link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                link: \"api_documentation.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Sprite-Bilderübersicht\",\r\n                                link: \"spriteLibrary.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Tastaturkommandos (Shortcuts)\",\r\n                                link: \"shortcuts.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Java-Online Changelog\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:changelog\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Roadmap\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:roadmap\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Befehlspalette\",\r\n                                action: () => {\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.quickCommand\").run();\r\n                                    }, 500);\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Passwort ändern...\",\r\n                                action: () => {\r\n                                    let passwortChanger = new PasswordChanger(that.main);\r\n                                    passwortChanger.show();\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Über die Online-IDE...\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:ueber\"\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n                // ,\r\n                // {\r\n                //     identifier: \"Bearbeiten\", subMenu:\r\n                //     {\r\n                //         items: [\r\n                //             { identifier: \"Undo\" },\r\n                //             { identifier: \"Redo\" },\r\n                //             { identifier: \"Kopieren\" },\r\n                //             { identifier: \"Formatieren\"}\r\n                //         ]\r\n                //     }\r\n                // },\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin || user.is_schooladmin || user.is_teacher)) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Schulen/Klassen/Benutzer ...\",\r\n                            link: \"administration_mc.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        if (user != null && (user.is_admin )) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Serverauslastung ...\",\r\n                            link: \"statistics.html\"\r\n                        },{\r\n                            identifier:\"Shutdown server...\",\r\n                            action: () => {\r\n                                if(confirm(\"Server wirklich herunterfahren?\")){\r\n                                    ajax(\"shutdown\", {}, () => {\r\n                                        alert('Server erfolgreich heruntergefahren.');\r\n                                    }, (message) => {\r\n                                        alert(message);\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n            )\r\n        }\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { convertPxToNumber } from \"../../tools/HtmlTools.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class SpeedControl {\r\n\r\n    position: number = 0;\r\n    xMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $bar: JQuery<HTMLElement>;\r\n    $display: JQuery<HTMLElement>;\r\n    $outer: JQuery<HTMLElement>;\r\n\r\n    gripWidth: number = 10;\r\n    overallWidth: number = 100;\r\n\r\n    interpreter: Interpreter\r\n\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n\r\n\r\n    constructor($container: JQuery<HTMLElement>){\r\n\r\n        this.$outer = jQuery('<div class=\"jo_speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\"></div>');\r\n        this.$bar = jQuery('<div class=\"jo_speedcontrol-bar\" draggable=\"false\"></div>');\r\n        this.$grip = jQuery('<div class=\"jo_speedcontrol-grip\" draggable=\"false\"></div>');\r\n        this.$display = jQuery('<div class=\"jo_speedcontrol-display\" draggable=\"false\">100 Schritte/s</div>');\r\n\r\n        this.$grip.append(this.$display);\r\n        this.$outer.append(this.$bar, this.$grip);\r\n\r\n        $container.append(this.$outer);\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n    }\r\n\r\n    initGUI(){\r\n        \r\n        let mousedownX: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallWidth = convertPxToNumber(this.$outer.css('width'));\r\n        that.gripWidth = convertPxToNumber(that.$grip.css('width'));\r\n        that.xMax = that.overallWidth - that.gripWidth;\r\n        \r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        \r\n        that.$outer.on(mousePointer + 'down', (e) => {\r\n            \r\n            \r\n\r\n            let x = e.pageX - that.$outer.offset().left - 4;\r\n            that.setSpeed(x);\r\n            that.$grip.css('left', x + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientX]);\r\n\r\n            // jQuery('#speedcontrol-display').show();\r\n            // jQuery(document).on('mouseup.speedcontrol1', () => {\r\n            //     jQuery(document).off('mouseup.speedcontrol1');\r\n            //     jQuery('#speedcontrol-display').hide();\r\n            // });\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, x) => {\r\n            if(x == null) x = e.clientX;\r\n            mousedownX = x;\r\n            oldPosition = that.position;\r\n            jQuery('.joe_controlPanel_top').css(\"z-index\", \"1000\");\r\n            that.$display.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.speedcontrol', (e)=>{\r\n                let deltaX = e.clientX - mousedownX;\r\n                that.setSpeed(oldPosition + deltaX);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.speedcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.speedcontrol');\r\n                jQuery(document).off(mousePointer + 'move.speedcontrol');\r\n                that.$display.hide();\r\n                jQuery('.joe_controlPanel_top').css(\"z-index\", \"0\");\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    setSpeedInStepsPerSecond(stepsPerSecond: number | \"max\"){\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        if(stepsPerSecond == \"max\") stepsPerSecond = this.interpreter.maxStepsPerSecond;\r\n        stepsPerSecond = Math.min(stepsPerSecond, this.interpreter.maxStepsPerSecond);\r\n        stepsPerSecond = Math.max(stepsPerSecond, 1);\r\n\r\n        for(let i = 0; i < intervalBorders.length - 1; i++){\r\n            let left = intervalBorders[i];\r\n            let right = intervalBorders[i+1];\r\n            if(stepsPerSecond >= left && stepsPerSecond <= right){\r\n                let gripIntervalLength = this.xMax/(intervalBorders.length - 1);\r\n                let gripPosition = Math.round(gripIntervalLength * i + gripIntervalLength * (stepsPerSecond - left)/(right - left));\r\n                this.$grip.css('left', gripPosition + 'px');\r\n                this.position = gripPosition;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setInterpreterSpeed(stepsPerSecond);\r\n\r\n    }\r\n\r\n    setSpeed(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.xMax){\r\n            newPosition = this.xMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('left', newPosition + \"px\");\r\n\r\n        // in steps/s\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        let intervalDelta = this.xMax / (intervalBorders.length - 1);\r\n        let intervalIndex = Math.floor(newPosition/intervalDelta);\r\n        if(intervalIndex == intervalBorders.length - 1) intervalIndex--;\r\n        let factorInsideInterval = (newPosition - intervalIndex*intervalDelta)/intervalDelta;\r\n\r\n        let intervalMin = intervalBorders[intervalIndex];\r\n        let intervalMax = intervalBorders[intervalIndex + 1];\r\n\r\n        let speed = intervalMin + (intervalMax - intervalMin) * factorInsideInterval;\r\n\r\n        this.setInterpreterSpeed(speed);\r\n        \r\n        // console.log( speed + ' steps/s entspricht ' + this.interpreter.timerDelayMs + ' ms zwischen Steps')\r\n\r\n    }\r\n    \r\n    setInterpreterSpeed(stepsPerSecond: number){\r\n        this.interpreter.stepsPerSecond = stepsPerSecond;\r\n\r\n        this.interpreter.hideProgrampointerPosition();\r\n\r\n        let speedString = \"\" + Math.ceil(stepsPerSecond);\r\n        if(stepsPerSecond >= this.interpreter.maxStepsPerSecond - 10){\r\n            speedString = \"Maximale Geschwindigkeit\";\r\n        }\r\n\r\n        this.$display.html(speedString + \" Schritte/s\");\r\n    }\r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpeedControl } from \"./SpeedControl.js\";\r\n\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    speedControl: SpeedControl;\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonPause: JQuery<HTMLElement>;\r\n    $buttonStop: JQuery<HTMLElement>;\r\n    $buttonStepOver: JQuery<HTMLElement>;\r\n    $buttonStepInto: JQuery<HTMLElement>;\r\n    $buttonStepOut: JQuery<HTMLElement>;\r\n    $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n    private interpreter: Interpreter;\r\n\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private $editorContainer: JQuery<HTMLElement>){\r\n\r\n        this.speedControl = new SpeedControl($buttonsContainer);\r\n        this.speedControl.initGUI();\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonPause, this.$buttonStop,\r\n            this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart);\r\n\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n        this.speedControl.setInterpreter(i);\r\n        this.speedControl.setSpeed(20);\r\n    }\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { window.history.back(); });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.close();\r\n        });\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        window.history.back();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Workspace } from \"src/client/workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { CheckboxState, Dialog } from \"./Dialog.js\";\r\n\r\n\r\ntype Library = {\r\n    identifier: string,\r\n    description: string,\r\n    checkboxState?: CheckboxState\r\n}\r\n\r\nexport class WorkspaceSettingsDialog{\r\n\r\n    libraries: Library[] = [\r\n        {identifier: \"gng\", description: \"Graphics'n Games-Bibliothek zu den Informatikbüchern des Cornelsen-Verlages für das Land Bayern\"}\r\n    ]\r\n\r\n    constructor(private workspace: Workspace, private main: Main){\r\n\r\n    }\r\n\r\n    open(){\r\n        let dialog = new Dialog();\r\n        dialog.init();\r\n        dialog.heading(\"Einstellungen zum Workspace \" + this.workspace.name);\r\n        dialog.subHeading(\"A. Verwendete Bibliotheken:\");\r\n\r\n        let currentLibraries = this.workspace.settings.libraries;\r\n\r\n        for(let library of this.libraries){\r\n            let cbs = dialog.addCheckbox(library.description, currentLibraries.indexOf(library.identifier) >= 0, library.identifier);\r\n            library.checkboxState = cbs;\r\n        }\r\n\r\n        dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    let changed: boolean = false;\r\n                    let newLibs: string[] = [];\r\n                    for(let lib of this.libraries){\r\n                        let used = lib.checkboxState();\r\n                        changed = changed || (used != (currentLibraries.indexOf(lib.identifier) >= 0));\r\n                        if(used) newLibs.push(lib.identifier);\r\n                    }\r\n\r\n                    if(changed){\r\n                        this.workspace.settings.libraries = newLibs;\r\n                        this.workspace.saved = false;\r\n                        this.workspace.alterAdditionalLibraries();\r\n                        this.main.networkManager.sendUpdates(null, true);\r\n                    }\r\n\r\n                    dialog.close();\r\n                }\r\n            },\r\n        ])\r\n \r\n\r\n    }\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { makeEditable, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { text } from \"express\";\r\nimport { WorkspaceData, Workspaces, ClassData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { WorkspaceSettingsDialog } from \"./WorkspaceSettingsDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n    $synchronizeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"3\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement,\r\n                    identical_to_repository_version: false\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n\r\n                    let module: Module = element.externalElement;\r\n\r\n                    let f: File = {\r\n                        name: module.file.name + \" - Kopie\",\r\n                        dirty: true,\r\n                        saved: false,\r\n                        text: module.file.text,\r\n                        text_before_revision: null,\r\n                        submitted_date: null,\r\n                        student_edited_after_revision: false,\r\n                        version: module.file.version,\r\n                        panelElement: null,\r\n                        identical_to_repository_version: false\r\n                    };\r\n\r\n                    let m = new Module(f, that.main);\r\n                    let workspace = that.main.currentWorkspace;\r\n                    let modulStore = workspace.moduleStore;\r\n                    modulStore.putModule(m);\r\n                    that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                        (error: string) => {\r\n                            if (error == null) {\r\n                                let element: AccordionElement = {\r\n                                    isFolder: false,\r\n                                    name: f.name,\r\n                                    path: [],\r\n                                    externalElement: m\r\n                                }\r\n                                f.panelElement = element;\r\n                                that.fileListPanel.addElement(element);\r\n                                that.fileListPanel.sortElements();\r\n                                that.setModuleActive(m);\r\n                                that.fileListPanel.renameElement(element);\r\n                            } else {\r\n                                alert('Der Server ist nicht erreichbar!');\r\n\r\n                            }\r\n                        });\r\n\r\n\r\n                }\r\n            });\r\n\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                if (file.submitted_date == null) {\r\n                    cmiList.push({\r\n                        caption: \"Als Hausaufgabe markieren\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = dateToString(new Date());\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n                        }\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Hausaufgabenmarkierung entfernen\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = null;\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n        this.$synchronizeAction = jQuery('<div class=\"img_open-change jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Workspace mit Repository synchronisieren\">');\r\n\r\n        \r\n\r\n        this.$synchronizeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            this.main.getCurrentWorkspace().synchronizeWithRepository();\r\n\r\n        })\r\n\r\n        this.fileListPanel.addAction(this.$synchronizeAction);\r\n        this.$synchronizeAction.hide();\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"WORKSPACES\", \"3\",\r\n            \"img_add-workspace-dark\", \"Neuer Workspace...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        this.workspaceListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                let owner_id: number = that.main.user.id;\r\n                if (that.main.workspacesOwnerId != null) {\r\n                    owner_id = that.main.workspacesOwnerId;\r\n                }\r\n\r\n                let w: Workspace = new Workspace(accordionElement.name, that.main, owner_id);\r\n                w.isFolder = false;\r\n                w.path = accordionElement.path.join(\"/\");\r\n                that.main.workspaceList.push(w);\r\n\r\n                that.main.networkManager.sendCreateWorkspace(w, that.main.workspacesOwnerId, (error: string) => {\r\n                    if (error == null) {\r\n                        that.fileListPanel.enableNewButton(true);\r\n                        successfulNetworkCommunicationCallback(w);\r\n                        that.setWorkspaceActive(w);\r\n                        w.renderSynchronizeButton(accordionElement);\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            };\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.enableNewButton(that.main.workspaceList.length > 0);\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if (!workspace.isFolder) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            that.main.networkManager.sendCreateWorkspace(folder, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    successCallback(folder);\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null,\r\n                identical_to_repository_version: false\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n        this.$homeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    this.main.networkManager.sendDuplicateWorkspace(element.externalElement,\r\n                        (error: string, workspaceData) => {\r\n                            if (error == null && workspaceData != null) {\r\n                                let newWorkspace: Workspace = Workspace.restoreFromData(workspaceData, this.main);\r\n                                this.main.workspaceList.push(newWorkspace);\r\n                                let path = workspaceData.path.split(\"/\");\r\n                                if (path.length == 1 && path[0] == \"\") path = [];\r\n                                newWorkspace.panelElement = {\r\n                                    name: newWorkspace.name,\r\n                                    externalElement: newWorkspace,\r\n                                    iconClass: newWorkspace.repository_id == null ? 'workspace' : 'repository',\r\n                                    isFolder: false,\r\n                                    path: path\r\n                                };\r\n\r\n                                this.workspaceListPanel.addElement(newWorkspace.panelElement);\r\n                                this.workspaceListPanel.sortElements();\r\n                            }\r\n                            if (error != null) {\r\n                                alert(error);\r\n                            }\r\n                        })\r\n                }\r\n            });\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            if (this.main.repositoryOn && this.main.workspacesOwnerId == this.main.user.id) {\r\n                if (workspaceAccordionElement.externalElement.repository_id == null) {\r\n                    cmiList.push({\r\n                        caption: \"Repository anlegen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n\r\n                            that.main.repositoryCreateManager.show(workspace);\r\n                        },\r\n                        subMenu: null,\r\n                        // [{ n: 0, text: \"nur privat sichtbar\" }, { n: 1, text: \"sichtbar für die Klasse\" },\r\n                        // { n: 2, text: \"sichtbar für die Schule\" }].map((k) => {\r\n                        //     return {\r\n                        //         caption: k.text,\r\n                        //         callback: (element: AccordionElement) => {\r\n\r\n\r\n                        // this.main.networkManager.sendCreateRepository(workspace, k.n, (error: string, repository_id?: number) => {\r\n                        //     if (error == null) {\r\n                        //         this.workspaceListPanel.setElementClass(element, \"repository\");\r\n                        //         workspace.renderSynchronizeButton();\r\n                        //         this.showRepositoryButtonIfNeeded(workspace);\r\n                        //     } else {\r\n                        //         alert(error);\r\n                        //     }\r\n                        // });\r\n\r\n                        //         }\r\n                        //     }\r\n                        // })\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Mit Repository synchronisieren\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.synchronizeWithRepository();\r\n                        }\r\n                    });\r\n                    cmiList.push({\r\n                        caption: \"Vom Repository loslösen\",\r\n                        color: \"#ff8080\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.repository_id = null;\r\n                            workspace.saved = false;\r\n                            this.main.networkManager.sendUpdates(() => {\r\n                                that.workspaceListPanel.setElementClass(element, \"workspace\");\r\n                                workspace.renderSynchronizeButton(element);\r\n                            }, true);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            cmiList.push({\r\n                caption: \"Einstellungen...\",\r\n                callback: (element: AccordionElement) => {\r\n                    let workspace: Workspace = element.externalElement;\r\n                    new WorkspaceSettingsDialog(workspace, this.main).open();\r\n                }\r\n            })\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: w.repository_id == null ? 'workspace' : 'repository',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement);\r\n\r\n            w.renderSynchronizeButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    showRepositoryButtonIfNeeded(w: Workspace) {\r\n        if (w.repository_id != null && w.owner_id == this.main.user.id) {\r\n            this.$synchronizeAction.show();\r\n\r\n            if (!this.main.user.settings.helperHistory.repositoryButtonDone) {\r\n\r\n                Helper.showHelper(\"repositoryButton\", this.main, this.$synchronizeAction);\r\n\r\n            }\r\n\r\n\r\n\r\n        } else {\r\n            this.$synchronizeAction.hide();\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace, scrollIntoView: boolean = false) {\r\n\r\n        this.workspaceListPanel.select(w, false, scrollIntoView);\r\n\r\n        if (this.main.interpreter.state == InterpreterState.running) {\r\n            this.main.interpreter.stop();\r\n        }\r\n\r\n        this.main.currentWorkspace = w;\r\n        this.renderFiles(w);\r\n\r\n        if (w != null) {\r\n            let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n            if (w.currentlyOpenModule != null) {\r\n                this.setModuleActive(w.currentlyOpenModule);\r\n            } else if (nonSystemModules.length > 0) {\r\n                this.setModuleActive(nonSystemModules[0]);\r\n            } else {\r\n                this.setModuleActive(null);\r\n            }\r\n\r\n            for (let m of nonSystemModules) {\r\n                m.file.dirty = true;\r\n            }\r\n\r\n            if (nonSystemModules.length == 0 && !this.main.user.settings.helperHistory.newFileHelperDone) {\r\n\r\n                Helper.showHelper(\"newFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n            }\r\n\r\n            this.showRepositoryButtonIfNeeded(w);\r\n\r\n        } else {\r\n            this.setModuleActive(null);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.getBreakpointPositionsFromEditor();\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        m.renderBreakpointDecorators();\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine WORKSPACES\";\r\n        } else {\r\n            caption = \"Schüler-WS\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { convertPxToNumber } from \"../../../tools/HtmlTools.js\";\r\n\r\nexport class ZoomControl {\r\n    \r\n    public static preventFading:boolean = false;\r\n\r\n    position: number = 0;\r\n    yMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $zoomcontrolDisplay: JQuery<HTMLElement>;\r\n\r\n    gripHeight: number = 10;\r\n    overallHeight: number = 150;\r\n\r\n    zoomMin: number = 0.2;\r\n    zoomMax: number = 2;\r\n\r\n\r\n    constructor($parentElement: JQuery<HTMLElement>, private callback?: (zoomfactor: number) => void){\r\n        let $zoomcontrolOuter = jQuery('<div class=\"jo_zoomcontrol-outer\" title=\"Zoom\" draggable=\"false\"></div>');\r\n        $parentElement.append($zoomcontrolOuter);\r\n        let $zoomcontrolBar = jQuery('<div class=\"jo_zoomcontrol-bar\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append($zoomcontrolBar);\r\n        this.$grip = jQuery('<div class=\"jo_zoomcontrol-grip\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append(this.$grip);\r\n        this.$zoomcontrolDisplay = jQuery('<div class=\"jo_zoomcontrol-display\"></div>');\r\n        this.$grip.append(this.$zoomcontrolDisplay);\r\n\r\n        let mousedownY: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallHeight = convertPxToNumber($zoomcontrolOuter.css('height'));\r\n        that.gripHeight = convertPxToNumber(that.$grip.css('height'));\r\n        that.yMax = that.overallHeight - that.gripHeight;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $zoomcontrolBar.on(mousePointer + 'down', (e) => {\r\n\r\n            let y = e.pageY - $zoomcontrolOuter.offset().top - 4;\r\n            that.setZoom(y);\r\n            that.$grip.css('top', y + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientY]);\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, y) => {\r\n            if(y == null) y = e.clientY;\r\n            mousedownY = y;\r\n            oldPosition = that.position;\r\n            this.$zoomcontrolDisplay.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.zoomcontrol', (e)=>{\r\n                let deltaY = e.clientY - mousedownY;\r\n                that.setZoom(oldPosition + deltaY);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.zoomcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.zoomcontrol');\r\n                jQuery(document).off(mousePointer + 'move.zoomcontrol');\r\n                this.$zoomcontrolDisplay.hide();\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n        $parentElement.on(mousePointer + \"enter\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeIn();\r\n        });\r\n        \r\n        $parentElement.on(mousePointer + \"leave\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeOut();\r\n        });\r\n\r\n        let factor = (1.0 - this.zoomMin)/(this.zoomMax - this.zoomMin);\r\n        this.position = factor*(this.overallHeight - this.gripHeight);\r\n        this.$grip.css('top', this.position + \"px\");\r\n    }\r\n\r\n    setZoom(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.yMax){\r\n            newPosition = this.yMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('top', newPosition + \"px\");\r\n\r\n        let zoomfactor = newPosition/(this.overallHeight - this.gripHeight);\r\n        zoomfactor = this.zoomMin + zoomfactor*(this.zoomMax - this.zoomMin);\r\n\r\n        let zfs = Math.round(zoomfactor * 100) + \" %\";\r\n        this.$zoomcontrolDisplay.html(zfs);\r\n\r\n        if(this.callback != null){\r\n            this.callback(zoomfactor);\r\n        }\r\n\r\n    }\r\n\r\n}","import { ZoomControl } from \"./ZoomControl.js\";\r\nimport { ClassBox } from \"./classdiagram/ClassBox.js\";\r\nimport { Rectangle, Point } from \"./classdiagram/Router.js\";\r\nimport { DiagramElement } from \"./DiagramElement.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport var DiagramUnitCm = 0.2; // in cm\r\n\r\nexport class Diagram {\r\n\r\n    zoomControl: ZoomControl;\r\n    zoomfactor: number = 1.0;\r\n\r\n    $canvas: JQuery<HTMLElement>;\r\n    svgElement: Element;\r\n\r\n    $menuButton: JQuery<HTMLElement>;\r\n\r\n    defs: Element;\r\n    style: Element;\r\n\r\n    inlineStyles: { [selector: string]: { [key: string]: string } } = {};\r\n    marginCm = 1.6;\r\n    minDistance = 2.0;\r\n    minWidthHeightCm = 10;\r\n    widthCm = this.minWidthHeightCm;\r\n    heightCm = this.minWidthHeightCm;\r\n\r\n    $centerRectangle: JQuery<SVGElement>;\r\n\r\n    constructor($htmlElement: JQuery<HTMLElement>, public main: MainBase){\r\n\r\n        this.$menuButton = jQuery('<div class=\"jo_classDiagram_Menubutton jo_button jo_active img_menu-three-bars\"></div>');\r\n        $htmlElement.append(this.$menuButton);\r\n\r\n        let $scrollpane = jQuery('<div></div>');\r\n        $htmlElement.append($scrollpane);\r\n        $scrollpane.addClass('jo_scrollable');\r\n        $scrollpane.css({overflow: \"auto\", position: \"relative\", width: \"100%\", height: \"100%\"});\r\n\r\n        this.$canvas = jQuery('<div class=\"jo_diagram-canvas\"></div>');\r\n        $scrollpane.append(this.$canvas);\r\n        this.zoomControl = new ZoomControl($htmlElement, (factor: number) => {\r\n            this.$canvas.css({\r\n                transform: \"scale(\" + factor + \")\"\r\n            });\r\n            this.zoomfactor = factor;\r\n        });\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        this.svgElement = document.createElementNS(ns, 'svg');\r\n        // jQuery(this.svgElement).css('pointer-events', 'none');\r\n        jQuery(this.svgElement).addClass(\"jo_diagram-svg svg_all_pointer_events\");\r\n\r\n        // this.insertStyleElement({\".svp_draggable\": {cursor: \"pointer\"}});\r\n\r\n        this.$canvas[0].appendChild(this.svgElement);\r\n\r\n        this.$centerRectangle = <any>jQuery(this.createElement(\"rect\", this.svgElement));\r\n\r\n        this.$centerRectangle.css({fill: \"#ffffff\", \"stroke\": \"none\"});\r\n\r\n        this.adjustCenterRectangle();\r\n\r\n        let $svgElement =  jQuery(this.svgElement);\r\n\r\n        let x: number;\r\n        let y: number;\r\n\r\n        $svgElement.on('mousedown', (ev1) => {\r\n            x = ev1.screenX;\r\n            y = ev1.screenY;\r\n            \r\n            jQuery(document).on('mousemove.diagram', (ev) => {\r\n                let dx = ev.screenX - x;\r\n                let dy = ev.screenY - y;\r\n                x = ev.screenX;\r\n                y = ev.screenY;\r\n                $scrollpane.scrollLeft($scrollpane.scrollLeft() - dx);\r\n                $scrollpane.scrollTop($scrollpane.scrollTop() - dy);\r\n            })\r\n\r\n            jQuery(document).on('mouseup.diagram', () => {\r\n                jQuery(document).off('mousemove.diagram');\r\n                jQuery(document).off('mouseup.diagram');\r\n            });\r\n\r\n\r\n        });\r\n\r\n\r\n    }    \r\n\r\n    adjustCenterRectangle(){\r\n        this.$centerRectangle.attr({\r\n            x: this.marginCm + \"cm\",\r\n            y: this.marginCm + \"cm\",\r\n            width: (this.widthCm - 2*this.marginCm) + \"cm\",    \r\n            height: (this.heightCm - 2*this.marginCm) + \"cm\"\r\n        });\r\n    }\r\n\r\n    setSize(widthCm: number, heightCm: number){\r\n        if(widthCm < this.minWidthHeightCm) widthCm = this.minWidthHeightCm;\r\n        if(heightCm < this.minWidthHeightCm) heightCm = this.minWidthHeightCm;\r\n\r\n        this.$canvas.css({\r\n            width: widthCm + \"cm\",\r\n            height: heightCm + \"cm\"\r\n        })\r\n\r\n        this.widthCm = widthCm;\r\n        this.heightCm = heightCm;\r\n\r\n        this.adjustCenterRectangle();\r\n    }\r\n\r\n    adjustSizeAndElements(diagramElements: DiagramElement[]): {isAdjusted: boolean}{\r\n\r\n        let xMin = 100000;\r\n        let yMin = 100000;\r\n        let xMax = -100000;\r\n        let yMax = -100000;\r\n\r\n        for(let rr of diagramElements){\r\n            if(xMin > rr.leftCm) xMin = rr.leftCm;\r\n            if(xMax < rr.leftCm + rr.widthCm) xMax = rr.leftCm + rr.widthCm;\r\n            if(yMin > rr.topCm) yMin = rr.topCm;\r\n            if(yMax < rr.topCm + rr.heightCm) yMax = rr.topCm + rr.heightCm;\r\n        }\r\n\r\n        xMin -= this.marginCm;\r\n        xMax += this.marginCm;\r\n        yMin -= this.marginCm;\r\n        yMax += this.marginCm;\r\n\r\n        let isAdjusted: boolean = false;\r\n        let newWidthCm = this.widthCm;\r\n        let newHeightCm = this.heightCm;\r\n\r\n        if(xMin < 0 || xMax > this.widthCm || (xMax - xMin <= this.widthCm && this.widthCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newWidthCm = Math.max(this.minWidthHeightCm, xMax - xMin);\r\n\r\n            if(xMin < 0){\r\n                delta = -xMin;\r\n            }\r\n\r\n            if(xMin > 0 && xMax > newWidthCm){\r\n                delta = newWidthCm - xMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(delta, 0, true, true);\r\n            }\r\n\r\n        }\r\n\r\n        if(yMin < 0 || yMax > this.heightCm || (yMax - yMin <= this.heightCm && this.heightCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newHeightCm = Math.max(this.minWidthHeightCm, yMax - yMin);\r\n\r\n            if(yMin < 0){\r\n                delta = -yMin;\r\n            }\r\n\r\n            if(yMin > 0 && yMax > newHeightCm){\r\n                delta = newHeightCm - yMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(0, delta, true, true);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        this.setSize(newWidthCm, newHeightCm);\r\n        \r\n\r\n        return {isAdjusted: isAdjusted};\r\n\r\n    }\r\n\r\n    public insertStyleElement(styles: { [selector: string]: { [key: string]: string } } = null) {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n\r\n        if (this.style == null) {\r\n            this.defs = document.createElementNS(ns, 'defs');\r\n            this.style = document.createElementNS(ns, 'style');\r\n            this.defs.appendChild(this.style);\r\n            this.svgElement.appendChild(this.defs);\r\n        }\r\n\r\n        if (styles != null) {\r\n            this.inlineStyles = styles;\r\n            this.refreshInlineStyles();\r\n        }\r\n\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    private refreshInlineStyles() {\r\n\r\n        let s: string = \"\";\r\n\r\n        for (let selector in this.inlineStyles) {\r\n            let stylesForSelector = this.inlineStyles[selector];\r\n            if (stylesForSelector != null) {\r\n                s += selector + \"{\\n\";\r\n                for (let key in stylesForSelector) {\r\n                    s += \"   \" + key + \":\" + stylesForSelector[key] + \";\\n\";\r\n                }\r\n                s += \"}\\n\";\r\n            } else {\r\n                s += selector + \"\\n\";\r\n            }\r\n        }\r\n\r\n        this.style.textContent = s;\r\n\r\n    }\r\n\r\n    findFreeSpace(elements: DiagramElement[], width: number, height: number, minDistance: number): Point {\r\n\r\n        let radius = 0;\r\n        let fertig: boolean = false;\r\n        let xCm = 0;\r\n        let yCm = 0;\r\n        while(!fertig){\r\n\r\n            let y = radius;\r\n            let x = 0;\r\n            for(x = 0; x <= radius; x++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(fertig) break;\r\n            x--;\r\n            for(y = 0; y <= radius - 1; y++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            radius += 2;\r\n\r\n        }\r\n\r\n        return {x: xCm, y: yCm};\r\n\r\n    }\r\n\r\n    isFree(elements: DiagramElement[], widthCm: number, heightCm: number, leftCm: number, topCm: number, minDistance: number):boolean {\r\n\r\n        for(let element of elements){\r\n\r\n            let insideX = Math.abs(element.leftCm + element.widthCm/2 - leftCm - widthCm/2) \r\n                       <= (element.widthCm + widthCm)/2 + minDistance;\r\n\r\n            let insideY = Math.abs(element.topCm + element.heightCm/2 - topCm - heightCm/2) <= (element.heightCm + heightCm)/2 + minDistance;\r\n\r\n            if(insideX && insideY) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"./Diagram.js\"; \r\nimport { Rectangle } from \"./classdiagram/Router.js\";\r\n\r\nexport enum Alignment {\r\n    left, center, right\r\n}\r\n\r\nexport type TextLine = {\r\n    type: \"text\",\r\n    text: string,\r\n    tooltip?: string,\r\n    alignment?: Alignment,\r\n    bold?: boolean,\r\n    italics?: boolean,\r\n    textHeightCm?: number,\r\n    textWidthCm?: number,\r\n    yCm?: number\r\n    $element?: JQuery<SVGTextElement>,\r\n    onClick?: () => void\r\n}\r\n\r\nexport type HorizontalLine = {\r\n    type: \"line\",\r\n    $element?: JQuery<SVGLineElement>,\r\n    thicknessCm: number,\r\n    yCm?: number\r\n}\r\n\r\nexport abstract class DiagramElement {\r\n\r\n    public static cmPerPx: number = 2.54/96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    public leftCm: number = 0; // x-Koordinate in cm\r\n    public topCm: number = 0; // y-Koordinate in cm\r\n \r\n    public widthCm: number;\r\n    public heightCm: number; \r\n\r\n    protected lines: (TextLine | HorizontalLine)[] = [];\r\n\r\n    public backgroundColor: string = \"#ffffff\";\r\n\r\n    constructor(protected parent: Element) {\r\n\r\n    }\r\n\r\n    getRoutingRectangle(): Rectangle{\r\n        return {\r\n            left: Math.round(this.leftCm/DiagramUnitCm),\r\n            top: Math.round(this.topCm/DiagramUnitCm),\r\n            width: Math.round(this.widthCm/DiagramUnitCm),\r\n            height: Math.round(this.heightCm/DiagramUnitCm) \r\n        };\r\n    }\r\n\r\n    public show(){\r\n        if(this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide(){\r\n        if(this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if(this.$element == null) return;\r\n        this.$element.detach();        \r\n    }\r\n\r\n    remove() {\r\n        if(this.$element == null) return;\r\n        this.$element.remove();\r\n        this.$element = null;        \r\n    }\r\n\r\n    appendTo($element: JQuery<Element>){\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear(){\r\n        if(this.$element == null) return;\r\n        this.$element.empty();\r\n        this.lines = [];\r\n    }\r\n\r\n    public move(xCm: number, yCm: number, withRaster: boolean, adjustToRaster: boolean = false) {\r\n        this.leftCm += xCm;\r\n        this.topCm += yCm;\r\n\r\n        let x = this.leftCm;\r\n        let y = this.topCm;\r\n\r\n        if(withRaster){\r\n            x = Math.round(x/DiagramUnitCm)*DiagramUnitCm;\r\n            y = Math.round(y/DiagramUnitCm)*DiagramUnitCm;\r\n        }\r\n\r\n        if(adjustToRaster){\r\n            this.leftCm = x;\r\n            this.topCm = y;\r\n        }\r\n\r\n        jQuery(this.$element).css(\"transform\", \"translate(\" + x + \"cm,\" + y + \"cm)\");\r\n    }\r\n\r\n    public moveTo(xCm: number, yCm: number, withRaster: boolean) {\r\n        this.move(xCm - this.leftCm, yCm - this.topCm, withRaster);\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n            let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n                font: \"16px Roboto\",\r\n                \"font-family\": \"sans-serif\",\r\n                fill: \"#000\",\r\n                \"alignment-baseline\":\"hanging\",\r\n                \"dominant-baseline\":\"hanging\"\r\n            });\r\n\r\n            if(attributes != null) $element.attr(attributes);\r\n\r\n            $element.text(text);\r\n\r\n            return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>):{height: number, width: number}{\r\n        let bbox:DOMRect = textElement[0].getBBox();\r\n        \r\n        return {\r\n            height: bbox.height * DiagramElement.cmPerPx,\r\n            width: bbox.width * DiagramElement.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n    public addTextLine(line: TextLine | HorizontalLine){\r\n\r\n        this.lines.push(line);\r\n\r\n        if(line.type == \"text\"){\r\n            if(line.alignment == null) line.alignment = Alignment.left;\r\n            if(line.bold == null) line.bold = false;\r\n            if(line.italics == null) line.italics = false;\r\n        }\r\n\r\n    }\r\n\r\n    public render(){\r\n\r\n        let $group = this.$element;\r\n        if($group == null){\r\n            $group = this.createElement(\"g\", this.parent);\r\n            $group.addClass(\"svg_draggable\");\r\n            $group.addClass(\"svg_all_pointer_events\");\r\n            this.$element = $group;\r\n            jQuery(this.$element).css(\"transform\", \"translate(\" + this.leftCm + \"cm,\" + this.topCm + \"cm)\");\r\n        }\r\n\r\n        let $rect = this.createElement(\"rect\", $group[0]);\r\n\r\n        let textPosYCm: number = 0.1;\r\n        let maxWidthCm: number = 0;\r\n\r\n        let first: boolean = true;\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n                if(first) textPosYCm += 0.1;\r\n                first = false;\r\n                line.yCm = textPosYCm;\r\n                line.$element = <JQuery<SVGTextElement>>this.createTextElement(line.text, $group[0], {\r\n                    \"font-weight\" : line.bold?\"bold\":\"normal\",\r\n                    \"font-size\": \"12pt\",\r\n                    \"font-style\": line.italics?\"italic\":\"normal\",\r\n                    \"text-anchor\": line.alignment == Alignment.left ? \"start\" : line.alignment == Alignment.center ? \"middle\" : \"end\",\r\n                    \"cursor\": line.onClick == null ? \"\" : \"pointer\"\r\n                } );\r\n\r\n                line.$element.css(\"transform\", \"translate(0cm,0cm)\");\r\n                // line.$element.css(\"transform\", \"translate(0cm,\" + textPosYCm + \"cm)\");\r\n                // if(line.onClick != null){\r\n                //     line.$element.addClass(\"clickable\");\r\n                //     line.$element.on(\"mousedown\", (event) => {\r\n                //         //@ts-ignore\r\n                //         line.onClick();\r\n                //         event.stopPropagation();\r\n                //     })\r\n                // }\r\n                let metrics = this.getTextMetrics(line.$element);\r\n                line.textHeightCm = metrics.height;\r\n                line.textWidthCm = metrics.width;\r\n                maxWidthCm = Math.max(maxWidthCm, line.textWidthCm);\r\n                textPosYCm += line.textHeightCm;\r\n                if(line.tooltip != null){\r\n                    let $tooltip = this.createElement(\"title\", line.$element[0]);\r\n                    $tooltip.text(line.tooltip);\r\n                }\r\n            } else {\r\n                line.yCm = textPosYCm + line.thicknessCm/2;\r\n                textPosYCm += line.thicknessCm + 0.1;\r\n                first = true;\r\n            }\r\n        }\r\n\r\n        let width = 2 * 0.05 + 2*0.2 + maxWidthCm;\r\n        this.widthCm = (Math.trunc(width/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n        this.heightCm = (Math.trunc(textPosYCm/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n\r\n        let textLeft = 0.05 + 0.2;\r\n        let textCenter = width/2;\r\n        let textRight = width - textLeft;\r\n\r\n        $rect.css({\r\n            width: this.widthCm + \"cm\",\r\n            height: this.heightCm + \"cm\",\r\n            fill: this.backgroundColor,\r\n            stroke: \"#000\",\r\n            \"stroke-width\": \"0.05cm\"\r\n        });\r\n\r\n\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n\r\n                let x: number;\r\n                switch(line.alignment){\r\n                    case Alignment.center: x = textCenter; break;\r\n                    case Alignment.left: x = textLeft; break;\r\n                    case Alignment.right: x = textRight; break;\r\n                }\r\n\r\n                // Unfortunately we have to wrap Text-Elements in <g> due to a bug in safari,\r\n                // see \r\n                //@ts-ignore\r\n                let $g = this.createElement(\"g\", $group[0]);\r\n                $g.append(line.$element);\r\n                //@ts-ignore\r\n                line.$element = $g;\r\n\r\n                line.$element.css(\"transform\", \"translate(\" + x + \"cm,\"+line.yCm + \"cm)\");\r\n\r\n                if(line.onClick != null){\r\n                    line.$element.addClass(\"clickable\");\r\n                    line.$element.on(\"mousedown\", (event) => {\r\n                        //@ts-ignore\r\n                        line.onClick();\r\n                        event.stopPropagation();\r\n                    })\r\n                }\r\n\r\n\r\n            } else {\r\n                line.$element = <JQuery<SVGLineElement>>this.createElement(\"line\", $group[0], {\r\n                    x1: \"0\",\r\n                    y1: line.yCm + \"cm\",\r\n                    x2: this.widthCm + \"cm\",\r\n                    y2: line.yCm + \"cm\"\r\n                });\r\n\r\n                line.$element.css({\r\n                    stroke: \"#000\",\r\n                    \"stroke-width\": line.thicknessCm + \"cm\"        \r\n                });\r\n\r\n            }\r\n        }\r\n\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { DiagramElement, Alignment } from \"../DiagramElement.js\";\r\nimport { Klass, Visibility, Interface } from \"../../../../compiler/types/Class.js\";\r\nimport { getDeclarationAsString, getTypeIdentifier } from \"../../../../compiler/types/DeclarationHelper.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { Point } from \"./Router.js\";\r\nimport { ClassDiagram } from \"./ClassDiagram.js\";\r\nimport { TextLine } from \"../DiagramElement.js\";\r\nimport { hash } from \"../../../../tools/StringTools.js\";\r\nimport { Method, Attribute } from \"../../../../compiler/types/Types.js\";\r\n\r\nexport type SerializedClassBox = {\r\n    className: string,\r\n    filename: string,\r\n    hashedSignature: number,\r\n    withMethods: boolean,\r\n    withAttributes: boolean,\r\n    leftCm: number,\r\n    topCm: number,\r\n    isSystemClass: boolean,\r\n    workspaceId?: number\r\n}\r\n\r\nexport class ClassBox extends DiagramElement {\r\n\r\n    className: string;\r\n    klass: Klass | Interface;\r\n    filename: string;\r\n    hashedSignature: number;\r\n    documentation: string;\r\n    active: boolean = true;\r\n    withMethods: boolean = true;\r\n    withAttributes: boolean = true;\r\n\r\n    inDebounce: any;\r\n\r\n    isSystemClass: boolean;\r\n\r\n    $dropdownTriangle: JQuery<Element>;\r\n\r\n    constructor(public diagram: Diagram, leftCm: number, topCm: number, klass: Klass | Interface) {\r\n        super(diagram.svgElement);\r\n\r\n        this.klass = klass;\r\n\r\n        if (klass != null) {\r\n            this.attachToClass(this.klass);\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.withAttributes = false; //!this.isSystemClass;\r\n            this.withMethods = false; // !this.isSystemClass;\r\n        }\r\n\r\n        this.moveTo(leftCm, topCm, true);\r\n\r\n    }\r\n\r\n    serialize(): SerializedClassBox {\r\n        return {\r\n            className: this.className,\r\n            filename: this.filename,\r\n            hashedSignature: this.hashedSignature,\r\n            withAttributes: this.withAttributes,\r\n            withMethods: this.withMethods,\r\n            isSystemClass: this.isSystemClass,\r\n            leftCm: this.leftCm,\r\n            topCm: this.topCm\r\n        }\r\n    }\r\n\r\n    static deserialize(diagram: Diagram, scb: SerializedClassBox): ClassBox {\r\n\r\n        let cb = new ClassBox(diagram, scb.leftCm, scb.topCm, null);\r\n        cb.hashedSignature = scb.hashedSignature;\r\n        cb.className = scb.className;\r\n        cb.filename = scb.filename;\r\n        cb.withAttributes = scb.withAttributes;\r\n        cb.withMethods = scb.withMethods;\r\n        cb.isSystemClass = scb.isSystemClass;\r\n\r\n        return cb;\r\n\r\n    }\r\n\r\n    attachToClass(klass: Klass | Interface) {\r\n\r\n        this.klass = klass;\r\n        let klassSignature: number = this.getSignature(klass);\r\n\r\n        if (this.className != klass.identifier || this.hashedSignature != klassSignature || this.widthCm < 0.7 || this.documentation != klass.documentation) {\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.renderLines();\r\n        } else {\r\n            this.addMouseEvents();\r\n        }\r\n\r\n        this.className = klass.identifier;\r\n        this.filename = klass.module.file.name;\r\n        this.hashedSignature = klassSignature;\r\n        this.documentation = klass.documentation;\r\n    }\r\n\r\n    jumpToDeclaration(element: Klass | Interface | Method | Attribute) {\r\n        this.diagram.main.jumpToDeclaration(this.klass.module, element.declaration);\r\n    }\r\n\r\n\r\n    renderLines() {\r\n\r\n        this.clear();\r\n\r\n        let parametersWithTypes = (<ClassDiagram>this.diagram).currentClassBoxes.parametersWithTypes;\r\n\r\n        this.addTextLine({\r\n            type: \"text\",\r\n            text: (this.klass instanceof Interface ? \"<<interface>> \" : ( this.klass.isAbstract ? \"<<abstract>> \" : \"\")) + this.klass.identifier,\r\n            tooltip: getDeclarationAsString(this.klass, \"\", true),\r\n            alignment: Alignment.center,\r\n            bold: true,\r\n            italics: this.klass instanceof Interface || this.klass.isAbstract,\r\n            onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(this.klass) }\r\n        });\r\n\r\n        if (this.klass instanceof Klass && this.withAttributes) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            for (let a of this.klass.attributes) {\r\n\r\n                let text: string = this.getVisibilityText(a.visibility) + getTypeIdentifier(a.type) + \" \" +  a.identifier;\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(a),\r\n                    alignment: Alignment.left,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(a) }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withMethods) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            this.klass.methods.filter(m => m.signature != \"toJson()\").forEach(m => {\r\n                let text: string = this.getVisibilityText(m.visibility) + m.identifier + \"()\";\r\n\r\n                if (parametersWithTypes) {\r\n                    let returnType: string = m.isConstructor ? \"\" :\r\n                        (m.returnType == null ? \"void \" : getTypeIdentifier(m.returnType) + \" \");\r\n                    text = this.getVisibilityText(m.visibility) + returnType + m.identifier + \"(\" +\r\n                        m.parameterlist.parameters.map((p) => { return getTypeIdentifier(p.type) + \" \" + p.identifier }).join(\", \") + \")\";\r\n                }\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(m),\r\n                    alignment: Alignment.left,\r\n                    italics: this.klass instanceof Interface || m.isAbstract,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(m) }\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n        this.backgroundColor = this.isSystemClass ? \"#aaaaaa\" : \"#ffffff\";\r\n        this.render();\r\n\r\n        this.$dropdownTriangle = this.createElement(\"path\", this.$element[0], {\r\n            d: this.getTrianglePath(),\r\n            class: \"dropdown-triangle\",\r\n            style: \"transform: \" + \"translate(\" + (this.widthCm - 0.35) + \"cm,0.05cm)\", // + (<TextLine>this.lines[0]).textHeightCm + \"cm)\"\r\n        })\r\n\r\n        this.addMouseEvents();\r\n    }\r\n\r\n    getTrianglePath() {\r\n        if (this.withMethods) {\r\n            return \"M 0 8 L 11 8 L 5.5 2 L 0 8\";\r\n        } else {\r\n            return \"M 0 2 L 11 2 L 5.5 8 L 0 2\";\r\n        }\r\n        // if (this.withMethods) {\r\n        //     return \"M 3 6 L 11 6 L 7 2 L 3 6\";\r\n        // } else {\r\n        //     return \"M 3 2 L 11 2 L 7 6 L 3 2\";\r\n        // }\r\n    }\r\n\r\n    detach() {\r\n        this.$element?.off('mousedown.diagramElement');\r\n        jQuery(document).off('mouseup.diagramElement');\r\n        jQuery(document).off('mousemove.diagramElement');\r\n        super.detach();\r\n    }\r\n\r\n    addMouseEvents() {\r\n        let that = this;\r\n\r\n        if (this.$dropdownTriangle != null) {\r\n            this.$dropdownTriangle.off(\"mouseup.dropdowntriangle\");\r\n            this.$dropdownTriangle.off(\"mousedown.dropdowntriangle\");\r\n        }\r\n\r\n        this.$dropdownTriangle.on(\"mousedown.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n        });\r\n        this.$dropdownTriangle.on(\"mouseup.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n            this.withMethods = !this.withMethods;\r\n            this.withAttributes = !this.withAttributes;\r\n            this.$dropdownTriangle.attr(\"d\", this.getTrianglePath());\r\n            this.renderLines();\r\n            (<ClassDiagram><any>this.diagram).adjustClassDiagramSize();\r\n            (<ClassDiagram><any>this.diagram).updateArrows();\r\n        });\r\n\r\n        this.$element.on('mousedown.diagramElement', (event: JQuery.MouseDownEvent) => {\r\n\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n\r\n            if (event.button != 0) return;\r\n\r\n            let x = event.screenX;\r\n            let y = event.screenY;\r\n\r\n            that.$element.find('rect').addClass('dragging');\r\n\r\n            jQuery(document).off('mouseup.diagramElement');\r\n            jQuery(document).off('mousemove.diagramElement');\r\n\r\n            jQuery(document).on('mousemove.diagramElement', (event: JQuery.MouseMoveEvent) => {\r\n                let cmPerPixel = 1 / 96 * 2.36 / this.diagram.zoomfactor;\r\n                let dx = (event.screenX - x) * cmPerPixel;\r\n                let dy = (event.screenY - y) * cmPerPixel;\r\n\r\n                x = event.screenX;\r\n                y = event.screenY;\r\n\r\n                that.move(dx, dy, true);\r\n\r\n\r\n                clearTimeout(that.inDebounce);\r\n                that.inDebounce = setTimeout(() => {\r\n                    let classDiagram = <ClassDiagram><any>that.diagram;\r\n                    classDiagram.updateArrows();\r\n                }, 200);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.diagramElement', () => {\r\n                that.move(0, 0, true, true);\r\n                let classDiagram = <ClassDiagram><any>that.diagram;\r\n                classDiagram.adjustClassDiagramSize();\r\n                classDiagram.updateArrows();\r\n                that.$element.find('rect').removeClass('dragging');\r\n                jQuery(document).off('mouseup.diagramElement');\r\n                jQuery(document).off('mousemove.diagramElement');\r\n                classDiagram.dirty = true;\r\n            });\r\n\r\n\r\n        })\r\n    }\r\n\r\n    getVisibilityText(visibility: Visibility) {\r\n        switch (visibility) {\r\n            case Visibility.private: return \"-\";\r\n            case Visibility.protected: return \"#\";\r\n            case Visibility.public: return \"+\";\r\n        }\r\n    }\r\n\r\n    getSignature(klass: Klass | Interface): number {\r\n\r\n        let s: string = \"\";\r\n\r\n        if (klass instanceof Klass && this.withAttributes && klass.attributes.length > 0) {\r\n            for (let a of klass.attributes) s += this.getVisibilityText(a.visibility) + a.type.identifier + \" \" + a.identifier;\r\n        }\r\n\r\n        if (this.withMethods && klass.methods.length > 0) {\r\n            for (let m of klass.methods) {\r\n                if (m.isConstructor) continue;\r\n                let rt: string = m.returnType == null ? \"void\" : m.returnType.identifier;\r\n                s += this.getVisibilityText(m.visibility) + rt + \" \" + m.identifier + \"(\" +\r\n                    m.parameterlist.parameters.map((p) => { return p.type.identifier + \" \" + p.identifier }).join(\", \") + \")\";\r\n            }\r\n        }\r\n\r\n        return hash(s);\r\n\r\n    }\r\n\r\n    hasSignatureAndFileOf(klass: Klass | Interface) {\r\n        return klass.module.file.name == this.filename &&\r\n            this.getSignature(klass) == this.hashedSignature;\r\n    }\r\n\r\n\r\n\r\n}","import { Point } from \"./Router.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { DiagramUnitCm } from \"../Diagram.js\";\r\n\r\ntype Step = {r: number, f: number};\r\ntype Arrow = {\r\n    steps: Step[],\r\n    stroke: string,\r\n    fill: string,\r\n    \"stroke-dasharray\": string\r\n}\r\n\r\nexport class ArrowHead {\r\n\r\n    static rauteAlpha = 60;\r\n    static arrows: {[type: string]: Arrow} = {\r\n        \"inheritance\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined //\"4\"\r\n        },\r\n        \"realization\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#8080ff\",\r\n            \"stroke-dasharray\": \"4\"\r\n        },\r\n        \"composition\": {\r\n            steps: [{r: 90 + ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3},\r\n                 {r: 2*ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined\r\n        },\r\n    }\r\n\r\n    static makeHead(position1Cm: Point, position2Cm: Point, type: string): {\r\n        path: string,\r\n        stroke: string,\r\n        fill: string,\r\n    } {\r\n\r\n        let dx = position2Cm.x - position1Cm.x;\r\n        let dy = position2Cm.y - position1Cm.y;\r\n\r\n        let d = Math.sqrt(dx*dx+dy*dy);\r\n        \r\n        if(d < 0.00001) return {path: \"\", stroke: \"none\", fill: \"none\"};\r\n\r\n        let ex = dx/d;\r\n        let ey = dy/d;\r\n\r\n        let path: string = \"M \" + position2Cm.x * DiagramUnitCm / DiagramArrow.cmPerPx \r\n            + \" \" + position2Cm.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n\r\n        let arrow = this.arrows[type];\r\n\r\n        for(let step of arrow.steps){\r\n            let angle = step.r / 180 * Math.PI;\r\n            let ex1 = ex * Math.cos(angle) - ey * Math.sin(angle);\r\n            let ey1 = ex * Math.sin(angle) + ey * Math.cos(angle);\r\n            path += \" l \" + ex1 * step.f / DiagramArrow.cmPerPx + \" \" + ey1 * step.f / DiagramArrow.cmPerPx;\r\n            ex = ex1;\r\n            ey = ey1;\r\n        }\r\n\r\n        return {\r\n            path: path,\r\n            fill: arrow.fill,\r\n            stroke: arrow.stroke\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"../Diagram.js\";\r\nimport { RoutingArrow, Point } from \"./Router.js\";\r\nimport { ArrowHead } from \"./ArrowHead.js\";\r\n\r\nexport class DiagramArrow {\r\n\r\n    public static cmPerPx: number = 2.54 / 96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    constructor(protected parent: Element, private routingArrow: RoutingArrow, private color: string) {\r\n\r\n    }\r\n\r\n    public show() {\r\n        if (this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide() {\r\n        if (this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if (this.$element == null) return;\r\n        this.$element.detach();\r\n    }\r\n\r\n    remove() {\r\n        if (this.$element == null) return;\r\n        this.$element.remove();\r\n    }\r\n\r\n    appendTo($element: JQuery<Element>) {\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear() {\r\n        if (this.$element == null) return;\r\n        this.$element.empty();\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        if (parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n            font: \"16px Roboto\",\r\n            \"font-family\": \"sans-serif\",\r\n            fill: \"#000\",\r\n            \"alignment-baseline\": \"hanging\"\r\n        });\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        $element.text(text);\r\n\r\n        return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>): { height: number, width: number } {\r\n        let bbox: DOMRect = textElement[0].getBBox();\r\n\r\n        return {\r\n            height: bbox.height * DiagramArrow.cmPerPx,\r\n            width: bbox.width * DiagramArrow.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public render() {\r\n\r\n        let $group = this.$element;\r\n        if ($group == null) {\r\n            $group = this.createElement(\"g\", this.parent);\r\n            this.$element = $group;\r\n            $group.css(\"stroke\", this.color);\r\n        } else {\r\n            $group.empty();\r\n        }\r\n\r\n        let points = this.routingArrow.minimalPoints;\r\n        if (points == null || points.length < 2) {\r\n            return;\r\n        }\r\n\r\n        let path = \"M \" + this.getPathCoordinates(points[0]);\r\n\r\n        for (let i = 1; i < points.length; i++) {\r\n            path += \" L \" + this.getPathCoordinates(points[i]);\r\n        }\r\n\r\n        let arrowData = ArrowHead.arrows[this.routingArrow.arrowType];\r\n        let $path = this.createElement(\"path\", $group[0], { d: path });\r\n        $path.css({\r\n            // stroke: \"#000000\",\r\n            \"stroke-width\": \"0.2 cm\",\r\n            \"fill\": \"none\",\r\n            \"stroke-dasharray\": arrowData[\"stroke-dasharray\"]\r\n        });\r\n\r\n        while (points.length > 1 && points[points.length - 1].x == points[points.length - 2].x &&\r\n            points[points.length - 1].y == points[points.length - 2].y) {\r\n            points.pop();\r\n        }\r\n\r\n        if (points.length > 1 && this.routingArrow.endsOnArrowWithIdentifier == null) {\r\n            let head = ArrowHead.makeHead(points[points.length - 2], points[points.length - 1],\r\n                this.routingArrow.arrowType);\r\n\r\n            let $head = this.createElement(\"path\", $group[0], { d: head.path });\r\n            $head.css({\r\n                stroke: this.color,\r\n                \"stroke-width\": \"0.2 cm\",\r\n                \"fill\": head.fill\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getPathCoordinates(point: Point): string {\r\n        let x = point.x * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        let y = point.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        return \"\" + x + \" \" + y;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Interface, Klass } from \"../../../../compiler/types/Class.js\";\r\nimport { Workspace } from \"../../../../workspace/Workspace.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram, DiagramUnitCm } from \"../Diagram.js\";\r\nimport { ClassBox, SerializedClassBox } from \"./ClassBox.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { RoutingInput, RoutingOutput } from \"./Router.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\nimport { openContextMenu } from \"../../../../tools/HtmlTools.js\";\r\nimport { TeachersWithClassesMI } from \"../../../../administration/TeachersWithClasses.js\";\r\n\r\ntype ClassBoxes = {\r\n    active: ClassBox[],\r\n    inactive: ClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n};\r\n\r\nexport type SerializedClassDiagram = {\r\n    classBoxes: SerializedClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n}\r\n\r\nexport class ClassDiagram extends Diagram {\r\n\r\n    classBoxesRepository: { [workspaceId: number]: ClassBoxes } = {};\r\n\r\n    arrows: DiagramArrow[] = [];\r\n\r\n    currentWorkspaceId: number = null;\r\n    currentWorkspace: Workspace;\r\n    currentClassBoxes: ClassBoxes;\r\n\r\n    version: number = 0;\r\n\r\n    straightArrowSectionAfterRectangle = 2;\r\n    distanceFromRectangles = 2;\r\n    slotDistance = 2;\r\n\r\n    dirty: boolean = false;\r\n    routingWorker: Worker;\r\n\r\n    constructor(private $htmlElement: JQuery<HTMLElement>, main: MainBase) {\r\n        super($htmlElement, main);\r\n\r\n        let that = this;\r\n        this.$menuButton.on('click', (ev) => {\r\n            ev.preventDefault();\r\n            let displaysSystemClasses = that.currentClassBoxes.displaySystemClasses == true;\r\n            let parametersWithTypes = that.currentClassBoxes.parametersWithTypes == true;\r\n            openContextMenu([\r\n                {\r\n                    caption: displaysSystemClasses ? \"Systemklassen ausblenden\" : \"Systemklassen einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.displaySystemClasses = !displaysSystemClasses;\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n                {\r\n                    caption: parametersWithTypes ? \"Parameter ausblenden\" : \"Parameter einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.parametersWithTypes = !parametersWithTypes;\r\n                        that.currentClassBoxes.active.forEach((cb) => {cb.hashedSignature = -1});\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n            ], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        });\r\n    }\r\n\r\n    clearAfterLogout() {\r\n        this.classBoxesRepository = {};\r\n        this.arrows.forEach((arrow) => { arrow.remove(); });\r\n        $(this.svgElement).empty();\r\n    }\r\n\r\n    serialize(): SerializedClassDiagram {\r\n\r\n        if(this.currentClassBoxes == null) return;\r\n\r\n        let scd: SerializedClassDiagram = {\r\n            classBoxes: [],\r\n            displaySystemClasses: this.currentClassBoxes.displaySystemClasses,\r\n            parametersWithTypes: this.currentClassBoxes.parametersWithTypes\r\n        }\r\n\r\n        for (let workspaceId in this.classBoxesRepository) {\r\n            let classBox = this.classBoxesRepository[workspaceId];\r\n            for (let cb of classBox.active) {\r\n                let cbs = cb.serialize();\r\n                cbs.workspaceId = Number.parseInt(workspaceId);\r\n                scd.classBoxes.push(cbs);\r\n            }\r\n        }\r\n\r\n        return scd;\r\n\r\n    }\r\n\r\n    deserialize(serializedClassDiagram: SerializedClassDiagram) {\r\n        for (let cb of serializedClassDiagram.classBoxes) {\r\n            let classBoxes: ClassBoxes = this.classBoxesRepository[cb.workspaceId];\r\n            if (classBoxes == null) {\r\n                classBoxes = {\r\n                    active: [],\r\n                    inactive: [],\r\n                    displaySystemClasses: false,\r\n                    parametersWithTypes: false\r\n                }\r\n                this.classBoxesRepository[cb.workspaceId] = classBoxes;\r\n            }\r\n            classBoxes.inactive.push(ClassBox.deserialize(this, cb));\r\n            classBoxes.displaySystemClasses = serializedClassDiagram.displaySystemClasses;\r\n            classBoxes.parametersWithTypes = serializedClassDiagram.parametersWithTypes;\r\n        }\r\n    }\r\n\r\n\r\n    adjustClassDiagramSize() {\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n        this.adjustSizeAndElements(classBoxes.active);\r\n    }\r\n\r\n    getClassBoxes(workspace: Workspace): ClassBoxes {\r\n        let cb: ClassBoxes = this.classBoxesRepository[workspace.id];\r\n        if (cb == null) {\r\n            cb = {\r\n                active: [],\r\n                inactive: [],\r\n                displaySystemClasses: false,\r\n                parametersWithTypes: false\r\n            }\r\n            this.classBoxesRepository[workspace.id] = cb;\r\n        }\r\n        return cb;\r\n    }\r\n\r\n    switchToWorkspace(workspace: Workspace): ClassBoxes {\r\n        let cbs1 = this.getClassBoxes(workspace);\r\n\r\n        if (this.currentWorkspaceId != workspace.id) {\r\n            if (this.currentWorkspaceId != null) {\r\n                let cbs = this.classBoxesRepository[this.currentWorkspaceId];\r\n                if (cbs != null) {\r\n                    for (let cb of cbs.active) {\r\n                        cb.detach();\r\n                    }\r\n                    for (let cb of cbs.inactive) {\r\n                        cb.detach();\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let cb of cbs1.active) {\r\n                this.svgElement.appendChild(cb.$element[0]);\r\n            }\r\n            for (let cb of cbs1.inactive) {\r\n                if (cb.$element != null) {\r\n                    this.svgElement.appendChild(cb.$element[0]);\r\n                }\r\n            }\r\n\r\n            this.adjustSizeAndElements(cbs1.active);\r\n        }\r\n\r\n        this.currentWorkspaceId = workspace.id;\r\n\r\n        return cbs1;\r\n\r\n    }\r\n\r\n    drawDiagram(workspace: Workspace, onlyUpdateIdentifiers: boolean) {\r\n\r\n        if (workspace == null) return;\r\n        this.currentWorkspace = workspace;\r\n        this.currentClassBoxes = this.switchToWorkspace(workspace);\r\n\r\n        let moduleStore = workspace.moduleStore;\r\n\r\n        let newClassBoxes: ClassBox[] = [];\r\n\r\n        let anyTypelistThere: boolean = false;\r\n        let newClassesToDraw: (Klass | Interface)[] = [];\r\n        let usedSystemClasses: (Klass | Interface)[] = [];\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let typeList = module?.typeStore?.typeList;\r\n            if (typeList == null) continue;\r\n            anyTypelistThere = true;\r\n\r\n\r\n            typeList.filter((type) => {\r\n                return type instanceof Klass ||\r\n                    type instanceof Interface\r\n            }).forEach((klass: Klass | Interface) => {\r\n                let cb: ClassBox = this.findAndEnableClass(klass, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n                if (klass instanceof Klass) {\r\n                    klass.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            });\r\n        }\r\n\r\n        // recursively register system classes that are used by other system classes\r\n        let uscList1: (Klass | Interface)[] = [];\r\n        while (uscList1.length < usedSystemClasses.length) {\r\n            uscList1 = usedSystemClasses.slice(0);\r\n            for (let usc of uscList1) {\r\n                if (usc instanceof Klass) {\r\n                    usc.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.currentClassBoxes.displaySystemClasses) {\r\n            for (let usc of usedSystemClasses) {\r\n                let cb: ClassBox = this.findAndEnableClass(usc, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n            }\r\n        }\r\n\r\n        this.dirty = this.dirty || newClassesToDraw.length > 0;\r\n\r\n        for (let klass of newClassesToDraw) {\r\n            let cb = new ClassBox(this, Math.random() * 10 * DiagramUnitCm, Math.random() * 10 * DiagramUnitCm, klass);\r\n\r\n            cb.renderLines();\r\n\r\n            let freePos = this.findFreeSpace(newClassBoxes, cb.widthCm, cb.heightCm, this.minDistance);\r\n\r\n            cb.moveTo(freePos.x, freePos.y, true);\r\n\r\n            newClassBoxes.push(cb);\r\n\r\n        }\r\n\r\n        if (newClassesToDraw.length > 0) {\r\n            this.adjustSizeAndElements(newClassBoxes);\r\n        }\r\n\r\n        if (!anyTypelistThere) return;\r\n\r\n        for (let cb of this.currentClassBoxes.active) {\r\n            cb.hide();\r\n            cb.active = false;\r\n            this.currentClassBoxes.inactive.push(cb);\r\n        }\r\n\r\n        this.currentClassBoxes.active = newClassBoxes;\r\n\r\n        if (!onlyUpdateIdentifiers) {\r\n            this.adjustClassDiagramSize();\r\n            this.updateArrows();\r\n        }\r\n\r\n    }\r\n\r\n    updateArrows() {\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n        // return;\r\n\r\n        let colors: string[] = [\"#0075dc\", \"#993f00\", \"#005c31\", \"#ff5005\", \"#2bce48\",\r\n            \"#0000ff\", \"#ffa405\", '#ffa8bb', '#740aff', '#990000', '#ff0000'];\r\n        let colorIndex = 0;\r\n\r\n        let routingInput = this.drawArrows();\r\n\r\n        this.version++;\r\n        routingInput.version = this.version;\r\n\r\n        if (this.routingWorker != null) {\r\n            this.routingWorker.terminate();\r\n        }\r\n\r\n        this.routingWorker = new Worker('js/main/gui/diagrams/classdiagram/Router.js');\r\n        let that = this;\r\n        this.routingWorker.onmessage = function (e) {\r\n            // when worker finished:\r\n            let ro: RoutingOutput = e.data;\r\n            if (ro.version == that.version) {\r\n                that.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n                that.arrows.forEach((arrow) => { arrow.remove(); });\r\n\r\n                let arrowIdentifierToColorMap: { [identifier: string]: string } = {};\r\n\r\n                let arrowsWithoutColor: number = ro.arrows.length + 1;\r\n                let arrowsWithoutColorLast: number;\r\n                do {\r\n                    arrowsWithoutColorLast = arrowsWithoutColor;\r\n                    arrowsWithoutColor = 0;\r\n                    ro.arrows.forEach((arrow) => {\r\n                        if (arrow.color == null) {\r\n                            arrowsWithoutColor++;\r\n                            if (arrow.endsOnArrowWithIdentifier == null) {\r\n                                arrow.color = colors[colorIndex];\r\n                                arrowIdentifierToColorMap[arrow.identifier] = arrow.color;\r\n                                colorIndex++;\r\n                                if (colorIndex > colors.length - 1) colorIndex = 0;\r\n                            } else {\r\n                                arrow.color = arrowIdentifierToColorMap[arrow.endsOnArrowWithIdentifier];\r\n                            }\r\n                        }\r\n                    });\r\n                } while (arrowsWithoutColor < arrowsWithoutColorLast);\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    if (arrow.color == null) {\r\n                        arrow.color = \"#ff0000\";\r\n                    }\r\n                });\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    let da: DiagramArrow = new DiagramArrow(that.svgElement, arrow, arrow.color);\r\n                    da.render();\r\n                    that.arrows.push(da);\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n\r\n        this.routingWorker.postMessage(routingInput); // start worker!\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').show();\r\n\r\n    }\r\n\r\n    drawArrows(): RoutingInput {\r\n\r\n        let routingInput: RoutingInput = {\r\n            rectangles: [],\r\n            arrows: [],\r\n            xMax: Math.ceil(this.widthCm / DiagramUnitCm),\r\n            yMax: Math.ceil(this.heightCm / DiagramUnitCm),\r\n            straightArrowSectionAfterRectangle: this.straightArrowSectionAfterRectangle,\r\n            distanceFromRectangles: this.distanceFromRectangles,\r\n            slotDistance: this.slotDistance\r\n        }\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n            routingInput.rectangles.push(cb.getRoutingRectangle());\r\n        });\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n\r\n            if (cb.klass instanceof Klass) {\r\n                if (cb.klass.baseClass != null) {\r\n                    let cb1 = this.findClassbox(cb.klass.baseClass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"inheritance\", routingInput);\r\n                    }\r\n                }\r\n                for (let intf of cb.klass.implements) {\r\n                    let cb1 = this.findClassbox(intf, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"realization\", routingInput);\r\n                    }\r\n                }\r\n                for (let cd of cb.klass.getCompositeData()) {\r\n                    let cb1 = this.findClassbox(cd.klass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb1, cb, \"composition\", routingInput);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return routingInput;\r\n\r\n    }\r\n\r\n    drawArrwow(cb1: ClassBox, cb2: ClassBox, arrowType: string, routingInput: RoutingInput) {\r\n\r\n        let rect1 = cb1.getRoutingRectangle();\r\n        let rect2 = cb2.getRoutingRectangle();\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        routingInput.arrows.push({\r\n            arrowType: arrowType,\r\n\r\n            destRectangleIndex: classBoxes.active.indexOf(cb2),\r\n\r\n            sourceRectangleIndex: classBoxes.active.indexOf(cb1),\r\n\r\n            destinationIdentifier: cb2.className,\r\n            identifier: cb1.className + \"(extends)\" + cb2.className\r\n        });\r\n\r\n    }\r\n\r\n    findClassbox(klass: Klass | Interface, classBoxes: ClassBox[]): ClassBox {\r\n\r\n        for (let cb of classBoxes) {\r\n            if (cb.klass == klass) return cb;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAndEnableClass(klass: Klass | Interface, classBoxes: ClassBoxes, newClassesToDraw: (Klass | Interface)[]): ClassBox {\r\n        let i = 0;\r\n        while (i < classBoxes.active.length) {\r\n            let k = classBoxes.active[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                k.attachToClass(klass);\r\n                classBoxes.active.splice(i, 1);\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        i = 0;\r\n        while (i < classBoxes.inactive.length) {\r\n            let k = classBoxes.inactive[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                classBoxes.inactive.splice(i, 1);\r\n                k.klass = klass;\r\n                k.renderLines();\r\n                k.show();\r\n                k.active = true;\r\n                this.dirty = true;\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        newClassesToDraw.push(klass);\r\n\r\n        return null;\r\n    }\r\n\r\n    clear() {\r\n\r\n        let cb = this.classBoxesRepository[this.currentWorkspaceId];\r\n        if (cb != null) {\r\n            for (let c of cb.active) {\r\n                c.detach();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Klass, Interface, Visibility } from \"../../../../compiler/types/Class.js\";\r\nimport { Variable, Value } from \"../../../../compiler/types/Types.js\";\r\nimport { ObjectClass } from \"../../../../compiler/types/ObjectClass.js\";\r\nimport { RuntimeObject } from \"../../../../interpreter/RuntimeObject.js\";\r\n\r\ntype Reference = {\r\n    sourceValue: RuntimeObject,\r\n    destValue: RuntimeObject,\r\n    attributeIdentifier: string\r\n}\r\n\r\nexport class ListDiagram extends ObjectDiagramVariant {\r\n\r\n    rootIdentifier: string;\r\n\r\n    $selectElement: JQuery<HTMLSelectElement>;\r\n\r\n    getSettingsElement(): JQuery<HTMLElement> {\r\n\r\n        let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n\r\n        let $element = jQuery('<span>Start der Liste:&nbsp;</span>');\r\n        this.$selectElement = jQuery('<select></select>');\r\n        $element.append(this.$selectElement);\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let childSymbolTables = module.mainSymbolTable?.childSymbolTables;\r\n            if (childSymbolTables == null || childSymbolTables.length == 0) continue;\r\n            let variableMap = childSymbolTables[0].variableMap;\r\n            if (variableMap == null || childSymbolTables[0].classContext != null) continue;\r\n            variableMap.forEach((variable, identifier) => {\r\n                let type = variable.type;\r\n                if (type != null && type instanceof Klass && type.module != null && !type.module.isSystemModule) {\r\n                    let selected: string = identifier == this.rootIdentifier ? \" selected\" : \"\";\r\n                    this.$selectElement.append('<option value=\"' + identifier + selected + '\">' + identifier +\r\n                        ' (Modul \"' + module.file.name + '\")</option>');\r\n                }\r\n            });\r\n        }\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    getName(): string { return \"Liste\" }\r\n\r\n    updateDiagram(): void {\r\n\r\n        let heap = this.main.getInterpreter().heap;\r\n        let rootValue = heap[this.rootIdentifier]?.value;\r\n        if (rootValue == null) {\r\n            this.objectDiagram.error(\"Konnte die Variable \" + this.rootIdentifier + \" nicht finden.\");\r\n            return;\r\n        }\r\n\r\n        if (rootValue.type == null || !(rootValue.type instanceof Klass)) {\r\n            this.objectDiagram.error(\"Die Variable \" + this.rootIdentifier + \" zeigt auf kein Objekt.\");\r\n        }\r\n\r\n        let klass: Klass = <Klass>rootValue.type;\r\n        let rto: RuntimeObject = rootValue.value;\r\n\r\n        // if rootValue is self of self referncing type then this array holds values:\r\n        let rootValueSelfReferenceType = this.analyzeSelfReference(klass);\r\n\r\n        // ... else find referenced class which is of self referencing type;\r\n        let attributesWithSelfReference: string[] = [];\r\n        let selfReferenceType: Klass | Interface;\r\n\r\n        if (rootValueSelfReferenceType == null) {\r\n\r\n            let k = klass;\r\n            while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n                for (let a of k.attributes) {\r\n                    let value = rto.attributes[a.index];\r\n                    if (!(value.type instanceof Klass)) continue;\r\n                    if (selfReferenceType != null && selfReferenceType == a.type) {\r\n                        attributesWithSelfReference.push(a.identifier);\r\n                    } else {\r\n                        let sr = this.analyzeSelfReference(value.type);\r\n                        if (sr != null) {\r\n                            selfReferenceType = sr;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                k = k.baseClass;\r\n            }\r\n\r\n        }\r\n\r\n        if (rootValueSelfReferenceType == null && selfReferenceType == null) {\r\n            this.objectDiagram.error(\"Konnte kein sich selbst referenzierendes Objekt finden.\");\r\n        } else {\r\n            this.drawDiagram(rootValue, rootValueSelfReferenceType, attributesWithSelfReference, selfReferenceType);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    drawDiagram(rootValue: Value, rootValueSelfReferenceType: Klass | Interface,\r\n        attributesWithSelfReference: string[], selfReferenceType: Klass | Interface) {\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n    analyzeSelfReference(klass: Klass): Klass | Interface {\r\n\r\n        let tImplements: Interface[] = [];\r\n        let tExtends: Klass[];\r\n\r\n        let k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n            if (k.implements.length > 0)\r\n                tImplements = tImplements.concat(k.implements);\r\n\r\n            if (k.baseClass != null && !(k.baseClass instanceof ObjectClass)) {\r\n                tExtends.push(k.baseClass);\r\n            }\r\n            k = k.baseClass;\r\n        }\r\n\r\n        k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n            for (let a of k.attributes) {\r\n                let type = a.type;\r\n                if (tImplements.indexOf(<Interface>type) >= 0 || tExtends.indexOf(<Klass>type) >= 0) {\r\n                    return <Klass | Interface>type;\r\n                }\r\n            }\r\n\r\n            k = k.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    clear(): void {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../../../Main.js\";\r\nimport { ObjectDiagram } from \"./ObjectDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\n\r\nexport abstract class ObjectDiagramVariant {\r\n\r\n    constructor(protected main: MainBase, protected objectDiagram: ObjectDiagram){\r\n\r\n    }\r\n\r\n    abstract getName(): string;\r\n\r\n    abstract getSettingsElement(): JQuery<HTMLElement>;\r\n    \r\n    abstract updateDiagram(): void;\r\n\r\n    abstract clear(): void;\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { ListDiagram } from \"./ListDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\nexport class ObjectDiagram extends Diagram {\r\n\r\n    variants: ObjectDiagramVariant[] = [];\r\n    currentVariant: ObjectDiagramVariant = null;\r\n\r\n    constructor(main: MainBase, private $objectDiagramDiv: JQuery<HTMLElement>) {\r\n        super($objectDiagramDiv.find('.jo_objectdiagram-canvas'), main);\r\n        this.variants.push(new ListDiagram(main, this));\r\n\r\n        let $typeOption = $objectDiagramDiv.find('.jo_objectdiagram-type');\r\n        $typeOption.empty();\r\n        $typeOption.append('<option value=\"none\" selected>Bitte auswählen...</option>');\r\n\r\n        let i = 0;\r\n        for (let variant of this.variants) {\r\n            $typeOption.append('<option value=\"' + i + '\">' + variant.getName() + '</option>');\r\n        }\r\n\r\n        let that = this;\r\n        $typeOption.on('change', (e) => {\r\n            //@ts-ignore\r\n            let value: string = e.currentTarget.value;\r\n            if(value == null){\r\n                if(that.currentVariant != null){\r\n                    that.$canvas.find('.jo_objectDiagramError').remove();\r\n                    that.currentVariant.clear();\r\n                }\r\n                that.currentVariant = null;\r\n            } else {\r\n                let intValue = Number.parseInt(value);\r\n                that.currentVariant = that.variants[intValue];\r\n            }\r\n            that.updateSettings();\r\n        });\r\n\r\n    }\r\n\r\n    error(error: string){\r\n        this.$canvas.append('<div class=\"jo_objectDiagramError\">' + error + '</div>')\r\n    }\r\n\r\n\r\n    updateSettings(){\r\n        let $settingsDiv = this.$objectDiagramDiv.find('.jo_objectdiagram-settings');\r\n        if(this.currentVariant != null){\r\n            $settingsDiv.empty();\r\n            $settingsDiv.append(this.currentVariant.getSettingsElement());\r\n        } else {\r\n            $settingsDiv.empty();\r\n        }\r\n    }\r\n    \r\n    updateDiagram(){\r\n        if(this.currentVariant != null){\r\n            this.currentVariant.updateDiagram();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { WorldHelper } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassDiagram } from \"./diagrams/classdiagram/ClassDiagram.js\";\r\nimport { ObjectDiagram } from \"./diagrams/objectdiagram/ObjectDiagram.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    classDiagram: ClassDiagram;\r\n    objectDiagram: ObjectDiagram;\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        if(withClassDiagram){\r\n            this.classDiagram = new ClassDiagram(this.$tabs.find('.jo_classdiagram'), main);\r\n            this.$headings.find('.jo_classDiagramTabHeading').on(\"click\", () => { that.main.drawClassDiagrams(false) });\r\n        }\r\n\r\n        if(withObjectDiagram){\r\n            this.objectDiagram = new ObjectDiagram(this.main, this.$tabs.find('.jo_objectdiagram'));\r\n            this.$headings.find('.jo_objectDiagramTabHeading').on(\"click\", () => { that.onObjectDiagramEnabled() });\r\n        }\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    adjustWidthToWorld() {\r\n        let worldHelper: WorldHelper = this.main.getInterpreter().worldHelper;\r\n        if (worldHelper != null && this.isWholePage) {\r\n            let screenHeight = window.innerHeight - this.$headings.height() - 6;\r\n            let screenWidthToHeight = window.innerWidth / (screenHeight);\r\n            let worldWidthToHeight = worldHelper.width / worldHelper.height;\r\n            if (worldWidthToHeight <= screenWidthToHeight) {\r\n                let newWidth = worldWidthToHeight * screenHeight;\r\n                this.$tabs.find('.jo_run').css('width', newWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', screenHeight + \"px\");\r\n            } else {\r\n                let newHeight = window.innerWidth / worldWidthToHeight;\r\n                this.$tabs.find('.jo_run').css('width', window.innerWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', newHeight + \"px\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n    isClassDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_classDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    isObjectDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_objectDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    updateObjectDiagramSettings() {\r\n        if (this.isObjectDiagramEnabled) {\r\n            this.objectDiagram.updateSettings();\r\n        }\r\n    }\r\n\r\n    onObjectDiagramEnabled() {\r\n        this.objectDiagram.updateSettings();\r\n        if (this.main.getInterpreter().state == InterpreterState.paused || this.main.getInterpreter().state == InterpreterState.running) {\r\n            this.objectDiagram.updateDiagram();\r\n        }\r\n    }\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ZoomControl } from \"./diagrams/ZoomControl.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 0\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace, true);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return -1;\r\n            if (b.familienname > a.familienname) return 1;\r\n            if (a.rufname > b.rufname) return -1;\r\n            if (b.rufname > a.rufname) return 1;\r\n            return 0;\r\n        })\r\n\r\n        for(let i = 0; i < userDataList.length; i++){\r\n            let ud = userDataList[i];\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { userInfo } from \"os\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        this.startAnimations();\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n\r\n        jQuery('#jo_testuser-login-button').on('click', () => {\r\n            jQuery('#login-username').val('Testuser');\r\n            jQuery('#login-password').val('');\r\n            jQuery('#login-button').trigger('click');\r\n\r\n        })\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            SoundTools.init();\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            let loginRequest: LoginRequest = {\r\n                username: <string>jQuery('#login-username').val(),\r\n                password: <string>jQuery('#login-password').val(),\r\n                language: 0\r\n            }\r\n\r\n            ajax('login', loginRequest, (response: LoginResponse) => {\r\n\r\n                if (!response.success) {\r\n                    jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                } else {\r\n\r\n                    // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                    // Alternatively we now set a long expiry interval for cookie.\r\n                    // credentials.username = loginRequest.username;\r\n                    // credentials.password = loginRequest.password;\r\n\r\n                    jQuery('#login').hide();\r\n                    jQuery('#main').css('visibility', 'visible');\r\n\r\n                    jQuery('#bitteWartenText').html('Bitte warten ...');\r\n                    jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n                    let user: UserData = response.user;\r\n                    user.is_testuser = loginRequest.username == \"Testuser\" && loginRequest.password == \"\";\r\n\r\n                    if (user.settings == null || user.settings.helperHistory == null) {\r\n                        user.settings = {\r\n                            helperHistory: {\r\n                                consoleHelperDone: false,\r\n                                newFileHelperDone: false,\r\n                                newWorkspaceHelperDone: false,\r\n                                speedControlHelperDone: false,\r\n                                homeButtonHelperDone: false,\r\n                                stepButtonHelperDone: false,\r\n                                repositoryButtonDone: false,\r\n                                folderButtonDone: false\r\n                            },\r\n                            viewModes: null,\r\n                            classDiagram: null\r\n                        }\r\n                    }\r\n                    \r\n                    that.main.user = user;\r\n\r\n                    this.main.waitForGUICallback = () => {\r\n                        \r\n                        that.main.mainMenu.initGUI(user);\r\n                        \r\n                        jQuery('#bitteWarten').hide();\r\n                        $loginSpinner.hide();\r\n                        jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n                        \r\n                        new UserMenu(that.main).init();\r\n                        \r\n                        if (user.is_teacher) {\r\n                            that.main.initTeacherExplorer(response.classdata);\r\n                        }\r\n                        \r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = user.id;\r\n\r\n                        that.main.networkManager.initializeTimer();\r\n\r\n                        that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                        that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                        that.main.rightDiv?.classDiagram?.clear();\r\n\r\n                        if (user.settings.classDiagram != null) {\r\n                            that.main.rightDiv?.classDiagram?.deserialize(user.settings.classDiagram);\r\n                        }\r\n\r\n                        that.main.viewModeController.initViewMode();\r\n                        that.main.bottomDiv.hideHomeworkTab();\r\n                        \r\n                        if (!this.main.user.settings.helperHistory.folderButtonDone && that.main.projectExplorer.workspaceListPanel.elements.length > 5) {\r\n                            \r\n                            Helper.showHelper(\"folderButton\", this.main, jQuery('.img_add-folder-dark'));\r\n            \r\n                        }\r\n            \r\n\r\n                    }\r\n\r\n                    if (this.main.startupComplete == 0) {\r\n                        this.main.waitForGUICallback();\r\n                        this.main.waitForGUICallback = null;\r\n                    }\r\n\r\n                }\r\n\r\n            }, (errorMessage: string) => {\r\n                jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n            }\r\n            );\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            if(that.main.user.is_testuser){\r\n                that.showLoginForm();\r\n                return;\r\n            }\r\n\r\n            this.main.interpreter.closeAllWebsockets();\r\n\r\n            jQuery('#bitteWartenText').html('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n            jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                this.main.rightDiv.classDiagram.clearAfterLogout();\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n\r\n                    that.showLoginForm();\r\n\r\n                });\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private showLoginForm(){\r\n        jQuery('#login').show();\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        jQuery('#bitteWarten').css('display', 'none');\r\n        jQuery('#login-message').empty();\r\n        this.main.interpreter.setState(InterpreterState.not_initialized);\r\n        this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n        this.main.projectExplorer.fileListPanel.clear();\r\n        this.main.projectExplorer.fileListPanel.setCaption('');\r\n        this.main.projectExplorer.workspaceListPanel.clear();\r\n        this.main.bottomDiv?.console?.clear();\r\n        this.main.interpreter.printManager.clear();\r\n\r\n        if (this.main.user.is_teacher) {\r\n            this.main.teacherExplorer.removePanels();\r\n            this.main.teacherExplorer = null;\r\n        }\r\n\r\n        this.main.currentWorkspace = null;\r\n        this.main.user = null;\r\n\r\n    }\r\n\r\n\r\n    startAnimations() {\r\n        // let $loginAnimationDiv = $('#jo_login_animations');\r\n        // $loginAnimationDiv.empty();\r\n\r\n\r\n        // let $gifAnimation = $('<img src=\"assets/startpage/code_1.gif\" class=\"jo_gif_animation\">');\r\n        // $loginAnimationDiv.append($gifAnimation);\r\n        \r\n        // let left = Math.trunc(Math.random()*(screen.width - 400)) + \"px\";\r\n        // let top = Math.trunc(Math.random()*(screen.height - 400)) + \"px\";\r\n\r\n        // $gifAnimation.css({\r\n        //     \"left\": left,\r\n        //     \"top\": top\r\n        // })\r\n    }\r\n\r\n\r\n}","import { ThemeManager } from \"./ThemeManager\";\r\nimport { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    rightDivWidth: number;\r\n    editorWidth: number;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 8px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').css('width', this.rightDivWidth + \"px\");\r\n            jQuery('#editor>.monaco-editor').css('width', this.editorWidth + 'px');\r\n\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            \r\n            this.rightDivWidth = Number.parseInt(jQuery('#rightdiv').css('width').replace('px', ''));\r\n            this.editorWidth = Number.parseInt(jQuery('#editor>.monaco-editor').css('width').replace('px', ''));\r\n\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n            this.main.getInterpreter().stop();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\n\r\nexport type WindowBackButtonListener = (event: PopStateEvent) => void;\r\n\r\nexport class WindowStateManager {\r\n\r\n    backButtonListener: WindowBackButtonListener;\r\n    oneTimeBackButtonListener: () => void;\r\n\r\n    constructor(private main: Main){\r\n        let that = this;\r\n        history.pushState(\"PreventLeavingSite\", \"\");\r\n        window.addEventListener('popstate', (event: PopStateEvent) => {\r\n            if(event.state == \"PreventLeavingSite\"){\r\n                history.pushState(\"PreventLeavingSite\", \"\");\r\n                that.main.editor.pushHistoryState(false, that.main.editor.getPositionForHistory());\r\n            } else if(this.oneTimeBackButtonListener == null){\r\n                this.backButtonListener(event);\r\n            }\r\n            if(this.oneTimeBackButtonListener != null){\r\n                this.oneTimeBackButtonListener();\r\n                this.oneTimeBackButtonListener = null;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    registerBackButtonListener(listener: WindowBackButtonListener){\r\n        this.backButtonListener = listener;\r\n    }\r\n\r\n    registerOneTimeBackButtonListener(oneTimeBackButtonListener: () => void){\r\n        this.oneTimeBackButtonListener = oneTimeBackButtonListener;\r\n        history.pushState({}, \"\");\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, DoubleType, CharacterType, BooleanType, FloatType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { MainBase } from \"./MainBase.js\"\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\nimport { WindowStateManager } from \"./gui/WindowStateManager.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\n\r\nexport class Main implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    repositoryOn: boolean = true;\r\n\r\n    isEmbedded(): boolean { return false; }\r\n\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n        this.projectExplorer.showProgramPointerPosition(file, position);\r\n    }\r\n    hideProgramPointerPosition() {\r\n        this.projectExplorer.hideProgramPointerPosition();\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) {\r\n        this.projectExplorer.setModuleActive(module);\r\n        this.editor.editor.revealLineInCenter(declaration.position.line);\r\n        this.editor.editor.setPosition({column: declaration.position.column, lineNumber: declaration.position.line});\r\n    }\r\n\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    synchronizationManager: SynchronizationManager;\r\n    repositoryCreateManager: RepositoryCreateManager;\r\n    repositoryUpdateManager: RepositorySettingsManager;\r\n    repositoryCheckoutManager: RepositoryCheckoutManager;\r\n\r\n    windowStateManager: WindowStateManager = new WindowStateManager(this);\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n\r\n    debugger: Debugger;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n\r\n        this.login = new Login(this);\r\n        this.login.initGUI();\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.debugger = new Debugger(this, jQuery('#leftpanel>.jo_debugger'), jQuery('#leftpanel>.jo_projectexplorer'));\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons(jQuery('#controls'), jQuery('#editor')),\r\n            jQuery('#rightdiv-inner .jo_run'));\r\n        this.interpreter.initGUI();\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                // get the matrix values of the displayobject based on its transform properties..\r\n                // lt.a = this._cx * this.scale.x;\r\n                // lt.b = this._sx * this.scale.x;\r\n                // lt.c = this._cy * this.scale.y;\r\n                // lt.d = this._sy * this.scale.y;\r\n                // lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\r\n                // lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '150px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 150 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    // loadWorkspace() {\r\n    //     this.workspaceList.push(getMockupWorkspace(this));\r\n    //     this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n    //     this.projectExplorer.setWorkspaceActive(this.workspaceList[0]);\r\n    //     this.checkStartupComplete();\r\n\r\n    // }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false, true);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n                that.interpreter.closeAllWebsockets();\r\n            }\r\n            \r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.projectExplorer.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        clearTimeout(this.debounceDiagramDrawing);\r\n        this.debounceDiagramDrawing = setTimeout(() => {\r\n            this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                this.currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (this.currentWorkspace == null && this.workspaceList.length > 0) {\r\n            this.currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(this.currentWorkspace, true);\r\n        } else {\r\n            this.projectExplorer.setModuleActive(null);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newWorkspaceHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: MainBase, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        if (id == \"speedControlHelper\" && helperHistory[\"speedControlHelperDone\"]) {\r\n            id = \"stepButtonHelper\";\r\n        }\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"folderButton\":\r\n                    text = `Mit diesem Button können Sie in der Liste der Workspaces Ordner anlegen. \r\n                    <ul>\r\n                    <li>Bestehende Workspaces lassen sich mit der Maus in Ordner ziehen.</li>\r\n                    <li>Wollen Sie einen Workspace in die oberste Ordnerebene bringen, so ziehen Sie ihn einfach auf den \"Workspaces\"-Balken.</li>\r\n                    <li>Über das Kontextmenü der Ordner lassen sich Workspaces und Unterordner anlegen.</li>\r\n                    </ul>`,\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"repositoryButton\":\r\n                    text = `Wenn der aktuelle Workspace mit einem Repository verknüft ist, erscheint hier der \"Synchronisieren-Button\". Ein Klick darauf öffnet einen Dialog, in dem die Dateien des Workspace mit denen des Repositorys abgeglichen werden können.`;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"speedControlHelper\":\r\n                    text = `Mit dem Geschwindigkeitsregler können  \r\n                            Sie einstellen, wie schnell das Programm abläuft. \r\n                            Bei Geschwindigkeiten bis 10 Steps/s wird \r\n                            während des Programmablaufs der Programzeiger gezeigt\r\n                            und die Anzeige der Variablen auf der linken \r\n                            Seite stets aktualisiert.`;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.speedControl.$grip;\r\n                    break;\r\n                case \"newFileHelper\":\r\n                    text = `Es gibt noch keine Programmdatei im Workspace. <br> Nutzen Sie den Button \r\n                        <span class='img_add-file-dark jo_inline-image'></span> um eine Programmdatei anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"newWorkspaceHelper\":\r\n                    text = `Es gibt noch keinen Workspace. <br> Nutzen Sie den Button\r\n                        <span class='img_add-workspace-dark jo_inline-image'></span> um einen Workspace anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"stepButtonHelper\":\r\n                    text = `Mit den Buttons \"Step over\"\r\n                        (<span class='img_step-over-dark jo_inline-image'></span>, Taste F8), \r\n                        \"Step into\" \r\n                        (<span class='img_step-into-dark jo_inline-image'></span>, Taste F7) und \r\n                        \"Step out\" \r\n                        (<span class='img_step-out-dark jo_inline-image'></span>, Taste F9)  \r\n                        können Sie das Programm schrittweise ausführen und sich nach jedem Schritt die Belegung der Variablen ansehen. <br>\r\n                        <ul><li><span class='img_step-over-dark jo_inline-image'></span> Step over führt den nächsten Schritt aus, insbesondere werden Methodenaufrufe in einem Schritt durchgeführt.</li>\r\n                        <li><span class='img_step-into-dark jo_inline-image'></span> Step into führt auch den nächsten Schritt aus, geht bei Methodenaufrufen aber in die Methode hinein und führt auch die Anweisungen innerhalb der Methode schrittweise aus.</li>\r\n                        <li><span class='img_step-out-dark jo_inline-image'></span> Befindet sich die Programmausführung innerhalb einer Methode, so bewirkt ein Klick auf Step out, dass der Rest der Methode ausgeführt wird und die Programmausführung erst nach der Aufrufstelle der Methode anhält.</li>\r\n                        </ul>\r\n                        `;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.$buttonStepOver;\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n                    $element = main.bottomDiv.console.$consoleTab.find('.jo_monaco-editor');\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class KeyboardTool {\r\n    \r\n    element: JQuery<any>;\r\n\r\n    pressedKeys: {[key: string]: boolean} = {};\r\n\r\n    keyPressedCallbacks: ((key: string) => void)[] = [];\r\n    keyUpCallbacks: ((key: string) => void)[] = [];\r\n    keyDownCallbacks: ((key: string) => void)[] = [];\r\n\r\n    constructor(element: JQuery<any>, private main: MainBase){\r\n        this.registerListeners(element);\r\n    }\r\n\r\n    unregisterListeners(){\r\n        this.element.off(\"keydown\");\r\n        this.element.off(\"keyup\");\r\n        this.element.off(\"keypressed\");\r\n    }\r\n\r\n    private registerListeners(element: JQuery<any>){\r\n        this.element = element;\r\n        let that = this;\r\n        element.on(\"keydown\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = true;\r\n\r\n            for(let kpc of that.keyDownCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // prevent <html>-Element from scrolling in embedded mode\r\n            if(this.main.isEmbedded() && this.main.getInterpreter().state == InterpreterState.running && !this.main.getMonacoEditor().hasTextFocus()){\r\n                if([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.key) >= 0)\r\n                e.preventDefault();\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        element.on(\"keyup\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(typeof key == \"undefined\") return;\r\n\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = false;\r\n\r\n            for(let kpc of that.keyUpCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // in ActionManager.init there is a \r\n            if(that.main.isEmbedded && key == \" \"){\r\n                for(let kpc of that.keyPressedCallbacks){\r\n                    kpc(key);\r\n                }    \r\n            }\r\n\r\n            return true;\r\n        });\r\n        element.on(\"keypress\", (e) => {\r\n            let k = e.key;\r\n            if(e.shiftKey && k.length > 1){\r\n                k = \"[shift]+\" + k;\r\n            }\r\n            if(e.ctrlKey && k.length > 1){\r\n                k = \"[ctrl]+\" + k;\r\n            }\r\n            if(e.altKey && k.length > 1){\r\n                k = \"[alt]+\" + k;\r\n            }\r\n            for(let kpc of that.keyPressedCallbacks){\r\n                kpc(k);\r\n            }\r\n            return true;\r\n        });\r\n\r\n    }\r\n\r\n    isPressed(key: string){\r\n        if(key == null) return null;\r\n        return this.pressedKeys[key.toLowerCase()] == true;\r\n    }\r\n\r\n    unsubscribeAllListeners() {\r\n        this.keyPressedCallbacks = [];\r\n    }\r\n\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\n\r\nexport class GamepadTool {\r\n\r\n    gamepads: Gamepad[] = [];\r\n\r\n    constructor(){\r\n        let that = this;\r\n        window.addEventListener(\"gamepadconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad connected at index %d: %s. %d buttons, %d axes.\",\r\n              e.gamepad.index, e.gamepad.id,\r\n              e.gamepad.buttons.length, e.gamepad.axes.length);\r\n              if(that.gamepads.indexOf(e.gamepad) < 0){\r\n                  that.gamepads.push(e.gamepad);\r\n              }\r\n          });\r\n\r\n          window.addEventListener(\"gamepaddisconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad disconnected from index %d: %s\",\r\n              e.gamepad.index, e.gamepad.id);\r\n              let i = that.gamepads.indexOf(e.gamepad);\r\n              if(i >= 0){\r\n                that.gamepads.splice(i, 1);\r\n            }\r\n        });\r\n    }\r\n\r\n    isGamepadButtonPressed(gamepadIndex: number, buttonIndex: number): boolean{\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return false;\r\n        let button = gp.buttons[buttonIndex];\r\n        if(button){\r\n            // return typeof(button) == \"object\" ? button.pressed : (button == 1.0);\r\n            return button.pressed;\r\n        } else {return false;}\r\n    }\r\n\r\n    getGamepadAxisValue(gamepadIndex: number, axisIndex: number): number {\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return 0;\r\n        return gp.axes[axisIndex];\r\n    }\r\n\r\n    isGamepadConnected(gamepadIndex: number){\r\n        return navigator.getGamepads()[gamepadIndex] != null;\r\n    }\r\n\r\n}","import { TextPosition, TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Program, Statement, ReturnStatement } from \"../compiler/parser/Program.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { PrimitiveType, Type, Value, Heap, Method } from \"../compiler/types/Types.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Debugger } from \"./Debugger.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { InputManager } from \"./InputManager.js\";\r\nimport { WorldHelper } from \"../runtimelibrary/graphics/World.js\";\r\nimport { Helper } from \"../main/gui/Helper.js\";\r\nimport { TimerClass } from \"../runtimelibrary/Timer.js\";\r\nimport { KeyboardTool } from \"../tools/KeyboardTool.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\nimport { GroupHelper } from \"../runtimelibrary/graphics/Group.js\";\r\nimport { WebSocketRequestKeepAlive } from \"../communication/Data.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { ProcessingHelper } from \"../runtimelibrary/graphics/Processing.js\";\r\nimport { GNGEreignisbehandlungHelper } from \"../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GamepadTool } from \"../tools/GamepadTool.js\";\r\n\r\nexport enum InterpreterState {\r\n    not_initialized, running, paused, error, done, waitingForInput, waitingForTimersToEnd\r\n}\r\n\r\nexport type ProgramStackElement = {\r\n    program: Program,\r\n    programPosition: number,  // next position to execute after return\r\n    textPosition: TextPosition, // textposition of method call\r\n    method: Method | string,\r\n    callbackAfterReturn: (interpreter: Interpreter) => void,\r\n    isCalledFromOutside: string,\r\n    stackElementsToPushBeforeFirstExecuting?: Value[]\r\n};\r\n\r\nexport class Interpreter {\r\n\r\n    debugger: Debugger;\r\n\r\n    mainModule: Module;\r\n    moduleStore: ModuleStore;\r\n    moduleStoreVersion: number = -100;\r\n\r\n    printManager: PrintManager;\r\n    inputManager: InputManager;\r\n\r\n    stepsPerSecond = 2;\r\n    maxStepsPerSecond = 1000000;\r\n    timerDelayMs = 10;\r\n\r\n    timerId: any;\r\n    state: InterpreterState;\r\n\r\n    currentProgram: Program;\r\n    currentProgramPosition: number;\r\n    currentMethod: Method | string;\r\n    currentCallbackAfterReturn: (interpreter: Interpreter) => void;\r\n    currentIsCalledFromOutside: string\r\n\r\n    programStack: ProgramStackElement[] = [];\r\n\r\n    stack: Value[] = [];\r\n    stackframes: number[] = [];\r\n    currentStackframe: number;\r\n\r\n    heap: Heap = {};\r\n\r\n    timerStopped: boolean = true;\r\n    timerExtern: boolean = false;\r\n\r\n    steps: number = 0;\r\n    timeNetto: number = 0;\r\n    timeWhenProgramStarted: number = 0;\r\n\r\n    stepOverNestingLevel: number = 0;\r\n    leaveLine: number = -1;\r\n    additionalStepFinishedFlag: boolean = false;\r\n\r\n    isFirstStatement: boolean = true;\r\n\r\n    showProgrampointerUptoStepsPerSecond = 15;\r\n\r\n    worldHelper: WorldHelper;\r\n    gngEreignisbehandlungHelper: GNGEreignisbehandlungHelper;\r\n    processingHelper: ProcessingHelper;\r\n\r\n    keyboardTool: KeyboardTool;\r\n    gamepadTool: GamepadTool;\r\n\r\n    webSocketsToCloseAfterProgramHalt: WebSocket[] = [];\r\n\r\n\r\n    actions: string[] = [\"start\", \"pause\", \"stop\", \"stepOver\",\r\n        \"stepInto\", \"stepOut\", \"restart\"];\r\n\r\n    // buttonActiveMatrix[button][i] tells if button is active at \r\n    // InterpreterState i\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n    callbackAfterExecution: () => void;\r\n\r\n    constructor(public main: MainBase, public debugger_: Debugger, public controlButtons: ProgramControlButtons,\r\n        $runDiv: JQuery<HTMLElement>) {\r\n        this.printManager = new PrintManager($runDiv, this.main);\r\n        this.inputManager = new InputManager($runDiv, this.main);\r\n        if (main.isEmbedded()) {\r\n            this.keyboardTool = new KeyboardTool(jQuery('html'), main);\r\n        } else {\r\n            this.keyboardTool = new KeyboardTool(jQuery(window), main);\r\n        }\r\n\r\n        this.gamepadTool = new GamepadTool();\r\n\r\n        this.debugger = debugger_;\r\n\r\n        controlButtons.setInterpreter(this);\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.steps = 0;\r\n        this.timeNetto = 0;\r\n        this.timerEvents = 0;\r\n\r\n        this.timerDelayMs = 7;\r\n\r\n        let that = this;\r\n\r\n        let periodicFunction = () => {\r\n\r\n            if (!that.timerExtern) {\r\n                that.timerFunction(that.timerDelayMs, false, 0.7);\r\n            }\r\n\r\n        }\r\n\r\n        this.timerId = setInterval(periodicFunction, this.timerDelayMs);\r\n        let keepAliveRequest: WebSocketRequestKeepAlive = { command: 5 };\r\n        let req = JSON.stringify(keepAliveRequest);\r\n        setInterval(() => {\r\n            that.webSocketsToCloseAfterProgramHalt.forEach(ws => ws.send(req));\r\n        }, 30000);\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        let startFunction = () => {\r\n            that.stepOverNestingLevel = 1000000;\r\n            that.start();\r\n        };\r\n\r\n        let pauseFunction = () => {\r\n            that.pause();\r\n        };\r\n\r\n        am.registerAction(\"interpreter.start\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Programm starten\", this.controlButtons.$buttonStart);\r\n\r\n        am.registerAction(\"interpreter.pause\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Pause\", this.controlButtons.$buttonPause);\r\n\r\n        am.registerAction(\"interpreter.stop\", [],\r\n            () => {\r\n                that.stop(false);\r\n                that.steps = 0;\r\n            }, \"Programm anhalten\", this.controlButtons.$buttonStop);\r\n\r\n        // this.controlButtons.$buttonEdit.on('click', (e) => {\r\n        //     e.stopPropagation();\r\n        //     am.trigger('interpreter.stop');\r\n        // });\r\n\r\n        am.registerAction(\"interpreter.stepOver\", ['F6'],\r\n            () => {\r\n                this.oneStep(false);\r\n            }, \"Einzelschritt (Step over)\", this.controlButtons.$buttonStepOver);\r\n\r\n        am.registerAction(\"interpreter.stepInto\", ['F7'],\r\n            () => {\r\n                this.oneStep(true);\r\n            }, \"Einzelschritt (Step into)\", this.controlButtons.$buttonStepInto);\r\n\r\n        am.registerAction(\"interpreter.stepOut\", [],\r\n            () => {\r\n                this.stepOut();\r\n            }, \"Step out\", this.controlButtons.$buttonStepOut);\r\n\r\n        am.registerAction(\"interpreter.restart\", [],\r\n            () => {\r\n                that.stop(true);\r\n            }, \"Neu starten\", this.controlButtons.$buttonRestart);\r\n\r\n        this.setState(InterpreterState.not_initialized);\r\n\r\n    }\r\n\r\n    getStartableModule(moduleStore: ModuleStore): Module {\r\n\r\n        let cem: Module;\r\n        cem = this.main.getCurrentlyEditedModule();\r\n\r\n        let currentlyEditedModuleIsClassOnly = false;\r\n\r\n        // decide which module to start\r\n\r\n        // first attempt: is currently edited Module startable?\r\n        if (cem != null) {\r\n            let currentlyEditedModule = moduleStore.findModuleByFile(cem.file);\r\n            if (currentlyEditedModule != null) {\r\n                currentlyEditedModuleIsClassOnly = !cem.hasErrors()\r\n                    && !currentlyEditedModule.isStartable;\r\n                if (currentlyEditedModule.isStartable) {\r\n                    return currentlyEditedModule;\r\n                }\r\n            }\r\n        }\r\n\r\n        // second attempt: which module has been started last time?\r\n        if (this.mainModule != null && currentlyEditedModuleIsClassOnly) {\r\n            let lastMainModule = moduleStore.findModuleByFile(this.mainModule.file);\r\n            if (lastMainModule != null && lastMainModule.isStartable) {\r\n                return lastMainModule;\r\n            }\r\n        }\r\n\r\n        // third attempt: pick first startable module of current workspace\r\n        if (currentlyEditedModuleIsClassOnly) {\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if (m.isStartable) {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n        After user clicks start button (or stepover/stepInto-Button when no program is running) this\r\n        method ist called.\r\n    */\r\n    init() {\r\n\r\n        this.timerStopped = true;\r\n\r\n        let cem = this.main.getCurrentlyEditedModule();\r\n\r\n        cem.getBreakpointPositionsFromEditor();\r\n\r\n        this.main.getBottomDiv()?.console?.clearExceptions();\r\n\r\n        /*\r\n            As long as there is no startable new Version of current workspace we keep current compiled modules so\r\n            that variables and objects defined/instantiated via console can be kept, too. \r\n        */\r\n        if (this.moduleStoreVersion != this.main.version && this.main.getCompiler().atLeastOneModuleIsStartable) {\r\n            this.main.copyExecutableModuleStoreToInterpreter();\r\n            this.heap = {}; // clear variables/objects defined via console\r\n            this.main.getBottomDiv()?.console?.detachValues();  // detach values from console entries\r\n        }\r\n\r\n        let newMainModule = this.getStartableModule(this.moduleStore);\r\n\r\n        if (newMainModule == null) {\r\n            this.setState(InterpreterState.not_initialized);\r\n            return;\r\n        }\r\n\r\n        this.mainModule = newMainModule;\r\n\r\n        this.currentProgramPosition = 0;\r\n\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n        this.currentStackframe = 0;\r\n\r\n        this.setState(InterpreterState.done);\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.stepOverNestingLevel = 1000000;\r\n\r\n\r\n        // Instantiate enum value-objects; initialize static attributes; call static constructors\r\n\r\n        this.programStack.push({\r\n            program: this.mainModule.mainProgram,\r\n            programPosition: 0,\r\n            textPosition: { line: 1, column: 1, length: 0 },\r\n            method: \"Hauptprogramm\",\r\n            callbackAfterReturn: null,\r\n            isCalledFromOutside: \"Hauptprogramm\"\r\n\r\n        })\r\n\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            this.initializeEnums(m);\r\n            this.initializeClasses(m);\r\n        }\r\n\r\n        this.popProgram();\r\n\r\n    }\r\n\r\n    popProgram() {\r\n        let p = this.programStack.pop();\r\n        this.currentProgram = p.program;\r\n        this.currentProgramPosition = p.programPosition;\r\n        this.currentMethod = p.method;\r\n        this.currentCallbackAfterReturn = p.callbackAfterReturn;\r\n        this.currentIsCalledFromOutside = p.isCalledFromOutside;\r\n        if (p.stackElementsToPushBeforeFirstExecuting != null) {\r\n\r\n            this.stackframes.push(this.currentStackframe == null ? 0 : this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n\r\n            for (let se of p.stackElementsToPushBeforeFirstExecuting) this.stack.push(se);\r\n            p.stackElementsToPushBeforeFirstExecuting = null;\r\n        }\r\n    }\r\n\r\n    initializeClasses(m: Module) {\r\n\r\n        for (let klass of m.typeStore.typeList) {\r\n            if (klass instanceof Klass) {\r\n                klass.staticClass.classObject = new RuntimeObject(klass.staticClass);\r\n                klass.pushStaticInitializationPrograms(this.programStack);\r\n            }\r\n\r\n            if (klass instanceof Enum) {\r\n                // let staticValueMap = klass.staticClass.classObject.attributeValues.get(klass.identifier);\r\n                let staticValueList = klass.staticClass.classObject.attributes;\r\n                for (let enumInfo of klass.enumInfoList) {\r\n                    // staticValueMap.get(enumInfo.identifier).value = enumInfo.object;\r\n                    staticValueList[enumInfo.ordinal].value = enumInfo.object;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    initializeEnums(m: Module) {\r\n\r\n        for (let enumClass of m.typeStore.typeList) {\r\n            if (enumClass instanceof Enum) {\r\n\r\n                enumClass.pushStaticInitializationPrograms(this.programStack);\r\n\r\n                let valueList: Value[] = [];\r\n\r\n                let valueInitializationProgram: Program = {\r\n                    module: enumClass.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                };\r\n\r\n                let hasAttributeInitializationProgram = enumClass.attributeInitializationProgram.statements.length > 0;\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    this.programStack.push({\r\n                        program: valueInitializationProgram,\r\n                        programPosition: 0,\r\n                        textPosition: { line: 1, column: 1, length: 0 },\r\n                        method: \"Attribut-Initialisierung der Klasse \" + enumClass.identifier,\r\n                        callbackAfterReturn: null,\r\n                        isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                    });\r\n\r\n                }\r\n\r\n\r\n                for (let enumInfo of enumClass.enumInfoList) {\r\n                    enumInfo.object = new EnumRuntimeObject(enumClass, enumInfo);\r\n\r\n                    valueList.push({\r\n                        type: enumClass,\r\n                        value: enumInfo.object\r\n                    });\r\n\r\n                    if (enumInfo.constructorCallProgram != null) {\r\n                        this.programStack.push({\r\n                            program: enumInfo.constructorCallProgram,\r\n                            programPosition: 0,\r\n                            textPosition: { line: 1, column: 1, length: 0 },\r\n                            method: \"Konstruktor von \" + enumClass.identifier,\r\n                            callbackAfterReturn: null,\r\n                            isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                        });\r\n\r\n                    }\r\n\r\n                    if (hasAttributeInitializationProgram) {\r\n                        valueInitializationProgram.statements.push({\r\n                            type: TokenType.initializeEnumValue,\r\n                            position: enumInfo.position,\r\n                            enumClass: enumClass,\r\n                            valueIdentifier: enumInfo.identifier\r\n                        })\r\n                    }\r\n\r\n                }\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    valueInitializationProgram.statements.push({\r\n                        type: TokenType.programEnd,\r\n                        position: { line: 0, column: 0, length: 1 }\r\n                    })\r\n                }\r\n\r\n                enumClass.valueList = {\r\n                    type: new ArrayType(enumClass),\r\n                    value: valueList\r\n                };\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    timerEvents: number = 0;\r\n    start(callback?: () => void) {\r\n\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n\r\n        this.callbackAfterExecution = callback;\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        if (this.state == InterpreterState.error || this.state == InterpreterState.done) {\r\n            this.init();\r\n            this.resetRuntime();\r\n        }\r\n\r\n        this.setState(InterpreterState.running);\r\n\r\n        this.hideProgrampointerPosition();\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.timerStopped = false;\r\n\r\n        this.getTimerClass().startTimer();\r\n\r\n    }\r\n\r\n    getTimerClass(): TimerClass {\r\n        let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n        return <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n    }\r\n\r\n    lastStepTime: number = 0;\r\n    lastTimeBetweenEvents: number = 0;\r\n\r\n    timerFunction(timerDelayMs: number, forceRun: boolean, maxWorkloadFactor: number) {\r\n\r\n        let t0 = performance.now();\r\n\r\n        if (!forceRun) {\r\n            let timeBetweenSteps = 1000 / this.stepsPerSecond;\r\n            if (this.timerStopped || t0 - this.lastStepTime < timeBetweenSteps) return;\r\n            this.lastStepTime = t0;\r\n        }\r\n\r\n        this.lastTimeBetweenEvents = t0 - this.lastStepTime;\r\n\r\n        let n_stepsPerTimerGoal = forceRun ? Number.MAX_SAFE_INTEGER : this.stepsPerSecond * this.timerDelayMs / 1000;\r\n\r\n        this.timerEvents++;\r\n\r\n        let exception: string;\r\n        let i = 0;\r\n\r\n        while (i < n_stepsPerTimerGoal && !this.timerStopped && exception == null &&\r\n            (performance.now() - t0) / timerDelayMs < maxWorkloadFactor\r\n        ) {\r\n            exception = this.nextStep();\r\n            if (exception != null) {\r\n                break;\r\n            }\r\n\r\n            if (this.stepsPerSecond <= this.showProgrampointerUptoStepsPerSecond && !forceRun) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n\r\n            if (this.state == InterpreterState.error ||\r\n                this.state == InterpreterState.done) {\r\n                this.timerStopped = true;\r\n            }\r\n\r\n\r\n            if (this.stepOverNestingLevel < 0 && !this.timerStopped) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n                let position = node.position;\r\n                if (position == null || position.line != this.leaveLine) {\r\n                    this.timerStopped = true;\r\n                    this.setState(InterpreterState.paused);\r\n\r\n                    if (this.comesStatement(TokenType.closeStackframe)) {\r\n                        exception = this.nextStep();\r\n                        if (exception == null && this.comesStatement(TokenType.programEnd)) {\r\n                            exception = this.nextStep();\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n        }\r\n\r\n        if (this.timerStopped) {\r\n            if (this.state == InterpreterState.paused || this.state == InterpreterState.waitingForInput) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n            if (this.callbackAfterExecution != null) {\r\n                this.callbackAfterExecution();\r\n                this.callbackAfterExecution = null;\r\n            }\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        this.timeNetto += dt;\r\n\r\n        // if (\r\n        //     this.timerEvents % 300 == 0) {\r\n        //     console.log(\"Last time between Events: \" + this.lastTimeBetweenEvents);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    throwException(exception: string) {\r\n        this.timerStopped = true;\r\n        this.setState(InterpreterState.error);\r\n\r\n        let $errorDiv = jQuery('<div class=\"jo_exception\"></div>');\r\n\r\n        let consolePresent: boolean = true;\r\n        if (this.main.isEmbedded()) {\r\n            let mainEmbedded: MainEmbedded = <MainEmbedded>this.main;\r\n            let config = mainEmbedded.config;\r\n            if (config.withBottomPanel != true && config.withConsole != true) {\r\n                consolePresent = false;\r\n                let positionString = \"\";\r\n                let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n                if (currentStatement != null) {\r\n                    let textPosition = currentStatement?.position;\r\n                    positionString = \" in Zeile \" + textPosition.line + \", Spalte \" + textPosition.column;\r\n\r\n                    this.main.getBottomDiv()?.console?.showError(this.currentProgram.module, textPosition);\r\n                }\r\n\r\n                alert(\"Fehler\" + positionString + \": \" + exception);\r\n\r\n            }\r\n        }\r\n\r\n        if (consolePresent) {\r\n            $errorDiv.append(jQuery(\"<span class='jo_error-caption'>Fehler:</span>&nbsp;\" + exception + \"<br>\"));\r\n            this.pushCurrentProgram();\r\n\r\n            let first = true;\r\n            for (let i = this.programStack.length - 1; i >= 0; i--) {\r\n\r\n                let p = this.programStack[i];\r\n                let m = (p.method instanceof Method) ? p.method.identifier : p.method;\r\n                let s: string = \"<span class='jo_error-caption'>\" + (first ? \"Ort\" : \"aufgerufen von\") + \": </span>\" + m;\r\n                if (p.textPosition != null) s += \" <span class='jo_runtimeErrorPosition'>(Z \" + p.textPosition.line + \", S \" + p.textPosition.column + \")</span>\";\r\n                s += \"<br>\";\r\n                let errorLine = jQuery(s);\r\n                if (p.textPosition != null) {\r\n                    let that = this;\r\n                    jQuery(errorLine[2]).on('mousedown', () => {\r\n                        that.main.getBottomDiv()?.console?.showError(p.program.module, p.textPosition);\r\n                    });\r\n                }\r\n                $errorDiv.append(errorLine);\r\n\r\n                first = false;\r\n                if (p.isCalledFromOutside != null) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let console = this.main.getBottomDiv()?.console;\r\n\r\n            if (console != null) {\r\n                console.writeConsoleEntry($errorDiv, null, 'rgba(255, 0, 0, 0.4');\r\n                console.showTab();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    hideProgrampointerPosition() {\r\n\r\n        if (this.state == InterpreterState.running) {\r\n\r\n            if (this.stepsPerSecond > this.showProgrampointerUptoStepsPerSecond) {\r\n                this.main.hideProgramPointerPosition();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    comesStatement(statement: TokenType) {\r\n        if (this.currentProgram == null) return false;\r\n        if (this.currentProgramPosition > this.currentProgram.statements.length - 1) return false;\r\n        return this.currentProgram.statements[this.currentProgramPosition].type == statement;\r\n    }\r\n\r\n    resetRuntime() {\r\n        this.printManager.clear();\r\n        this.worldHelper?.destroyWorld();\r\n        this.processingHelper?.destroyWorld();\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n    }\r\n\r\n    stop(restart: boolean = false) {\r\n        this.inputManager.hide();\r\n        this.setState(InterpreterState.paused);\r\n        this.timerStopped = true;\r\n\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.spriteAnimations = [];\r\n        }\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n        this.main.hideProgramPointerPosition();\r\n\r\n        this.getTimerClass().stopTimer();\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.cacheAsBitmap();\r\n        }\r\n\r\n        this.heap = {};\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n\r\n\r\n        setTimeout(() => {\r\n            this.setState(InterpreterState.done);\r\n            this.main.hideProgramPointerPosition();\r\n            if (restart) {\r\n                this.start();\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    pause() {\r\n        this.setState(InterpreterState.paused);\r\n        this.showProgramPointerAndVariables();\r\n        this.timerStopped = true;\r\n    }\r\n\r\n    lastPrintedModule: Module = null;\r\n    showProgramPointerAndVariables() {\r\n        if (this.currentProgram == null) return;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (node == null) return;\r\n        let position = node.position;\r\n        if (position != null) {\r\n            this.main.showProgramPointerPosition(this.currentProgram.module.file, position);\r\n            this.debugger.showData(this.currentProgram, position, this.stack, this.currentStackframe, this.heap);\r\n            let bottomDiv = this.main.getBottomDiv();\r\n            if (bottomDiv.programPrinter != null) {\r\n                if (this.currentProgram.module != this.lastPrintedModule) {\r\n                    this.main.getBottomDiv().printModuleToBottomDiv(null, this.currentProgram.module);\r\n                    this.lastPrintedModule = this.currentProgram.module;\r\n                }\r\n                this.main.getBottomDiv().programPrinter.showNode(node);\r\n            }\r\n        }\r\n    }\r\n\r\n    stepOut() {\r\n        this.stepOverNestingLevel = 0;\r\n        this.start();\r\n    }\r\n\r\n    oneStep(stepInto: boolean) {\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n        this.isFirstStatement = true;\r\n        if (this.state != InterpreterState.paused) {\r\n            this.init();\r\n            if (this.state == InterpreterState.not_initialized) {\r\n                return;\r\n            }\r\n            this.resetRuntime();\r\n            this.showProgramPointerAndVariables();\r\n            this.setState(InterpreterState.paused);\r\n        } else {\r\n            this.stepOverNestingLevel = 10000;\r\n            let oldStepOverNestingLevel = this.stepOverNestingLevel;\r\n            let node = this.currentProgram.statements[this.currentProgramPosition];\r\n            let position = node.position;\r\n            let exception = this.nextStep();\r\n            if (exception != null) {\r\n                this.throwException(exception);\r\n                return;\r\n            }\r\n\r\n            if (!stepInto && this.stepOverNestingLevel > oldStepOverNestingLevel) {\r\n                this.stepOverNestingLevel = 0;\r\n                if (position != null) {\r\n                    this.leaveLine = position.line;\r\n                } else {\r\n                    this.leaveLine = -1;\r\n                }\r\n                this.start();\r\n            } else\r\n                //@ts-ignore\r\n                if (this.state == InterpreterState.done) {\r\n                    this.main.hideProgramPointerPosition();\r\n                } else {\r\n                    this.showProgramPointerAndVariables();\r\n                    //@ts-ignore\r\n                    if (this.state != InterpreterState.waitingForInput) {\r\n                        this.setState(InterpreterState.paused);\r\n                    }\r\n                }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    nextStep(): string {\r\n\r\n        let stepFinished: boolean = false;\r\n\r\n        let node: Statement;\r\n\r\n        let exception: string;\r\n\r\n        while (!stepFinished && !this.additionalStepFinishedFlag && exception == null) {\r\n\r\n\r\n            if (this.currentProgramPosition > this.currentProgram.statements.length - 1) {\r\n                this.setState(InterpreterState.done);\r\n                break;\r\n            }\r\n\r\n            node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n            if (node.stepFinished != null) {\r\n                stepFinished = node.stepFinished;\r\n            }\r\n\r\n            exception = this.executeNode(node);\r\n\r\n        }\r\n\r\n        this.additionalStepFinishedFlag = false;\r\n\r\n        this.steps++;\r\n\r\n        return exception;\r\n    }\r\n\r\n    executeNode(node: Statement): string {\r\n\r\n        if (node.breakpoint != null && !this.isFirstStatement) {\r\n            this.additionalStepFinishedFlag = true;\r\n            this.pause();\r\n            return;\r\n        }\r\n\r\n        this.isFirstStatement = false;\r\n        let stackTop = this.stack.length - 1;\r\n        let stackframeBegin = this.currentStackframe;\r\n        let stack = this.stack;\r\n        let value: Value;\r\n\r\n        switch (node.type) {\r\n            case TokenType.castValue:\r\n                let relPos = node.stackPosRelative == null ? 0 : node.stackPosRelative;\r\n                value = stack[stackTop + relPos];\r\n                stack[stackTop + relPos] = value.type.castTo(value, node.newType);\r\n                break;\r\n            case TokenType.checkCast:\r\n                value = stack[stackTop];\r\n                if (value.value == null) break;\r\n                let rto = <RuntimeObject>value.value;\r\n                if (node.newType instanceof Klass) {\r\n                    if (typeof rto == \"object\") {\r\n                        if (!rto.class.hasAncestorOrIs(node.newType)) {\r\n                            return (\"Das Objekt der Klasse \" + rto.class.identifier + \" kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    } else {\r\n                        if (typeof rto == \"number\" && [\"Integer\", \"Double\", \"Float\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zahl kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"string\" && [\"String\", \"Character\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zeichenkette kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"boolean\" && node.newType.identifier != \"Boolean\") {\r\n                            return (\"Ein boolescher Wert kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    }\r\n                } else if (node.newType instanceof Interface) {\r\n                    if (!(<Klass>rto.class).implementsInterface(node.newType)) {\r\n                        return (\"Das Objekt der Klasse \" + rto.class.identifier + \" implementiert nicht das Interface \" + node.newType.identifier + \".\");\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.localVariableDeclaration:\r\n                let variable = node.variable;\r\n                let type = variable.type;\r\n                value = {\r\n                    type: type,\r\n                    value: null\r\n                };\r\n                if (type instanceof PrimitiveType) {\r\n                    value.value = type.initialValue;\r\n                }\r\n                stack[variable.stackPos + stackframeBegin] = value;\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    stack.push(value);\r\n                }\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                stack.push(stack[node.stackposOfVariable + stackframeBegin]);\r\n                break;\r\n            case TokenType.popAndStoreIntoVariable:\r\n                stack[node.stackposOfVariable + stackframeBegin] = stack.pop();\r\n                break;\r\n            case TokenType.pushAttribute:\r\n                let object1 = node.useThisObject ? stack[stackframeBegin].value : stack.pop().value;\r\n                if (object1 == null) return \"Zugriff auf ein Attribut (\" + node.attributeIdentifier + \") des null-Objekts\";\r\n                let value1 = (<RuntimeObject>object1).getValue(node.attributeIndex);\r\n                if (value1?.updateValue != null) {\r\n                    value1.updateValue(value1);\r\n                }\r\n                stack.push(value1);\r\n                break;\r\n            case TokenType.pushArrayLength:\r\n                let a = stack.pop().value;\r\n                if (a == null) return \"Zugriff auf das length-Attribut des null-Objekts\";\r\n                stack.push({ type: intPrimitiveType, value: (<any[]>a).length });\r\n                break;\r\n            case TokenType.assignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value = value.value;\r\n                if (!node.leaveValueOnStack) {\r\n                    stack.pop();\r\n                }\r\n                break;\r\n            case TokenType.plusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value += value.value;\r\n                break;\r\n            case TokenType.minusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value -= value.value;\r\n                break;\r\n            case TokenType.multiplicationAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value *= value.value;\r\n                break;\r\n            case TokenType.divisionAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value /= value.value;\r\n                break;\r\n            case TokenType.moduloAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value %= value.value;\r\n                break;\r\n            case TokenType.ANDAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value &= value.value;\r\n                break;\r\n            case TokenType.ORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value |= value.value;\r\n                break;\r\n            case TokenType.XORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value ^= value.value;\r\n                break;\r\n            case TokenType.shiftLeftAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value <<= value.value;\r\n                break;\r\n            case TokenType.shiftRightAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>= value.value;\r\n                break;\r\n            case TokenType.shiftRightUnsignedAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>>= value.value;\r\n                break;\r\n            case TokenType.binaryOp:\r\n                let secondOperand = stack.pop();\r\n                let resultValue =\r\n                    node.leftType.compute(node.operator, stack[stackTop - 1], secondOperand);\r\n                let resultType = node.leftType.getResultType(node.operator, secondOperand.type);\r\n                stack[stackTop - 1] = {\r\n                    type: resultType,\r\n                    value: resultValue\r\n                };\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let oldValue = stack.pop();\r\n                if (node.operator == TokenType.minus) {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: -oldValue.value\r\n                    })\r\n                } else {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: !oldValue.value\r\n                    })\r\n                }\r\n                break;\r\n            case TokenType.pushConstant:\r\n                stack.push({\r\n                    value: node.value,\r\n                    type: node.dataType\r\n                });\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                if (node.klass instanceof Klass) {\r\n                    stack.push({\r\n                        type: node.klass.staticClass,\r\n                        value: node.klass.staticClass.classObject\r\n                    });\r\n                } else {\r\n                    // This is to enable instanceof operator with interfaces\r\n                    stack.push({\r\n                        type: node.klass,\r\n                        value: node.klass\r\n                    });\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                value = node.klass.classObject.getValue(node.attributeIndex);\r\n                if (value.updateValue != null) {\r\n                    value.updateValue(value);\r\n                }\r\n                stack.push(value);\r\n                break;\r\n            // case TokenType.pushStaticAttributeIntrinsic:\r\n            //     value = node.\r\n            //     stack.push({ type: node.attribute.type, value: node.attribute.updateValue(null) });\r\n            //     break;\r\n            case TokenType.selectArrayElement:\r\n                let index = stack.pop();\r\n                let array = stack.pop();\r\n\r\n                if (array.value == null) return \"Zugriff auf ein Element eines null-Feldes\";\r\n\r\n                if (index.value >= array.value.length || index.value < 0) {\r\n                    return \"Zugriff auf das Element mit Index \" + index.value + \" eines Feldes der Länge \" + array.value.length;\r\n                }\r\n                stack.push(array.value[index.value]);\r\n                break;\r\n\r\n            case TokenType.callMainMethod:\r\n                this.stack.push({ value: node.staticClass.classObject, type: node.staticClass });\r\n\r\n                let parameter: Value = {\r\n                    value: [{ value: \"Test\", type: stringPrimitiveType }],\r\n                    type: new ArrayType(stringPrimitiveType)\r\n                };\r\n                let parameterBegin2 = stackTop + 2; // 1 parameter\r\n\r\n                this.stack.push(parameter);\r\n\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.programStack.push({\r\n                    program: this.currentProgram,\r\n                    programPosition: this.currentProgramPosition + 1,\r\n                    textPosition: node.position,\r\n                    method: this.currentMethod,\r\n                    callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                    isCalledFromOutside: null\r\n                });\r\n\r\n                this.currentCallbackAfterReturn = null;\r\n                this.currentStackframe = parameterBegin2;\r\n\r\n                this.currentProgram = node.method.program;\r\n                this.currentMethod = node.method;\r\n                this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                for (let i = 0; i < node.method.reserveStackForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n\r\n                // this.stepOverNestingLevel++;\r\n\r\n                break;\r\n            case TokenType.makeEllipsisArray:\r\n                let ellipsisArray: Value[] = stack.splice(stack.length - node.parameterCount, node.parameterCount);\r\n\r\n                stack.push({\r\n                    value: ellipsisArray,\r\n                    type: node.arrayType\r\n                })\r\n\r\n                break;\r\n            case TokenType.callMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method = node.method;\r\n\r\n                let parameterBegin = stackTop + 1 + node.stackframeBegin;\r\n                let parameters1 = method.parameterlist.parameters;\r\n                for (let i = parameterBegin + 1; i <= stackTop; i++) {\r\n                    if (this.stack[i] != null && this.stack[i].type instanceof PrimitiveType) {\r\n                        stack[i] = {\r\n                            type: parameters1[i - parameterBegin - 1].type,  // cast to parameter type...\r\n                            value: stack[i].value\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (stack[parameterBegin].value == null && !method.isStatic) {\r\n                    return \"Aufruf der Methode \" + method.identifier + \" des null-Objekts\";\r\n                }\r\n\r\n                if (method.isAbstract || method.isVirtual && !node.isSuperCall) {\r\n                    let object = stack[parameterBegin];\r\n                    method = (<Klass>(<RuntimeObject>object.value).class).getMethodBySignature(method.signature);\r\n                }\r\n\r\n                if (method == null) {\r\n                    // TODO: raise runtime error\r\n                    break;\r\n                }\r\n\r\n                if (method.invoke != null) {\r\n                    let rt = method.getReturnType();\r\n                    let parameters = stack.splice(parameterBegin);\r\n                    let returnValue = method.invoke(parameters);\r\n                    if (rt != null && rt.identifier != 'void') {\r\n                        stack.push({\r\n                            value: returnValue,\r\n                            type: rt\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.stackframes.push(this.currentStackframe);\r\n                    this.programStack.push({\r\n                        program: this.currentProgram,\r\n                        programPosition: this.currentProgramPosition + 1,\r\n                        textPosition: node.position,\r\n                        method: this.currentMethod,\r\n                        callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                        isCalledFromOutside: null\r\n                    });\r\n\r\n                    this.currentCallbackAfterReturn = null;\r\n                    this.currentStackframe = parameterBegin;\r\n\r\n                    this.currentProgram = method.program;\r\n                    this.currentMethod = method;\r\n                    this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                    for (let i = 0; i < method.reserveStackForLocalVariables; i++) {\r\n                        stack.push(null);\r\n                    }\r\n\r\n                    this.stepOverNestingLevel++;\r\n                    this.additionalStepFinishedFlag = true;\r\n                }\r\n                break;\r\n            case TokenType.callInputMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method1 = node.method;\r\n\r\n                let parameterBegin1 = stackTop + 1 + node.stackframeBegin;\r\n\r\n                let parameters = stack.splice(parameterBegin1);\r\n\r\n                this.timerStopped = true;\r\n                let oldState = this.state;\r\n                this.setState(InterpreterState.waitingForInput);\r\n                // this.main.showProgramPointerPosition(this.currentProgram.module.file, node.position);\r\n                this.showProgramPointerAndVariables();\r\n\r\n                let that = this;\r\n                this.inputManager.readInput(method1, parameters, (value: Value) => {\r\n                    stack.push(value);\r\n                    this.main.hideProgramPointerPosition();\r\n                    that.setState(InterpreterState.paused);\r\n                    if (oldState == InterpreterState.running) {\r\n                        that.start();\r\n                    } else {\r\n                        that.showProgramPointerAndVariables();\r\n                        // that.oneStep(false);\r\n                    }\r\n                });\r\n                break;\r\n\r\n            case TokenType.return:\r\n                this.return(node, stack);\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                stack.splice(stackTop + 1 - node.popCount);\r\n                break;\r\n            case TokenType.initStackframe:\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.currentStackframe = stackTop + 1;\r\n                for (let i = 0; i < node.reserveForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n                break;\r\n            case TokenType.closeStackframe:\r\n                stack.splice(stackframeBegin);\r\n                this.currentStackframe = this.stackframes.pop();\r\n                break;\r\n            case TokenType.newObject:\r\n                let object = new RuntimeObject(node.class);\r\n\r\n                value = {\r\n                    value: object,\r\n                    type: node.class\r\n                };\r\n\r\n                stack.push(value);\r\n                if (node.subsequentConstructorCall) {\r\n                    stack.push(value);\r\n                    stackTop++;\r\n                }\r\n\r\n                let klass: Klass = node.class;\r\n\r\n                while (klass != null) {\r\n                    let aip = klass.attributeInitializationProgram;\r\n                    if (aip.statements.length > 0) {\r\n\r\n                        this.stackframes.push(this.currentStackframe);\r\n                        this.programStack.push({\r\n                            program: this.currentProgram,\r\n                            programPosition: this.currentProgramPosition + 1,\r\n                            textPosition: node.position,\r\n                            method: this.currentMethod,\r\n                            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                            isCalledFromOutside: null\r\n                        });\r\n\r\n                        this.currentCallbackAfterReturn = null;\r\n                        this.currentStackframe = stackTop + 1;\r\n\r\n                        this.currentProgram = aip;\r\n                        this.currentProgramPosition = -1;\r\n                        this.currentMethod = \"Konstruktor von \" + klass.identifier;\r\n                        this.stepOverNestingLevel++;\r\n\r\n                        this.additionalStepFinishedFlag = true;\r\n\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                // N.B.: constructor call is next statement\r\n\r\n                break;\r\n            case TokenType.processPostConstructorCallbacks:\r\n                value = stack[stackTop];\r\n                let classType = <Klass>value.type;\r\n                for (let pcc of classType.getPostConstructorCallbacks()) {\r\n                    pcc(value.value);\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopInit:\r\n                stack[node.stackPosOfCounter + stackframeBegin] = {\r\n                    type: intPrimitiveType,\r\n                    value: 0\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n                let counter: number = stack[node.stackPosOfCounter + stackframeBegin].value++;\r\n                let collection = stack[node.stackPosOfCollection + stackframeBegin].value;\r\n\r\n                switch (node.kind) {\r\n                    case \"array\":\r\n                        if (counter < (<any[]>collection).length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = (<any[]>collection)[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = (<any[]>collection)[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"internalList\":\r\n                        let list: any[] = (<ListHelper>(<RuntimeObject>collection).intrinsicData[\"ListHelper\"]).valueArray;\r\n                        if (counter < list.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        let list1: any[] = (<GroupHelper>(<RuntimeObject>collection).intrinsicData[\"Actor\"]).shapes;\r\n                        if (counter < list1.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list1[counter];\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list1[counter].klass;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n                value = stack[stackTop];\r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.incrementDecrementAfter:\r\n                value = stack[stackTop];\r\n                // replace value by copy:\r\n                stack[stackTop] = {\r\n                    value: value.value,\r\n                    type: value.type\r\n                };\r\n                // increment value which is not involved in subsequent \r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.jumpAlways:\r\n                this.currentProgramPosition = node.destination - 1;\r\n                break;\r\n            case TokenType.jumpIfTrue:\r\n                value = stack.pop();\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalse:\r\n                value = stack.pop();\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.noOp:\r\n                break;\r\n            case TokenType.programEnd:\r\n\r\n                if (this.programStack.length > 0) {\r\n                    this.popProgram();\r\n                    this.currentProgramPosition--; // gets increased later on after switch ends\r\n                    this.additionalStepFinishedFlag = true;\r\n                    this.leaveLine = -1;\r\n\r\n                    if (node.pauseAfterProgramEnd) {\r\n                        this.stepOverNestingLevel = -1;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                if ((this.worldHelper != null && this.worldHelper.hasActors()) || this.processingHelper != null\r\n                    || (this.gngEreignisbehandlungHelper != null && this.gngEreignisbehandlungHelper.hasAktionsEmpfaenger())) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n                let timerClass: TimerClass = <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n                if (timerClass.timerEntries.length > 0) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                // this.setState(InterpreterState.done);\r\n                this.currentProgram = null;\r\n                this.currentProgramPosition = -1;\r\n                this.additionalStepFinishedFlag = true;\r\n\r\n                Helper.showHelper(\"speedControlHelper\", this.main);\r\n\r\n                this.printManager.showProgramEnd();\r\n\r\n                if (this.steps > 0) {\r\n                    let dt = performance.now() - this.timeWhenProgramStarted;\r\n                    let message = 'Executed ' + this.steps + ' steps in ' + this.round(dt)\r\n                        + ' ms (' + this.round(this.steps / dt * 1000) + ' steps/s)';\r\n                    this.main.getBottomDiv()?.console?.writeConsoleEntry(message, null);\r\n                    // console.log(this.timerEvents + \" TimeEvents in \" + dt + \" ms ergibt ein Event alle \" + dt/this.timerEvents + \" ms.\");\r\n                    // console.log(\"Vorgegebene Timerfrequenz: Alle \" + this.timerDelayMs + \" ms\");\r\n                    this.steps = -1;\r\n                }\r\n\r\n                // if (this.worldHelper != null) {\r\n                //     this.worldHelper.spriteAnimations = [];\r\n                // }\r\n                // this.gngEreignisbehandlungHelper?.detachEvents();\r\n                // this.gngEreignisbehandlungHelper = null;\r\n\r\n                // this.main.hideProgramPointerPosition();\r\n\r\n                // if(this.worldHelper != null){\r\n                //     this.worldHelper.cacheAsBitmap();\r\n                // }\r\n\r\n                this.currentProgramPosition--;\r\n                this.stop();\r\n                break;\r\n            case TokenType.print:\r\n            case TokenType.println:\r\n                let text = null;\r\n                let color = null;\r\n                if (node.withColor) color = <string | number>stack.pop().value;\r\n                if (!node.empty) text = <string>stack.pop().value;\r\n                if (node.type == TokenType.println) {\r\n                    this.printManager.println(text, color);\r\n                } else {\r\n                    this.printManager.print(text, color);\r\n                }\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                let counts: number[] = [];\r\n                for (let i = 0; i < node.dimension; i++) {\r\n                    counts.push(<number>stack.pop().value);\r\n                }\r\n                stack.push(this.makeEmptyArray(counts, node.arrayType));\r\n                break;\r\n            case TokenType.beginArray:\r\n                stack.push({\r\n                    type: node.arrayType,\r\n                    value: []\r\n                });\r\n                break;\r\n            case TokenType.addToArray:\r\n                stackTop -= node.numberOfElementsToAdd;\r\n                // let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd);\r\n                let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd).map(tvo => ({ type: tvo.type, value: tvo.value }));\r\n                stack[stackTop].value = (<any[]>stack[stackTop].value).concat(values);\r\n                break;\r\n            case TokenType.pushEnumValue:\r\n                let enumInfo = node.enumClass.identifierToInfoMap[node.valueIdentifier];\r\n                stack.push(node.enumClass.valueList.value[enumInfo.ordinal]);\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                let switchValue = stack.pop().value;\r\n                let destination = node.destinationMap[switchValue];\r\n                if (destination != null) {\r\n                    this.currentProgramPosition = destination - 1; // it will be increased after this switch-statement!\r\n                } else {\r\n                    if (node.defaultDestination != null) {\r\n                        this.currentProgramPosition = node.defaultDestination - 1;\r\n                    }\r\n                    // there's a jumpnode after this node which jumps right after last switch case,\r\n                    // so there's nothing more to do here.\r\n                }\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n\r\n                let v = node.variable;\r\n                this.heap[v.identifier] = v;\r\n                v.value = {\r\n                    type: v.type,\r\n                    value: (v.type instanceof PrimitiveType) ? v.type.initialValue : null\r\n                }\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    this.stack.push(v.value);\r\n                }\r\n\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                let v1 = this.heap[node.identifier];\r\n                if (v1 != null) {\r\n                    this.stack.push(v1.value);\r\n                } else {\r\n                    return \"Die Variable \" + node.identifier + \" ist nicht bekannt.\";\r\n                }\r\n                break;\r\n            case TokenType.returnIfDestroyed:\r\n                let shapeRuntimeObject: RuntimeObject = this.stack[stackframeBegin].value;\r\n                if (shapeRuntimeObject != null) {\r\n                    let shape = shapeRuntimeObject.intrinsicData[\"Actor\"];\r\n                    if (shape[\"isDestroyed\"] == true) {\r\n                        this.return(null, stack);\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n\r\n\r\n        this.currentProgramPosition++;\r\n\r\n    }\r\n    return(node: ReturnStatement | null, stack: Value[]) {\r\n\r\n        let currentCallbackAfterReturn = this.currentCallbackAfterReturn;\r\n\r\n        if (node != null && node.copyReturnValueToStackframePos0) {\r\n            let returnValue: Value = stack.pop();\r\n            stack[this.currentStackframe] = returnValue;\r\n            stack.splice(this.currentStackframe + 1);\r\n        } else {\r\n            stack.splice(this.currentStackframe + ((node != null && node.leaveThisObjectOnStack) ? 1 : 0));\r\n        }\r\n\r\n        this.currentStackframe = this.stackframes.pop();\r\n\r\n        this.popProgram();\r\n        if (node != null && node.methodWasInjected == true) this.currentProgramPosition++;\r\n        this.currentProgramPosition--;  // position gets increased by one at the end of this switch-statement, so ... - 1\r\n        this.stepOverNestingLevel--;\r\n\r\n        if (currentCallbackAfterReturn != null) {\r\n            currentCallbackAfterReturn(this);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeEmptyArray(counts: number[], type: Type): Value {\r\n        let type1 = (<ArrayType>type).arrayOfType;\r\n        if (counts.length == 1) {\r\n            let array: Value[] = [];\r\n            for (let i = 0; i < counts[0]; i++) {\r\n                let v = {\r\n                    type: type1,\r\n                    value: null\r\n                };\r\n\r\n                if (type1 instanceof PrimitiveType) {\r\n                    v.value = type1.initialValue;\r\n                }\r\n\r\n                array.push(v);\r\n\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        } else {\r\n            let array: Value[] = [];\r\n            let n = counts.pop();\r\n            for (let i = 0; i < n; i++) {\r\n                array.push(this.makeEmptyArray(counts, type1));\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    round(n: number): string {\r\n        return \"\" + Math.round(n * 10000) / 10000;\r\n    }\r\n\r\n    runningStates: InterpreterState[] = [InterpreterState.paused, InterpreterState.running, InterpreterState.waitingForInput];\r\n\r\n    setState(state: InterpreterState) {\r\n\r\n        // console.log(\"Set state \" + InterpreterState[state]);\r\n\r\n        let oldState = this.state;\r\n        this.state = state;\r\n\r\n        if (state == InterpreterState.error || state == InterpreterState.done) {\r\n            this.closeAllWebsockets();\r\n        }\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        for (let actionId of this.actions) {\r\n            am.setActive(\"interpreter.\" + actionId, this.buttonActiveMatrix[actionId][state]);\r\n        }\r\n\r\n        let buttonStartActive = this.buttonActiveMatrix['start'][state];\r\n\r\n        if (buttonStartActive) {\r\n            this.controlButtons.$buttonStart.show();\r\n            this.controlButtons.$buttonPause.hide();\r\n        } else {\r\n            this.controlButtons.$buttonStart.hide();\r\n            this.controlButtons.$buttonPause.show();\r\n        }\r\n\r\n        let buttonStopActive = this.buttonActiveMatrix['stop'][state];\r\n        if (buttonStopActive) {\r\n            // this.controlButtons.$buttonEdit.show();\r\n        } else {\r\n            // this.controlButtons.$buttonEdit.hide();\r\n            if (this.worldHelper != null) {\r\n                this.worldHelper.clearActorLists();\r\n            }\r\n            this.gngEreignisbehandlungHelper?.detachEvents();\r\n            this.gngEreignisbehandlungHelper = null;\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) >= 0 && this.runningStates.indexOf(state) < 0) {\r\n            this.debugger.disable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.keyboardTool.unsubscribeAllListeners();\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) < 0 && this.runningStates.indexOf(state) >= 0) {\r\n            this.debugger.enable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        }\r\n\r\n    }\r\n\r\n    closeAllWebsockets() {\r\n        this.webSocketsToCloseAfterProgramHalt.forEach(socket => socket.close());\r\n        this.webSocketsToCloseAfterProgramHalt = [];\r\n    }\r\n\r\n\r\n    pushCurrentProgram() {\r\n\r\n        if (this.currentProgram == null) return;\r\n\r\n        let textPosition: TextPosition;\r\n        let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (currentStatement != null) {\r\n            textPosition = currentStatement.position;\r\n        }\r\n\r\n        this.programStack.push({\r\n            program: this.currentProgram,\r\n            programPosition: this.currentProgramPosition,\r\n            textPosition: textPosition,\r\n            method: this.currentMethod,\r\n            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n            isCalledFromOutside: this.currentIsCalledFromOutside\r\n        })\r\n\r\n        this.currentCallbackAfterReturn = null;\r\n        this.currentIsCalledFromOutside = null;\r\n\r\n    }\r\n\r\n    // runTimer(method: Method, stackElements: Value[],\r\n    //     callbackAfterReturn: (interpreter: Interpreter) => void) {\r\n\r\n    //     if(this.state != InterpreterState.running){\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.pushCurrentProgram();\r\n\r\n    //     this.currentProgram = method.program;\r\n    //     this.currentMethod = method;\r\n    //     this.currentProgramPosition = 0;\r\n    //     this.currentCallbackAfterReturn = callbackAfterReturn;\r\n    //     this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n    //     this.stackframes.push(this.currentStackframe);\r\n    //     this.currentStackframe = this.stack.length;\r\n    //     for (let se of stackElements) this.stack.push(se);\r\n    //     let statements = method.program.statements;\r\n\r\n    //     // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n    //     // beforehand to compensate this effect.\r\n    //     if(statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n    // }\r\n\r\n    runTimer(method: Method, stackElements: Value[],\r\n        callbackAfterReturn: (interpreter: Interpreter) => void, isActor: boolean) {\r\n\r\n        if (this.state != InterpreterState.running) {\r\n            return;\r\n        }\r\n\r\n        let statements = method.program.statements;\r\n\r\n        if (isActor || this.programStack.length == 0) {\r\n            // Main Program is running => Timer has higher precedence\r\n            this.pushCurrentProgram();\r\n\r\n            this.currentProgram = method.program;\r\n            this.currentMethod = method;\r\n            this.currentProgramPosition = 0;\r\n            this.currentCallbackAfterReturn = callbackAfterReturn;\r\n            this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n            this.stackframes.push(this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n            this.stack = this.stack.concat(stackElements);\r\n            // for (let se of stackElements) this.stack.push(se);\r\n\r\n            // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n            // beforehand to compensate this effect.\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n        } else {\r\n            // another Timer is running => queue up\r\n            // position 0 in program stack is main program\r\n            // => insert timer in position 1\r\n\r\n            this.programStack.splice(1, 0, {\r\n                program: method.program,\r\n                programPosition: 0,\r\n                textPosition: { line: 0, column: 0, length: 0 },\r\n                method: method,\r\n                callbackAfterReturn: callbackAfterReturn,\r\n                isCalledFromOutside: \"Timer\",\r\n                stackElementsToPushBeforeFirstExecuting: stackElements\r\n            });\r\n\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    evaluate(program: Program): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = this.stack.length;\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n        let oldStackframe = this.currentStackframe;\r\n\r\n        let error: string;\r\n        let stepCount = 0;\r\n\r\n        try {\r\n            while (error == null &&\r\n                (this.currentProgram != program || this.currentProgramPosition <\r\n                    this.currentProgram.statements.length)\r\n                && stepCount < 100000\r\n                // && this.currentProgram == program\r\n            ) {\r\n                error = this.nextStep();\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (this.currentProgram == program && this.programStack.length > 0) {\r\n            this.popProgram();\r\n        }\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    executeImmediatelyInNewStackframe(program: Program, valuesToPushBeforeExecuting: Value[]): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        let oldProgramPosition = this.currentProgramPosition;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let numberOfStackframesBefore = this.stackframes.length;\r\n        this.stackframes.push(this.currentStackframe);\r\n        let stacksizeBefore = this.stack.length;\r\n        this.currentStackframe = stacksizeBefore;\r\n\r\n        for (let v of valuesToPushBeforeExecuting) this.stack.push(v);\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n\r\n        let stepCount = 0;\r\n        let error = null;\r\n\r\n        try {\r\n            while (this.stackframes.length > numberOfStackframesBefore\r\n                && stepCount < 100000 && error == null\r\n            ) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n                error = this.executeNode(node);\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (stepCount == 100000) this.throwException(\"Die Ausführung des Konstruktors dauerte zu lange.\");\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        // this.currentProgramPosition++;\r\n\r\n        this.currentProgramPosition = oldProgramPosition;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    instantiateObjectImmediately(klass: Klass): RuntimeObject {\r\n        let object = new RuntimeObject(klass);\r\n\r\n        let value = {\r\n            value: object,\r\n            type: klass\r\n        };\r\n\r\n        let klass1 = klass;\r\n\r\n        while (klass1 != null) {\r\n            let aip = klass1.attributeInitializationProgram;\r\n            if (aip.statements.length > 0) {\r\n\r\n                this.executeImmediatelyInNewStackframe(aip, [value]);\r\n\r\n            }\r\n            klass1 = klass1.baseClass;\r\n        }\r\n\r\n        let constructor = klass.getMethodBySignature(klass.identifier + \"()\");\r\n        if (constructor != null && constructor.program != null) {\r\n            // let programWithoutReturnStatement: Program = {\r\n            //     labelManager: null,\r\n            //     module: constructor.program.module,\r\n            //     statements: constructor.program.statements.slice(0, constructor.program.statements.length - 1)\r\n            // };\r\n            this.executeImmediatelyInNewStackframe(constructor.program, [value]);\r\n        }\r\n\r\n        return object;\r\n\r\n    }\r\n\r\n}","export class ColorHelper {\r\n\r\n    static predefinedColors = {\r\n        \"aliceblue\": 0xF0F8FF,\r\n        \"antiquewhite\": 0xFAEBD7,\r\n        \"aqua\": 0x00FFFF,\r\n        \"aquamarine\": 0x7FFFD4,\r\n        \"azure\": 0xF0FFFF,\r\n        \"beige\": 0xF5F5DC,\r\n        \"bisque\": 0xFFE4C4,\r\n        \"black\": 0x000000,\r\n        \"blanchedAlmond\": 0xFFEBCD,\r\n        \"blue\": 0x0000FF,\r\n        \"blueviolet\": 0x8A2BE2,\r\n        \"brown\": 0xA52A2A,\r\n        \"burlywood\": 0xDEB887,\r\n        \"cadetblue\": 0x5F9EA0,\r\n        \"chartreuse\": 0x7FFF00,\r\n        \"chocolate\": 0xD2691E,\r\n        \"coral\": 0xFF7F50,\r\n        \"cornflowerblue\": 0x6495ED,\r\n        \"cornsilk\": 0xFFF8DC,\r\n        \"crimson\": 0xDC143C,\r\n        \"cyan\": 0x00FFFF,\r\n        \"darkblue\": 0x00008B,\r\n        \"darkcyan\": 0x008B8B,\r\n        \"darkgoldenrod\": 0xB8860B,\r\n        \"darkgray\": 0xA9A9A9,\r\n        \"darkgrey\": 0xA9A9A9,\r\n        \"darkgreen\": 0x006400,\r\n        \"darkkhaki\": 0xBDB76B,\r\n        \"darkmagenta\": 0x8B008B,\r\n        \"darkolivegreen\": 0x556B2F,\r\n        \"darkorange\": 0xFF8C00,\r\n        \"darkorchid\": 0x9932CC,\r\n        \"darkred\": 0x8B0000,\r\n        \"darksalmon\": 0xE9967A,\r\n        \"darkseagreen\": 0x8FBC8F,\r\n        \"darkslateblue\": 0x483D8B,\r\n        \"darkslategray\": 0x2F4F4F,\r\n        \"darkslategrey\": 0x2F4F4F,\r\n        \"darkturquoise\": 0x00CED1,\r\n        \"darkviolet\": 0x9400D3,\r\n        \"deeppink\": 0xFF1493,\r\n        \"deepskyblue\": 0x00BFFF,\r\n        \"dimgray\": 0x696969,\r\n        \"dimgrey\": 0x696969,\r\n        \"dodgerblue\": 0x1E90FF,\r\n        \"firebrick\": 0xB22222,\r\n        \"floralwhite\": 0xFFFAF0,\r\n        \"forestgreen\": 0x228B22,\r\n        \"fuchsia\": 0xFF00FF,\r\n        \"gainsboro\": 0xDCDCDC,\r\n        \"ghostwhite\": 0xF8F8FF,\r\n        \"gold\": 0xFFD700,\r\n        \"goldenrod\": 0xDAA520,\r\n        \"gray\": 0x808080,\r\n        \"grau\": 0x808080,\r\n        \"green\": 0x008000,\r\n        \"greenyellow\": 0xADFF2F,\r\n        \"honeydew\": 0xF0FFF0,\r\n        \"hotpink\": 0xFF69B4,\r\n        \"indianred\": 0xCD5C5C,\r\n        \"indigo\": 0x4B0082,\r\n        \"ivory\": 0xFFFFF0,\r\n        \"khaki\": 0xF0E68C,\r\n        \"lavender\": 0xE6E6FA,\r\n        \"lavenderblush\": 0xFFF0F5,\r\n        \"lawngreen\": 0x7CFC00,\r\n        \"lemonchiffon\": 0xFFFACD,\r\n        \"lightblue\": 0xADD8E6,\r\n        \"lightcoral\": 0xF08080,\r\n        \"lightcyan\": 0xE0FFFF,\r\n        \"lightgoldenrodyellow\": 0xFAFAD2,\r\n        \"lightgray\": 0xD3D3D3,\r\n        \"lightgrey\": 0xD3D3D3,\r\n        \"lightgreen\": 0x90EE90,\r\n        \"lightpink\": 0xFFB6C1,\r\n        \"lightsalmon\": 0xFFA07A,\r\n        \"lightseagreen\": 0x20B2AA,\r\n        \"lightskyblue\": 0x87CEFA,\r\n        \"lightslategray\": 0x778899,\r\n        \"lightslategrey\": 0x778899,\r\n        \"lightsteelblue\": 0xB0C4DE,\r\n        \"lightyellow\": 0xFFFFE0,\r\n        \"lime\": 0x00FF00,\r\n        \"limegreen\": 0x32CD32,\r\n        \"linen\": 0xFAF0E6,\r\n        \"magenta\": 0xFF00FF,\r\n        \"maroon\": 0x800000,\r\n        \"mediumaquamarine\": 0x66CDAA,\r\n        \"mediumblue\": 0x0000CD,\r\n        \"mediumorchid\": 0xBA55D3,\r\n        \"mediumpurple\": 0x9370DB,\r\n        \"mediumseagreen\": 0x3CB371,\r\n        \"mediumslateblue\": 0x7B68EE,\r\n        \"mediumspringgreen\": 0x00FA9A,\r\n        \"mediumturquoise\": 0x48D1CC,\r\n        \"mediumvioletred\": 0xC71585,\r\n        \"midnightblue\": 0x191970,\r\n        \"mintcream\": 0xF5FFFA,\r\n        \"mistyrose\": 0xFFE4E1,\r\n        \"moccasin\": 0xFFE4B5,\r\n        \"navajowhite\": 0xFFDEAD,\r\n        \"navy\": 0x000080,\r\n        \"oldLace\": 0xFDF5E6,\r\n        \"olive\": 0x808000,\r\n        \"olivedrab\": 0x6B8E23,\r\n        \"orange\": 0xFFA500,\r\n        \"orangered\": 0xFF4500,\r\n        \"orchid\": 0xDA70D6,\r\n        \"palegoldenrod\": 0xEEE8AA,\r\n        \"palegreen\": 0x98FB98,\r\n        \"paleturquoise\": 0xAFEEEE,\r\n        \"palevioletred\": 0xDB7093,\r\n        \"papayawhip\": 0xFFEFD5,\r\n        \"peachpuff\": 0xFFDAB9,\r\n        \"peru\": 0xCD853F,\r\n        \"pink\": 0xFFC0CB,\r\n        \"plum\": 0xDDA0DD,\r\n        \"powderblue\": 0xB0E0E6,\r\n        \"purple\": 0x800080,\r\n        \"rebeccapurple\": 0x663399,\r\n        \"red\": 0xFF0000,\r\n        \"rosybrown\": 0xBC8F8F,\r\n        \"royalblue\": 0x4169E1,\r\n        \"saddlebrown\": 0x8B4513,\r\n        \"salmon\": 0xFA8072,\r\n        \"sandybrown\": 0xF4A460,\r\n        \"sand\": 0xF4A460,\r\n        \"seagreen\": 0x2E8B57,\r\n        \"seashell\": 0xFFF5EE,\r\n        \"sienna\": 0xA0522D,\r\n        \"silver\": 0xC0C0C0,\r\n        \"skyblue\": 0x87CEEB,\r\n        \"slateblue\": 0x6A5ACD,\r\n        \"slategray\": 0x708090,\r\n        \"slategrey\": 0x708090,\r\n        \"snow\": 0xFFFAFA,\r\n        \"springgreen\": 0x00FF7F,\r\n        \"steelblue\": 0x4682B4,\r\n        \"tan\": 0xD2B48C,\r\n        \"teal\": 0x008080,\r\n        \"thistle\": 0xD8BFD8,\r\n        \"tomato\": 0xFF6347,\r\n        \"turquoise\": 0x40E0D0,\r\n        \"violet\": 0xEE82EE,\r\n        \"wheat\": 0xF5DEB3,\r\n        \"white\": 0xFFFFFF,\r\n        \"whitesmoke\": 0xF5F5F5,\r\n        \"yellow\": 0xFFFF00,\r\n        \"yellowgreen\": 0x9ACD32,\r\n    };\r\n\r\n    static intColorToHexRGB(color: number) {\r\n        if(color == null){\r\n            return \"---\";\r\n        } else {\r\n            let s: string = color.toString(16);\r\n            while (s.length < 6) s = \"0\" + s;\r\n            return \"#\" + s;\r\n        }\r\n    }\r\n\r\n    static intColorToRGB(color: number) {\r\n        if(color == null) {return \"---\";} else\r\n        {return \"rgb(\" + ((color & 0xff0000) >> 16) + \", \" + ((color & 0xff00) >> 8) + \", \" + (color & 0xff) + \")\";}\r\n    }\r\n\r\n    static parseColorToOpenGL(color: string): { color: number, alpha: number } {\r\n\r\n        if(color == null){\r\n            return {\r\n                color: null,\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        let c = this.predefinedColors[color];\r\n        if (c != null) return { color: c, alpha: 1 };\r\n\r\n        // see https://stackoverflow.com/questions/11068240/what-is-the-most-efficient-way-to-parse-a-css-color-in-javascript\r\n\r\n        let m2 = color.match(/^#([0-9a-f]{6})$/i);\r\n        if (m2 && m2.length > 1) {\r\n            let m = m2[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: 1\r\n                };\r\n            }\r\n        }\r\n\r\n        let m3 = color.match(/^#([0-9a-f]{8})$/i);\r\n        if (m3 && m3.length > 1){\r\n            let m = m3[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: parseInt(m.substr(6, 2), 16) / 0xff\r\n                };\r\n            }\r\n        }\r\n\r\n        let m1 = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        m1 = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+\\.?\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: parseFloat(m1[4]) \r\n            };\r\n        }\r\n\r\n        return { color: 0xff0000, alpha: 1 };\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { GroupClass, GroupHelper } from \"./Group.js\";\r\nimport { MouseListenerInterface } from \"./MouseListener.js\";\r\nimport { ShapeClass, ShapeHelper } from \"./Shape.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class WorldClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"World\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let groupType = <GroupClass>module.typeStore.getType(\"Group\");\r\n        let shapeType = <ShapeClass>module.typeStore.getType(\"Shape\");\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o, breite, höhe);  //new WorldHelper(breite, höhe, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an\", true));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o); // new WorldHelper(800, 600, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an. Das Koordinatensystem geht von 0 bis 800 in x-Richtung und von 0 - 600 in y-Richtung.\", true));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe wird als integer-Zahl erwartet. Am besten schreibt man sie als Hexadezimalzahl, also z.B. setBackgroundColor(0xff8080).\"', false));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe ist entweder eine vordefinierte Farbe (\"schwarz\", \"rot\", ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-x, -y));\r\n\r\n            }, false, false, 'Verschiebt alle Objekte der Welt um x nach rechts und y nach unten.', false));\r\n\r\n        this.addMethod(new Method(\"follow\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"margin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let frameWidth: number = parameters[2].value;\r\n                let xMin: number = parameters[3].value;\r\n                let xMax: number = parameters[4].value;\r\n                let yMin: number = parameters[5].value;\r\n                let yMax: number = parameters[6].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                let moveX: number = 0;\r\n                let moveY: number = 0;\r\n\r\n                let shapeX: number = shapeHelper.getCenterX();\r\n                let shapeY: number = shapeHelper.getCenterY();\r\n\r\n                let outsideRight = shapeX - (wh.currentLeft + wh.currentWidth - frameWidth);\r\n                if (outsideRight > 0 && wh.currentLeft + wh.currentWidth < xMax) {\r\n                    moveX = -outsideRight;\r\n                }\r\n\r\n                let outsideLeft = (wh.currentLeft + frameWidth) - shapeX;\r\n                if (outsideLeft > 0 && wh.currentLeft > xMin) {\r\n                    moveX = outsideLeft;\r\n                }\r\n\r\n                let outsideBottom = shapeY - (wh.currentTop + wh.currentHeight - frameWidth);\r\n                if (outsideBottom > 0 && wh.currentTop + wh.currentHeight <= yMax) {\r\n                    moveY = -outsideBottom;\r\n                }\r\n\r\n                let outsideTop = (wh.currentTop + frameWidth) - shapeY;\r\n                if (outsideTop > 0 && wh.currentTop >= yMin) {\r\n                    moveY = outsideTop;\r\n                }\r\n\r\n                if (moveX != 0 || moveY != 0) {\r\n                    let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                    wh.stage.projectionTransform.identity();\r\n                    wh.stage.projectionTransform.translate(moveX, moveY);\r\n                    wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                    wh.computeCurrentWorldBounds();\r\n                    wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-moveX, -moveY));\r\n                }\r\n\r\n\r\n            }, false, false, 'Verschiebt die Welt so, dass das übergebene graphische Objekt (shape) sichtbar wird. Verschoben wird nur, wenn das Objekt weniger als frameWidth vom Rand entfernt ist und die Welt nicht über die gegebenen Koordinaten xMin, xMax, yMin und yMax hinausragt.', false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n\r\n                let angleRad = -angle / 180 * Math.PI;\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.rotate(angleRad);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach(\r\n                    (shape) => {\r\n                        shape.rotate(-angle, x, y);\r\n                    });\r\n\r\n            }, false, false, 'Rotiert die Welt um den angegebenen Winkel im Urzeigersinn. Drehpunkt ist der Punkt (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.scale(factor, factor);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.scale(1 / factor, x, y));\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"setCoordinateSystem\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                wh.stage.projectionTransform.identity();     // coordinate system (0/0) to (initialWidth/initialHeight)\r\n                wh.stage.projectionTransform.translate(-left, -top);\r\n                wh.stage.projectionTransform.scale(wh.initialWidth / width, wh.initialHeight / height);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => {\r\n                    shape.scale(width / wh.initialWidth, left, top);\r\n                    shape.move(left, top);\r\n                });\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setDefaultGroup\", new Parameterlist([\r\n            { identifier: \"group\", type: groupType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.defaultGroup = group == null ? null : group.intrinsicData[\"Actor\"];\r\n\r\n            }, false, false, 'Legt eine Gruppe fest, zu der ab jetzt alle neuen Objekte automatisch hinzugefügt werden. Falls null angegeben wird, werden neue Objekte zu keiner Gruppe automatisch hinzugefügt.', false));\r\n\r\n        this.addMethod(new Method(\"addMouseListener\", new Parameterlist([\r\n            { identifier: \"listener\", type: mouseListenerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let listener: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.addMouseListener(listener);\r\n\r\n            }, false, false, 'Fügt einen neuen MouseListener hinzu, dessen Methoden bei Mausereignissen aufgerufen werden.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentWidth);\r\n\r\n            }, false, false, 'Gibt die \"Breite\" des Grafikbereichs zurück, genauer: die x-Koordinate am rechten Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentHeight);\r\n\r\n            }, false, false, 'Gibt die \"Höhe\" des Grafikbereichs zurück, genauer: die y-Koordinate am unteren Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getTop\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentTop);\r\n\r\n            }, false, false, 'Gibt die y-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLeft\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentLeft);\r\n\r\n            }, false, false, 'Gibt die x-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setCursor\", new Parameterlist([\r\n            { identifier: \"cursor\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n                let cursor: string = parameters[1].value;\r\n\r\n                wh.setCursor(cursor);\r\n\r\n            }, false, false, 'Ändert die Form des Mauscursors im gesamten Grafikbereich. Mögiche Werte: siehe https://developer.mozilla.org/de/docs/Web/CSS/cursor.', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(worldObject: RuntimeObject, breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n\r\n        if (wh != null) {\r\n            debugger;\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.projectionTransform.scale(wh.width / breite, wh.width / höhe);\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n            return new WorldHelper(breite, höhe, this.module, worldObject);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport type MouseListenerShapeData = {\r\n    shapeHelper: ShapeHelper,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type MouseListenerData = {\r\n    listener: RuntimeObject,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type ActorData = {\r\n    actorHelper: ActorHelper,\r\n    method: Method\r\n}\r\n\r\n/**\r\n * @see https://javascript.plainenglish.io/inside-pixijs-projection-system-897872a3dc17\r\n */\r\nclass WorldContainer extends PIXI.Container {\r\n\r\n    projectionTransform: PIXI.Matrix;\r\n\r\n    constructor(public sourceFrame: PIXI.Rectangle, public destinationFrame: PIXI.Rectangle) {\r\n        super();\r\n        this.projectionTransform = new PIXI.Matrix();\r\n    }\r\n\r\n    render(renderer: PIXI.Renderer) {\r\n\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = this.projectionTransform;\r\n        renderer.renderTexture.bind(\r\n            renderer.renderTexture.current,\r\n            this.sourceFrame,\r\n            this.destinationFrame,\r\n        );\r\n        super.render(renderer);\r\n        renderer.batch.flush();\r\n\r\n        renderer.batch.flush();\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = null;\r\n        renderer.renderTexture.bind(null);\r\n    }\r\n}\r\n\r\n\r\nexport class WorldHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n    app: PIXI.Application;\r\n    stage: WorldContainer;\r\n\r\n    actActors: ActorData[] = [];\r\n    keyPressedActors: ActorData[] = [];\r\n    keyUpActors: ActorData[] = [];\r\n    keyDownActors: ActorData[] = [];\r\n    actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n    mouseListenerShapes: MouseListenerShapeData[] = [];\r\n    mouseListeners: MouseListenerData[] = [];\r\n\r\n    interpreter: Interpreter;\r\n    actorsFinished: boolean = true;\r\n    summedDelta: number = 0;\r\n\r\n    defaultGroup: GroupHelper;\r\n\r\n    initialWidth: number;\r\n    initialHeight: number;\r\n\r\n    $coordinateDiv: JQuery<HTMLElement>;\r\n\r\n    public scaledTextures: { [name: string]: PIXI.Texture } = {};\r\n\r\n\r\n    shapes: ShapeHelper[] = [];     // all shapes incl. groups that aren't part of a group\r\n\r\n    currentLeft: number;\r\n    currentTop: number;\r\n    currentWidth: number;\r\n    currentHeight: number;\r\n\r\n    shapesNotAffectedByWorldTransforms: ShapeHelper[] = [];\r\n\r\n    globalScale: number;\r\n\r\n    tickerFunction: (t: number) => void;\r\n\r\n    clearActorLists() {\r\n        this.actActors = [];\r\n        this.keyPressedActors = [];\r\n        this.keyUpActors = [];\r\n        this.keyDownActors = [];\r\n    }\r\n\r\n    constructor(public width: number, public height: number, private module: Module, public world: RuntimeObject) {\r\n\r\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n        PIXI.settings.TARGET_FPMS = 30.0 / 1000.0;\r\n\r\n        this.globalScale = 1;\r\n\r\n        while (height > 1000 || width > 2000) {\r\n            this.globalScale *= 2;\r\n            height /= 2;\r\n            width /= 2;\r\n        }\r\n\r\n        this.initialHeight = this.height;\r\n        this.initialWidth = this.width;\r\n\r\n        this.currentLeft = 0;\r\n        this.currentTop = 0;\r\n        this.currentWidth = this.width;\r\n        this.currentHeight = this.height;\r\n\r\n        this.interpreter = this.module?.main?.getInterpreter();\r\n\r\n        if (this.interpreter.processingHelper != null) {\r\n            this.interpreter.throwException(\"Die herkömmliche Grafikausgabe kann nicht zusammen mit Processing genutzt werden.\");\r\n        }\r\n\r\n        if (this.interpreter.worldHelper != null) {\r\n            this.interpreter.throwException(\"Es darf nur ein World-Objekt instanziert werden.\");\r\n        }\r\n\r\n        this.interpreter.worldHelper = this;\r\n\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n        this.$coordinateDiv = this.module.main.getRightDiv().$rightDiv.find(\".jo_coordinates\");\r\n\r\n        let f = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            if($jo_tabs.length == 0){\r\n                $jo_tabs = $graphicsDiv.parents(\".joe_rightDivInner\");\r\n            }\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n\r\n            if (height / width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': width / height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': height / width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', f);\r\n\r\n        f();\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        if (this.module.main.pixiApp) {\r\n            this.app = this.module.main.pixiApp;\r\n            this.app.renderer.resize(width, height);\r\n            this.app.renderer.backgroundColor = 0x0;\r\n        } else {\r\n            this.app = new PIXI.Application({\r\n                antialias: true,\r\n                width: width, height: height,\r\n                //resizeTo: $containerInner[0]\r\n            });\r\n            this.module.main.pixiApp = this.app;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.tickerFunction = (delta) => {\r\n            that.tick(PIXI.Ticker.shared.elapsedMS);\r\n        };\r\n\r\n        this.app.ticker.add(this.tickerFunction);\r\n        this.app.ticker.maxFPS = 30;\r\n\r\n        this.interpreter.timerExtern = true;\r\n\r\n        let sourceFrame = new PIXI.Rectangle(0, 0, this.width, this.height);\r\n        let destinationFrame = new PIXI.Rectangle(0, 0, width, height);\r\n        this.stage = new WorldContainer(sourceFrame, destinationFrame);\r\n        this.stage.projectionTransform = new PIXI.Matrix();\r\n\r\n        this.app.stage.addChild(this.stage);\r\n\r\n        this.$containerInner.append(this.app.view);\r\n\r\n        this.interpreter.keyboardTool.keyPressedCallbacks.push((key) => {\r\n            for (let kpa of that.keyPressedActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyUpCallbacks.push((key) => {\r\n            for (let kpa of that.keyUpActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyDownCallbacks.push((key) => {\r\n            for (let kpa of that.keyDownActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n\r\n            let eventType = listenerType;\r\n            if (window.PointerEvent) {\r\n                eventType = eventType.replace('mouse', 'pointer');\r\n            }\r\n\r\n            this.$containerInner.on(eventType, (e) => {\r\n                let x = width * e.offsetX / this.$containerInner.width();\r\n                let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n                let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n                this.stage.projectionTransform.applyInverse(p, p);\r\n                x = p.x;\r\n                y = p.y;\r\n\r\n                that.onMouseEvent(listenerType, x, y, e.button);\r\n\r\n                for (let listener of this.mouseListeners) {\r\n                    if (listener.types[listenerType] != null) {\r\n                        this.invokeMouseListener(listener, listenerType, x, y, e.button);\r\n                    }\r\n                }\r\n\r\n                if (listenerType == \"mousedown\") {\r\n                    let gngEreignisbehandlung = this.interpreter.gngEreignisbehandlungHelper;\r\n                    if (gngEreignisbehandlung != null) {\r\n                        gngEreignisbehandlung.handleMouseClickedEvent(x, y);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        let $coordinateDiv = this.$coordinateDiv;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$containerInner.on(mousePointer + \"move\", (e) => {\r\n            let x = width * e.offsetX / this.$containerInner.width();\r\n            let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n            let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n            this.stage.projectionTransform.applyInverse(p, p);\r\n            x = Math.round(p.x);\r\n            y = Math.round(p.y);\r\n            $coordinateDiv.text(`(${x}/${y})`);\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"enter\", (e) => {\r\n            $coordinateDiv.show();\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"leave\", (e) => {\r\n            $coordinateDiv.hide();\r\n        });\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    computeCurrentWorldBounds() {\r\n\r\n        let p1: PIXI.Point = new PIXI.Point(0, 0);\r\n        this.stage.projectionTransform.applyInverse(p1, p1);\r\n\r\n        let p2: PIXI.Point = new PIXI.Point(this.initialWidth, this.initialHeight);\r\n        this.stage.projectionTransform.applyInverse(p2, p2);\r\n\r\n        this.currentLeft = p1.x;\r\n        this.currentTop = p1.y;\r\n        this.currentWidth = Math.abs(p2.x - p1.x);\r\n        this.currentHeight = Math.abs(p2.y - p1.y);\r\n    }\r\n\r\n\r\n    hasActors(): boolean {\r\n        return this.actActors.length > 0 || this.keyPressedActors.length > 0 || this.keyUpActors.length > 0\r\n            || this.keyDownActors.length > 0 || this.mouseListeners.length > 0 || this.mouseListenerShapes.length > 0;\r\n    }\r\n\r\n    setAllHitpolygonsDirty() {\r\n        for (let shape of this.shapes) {\r\n            shape.setHitPolygonDirty(true);\r\n        }\r\n    }\r\n\r\n    setCursor(cursor: string) {\r\n        this.$containerInner.css('cursor', cursor);\r\n    }\r\n\r\n\r\n    actorsNotFinished: number = 0;\r\n    ticks: number = 0;\r\n    deltaSum: number = 0;\r\n\r\n    spriteAnimations: SpriteHelper[] = [];\r\n\r\n    tick(delta: any) {\r\n\r\n        this.summedDelta += delta;\r\n\r\n        for (let spriteHelper of this.spriteAnimations) {\r\n            spriteHelper.tick(delta);\r\n        }\r\n\r\n        if (this.interpreter != null) {\r\n            switch (this.interpreter.state) {\r\n                case InterpreterState.running:\r\n\r\n                    if (!this.actorsFinished) {\r\n                        this.actorsNotFinished++;\r\n                        break;\r\n                    }\r\n\r\n                    let first: boolean = true;\r\n\r\n                    for (let actorData of this.actActors) {\r\n\r\n                        let actorHelper = actorData.actorHelper;\r\n                        if (actorHelper.timerPaused || actorHelper.isDestroyed) continue;\r\n\r\n                        let program = actorData.method?.program;\r\n                        this.runActor(first, actorData, this.summedDelta);\r\n                        if (program != null && !actorData.actorHelper.isDestroyed) {\r\n                            first = false;\r\n                            this.actorsFinished = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case InterpreterState.done:\r\n                case InterpreterState.error:\r\n                case InterpreterState.not_initialized:\r\n                    this.clearActorLists();\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        this.summedDelta = 0;\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            if (this.actActors.length > 0) {\r\n                this.interpreter.timerFunction(33.33, true, 0.5);\r\n                //@ts-ignore\r\n                if (this.interpreter.state == InterpreterState.running) {\r\n                    this.interpreter.timerStopped = false;\r\n                    this.interpreter.timerFunction(33.33, false, 0.08);\r\n                }\r\n            } else {\r\n                this.interpreter.timerFunction(33.33, false, 0.7);\r\n            }\r\n        }\r\n\r\n        while (this.actorHelpersToDestroy.length > 0) {\r\n\r\n            let actorHelper = this.actorHelpersToDestroy.pop();\r\n\r\n            for (let actorList of [this.keyPressedActors, this.keyUpActors, this.keyDownActors]) {\r\n                for (let i = 0; i < actorList.length; i++) {\r\n                    if (actorList[i].actorHelper === actorHelper) {\r\n                        actorList.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            for (let i = 0; i < this.mouseListenerShapes.length; i++) {\r\n                if (this.mouseListenerShapes[i].shapeHelper === actorHelper) {\r\n                    this.mouseListenerShapes.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.actActors.length; i++) {\r\n                if (this.actActors[i].actorHelper === actorHelper) {\r\n                    this.actActors.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            let displayObject = (<ShapeHelper>actorHelper).displayObject;\r\n            if (displayObject != null) {\r\n                displayObject.destroy();\r\n                (<ShapeHelper>actorHelper).displayObject = null;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setBackgroundColor(color: string | number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.app.renderer.backgroundColor = c.color;\r\n        } else {\r\n            this.app.renderer.backgroundColor = color;\r\n        }\r\n\r\n    }\r\n\r\n    runActorWhenKeyEvent(actorData: ActorData, key: string) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: stringPrimitiveType,\r\n                value: key\r\n            }\r\n        ];\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, null, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    runActor(first: boolean, actorData: ActorData, delta: number) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n        ];\r\n\r\n        if (actorData.method.getParameterCount() > 0) {\r\n            stackElements.push(\r\n                {\r\n                    type: doublePrimitiveType,\r\n                    value: delta\r\n                }\r\n\r\n            );\r\n        }\r\n\r\n        let that = this;\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, first ? (interpreter) => {\r\n                that.actorsFinished = true;\r\n                interpreter.timerStopped = true;\r\n            } : null, true);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n    cacheAsBitmap() {\r\n\r\n        let scaleMin = 1.0;\r\n        if (this.currentWidth * this.currentHeight > 2500000) scaleMin = Math.sqrt(2500000 / (this.currentWidth * this.currentHeight));\r\n        if (this.currentWidth * this.currentHeight < 1024 * 1024) scaleMin = Math.sqrt(1024 * 1024 / (this.currentWidth * this.currentHeight));\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: PIXI.SCALE_MODES.LINEAR,\r\n                width: Math.round(this.currentWidth * scaleMin),\r\n                height: Math.round(this.currentHeight * scaleMin)\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let transform = new PIXI.Matrix().scale(scaleMin, scaleMin);\r\n\r\n        this.app.renderer.render(this.stage, {\r\n            renderTexture: rt,\r\n            transform: transform\r\n        });\r\n\r\n\r\n\r\n        setTimeout(() => {\r\n            this.stage.children.forEach(c => c.destroy());\r\n            this.stage.removeChildren();\r\n\r\n            let sprite = new PIXI.Sprite(rt);\r\n            sprite.localTransform.scale(this.globalScale, this.globalScale);\r\n            //@ts-ignore\r\n            sprite.transform.onChange();\r\n            this.stage.projectionTransform = new PIXI.Matrix();\r\n            this.stage.addChild(sprite);\r\n\r\n        }, 100);\r\n    }\r\n\r\n    destroyWorld() {\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.off(listenerType);\r\n        }\r\n        this.spriteAnimations = [];\r\n        this.app.ticker.remove(this.tickerFunction);\r\n\r\n        this.app.stage.children.forEach(c => c.destroy());\r\n        this.app.stage.removeChildren();\r\n        jQuery(this.app.view).detach();\r\n\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.worldHelper = null;\r\n        this.$coordinateDiv.hide();\r\n    }\r\n\r\n    onMouseEvent(listenerType: string, x: number, y: number, button: number) {\r\n\r\n        switch (listenerType) {\r\n            case \"mousedown\":\r\n            case \"mouseup\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && (shapeHelper.containsPoint(x, y) || shapeHelper.trackMouseMove)) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button);\r\n                    }\r\n\r\n                }\r\n\r\n                break;\r\n            case \"mouseenter\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.containsPoint(x, y) && !shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = true;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mouseleave\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = false;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mousemove\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[\"mousemove\"] != null ||\r\n                        (listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) ||\r\n                        (listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject)\r\n                    ) {\r\n                        let containsPoint = shapeHelper.containsPoint(x, y);\r\n                        if ((shapeHelper.trackMouseMove || containsPoint) && listener.types[\"mousemove\"] != null) {\r\n                            this.invokeShapeMouseListener(listener, \"mousemove\", x, y, button);\r\n                        }\r\n                        if (containsPoint && listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseenter\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = true;\r\n                            });\r\n                        }\r\n                        if (!containsPoint && listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseleave\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = false;\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    invokeShapeMouseListener(listener: MouseListenerShapeData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        if (!listener.shapeHelper.reactToMouseEventsWhenInvisible &&\r\n            !listener.shapeHelper.displayObject.visible) return;\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.shapeHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    addMouseListener(listener: RuntimeObject) {\r\n\r\n        /*\r\n            If a shape is registered as MouseListener of the world-object, it gets all mouse-events twice. \r\n            => Deregister shape as mouseListenerShape and register it as mouse listener for the world object.\r\n        */\r\n        let index: number = this.mouseListenerShapes.findIndex((mls) => { return mls.shapeHelper.runtimeObject == listener });\r\n        if (index >= 0) {\r\n            this.mouseListenerShapes.splice(index, 1);\r\n        }\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>listener.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null && method.program.statements.length > 2 || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        listener: listener,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.mouseListeners.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    invokeMouseListener(listener: MouseListenerData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.listener;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n}","import { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType, doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class Actor extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Actor\", module, \"Abstrakte Klasse mit überschreibbaren Methoden act (zur Implemntierung eines Timers) und onKeyTyped, onKeyUp usw. zur entgegennahme von Tastaturereignissen\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.isAbstract = true;\r\n\r\n        let methodSignatures: { signature: string, actorListIdentifier: string }[] = [\r\n            { signature: \"onKeyTyped(String)\", actorListIdentifier: \"keyPressedActors\" },\r\n            { signature: \"onKeyUp(String)\", actorListIdentifier: \"keyUpActors\" },\r\n            { signature: \"onKeyDown(String)\", actorListIdentifier: \"keyDownActors\" },\r\n            { signature: \"act()\", actorListIdentifier: \"actActors\" },\r\n            { signature: \"act(double)\", actorListIdentifier: \"actActors\" },\r\n        ];\r\n\r\n        this.postConstructorCallbacks = [\r\n            (r: RuntimeObject) => {\r\n\r\n                for (let ms of methodSignatures) {\r\n                    let method: Method = (<Klass>r.class).getMethodBySignature(ms.signature);\r\n\r\n                    if (method?.program != null || method?.invoke != null) {\r\n                        let ah: ActorHelper = <ActorHelper>r.intrinsicData['Actor'];\r\n                        ah.worldHelper[ms.actorListIdentifier].push({\r\n                            actorHelper: ah,\r\n                            method: method\r\n                        })\r\n                    }\r\n                }\r\n\r\n            }\r\n        ];\r\n\r\n        this.addMethod(new Method(\"Actor\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), this,\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let actorHelper = new ActorHelper(module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"Actor\"] = actorHelper;\r\n\r\n                // return o;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Der Konstruktor registriert den Actor beim Grafikfenster\", true));\r\n\r\n        this.addMethod(new Method(\"destroy\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Vernichtet das Grafikobjekt. Falls es in einem Group-Objekt enthalten ist, wird es vor dem Vernichten automatisch aus diesem entfernt.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade NICHT drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadButtonDown\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let buttonIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadConnected\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\r\n\r\n        this.addMethod(new Method(\"getGamepadAxisValue\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let axisIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\r\n\r\n            }, false, false, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"isDestroyed\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isDestroyed;\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Objekt bereits durch die Methode destroy() zerstört wurde.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWorld\", new Parameterlist([\r\n        ]), module.typeStore.getType(\"World\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let worldHelper = interpreter.worldHelper;\r\n                if (worldHelper == null) {\r\n                    let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n                    worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n                }        \r\n                return worldHelper.world;\r\n\r\n            }, false, false, \"Gibt das Welt-Objekt zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"stopActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // ah.timerPaused = true;\r\n                ah.setTimerPaused(true);\r\n\r\n                return;\r\n\r\n            }, false, false, \"Stoppt den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt.\", false));\r\n\r\n            this.addMethod(new Method(\"restartActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // sh.timerPaused = false;\r\n                sh.setTimerPaused(false);\r\n\r\n            }, false, false, \"Startet den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt erneut.\", false));\r\n\r\n            this.addMethod(new Method(\"isActing\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.timerPaused;\r\n\r\n            }, false, false, \"Gibt true zurück, wenn der periodische Aufruf der Methode act weiterhin erfolgt.\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n            { identifier: \"deltaTime\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt und wieder losgelassen hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste losgelassen hat.\", false));\r\n\r\n\r\n    }\r\n\r\n    registerWorldType() {\r\n        this.methods.filter(m => m.identifier == \"getWorld\")[0].returnType = this.module.typeStore.getType(\"World\");\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ActorHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n    isDestroyed: boolean = false;\r\n\r\n    timerPaused: boolean = false;\r\n\r\n    constructor(interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            // worldHelper = new WorldHelper(800, 600, interpreter.main.currentWorkspace.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            if(runtimeObject.intrinsicData[\"isGNG\"]){\r\n                worldHelper.setBackgroundColor(\"#e6e6e6\");\r\n            }\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n    }\r\n\r\n\r\n    isKeyDown(key: string): boolean {\r\n        return this.worldHelper.interpreter.keyboardTool.isPressed(key);\r\n    }\r\n\r\n    destroy() {\r\n        this.isDestroyed = true;\r\n        this.worldHelper.actorHelpersToDestroy.push(this);\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        if (this.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Es wurde die Methode \" + method + \" eines bereits mit destroy() zerstörten Grafikobjekts aufgerufen.\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class AlignmentClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Alignment\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"center\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Mögliche Ausrichtungen\"\r\n    }\r\n\r\n}","\r\nexport type Punkt = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport function gleich(a: number, b: number) {\r\n\r\n    return Math.abs(a - b) < 0.000000001;\r\n\r\n}\r\n\r\nexport function drehenUm(drehpunkt: Punkt, punkt: Punkt, winkelInGrad: number): Punkt {\r\n\r\n    let w = winkelInGrad / 180 * Math.PI;\r\n    let s = Math.sin(w);\r\n    let c = Math.cos(w);\r\n\r\n    let dx = punkt.x - drehpunkt.x;\r\n    let dy = punkt.y - drehpunkt.y;\r\n\r\n    let dxNeu = dx * c - dy * s;\r\n    let dyNeu = dx * s + dy * c;\r\n\r\n    return { x: drehpunkt.x + dxNeu, y: drehpunkt.y + dyNeu };\r\n\r\n}\r\n\r\n/**\r\n * Gibt true zurück, wenn die Strecke von (x0, y0) nach (x1, y1) die Strecke von\r\n * (x2, y2) nach (x3, y3) berührt.\r\n *\r\n * @param x0\r\n * @param y0\r\n * @param x1\r\n * @param y1\r\n * @param x2\r\n * @param y2\r\n * @param x3\r\n * @param y3\r\n * @return\r\n */\r\nexport function streckeSchneidetStrecke(p0: Punkt, p1: Punkt, p2: Punkt, p3: Punkt, schnittpunkt?:Punkt) {\r\n\r\n    let a1 = p1.x - p0.x;\r\n    let a2 = p1.y - p0.y;\r\n    let b1 = p2.x - p3.x;\r\n    let b2 = p2.y - p3.y;\r\n    let c1 = p2.x - p0.x;\r\n    let c2 = p2.y - p0.y;\r\n\r\n    let det = a1 * b2 - a2 * b1;\r\n\r\n    if (det * det < 0.000001) {\r\n        return false; // die Strecken sind so gut wie parallel\r\n    }\r\n\r\n    let det1 = c1 * b2 - c2 * b1;\r\n    let det2 = a1 * c2 - a2 * c1;\r\n\r\n    let s = det1 / det;\r\n    let t = det2 / det;\r\n\r\n    // liegt der Schnittpunkt innerhalb von beiden Strecken?\r\n    let schneidet = s >= 0 && s <= 1 && t >= 0 && t <= 1;\r\n\r\n    if(schneidet && schnittpunkt != null){\r\n        schnittpunkt.x = p0.x + s*(p1.x - p0.x);\r\n        schnittpunkt.y = p0.y + s*(p1.y - p0.y)\r\n        }\r\n\r\n    return schneidet;\r\n\r\n}\r\n\r\nexport function abstand(p1: Punkt, p2: Punkt) {\r\n\r\n    let dx = p2.x - p1.x;\r\n    let dy = p2.y - p1.y;\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n\r\n}\r\n\r\nexport function winkelGradZwischenPunkten(p1: Punkt, p2: Punkt): number {\r\n    let d = {\r\n        x: p2.x - p1.x,\r\n        y: p2.y - p1.y\r\n    }\r\n\r\n    return Math.atan2(d.y, d.x)/Math.PI*180;\r\n}\r\n\r\nexport function polygonEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n\r\n    let inside = false;\r\n    let vertexCount = punkte.length;\r\n\r\n    for (let index = 0; index <= vertexCount - 1; index++) {\r\n\r\n        let i = index % vertexCount;\r\n        let j = (index - 1) % vertexCount;\r\n        if (j < 0) {\r\n            j += vertexCount;\r\n        }\r\n\r\n        if (((punkte[i].y > punkt.y) != (punkte[j].y > punkt.y)) &&\r\n            (punkt.x < (punkte[j].x - punkte[i].x) * (punkt.y - punkte[i].y) / (punkte[j].y - punkte[i].y) + punkte[i].x))\r\n            inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n\r\n}\r\n\r\nexport function kreisSchneidetStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt): boolean {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return false; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function schnittpunkteKreisStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt, schnittpunkte: Punkt[]): void {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t1 * (x2 - x1), y: y1 + t1 * (y2 - y1) });\r\n    }\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t2 * (x2 - x1), y: y1 + t2 * (y2 - y1) });\r\n    }\r\n\r\n    return;\r\n\r\n}\r\n\r\nexport function KreisBerührtPolygon(m: Punkt, r: number, punkte: Punkt[]) {\r\n\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        if (abstand(punkte[i], m) <= r) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    // Der Kreis enthält keinen Punkt des Vielecks. Enthält es den Mittelpunkt des Kreises?\r\n    if (polygonEnthältPunkt(punkte, m)) {\r\n        return true;\r\n    }\r\n\r\n    // schneidet die Kreislinie eine der Vielecksstrecken?\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        let p2 = punkte[(i + 1) % punkte.length];\r\n        if (kreisSchneidetStrecke(m, r, punkte[i], p2)) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygon(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    // Nicht-exakte Lösung: prüfe, ob eines der Vielecke einen Eckpunkt des anderen enthält.\r\n    // Jede Kollision beginnt damit, dass ein Eckpunkt eines Polygons eine Seite des anderen schneidet.\r\n    // Falls oft genug geprüft wird, bleiben Kollisionen also nicht unerkannt.\r\n    for (let i = 0; i < punkte1.length; i++) {\r\n        if (polygonEnthältPunkt(punkte2, punkte1[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < punkte2.length; i++) {\r\n        if (polygonEnthältPunkt(punkte1, punkte2[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\n\r\nexport function abstandPunktZuStrecke(a: Punkt, b: Punkt, p: Punkt){\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let q = dx*dx+dy*dy;\r\n\r\n    let lambda = ((-a.x+p.x)*dx + (-a.y+p.y)*dy)/q;\r\n\r\n    if(lambda < 0){\r\n        return abstand(a, p);\r\n    }\r\n\r\n    if(lambda > 1){\r\n        return abstand(b, p);\r\n    }\r\n\r\n    let fx = a.x + lambda * (b.x - a.x);\r\n    let fy = a.y + lambda * (b.y - a.y);\r\n\r\n    let s1 = p.x - fx;\r\n    let s2 = p.y - fy;\r\n\r\n    return Math.sqrt(s1*s1 + s2*s2);\r\n    \r\n}\r\n\r\nexport function abstandPunktZuGerade(a: Punkt, b: Punkt, p: Punkt) {\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let l = Math.sqrt(dy * dy + dx * dx);\r\n\r\n    if (l < 0.000000001) {\r\n        return abstand(a, p);\r\n    }\r\n\r\n    return Math.abs(dy * p.x - dx * p.y + b.x * a.y - b.y * a.x) / l;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygonExakt(punkte1: Punkt[], punkte2: Punkt[], istGeschlossen1: boolean = false,\r\n    istGeschlossen2: boolean = false, normaleDerBerührtenGerade1: Punkt = null) {\r\n\r\n    if(punkte1.length == 0 || punkte2.length == 0) return false;\r\n\r\n    let endIndex1 = punkte1.length + (istGeschlossen1 ? 0 : -1);\r\n    let endIndex2 = punkte2.length + (istGeschlossen2 ? 0 : -1);\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte1, punkte2[0])) {\r\n\r\n        if (normaleDerBerührtenGerade1 != null) {\r\n\r\n            let minAbstand = 100000;\r\n            let minIndex = 0;\r\n\r\n            for (let i = 0; i < punkte1.length - 1; i++) {\r\n                let j = (i + 1) % punkte1.length;\r\n\r\n                let d = abstandPunktZuStrecke(punkte1[i], punkte1[j], punkte2[0]);\r\n                if (d < minAbstand) {\r\n                    minAbstand = d;\r\n                    minIndex = 0;\r\n                }\r\n\r\n            }\r\n            let i2 = (minIndex + 1) % punkte1.length;\r\n            normaleDerBerührtenGerade1.y = punkte1[i2].x - punkte1[minIndex].x;\r\n            normaleDerBerührtenGerade1.x = -(punkte1[i2].y - punkte1[minIndex].y);\r\n\r\n        }\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte2, punkte1[0])) {\r\n        return true;\r\n    }\r\n\r\n    for (let i = 0; i < endIndex1; i++) {\r\n        let p1a = punkte1[i];\r\n        let p1b = punkte1[(i + 1) % punkte1.length];\r\n        for (let j = 0; j < endIndex2; j++) {\r\n            let p2a = punkte2[j];\r\n            let p2b = punkte2[(j + 1) % punkte2.length];\r\n\r\n            if (streckeSchneidetStrecke(p1a, p1b, p2a, p2b)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function länge(vektor: Punkt): number {\r\n    return Math.sqrt(vektor.x * vektor.x + vektor.y * vektor.y);\r\n}\r\n\r\nexport function einheitsVektor(vektor: Punkt): Punkt {\r\n    let l = länge(vektor);\r\n    return { x: vektor.x / l, y: vektor.y / l };\r\n}\r\n\r\n// export function normalenvektorBeiImpactEinesKreises(punkte: Punkt[], isMove: boolean[], k: Kreis): Punkt {\r\n\r\n//     let minAbstand = 100000;\r\n//     let minIndex = 0;\r\n//     let m = k.getMitte();\r\n\r\n//     for (let i = 0; i < punkte.length - 1; i++) {\r\n//         if (isMove != null && !isMove[i]) {\r\n//             let j = (i + 1) % punkte.length;\r\n\r\n//             let d = abstandPunktZuStrecke(punkte[i], punkte[j], m);\r\n//             if (d < minAbstand) {\r\n//                 minAbstand = d;\r\n//                 minIndex = i;\r\n//             }\r\n\r\n//             // console.log(\"\" + i + \": (\" + punkte[i].x + \",\" + punkte[i].y + \")->(\" + punkte[j].x + \",\" + punkte[j].y + \"): \" + d);\r\n//         }\r\n//     }\r\n//     let i2 = (minIndex + 1) % punkte.length;\r\n\r\n//     // let v = {x: punkte[i2].x - punkte[minIndex].x, y: punkte[i2].y - punkte[minIndex].y};\r\n//     let am = { x: m.x - punkte[minIndex].x, y: m.y - punkte[minIndex].y };\r\n\r\n//     let n = {\r\n//         y: punkte[i2].x - punkte[minIndex].x,\r\n//         x: -(punkte[i2].y - punkte[minIndex].y)\r\n//     };\r\n\r\n//     let sp = skalarprodukt(n, am);\r\n//     if (sp > 0) {\r\n//         return n;\r\n//     } else {\r\n//         return { x: -n.x, y: -n.y };\r\n//     }\r\n\r\n// }\r\n\r\n// export function normalenvektorBeiImpactAufKreis(punkte: Punkt[], k: Kreis): Punkt {\r\n\r\n//     let schnittpunkte = [];\r\n//     let m = k.getMitte();\r\n//     let r = k.getRadius();\r\n\r\n//     for (let i = 0; i < punkte.length; i++) {\r\n//         let j = (i + 1) % punkte.length;\r\n//         schnittpunkteKreisStrecke(m, r, punkte[i], punkte[j], schnittpunkte);\r\n//     }\r\n\r\n//     if (schnittpunkte.length == 0) {\r\n//         return {\r\n//             x: punkte[0].x - m.x, y: punkte[0].y - m.y\r\n//         }\r\n//     }\r\n\r\n//     let schwerpunkt = { x: 0, y: 0 };\r\n//     for (let p of schnittpunkte) {\r\n//         schwerpunkt.x += p.x;\r\n//         schwerpunkt.y += p.y;\r\n//     }\r\n//     schwerpunkt.x /= punkte.length;\r\n//     schwerpunkt.y /= punkte.length;\r\n\r\n//     return {\r\n//         x: schwerpunkt.x - m.x,\r\n//         y: schwerpunkt.y - m.y\r\n//     }\r\n\r\n// }\r\n\r\nexport function skalarprodukt(v1: Punkt, v2: Punkt) {\r\n    return v1.x * v2.x + v1.y * v2.y;\r\n}\r\n\r\n\r\nexport function zufall(von: number, bis: number){\r\n    return Math.random()*(bis - von) + von;\r\n}\r\n\r\nexport function intZufall(von: number, bis: number){\r\n    return Math.trunc(Math.random()*(bis - von + 1 - 0.00000001) + von);\r\n}\r\n\r\nexport function vektorVonPolarkoordinaten(winkelGrad: number, länge: number){\r\n    let winkel = winkelGrad/180*Math.PI;\r\n    return {\r\n        x: länge * Math.cos(winkel),\r\n        y: länge * Math.sin(winkel)\r\n    }\r\n}\r\n\r\nexport function farbeAusRGB(rot: number, grün: number, blau: number):number{\r\n    return blau + 256 * (rot + 256 * grün);\r\n}","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, booleanPrimitiveType, DoublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { WorldHelper, MouseListenerShapeData } from \"./World.js\";\r\nimport { Punkt, polygonEnthältPunkt, polygonBerührtPolygon, polygonBerührtPolygonExakt } from \"../../tools/MatheTools.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { GroupHelper, GroupClass } from \"./Group.js\";\r\nimport { CircleHelper } from \"./Circle.js\";\r\nimport { TurtleHelper } from \"./Turtle.js\";\r\nimport { Enum, EnumInfo } from \"src/client/compiler/types/Enum.js\";\r\n\r\nexport class ShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Shape\", module, \"Basisklasse für alle graphischen Objekte die verschoben, skaliert und gedreht werden können\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Actor\"));\r\n        this.isAbstract = true;\r\n\r\n        // let matrixType = new ArrayType(doublePrimitiveType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n        let directionType = <Enum>(<any>module.typeStore.getType(\"Direction\"));\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n\r\n        this.addAttribute(new Attribute(\"angle\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.angle;\r\n\r\n            }, false, Visibility.protected, true, \"Richtung\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerX\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterX();\r\n\r\n            }, false, Visibility.protected, true, \"X-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerY\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterY();\r\n\r\n            }, false, Visibility.protected, true, \"Y-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        // this.addAttribute(new Attribute(\"transformation\", matrixType,\r\n        //     (value) => {\r\n\r\n        //         let rto: RuntimeObject = value.object;\r\n        //         let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n        //         if (helper == null || helper.isDestroyed || helper.displayObject.transform == null) {\r\n        //             value.value = null;\r\n        //             return;\r\n        //         }\r\n\r\n        //         let matrix = helper.displayObject.localTransform.toArray(false);\r\n\r\n        //         if (value.value == null) {\r\n        //             value.value = [];\r\n\r\n        //             for (let n of matrix) {\r\n        //                 value.value.push({\r\n        //                     type: doublePrimitiveType,\r\n        //                     value: n\r\n        //                 });\r\n        //             }\r\n        //         } else {\r\n        //             let i: number = 0;\r\n        //             for (let n of matrix) {\r\n        //                 value.value[i++].value = n;\r\n        //             }\r\n        //         }\r\n\r\n        //     }, false, Visibility.protected, true, \"Transformationsmatrix\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg, centerX, centerY);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist (centerX, centerY).\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist der 'Mittelpunkt' des Objekts\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, centerX, centerY);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der Punkt (centerX, centerY)\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"isOutsideView\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"isOutsideView\")) return;\r\n\r\n                return sh.isOutsideView();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn sich die Bounding Box des Objekts außerhalb des sichtbaren Bereichs befindet. \", false));\r\n\r\n        this.addMethod(new Method(\"getCenterX\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterX\")) return;\r\n\r\n                return sh.getCenterX();\r\n\r\n            }, false, false, \"Gibt die x-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getCenterY\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterY\")) return;\r\n\r\n                return sh.getCenterY();\r\n\r\n            }, false, false, \"Gibt die y-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAngle\")) return;\r\n\r\n                return sh.angle;\r\n\r\n            }, false, false, \"Gibt den Winkel des Grafikobjekts in Grad zurück. Winkel == 0 bedeutet: dieselbe Richtung wie zum Zeipunkt der Instanzierung des Objekts. Positive Winkelzunahme bedeutet Rechtsdrehung.\", false));\r\n\r\n        this.addMethod(new Method(\"containsPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"containsPoint\")) return;\r\n\r\n                return sh.containsPoint(x, y);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt den Punkt (x, y) enthält.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWith\", new Parameterlist([\r\n            { identifier: \"object\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der Parameter der Methode collidesWith darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWith\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode collidesWith als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.collidesWith(sh1);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt und das andere Grafikobjekt kollidieren.\", false));\r\n\r\n        this.addMethod(new Method(\"moveBackFrom\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"keepColliding\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let keepColliding: boolean = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode moveBackFrom darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"moveBackFrom\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode moveBackFrom als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                sh.moveBackFrom(sh1, keepColliding);\r\n\r\n            }, false, false, \"Rückt das Objekt entlang der letzten durch move vorgegebenen Richtung zurück, bis es das übergebene Objekt gerade noch (keepColliding == true) bzw. gerade nicht mehr (keepColliding == false) berührt.\", false));\r\n\r\n        this.addMethod(new Method(\"directionRelativeTo\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), directionType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode directionRelativeTo darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"directionRelativeTo\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode directionRelativeTo als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.directionRelativeTo(sh1, directionType);\r\n\r\n            }, false, false, \"Gibt die Richtung (top, right, bottom oder left) zurück, in der das graphische Objekt relativ zum übergebenen graphischen Objekt steht.\", false));\r\n\r\n        this.addMethod(new Method(\"moveTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"moveTo\")) return;\r\n\r\n                sh.move(x - sh.getCenterX(), y - sh.getCenterY());\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt so, dass sich sein 'Mittelpunkt' an den angegebenen Koordinaten befindet.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenter\")) return;\r\n\r\n                sh.defineCenter(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenterRelative\", new Parameterlist([\r\n            { identifier: \"xRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenterRelative\")) return;\r\n\r\n                sh.defineCenterRelative(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dabei bedeutet (XRel/YRel) = (0/0) die linke obere Ecke der Bounding Box des Objekts, (XRel/YRel) = (1/1) die rechte untere Ecke. Defaultwert ist (XRel/YRel) = (0.5/0.5), also der Diagonalenschnittpunkt der Bounding Box. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\\n\\nVORSICHT: Diese Methode arbeitet nicht mehr korrekt, wenn das Objekt schon gedreht wurde!\", false));\r\n\r\n        this.addMethod(new Method(\"setAngle\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let angleDeg: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setAngle\")) return;\r\n\r\n                sh.rotate(angleDeg - sh.angle);\r\n\r\n            }, false, false, \"Dreht das Objekt zur angegebenen Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"setVisible\", new Parameterlist([\r\n            { identifier: \"visible\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let visible: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setVisible\")) return;\r\n\r\n                sh.setVisible(visible);\r\n\r\n            }, false, false, \"Macht das Grafikobjekt sichtbar (visible == true) bzw. unsichtbar (visible == false).\", false));\r\n\r\n        this.addMethod(new Method(\"setStatic\", new Parameterlist([\r\n            { identifier: \"isStatic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let isStatic: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setStatic\")) return;\r\n\r\n                sh.setStatic(isStatic);\r\n\r\n            }, false, false, \"setStatic(true) hat zur Folge, dass die Ansicht des Objekts durch Transformationen des World-Objekts nicht verändert wird.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste nach unten drückt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste loslässt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und bewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n            this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht. Die Farbe wird als int-Wert angegeben, praktischerweise hexadezimal, also z.B. tint(0x303030).', false));\r\n\r\n        this.addMethod(new Method(\"startTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = true;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt JEDE Bewegung des Mauszeigers (auch wenn sich dieser außerhalb des Objekts befindet) ein MouseMove-Ereignis für dieses Objekt auslöst. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"stopTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = false;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt nur noch dann Bewegungen des Mauszeigers ein MouseMove-Ereignis für dieses Objekt auslösen, wenn sich der Mauszeiger über dem Objekt befindet. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"reactToMouseEventsWhenInvisible\", new Parameterlist([\r\n            { identifier: \"react\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let react: boolean = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.reactToMouseEventsWhenInvisible = react;\r\n\r\n            }, false, false, 'Legt fest, ob das Objekt auf Mausevents (buttondown, mouse move, ...) reagiert, wenn es unsichtbar ist.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"defineDirection\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let direction: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"defineDirection\")) return;\r\n\r\n                sh.directionRad = direction / 180 * Math.PI;\r\n\r\n            }, false, false, 'Setzt die Blickrichtung des graphischen Objekts. Dies ist die Richtung, in die es durch Aufruf der Methode forward bewegt wird. \\nBemerkung: die Methode rotate ändert auch die Blickrichtung!', false));\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"distance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let distance: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(distance);\r\n\r\n            }, false, false, 'Bewegt das Objekt um die angegebene Länge in Richtung seiner Blickrichtung.\\nBemerkung: Die Blickrichtung kann mit defineDirection gesetzt werden.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, true, false, 'Erstellt eine Kopie des Grafikobjekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"bringToFront\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"bringToFront\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"sendToBack\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"sendToBack\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"getHitPolygon\", new Parameterlist([\r\n        ]), new ArrayType(vector2Class),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHitPolygon\")) return;\r\n\r\n                return sh.getHitPolygon(vector2Class);\r\n\r\n            }, false, false, \"Gibt ein Array zurück, das die vier Eckpunkte des Hit-Polygons in Form von Vector2-Ortsvektoren enthält. Bei den Klassen Rectangle, Triangle und Polygon sind dies die Eckpunkte.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class ShapeHelper extends ActorHelper {\r\n\r\n    displayObject: PIXI.DisplayObject;\r\n\r\n    belongsToGroup: GroupHelper;\r\n\r\n    centerXInitial: number;\r\n    centerYInitial: number;\r\n\r\n    angle: number = 0;\r\n\r\n    hitPolygonInitial: Punkt[] = null;\r\n    hitPolygonTransformed: Punkt[] = null;\r\n    hitPolygonDirty = true;\r\n\r\n    reactToMouseEventsWhenInvisible: boolean = false;\r\n\r\n    mouseLastSeenInsideObject: boolean = false;\r\n\r\n    trackMouseMove: boolean = false;\r\n\r\n    scaleFactor: number = 1.0;\r\n\r\n    directionRad: number = 0;\r\n\r\n    lastMoveDx: number = 0;\r\n    lastMoveDy: number = 0;\r\n\r\n    copyFrom(shapeHelper: ShapeHelper) {\r\n\r\n        this.centerXInitial = shapeHelper.centerXInitial;\r\n        this.centerYInitial = shapeHelper.centerYInitial;\r\n\r\n        if (shapeHelper.hitPolygonInitial != null) {\r\n            this.hitPolygonInitial = [];\r\n            for (let p of shapeHelper.hitPolygonInitial) this.hitPolygonInitial.push(Object.assign({}, p));\r\n        }\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.hitPolygonDirty = shapeHelper.hitPolygonDirty;\r\n        this.reactToMouseEventsWhenInvisible = shapeHelper.reactToMouseEventsWhenInvisible;\r\n        this.mouseLastSeenInsideObject = shapeHelper.mouseLastSeenInsideObject;\r\n\r\n        this.displayObject.localTransform.copyFrom(shapeHelper.displayObject.transform.localTransform);\r\n        this.displayObject.updateTransform();\r\n\r\n    }\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n\r\n        super(interpreter, runtimeObject);\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerShapeData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>runtimeObject.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        shapeHelper: this,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.worldHelper.mouseListenerShapes.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n        if (this.worldHelper.defaultGroup == null) {\r\n            this.worldHelper.shapes.push(this);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        this.hitPolygonDirty = dirty;\r\n    }\r\n\r\n    bringOnePlaneFurtherToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index < highestIndex) {\r\n            container.setChildIndex(this.displayObject, index + 1);\r\n        }\r\n    }\r\n\r\n    bringOnePlaneFurtherToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index > 0) {\r\n            container.setChildIndex(this.displayObject, index - 1);\r\n        }\r\n    }\r\n\r\n    bringToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        container.setChildIndex(this.displayObject, highestIndex);\r\n    }\r\n\r\n    sendToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        container.setChildIndex(this.displayObject, 0);\r\n    }\r\n\r\n    addToDefaultGroup() {\r\n        if (this.worldHelper.defaultGroup != null) {\r\n            this.runtimeObject.intrinsicData[\"Actor\"] = this;\r\n            let groupHelper = <GroupHelper>this.worldHelper.defaultGroup;\r\n            groupHelper.add(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    tint(color: string|number) {\r\n        let c: number;\r\n        if(typeof color == 'string'){\r\n            c = ColorHelper.parseColorToOpenGL(color).color;\r\n        } else {\r\n            c = color;\r\n        }\r\n        //@ts-ignore\r\n        if (this.displayObject.tint) {\r\n            //@ts-ignore\r\n            this.displayObject.tint = c;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n\r\n        this.displayObject.visible = visible;\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n\r\n        // if(!(this instanceof TurtleHelper) && (shapeHelper instanceof TurtleHelper)){\r\n        if (this[\"lineElements\"] == null && (shapeHelper[\"lineElements\"] != null)) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if(this.displayObject == null || shapeHelper.displayObject == null) return;\r\n\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        return polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true);\r\n\r\n    }\r\n\r\n    directionRelativeTo(shapeHelper: ShapeHelper, directionType: Enum) {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        let dx1 = bb1.left - bb.right;  // positive if left\r\n        let dx2 = bb.left - bb1.right;  // positive if right\r\n\r\n        let dy1 = bb1.top - bb.bottom;  // positive if top\r\n        let dy2 = bb.top - bb1.bottom;  // positive if bottom\r\n\r\n        let enuminfo = directionType.enumInfoList;\r\n        let pairs: { distance: number, ei: EnumInfo }[] = [];\r\n\r\n        if (this.lastMoveDx > 0) {\r\n            pairs.push({ distance: dx1, ei: enuminfo[3] });\r\n        } else if (this.lastMoveDx < 0) {\r\n            pairs.push({ distance: dx2, ei: enuminfo[1] });\r\n        }\r\n\r\n        if (this.lastMoveDy > 0) {\r\n            pairs.push({ distance: dy1, ei: enuminfo[0] });\r\n        } else if (this.lastMoveDy < 0) {\r\n            pairs.push({ distance: dy2, ei: enuminfo[2] });\r\n        }\r\n\r\n        if (pairs.length == 0) {\r\n            pairs = [\r\n                { distance: dx1, ei: enuminfo[3] },\r\n                { distance: dx2, ei: enuminfo[1] },\r\n                { distance: dy1, ei: enuminfo[0] },\r\n                { distance: dy2, ei: enuminfo[2] }\r\n            ]\r\n        }\r\n\r\n\r\n        let max = pairs[0].distance;\r\n        let ei = pairs[0].ei;\r\n        for (let i = 1; i < pairs.length; i++) {\r\n            if (pairs[i].distance > max) {\r\n                max = pairs[i].distance;\r\n                ei = pairs[i].ei;\r\n            }\r\n        }\r\n\r\n        return ei.object;\r\n    }\r\n\r\n\r\n    moveBackFrom(sh1: ShapeHelper, keepColliding: boolean) {\r\n\r\n        // subsequent calls to move destroy values in this.lastMoveDx and this.lastMoveDy, so:\r\n        let lmdx = this.lastMoveDx;\r\n        let lmdy = this.lastMoveDy;\r\n\r\n        let length = Math.sqrt(lmdx * lmdx + lmdy * lmdy);\r\n        if (length < 0.001) return;\r\n\r\n        if (!this.collidesWith(sh1)) return;\r\n\r\n        let parameterMax = 0;       // collision with this parameter\r\n        this.move(-lmdx, -lmdy);\r\n\r\n        let currentParameter = -1;  // move to parameterMin\r\n\r\n        while (this.collidesWith(sh1)) {\r\n            parameterMax = currentParameter;    // collision at this parameter\r\n            let newParameter = currentParameter * 2;\r\n            this.move(lmdx * (newParameter - currentParameter), lmdy * (newParameter - currentParameter));\r\n            currentParameter = newParameter;\r\n            if ((currentParameter + 1) * length < -100) {\r\n                this.move(lmdx * (-1 - currentParameter), lmdy * (-1 - currentParameter));\r\n                return;\r\n            }\r\n        }\r\n        let parameterMin = currentParameter;\r\n\r\n        let isColliding: boolean = false;\r\n        // Situation now: no collision at parameterMin == currentParameter, collision at parameterMax\r\n        while ((parameterMax - parameterMin) * length > 1) {\r\n            let np = (parameterMax + parameterMin) / 2;\r\n            this.move(lmdx * (np - currentParameter), lmdy * (np - currentParameter));\r\n            if (isColliding = this.collidesWith(sh1)) {\r\n                parameterMax = np;\r\n            } else {\r\n                parameterMin = np;\r\n            }\r\n            currentParameter = np;\r\n        }\r\n\r\n        if (keepColliding && !isColliding) {\r\n            this.move(lmdx * (parameterMax - currentParameter), lmdy * (parameterMax - currentParameter));\r\n        } else if (isColliding && !keepColliding) {\r\n            this.move(lmdx * (parameterMin - currentParameter), lmdy * (parameterMin - currentParameter));\r\n        }\r\n\r\n        this.lastMoveDx = lmdx;\r\n        this.lastMoveDy = lmdy;\r\n    }\r\n\r\n\r\n\r\n    containsPoint(x: number, y: number) {\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n    }\r\n\r\n    transformHitPolygon() {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n\r\n        this.hitPolygonTransformed = [];\r\n        let m = this.displayObject.transform.worldTransform;\r\n        for (let p of this.hitPolygonInitial) {\r\n            this.hitPolygonTransformed.push({\r\n                x: (m.a * p.x) + (m.c * p.y) + m.tx,\r\n                y: (m.b * p.x) + (m.d * p.y) + m.ty\r\n            });\r\n        }\r\n        this.setHitPolygonDirty(false);\r\n\r\n    }\r\n\r\n    isOutsideView() {\r\n        let bounds = this.displayObject.getBounds(true);\r\n        let wh = this.worldHelper;\r\n        return bounds.right < wh.currentLeft || bounds.left > wh.currentLeft + wh.currentWidth\r\n            || bounds.bottom < wh.currentTop || bounds.top > wh.currentTop + wh.currentHeight;\r\n    }\r\n\r\n    defineCenter(x: number, y: number) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n    }\r\n\r\n    defineCenterRelative(x: number, y: number) {\r\n        let bounds = this.displayObject.getBounds(false);\r\n        this.defineCenter(bounds.left + bounds.width * x, bounds.top + bounds.height * y);\r\n    }\r\n\r\n    move(dx: number, dy: number) {\r\n\r\n        if (dx != 0 || dy != 0) {\r\n            this.lastMoveDx = dx;\r\n            this.lastMoveDy = dy;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(dx, dy);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n    }\r\n\r\n    forward(distance: number) {\r\n        let dx = distance * Math.cos(this.directionRad);\r\n        let dy = -distance * Math.sin(this.directionRad);\r\n        this.move(dx, dy);\r\n    }\r\n\r\n    rotate(angleInDeg: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.updateTransform();       // necessary if world coordinate system is scaled\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.rotate(-angleInDeg / 180 * Math.PI);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.angle += angleInDeg;\r\n        this.directionRad += angleInDeg / 180 * Math.PI;\r\n    }\r\n\r\n    mirrorXY(scaleX: number, scaleY: number) {\r\n        let cX: number, cY: number;\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.localTransform.apply(p, p);\r\n        cX = p.x;\r\n        cY = p.y;\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(scaleX, scaleY);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n\r\n    scale(factor: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(factor, factor);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.scaleFactor *= factor;\r\n\r\n    }\r\n\r\n    public getCenterX(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        // this.displayObject.localTransform.apply(p, p);\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.x;\r\n    }\r\n\r\n    public getCenterY(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.y;\r\n    }\r\n\r\n    public abstract render(): void;\r\n\r\n    public destroy(): void {\r\n        super.destroy();\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.remove(this.runtimeObject);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(this);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        let index1 = this.worldHelper.shapesNotAffectedByWorldTransforms.indexOf(this);\r\n        if (index1 >= 0) {\r\n            this.worldHelper.shapesNotAffectedByWorldTransforms.splice(index1, 1);\r\n        }\r\n\r\n    }\r\n\r\n    getCollidingShapes(groupHelper: GroupHelper, shapeType: Type): any {\r\n        let collidingShapes: Value[] = [];\r\n        for (let shape of groupHelper.shapes) {\r\n            let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (shapeHelper.collidesWith(this)) {\r\n                collidingShapes.push({\r\n                    type: shapeType,\r\n                    value: shape\r\n                });\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n    }\r\n\r\n    abstract getCopy(klass: Klass): RuntimeObject;\r\n\r\n    getHitPolygon(vector2Class: Klass): Value[] {\r\n\r\n        if (this.hitPolygonDirty) {\r\n            this.transformHitPolygon();\r\n        }\r\n\r\n        let ret: Value[] = [];\r\n        for (let p of this.hitPolygonTransformed) {\r\n            let ro = new RuntimeObject(vector2Class);\r\n            ro.attributes = [{ type: doublePrimitiveType, value: p.x }, { type: doublePrimitiveType, value: p.y }];\r\n            ret.push({ type: vector2Class, value: ro });\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    setStatic(isStatic: boolean) {\r\n        let list = this.worldHelper.shapesNotAffectedByWorldTransforms;\r\n        if (isStatic) {\r\n            list.push(this);\r\n        } else {\r\n            let index = list.indexOf(this);\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { isPrefixUnaryExpression } from \"typescript\";\r\nimport { BufferResource } from \"@pixi/core\";\r\nimport { FORMATS } from \"@pixi/constants\";\r\n\r\nexport class BitmapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Bitmap\", module, \"Rechteckige Bitmap mit beliebiger Auflösung und Positionierung in der Grafikausgabe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"Bitmap\", new Parameterlist([\r\n            { identifier: \"pointsX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"pointsY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayWidth\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayHeight\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let pointsX: number = parameters[1].value;\r\n                let pointsY: number = parameters[2].value;\r\n                let left: number = parameters[3].value;\r\n                let top: number = parameters[4].value;\r\n                let width: number = parameters[5].value;\r\n                let height: number = parameters[6].value;\r\n\r\n                let rh = new BitmapHelperNew(pointsX, pointsY, left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Bitmap. pointsX bzw. pointsY bezeichnet Anzahl der Bildpunkte in x bzw. y-Richtung, (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(x, y, colorType);\r\n\r\n            }, false, false, 'Gibt die Farbe des Punkts (x, y) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\". 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color, 1);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color, alpha);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Bitmap-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clone\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clone\")) return;\r\n\r\n                return sh.getCopyOrClone(<Klass>o.class, true);\r\n\r\n            }, false, false, 'Erstellt ein weiteres Bitmap-Objekt, das auf dieselben Pixeldaten zurückgreift.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class BitmapHelperNew extends ShapeHelper {\r\n\r\n    texture: PIXI.Texture;\r\n    data: Uint32Array;\r\n\r\n    isBigEndian: boolean = true;\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        return this.getCopyOrClone(klass, false)\r\n    }\r\n\r\n    getCopyOrClone(klass: Klass, clone: boolean = false): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let bh: BitmapHelperNew = new BitmapHelperNew(this.anzahlX, this.anzahlY, this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro, this, clone);\r\n\r\n        ro.intrinsicData[\"Actor\"] = bh;\r\n\r\n        bh.copyFrom(this);\r\n        bh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    constructor(public anzahlX, public anzahlY, public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        let uInt32 = new Uint32Array([0x11223344]);\r\n        let uInt8 = new Uint8Array(uInt32.buffer);\r\n     \r\n        if(uInt8[0] === 0x44) {\r\n            this.isBigEndian = false;\r\n        } else if (uInt8[0] === 0x11) {\r\n            this.isBigEndian = true;\r\n        }\r\n\r\n        // TODO: Little Endian...\r\n\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: left, y: top + height }, { x: left + width, y: top + height }, { x: left + width, y: top }\r\n        ];\r\n\r\n        this.initGraphics(bitmapToCopy, clone);\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        sprite.localTransform.scale(width/anzahlY, height/anzahlY);\r\n        sprite.localTransform.translate(left, top);\r\n        //@ts-ignore\r\n        sprite.transform.onChange();\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        sprite.localTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n\r\n\r\n        this.addToDefaultGroup();\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    protected initGraphics(bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n\r\n        if(bitmapToCopy == null){\r\n            this.data = new Uint32Array(this.anzahlX * this.anzahlY);\r\n        } else {\r\n            if(clone){\r\n                this.data = bitmapToCopy.data;\r\n            } else {\r\n                this.data = new Uint32Array(bitmapToCopy.data);\r\n            }\r\n        }\r\n        \r\n        let u8Array = new Uint8Array(this.data.buffer);\r\n\r\n        if(!clone){\r\n            let bufferResource = new PIXI.BufferResource(u8Array, {width: this.anzahlX, height: this.anzahlY});\r\n            let bt = new PIXI.BaseTexture(bufferResource, {\r\n                scaleMode: PIXI.SCALE_MODES.NEAREST \r\n            });\r\n            this.texture = new PIXI.Texture(bt);\r\n        } else {\r\n            this.texture = bitmapToCopy.texture;\r\n        }\r\n\r\n        this.displayObject = new PIXI.Sprite(this.texture);\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n    }\r\n\r\n    uploadData(){\r\n        this.texture.baseTexture.update();\r\n    }\r\n\r\n    public getFarbeAsObject(x: number, y: number, colorType: Klass): RuntimeObject {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        // let a = this.data[i + 3];\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let c = this.data[i];\r\n\r\n        let red = c & 0xff;\r\n        let green = (c & 0xff00) >> 8;\r\n        let blue = (c & 0xff0000) >> 16;\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            hex: ColorHelper.intColorToHexRGB(c >> 8)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n    public istFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        let c1 = this.data[i];\r\n        let red = c1 & 0xff;\r\n        let green = (c1 & 0xff00) >> 8;\r\n        let blue = (c1 & 0xff0000) >> 16;\r\n\r\n\r\n        return c == red*0x10000 + green * 0x100 + blue;\r\n\r\n    }\r\n\r\n    public setzeFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            if (alpha == null) alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n            if (alpha == null) alpha = 1.0;\r\n        }\r\n\r\n        this.data[i] = Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16);\r\n        \r\n        this.uploadData();\r\n    }\r\n\r\n    public fillAll(color: string | number, alpha?: number) {\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        this.data.fill(Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16));\r\n        // this.data.fill(0xffff0000);\r\n        \r\n        this.uploadData();\r\n    }\r\n    \r\n    public setzeFarbeRGBA(x: number, y: number, r: number, g: number, b: number, alpha: number) {\r\n        let c = alpha * 0xff000000 + b*0x10000 + g * 0x100 + r;\r\n        let i = (x + y * (this.anzahlX));\r\n        this.data[i] = c;\r\n        this.uploadData();\r\n    }\r\n\r\n    public getFarbe(x: number, y: number): number {\r\n        let c = this.data[x + y * this.anzahlX] & 0xffffff;\r\n        return (c & 0xff) << 16 + (c & 0xff00) + (c & 0xff0000) >> 16;\r\n    }\r\n\r\n    public getAlpha(x: number, y: number): number {\r\n        return (this.data[x + y * this.anzahlX] & 0xff000000) >> 24 / 255;\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType, voidPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\n\r\nexport class FilledShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"FilledShape\", module, \"Basisklasse für grafische Objekte mit Füllfarbe und Randfarbe, beide wahlweise auch transparent\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n        this.isAbstract = true;\r\n\r\n        let that = this;\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"getFillColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.fillColor, sh.fillColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Füllfarbe des Objekts zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getBorderColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.borderColor, sh.borderColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Randfarbe des Objekts zurück.', false));\r\n\r\n        this.addAttribute(new Attribute(\"borderWidth\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: FilledShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null) {\r\n                    value.value = Number.NaN;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.borderWidth;\r\n\r\n            }, false, Visibility.protected, true, \"Randbreite in Pixeln\"));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"getAlpha\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAlpha\")) return;\r\n\r\n                return sh.fillAlpha;\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderWidth\", new Parameterlist([\r\n            { identifier: \"widthInPixel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderWidth\")) return;\r\n\r\n                sh.setBorderWidth(width);\r\n\r\n            }, false, false, 'Setzt die Linienbreite des Randes (Einheit: Pixel)\"', false));\r\n\r\n\r\n            this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    rgbaToHex(rgb: number, alpha: number): string {\r\n        let s = rgb == null ? \"---\" : rgb.toString(16);\r\n        while (s.length < 6) s = \"0\" + s;\r\n\r\n        let a = Math.round(alpha * 255).toString(16);\r\n        if (a.length < 2) a = \"0\" + a;\r\n\r\n        return \"#\" + s + a;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class FilledShapeHelper extends ShapeHelper {\r\n\r\n    fillColor: number = 0x8080ff;\r\n    fillAlpha: number = 1.0;\r\n\r\n    borderColor: number = null;\r\n    borderAlpha: number = 1.0;\r\n    borderWidth: number = 10;\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n    }\r\n\r\n    copyFrom(fsh: FilledShapeHelper) {\r\n        super.copyFrom(fsh);\r\n        this.fillColor = fsh.fillColor;\r\n        this.fillAlpha = fsh.fillAlpha;\r\n\r\n        this.borderColor = fsh.borderColor;\r\n        this.borderAlpha = fsh.borderAlpha;\r\n        this.borderWidth = fsh.borderWidth;\r\n    }\r\n\r\n    setAlpha(alpha: number) {\r\n\r\n        this.fillAlpha = alpha;\r\n        this.borderAlpha = alpha;\r\n        this.render();\r\n    }\r\n\r\n    setBorderColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.borderColor = c.color;\r\n            this.borderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.borderColor = color;\r\n            this.borderAlpha = alpha;\r\n        }\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.fillColor = c.color;\r\n            this.fillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.fillColor = color;\r\n            if(alpha != null) this.fillAlpha = alpha;\r\n        }\r\n\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setBorderWidth(width: number) {\r\n        this.borderWidth = width;\r\n        this.render();\r\n    }\r\n\r\n    public getFarbeAsObject(color: number, alpha: number, colorType: Klass): RuntimeObject {\r\n\r\n        if (color == null) return null;\r\n\r\n        let r = (color & 0xff0000) >> 16;\r\n        let g = (color & 0xff00) >> 8;\r\n        let b = color & 0xff;\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: r,\r\n            green: g,\r\n            blue: b,\r\n            hex: ColorHelper.intColorToHexRGB(color)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class CircleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Circle\", module, \"Kreis\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Circle\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n\r\n                let rh = new CircleHelper(mx, my, r, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreis. (mx, my) ist der Mittelpunt, r sein Radius.', true));\r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreises.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Circle-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class CircleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: CircleHelper = new CircleHelper(this.mx, this.my, this.r, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI / 8;\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawCircle(this.mx, this.my, this.r);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx * dx + dy * dy <= this.r * this.r;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (shapeHelper instanceof CircleHelper) {\r\n\r\n            let p1 = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.updateTransform();\r\n            this.displayObject.transform.worldTransform.apply(p1, p1);\r\n\r\n            let radius1 = this.r * this.displayObject.scale.x\r\n            \r\n            let p2 = new PIXI.Point(shapeHelper.centerXInitial, shapeHelper.centerYInitial);\r\n            shapeHelper.displayObject.updateTransform();\r\n            shapeHelper.displayObject.transform.worldTransform.apply(p2, p2);\r\n            \r\n            let radius2 = shapeHelper.r * shapeHelper.displayObject.scale.x\r\n\r\n            let d1 = p1.x - p2.x;\r\n            let d2 = p1.y - p2.y;\r\n\r\n            return d1*d1 + d2*d2 <= (radius1 + radius2) * (radius1 + radius2);\r\n\r\n\r\n        } else {\r\n            return super.collidesWith(shapeHelper);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class SectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sector\", module, \"Kreisbogen/Kreissektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Sector\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n                let startAngle: number = parameters[4].value;\r\n                let endAngle: number = parameters[5].value;\r\n\r\n                let rh = new SectorHelper(mx, my, r, startAngle/180*Math.PI, endAngle/180*Math.PI, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreisbogen bzw. (falls die Füllfarbe nicht null ist) Kreissektor. (mx, my) ist der Mittelpunt, r sein Radius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\r\n\r\n            this.addMethod(new Method(\"drawRadii\", new Parameterlist([\r\n                { identifier: \"radiiZeichnen\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: boolean = parameters[1].value;\r\n                    let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"drawRadii\")) return;\r\n    \r\n                    sh.drawRadii = r;\r\n                    sh.render();\r\n    \r\n                }, false, false, 'Legt fest, ob beim Zeichnen des Umrisses auch die beiden Radii ( = Strecken vom Mittelpunkt zur Kreislinie) mitgezeichnet werden sollen.', false));\r\n    \r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\r\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setStartAngle\")) return;\r\n\r\n                if(angle < 0){\r\n                    angle += Math.ceil(-angle/360) * 360;\r\n                }\r\n\r\n                if(angle > 360){\r\n                    angle -= Math.trunc(angle/360) * 360;\r\n                }\r\n\r\n                sh.startAngleRad = angle/180*Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n            this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\r\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setEndAngle\")) return;\r\n\r\n                if(angle < 0){\r\n                    angle += Math.ceil(-angle/360) * 360;\r\n                }\r\n\r\n                if(angle > 360){\r\n                    angle -= Math.trunc(angle/360) * 360;\r\n                }\r\n\r\n                sh.endAngleRad = angle/180*Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getStartAngle\")) return;\r\n\r\n                return sh.startAngleRad/Math.PI*180;\r\n\r\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getEndAngle\")) return;\r\n\r\n                return sh.endAngleRad/Math.PI*180;\r\n\r\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sector-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SectorHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        public startAngleRad: number, public endAngleRad: number,\r\n        public drawRadii: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SectorHelper = new SectorHelper(this.mx, this.my, this.r, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\r\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = this.startAngleRad + deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if(Math.abs(this.startAngleRad - this.endAngleRad) < 0.00000001){\r\n            g.drawCircle(this.mx, this.my, this.r);\r\n        } else {\r\n            if(this.drawRadii){\r\n                g.moveTo(this.mx, this.my);\r\n            }\r\n            g.arc(this.mx, this.my, this.r, -this.startAngleRad, -this.endAngleRad, true);\r\n            if(this.drawRadii){\r\n                g.lineTo(this.mx, this.my);\r\n            }\r\n        }\r\n        if(this.drawRadii){\r\n            g.closePath();\r\n        }\r\n\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        let angle = Math.atan2(-dy, dx);\r\n\r\n        if (dx * dx + dy * dy <= this.r * this.r) {\r\n            let towPI = 2*Math.PI;\r\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\r\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\r\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\r\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\r\n            if(normalizedStartAngle <= normalizedEndAngle){\r\n                return ret;\r\n            } else {\r\n                return !ret;\r\n            }  \r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class ArcClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Arc\", module, \"Kreisbogenumriss (wahlweise gefüllt)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Arc\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let ri: number = parameters[3].value;\r\n                let ra: number = parameters[4].value;\r\n                let startAngle: number = parameters[5].value;\r\n                let endAngle: number = parameters[6].value;\r\n\r\n                let rh = new ArcHelper(mx, my, ri, ra, startAngle / 180 * Math.PI, endAngle / 180 * Math.PI, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreisbogen. (mx, my) ist der Mittelpunt, ri sein Innenradius, ra sein Außenradius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\r\n\r\n        this.addMethod(new Method(\"setInnerRadius\", new Parameterlist([\r\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n                sh.ri = r;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den inneren Radius des Kreisbogens\"', false));\r\n\r\n        this.addMethod(new Method(\"setOuterRadius\", new Parameterlist([\r\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n                sh.ra = r;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den äußeren Radius des Kreisbogens\"', false));\r\n\r\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\r\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setStartAngle\")) return;\r\n\r\n                if (angle < 0) {\r\n                    angle += Math.ceil(-angle / 360) * 360;\r\n                }\r\n\r\n                if (angle > 360) {\r\n                    angle -= Math.trunc(angle / 360) * 360;\r\n                }\r\n\r\n                sh.startAngleRad = angle / 180 * Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\r\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setEndAngle\")) return;\r\n\r\n                if (angle < 0) {\r\n                    angle += Math.ceil(-angle / 360) * 360;\r\n                }\r\n\r\n                if (angle > 360) {\r\n                    angle -= Math.trunc(angle / 360) * 360;\r\n                }\r\n\r\n                sh.endAngleRad = angle / 180 * Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"getInnerRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.ri * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den inneren Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getOuterRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getOuterRadius\")) return;\r\n\r\n                return sh.ra * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den äußeren Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getStartAngle\")) return;\r\n\r\n                return sh.startAngleRad / Math.PI * 180;\r\n\r\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getEndAngle\")) return;\r\n\r\n                return sh.endAngleRad / Math.PI * 180;\r\n\r\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Arc-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ArcHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public ri: number,\r\n        public ra: number,\r\n        public startAngleRad: number, public endAngleRad: number,\r\n        public drawRadii: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: ArcHelper = new ArcHelper(this.mx, this.my, this.ri, this.ra, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = this.startAngleRad + deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.ra * Math.cos(alpha),\r\n                y: this.my + this.ra * Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = this.endAngleRad - deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.ri * Math.cos(alpha),\r\n                y: this.my + this.ri * Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n\r\n        if (this.startAngleRad === void 0) { this.startAngleRad = 0; }\r\n        if (this.endAngleRad === void 0) { this.endAngleRad = Math.PI * 2; }\r\n        if (Math.abs(this.endAngleRad - this.startAngleRad) >= Math.PI * 2) {\r\n            g.drawCircle(this.mx, this.my, this.ra)\r\n                .beginHole()\r\n                .drawCircle(this.mx, this.my, this.ri)\r\n                .endHole();\r\n        } else {\r\n            g.moveTo(this.mx + this.ra * Math.cos(this.startAngleRad), this.my - this.ra * Math.sin(this.startAngleRad));\r\n            g.lineTo(this.mx + this.ri * Math.cos(this.startAngleRad), this.my - this.ri * Math.sin(this.startAngleRad));\r\n            g.arc(this.mx, this.my, this.ri, -this.startAngleRad, -this.endAngleRad, true)\r\n                .arc(this.mx, this.my, this.ra, -this.endAngleRad, -this.startAngleRad, false)\r\n        }\r\n\r\n        g.closePath();\r\n\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    \r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        let angle = Math.atan2(-dy, dx);\r\n\r\n        let r2 = dx * dx + dy * dy;\r\n\r\n        if ( r2 <= this.ra * this.ra && r2 >= this.ri * this.ri) {\r\n            let towPI = 2 * Math.PI;\r\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\r\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\r\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\r\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\r\n            if (normalizedStartAngle <= normalizedEndAngle) {\r\n                return ret;\r\n            } else {\r\n                return !ret;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\n\r\nexport type ColorClassIntrinsicData = {\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    hex: string\r\n}\r\n\r\nexport class ColorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Color\", module, \"Farbe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for (let colorName in ColorHelper.predefinedColors) {\r\n\r\n            let intColor = ColorHelper.predefinedColors[colorName];\r\n\r\n            let r: RuntimeObject = new RuntimeObject(this);\r\n\r\n            let red = (intColor & 0xff0000) >> 16;\r\n            let green = (intColor & 0xff00) >> 8;\r\n            let blue = (intColor & 0xff);\r\n\r\n            let id: ColorClassIntrinsicData = {\r\n                red: red,\r\n                green: green,\r\n                blue: blue,\r\n                hex: ColorHelper.intColorToHexRGB(intColor)\r\n            }\r\n\r\n            r.intrinsicData = id;\r\n\r\n            this.addAttribute(new Attribute(colorName, this,\r\n                (value) => { value.value = r }, true, Visibility.public, true,\r\n                \"Die Farbe \" + colorName + \" (\" + ColorHelper.intColorToHexRGB(intColor) + \") oder \" + ColorHelper.intColorToRGB(intColor)));\r\n        }\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"Color\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let red: number = Math.trunc(parameters[1].value);\r\n                let green: number = Math.trunc(parameters[2].value);\r\n                let blue: number = Math.trunc(parameters[3].value);\r\n\r\n\r\n                let intrinsicData: ColorClassIntrinsicData = {\r\n                    red: red,\r\n                    green: green,\r\n                    blue: blue,\r\n                    hex: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n            }, false, false, 'Instanziert eine neue Farbe. Red, green und blue sind die Farbanteile, jeweils als integer-Zahlen im Bereich von 0 bis 255.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return Math.floor(Math.random() * 0xffffff);\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n\r\n                let r: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let g: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let b: number = Math.floor(Math.random() * (256 - min)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maximumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                let max: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n                if (max < 0) max = 0;\r\n                if (max > 255) max = 255;\r\n\r\n                if (max < min) {\r\n                    let z = max;\r\n                    max = min;\r\n                    min = z;\r\n                }\r\n\r\n                let r: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let g: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let b: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, max der Höchstwert, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).hex;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen String.', false));\r\n\r\n        this.addMethod(new Method(\"toInt\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let cid = <ColorClassIntrinsicData>(o.intrinsicData);\r\n\r\n                return 0x10000 * cid.red + 0x100 * cid.green + cid.blue;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen int-Wert um, genauer: gibt 0x10000 * red + 0x100 * green + blue zurück.', false));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"otherColor\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let d = <ColorClassIntrinsicData>(o.intrinsicData);\r\n                let d1 = <ColorClassIntrinsicData>(o1.intrinsicData);\r\n\r\n                return (d.red == d1.red && d.green == d1.green && d.blue == d1.blue);\r\n\r\n            }, false, false, 'Vergleicht zwei Farben', false));\r\n\r\n        this.addMethod(new Method(\"getRed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).red;\r\n\r\n            }, false, false, 'Gibt den Rotanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getGreen\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).green;\r\n\r\n            }, false, false, 'Gibt den Grünanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getBlue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).blue;\r\n\r\n            }, false, false, 'Gibt den Blauanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"fromRGB\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                return (r * 0x10000 + g * 0x100 + b);\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromRGBA\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let color: string = (r * 0x1000000 + g * 0x10000 + b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSLA\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                let color: string = (rgb.r * 0x1000000 + rgb.g * 0x10000 + rgb.b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSL\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                return (rgb.r * 0x10000 + rgb.g * 0x100 + rgb.b);\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100)die Farbe.', false));\r\n\r\n    }\r\n\r\n    hslToRgb(h: number, s: number, l: number): { r: number, g: number, b: number } {\r\n\r\n        s /= 100;\r\n        l /= 100;\r\n\r\n        let c = (1 - Math.abs(2 * l - 1)) * s,\r\n            x = c * (1 - Math.abs((h / 60) % 2 - 1)),\r\n            m = l - c / 2,\r\n            r = 0,\r\n            g = 0,\r\n            b = 0;\r\n\r\n        if (0 <= h && h < 60) {\r\n            r = c; g = x; b = 0;\r\n        } else if (60 <= h && h < 120) {\r\n            r = x; g = c; b = 0;\r\n        } else if (120 <= h && h < 180) {\r\n            r = 0; g = c; b = x;\r\n        } else if (180 <= h && h < 240) {\r\n            r = 0; g = x; b = c;\r\n        } else if (240 <= h && h < 300) {\r\n            r = x; g = 0; b = c;\r\n        } else if (300 <= h && h < 360) {\r\n            r = c; g = 0; b = x;\r\n        }\r\n        r = Math.round((r + m) * 255);\r\n        g = Math.round((g + m) * 255);\r\n        b = Math.round((b + m) * 255);\r\n\r\n\r\n        return {r: r, g: g, b: b}\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class EllipseClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Ellipse\", module, \"Ellipse\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Ellipse\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let rx: number = parameters[3].value;\r\n                let ry: number = parameters[4].value;\r\n\r\n                let rh = new EllipseHelper(mx, my, rx, ry, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Ellipse. (mx, my) ist der Mittelpunt, rx und ry sind ihre Radien.', true));\r\n\r\n            this.addMethod(new Method(\"setRadiusX\", new Parameterlist([\r\n                { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusX(r);\r\n    \r\n                }, false, false, 'Setzt den x-Radius der Ellipse\"', false));\r\n\r\n            this.addMethod(new Method(\"setRadiusY\", new Parameterlist([\r\n                { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusY(r);\r\n    \r\n                }, false, false, 'Setzt den y-Radius der Ellipse\"', false));\r\n    \r\n                this.addMethod(new Method(\"copy\", new Parameterlist([\r\n                ]), this,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"copy\")) return;\r\n        \r\n                        return sh.getCopy(<Klass>o.class);\r\n        \r\n                    }, false, false, 'Erstellt eine Kopie des Ellipse-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class EllipseHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public rx: number, public ry: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: EllipseHelper = new EllipseHelper(this.mx, this.my, this.rx, this.ry, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    \r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI/8;\r\n        for(let i = 0; i < 16; i++){\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.rx*Math.cos(alpha),\r\n                y: this.my + this.ry*Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawEllipse(this.mx, this.my, this.rx, this.ry);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    setRadiusX(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    setRadiusY(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx*dx/(this.rx*this.rx) + dy*dy/(this.ry*this.ry) <= 1;\r\n    \r\n    }\r\n    \r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, Attribute, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper, ShapeClass } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class CollisionPairClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"CollisionPair\", module, \"Speichert die Referenzen auf zwei Figuren, die gerade kollidiert sind. Diese Klasse von den Kollisionsmethden der Klasse Group benutzt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n        this.addAttribute(new Attribute(\"shapeA\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeA\"];\r\n\r\n            }, false, Visibility.public, true, \"Erstes an der Kollision beteiligtes Shape\"));\r\n\r\n        this.addAttribute(new Attribute(\"shapeB\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeB\"];\r\n\r\n            }, false, Visibility.public, true, \"Zweites an der Kollision beteiligtes Shape\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class GroupClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Group\", module, \"Klasse zum Gruppieren grafischer Elemente. Die gruppierten Elemente können miteinander verschoben, gedreht, gestreckt sowie ein- und ausgeblendet werden. Zudem besitzt die Klasse Methoden zur schnellen Erkennung von Kollision mit Elementen außerhalb der Gruppe.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let collisionPairType = module.typeStore.getType(\"CollisionPair\");\r\n        let collisionPairArrayType = new ArrayType(collisionPairType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe. Ihr können mit der Methode add Elemente hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(module.typeStore.getType(\"Shape\")), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                for (let s of shapes) {\r\n                    rh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe und fügt die übergebenen Grafikobjekte der Gruppe hinzu. Der Gruppe können mit der Methode add weitere Grafikobjekte hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(shapeType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"add\")) return;\r\n\r\n                for (let s of shapes) {\r\n                    sh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Fügt die Grafikobjekte der Gruppe hinzu.', false));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"get\")) return;\r\n\r\n                return sh.getElement(index);\r\n\r\n            }, false, false, 'Gibt das Grafikelement der Gruppe mit dem entsprechenden Index zurück. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                sh.removeElementAt(index);\r\n\r\n            }, false, false, 'Entfernt das Grafikelement aus der Gruppe mit dem entsprechenden Index, zerstört es jedoch nicht. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"remove\")) return;\r\n\r\n                sh.remove(shape);\r\n                sh.worldHelper.shapes.push(shape.intrinsicData[\"Actor\"]);\r\n\r\n            }, false, false, 'Entfernt das übergebene Grafikelement aus der Gruppe, zerstört es jedoch nicht.', false));\r\n\r\n\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\") || shape == null) return [];\r\n\r\n                let shapes: RuntimeObject[] = sh.getCollidingObjects(shape);\r\n\r\n                let values: Value[] = [];\r\n                for (let sh of shapes) {\r\n                    values.push({\r\n                        type: shapeType,\r\n                        value: sh\r\n                    })\r\n\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, 'Gibt die Objekte der Gruppe zurück, die mit dem übergebenen Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"getCollisionPairs\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maxOneCollisionPerShape\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), collisionPairArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group2: RuntimeObject = parameters[1].value;\r\n                let maxOneCollisionPerShape: boolean = parameters[2].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n                let groupHelper2: GroupHelper = <GroupHelper>group2.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingObjects2(groupHelper2, collisionPairType, maxOneCollisionPerShape);\r\n\r\n            }, false, false, 'Überprüft, welche Objekte der Gruppe mit welchen der anderen kollidieren.' +\r\n            ' Gibt für jede Kollision ein Collisionpair-Objekt zurück, das die beiden kollidierenden Objekte enthält.' +\r\n        ' Falls maxOneCollisionPerShape == true ist jedes Objekt dabei aber nur in max. einem Collisionpair-Objekt enthalten.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"size\")) return;\r\n\r\n                return sh.shapes.length;\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Elemente in der Gruppe enthalten sind.', false));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"empty\")) return;\r\n\r\n                sh.removeAllChidren();\r\n\r\n            }, false, false, 'Entfernt alle Elemente aus der Gruppe, löscht die Elemente aber nicht.', false));\r\n\r\n        this.addMethod(new Method(\"destroyAllChildren\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"destroyAllChildren\")) return;\r\n\r\n                sh.destroyChildren();\r\n\r\n            }, false, false, 'Löscht alle Elemente der Gruppe, nicht aber die Gruppe selbst.', false));\r\n\r\n\r\n        (<Klass>shapeType).addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let groupHelper: GroupHelper = group.intrinsicData[\"Actor\"];\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingShapes(groupHelper, shapeType);\r\n\r\n            }, false, false, 'Gibt alle Shapes der Gruppe group zurück, die mit dem Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Group-Objekts (und aller seiner enthaltenen Grafikobjekte!) und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"renderAsStaticBitmap\", new Parameterlist([\r\n            { identifier: \"renderAsStaticBitmap\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let doCache: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"renderAsStaticBitmap\")) return;\r\n\r\n                sh.cacheAsBitmap(doCache);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Zeichnet alle Objekte dieser Group in ein Bild und verwendet fortan nur noch dieses Bild, ohne die Kindelemente der Group erneut zu zeichnen. Mit dieser Methode können komplexe Bilder (z.B. ein Sternenhimmel) aufgebaut und dann statisch gemacht werden. Nach dem Aufbau brauchen sie daher kaum mehr Rechenzeit.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class GroupHelper extends ShapeHelper {\r\n\r\n    shapes: RuntimeObject[] = [];\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.displayObject = new PIXI.Container();\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n\r\n    cacheAsBitmap(doCache: boolean) {\r\n        let container = <PIXI.Container>this.displayObject;\r\n\r\n        // If you set doCache to false and shortly afterwards to true: \r\n        // make shure there's at least one rendercycle in between.\r\n        if (doCache) {\r\n            setTimeout(() => {\r\n                container.cacheAsBitmap = true;\r\n            }, 300);\r\n        } else {\r\n            container.cacheAsBitmap = doCache;\r\n        }\r\n    }\r\n\r\n\r\n    removeElementAt(index: number) {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n\r\n        let shape = this.shapes[index];\r\n        this.remove(shape);\r\n    }\r\n\r\n    getElement(index: number): RuntimeObject {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n        return this.shapes[index];\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let groupHelperCopy: GroupHelper = new GroupHelper(this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = groupHelperCopy;\r\n\r\n        for (let ro of this.shapes) {\r\n            let shapeHelper: ShapeHelper = ro.intrinsicData[\"Actor\"];\r\n\r\n            let roCopy: RuntimeObject = shapeHelper.getCopy(<Klass>ro.class)\r\n            let shapeHelperCopy: ShapeHelper = roCopy.intrinsicData[\"Actor\"];\r\n\r\n            groupHelperCopy.shapes.push(roCopy);\r\n\r\n            shapeHelperCopy.belongsToGroup = groupHelperCopy;\r\n\r\n            (<PIXI.Container>groupHelperCopy.displayObject).addChild(shapeHelperCopy.displayObject);\r\n\r\n        }\r\n\r\n        groupHelperCopy.copyFrom(this);\r\n        groupHelperCopy.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.timerPaused = tp;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    add(shape: RuntimeObject) {\r\n\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        if (shapeHelper.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Ein schon zerstörtes Objekt kann keiner Gruppe hinzugefügt werden.\");\r\n            return;\r\n        }\r\n\r\n        if (this.hasCircularReference(shape)) {\r\n            return;\r\n        }\r\n\r\n        this.shapes.push(shape);\r\n\r\n        if (shapeHelper.belongsToGroup != null) {\r\n            shapeHelper.belongsToGroup.remove(shape);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(shapeHelper);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        shapeHelper.belongsToGroup = this;\r\n\r\n        this.displayObject.parent.updateTransform();\r\n        let inverse = new PIXI.Matrix().copyFrom(this.displayObject.transform.worldTransform);\r\n        inverse.invert();\r\n        shapeHelper.displayObject.localTransform.prepend(inverse.prepend(this.worldHelper.stage.localTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n\r\n        (<PIXI.Container>this.displayObject).addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let xSum: number = 0;\r\n        let ySum: number = 0;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            xSum += sh.getCenterX();\r\n            ySum += sh.getCenterY();\r\n        }\r\n\r\n        let x = xSum / this.shapes.length;\r\n        let y = ySum / this.shapes.length;\r\n\r\n        this.displayObject.updateTransform();\r\n        let p1: PIXI.Point = this.displayObject.worldTransform.applyInverse(new PIXI.Point(x, y));\r\n        this.centerXInitial = p1.x;\r\n        this.centerYInitial = p1.y;\r\n    }\r\n\r\n    public removeAllChidren() {\r\n        let index: number = 0;\r\n        for (let shape of this.shapes) {\r\n            this.deregister(shape, index++);\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    public remove(shape: RuntimeObject) {\r\n        let index = this.shapes.indexOf(shape);\r\n        if (index >= 0) {\r\n            this.shapes.splice(index, 1);\r\n\r\n            this.deregister(shape, index);\r\n        }\r\n    }\r\n\r\n    private deregister(shape: RuntimeObject, index: number) {\r\n        let shapeHelper: ShapeHelper = shape.intrinsicData['Actor'];\r\n\r\n        let transform = new PIXI.Matrix().copyFrom(shapeHelper.displayObject.transform.worldTransform);\r\n\r\n        (<PIXI.Container>this.displayObject).removeChildAt(index);\r\n\r\n        let inverseStageTransform = new PIXI.Matrix().copyFrom(this.worldHelper.stage.localTransform);\r\n        inverseStageTransform.invert();\r\n        shapeHelper.displayObject.localTransform.identity();\r\n        shapeHelper.displayObject.localTransform.append(transform.prepend(inverseStageTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n        this.worldHelper.stage.addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n        shapeHelper.belongsToGroup = null;\r\n\r\n    }\r\n\r\n\r\n    public render(): void {\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.destroyChildren();\r\n        super.destroy();\r\n    }\r\n\r\n    public destroyChildren(): void {\r\n        for (let shape of this.shapes.slice(0)) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.destroy();\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    hasOverlappingBoundingBoxWith(shapeHelper: ShapeHelper): boolean {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n        return true;\r\n    }\r\n\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (!this.hasOverlappingBoundingBoxWith(shapeHelper)) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.setHitPolygonDirty(dirty);\r\n        }\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        this.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n\r\n        if (x < bb.left || x > bb.left + bb.width || y < bb.top || y > bb.top + bb.height) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCollidingObjects(shape: RuntimeObject): RuntimeObject[] {\r\n\r\n        let collidingShapes: RuntimeObject[] = [];\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        for (let s of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>s.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                collidingShapes.push(s);\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n\r\n    }\r\n\r\n    getCollidingObjects2(groupHelper2: GroupHelper, collisionPairType: Type,\r\n        maxOneCollisionPerShape: boolean): Value[] {\r\n\r\n        let collisionPairs: Value[] = [];\r\n\r\n        let alreadyCollidedHelpers2: Map<ShapeHelper, boolean> = new Map();\r\n\r\n        for (let shape1 of this.shapes) {\r\n            let shapeHelper1: ShapeHelper = <ShapeHelper>shape1.intrinsicData[\"Actor\"];\r\n            for (let shape2 of groupHelper2.shapes) {\r\n                let shapeHelper2: ShapeHelper = <ShapeHelper>shape2.intrinsicData[\"Actor\"];\r\n                if (shapeHelper1.collidesWith(shapeHelper2)) {\r\n\r\n                    if (!maxOneCollisionPerShape || alreadyCollidedHelpers2.get(shapeHelper2) == null) {\r\n                        alreadyCollidedHelpers2.set(shapeHelper2, true);\r\n                        let rto: RuntimeObject = new RuntimeObject(<Klass>collisionPairType);\r\n\r\n                        rto.intrinsicData[\"ShapeA\"] = shapeHelper1.runtimeObject;\r\n                        rto.intrinsicData[\"ShapeB\"] = shapeHelper2.runtimeObject;\r\n                        collisionPairs.push({\r\n                            type: collisionPairType,\r\n                            value: rto\r\n                        });\r\n                    }\r\n\r\n                    if (maxOneCollisionPerShape) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisionPairs;\r\n\r\n    }\r\n\r\n    hasCircularReference(shapeToAdd: RuntimeObject) {\r\n        let gh = shapeToAdd.intrinsicData[\"Actor\"];\r\n        if (gh instanceof GroupHelper) {\r\n            if (gh == this) {\r\n                this.worldHelper.interpreter.throwException(\"Eine Group darf sich nicht selbst enthalten!\");\r\n                return true;\r\n            } else {\r\n                for (let shape of gh.shapes) {\r\n                    if (this.hasCircularReference(shape)) {\r\n                        return true;\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    tint(color: string) {\r\n        for (let child of this.shapes) {\r\n            (<ShapeHelper>child.intrinsicData[\"Actor\"]).tint(color);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class KeyClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Key\", module, \"Aufzählung von Sondertasten zur Benutzung in den Methoden Actor.onKeyUp, Actor.onKeyTyped und Actor.onKeyDown\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"ArrowUp\", stringPrimitiveType, (value) => { value.value = \"ArrowUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowDown\", stringPrimitiveType, (value) => { value.value = \"ArrowDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowLeft\", stringPrimitiveType, (value) => { value.value = \"ArrowLeft\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowRight\", stringPrimitiveType, (value) => { value.value = \"ArrowRight\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Enter\", stringPrimitiveType, (value) => { value.value = \"Enter\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Space\", stringPrimitiveType, (value) => { value.value = \" \" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Shift\", stringPrimitiveType, (value) => { value.value = \"Shift\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Alt\", stringPrimitiveType, (value) => { value.value = \"Alt\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Strg\", stringPrimitiveType, (value) => { value.value = \"Control\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageUp\", stringPrimitiveType, (value) => { value.value = \"PageUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageDown\", stringPrimitiveType, (value) => { value.value = \"PageDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Backspace\", stringPrimitiveType, (value) => { value.value = \"Backspace\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Escape\", stringPrimitiveType, (value) => { value.value = \"Escape\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Entf\", stringPrimitiveType, (value) => { value.value = \"Delete\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Einf\", stringPrimitiveType, (value) => { value.value = \"Insert\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Ende\", stringPrimitiveType, (value) => { value.value = \"End\" }, true, Visibility.public, true, \"\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n\r\n    }\r\n\r\n}","/* \r\n * Convex hull algorithm - Library (TypeScript)\r\n * \r\n * Copyright (c) 2020 Project Nayuki\r\n * https://www.nayuki.io/page/convex-hull-algorithm\r\n * \r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with this program (see COPYING.txt and COPYING.LESSER.txt).\r\n * If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\n\r\n\r\n\r\nexport namespace convexhull {\r\n    \r\n    export interface Point {\r\n        x: number;\r\n        y: number;\r\n    }\r\n\t// Returns a new array of points representing the convex hull of\r\n\t// the given set of points. The convex hull excludes collinear points.\r\n\t// This algorithm runs in O(n log n) time.\r\n\texport function makeHull<P extends Point>(points: Array<P>): Array<P> {\r\n\t\tlet newPoints: Array<P> = points.slice();\r\n\t\tnewPoints.sort(convexhull.POINT_COMPARATOR);\r\n\t\treturn convexhull.makeHullPresorted(newPoints);\r\n\t}\r\n\t\r\n\t\r\n\t// Returns the convex hull, assuming that each points[i] <= points[i + 1]. Runs in O(n) time.\r\n\texport function makeHullPresorted<P extends Point>(points: Array<P>): Array<P> {\r\n\t\tif (points.length <= 1)\r\n\t\t\treturn points.slice();\r\n\t\t\r\n\t\t// Andrew's monotone chain algorithm. Positive y coordinates correspond to \"up\"\r\n\t\t// as per the mathematical convention, instead of \"down\" as per the computer\r\n\t\t// graphics convention. This doesn't affect the correctness of the result.\r\n\t\t\r\n\t\tlet upperHull: Array<P> = [];\r\n\t\tfor (let i = 0; i < points.length; i++) {\r\n\t\t\tconst p: P = points[i];\r\n\t\t\twhile (upperHull.length >= 2) {\r\n\t\t\t\tconst q: P = upperHull[upperHull.length - 1];\r\n\t\t\t\tconst r: P = upperHull[upperHull.length - 2];\r\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\r\n\t\t\t\t\tupperHull.pop();\r\n\t\t\t\telse\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tupperHull.push(p);\r\n\t\t}\r\n\t\tupperHull.pop();\r\n\t\t\r\n\t\tlet lowerHull: Array<P> = [];\r\n\t\tfor (let i = points.length - 1; i >= 0; i--) {\r\n\t\t\tconst p: P = points[i];\r\n\t\t\twhile (lowerHull.length >= 2) {\r\n\t\t\t\tconst q: P = lowerHull[lowerHull.length - 1];\r\n\t\t\t\tconst r: P = lowerHull[lowerHull.length - 2];\r\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\r\n\t\t\t\t\tlowerHull.pop();\r\n\t\t\t\telse\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tlowerHull.push(p);\r\n\t\t}\r\n\t\tlowerHull.pop();\r\n\t\t\r\n\t\tif (upperHull.length == 1 && lowerHull.length == 1 && upperHull[0].x == lowerHull[0].x && upperHull[0].y == lowerHull[0].y)\r\n\t\t\treturn upperHull;\r\n\t\telse\r\n\t\t\treturn upperHull.concat(lowerHull);\r\n\t}\r\n\t\r\n\t\r\n\texport function POINT_COMPARATOR(a: Point, b: Point): number {\r\n\t\tif (a.x < b.x)\r\n\t\t\treturn -1;\r\n\t\telse if (a.x > b.x)\r\n\t\t\treturn +1;\r\n\t\telse if (a.y < b.y)\r\n\t\t\treturn -1;\r\n\t\telse if (a.y > b.y)\r\n\t\t\treturn +1;\r\n\t\telse\r\n\t\t\treturn 0;\r\n\t}\r\n\t\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class PolygonClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Polygon\", module, \"Wahlweise geschlossenes Polygon (mit Füllung und Rand) oder offener Streckenzug\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n        let shapeClass = <Klass>module.typeStore.getType(\"Shape\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als Array von double-Werten der Form {x1, y1, x2, y2, ...} übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als double-Werte der Form x1, y1, x2, y2, ... übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon ohne Punkte.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if(shape == null){\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n                shapeHelper.displayObject.getBounds();  // seems to work magic in updating transforms of children...\r\n                \r\n                let points: convexhull.Point[] = [];\r\n                points = this.extractPoints(shapeHelper, points);\r\n                points = convexhull.makeHull(points);\r\n\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let p of points){\r\n                    pointsNumber.push(p.x);\r\n                    pointsNumber.push(p.y);\r\n                }\r\n\r\n                if(pointsNumber.length > 0){\r\n                    pointsNumber = pointsNumber.concat(pointsNumber.slice(0, 2))\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o, true);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Seine Punkte sind die Punkte des Hitpolygons der übergebenen Figur.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"addPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoint\")) return;\r\n\r\n                sh.addPoint(x, y);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt hinzu.\"', false));\r\n\r\n        this.addMethod(new Method(\"addPoints\", new Parameterlist([\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let points: Value[] = parameters[1].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoints\")) return;\r\n\r\n                let p: { x: number, y: number }[];\r\n\r\n                for (let i = 0; i < points.length - 1; i += 2) {\r\n                    sh.addPoint(points[i].value, points[i + 1].value, i >= points.length - 2);\r\n                }\r\n\r\n            }, false, false, 'Fügt dem Polygon mehrere Punkte hinzu. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n\r\n        this.addMethod(new Method(\"insertPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.insertPoint(x, y, index);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt als \"index-ter\" Punkt hinzu. index == 0 => ganz am Anfang; index == Anzahl der bisherigen Punkte => ganz am Ende;\"', false));\r\n\r\n        this.addMethod(new Method(\"movePointTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.movePointTo(x, y, index);\r\n\r\n            }, false, false, 'schiebt den index-ten Punkt nach (x, y). index == 0 => erster Punkt, index == 1 => zweiter Punkt usw.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"close\")) return;\r\n\r\n                sh.isClosed = true;\r\n                sh.render();\r\n\r\n            }, false, false, 'Schließt das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"open\")) return;\r\n\r\n                sh.isClosed = false;\r\n                sh.render();\r\n\r\n            }, false, false, 'Öffnet das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Polygon-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[]{\r\n        if(shapeHelper instanceof GroupHelper){\r\n            let points1: convexhull.Point[] = [];\r\n            for(let sh of shapeHelper.shapes){\r\n                points1 = this.extractPoints(sh.intrinsicData[\"Actor\"], points1);\r\n            }\r\n            return points.concat(points1);\r\n        } else {\r\n            if(shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function(punkt){return {x: punkt.x, y: punkt.y}}));\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport class PolygonHelper extends FilledShapeHelper {\r\n\r\n    isClosed: boolean = false;\r\n\r\n    constructor(points: number[], private closeAndFill: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, isClosed: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.isClosed = isClosed;\r\n        let xSum = 0; let ySum = 0;\r\n        this.hitPolygonInitial = [];\r\n\r\n        for (let i = 0; i < points.length;) {\r\n            let x = points[i++];\r\n            let y = points[i++];\r\n            xSum += x;\r\n            ySum += y;\r\n            this.hitPolygonInitial.push({ x: x, y: y });\r\n        }\r\n\r\n        if (points.length > 1) {\r\n            this.centerXInitial = xSum / this.hitPolygonInitial.length;\r\n            this.centerYInitial = ySum / this.hitPolygonInitial.length;\r\n        }\r\n\r\n        if (!closeAndFill) {\r\n            this.borderColor = 0x0000ff;\r\n        }\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: PolygonHelper = new PolygonHelper([], this.closeAndFill, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if (this.hitPolygonInitial.length > 0) {\r\n            g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n            for (let i = 1; i < this.hitPolygonInitial.length; i++) {\r\n                g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n            }\r\n        }\r\n\r\n        if (this.closeAndFill || this.isClosed) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    addPoint(x: number, y: number, render: boolean = true) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.push({ x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        if (render) this.render();\r\n    }\r\n\r\n    insertPoint(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.splice(index, 0, { x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    movePointTo(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        if(this.hitPolygonInitial.length == 0) return;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial[index].x = p.x;\r\n        this.hitPolygonInitial[index].y = p.y;\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setPoint(x: number, y: number, index: number) {\r\n        if (index == 0 || index == 1) {\r\n            this.hitPolygonInitial[index] = { x: x, y: y };\r\n            this.hitPolygonDirty = true;\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    setPoints(x1: number, y1: number, x2: number, y2: number) {\r\n        this.hitPolygonInitial = [{ x: x1, y: y1 }, { x: x2, y: y2 }];\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setAllPointsUntransformed(points: number[]) {\r\n        this.hitPolygonInitial = [];\r\n        for (let i = 0; i < points.length; i += 2) {\r\n            this.hitPolygonInitial.push({ x: points[i], y: points[i + 1] })\r\n        }\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Rectangle\", module, \"Rechteck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Rectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                \r\n                let rh = new RectangleHelper(left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n            \r\n            this.addMethod(new Method(\"setWidth\", new Parameterlist([\r\n                { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let width: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setWidth\")) return;\r\n\r\n                sh.width = width / sh.displayObject.scale.x;\r\n                sh.centerXInitial = sh.left + sh.width/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite des Rechtecks.\", false));\r\n\r\n            this.addMethod(new Method(\"setHeight\", new Parameterlist([\r\n                { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let height: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setHeight\")) return;\r\n\r\n                sh.height = height / sh.displayObject.scale.y;\r\n                sh.centerYInitial = sh.top + sh.height/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Höhe des Rechtecks.\", false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Rectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.render();\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RectangleHelper = new RectangleHelper(this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: this.left, y: this.top }, { x: this.left, y: this.top + this.height },\r\n             { x: this.left + this.width, y: this.top + this.height }, { x: this.left + this.width, y: this.top }\r\n        ];\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.moveTo(this.left, this.top);\r\n        g.lineTo(this.left + this.width, this.top);\r\n        g.lineTo(this.left + this.width, this.top + this.height);\r\n        g.lineTo(this.left, this.top + this.height);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class RepeatTypeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"RepeatType\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null, \r\n                identifier: \"once\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"loop\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"backAndForth\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Gibt an, auf welche Art eine Sprite-Animation abgespielt werden soll.\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RoundedRectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RoundedRectangle\", module, \"Rechteck mit abgerundeten Ecken\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"RoundedRectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let radius: number = parameters[5].value;\r\n\r\n                let rh = new RoundedRectangleHelper(left, top, width, height, radius, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles abgerundetes Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.radius * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt den Eckradius zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des RoundedRectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RoundedRectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number, public radius: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.addCenterCircle(left + radius, top + radius, Math.PI/2);\r\n        this.addCenterCircle(left + radius, top + height - radius, Math.PI);\r\n        this.addCenterCircle(left + width - radius, top + height - radius, 3*Math.PI/2);\r\n        this.addCenterCircle(left + width - radius, top + radius, 0);\r\n        this.hitPolygonInitial.push({x: left + radius, y: top});\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RoundedRectangleHelper = new RoundedRectangleHelper(this.left, this.top, this.width, this.height, this.radius, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    addCenterCircle(midx: number, midy: number, angleStart: number){\r\n        let n = 8;\r\n        let dw = Math.PI/2/n;\r\n\r\n        for(let i = 0; i <= n; i++){\r\n            this.hitPolygonInitial.push({x: midx + this.radius*Math.cos(angleStart + dw*i), y: midy - this.radius*Math.sin(angleStart + dw*i)})\r\n        }\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawRoundedRect(this.left,this.top, this.width, this.height, this.radius);\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n        // g.lineStyle(1, 0xff0000, 1);\r\n\r\n        // g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n        // for(let i = 1; i < this.hitPolygonInitial.length; i++){\r\n        //     g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n        // }\r\n        \r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class ScaleModeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"ScaleMode\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"linear\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"nearest_neighbour\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Art der Interpolation der Pixelfarben beim Skalieren von grafischen Objekten\"\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\n\r\nexport class SoundKlass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Sound\", module, \"Aufzählung aller Geräusche\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            this.addAttribute(new Attribute(sound.name, stringPrimitiveType, (value) => { value.value = sound.name }, true, Visibility.public, true, sound.description));\r\n        }\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n            { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let sound: string = parameters[1].value;\r\n            SoundTools.play(sound);\r\n        }    \r\n        , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Punkt, abstandPunktZuGerade, abstand } from \"../../tools/MatheTools.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class HitPolygonStore {\r\n\r\n    private static polygonStore: { [path: string]: Punkt[] } = {};\r\n\r\n    public static getPolygonForTexture(name: string, index: number, spriteHelper: SpriteHelper, sprite: PIXI.Sprite): Punkt[] {\r\n\r\n        if (index == null) {\r\n            index = 0;\r\n        }\r\n        name += \"#\" + index;\r\n\r\n        let polygon = HitPolygonStore.polygonStore[name];\r\n\r\n        if (polygon == null) {\r\n            // polygon = HitPolygonStore.getPolygon(<PIXI.Sprite>spriteHelper.displayObject, spriteHelper.worldHelper);\r\n            polygon = HitPolygonStore.getPolygon(sprite, spriteHelper.worldHelper);\r\n\r\n            HitPolygonStore.polygonStore[name] = polygon;\r\n        }\r\n\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static getPolygon(sprite: PIXI.Sprite, worldHelper: WorldHelper): Punkt[] {\r\n\r\n        let pixels = worldHelper.app.renderer.plugins.extract.pixels(sprite);\r\n        let w = sprite.width;\r\n        let h = sprite.height;\r\n\r\n        if (pixels.length !== 4 * w * h) {\r\n            return [{ x: 0, y: 0 }, { x: w, y: 0 }, { x: w, y: h }, { x: 0, y: h }];\r\n        }\r\n\r\n        let polygon: Punkt[] = [];\r\n        let additionalPointsPerHalfBorder = 3;\r\n        let pointsPerBorder = additionalPointsPerHalfBorder*2 + 3;\r\n\r\n        let probes: Punkt[] = [];\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: 0}, {x: w-1, y: 0}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: 0}, {x: w-1, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: h-1}, {x: 0, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: h-1}, {x: 0, y: 0}, \r\n            pointsPerBorder, probes);\r\n\r\n        let mid = {x: w/2, y: h/2};    \r\n        for(let probe of probes){\r\n            HitPolygonStore.probe(polygon, probe, mid,w, h, pixels);\r\n        }\r\n\r\n        let done: boolean = false;\r\n        while(!done){\r\n            done = true;\r\n            for(let i = 0; i < polygon.length - 1; i++){\r\n                let d = abstandPunktZuGerade(polygon[i], polygon[(i+2)%polygon.length], polygon[i+1]);\r\n                if(d < 2){\r\n                    polygon.splice(i+1, 1);\r\n                    done = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(polygon);\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static addPointsOnLine(start: Punkt, end: Punkt, n: number, points: Punkt[]){\r\n    \r\n        let fx = (end.x - start.x)/(n-1);\r\n        let fy = (end.y - start.y)/(n-1);\r\n\r\n        for(let i = 1; i <= n - 1 + 0.1; i++ ){\r\n            points.push({\r\n                x: start.x + fx*i,\r\n                y: start.y + fy*i\r\n            });\r\n        }    \r\n\r\n\r\n    }\r\n\r\n    private static probe(polygon: Punkt[], start: Punkt, end: Punkt, \r\n        width: number, height: number, pixels: Uint8Array) {\r\n\r\n        let length = abstand(start, end);\r\n        let fx = (end.x - start.x) / length;\r\n        let fy = (end.y - start.y) / length;\r\n\r\n        let x: number, y: number;\r\n\r\n        for (let i = 0; i <= length - 2; i++) {\r\n\r\n            x = start.x + i * fx;\r\n            y = start.y + i * fy;\r\n\r\n            if (!HitPolygonStore.isTransparent(x, y, width, height, pixels)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        polygon.push({ x: x, y: y });\r\n\r\n    }\r\n\r\n\r\n    private static isTransparent(x: number, y: number, width: number, height: number, pixels: Uint8Array) {\r\n\r\n        if (x < 0 || y < 0 || x > width || y > height) {\r\n            return true;\r\n        }\r\n\r\n        let p = pixels[4 * Math.round(x) + 4 * width * Math.round(y) + 3];\r\n        // console.log(\"x: \" + x + \", y: \" + y + \", width: \" + width + \" = \" + p);\r\n        // console.log(\"index: \" + (4 * x + 4 * width * y + 3) + \", length: \" + pixels.length);\r\n\r\n        return p == 0;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpriteLibraryPage } from \"../../help/SpriteLibraryPage.js\";\r\nimport { RenderTexture } from \"@pixi/core\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class SpriteClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sprite\", module, \"Ein Sprite ist eine kleine Pixelgrafik, die verschoben, gedreht und skaliert werden kann. Zudem besitzt es Methoden zum Erkennen von Kollisionen mit anderen grafischen Objekten.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let scaleModeClass = <Klass>module.typeStore.getType(\"ScaleMode\")\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[5].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o, null, scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], \"linear\");\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Aufzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, null, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let index: number = parameters[2].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier, index);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImageIndex\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n\r\n                sh.setTexture(sh.textureName, index);\r\n\r\n            }, false, false, 'Ändert den Bildindex des Sprites.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"indexArray\", type: new ArrayType(intPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let indexArray: Value[] = parameters[1].value;\r\n                let repeatType: EnumRuntimeObject = parameters[2].value;\r\n                let imagesPerSecond: number = parameters[3].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                let indices: number[] = [];\r\n                for (let v of indexArray) {\r\n                    indices.push(v.value);\r\n                }\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"toIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fromIndex: number = parameters[1].value;\r\n                let toIndex: number = parameters[2].value;\r\n                let repeatType: EnumRuntimeObject = parameters[3].value;\r\n                let imagesPerSecond: number = parameters[4].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                let indices: number[] = [];\r\n\r\n                if (fromIndex < toIndex && toIndex - fromIndex < 10000) {\r\n                    for (let i = fromIndex; i <= toIndex; i++) indices.push(i);\r\n                }\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"stopAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.stopAnimation(false);\r\n\r\n            }, false, false, 'Stoppt die gerade laufende Animation', false));\r\n\r\n        this.addMethod(new Method(\"pauseAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"pauseAnimation\")) return;\r\n\r\n                sh.pauseAnimation();\r\n\r\n            }, false, false, 'Pausiert die laufende Animation.', false));\r\n\r\n        this.addMethod(new Method(\"resumeAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"resumeAnimation\")) return;\r\n\r\n                sh.resumeAnimation();\r\n\r\n            }, false, false, 'Fährt mit einer pausierten Animation wieder fort.', false));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sprite-Objekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"makeTiling\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"makeTiling\")) return;\r\n\r\n                sh.makeTiling(width, height);\r\n\r\n            }, false, false, \"Fügt das identische Bild nach rechts und unten kachelartig ('tile'!) so oft hinzu, bis die angegebene Breite erreicht ist. \\nTIPP: Mit der Methode getTileImage() erhält man ein Tile-Objekt, dessen Methoden move, scale, mirrorX und mirrorY sich gleichzeitig auf jede einzelne Kachel auswirken.\", false));\r\n\r\n        this.addMethod(new Method(\"getTileImage\", new Parameterlist([\r\n        ]), <Klass>module.typeStore.getType(\"Tile\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getTileImage\")) return;\r\n\r\n                if(!sh.isTileSprite){\r\n                    sh.worldHelper.interpreter.throwException(\"Das Sprite hat kein TileImage. Sie müssen es zuerst mit der Methode makeTiling in ein Kachel-Sprite umwandeln.\")\r\n                    return;\r\n                }\r\n\r\n                let ret: RuntimeObject = new RuntimeObject(<Klass>module.typeStore.getType(\"Tile\"));\r\n\r\n                ret.intrinsicData[\"Actor\"] = new TileHelper(sh);\r\n\r\n                return ret;\r\n\r\n            }, false, false, \"Nachdem das Sprite mittels der Methode 'makeTiling' zum TileSprite gemacht wurde, kann wirken die Methoden move, scale und rotate immer auf den ganzen gekachelten Bereich. Will man das verfielfachte Bild ändern, so bekommt man über diese Methode das Sprite-Objekt, das diesem Bild entspricht. Ruft man für dieses Objekt die Methoden move, rotate oder scale auf, so wirken sie auf jede der einzelnen Kacheln.\", false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SpriteHelper extends ShapeHelper {\r\n\r\n    animationIndices: number[] = [];\r\n    animationRuns: boolean = false;\r\n    imagesPerMillisecond: number = 1;\r\n    animationTime: number = 0;\r\n    animationPaused: boolean = false;\r\n\r\n    repeatType = \"once\";\r\n    textureName: string = \"\";\r\n\r\n    isTileSprite: boolean = false;\r\n\r\n    constructor(public x: number, public y: number, public name: string, public index: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, copyFromOtherShape?: ShapeHelper,\r\n        public scaleMode: string = \"nearest_neighbour\") {\r\n        super(interpreter, runtimeObject);\r\n\r\n        if (copyFromOtherShape == null) {\r\n            this.setTexture(null, index);\r\n        } else {\r\n            this.copyBitmapFromShape(copyFromOtherShape);\r\n            let bounds = copyFromOtherShape.displayObject.getBounds();\r\n            this.x = bounds.left + bounds.width / 2;\r\n            this.y = bounds.top + bounds.height / 2;\r\n        }\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        this.displayObject.localTransform.translate(this.x - sprite.width / 2, this.y - sprite.height / 2);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.worldHelper.stage.addChild(sprite);\r\n\r\n        this.centerXInitial = sprite.width / 2;\r\n        this.centerYInitial = sprite.height / 2;\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    makeTiling(width: number, height: number) {\r\n        width /= this.scaleFactor;\r\n        height /= this.scaleFactor;\r\n        let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n        let tileSprite = new PIXI.TilingSprite(sprite.texture, width, height);\r\n        sprite.texture.baseTexture.mipmap = PIXI.MIPMAP_MODES.OFF;\r\n        tileSprite.setParent(sprite.parent);\r\n        tileSprite.transform.localTransform.copyFrom(sprite.transform.localTransform);\r\n        //@ts-ignore\r\n        tileSprite.transform.onChange();\r\n        tileSprite.updateTransform();\r\n        // tileSprite.clampMargin = -0.5;\r\n        this.displayObject = tileSprite;\r\n        this.centerXInitial += -sprite.width / 2 + width / 2;\r\n        this.centerYInitial += -sprite.height / 2 + height / 2;\r\n        let left = this.centerXInitial - width / 2;\r\n        let top = this.centerYInitial - height / 2;\r\n        let right = left + width;\r\n        let bottom = top + height;\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: right, y: top }, { x: right, y: bottom }, { x: left, y: bottom }\r\n        ];\r\n        this.setHitPolygonDirty(true);\r\n        sprite.destroy();\r\n        this.isTileSprite = true;\r\n    }\r\n\r\n    setTileOffset(x: number, y: number) {\r\n        if (this.isTileSprite) {\r\n            let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.displayObject;\r\n            tileSprite.tilePosition.set(x, y);\r\n        }\r\n    }\r\n\r\n\r\n    copyBitmapFromShape(copyFromOtherShape: ShapeHelper) {\r\n\r\n        let bounds = copyFromOtherShape.displayObject.getBounds();\r\n\r\n        let width = bounds.width;\r\n        let height = bounds.height;\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: this.scaleMode == \"nearest_neighbour\" ? PIXI.SCALE_MODES.NEAREST : PIXI.SCALE_MODES.LINEAR,\r\n                width: width,\r\n                height: height\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let dob = copyFromOtherShape.displayObject;\r\n        this.worldHelper.app.renderer.render(dob, {\r\n            renderTexture: rt,\r\n            transform: new PIXI.Matrix().translate(-bounds.left, -bounds.top)\r\n        });\r\n\r\n        let points: convexhull.Point[] = [];\r\n        points = this.extractPoints(copyFromOtherShape, points);\r\n\r\n        for (let p of points) {\r\n            p.x -= bounds.left;\r\n            p.y -= bounds.top;\r\n        }\r\n\r\n        this.hitPolygonInitial = points;\r\n        this.hitPolygonInitial = convexhull.makeHull(points);\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        this.displayObject = new PIXI.Sprite(rt);\r\n\r\n        copyFromOtherShape.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[] {\r\n        if (shapeHelper instanceof GroupHelper) {\r\n            for (let sh of shapeHelper.shapes) {\r\n                points = this.extractPoints(sh.intrinsicData[\"Actor\"], points);\r\n            }\r\n            return points;\r\n        } else {\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function (punkt) { return { x: punkt.x, y: punkt.y } }));\r\n\r\n        }\r\n    }\r\n\r\n    getWidth(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.width * this.scaleFactor;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.height * this.scaleFactor;\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SpriteHelper = new SpriteHelper(this.x, this.y, this.name, this.index, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    setAlpha(alpha: number) {\r\n        this.displayObject.alpha = alpha;\r\n    }\r\n\r\n    setTexture(name?: string, index?: number) {\r\n\r\n        if (name == this.name && index == this.index) return;\r\n\r\n        if (name == null) name = this.name;\r\n        if (index == null) index = 0;\r\n        this.index = index;\r\n\r\n        this.textureName = name;\r\n\r\n        let prefix = \"\";\r\n        //@ts-ignore\r\n        if (window.javaOnlineDir != null) {\r\n            //@ts-ignore\r\n            prefix = window.javaOnlineDir;\r\n        }\r\n\r\n        let sheet = PIXI.Loader.shared.resources[prefix + \"assets/graphics/spritesheet.json\"].spritesheet;\r\n        let nameWithIndex = name + \"#\" + index;\r\n        let texture = sheet.textures[nameWithIndex];\r\n\r\n        if (texture != null) {\r\n\r\n            if (this.scaleMode == \"linear\") {\r\n\r\n                let t = this.worldHelper.scaledTextures[nameWithIndex];\r\n\r\n                if (t == null) {\r\n                    let sprite = new PIXI.Sprite(texture);\r\n\r\n                    let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                        width: sprite.width,\r\n                        height: sprite.height,\r\n                        scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                    });\r\n\r\n                    this.worldHelper.app.renderer.render(sprite, {\r\n                        renderTexture: dynamicTexture1\r\n                    });\r\n                    this.worldHelper.scaledTextures[nameWithIndex] = dynamicTexture1;\r\n                    t = dynamicTexture1;\r\n                }\r\n\r\n                texture = t;\r\n                if (texture == null) texture = sheet.textures[nameWithIndex];\r\n\r\n                // let t = this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration];\r\n                // if( t != null){\r\n                //     texture = t;\r\n                // } else {\r\n                //     let sprite = new PIXI.Sprite(texture);\r\n\r\n                //     let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width,\r\n                //         height: sprite.height,\r\n                //         scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                //     });\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n\r\n                //     sprite = new PIXI.Sprite(dynamicTexture1);\r\n\r\n                //     let dynamicTexture2 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width * this.scaleOnTextureGeneration,\r\n                //         height: sprite.height * this.scaleOnTextureGeneration,\r\n                //         scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                //     });\r\n\r\n                //     let m = new PIXI.Matrix();\r\n                //     m.scale(this.scaleOnTextureGeneration, this.scaleOnTextureGeneration);\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture2, true,\r\n                //         m);\r\n\r\n                //     texture = dynamicTexture2;\r\n\r\n                //     this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration] = texture;\r\n            }\r\n\r\n            let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n            if (sprite == null) {\r\n                sprite = new PIXI.Sprite(texture);\r\n                this.displayObject = sprite;\r\n            } else {\r\n                sprite.texture = texture; // sheet.textures[nameWithIndex];\r\n            }\r\n\r\n            this.hitPolygonInitial = HitPolygonStore.getPolygonForTexture(name, index, this, new PIXI.Sprite(sheet.textures[nameWithIndex]));\r\n            this.hitPolygonDirty = true;\r\n\r\n        } else {\r\n            if (this.displayObject == null) {\r\n                this.displayObject = new PIXI.Sprite();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    playAnimation(indexArray: number[], repeatType: string, imagesPerSecond: number) {\r\n        this.stopAnimation(false);\r\n        this.animationIndices = indexArray;\r\n        this.repeatType = repeatType;\r\n        this.imagesPerMillisecond = imagesPerSecond / 1000;\r\n        this.animationTime = 0;\r\n        this.animationRuns = true;\r\n        this.worldHelper.spriteAnimations.push(this);\r\n    }\r\n\r\n    stopAnimation(setInvisible: boolean) {\r\n        if (this.animationRuns) {\r\n            let spriteHelperList = this.worldHelper.spriteAnimations;\r\n            let i = spriteHelperList.indexOf(this);\r\n            if (i >= 0) spriteHelperList.splice(i, 1);\r\n        }\r\n        this.animationRuns = false;\r\n        if (setInvisible) this.setVisible(false);\r\n    }\r\n\r\n    pauseAnimation() {\r\n        this.animationPaused = true;\r\n    }\r\n\r\n    resumeAnimation() {\r\n        this.animationPaused = false;\r\n    }\r\n\r\n    tick(deltaTime: number) {\r\n\r\n        if (this.animationPaused) return;\r\n\r\n        let image: number;\r\n\r\n        if (this.repeatType == \"backAndForth\") {\r\n            let period2 = this.animationIndices.length * 2 / this.imagesPerMillisecond;\r\n            let numberOfPeriodsDone = Math.trunc(this.animationTime / period2);\r\n            let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period2;\r\n            image = this.imagesPerMillisecond * timeIntoPeriod;\r\n            if (image >= this.animationIndices.length) {\r\n                image = Math.max(2 * this.animationIndices.length - 0.1 - image, 0);\r\n            }\r\n            image = Math.trunc(image);\r\n        } else\r\n            if (this.repeatType == \"loop\") {\r\n                let period = this.animationIndices.length / this.imagesPerMillisecond;\r\n                let numberOfPeriodsDone = Math.trunc(this.animationTime / period);\r\n                let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period;\r\n                image = this.imagesPerMillisecond * timeIntoPeriod;\r\n                image = Math.trunc(image);\r\n            } else {\r\n                image = Math.trunc(this.imagesPerMillisecond * this.animationTime);\r\n                if (image >= this.animationIndices.length) {\r\n                    this.stopAnimation(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n        this.animationTime += deltaTime;\r\n\r\n        this.setTexture(null, this.animationIndices[image]);\r\n    }\r\n\r\n}\r\n\r\nexport class TileClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Tile\", module, \"Eine Kachel in einem Sprite, das mithilfe der Methode makeTiling zu einer Kachelfläche gemacht wurde.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport class TileHelper {\r\n    constructor(public spriteHelper: SpriteHelper) {\r\n    }\r\n\r\n    move(dx: number, dy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tilePosition.x += dx;\r\n        tileSprite.tilePosition.y += dy;\r\n    }\r\n    \r\n    scale(fx: number, fy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tileScale.x *= fx;\r\n        tileSprite.tileScale.y *= fy;\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        return this.spriteHelper.testdestroyed(method);\r\n    }\r\n\r\n\r\n}","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\ntype SpriteLibraryEntry = {\r\n    filename: string,\r\n    name: string,\r\n    index?: number\r\n}\r\n\r\ndeclare var SpriteLibrary: SpriteLibraryEntry[];\r\n\r\nexport class SpriteLibraryClass extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SpriteLibrary\", module,\r\n\r\n            SpriteLibrary.filter(\r\n                (sle) => {\r\n                    return sle.index == null || sle.index == 0\r\n                }\r\n            ).map((sle: SpriteLibraryEntry) => {\r\n                return {\r\n                    type: TokenType.pushEnumValue,\r\n                    position: null,\r\n                    identifier: sle.name\r\n                };\r\n\r\n            })\r\n\r\n        );\r\n        this.documentation = \"Aufzählung der Sprite-Grafiken\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class TextClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Text\", module, \"Text, der innerhalb der Grafikausgabe dargestellt werden kann\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"font-family\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n                let fontFamily: string = parameters[5].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o, fontFamily);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"setFontsize\", new Parameterlist([\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fontsize: number = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setFontsize(fontsize);\r\n\r\n            }, false, false, 'Setzt die Schriftgröße des Textes (Einheit: Pixel).', false));\r\n\r\n        this.addMethod(new Method(\"setAlignment\", new Parameterlist([\r\n            { identifier: \"alignment\", type: module.typeStore.getType(\"Alignment\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alignment: EnumRuntimeObject = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setAlignment(alignment.enumValue.identifier);\r\n\r\n            }, false, false, 'Setzt die Ausrichtung in X-Richtung. Zulässige Werte sind \"Alignment.left\", \"Alignment.right\" und \"Alignment.center\".', false));\r\n\r\n        this.addMethod(new Method(\"setText\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let text: string = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, 'Setzt den Text.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Text-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, 'Gibt die Breite des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class TextHelper extends FilledShapeHelper {\r\n\r\n    alignment: string = \"left\";\r\n\r\n    textStyle: PIXI.TextStyle =\r\n        new PIXI.TextStyle({\r\n            fontFamily: 'Arial',\r\n            fontSize: this.fontsize,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal',\r\n            fill: [this.fillColor], // gradient possible...\r\n            stroke: this.borderColor,\r\n            strokeThickness: this.borderWidth,\r\n            dropShadow: false,\r\n            wordWrap: false,\r\n            align: \"left\"\r\n        });\r\n\r\n    constructor(public x: number, public y: number, public fontsize: number,\r\n        public text,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, public fontFamily?: string) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = x;\r\n        this.centerYInitial = y;\r\n\r\n        this.borderColor = null;\r\n        this.textStyle.stroke = null;\r\n        if(fontFamily != null){\r\n            this.textStyle.fontFamily = fontFamily;\r\n        }\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TextHelper = new TextHelper(this.x, this.y, this.fontsize, this.text, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.alignment = this.alignment;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Text(this.text, this.textStyle);\r\n            this.displayObject = g;\r\n            this.displayObject.localTransform.translate(this.x, this.y);\r\n            //@ts-ignore\r\n            this.displayObject.transform.onChange();\r\n            this.worldHelper.stage.addChild(g);\r\n        } else {\r\n            g.text = this.text;\r\n            this.textStyle.fill = this.fillColor;\r\n            this.textStyle.stroke = this.borderColor;\r\n            this.textStyle.strokeThickness = this.borderWidth;\r\n            g.alpha = this.fillAlpha;\r\n            this.textStyle.fontSize = this.fontsize;\r\n            switch (this.alignment) {\r\n                case \"left\": g.anchor.x = 0; break;\r\n                case \"center\": g.anchor.x = 0.5; break;\r\n                case \"right\": g.anchor.x = 1.0; break;\r\n            }\r\n            g.style = this.textStyle;\r\n        }\r\n\r\n        this.centerXInitial = 0;\r\n        this.centerYInitial = 0;\r\n        if(this.text != null){\r\n            let tm = PIXI.TextMetrics.measureText(this.text, this.textStyle);\r\n    \r\n            this.centerXInitial = tm.width / 2;\r\n            this.centerYInitial = tm.height / 2;\r\n        }\r\n\r\n\r\n    };\r\n\r\n    setFontsize(fontsize: number) {\r\n        this.fontsize = fontsize;\r\n        this.render();\r\n    }\r\n\r\n    setText(text: string) {\r\n        this.text = text;\r\n        this.render();\r\n    }\r\n\r\n    setAlignment(alignment: string) {\r\n        this.alignment = alignment;\r\n        this.render();\r\n    }\r\n\r\n    getWidth(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.width;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.height;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class GamepadClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Gamepad\", module, \"Klasse mit statischen Methoden zur Abfrage der Gamepads\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        // this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"isButtonDown\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let buttonIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\r\n\r\n            }, false, true, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\r\n\r\n        this.addMethod(new Method(\"isConnected\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\r\n\r\n            }, false, true, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\r\n\r\n        this.addMethod(new Method(\"getAxisValue\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let axisIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\r\n\r\n            }, false, true, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\r\n\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class MathClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Math\", module, \"Klasse mit statischen Methoden zur Berechnung mathematischer Funktionen (sin, cos, abs, ...) und zur Ermittlung von Zufallszahlen.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"round\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.round(<number>parameters[1].value);\r\n            }, false, true, \"**Rundet** den Wert\"));\r\n\r\n        this.addMethod(new Method(\"floor\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.floor(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert ab, sucht also die **nächstkleinere** ganze Zahl\"));\r\n\r\n        this.addMethod(new Method(\"ceil\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.ceil(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert auf, sucht also die **nächstgrößere** Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(<number>parameters[1].value);\r\n            }, false, true, \"Gibt das Vorzeichen der Zahl zurück, d.h. \\n  - -1, falls die Zahl **negativ** ist,\\n  - 0, falls die Zahl **0** ist und\\n  - +1, falls die Zahl **positiv** ist.\"));\r\n\r\n        this.addMethod(new Method(\"sqrt\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sqrt(<number>parameters[1].value);\r\n            }, false, true, \"Gibt die **Quadratwurzel** der Zahl zurück. Für andere Wurzeln benutze Math.pow(a, b), z.B. Math.pow(10, 1.0/3.0) für die Kubikwurzel aus 10.\"));\r\n\r\n        this.addMethod(new Method(\"random\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.random();\r\n            }, false, true, \"Gibt eine Zufallszahl aus dem Intervall [0;1[ zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pow\", new Parameterlist([\r\n            { identifier: \"Basis\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Exponent\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.pow(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, 'Math.pow(a, b) gibt \"a hoch b\" zurück.'));\r\n\r\n        this.addMethod(new Method(\"toDegrees\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / Math.PI * 180;\r\n            }, false, true, \"Wandelt einen Winkel von Rad in Grad um, d.h. berechnet Winkel/Pi*180.\"));\r\n\r\n        this.addMethod(new Method(\"toRadians\", new Parameterlist([\r\n            { identifier: \"WinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / 180 * Math.PI;\r\n            }, false, true, \"Wandelt einen Winkel von Grad in Rad um, d.h. berechnet Winkel/180*Pi.\"));\r\n\r\n        this.addMethod(new Method(\"exp\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.exp(<number>parameters[1].value);\r\n            }, false, true, 'Berechnet \"e hoch die Zahl\".'));\r\n\r\n        this.addMethod(new Method(\"log\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den natürlichen Logarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"log10\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log10(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Zehnerlogarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"sin\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Sinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"cos\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.cos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Cosinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"tan\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.tan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Tangens des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"asin\", new Parameterlist([\r\n            { identifier: \"WertDesSinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.asin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Sinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"acos\", new Parameterlist([\r\n            { identifier: \"WertDesCosinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.acos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Cosinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan\", new Parameterlist([\r\n            { identifier: \"WertDesTangens\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Tangens des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan2\", new Parameterlist([\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan2(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Sind (x, y) die kartesischen Koordinaten eines Punktes, so ist Math.atan2(x, y) der Winkel alpha der Polarkoordinaten (alpha, r) des Punktes. \\n**Bem.: **Alpha wird in Rad berechnet.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { abstandPunktZuGerade, abstandPunktZuStrecke, polygonEnthältPunkt, Punkt, schnittpunkteKreisStrecke, streckeSchneidetStrecke, vektorVonPolarkoordinaten } from \"../tools/MatheTools.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport class MathToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MathTools\", module, \"Klasse mit mathematischen Hilfsfunktionen als statische Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n        let vectorArrayClass = new ArrayType(vector2Class);\r\n\r\n        let xIndex = vector2Class.attributeMap.get(\"x\").index;\r\n        let yIndex = vector2Class.attributeMap.get(\"y\").index;\r\n\r\n\r\n        this.addMethod(new Method(\"intersectCircleWithPolygon\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vectorArrayClass,\r\n            (parameters) => {\r\n\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n                let points: Value[] = parameters[4].value;\r\n\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let schnittpunkte: Punkt[] = [];\r\n                let m: Punkt = {x: mx, y: my};\r\n                for(let i = 0; i < punkte.length; i++){\r\n                    let p1 = punkte[i];\r\n                    let p2 = punkte[(i+1)%punkte.length];\r\n                    schnittpunkteKreisStrecke(m, r, p1, p2, schnittpunkte);\r\n                }\r\n\r\n                let returnArray: Value[] = []\r\n\r\n                for(let p of schnittpunkte){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: p.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: p.y};\r\n                    returnArray.push({type: vector2Class, value:pVector});\r\n                }\r\n\r\n                return returnArray;\r\n\r\n            }, false, true, \"Zu einem gegebenen Kreis werden die Punkte berechnet, die auf den Seiten eines gegebenen Polygons liegen.\"));\r\n\r\n        this.addMethod(new Method(\"intersectLineSegments\", new Parameterlist([\r\n            { identifier: \"p0\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p1\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p2\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p3\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vector2Class,\r\n            (parameters) => {\r\n\r\n                let p: Punkt[] = [];\r\n                for(let i = 0; i < 4; i++){\r\n                    let att = parameters[i].value.attributes;\r\n                    p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                }\r\n\r\n                let ps: Punkt = {x: 0, y: 0};\r\n                if(streckeSchneidetStrecke(p[0], p[1], p[2], p[3], ps)){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: ps.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: ps.y};\r\n                    return pVector;\r\n                } else {\r\n                    return null;                    \r\n                }\r\n\r\n            }, false, true, \"Berechnet den Schnittpunkt der Strecken [p0, p1] und [p2, p3]. Gibt null zurück, wenn sich die Strecken nicht schneiden oder wenn sie parallel sind und teilweise aufeinander liegen.\"));\r\n\r\n        this.addMethod(new Method(\"polygonContainsPoint\", new Parameterlist([\r\n            { identifier: \"polygonPoints\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let points = parameters[1].value;\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let att = parameters[2].value.attributes;\r\n                let p: Punkt = {x: att[xIndex].value, y: att[yIndex].value}\r\n\r\n                return polygonEnthältPunkt(punkte, p);\r\n\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Polygon den Punkt enthält.\"));\r\n\r\n            this.addMethod(new Method(\"distancePointToLine\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuGerade(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Gerade AB.\"));\r\n    \r\n            this.addMethod(new Method(\"distancePointToLineSegment\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuStrecke(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Strecke [AB].\"));\r\n    \r\n    \r\n\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemClass extends Klass {\r\n\r\n    printStream: RuntimeObject;\r\n\r\n    deltaTimeMillis: number = 0; // when using WebSocket then the Server sends time synchronization\r\n\r\n    constructor(module: Module) {\r\n        super(\"System\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Sound, Löschen der Ausgabe usw.\");\r\n\r\n        this.printStream = new RuntimeObject(<Klass>module.typeStore.getType(\"PrintStream\"));\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"out\", module.typeStore.getType(\"PrintStream\"),\r\n            (value) => { value.value = this.printStream }, true, Visibility.public, true, \"PrintStream-Objekt, mit dem Text ausgegeben werden kann.\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        // this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        // ]), null,\r\n        //     (parameters) => {\r\n        //         module.main.getInterpreter().printManager.clear();\r\n        //     }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        // this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n        //     { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let r: RuntimeObject = parameters[1].value;\r\n        //     let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n        //     if (method != null) {\r\n\r\n        //         module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n        //             let program = method?.program;\r\n        //             let invoke = method?.invoke;\r\n\r\n        //             let stackElements: Value[] = [\r\n        //                 {\r\n        //                     type: r.class,\r\n        //                     value: r\r\n        //                 },\r\n        //                 {\r\n        //                     type: stringPrimitiveType,\r\n        //                     value: key\r\n        //                 }\r\n        //             ];\r\n\r\n        //             if (program != null) {\r\n        //                 module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n        //             } else if (invoke != null) {\r\n        //                 invoke([]);\r\n        //             }\r\n\r\n\r\n        //         });\r\n        //     }\r\n        // }    \r\n        // , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"currentTimeMillis\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Date.now() + this.deltaTimeMillis;\r\n            }\r\n            , false, true, \"Gibt die Anzahl der Millisekunden, die seit dem 01.01.1970 00:00:00 UTC vergangen sind, zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(\"\");\r\n            }, false, true, \"Setzt den Cursor in die nächste Zeile.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SystemTools\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Löschen der Ausgabe, Registrieren eines Tastaturlisteners usw.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.clear();\r\n            }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        this.addMethod(new Method(\"setSpeed\", new Parameterlist([\r\n            {identifier: \"speed\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let speed: number = parameters[1].value;\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(speed >= 1 ? speed : \"max\");\r\n\r\n            }, false, true, \"Setzt die Ausführungsgeschwindigkeit. Der Parameter speed wir in Steps/Sekunde angegeben. Eine negative Zahl bedeutet: 'maximal'.\"));\r\n\r\n        this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n            { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let r: RuntimeObject = parameters[1].value;\r\n                let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n                if (method != null) {\r\n\r\n                    module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n                        let program = method?.program;\r\n                        let invoke = method?.invoke;\r\n\r\n                        let stackElements: Value[] = [\r\n                            {\r\n                                type: r.class,\r\n                                value: r\r\n                            },\r\n                            {\r\n                                type: stringPrimitiveType,\r\n                                value: key\r\n                            }\r\n                        ];\r\n\r\n                        if (program != null) {\r\n                            module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n                        } else if (invoke != null) {\r\n                            invoke([]);\r\n                        }\r\n\r\n\r\n                    });\r\n                }\r\n            }\r\n            , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n    }\r\n}\r\n\r\nexport class KeyListener extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"KeyListener\", module, \"Interface mit Methode onKeyTyped. Eine Klasse, die dieses Interface implementiert, kann auf Tastatureingaben reagieren. Ein Objekt dieser Klasse muss zuvor aber mit System.addKeyListener() registriert werden.\");\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, nachdem eine Taste gedrückt wurde.\"));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { InterpreterState, Interpreter } from \"../interpreter/Interpreter.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\n\r\n\r\nexport class Runnable extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Runnable\", module);\r\n\r\n        this.addMethod(new Method(\"run\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird vom Timer immer wieder aufgerufen\"));\r\n    }\r\n\r\n}\r\n\r\ntype TimerEntry = {\r\n    timerListener: RuntimeObject,\r\n    dt: number,\r\n    running: boolean,\r\n    lastTimeFired: number,\r\n    method: Method\r\n}\r\n\r\nexport class TimerClass extends Klass {\r\n\r\n    timerEntries: TimerEntry[] = [];\r\n    timerRunning: boolean = false;\r\n\r\n    timerStarted: boolean = false;\r\n\r\n    constructor(module: Module) {\r\n        super(\"Timer\", module, \"Timer Klasse zur periodischen Ausführung von Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"repeat\", new Parameterlist([\r\n            {\r\n                identifier: \"runnable\", type: module.typeStore.getType(\"Runnable\"),\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n            {\r\n                identifier: \"deltaTimeInMs\", type: intPrimitiveType,\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let tl: RuntimeObject = <RuntimeObject>parameters[1].value;\r\n                let dt: number = <number>parameters[2].value;\r\n\r\n                let timerEntry: TimerEntry = {\r\n                    timerListener: tl,\r\n                    dt: dt,\r\n                    lastTimeFired: 0,\r\n                    running: true,\r\n                    method: tl.class.getMethod(\"run\", new Parameterlist([\r\n                        // {\r\n                        //     identifier: \"deltaTimeInMs\",\r\n                        //     type: intPrimitiveType,\r\n                        //     declaration: null,\r\n                        //     isFinal: true,\r\n                        //     usagePositions: null\r\n                        // }\r\n                    ]))\r\n                }\r\n\r\n                this.timerEntries.push(timerEntry);\r\n\r\n                // console.log(\"TimerListener added with dt = \" + dt + \" ms.\");\r\n\r\n            }, false, true, \"Fügt ein neues TimerListener-Objekt hinzu und ruft dessen tick-Methode immer wieder auf.\"));\r\n\r\n    }\r\n\r\n    startTimer(){\r\n        if(!this.timerStarted){\r\n            this.timerStarted = true;\r\n            this.processTimerEntries();\r\n        }\r\n    }\r\n    \r\n    stopTimer(){\r\n        this.timerStarted = false;\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if(!this.timerStarted){\r\n            return;\r\n        }\r\n\r\n        if (this.timerEntries.length > 0) {\r\n            let interpreter = this.module?.main?.getInterpreter();\r\n\r\n            if (interpreter != null) {\r\n                if (!this.timerRunning && interpreter.state == InterpreterState.running) {\r\n                    let t: number = performance.now();\r\n                    for (let timerentry of this.timerEntries) {\r\n                        let dt = t - timerentry.lastTimeFired;\r\n                        if (dt >= timerentry.dt) {\r\n                            this.runEntry(timerentry, interpreter, Math.round(dt));\r\n                            timerentry.lastTimeFired = t;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                switch (interpreter.state) {\r\n                    case InterpreterState.done:\r\n                    case InterpreterState.error:\r\n                    case InterpreterState.not_initialized:\r\n                        this.timerEntries = [];\r\n                        this.timerRunning = false;\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, 10);\r\n\r\n    }\r\n\r\n    runEntry(timerentry: TimerEntry, interpreter: Interpreter, dt: number) {\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: timerentry.timerListener.class,\r\n                value: timerentry.timerListener\r\n            },\r\n            // {\r\n            //     type: intPrimitiveType,\r\n            //     value: dt\r\n            // }\r\n        ];\r\n\r\n        this.timerRunning = true;\r\n        let that = this;\r\n\r\n        interpreter.runTimer(timerentry.method, stackElements, (interpreter) => {\r\n            that.timerRunning = false;\r\n        }, false);\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class MapClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Map\", module, \"Interface mit Methoden einer Map (Schlüssel-Wert-Speicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Map zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Map leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Map.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class MapHelper {\r\n\r\n    keyArray: Value[] = [];\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, Value> = new Map(); // Maps key objects to value-Values\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    get(key: Value){\r\n        return this.map.get(key.value);\r\n    }\r\n\r\n    set(key: Value, value: Value): Value {\r\n\r\n        let old = this.map.get(key.value);\r\n\r\n        if(old == null){\r\n            this.keyArray.push(key);\r\n        } else {\r\n            this.valueArray.splice(this.valueArray.indexOf(old), 1);\r\n        }\r\n\r\n        this.valueArray.push(value);\r\n        \r\n        this.map.set(key.value, value);\r\n\r\n        return old;\r\n\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.keyArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            let s = \"[\";\r\n            for (let i = 0; i < this.keyArray.length; i++) {\r\n                s += \"\" + this.keyArray[i].value + \" => \" + this.valueArray[i].value;\r\n                if (i < this.keyArray.length - 1) s += \", \";\r\n            }\r\n\r\n            return s + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.keyArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \" => \",\r\n                position: position,\r\n                stepFinished: false\r\n            });\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    leftType: stringPrimitiveType,\r\n                    operator: TokenType.plus,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    containsKey(key: Value): any {\r\n        return this.map.get(key.value) != null;\r\n    }\r\n\r\n    containsValue(value: Value): any {\r\n        for(let v of this.valueArray){\r\n            if(v.value == value.value) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.keyArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { MapHelper } from \"./MapHelper.js\";\r\n\r\nexport class HashMapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashMap\", module, \"Map-Klasse mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Map\")).clone();\r\n        setInterface.typeVariables = [tvK, tvV];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        this.addMethod(new Method(\"HashMap\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new MapHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert eine neue HashMap', true));\r\n\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let value: Value = parameters[2];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.set(key, value);\r\n\r\n            }, false, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Key-Value-Pairs aus dieser HashMap.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsKey(key);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let value: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsValue(value);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                let v: Value = ah.get(key);\r\n                return v == null ? null : v.value;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die HashMap leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der key-value-pairs der HashMap zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class TriangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Triangle\", module, \"Dreieck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Triangle\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let i = 1; i <= 6; i++){\r\n                    pointsNumber.push(parameters[i].value);\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck.', true));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Triangle-Objekts und git sie zurück.', false));\r\n\r\n        }\r\n\r\n}\r\n","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport type LocalDateTimeIntrinsicData = {\r\n    date: Date\r\n}\r\n\r\nexport class LocalDateTimeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LocalDateTime\", module, \"Ein LocalDate-Objekt speichert einen Zeitpunkt (Datum und Uhrzeit).\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let dayOfWeekType = <Enum>module.typeStore.getType(\"DayOfWeek\");\r\n        let MonthType = <Enum>module.typeStore.getType(\"Month\");\r\n\r\n        // this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        // this.staticClass.classObject.initializeAttributeValues();\r\n        \r\n        this.addMethod(new Method(\"LocalDateTime\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return;\r\n\r\n            }, false, false, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , true));\r\n\r\n\r\n        this.addMethod(new Method(\"now\", new Parameterlist([]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: number = Math.trunc(parameters[2].value);\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month - 1, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"]= intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: MonthType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: EnumRuntimeObject = parameters[2].value;\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month.enumValue.ordinal, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"plusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() + days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen später liegt.', false));\r\n\r\n        this.addMethod(new Method(\"minusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() - days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen früher liegt.', false));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return Math.sign(oldMs - newMs);\r\n\r\n            }, false, false, 'Gibt 1 zurück, falls das Datum größer ist als das übergebene, 0, falls sie gleich sind und -1, falls das Datum kleiner ist als das übergebene.', false));\r\n\r\n        this.addMethod(new Method(\"until\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return (oldMs - newMs)/(24*3600);\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Tage (gerundet) zwischen den beiden Zeitpunkten liegen.', false));\r\n\r\n        this.addMethod(new Method(\"getYear\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getFullYear();\r\n\r\n            }, false, false, 'Gibt das Jahr zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMonthValue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth() + 1;\r\n\r\n            }, false, false, 'Gibt den Monat als Zahl zurück (Januar == 1, Februar == 2, ..., Dezember == 12).', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfMonth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDate();\r\n\r\n            }, false, false, 'Gibt den Tag innerhalb des Monats zurück (Zahl von 1 bis 31).', false));\r\n\r\n        this.addMethod(new Method(\"getHour\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getHours();\r\n\r\n            }, false, false, 'Gibt die Stunde innerhalb des Tages zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMinute\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMinutes();\r\n\r\n            }, false, false, 'Gibt die Minute zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getSecond\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getSeconds();\r\n\r\n            }, false, false, 'Gibt die Sekunde zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n\r\n                let td = (value: number) => {\r\n                    if(value < 10) return \"0\" + value;\r\n                    return \"\" + value;\r\n                }\r\n\r\n                return `${td(date.getDate())}.${td(date.getMonth() + 1)}.${td(date.getFullYear())} ${td(date.getHours())}:${td(date.getMinutes())}:${td(date.getSeconds())}`;\r\n\r\n            }, false, false, 'Gibt den Wert in der Form 12.03.2007 10:15:30 zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfWeek\", new Parameterlist([\r\n        ]), dayOfWeekType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let dow = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDay();\r\n                return dayOfWeekType.enumInfoList[dow - 1].object;\r\n\r\n            }, false, false, 'Gibt die den Wochentag zurück. Falls Du ihn als Zahl (0 == Montag, ...) benötigst, nutze getDayOfWeek().toOrdinal(). ', false));\r\n\r\n        this.addMethod(new Method(\"getMonth\", new Parameterlist([\r\n        ]), MonthType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let monthIndex = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth();\r\n                return MonthType.enumInfoList[monthIndex].object;\r\n\r\n            }, false, false, 'Gibt die den Monat zurück. Falls Du ihn als Zahl (1 == Januar, ...) benötigst, nutze getMonthValue()', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class DayOfWeekEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DayOfWeek\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Montag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dienstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mittwoch\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Donnerstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Freitag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Samstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Sonntag\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Wochentag\"\r\n    }\r\n}\r\n\r\nexport class MonthEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Month\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Januar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Februar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"März\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"April\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mai\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juni\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juli\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"August\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Septemter\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Oktober\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"November\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dezember\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Monat\"\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class LineClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Line\", module, \"Strecke (gerade Linie zwischen zwei Punkten)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Line\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n\r\n                let pointsNumber: number[] = [x1, y1, x2, y2];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert eine Strecke mit Anfangspunkt (x1/y1) und Endpunkt (x2/y2).', true));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie der Strecke und git sie zurück.', false));\r\n\r\n                this.addMethod(new Method(\"setPoint\", new Parameterlist([\r\n                    { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x: number = parameters[1].value;\r\n                        let y: number = parameters[2].value;\r\n                        let index: number = parameters[3].value;\r\n                        let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoint\")) return;\r\n        \r\n                        sh.setPoint(x, y, index - 1);\r\n        \r\n                    }, false, false, 'Ändert einen Punkt des Polygons. index == 1 bedeutet: Anfangspunkt; index == 2 bedeutet: Endpunkt', false));\r\n        \r\n                this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                    { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x1: number = parameters[1].value;\r\n                        let y1: number = parameters[2].value;\r\n                        let x2: number = parameters[3].value;\r\n                        let y2: number = parameters[4].value;\r\n                                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoints\")) return;\r\n        \r\n                        sh.setPoints(x1, y1, x2, y2);\r\n        \r\n                    }, false, false, 'Ändert die Punkte der Strecke. (x1/y1) ist der neue Anfangspunkt, (x2/y2) ist der neue Endpunkt.', false));\r\n        \r\n     \r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class Vector2Class extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector2\", module, \"Repräsentiert einen zweidimensionalen Vektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"x-Komponente des Vektors\"));\r\n\r\n        this.addAttribute(new Attribute(\"y\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"y-Komponente des Vektors\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        let xIndex = this.attributeMap.get(\"x\").index;\r\n        let yIndex = this.attributeMap.get(\"y\").index;\r\n        \r\n\r\n        this.addMethod(new Method(\"Vector2\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n            }, false, false, 'Instanziert einen neuen zweidimensionalen Vektor mit den Komponenten x und y.', true));\r\n\r\n        this.addMethod(new Method(\"fromPolarCoordinates\", new Parameterlist([\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"alphaDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let r: number = parameters[1].value;\r\n                let alphaDeg: number = parameters[2].value;\r\n\r\n                alphaDeg *= Math.PI / 180.0;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: Math.cos(alphaDeg) * r };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: Math.sin(alphaDeg) * r };\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt einen neuen zweidimensionalen Vektor zurück, der mit den Polarkoordinaten (r/alphaDeg) gebildet wird. Datei ist r (Abstand zum Ursprung des Koordinatensystems) und alphaDeg (Winkel zur positiven x-Achse in Grad).', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return `(${x}/${y})`;\r\n\r\n            }, false, false, 'Gibt den Vektor als Zeichenkette in der Form \"(x/y)\" zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleDeg\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x) / Math.PI * 180;\r\n\r\n                return angle >= 0 ? angle : 360 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse in Grad zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleRad\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x);\r\n\r\n                return angle >= 0 ? angle : Math.PI * 2 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse im Bogenmaß zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLength\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return Math.sqrt(x * x + y * y);\r\n\r\n            }, false, false, 'Gibt die Länge des Vectors zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toUnitVector\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n                let length: number = Math.sqrt(x * x + y * y);\r\n\r\n                if (Math.abs(length) > 0.00000000001) {\r\n                    x /= length;\r\n                    y /= length;\r\n                } else {\r\n                    x = 0;\r\n                    y = 0;\r\n                }\r\n\r\n                o1.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o1.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt den zum Vektor zugehörigen Einheitsvektor (d.h. den Vektor mit derselben Richtung, aber der Länge 1) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setLength\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let length: number = parameters[1].value;\r\n\r\n                let l = Math.sqrt(x * x + y * y);\r\n                if (l > 0) {\r\n\r\n                    o.attributes[xIndex].value = x / l * length;\r\n                    o.attributes[yIndex].value = y / l * length;\r\n\r\n                }\r\n\r\n            }, false, false, 'Ändert den Vektor so, dass er seine Richtung beibehält, aber auf die angegebene Länge gestreckt/gestaucht wird.', false));\r\n\r\n        this.addMethod(new Method(\"plus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x + x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y + y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Summe zurück, die sich aus Addition dieses Vektor mit dem übergebenen Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"minus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x - x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y - y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Differenz zurück, die sich aus Subtraktion des übergebenen Vektors von diesem Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"scalarProduct\", new Parameterlist([\r\n            { identifier: \"vector1\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"vector2\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[1].value;\r\n                let o1: RuntimeObject = parameters[2].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                return x * x1 + y * y1;\r\n\r\n            }, false, true, 'Gibt das Skalarprodukt der beiden Vektoren zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"scaledBy\", new Parameterlist([\r\n            { identifier: \"scalar\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let s: number = parameters[1].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * s };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y * s };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt das Produkt zurück, das sich aus Multiplikation dieses Vektor mit dem übergebenen Skalar ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"rotatedBy\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle: number = -parameters[1].value * Math.PI / 180;\r\n                let sin: number = Math.sin(angle);\r\n                let cos: number = Math.cos(angle);\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * cos - y * sin };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: x * sin + y * cos };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt den um den übergebenen Winkel (in Grad) rotierten Vektor zurück. Positiver Winkel => Rotation GEGEN DEN Uhrzeigersinn. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n\r\n        this.addMethod(new Method(\"distance\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                let x1: number = <number>parameters[1].value;\r\n                let y1: number = <number>parameters[2].value;\r\n                let x2: number = <number>parameters[3].value;\r\n                let y2: number = <number>parameters[4].value;\r\n                let dx = x2 - x1;\r\n                let dy = y2 - y1;\r\n                return Math.sqrt(dx * dx + dy * dy);\r\n            }, false, true, \"Berechnet den Abstand der Punkte (x1/y1) und (x2/y2).\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class MouseListenerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseListener\", module, \"Interface mit Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class MouseAdapterClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseAdapter\", module, \"Klasse mit leeren Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt einer Kindklasse dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        this.implements.push(mouseListenerType);\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse } from \"../../communication/Data.js\";\r\nimport { WebSocketHelper } from \"./WebSocket.js\";\r\n\r\nexport class WebSocketClientClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocketClient\", module, \"Ein Objekt der Klasse WebSocketClient repräsentiert einen anderen Rechner, mit dem dieser Rechner über den WebSocket in Kontakt steht.\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addMethod(new Method(\"send\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.send(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an diesen Client. Den messageType kannst Du frei wählen. Die client bekommt ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n            this.addMethod(new Method(\"setUserData\", new Parameterlist([\r\n                { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"wert\", type: objectType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), voidPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                    let key: string = parameters[1].value;\r\n                    let value: RuntimeObject = parameters[2].value;\r\n    \r\n                    wh.setUserData(key, value);\r\n    \r\n                }, false, false, 'Mit dieser Methode kannst Du beliebige Objektreferenzen in diesem WebSocketClient-Objekt speichern. Den Schlüssel kannst Du dabei frei wählen und später nutzen, um den Wert durch die Methode getUserData wieder zu holen.', false));\r\n    \r\n            this.addMethod(new Method(\"getUserData\", new Parameterlist([\r\n                { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), objectType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                    let key: string = parameters[1].value;\r\n    \r\n                    return wh.getUserData(key);\r\n    \r\n                }, false, false, 'Mit dieser Methode kannst Du eine Objektreferenz erhalten, die Du zuvor mit der Methode setUserData gespeichert hast. Bemerkung1: Diese Methode entfernt die Objekreferenz nicht aus dem WebSocketClient-Objekt. Bemerkung2: Damit Du alle Methoden des erhaltenen Objekts aufrufen kannst, musst Du dem Computer mitteilen, von welcher Klasse es ist (\"casten\"). Das geht für die Klasse MeineNutzerDaten bspw. so: MeineNutzerDaten mnd = (MeineNutzerDaten)client.getUserData(\"schlüssel\");', false));\r\n\r\n            let getterList: { att: string, getter: string, help: string}[] = [{att: \"rufname\", getter: \"getFirstName\", help: \"Rufnamen\"},\r\n             {att: \"familienname\", getter: \"getLastName\", help: \"Familiennamen\"}, \r\n            {att: \"username\", getter: \"getUsername\", help: \"Benutzernamen\"}, {att: \"nickname\", getter: \"getNickname\", help: \"Spielernamen\"}  ];\r\n\r\n            for( let getter of getterList){\r\n                this.addMethod(new Method(getter.getter, new Parameterlist([\r\n                ]), stringPrimitiveType,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n        \r\n                        return wh[getter.att];\r\n        \r\n                    }, false, false, 'Gibt den ' + getter.help + \" des Clients zurück.\", false));\r\n\r\n            }\r\n\r\n            this.addMethod(new Method(\"getIndex\", new Parameterlist([\r\n            ]), intPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n    \r\n                    return wh.index;\r\n    \r\n                }, false, false, 'Gehört ein Client zu einer mit findClient bzw. findClients gefundenen Gruppe, so erhältst Du mit dieser Methode die \"Rangfolge\" dieses Clients in dieser Gruppe. Allen Clients wird dieselbe Rangfolgeordnung vom Server mitgeteilt. So lässt sich bspw. einfach festlegen, welcher Client eine besondere Rolle (Server) in der Gruppe erhalten soll (z.B. Client mit Index 1). Bemerkung: Der Index ist eine Zahl zwischen 1 und der Anzahl der Clients in der Gruppe.', false));\r\n\r\n    \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketClientHelper {\r\n\r\n    keyValueStore: {[key: string]: RuntimeObject} = {};\r\n    index: number = 0;\r\n\r\n    public connected: boolean = true;\r\n\r\n    constructor(public runtimeObject: RuntimeObject, private webSocketHelper: WebSocketHelper, \r\n        private id: number, public rufname: string, public familienname: string, public username: string, public nickname: string) {\r\n\r\n    }\r\n\r\n    send(message: string, messageType: string){\r\n        this.webSocketHelper.sendToClient(this.id, message, messageType);       \r\n    }\r\n\r\n    getUserData(key: string): any {\r\n        return this.keyValueStore[key];\r\n    }\r\n\r\n    setUserData(key: string, value: RuntimeObject) {\r\n        this.keyValueStore[key] = value;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse, GetWebSocketTokenResponse, WebSocketResponsePairingFound, WebSocketRequestFindPairing } from \"../../communication/Data.js\";\r\nimport { WebSocketClientHelper } from \"./WebSocketClient.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { SystemClass } from \"../System.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\nexport class WebSocketClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocket\", module, \"Ein Objekt der Klasse WebSocket kann Daten über das Internet senden und empfangen. Um die Klasse benutzen zu können, musst Du eine eigene Klasse schreiben, die die Klasse WebSocket erweitert und die Methoden onConnect, onMessage, onOtherClientConnected und onOtherClientDisconnected überschreibt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let webSocketClientType = <Klass>module.typeStore.getType(\"WebSocketClient\");\r\n        let systemClassType = <SystemClass>module.typeStore.getType(\"System\");\r\n\r\n        this.addMethod(new Method(\"WebSocket\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let interpreter = this.module?.main?.getInterpreter();\r\n\r\n                let wh = new WebSocketHelper(o, interpreter, webSocketClientType, systemClassType);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Instanziert ein neues WebSocket-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n            { identifier: \"sessionCode\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"nickName\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sessionCode: string = parameters[1].value;\r\n                let nickName: string = parameters[2].value;\r\n\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                wh.connect(sessionCode, nickName);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Startet die Verbindung mit dem Server. Den SessionCode kannst Du frei wählen. Mit allen anderen Clients, die eine Verbindung mit demselben SessionCode aufbauen, kannst Du anschließend Daten austauschen. Auch der Nickname ist frei wählbar. Er ist für alle anderen Clients sichtbar.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"sendToAll\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.sendToAll(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an alle anderen Clients. Den messageType kannst Du frei wählen. Die empfangenden Clients bekommen ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"count\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let count: number = parameters[1].value;\r\n\r\n                wh.findClientsFromCount(count);\r\n\r\n            }, false, false, 'Sucht die übergebene Anzahl von \"kontaktbereiten\" Clients, d.h. solchen Clients, die exakt dieselbe Suchanfrage abgegeben haben. Findet der Server die Clients, so ruft er bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"nicknames\", type: new ArrayType(stringPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickNamesValues: Value[] = parameters[1].value;\r\n\r\n                let nicknames: string[] = nickNamesValues.map((nnv) => nnv.value);\r\n\r\n                wh.findClientsFromNicknames(nicknames);\r\n\r\n            }, false, false, 'Sucht die Clients mit den angegebenen Nicknames. Haben sie eine entsprechende Suchanfrage (d.h. dieselben Nicknames) abgegeben, so so ruft der Server bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClient\", new Parameterlist([\r\n            { identifier: \"nickname\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickName: string = parameters[1].value;\r\n\r\n                wh.findClientsFromNicknames([nickName]);\r\n\r\n            }, false, false, 'Sucht den Client mit dem angegebenen Nickname. Hat er eine entsprechende Suchanfrage (d.h. mit dem Nickname DIESES clients) abgegeben, so so ruft der Server bei beiden Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                wh.disconnect();\r\n\r\n            }, false, false, 'Beendet die Verbindung. Bei allen anderen Clients, die sich mit derselben sessionId verbunden haben, wird daraufhin die Methode onOtherClientDisconnected aufgerufen.', false));\r\n\r\n        this.addMethod(new Method(\"onOpen\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, sobald die Verbindung mit dem Server zustandegekommen ist.\", false));\r\n\r\n        this.addMethod(new Method(\"onClose\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem die Verbindung geschlossen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onMessage\", new Parameterlist([\r\n            { identifier: \"sender\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn eine Nachricht eines anderen Clients empfangen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn sich ein anderer Client unter Nutzung desselben sessionCodes mit dem Server verbunden hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientDisconnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn ein anderer Client unter Nutzung desselben sessionCodes die Verbindung mit dem Server beendet hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onClientsFound\", new Parameterlist([\r\n            { identifier: \"clients\", type: new ArrayType(webSocketClientType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ownIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn die durch die Methoden findClient bzw. findClients zuvor gesuchten Clients gefunden wurden.\", false));\r\n\r\n        this.addMethod(new Method(\"getOtherClients\", new Parameterlist([]),\r\n            new ArrayType(webSocketClientType),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let ret = wh.clientList.map(client => {return {type: webSocketClientType, value: client.runtimeObject}});\r\n                \r\n                return ret;\r\n\r\n            }, // no statements!\r\n            false, false, \"Gibt alle bisher bei der selben Session angemeldeten Clients zurück.\", false));\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketHelper {\r\n\r\n    onOpenMethod: Method;\r\n    onCloseMethod: Method;\r\n    onMessageMethod: Method;\r\n    onClientConnectedMethod: Method;\r\n    onClientDisconnectedMethod: Method;\r\n    onClientsFoundMethod: Method;\r\n\r\n    clientList: WebSocketClientHelper[] = [];\r\n    idToClientMap: { [id: number]: WebSocketClientHelper } = {};\r\n\r\n    connection: WebSocket;\r\n    client_id: number; // own client-id\r\n    isOpen: boolean = false;\r\n\r\n    constructor(private runtimeObject: RuntimeObject, private interpreter: Interpreter,\r\n        private webSocketClientType: Klass, private systemClassType: SystemClass) {\r\n\r\n        let klass: Klass = <Klass>runtimeObject.class;\r\n\r\n        // [[Entries]]:Array(4)\r\n        // 0:{\"Test3()\" => Method}\r\n        // 1:{\"onConnect()\" => Method}\r\n        // 2:{\"onMessage(WebSocketClient, String, String)\" => Method}\r\n        // 3:{\"toJson()\" => Method}\r\n\r\n        this.onOpenMethod = klass.methods.find(m => m.signature == \"onOpen()\");\r\n        this.onCloseMethod = klass.methods.find(m => m.signature == \"onClose()\");\r\n        this.onMessageMethod = klass.methods.find(m => m.signature == \"onMessage(WebSocketClient, String, String)\");\r\n        this.onClientConnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientConnected(WebSocketClient)\");\r\n        this.onClientDisconnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientDisconnected(WebSocketClient)\");\r\n        this.onClientsFoundMethod = klass.methods.find(m => m.signature == \"onClientsFound(WebSocketClient[], int)\");\r\n\r\n    }\r\n\r\n    connect(sessionCode: string, nickName: string) {\r\n\r\n        if(this.interpreter.main.isEmbedded()){\r\n            this.interpreter.throwException(\"Die Netzwerkfunktionalitäten stehen nur eingeloggten Nutzern in der Entwicklungsumgebung zur Verfügung und können daher leider hier nicht ausprobiert werden.\");\r\n            return;\r\n        }\r\n\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    nickname: nickName,\r\n                    sessionCode: sessionCode\r\n                }\r\n\r\n                this.interpreter.webSocketsToCloseAfterProgramHalt.push(this.connection);\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n        this.runMethod(this.onCloseMethod, []);\r\n    }\r\n\r\n    sendToClient(clientId: number, data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToClient = {\r\n            command: 3,\r\n            data: data,\r\n            dataType: dataType,\r\n            recipient_id: clientId\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    sendToAll(data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToAll = {\r\n            command: 2,\r\n            data: data,\r\n            dataType: dataType\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        let wtr = this.interpreter.webSocketsToCloseAfterProgramHalt;\r\n        wtr.splice(wtr.indexOf(this.connection), 1);\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 1: // new Client\r\n                let clientRuntimeObject = new RuntimeObject(this.webSocketClientType);\r\n                let wch: WebSocketClientHelper = new WebSocketClientHelper(clientRuntimeObject, this, response.user_id,\r\n                    response.rufname, response.familienname, response.username, response.nickname);\r\n                clientRuntimeObject.intrinsicData[\"Helper\"] = wch;\r\n                this.clientList.push(wch);\r\n                this.idToClientMap[response.user_id] = wch;\r\n                this.runMethod(this.onClientConnectedMethod, [{ type: this.webSocketClientType, value: clientRuntimeObject }]);\r\n                break;\r\n            case 2: // message\r\n                let clientHelper = this.idToClientMap[response.from_client_id];\r\n                if (clientHelper == null) return;\r\n                this.runMethod(this.onMessageMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper.runtimeObject },\r\n                    { type: stringPrimitiveType, value: response.data },\r\n                    { type: stringPrimitiveType, value: response.dataType }\r\n                ]);\r\n                break;\r\n            case 3: // other client disconnected\r\n                let clientHelper1 = this.idToClientMap[response.disconnecting_client_id];\r\n                if (clientHelper1 == null) return;\r\n                this.clientList.splice(this.clientList.indexOf(clientHelper1), 1);\r\n                this.idToClientMap[response.disconnecting_client_id] = undefined;\r\n                this.runMethod(this.onClientDisconnectedMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper1.runtimeObject }\r\n                ]);\r\n                break;\r\n            case 4: // time synchronization\r\n                this.systemClassType.deltaTimeMillis = response.currentTimeMills - Date.now();\r\n                this.client_id = response.client_id\r\n                break;\r\n            case 5: // keep alive\r\n                break;\r\n            case 6: // Clients found\r\n                this.onClientsFound(response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onClientsFound(response: WebSocketResponsePairingFound) {\r\n        let own_index: number = 0;\r\n        let otherClients: Value[] = [];\r\n\r\n        for (let client of response.clients) {\r\n            if (client.id == this.client_id) {\r\n                own_index = client.index;\r\n            } else {\r\n                let otherClient = this.idToClientMap[client.id];\r\n                if (otherClient != null) {\r\n                    otherClient.index = client.index;\r\n                    otherClients.push({\r\n                        type: this.webSocketClientType,\r\n                        value: otherClient.runtimeObject\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        let arrayValue: Value = {\r\n            type: new ArrayType(this.webSocketClientType),\r\n            value: otherClients\r\n        }\r\n\r\n        this.runMethod(this.onClientsFoundMethod, [arrayValue, { type: intPrimitiveType, value: own_index }]);\r\n\r\n    }\r\n\r\n    onError(error: Event) {\r\n        this.interpreter.throwException(\"Kommunikationsfehler beim WebSocket\");\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if(this.unsentMessages.length > 0){\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n        this.runMethod(this.onOpenMethod, []);\r\n    }\r\n\r\n    runMethod(method: Method, stackElements: Value[]) {\r\n        if (method == null) return;\r\n        stackElements.splice(0, 0, {\r\n            type: this.runtimeObject.class,\r\n            value: this.runtimeObject\r\n        });\r\n\r\n        if (this.interpreter.state == InterpreterState.waitingForInput) {\r\n            this.interpreter.executeImmediatelyInNewStackframe(method.program, stackElements);\r\n        } else {\r\n            this.interpreter.runTimer(method, stackElements, () => { }, false);\r\n        }\r\n    }\r\n\r\n    findClientsFromCount(count: number) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: count,\r\n            nicknames: []\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    findClientsFromNicknames(nicknames: string[]) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: nicknames.length,\r\n            nicknames: nicknames\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Variable, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n// import * as p5 from \"p5\";\r\ntype p5 = any;\r\n\r\nexport class ProcessingClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"PApplet\", module, \"Processing-Applet\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.documentation = \"Wenn Du Deine Klasse von PApplet ableitest (class Test extends PApplet{...}), kannst Du auf diese Weise ein Processing-Applet erstellen (siehe https://processing.org), indem Du ihre Methoden draw(), mousePressed(), usw. überschreibst und mit Inhalt füllst. Du startest das Applet, indem Du ein Objekt Deiner Klasse instanzierst und davon die main-Methode aufrufst: new Test().main();\"\r\n\r\n        // this.addAttribute(new Attribute(\"mouseX\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseX) },\r\n        //     false, Visibility.public, true, \"aktuelle x-Koordinate des Mauszeigers\"));\r\n\r\n        // this.addAttribute(new Attribute(\"mouseY\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseY) },\r\n        //     false, Visibility.public, true, \"aktuelle y-Koordinate des Mauszeigers\"));\r\n\r\n        let intConstants: string[][] = [[\"mouseX\", \"aktuelle x-Koordinate des Mauszeigers\"], [\"mouseY\", \"aktuelle y-Koordinate des Mauszeigers\"],\r\n        [\"pMouseX\", \"x-Koordinate des Mauszeigers im vorhergehenden Frame\"], [\"pMouseY\", \"y-Koordinate des Mauszeigers im vorhergehenden Frame\"],\r\n        [\"LEFT\", \"links\"], [\"CENTER\", \"Mitte\"], [\"RIGHT\", \"rechts\"], [\"TOP\", \"obenbündig\"], [\"BASELINE\", \"bündig auf der Grundlinie\"], [\"BOTTOM\", \"untenbündig\"],\r\n        [\"width\", \"Breite des Zeichenbereichs\"], [\"height\", \"Höhe des Zeichenbereichs\"], [\"keyCode\", \"Zahlencode der zuletzt gedrückten Taste\"],\r\n        [\"mouseButton\", \"zuletzt gedrückte Maustaste, kann die Werte LEFT, RIGHT und CENTER annehmen\"],\r\n        [\"CORNER\", \"Mode zum Zeichnen von Rechtecken\"], [\"CORNERS\", \"Mode zum Zeichnen von Rechtecken\"], [\"RADIUS\", \"Mode zum Zeichnen von Rechtecken\"],\r\n\r\n        [\"POINTS\", \"zeichne nachfolgend Einzelpunkte\"],\r\n        [\"LINES\", \"zeichne nachfolgend einzelne Linien\"],\r\n        [\"TRIANGLES\", \"zeichne nachfolgend einzelne Dreiecke\"],\r\n        [\"TRIANGLE_STRIP\", \"zeichne nachfolgend einen Triangle-Strip\"],\r\n        [\"TRIANGLE_FAN\", \"zeichne nachfolgend einen Triangle-Fan\"],\r\n        [\"QUADS\", \"zeichne nachfolgend Vierecke\"],\r\n        [\"QUAD_STRIP\", \"zeichne nachfolgend einen Quad-Strip\"],\r\n        [\"TESS\", \"zeichne nachfolgend ein TESS - geht nur bei createCanvas(width, height, WEBGL)\"],\r\n        [\"CLOSE\", \"endShape(CLOSE) schließt den Linienzug\"],\r\n\r\n        [\"DEGREES\", \"angleMode(DEGREES) sorgt dafür, dass nachfolgende Winkelangaben in Grad interpretiert werden.\"],\r\n        [\"RADIANS\", \"angleMode(RADIANS) sorgt dafür, dass nachfolgende Winkelangaben im Bogenmaß interpretiert werden.\"],\r\n\r\n        ];\r\n\r\n        intConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], intPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        let stringConstants: string[][] = [[\"WEBGL\", \"WebGL-Renderer zur 3D-Ausgabe\"], [\"P2D\", \"Renderer zur zweidimensionalen Ausgabe\"],\r\n        [\"RGB\", \"Color-Mode RGB (rot, grün, blau)\"], [\"HSL\", \"Color-Mode HSL\"], [\"HSB\", \"Color-Mode HSB\"]\r\n        ];\r\n\r\n        stringConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], stringPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        this.addAttribute(new Attribute(\"key\", charPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o.key },\r\n            false, Visibility.public, true, \"letzte gedrückte Taste\"));\r\n\r\n\r\n        this.addMethod(new Method(\"PApplet\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = this.getProcessingHelper(o);\r\n                o.intrinsicData[\"Processing\"] = ph;\r\n\r\n            }, false, false, \"Legt eine neues Processing-Applet an\", true));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n            { identifier: \"name\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                // ph.main legt das aktuelle Programm (a) des Interpreters auf den programStack\r\n                // und setzt als currentProgram ein neues (b). Nach Ende dieser Methode erhöht\r\n                // der Interpreter currentProgramPosition im Glauben, (a) sei aktiv. Daher ist\r\n                // die gespeicherte ProgramPosition von (a) um eins zu niedrig (und wird daher gleich noch\r\n                // vor ph.main(); erhöht) und die bei (b) wird irrtümlich nach Rückkehr von dieser Methode \r\n                // um eins erhöht. Sie wird daher nach Ausführung von ph.main() um eins erniedrigt, damit\r\n                // der Effekt kompensiert wird. \r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"loop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.loop();\r\n\r\n            }, false, false, 'Startet nach noLoop() die Renderer-Loop wieder neu, so dass draw() wieder periodisch aufgerufen wird.', false));\r\n\r\n        this.addMethod(new Method(\"noLoop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.noLoop();\r\n\r\n            }, false, false, 'Stoppt die Render-Loop, so dass draw() nicht mehr aufgerufen wird. Kann mit loop() wieder gestartet werden.', false));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"renderer\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let renderer: string = parameters[3].value;\r\n\r\n                ph.renderer = renderer;\r\n                ph.createCanvas(width, height);\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"draw\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die draw-Methode wird 60-mal pro Sekunde aufgerufen (\"Render-Loop\"). Die Render-Loop kann mit der Methode noLoop() gestoppt und mit loop() wieder gestartet werden. redraw() ruft (im gestoppten Zustand) draw genau ein Mal auf.', false));\r\n\r\n        this.addMethod(new Method(\"settings\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die settings-Methode wird aufgerufen, nachdem das Processing-Applet durch Aufruf der Methode main gestartet wurde. Im Unterschied zur Original Java-Version von Processing hat die Methode settings hier keine andere Bewandtnis als die - unmittelbar darauf aufgerufene - Methode setup. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"setup\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die setup-Methode wird beim Programmstart nach der settings-Methode aufgerufen. Im Unterschied zur Original Java-Version von Processing hat die Methode setup hier keine andere Bewandtnis als die - unmittelbar davor aufgerufene - Methode settings. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"mousePressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mousePressed-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste heruntergedrückt wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade heruntergedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseReleased-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseClicked\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseClicked-Methode wird immer dann aufgerufen, wenn eine Maustaste auf dem Zeichenbereich gedrückt und anschließend losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseDragged\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseDragged-Methode wird immer dann aufgerufen, wenn eine Maustaste gerade heruntergedrückt ist und die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseMoved\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseMoved-Methode wird immer dann aufgerufen, wenn die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseEntered\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseEntered-Methode wird immer dann aufgerufen, wenn der Mauszeiger von außen neu in den Zeichenbereich hineinfährt.', false));\r\n\r\n        this.addMethod(new Method(\"mouseExited\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseExited-Methode wird immer dann aufgerufen, wenn der Mauszeiger den Zeichnbereich gerade verlassen hat.', false));\r\n\r\n        this.addMethod(new Method(\"keyPressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyPressed-Methode wird immer dann aufgerufen, wenn eine Taste gerade heruntergedrückt wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"keyReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyReleased-Methode wird immer dann aufgerufen, wenn eine Taste gerade losgelassen wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n\r\n\r\n        // this.addMethod(new Method(\"rect\", new Parameterlist([\r\n        //     { identifier: \"left\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"top\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"width\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"height\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        // ]), voidPrimitiveType,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n        //         let left: number = parameters[1].value;\r\n        //         let top: number = parameters[2].value;\r\n        //         let width: number = parameters[3].value;\r\n        //         let height: number = parameters[4].value;\r\n\r\n        //         ph.addStatement((p5o) => p5o.rect(left, top, width, height));\r\n\r\n\r\n        //     }, false, false, 'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.', false));\r\n\r\n\r\n        /**\r\n         * Setzen von Farben\r\n         */\r\n        this.addProcessingMethod('clear', [], [],\r\n            'Löscht die Zeichenfläche.');\r\n\r\n        this.addProcessingMethod('background', ['rgb'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe.');\r\n\r\n        this.addProcessingMethod('background', ['colorAsString'], stringPrimitiveType,\r\n            \"Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. Übergeben wird eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('background', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], intPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['gray'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('noFill', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden nicht gefüllt.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], intPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['gray'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('strokeWeight', ['weight'], floatPrimitiveType,\r\n            'Setzt die Linienbreite.');\r\n\r\n        this.addProcessingMethod('noStroke', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden ohne Rand gezeichnet.');\r\n\r\n        this.addProcessingMethod('color', ['gray'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['colorAsString'], stringPrimitiveType,\r\n            \"Gibt die Farbe zurück. Übergeben kann eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['gray', 'alpha'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 und alpha gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerpColor', ['colorA', 'colorB', 't'], [stringPrimitiveType, stringPrimitiveType, floatPrimitiveType],\r\n            'Gibt eine Zwischenfarbe zwischen colorA und colorB zurück. t == 0 bedeutet: colorA, t == 1 bedeutet: colorB, t == 0.5 bedeutet: genau zwischen beiden, usw.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('colorMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max'], [stringPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3', 'maxAlpha'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n\r\n\r\n        /**\r\n         * Zeichnen geometrischer Figuren\r\n         */\r\n        this.addProcessingMethod('rectMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von rect(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks. Radius ist der Eckenradius');\r\n\r\n        this.addProcessingMethod('ellipse', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet eine Ellipse. (left, top) ist die linke obere Ecke der Boundingbox der Ellipse, width ihre Breite und height ihre Höhe. Das lässt sich aber mit ellipseMode(...) ändern!');\r\n\r\n        this.addProcessingMethod('circle', ['x', 'y', 'extent'], floatPrimitiveType,\r\n            'Zeichnet einen Kreis. (x, y) ist der Mittelpunkt des Kreises, extent der doppelte Radius.');\r\n\r\n        this.addProcessingMethod('ellipseMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von ellipse(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1) nach (x2, y2).');\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'z1', 'x2', 'y2', 'z2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1, z1) nach (x2, y2, z2).');\r\n\r\n        this.addProcessingMethod('triangle', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3'], floatPrimitiveType,\r\n            'Zeichnet eine Dreieck mit den Eckpunkten (x1, y1), (x2, y2) und (x3, y3).');\r\n\r\n        this.addProcessingMethod('quad', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Viereck mit den Eckpunkten (x1, y1), (x2, y2), (x3, y3) und (x4, y4).');\r\n\r\n        this.addProcessingMethod('bezier', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine kubische Bezierkurve mit den Ankerpunkten (x1, y1), (x4, y4) und den Kontrollpunkten (x2, y2), (x3, y3).');\r\n\r\n        this.addProcessingMethod('curve', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Catmull-Rom-Kurve vom Punkt (x2, y2) nach (x3, y3) so, als würde sie von (x1, x2) kommen und es am Ende zu (x4, y4) weitergehen.');\r\n\r\n        this.addProcessingMethod('curvePoint', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('curveTangent', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierPoint', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierTangent', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n\r\n        this.addProcessingMethod('beginShape', [], [],\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt.');\r\n\r\n        this.addProcessingMethod('endShape', [], [],\r\n            'Endet das Zeichnen eines Polygons.');\r\n\r\n        this.addProcessingMethod('beginShape', ['kind'], stringPrimitiveType,\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt. Mögliche Werte für kind sind: POINTS, LINES, TRIANGLES, TRIANGLE_STRIP, TRIANGLE_FAN, QUADS, QUAD_STRIP');\r\n\r\n        this.addProcessingMethod('endShape', ['kind'], stringPrimitiveType,\r\n            'endShape(CLOSE) schließt den Linienzug.');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('set', ['x', 'y', 'color'], [floatPrimitiveType, floatPrimitiveType, stringPrimitiveType],\r\n            'Setzt die Farbe des Pixels bei (x, y).');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('curveVertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('curvevertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('box', ['size'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit der Seitenlänge size.');\r\n\r\n        this.addProcessingMethod('box', ['sizeX', 'sizeY', 'sizeZ'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit den angegebenen Seitenlängen.');\r\n\r\n        /**\r\n         * Transformationen\r\n         */\r\n        this.addProcessingMethod('resetMatrix', [], [],\r\n            'Setzt alle erfolgten Transformationen zurück.');\r\n\r\n        this.addProcessingMethod('push', [], [],\r\n            'Sichert den aktuellen Zeichenzustand, d.h. die Farben und Transformationen, auf einen Stack.');\r\n\r\n        this.addProcessingMethod('pop', [], [],\r\n            'Holt den obersten Zeichenzustand, d.h. die Farben und Transformationen, vom Stack.');\r\n\r\n        this.addProcessingMethod('scale', ['factor'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY', 'factorZ'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('rotate', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateX', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die X-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateY', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearX', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung derX-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearY', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung der Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateZ', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Z-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('angleMode', ['mode'], stringPrimitiveType,\r\n            'Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie winkel bei Rotationen interpretiert werden. Default ist RADIANS.');\r\n\r\n        /**\r\n         * Text\r\n         */\r\n        this.addProcessingMethod('textSize', ['size'], floatPrimitiveType,\r\n            'Setzt die Schriftgröße in Pixel.');\r\n\r\n        // this.addProcessingMethod('loadFont', ['fontname'], stringPrimitiveType,\r\n        //     'Lädt eine Schriftart. Diese Methode muss in der Methode preload aufgerufen werden.');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes in x-Richtung. Mögliche Werte sind CENTER, LEFT, RIGHT');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX', 'alignY'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes. Mögliche Werte für alignX sind CENTER, LEFT, RIGHT, mögliche Werte für alignY sind TOP, CENTER, BASELINE, BOTTOM');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus.');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y', 'x2', 'y2'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus. x2 und y2 sind die Breite und Höhe des Textausgabebereichs. Hat der Text horizontal nicht Platz, so wird er entsprechend umgebrochen.');\r\n\r\n        /**\r\n         * Mathematische Funktionen\r\n         */\r\n        this.addProcessingMethod('random', ['low', 'high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen low und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('random', ['high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen 0 und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['n'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel von n zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('pow', ['basis', 'exponent'], floatPrimitiveType,\r\n            'Gibt die den Wert der Potenz (\"basis hoch exponent\") zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('max', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den größeren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('min', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den kleineren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], floatPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sin', ['n'], floatPrimitiveType,\r\n            'Gibt den Sinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('cos', ['n'], floatPrimitiveType,\r\n            'Gibt den Cosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('tan', ['n'], floatPrimitiveType,\r\n            'Gibt den Tangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('asin', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('acos', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('radians', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Gradmaß ins Bogenmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('degrees', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Bogenmaß ins Gradmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan2', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sq', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt das Quadrat des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], intPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('round', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('ceil', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Aufrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('floor', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Abfrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('dist', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Berechnet den Abstand der Punkte (x1, y1) und (x2, y2).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerp', ['a', 'b', 't'], floatPrimitiveType,\r\n            'Berechnet den a + (b - a)*t. Wählt man t zwischen 0 und 1, so kann man damit die Zwischenwerte zwischen a und b errechnen.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('constrain', ['value', 'min', 'max'], floatPrimitiveType,\r\n            'Beschränkt value auf den Bereich [min, max], genauer: Ist value < min, so wird min zurückgegeben. Ist value > max, so wird max zurückgegeben. Ansonsten wird value zurückgegeben.', floatPrimitiveType);\r\n\r\n        /**\r\n         * Sonstiges\r\n         */\r\n\r\n        this.addProcessingMethod('year', [], [],\r\n            'Aktuelle Jahreszahl', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('month', [], [],\r\n            'Monat: 1 == Januar, 12 == Dezember', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('day', [], [],\r\n            'Tag (innerhalb des Monats) des aktuellen Datums', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('minute', [], [],\r\n            'Minutenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('second', [], [],\r\n            'Sekundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('frameRate', ['n'], intPrimitiveType,\r\n            'Setzt die Framerate (Anzahl der Aufrufe von draw() pro Sekunde)');\r\n\r\n        this.addProcessingMethod('textWidth', ['text'], stringPrimitiveType,\r\n            'Gibt die Breite des Texts zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textAscent', ['text'], stringPrimitiveType,\r\n            'Gibt den Ascent Textes zurück ( = Höhe des größten Zeichens über der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textDescent', ['text'], stringPrimitiveType,\r\n            'Gibt den Descent Textes zurück ( = Tiefe des tiefsten Zeichens unter der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textLeading', ['leading'], floatPrimitiveType,\r\n            'Setzt den Abstand zweier aufeinanderfolgender Textzeilen.');\r\n\r\n        this.addProcessingMethod('cursor', ['type'], stringPrimitiveType,\r\n            'Ändert das Aussehen des Mauscursors. Type ist einer der Werte \"arrow\", \"cross\", \"text\", \"move\", \"hand\", \"wait\", \"progress\".');\r\n\r\n        this.addProcessingMethod('noCursor', ['type'], stringPrimitiveType,\r\n            'Hat zur Folge, dass der Mauscursor über dem Zeichenbereich unsichtbar ist.');\r\n\r\n        this.addProcessingMethod('copy', ['sx', 'sy', 'sw', 'sh', 'dx', 'dy', 'dw', 'dh'], floatPrimitiveType,\r\n            'Kopiert den rechteckigen Bereich mit der linken oberen Ecke (sx, sy) sowie der Breite sw und der Höhe sh in den Bereich mit der linken oberen Ecke (dx, dy), der Breite dw und der Höhe dh.');\r\n\r\n        this.addProcessingMethod('millis', [], [],\r\n            'Gibt die Millisekunden zurück, die vergangen sind, seit setup() aufgerufen wurde.');\r\n\r\n        this.addProcessingMethod('redraw', [], [],\r\n            'Führt draw() genau ein Mal aus. Macht ggf. Sinn, wenn die Render-Loop zuvor mit noLoop() gestoppt wurde.');\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    addProcessingMethod(identifier: string, parameterNames: string[], parameterTypes: Type[] | Type, comment: string, returnType?: Type) {\r\n\r\n        let parameters: Variable[] = [];\r\n        if (Array.isArray(parameterTypes)) {\r\n            for (let i = 0; i < parameterNames.length; i++) {\r\n                parameters.push({ identifier: parameterNames[i], type: parameterTypes[i], declaration: null, usagePositions: null, isFinal: true });\r\n            }\r\n        } else {\r\n            parameters = parameterNames.map((name) => { return { identifier: name, type: parameterTypes, declaration: null, usagePositions: null, isFinal: true } })\r\n        }\r\n\r\n        if (returnType == null) {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), null,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n        } else {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), returnType,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    return ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getProcessingHelper(processingObject: RuntimeObject, breite: number = 800, höhe: number = 600): ProcessingHelper {\r\n\r\n        let interpreter = this.module?.main?.getInterpreter();\r\n\r\n\r\n        if (interpreter.processingHelper != null) {\r\n\r\n            interpreter.throwException(\"Es kann nur ein einziges Processing-Applet instanziert werden.\");\r\n            return;\r\n        }\r\n\r\n        if (interpreter.worldHelper != null) {\r\n\r\n            interpreter.throwException(\"Processing kann nicht gleichzeitig mit der herkömmlichen Grafikausgabe genutzt werden.\");\r\n            return;\r\n        }\r\n\r\n        return new ProcessingHelper(this.module, interpreter, processingObject);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ProcessingHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n\r\n    $div: JQuery<HTMLElement>;\r\n\r\n    width: number = 800;\r\n    height: number = 600;\r\n\r\n    p5o: p5;\r\n\r\n    renderer: string;\r\n    loopStopped: boolean = false;\r\n\r\n    onSizeChanged: () => void;\r\n\r\n\r\n    constructor(private module: Module, private interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n\r\n        this.interpreter.processingHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n\r\n        this.onSizeChanged = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (this.height / this.width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': this.width / this.height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': this.height / this.width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', this.onSizeChanged);\r\n\r\n        this.onSizeChanged();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    createCanvas(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.onSizeChanged();\r\n        this.p5o.createCanvas(this.width, this.height, this.renderer);\r\n        this.$div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n\r\n        });\r\n    }\r\n\r\n    main() {\r\n        this.interpreter.timerExtern = true;\r\n        this.setupProcessing(this.$containerInner);\r\n    }\r\n\r\n    setupProcessing($div: JQuery<HTMLElement>) {\r\n\r\n        let that = this;\r\n        let drawMethodPending: boolean = true;\r\n        this.$div = $div;\r\n\r\n        let sketch = (p5: p5) => {\r\n\r\n            p5.setup = function () {\r\n                that.renderer = p5.P2D;\r\n\r\n                let afterFinishingBoth = () => {\r\n                    // p5.createCanvas(that.width, that.height, that.renderer);\r\n                    drawMethodPending = false\r\n                    // $div.find('canvas').css({\r\n                    //     'width': '',\r\n                    //     'height': ''\r\n                    // })            \r\n                }\r\n\r\n                let i = 2;\r\n\r\n                that.runMethod('setup', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n                that.runMethod('settings', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n\r\n            };\r\n\r\n            p5.preload = function () {\r\n                that.runMethod('preload');\r\n            };\r\n\r\n            p5.draw = function () {\r\n                if (that.interpreter.state == InterpreterState.running && !that.loopStopped) {\r\n                    if (!drawMethodPending) {\r\n                        drawMethodPending = true;\r\n                        that.runMethod(\"draw\", () => {\r\n                            drawMethodPending = false;\r\n                        });\r\n                    }\r\n                }\r\n                that.tick();\r\n                // p5.background(50);\r\n                // p5.rect(p5.width / 2, p5.height / 2, 50, 50);\r\n\r\n            };\r\n\r\n            p5.mousePressed = function () {\r\n                that.runMethod('mousePressed');\r\n            };\r\n\r\n            p5.mouseReleased = function () {\r\n                that.runMethod('mouseReleased');\r\n            };\r\n\r\n            p5.mouseClicked = function () {\r\n                that.runMethod('mouseClicked');\r\n            };\r\n\r\n            p5.mouseDragged = function () {\r\n                that.runMethod('mouseDragged');\r\n            };\r\n\r\n            p5.mouseEntered = function () {\r\n                that.runMethod('mouseEntered');\r\n            };\r\n\r\n            p5.mouseExited = function () {\r\n                that.runMethod('mouseExited');\r\n            };\r\n\r\n            p5.mouseMoved = function () {\r\n                that.runMethod('mouseMoved');\r\n            };\r\n\r\n            p5.keyPressed = function () {\r\n                that.runMethod('keyPressed');\r\n            };\r\n\r\n            p5.keyReleased = function () {\r\n                that.runMethod('keyReleased');\r\n            };\r\n\r\n\r\n        }\r\n\r\n        //@ts-ignore\r\n        this.p5o = new p5(sketch, $div[0]);\r\n        $div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n        })\r\n\r\n    }\r\n\r\n\r\n    tick() {\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            this.interpreter.timerFunction(33.33, true, 0.5);\r\n            this.interpreter.timerStopped = false;\r\n            this.interpreter.timerFunction(33.33, false, 0.08);\r\n        }\r\n\r\n    }\r\n\r\n    loop() {\r\n        this.loopStopped = false;\r\n    }\r\n\r\n    noLoop() {\r\n        this.loopStopped = true;\r\n    }\r\n\r\n    runMethod(methodIdentifier: string, callback: () => void = null) {\r\n\r\n        let klass: Klass = <Klass>this.runtimeObject.class;\r\n        let method = klass.getMethodBySignature(methodIdentifier + \"()\");\r\n\r\n        let program = method?.program;\r\n\r\n        if (program == null) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: klass,\r\n                value: this.runtimeObject\r\n            },\r\n        ];\r\n\r\n        this.interpreter.runTimer(method, stackElements, (interpreter) => {\r\n            if (callback != null) callback();\r\n        }, methodIdentifier == \"draw\");\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        if (this.p5o != null) this.p5o.remove();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.processingHelper = null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { polygonBerührtPolygon } from \"../../tools/MatheTools.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class TurtleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Turtle\", module, \"Turtle-Klasse zum Zeichnen von Streckenzügen oder gefüllten Figuren. Wichtig sind vor allem die Methoden forward(double length) und turn(double angleDeg), die die Turtle nach vorne bewegen bzw. ihre Blickrichtung ändern.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                let ph = new TurtleHelper(x, y, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Am Ende des Streckenzugs wird eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let showTurtle: boolean = parameters[3].value;\r\n\r\n                let ph = new TurtleHelper(x, y, showTurtle, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Falls showTurtle == true, wird am Ende des Streckenzuges eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let length: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(length);\r\n\r\n            }, false, false, 'Weist die Turtle an, die angegebene Länge vorwärts zu gehen. Ihr zurückgelegter Weg wird als gerade Strecke mit der aktuellen BorderColor gezeichnet. Mit setBorderColor(null) bewirkst Du, dass ein Stück ihres Weges nicht gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"turn\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"turn\")) return;\r\n\r\n                sh.turn(angle);\r\n\r\n            }, false, false, 'Bewirkt, dass sich die Turtle um den angegebenen Winkel (in Grad!) dreht, d.h. ihre Blickrichtung ändert. Ein positiver Winkel bewirkt eine Drehung gegen den Uhrzeigersinn. Diese Methode wirkt sich NICHT auf die bisher gezeichneten Strecken aus. Willst Du alles bisher Gezeichnete inklusive Turtle drehen, so nutze die Methode rotate.', false));\r\n\r\n        this.addMethod(new Method(\"penUp\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penUp\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"penDown\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penDown\")) return;\r\n\r\n                sh.penIsDown = true;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"closeAndFill\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"closeAndFill\")) return;\r\n\r\n                sh.closeAndFill(closeAndFill);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"showTurtle\", new Parameterlist([\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let showTurtle: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"showTurtle\")) return;\r\n\r\n                sh.setShowTurtle(showTurtle);\r\n\r\n            }, false, false, 'showTurtle == true bewirkt, dass am Ort der Turtle ein rotes Dreieck gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Turtle-Objekts und gibt es zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\ntype LineElement = {\r\n    x: number,\r\n    y: number,\r\n    color: number,\r\n    alpha: number,\r\n    lineWidth: number\r\n}\r\n\r\nexport class TurtleHelper extends FilledShapeHelper {\r\n\r\n    lineElements: LineElement[] = [];\r\n    angle: number = 0;\r\n\r\n    isFilled: boolean = false;\r\n\r\n    turtle: PIXI.Graphics;\r\n    lineGraphic: PIXI.Graphics;\r\n\r\n    xSum: number = 0;\r\n    ySum: number = 0;\r\n\r\n    initialHitPolygonDirty: boolean = true;\r\n\r\n    turtleSize: number = 40;\r\n\r\n    penIsDown: boolean = true;\r\n\r\n    lastLineWidth: number = 0;\r\n    lastColor: number = 0;\r\n    lastAlpha: number = 0;\r\n\r\n    lastPosX: number = -1;\r\n    lastPosY: number = -1;\r\n\r\n    renderJobPresent: boolean = false;\r\n\r\n    constructor(xStart: number, yStart: number, private showTurtle: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.lineElements.push({\r\n            x: xStart,\r\n            y: yStart,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.borderColor = 0xffffff;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let container = new PIXI.Container();\r\n        this.displayObject = container;\r\n\r\n        this.lineGraphic = new PIXI.Graphics();\r\n        container.addChild(this.lineGraphic);\r\n        this.lineGraphic.moveTo(xStart, yStart);\r\n        this.lastPosX = xStart;\r\n        this.lastPosY = yStart;\r\n\r\n        this.turtle = new PIXI.Graphics();\r\n        container.addChild(this.turtle);\r\n        this.turtle.visible = this.showTurtle;\r\n        this.drawTurtle(xStart, yStart, this.angle);\r\n\r\n\r\n        // let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    calculateCenter() {\r\n        let length = this.lineElements.length;\r\n        let lastLineElement = this.lineElements[length - 1];\r\n        this.xSum += lastLineElement.x;\r\n        this.ySum += lastLineElement.y;\r\n        this.centerXInitial = this.xSum / length;\r\n        this.centerYInitial = this.ySum / length;\r\n    }\r\n\r\n    closeAndFill(closeAndFill: boolean) {\r\n        if (closeAndFill != this.isFilled) {\r\n            this.isFilled = closeAndFill;\r\n            this.render();\r\n            this.initialHitPolygonDirty = true;\r\n        }\r\n    }\r\n\r\n    setShowTurtle(show: boolean) {\r\n        this.turtle.visible = show;\r\n    }\r\n\r\n    turn(angle: number) {\r\n        this.angle -= angle / 180 * Math.PI;\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.drawTurtle(lastLineElement.x, lastLineElement.y, this.angle);\r\n    }\r\n\r\n    rotate(angleInDegrees: number, cx?: number, cy?: number) {\r\n        this.turn(this.angle);\r\n        let lastLineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.drawTurtle(lastLineElement.x, lastLineElement.y, this.angle);\r\n        super.rotate(angleInDegrees, cx, cy);\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TurtleHelper = new TurtleHelper(this.lineElements[0].x, this.lineElements[0].y,\r\n            this.showTurtle, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    forward(length: number) {\r\n\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let newLineElement: LineElement = {\r\n            x: lastLineElement.x + length * Math.cos(this.angle),\r\n            y: lastLineElement.y + length * Math.sin(this.angle),\r\n            color: this.penIsDown ? this.borderColor : null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        // if (this.isFilled) {\r\n        //     this.render();\r\n        // } else {\r\n        //     if (this.borderColor != null) {\r\n        //         // this.lineGraphic.moveTo(lastLineElement.x, lastLineElement.y);\r\n        //         this.lineGraphic.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        //         this.lineGraphic.lineTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"LineTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     } else {\r\n        //         this.lineGraphic.moveTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"MoveTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     }\r\n        // }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n\r\n        // don't render more frequent than every 1/100 s\r\n        if (!this.renderJobPresent) {\r\n            this.renderJobPresent = true;\r\n            setTimeout(() => {\r\n                this.renderJobPresent = false;\r\n                this.render();\r\n                this.drawTurtle(newLineElement.x, newLineElement.y, this.angle);\r\n            }, 100);\r\n        }\r\n\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        let newLineElement: LineElement = {\r\n            x: x,\r\n            y: y,\r\n            color: null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n        this.drawTurtle(newLineElement.x, newLineElement.y, this.angle);\r\n    }\r\n\r\n\r\n    drawTurtle(x: number, y: number, angle: number): void {\r\n        this.turtle.clear();\r\n        this.turtle.lineStyle(3, 0xff0000, 1, 0.5);\r\n        this.turtle.moveTo(x, y);\r\n\r\n        let vx = Math.cos(angle);\r\n        let vy = Math.sin(angle);\r\n\r\n        let vxp = -Math.sin(angle);\r\n        let vyp = Math.cos(angle);\r\n\r\n        let lengthForward = this.turtleSize / 2;\r\n        let lengthBackward = this.turtleSize / 4;\r\n        let lengthBackwardP = this.turtleSize / 4;\r\n\r\n        this.turtle.moveTo(x + vx * lengthForward, y + vy * lengthForward);\r\n        this.turtle.lineTo(x - vx * lengthBackward + vxp * lengthBackwardP, y - vy * lengthBackward + vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x - vx * lengthBackward - vxp * lengthBackwardP, y - vy * lengthBackward - vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x + vx * lengthForward, y + vy * lengthForward);\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = this.lineGraphic;\r\n\r\n        this.lastLineWidth = 0;\r\n        this.lastColor = 0;\r\n        this.lastAlpha = 0;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n\r\n        let firstPoint = this.lineElements[0];\r\n        g.moveTo(firstPoint.x, firstPoint.y);\r\n        // console.log(\"MoveTo: \" + firstPoint.x + \", \" + firstPoint.y);\r\n\r\n        if (this.isFilled) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        }\r\n        for (let i = 1; i < this.lineElements.length; i++) {\r\n            let le: LineElement = this.lineElements[i];\r\n            if (le.color != null) {\r\n                if (!this.isFilled) {\r\n                    if (le.lineWidth != this.lastLineWidth || le.color != this.lastColor || le.alpha != this.lastAlpha) {\r\n                        g.lineStyle(le.lineWidth, le.color, le.alpha, 0.5)\r\n                        this.lastLineWidth = le.lineWidth;\r\n                        this.lastColor = le.color;\r\n                        this.lastAlpha = le.alpha;\r\n                    }\r\n                }\r\n                g.lineTo(le.x, le.y);\r\n                // console.log(\"LineTo: \" + le.x + \", \" + le.y);\r\n            } else {\r\n                g.moveTo(le.x, le.y);\r\n                // console.log(\"MoveTo: \" + le.x + \", \" + le.y);\r\n            }\r\n        }\r\n\r\n        if (this.isFilled) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    collidesWith(shapeHelper: any) {\r\n\r\n        if (shapeHelper instanceof TurtleHelper && shapeHelper.initialHitPolygonDirty) {\r\n            shapeHelper.setupInitialHitPolygon();\r\n        }\r\n\r\n        if (this.initialHitPolygonDirty) {\r\n            this.setupInitialHitPolygon();\r\n        }\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n\r\n    }\r\n\r\n    setupInitialHitPolygon() {\r\n        this.hitPolygonInitial = this.lineElements.map((le) => { return { x: le.x, y: le.y } });\r\n    }\r\n\r\n    clear() {\r\n        this.lineElements = [];\r\n        this.lineElements.push({\r\n            x: 100,\r\n            y: 200,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.angle = 0;\r\n        this.borderColor = 0;\r\n        this.turtleSize = 40;\r\n        this.render();\r\n        this.drawTurtle(100, 200, 0);\r\n    }\r\n\r\n\r\n    touchesAtLeastOneFigure(): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesColor(farbe: number): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                if (sh instanceof FilledShapeHelper && sh.fillColor == farbe) return true;\r\n                // if(sh instanceof TurtleHelper) TODO\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesShape(shape: ShapeHelper) {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n        return shape.containsPoint(x, y);\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport type GNGAktionsempfaengerType = \"ausführen\" | \"taste\" | \"sondertaste\" | \"geklickt\";\r\n\r\nexport type GNGAktionsempfaengerData = {\r\n    type: GNGAktionsempfaengerType,\r\n    method: Method,\r\n    runtimeObject: RuntimeObject\r\n}\r\n\r\nexport class GNGEreignisbehandlung extends Klass {\r\n\r\n    constructor(module: Module, private moduleStore: ModuleStore) {\r\n\r\n        super(\"Ereignisbehandlung\", module, \"Zugriff auf Ereignisse einschließlich Taktgeber (Graphics'n Games-Bibliothek (Cornelsen-Verlag))\");\r\n\r\n\r\n        this.addMethod(new Method(\"Ereignisbehandlung\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let helper = GNGEreignisbehandlung.getHelper(module);\r\n\r\n                helper.registerEvents(o);\r\n\r\n            }, false, false, 'Instanziert ein neues Ereignisbehandlungs-Objekt.', true));\r\n\r\n        // this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n        //     { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n        //         let groesse: number = parameters[1].value;\r\n\r\n\r\n        //     }, false, false, \"Setzt die Größe der Figur.\", false));\r\n\r\n        this.addMethod(new Method(\"Starten\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                 GNGEreignisbehandlung.getHelper(module).startTimer();\r\n\r\n            }, false, false, \"Zeitgeber starten.\", false));\r\n\r\n        this.addMethod(new Method(\"Anhalten\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                GNGEreignisbehandlung.getHelper(module).stopTimer();\r\n\r\n            }, false, false, \"Zeitgeber anhalten.\", false));\r\n\r\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\r\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let dauer: number = parameters[1].value;\r\n                GNGEreignisbehandlung.getHelper(module).taktdauer = dauer;\r\n\r\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\r\n\r\n\r\n        this.addMethod(new Method(\"TaktImpulsAusführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n    }\r\n\r\n    static getHelper(module: Module):GNGEreignisbehandlungHelper{\r\n        let interpreter = module.main.getInterpreter();\r\n        if (interpreter.gngEreignisbehandlungHelper == null) {\r\n            interpreter.gngEreignisbehandlungHelper = new GNGEreignisbehandlungHelper(module);\r\n            interpreter.gngEreignisbehandlungHelper.bindEvents();\r\n        }\r\n\r\n        return interpreter.gngEreignisbehandlungHelper;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class GNGEreignisbehandlungHelper {\r\n\r\n    aktionsempfaengerTypes: string[] = [\"ausführen\", \"taste\", \"sondertaste\", \"geklickt\"];\r\n    methodSignatureList: string[] = [\"TaktImpulsAusführen()\", \"AktionAusführen()\", \"MausGeklickt(int, int, int)\", \"TasteGedrückt(char)\", \"SonderTasteGedrückt(int)\"];\r\n    methodToAktionsempfaengerTypeMap: { [signature: string]: string } = {\r\n        \"TaktImpulsAusführen()\": \"ausführen\",\r\n        \"AktionAusführen()\": \"ausführen\",\r\n        \"MausGeklickt(int, int, int)\": \"geklickt\",\r\n        \"TasteGedrückt(char)\": \"taste\",\r\n        \"SonderTasteGedrückt(int)\": \"sondertaste\"\r\n    };\r\n\r\n    // see https://www.freecodecamp.org/news/javascript-keycode-list-keypress-event-key-codes/\r\n    keyToKeyCodeMap: { [key: string]: number } = {\r\n        \"Enter\": 13,\r\n        \"ArrowLeft\": 37,\r\n        \"ArrowRight\": 39,\r\n        \"ArrowUp\": 38,\r\n        \"ArrowDown\": 40,\r\n        \"F1\": 112,\r\n        \"F2\": 113,\r\n        \"F3\": 114,\r\n        \"F4\": 115,\r\n        \"F5\": 116,\r\n        \"F6\": 117,\r\n        \"F7\": 118,\r\n        \"F8\": 119,\r\n        \"F9\": 120,\r\n        \"F10\": 121,\r\n        \"F11\": 122,\r\n        \"F12\": 123,\r\n        \"PageUp\": 33,\r\n        \"PageDown\": 33,\r\n        \"Insert\": 155\r\n    }\r\n\r\n    // For gng library (Cornelsen-Verlag):\r\n    aktionsempfaengerMap: { [aktionsempfaengerType: string]: GNGAktionsempfaengerData[] } = {};\r\n\r\n    timerRunning: boolean = false;\r\n    taktdauer: number = 300;\r\n    remainingTime: number = 0;\r\n\r\n    onKeyDownMethod: (key: string) => void;\r\n\r\n    constructor(private module:Module){\r\n        for (let type of this.aktionsempfaengerTypes) {\r\n            this.aktionsempfaengerMap[type] = [];\r\n        }\r\n\r\n    }\r\n\r\n    hasAktionsEmpfaenger(): boolean {\r\n\r\n        for(let type of this.aktionsempfaengerTypes){\r\n            if(this.aktionsempfaengerMap[type].length > 0){\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n\r\n    registerEvents(o: RuntimeObject) {\r\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\r\n\r\n        for (let ms of this.methodSignatureList) {\r\n            let method: Method = klass.getMethodBySignature(ms);\r\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n                this.aktionsempfaengerMap[type].push({\r\n                    type: <GNGAktionsempfaengerType>type,\r\n                    method: method,\r\n                    runtimeObject: o\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    unregisterEvents(o: RuntimeObject) {\r\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\r\n\r\n        for (let ms of this.methodSignatureList) {\r\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\r\n\r\n            this.aktionsempfaengerMap[type] =\r\n                this.aktionsempfaengerMap[type].filter(ae => ae.runtimeObject != o);\r\n        }\r\n    }\r\n\r\n\r\n    bindEvents() {\r\n        let interpreter = this.module.main.getInterpreter();\r\n\r\n        this.onKeyDownMethod = (key: string) => {\r\n            if (key.length == 1) {\r\n                for (let ae of this.aktionsempfaengerMap[\"taste\"]) {\r\n                    this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: key }]);\r\n                }\r\n            } else {\r\n                let keyCode = this.keyToKeyCodeMap[key];\r\n                if (keyCode != null) {\r\n                    for (let ae of this.aktionsempfaengerMap[\"sondertaste\"]) {\r\n                        this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: keyCode }]);\r\n                    }\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        interpreter.keyboardTool.keyDownCallbacks.push(this.onKeyDownMethod);\r\n\r\n        // this.startTimer();\r\n\r\n    }\r\n\r\n    detachEvents() {\r\n        let interpreter = this.module.main.getInterpreter();\r\n        let index = interpreter.keyboardTool.keyDownCallbacks.indexOf(this.onKeyDownMethod);\r\n        if (index >= 0) interpreter.keyboardTool.keyDownCallbacks.splice(index, 1);\r\n        this.stopTimer();\r\n    }\r\n\r\n\r\n    invokeMethod(method: Method, runtimeObject: RuntimeObject, parameters: Value[] = [], callback?: () => void) {\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        parameters = parameters.slice(0);\r\n        parameters.unshift({ type: runtimeObject.class, value: runtimeObject });\r\n\r\n        if (program != null) {\r\n            this.module.main.getInterpreter().runTimer(method, parameters, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke(parameters);\r\n        }\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        this.timerRunning = false;\r\n    }\r\n\r\n    startTimer() {\r\n\r\n        if (!this.timerRunning) {\r\n            this.timerRunning = true;\r\n            this.processTimerEntries();\r\n        }\r\n\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if (!this.timerRunning) return;\r\n\r\n        let dt = 10;\r\n\r\n        this.remainingTime += dt;\r\n        if (this.remainingTime > this.taktdauer) {\r\n            this.remainingTime -= this.taktdauer;\r\n\r\n            let liste = this.aktionsempfaengerMap[\"ausführen\"];\r\n            for (let ae of liste) {\r\n\r\n                this.invokeMethod(ae.method, ae.runtimeObject, []);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, dt);\r\n\r\n    }\r\n\r\n    handleMouseClickedEvent(x: number, y: number) {\r\n        let parameters: Value[] = [\r\n            { type: intPrimitiveType, value: Math.round(x) },\r\n            { type: intPrimitiveType, value: Math.round(y) },\r\n            { type: intPrimitiveType, value: 1 }\r\n        ]\r\n\r\n        let liste = this.aktionsempfaengerMap[\"geklickt\"];\r\n        for (let ae of liste) {\r\n            this.invokeMethod(ae.method, ae.runtimeObject, parameters);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper } from \"../graphics/World.js\";\r\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\r\n\r\nexport class GNGZeichenfensterClass extends Klass {\r\n\r\n    constructor(public module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Zeichenfenster\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\r\n\r\n        let aktionsempfaengerType = <GNGZeichenfensterClass>module.typeStore.getType(\"Aktionsempfaenger\");\r\n\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n\r\n        this.addMethod(new Method(\"MalflächenBreiteGeben\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return Math.round(this.getWorldHelper().width);\r\n\r\n            }, false, true, 'Gibt die Breite des Zeichenbereichs in Pixeln zurück.', false));\r\n\r\n        this.addMethod(new Method(\"MalflächenHöheGeben\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return Math.round(this.getWorldHelper().width);\r\n\r\n            }, false, true, 'Gibt die Höhe des Zeichenbereichs in Pixeln zurück.', false));\r\n\r\n        this.addMethod(new Method(\"AktionsEmpfängerEintragen\", new Parameterlist([\r\n            { identifier: \"neu\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.registerEvents(aktionsempfaenger);\r\n\r\n            }, false, true, 'Trägt einen neuen Aktionsempfänger ein.', false));\r\n\r\n        this.addMethod(new Method(\"AktionsEmpfängerEntfernen\", new Parameterlist([\r\n            { identifier: \"alt\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.unregisterEvents(aktionsempfaenger);\r\n\r\n            }, false, true, 'Löscht einen Aktionsempfänger aus der Liste.', false));\r\n\r\n        this.addMethod(new Method(\"TaktgeberStarten\", new Parameterlist([]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.startTimer();\r\n\r\n            }, false, true, 'Startet den Taktgeber', false));\r\n\r\n        this.addMethod(new Method(\"TaktgeberStoppen\", new Parameterlist([]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.stopTimer();\r\n\r\n            }, false, true, 'Stoppt den Taktgeber', false));\r\n\r\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\r\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let dauer: number = parameters[1].value;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.taktdauer = dauer;\r\n\r\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n        if (wh != null) {\r\n\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.localTransform.scale(wh.width / breite, wh.height / höhe);\r\n                wh.width = breite;\r\n                wh.height = höhe;\r\n                // this.stage.localTransform.rotate(45/180*Math.PI);\r\n                // this.stage.localTransform.translate(400,300);\r\n                //@ts-ignore\r\n                wh.stage.transform.onChange();\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n            let worldObject: RuntimeObject = new RuntimeObject(<Klass>this.module.typeStore.getType(\"World\"));\r\n            let wh = new WorldHelper(breite, höhe, this.module, worldObject);\r\n            worldObject.intrinsicData[\"World\"] = wh;\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\n\r\nexport class GNGRechteckClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Rechteck\", module, \"Rechteck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(Math.abs(sh.width * sh.displayObject.scale.x)); \r\n        }, false, Visibility.private, false, \"Breite des Rechtecks\"));\r\n\r\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(Math.abs(sh.height * sh.displayObject.scale.x)); \r\n        }, false, Visibility.private, false, \"Höhe des Rechtecks\"));\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.addMethod(new Method(\"Rechteck\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new RectangleHelper(10, 10, 100, 100, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                o.intrinsicData[\"Farbe\"] = \"rot\";\r\n                rh.setFillColor(0xff0000);\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\r\n\r\n                sh.height = höhe / sh.displayObject.scale.y;\r\n                sh.width = breite / sh.displayObject.scale.x;\r\n\r\n                sh.centerXInitial = sh.left + sh.width/2;\r\n                sh.centerYInitial = sh.top + sh.height/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite und Höhe des Rechtecks.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","export var GNGFarben: {[identifier: string]: number} = {\r\n    \"weiß\": 0xffffff,\r\n    \"weiss\": 0xffffff,\r\n    \"rot\": 0xff0000,\r\n    \"grün\": 0x00ff00,\r\n    \"gruen\": 0x00ff00,\r\n    \"blau\": 0x0000ff,\r\n    \"gelb\": 0xffff00,\r\n    \"magenta\": 0xff00ff,\r\n    \"cyan\": 0x00ffff,\r\n    \"hellgelb\": 0xffff80,\r\n    \"hellgrün\": 0x80ff80,\r\n    \"hellgruen\": 0x80ff80,\r\n    \"orange\": 0xff8000,\r\n    \"braun\": 0x804000,\r\n    \"grau\": 0x808080,\r\n    \"schwarz\": 0x000000\r\n} ","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\r\nimport { GNGFarben } from \"./GNGFarben.js\";\r\n\r\nexport class GNGBaseFigurClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"GNGBaseFigur\", module, \"Oberklasse der graphischen Elemente in der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.addAttribute(new Attribute(\"farbe\", stringPrimitiveType, (value: Value) => { \r\n            let farbe = value.object.intrinsicData[\"Farbe\"];\r\n            value.value = farbe == null ? \"schwarz\" : farbe;\r\n        }, false, Visibility.protected, false, \"Farbe des Grafikobjekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.getCenterX()); \r\n        }, false, Visibility.protected, false, \"x-Position des Grafikobjekts\"));\r\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.getCenterY()); \r\n        }, false, Visibility.protected, false, \"y-Position des Grafikobjekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].angle \r\n        }, false, Visibility.protected, false, \"Blickrichtung des Grafikobjekts in Grad\"));\r\n\r\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \r\n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \r\n        }, false, Visibility.protected, false, \"Größe des Grafikobjekts (100 entspricht 'normalgroß')\"));\r\n\r\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \r\n        }, false, Visibility.protected, false, \"true, wenn das Grafikobjekt sichtbar ist\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\r\n\r\n                let p: PIXI.Point = new PIXI.Point(10, 10);\r\n                sh.displayObject.updateTransform();\r\n                sh.displayObject.transform.worldTransform.apply(p, p);\r\n        \r\n                sh.move(x - p.x, y - p.y);\r\n\r\n            }, false, false, \"Verschiebt das Rechteck so, dass seine linke obere Ecke bei (x,y) zu liegen kommt.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"Verschieben\", new Parameterlist([\r\n            { identifier: \"deltaX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"deltaY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"Verschieben\")) return;\r\n\r\n                sh.move(x, y);\r\n\r\n            }, false, false, \"Verschiebt die Figur um (x, y)\", false));\r\n\r\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\r\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let grad: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Drehen\")) return;\r\n\r\n                sh.rotate(grad);\r\n\r\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Drehpunkt ist der Diagonalenschnittpunkt der kleinsten achsenparallelen Bounding Box um die Figur.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let farbe: string = parameters[1].value;\r\n\r\n                o.intrinsicData[\"Farbe\"] = farbe;\r\n\r\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\r\n                if (color == null) color = 0x000000; // default: schwarz\r\n\r\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\r\n\r\n                sh.setFillColor(color);\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Farbe der Figur.\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\r\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let winkel: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\r\n\r\n                sh.rotate(winkel - sh.angle);\r\n\r\n            }, false, false, \"Setzt den Drehwinkel der Figur. Der Winkel wird in Grad angegebenen, positive Werte bedeuten eine Drehung gegen den Uhrzeigersinn.\", false));\r\n\r\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\r\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sichtbarkeit: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\r\n\r\n                sh.setVisible(sichtbarkeit);\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Entfernen\")) return;\r\n\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\r\n\r\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class GNGAktionsempfaengerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Aktionsempfaenger\", module, \"GNG: Interface für die Aktionsausführung\");\r\n\r\n        this.addMethod(new Method(\"Ausführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"Taste\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTaste\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"Geklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\n\r\nexport class GNGDreieckClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Dreieck\", module, \"Dreieck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \r\n            let breite = value.object.intrinsicData[\"Breite\"];\r\n            value.value = Math.round(breite); \r\n        }, false, Visibility.private, false, \"Breite des Dreiecks\"));\r\n\r\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \r\n            let höhe = value.object.intrinsicData[\"Höhe\"];\r\n            value.value = Math.round(höhe); \r\n        }, false, Visibility.private, false, \"Höhe des Dreiecks\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Dreieck\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n\r\n                let rh = new PolygonHelper([60, 10, 110,110, 10, 110],true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                o.intrinsicData[\"Breite\"] = 100;\r\n                o.intrinsicData[\"Höhe\"] = 100;\r\n\r\n                o.intrinsicData[\"Farbe\"] = \"rot\";\r\n                rh.setFillColor(0xff0000);\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck-Objekt.', true));\r\n\r\n            this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n                { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n                    let breite: number = parameters[1].value;\r\n                    let höhe: number = parameters[2].value;\r\n\r\n                    o.intrinsicData[\"Breite\"] = breite;\r\n                    o.intrinsicData[\"Höhe\"] = höhe;    \r\n\r\n                    breite /= sh.scaleFactor;\r\n                    höhe /= sh.scaleFactor;\r\n\r\n                    if (sh.testdestroyed(\"GrößeSetzen\")) return;\r\n    \r\n                    sh.setAllPointsUntransformed([60, 60 - höhe/2, 60 - breite/2, 60 + höhe/2, 60 + breite/2, 60 + höhe/2 ]);\r\n    \r\n                }, false, false, \"Setzt die Breite und Höhe des Dreiecks.\", false));\r\n    \r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\n\r\nexport class GNGKreisClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Kreis\", module, \"Kreis-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"radius\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.r * sh.displayObject.scale.x); \r\n        }, false, Visibility.private, false, \"Radius des Kreises\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Kreis\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new CircleHelper(60, 60, 50, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                o.intrinsicData[\"Farbe\"] = \"rot\";\r\n                rh.setFillColor(0xff0000);\r\n\r\n            }, false, false, 'Instanziert ein neues Kreis-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"RadiusSetzen\", new Parameterlist([\r\n            { identifier: \"radius\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n                let radius: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"radiusSetzen\")) return;\r\n\r\n                sh.setRadius(radius);\r\n\r\n            }, false, false, \"Setzt den Radius des Kreis-Objekts.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\nimport { TurtleHelper } from \"../graphics/Turtle.js\";\r\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\r\nimport { ShapeHelper } from \"../graphics/Shape.js\";\r\nimport { GNGFarben } from \"./GNGFarben.js\";\r\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\r\n\r\nexport class GNGTurtleClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        let objectType = moduleStore.getType(\"Object\").type;\r\n\r\n        super(\"GTurtle\", module, \"Turtle-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].x); \r\n        }, false, Visibility.private, false, \"x-Position der Figur\"));\r\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].y); \r\n        }, false, Visibility.private, false, \"x-Position der Figur\"));\r\n\r\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].angle \r\n        }, false, Visibility.private, false, \"Blickrichtung der Figur in Grad\"));\r\n\r\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \r\n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \r\n        }, false, Visibility.private, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\r\n\r\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \r\n        }, false, Visibility.private, false, \"true, wenn die Figur sichtbar ist\"));\r\n\r\n        this.addAttribute(new Attribute(\"stiftUnten\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].penIsDown; \r\n        }, false, Visibility.private, false, \"true, wenn die Turtle beim Gehen zeichnet\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"GTurtle\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new TurtleHelper(100, 200, true, module.main.getInterpreter(), o);\r\n                rh.setShowTurtle(true);\r\n                rh.setBorderColor(0);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.registerEvents(o);\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"größeSetzen\", new Parameterlist([\r\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let größe: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"größeSetzen\")) return;\r\n\r\n                sh.turtleSize = größe;\r\n                sh.turn(0);\r\n\r\n            }, false, false, \"Setzt die Größe des Turtle-Dreiecks.\", false));\r\n\r\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let farbe: string = parameters[1].value;\r\n\r\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\r\n                if (color == null) color = 0x000000; // default: schwarz\r\n\r\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Zeichenfarbe der Turtle.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\r\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let grad: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Drehen\")) return;\r\n\r\n                sh.turn(grad);\r\n\r\n            }, false, false, \"Dreht die Turtle um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\r\n\r\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\r\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let länge: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Gehen\")) return;\r\n\r\n                sh.forward(länge);\r\n\r\n            }, false, false, \"Bewirkt, dass die Turtle um die angegebene Länge nach vorwärts geht.\", false));\r\n\r\n        this.addMethod(new Method(\"StiftHeben\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"StiftHeben\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.\", false));\r\n\r\n        this.addMethod(new Method(\"StiftSenken\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"StiftSenken\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.\", false));\r\n\r\n        this.addMethod(new Method(\"Löschen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Löschen\")) return;\r\n\r\n                sh.clear();\r\n\r\n            }, false, false, \"Löscht alles von der Turtle gezeichnete und versetzt die Turtle in den Ausgangszustand.\", false));\r\n\r\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\r\n\r\n                sh.moveTo(x, y);\r\n\r\n            }, false, false, \"Verschiebt die Turtle an die Position (x, y) ohne eine neue Linie zu zeichnen.\", false));\r\n\r\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\r\n\r\n                sh.moveTo(100, 200);\r\n\r\n            }, false, false, \"Verschiebt die Turtle an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\r\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let winkel: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\r\n\r\n                sh.turn(winkel - sh.angle);\r\n\r\n            }, false, false, \"Setzt den Blickwinkel der Turtle. 0° => nach rechts, 90°: => nach oben, usw..\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\r\n\r\n                return Math.round(sh.angle);\r\n\r\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\r\n\r\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].x);\r\n\r\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\r\n\r\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].y);\r\n\r\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\r\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sichtbarkeit: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\r\n\r\n                sh.setVisible(sichtbarkeit);\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Entfernen\")) return;\r\n\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\r\n\r\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                return sh.touchesAtLeastOneFigure();\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur befindet.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbeString: string = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                return sh.touchesColor(farbe);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur mit der angegebenen Farbe befindet.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\r\n\r\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                return sh.touchesShape(objectShapeHelper);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die übergebene Figur die aktuelle Turtleposition enthält.', false));\r\n\r\n\r\n\r\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"MausGecklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { TextHelper } from \"../graphics/Text.js\";\r\n\r\nexport class GNGTextClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"GText\", module, \"Text-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"text\", stringPrimitiveType, (value: Value) => { \r\n            let text = value.object.intrinsicData[\"Actor\"].text;\r\n            value.value = text; \r\n        }, false, Visibility.private, false, \"Angezeigter Text\"));\r\n\r\n        this.addAttribute(new Attribute(\"textgröße\", intPrimitiveType, (value: Value) => { \r\n            let fontsize = value.object.intrinsicData[\"Actor\"].fontsize;\r\n            value.value = Math.round(fontsize); \r\n        }, false, Visibility.private, false, \"Textgröße\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new TextHelper(10, 10, 12, \"Text\", module.main.getInterpreter(), o);\r\n\r\n                rh.setFillColor(0);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Text-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"TextSetzen\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n                let text: string = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"TextSetzen\")) return;\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, \"Ändert den Text des Text-Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"TextGrößeSetzen\", new Parameterlist([\r\n            { identifier: \"textGröße\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n                let größe: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"TextGrößeSetzen\")) return;\r\n\r\n                sh.setFontsize(größe);\r\n\r\n            }, false, false, \"Setzt die Schriftgröße des Text-Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"TextVergrößern\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"TextVergrößern\")) return;\r\n\r\n                let size = sh.fontsize;\r\n                if (size <= 10) {\r\n                    size += 1;\r\n                }\r\n                else if (size <= 40) {\r\n                    size += 2;\r\n                }\r\n                else {\r\n                    size += 4;\r\n                }\r\n\r\n                sh.setFontsize(size);\r\n\r\n            }, false, false, \"Vergrößert die Schriftgröße des Text-Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"TextVerkleinern\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"TextVerkleinern\")) return;\r\n\r\n                let size = sh.fontsize;\r\n                if (size <= 10) {\r\n                    size -= 1;\r\n                }\r\n                else if (size <= 40) {\r\n                    size -= 2;\r\n                }\r\n                else {\r\n                    size -= 4;\r\n                }\r\n                if (size < 1) {\r\n                    size = 1;\r\n                }\r\n\r\n\r\n                sh.setFontsize(size);\r\n\r\n            }, false, false, \"Verkleinert die Schriftgröße des Text-Objekts.\", false));\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore, TypeStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\r\nimport { ShapeHelper } from \"../graphics/Shape.js\";\r\nimport { GroupHelper } from \"../graphics/Group.js\";\r\nimport { GNGFarben } from \"./GNGFarben.js\";\r\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { EllipseHelper } from \"../graphics/Ellipse.js\";\r\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\r\n\r\ntype GNGPoint = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport class GNGFigurClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        let objectType = moduleStore.getType(\"Object\").type;\r\n\r\n        super(\"Figur\", module, \"Figur-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        let polygonClass: Klass = <Klass>moduleStore.getType(\"Polygon\").type;\r\n        let circleClass: Klass = <Klass>moduleStore.getType(\"Circle\").type;\r\n        let ellipseClass: Klass = <Klass>moduleStore.getType(\"Ellipse\").type;\r\n        let rectangleClass: Klass = <Klass>moduleStore.getType(\"Rectangle\").type;\r\n\r\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].x) }, false, Visibility.private, false, \"x-Position der Figur\"));\r\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].y) }, false, Visibility.private, false, \"y-Position der Figur\"));\r\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].angle \r\n        }, false, Visibility.private, false, \"Blickrichtung der Figur in Grad\"));\r\n\r\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \r\n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \r\n        }, false, Visibility.private, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\r\n\r\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \r\n        }, false, Visibility.private, false, \"true, wenn die Figur sichtbar ist\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Figur\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                let rh = new FigurHelper(interpreter, o, helper);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                let center: GNGPoint = {\r\n                    x: 100,\r\n                    y: 200\r\n                };\r\n\r\n                o.intrinsicData[\"Center\"] = center;\r\n\r\n                this.drawInitialTriangle(rh, polygonClass, circleClass, interpreter, center);\r\n                o.intrinsicData[\"isInitialTriangle\"] = true;\r\n\r\n                rh.scale(0.4, center.x, center.y);\r\n                rh.displayObject.updateTransform();\r\n\r\n                helper.registerEvents(o);\r\n\r\n\r\n            }, false, false, 'Instanziert ein neues Figur-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let groesse: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n                let newFactor = groesse / 100;\r\n                sh.scale(newFactor / sh.scaleFactor, center.x, center.y);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Setzt die Größe der Figur.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\r\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let grad: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Drehen\")) return;\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                sh.rotate(grad, center.x, center.y);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\r\n\r\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\r\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let länge: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Gehen\")) return;\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                let angleRad = sh.angle / 180 * Math.PI;\r\n                let dx = länge * Math.cos(angleRad);\r\n                let dy = länge * Math.sin(-angleRad);\r\n                center.x += dx;\r\n                center.y += dy;                \r\n\r\n                sh.move(dx, dy);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Bewirkt, dass die Figur um die angegebene Länge 'nach vorne' geht.\", false));\r\n\r\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                sh.move(x - center.x, y - center.y);\r\n                sh.displayObject.updateTransform();\r\n                center.x = x;\r\n                center.y = y;\r\n\r\n            }, false, false, \"Verschiebt die Figur an die Position (x, y).\", false));\r\n\r\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                sh.move(100 - center.x, 200 - center.y);\r\n                sh.displayObject.updateTransform();\r\n                center.x = 100;\r\n                center.y = 200;\r\n\r\n            }, false, false, \"Verschiebt die Figur an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\r\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let winkel: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\r\n\r\n                sh.rotate(winkel - sh.angle);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Setzt den Blickwinkel der Figur. 0° => nach rechts (initial), 90°: => nach oben, usw..\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\r\n\r\n                if(sh.angle < 0) sh.angle += 360*Math.ceil(sh.angle/(-360));\r\n                if(sh.angle >= 360) sh.angle -= 360*Math.floor(sh.angle/360);\r\n                return Math.round(sh.angle);\r\n\r\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n                return center.x;\r\n\r\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n                return center.y;\r\n\r\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\r\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sichtbarkeit: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\r\n\r\n                sh.setVisible(sichtbarkeit);\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FigurHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Entfernen\")) return;\r\n\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\r\n\r\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\r\n\r\n        this.addMethod(new Method(\"EigeneFigurLöschen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"EigeneFigurLöschen\")) return;\r\n\r\n                sh.destroyChildren();\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                this.drawInitialTriangle(sh, polygonClass, circleClass, this.module.main.getInterpreter(), center);\r\n                o.intrinsicData[\"isInitialTriangle\"] = true;\r\n\r\n\r\n            }, false, false, 'Löscht die hinzugefügten Figuren', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                for (let shape of sh.worldHelper.shapes) {\r\n                    if (shape != sh &&  sh.collidesWith(shape)) return true;\r\n                }\r\n\r\n                return false;\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt kollidiert.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbeString: string = parameters[1].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                for (let shape of sh.worldHelper.shapes) {\r\n                    if (shape != sh) {\r\n                        if(shape instanceof FigurHelper){\r\n                            for(let part of shape.shapes){\r\n                                let partHelper = part.intrinsicData[\"Actor\"];\r\n                                if (partHelper instanceof FilledShapeHelper && farbe == partHelper.fillColor){\r\n                                    if(sh.collidesWith(partHelper)){\r\n                                        return true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n\r\n                            if(shape instanceof FilledShapeHelper && farbe == shape.fillColor){\r\n                                if (sh.collidesWith(shape)) return true;\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                return false;\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt der angegebenen Farbe kollidiert.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\r\n\r\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                return sh.collidesWith(objectShapeHelper);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit dem übergebenen graphischen Objekt kollidiert.', false));\r\n\r\n        this.addMethod(new Method(\"FigurteilFestlegenDreieck\", new Parameterlist([\r\n            { identifier: \"x1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n                let x3: number = parameters[5].value;\r\n                let y3: number = parameters[6].value;\r\n                let farbeString: string = parameters[7].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"FigurteilFestlegenDreieck\")) return;\r\n\r\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\r\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\r\n                    sh.destroyChildren();\r\n                }\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                let rto = new RuntimeObject(polygonClass);\r\n                let triangle = new PolygonHelper([x1, y1, x2, y2, x3, y3], true, this.module.main.getInterpreter(), rto);\r\n                rto.intrinsicData[\"Actor\"] = triangle;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                triangle.rotate(sh.angle, 0, 0);\r\n                triangle.scale(sh.scaleFactor, 0, 0);\r\n                triangle.move(center.x, center.y);\r\n                triangle.setFillColor(farbe);\r\n                triangle.setBorderColor(\"black\");\r\n                triangle.setBorderWidth(2);\r\n                sh.add(rto);\r\n\r\n            }, false, false, 'Erzeugt ein neues, dreieckiges Element einer eigenen Darstellung der Figur.', false));\r\n\r\n        this.addMethod(new Method(\"FigurteilFestlegenRechteck\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let breite: number = parameters[3].value;\r\n                let höhe: number = parameters[4].value;\r\n                let farbeString: string = parameters[5].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"FigurteilFestlegenRechteck\")) return;\r\n\r\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\r\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\r\n                    sh.destroyChildren();\r\n                }\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                let rto = new RuntimeObject(rectangleClass);\r\n                let rectangleHelper = new RectangleHelper(x + 0.05, y + 0.05, breite - 0.1, höhe - 0.1, this.module.main.getInterpreter(), rto);\r\n                rto.intrinsicData[\"Actor\"] = rectangleHelper;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                rectangleHelper.rotate(sh.angle, 0, 0);\r\n                rectangleHelper.scale(sh.scaleFactor, 0, 0);\r\n                rectangleHelper.move(center.x, center.y);\r\n                rectangleHelper.setFillColor(farbe);\r\n                rectangleHelper.setBorderColor(\"black\");\r\n                rectangleHelper.setBorderWidth(2);\r\n                sh.add(rto);\r\n\r\n            }, false, false, 'Erzeugt ein neues, rechteckiges Element einer eigenen Darstellung der Figur.', false));\r\n\r\n        this.addMethod(new Method(\"FigurteilFestlegenEllipse\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let breite: number = parameters[3].value;\r\n                let höhe: number = parameters[4].value;\r\n                let farbeString: string = parameters[5].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"FigurteilFestlegenEllipse\")) return;\r\n                \r\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\r\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\r\n                    sh.destroyChildren();\r\n                }\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                höhe = höhe - 0.1;      // hack to ensure collision-handling identical to gng (also 0.05 two lines below)\r\n                breite = breite - 0.1;\r\n\r\n                let rto = new RuntimeObject(ellipseClass);\r\n                let ellipseHelper = new EllipseHelper(x + breite / 2 + 0.05, y + höhe / 2 + 0.05, breite / 2, höhe / 2, this.module.main.getInterpreter(), rto);\r\n                rto.intrinsicData[\"Actor\"] = ellipseHelper;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                ellipseHelper.rotate(sh.angle, 0, 0);\r\n                ellipseHelper.scale(sh.scaleFactor, 0, 0);\r\n                ellipseHelper.move(center.x, center.y);\r\n                ellipseHelper.setFillColor(farbe);\r\n                ellipseHelper.setBorderColor(\"black\");\r\n                ellipseHelper.setBorderWidth(2);\r\n                sh.add(rto);\r\n\r\n            }, false, false, 'Erzeugt ein neues, elliptisches Element einer eigenen Darstellung der Figur.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"MausGecklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    drawInitialTriangle(gh: GroupHelper, triangleClass: Klass, circleClass: Klass, interpreter: Interpreter, center: GNGPoint) {\r\n        let t: RuntimeObject = new RuntimeObject(triangleClass);\r\n        let th: PolygonHelper = new PolygonHelper([-50, -50, 50, 0, -50, 50], true, interpreter, t);\r\n        t.intrinsicData[\"Actor\"] = th;\r\n        th.move(center.x, center.y);\r\n        th.setFillColor(\"yellow\");\r\n        th.setBorderColor(\"black\");\r\n        th.setBorderWidth(2);\r\n        gh.add(t);\r\n\r\n        let c: RuntimeObject = new RuntimeObject(circleClass);\r\n        let ch: CircleHelper = new CircleHelper(0, 0, 10, interpreter, c);\r\n        c.intrinsicData[\"Actor\"] = ch;\r\n        ch.move(center.x, center.y);\r\n        ch.setFillColor(\"blue\");\r\n        ch.setBorderColor(\"black\");\r\n        ch.setBorderWidth(2);\r\n        gh.add(c);\r\n\r\n    }\r\n}\r\n\r\n\r\nclass FigurHelper extends GroupHelper {\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject, private gngEreignisbehandlungsHelper: GNGEreignisbehandlungHelper) {\r\n        super(interpreter, runtimeObject);\r\n    }\r\n\r\n    destroy(){\r\n        this.gngEreignisbehandlungsHelper.unregisterEvents(this.runtimeObject);\r\n        super.destroy();\r\n    }\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class RandomClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Random\", module, \"Zufallszahlengenerator\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.addMethod(new Method(\"nextInt\", new Parameterlist([\r\n            { identifier: \"bound\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let bound: number = parameters[1].value;\r\n\r\n                return Math.floor(Math.random()*bound);\r\n\r\n            }, false, false, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {0, 1, ..., bound - 1} zurück.', false));\r\n\r\n        this.addMethod(new Method(\"randint\", new Parameterlist([\r\n            { identifier: \"from\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"to\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let from: number = parameters[1].value;\r\n                let to: number = parameters[2].value;\r\n\r\n                return Math.floor(Math.random()*(to - from + 1) + from);\r\n\r\n            }, false, true, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {from, from + 1, ..., to} zurück.', false));\r\n\r\n        this.addMethod(new Method(\"randdouble\", new Parameterlist([\r\n            { identifier: \"from\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"to\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let from: number = parameters[1].value;\r\n                let to: number = parameters[2].value;\r\n\r\n                return Math.random()*(to - from) + from;\r\n\r\n            }, false, true, 'Gibt eine Zufallszahl aus dem Intervall [from, to[ zurück.', false));\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class DirectionClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Direction\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Richtung (oben, rechts, unten, links)\"\r\n    }\r\n\r\n}","type Patch = {\r\n    old: RegExp, \r\n    new: string\r\n}\r\n\r\nexport class Patcher {\r\n\r\n    static patches: Patch[] = [\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 0\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 1\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 2\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 3\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 4\"},\r\n\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 5\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 6\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 7\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 8\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 9\"},\r\n\r\n        {old: /SpriteLibrary.Asteroid_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 10\"},\r\n        {old: /SpriteLibrary.Gegner_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 11\"},\r\n\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 12\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 13\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 14\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 15\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 16\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*5/g, new: \"SpriteLibrary.Space_Shooter_1, 17\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*6/g, new: \"SpriteLibrary.Space_Shooter_1, 18\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*7/g, new: \"SpriteLibrary.Space_Shooter_1, 19\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*8/g, new: \"SpriteLibrary.Space_Shooter_1, 20\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*9/g, new: \"SpriteLibrary.Space_Shooter_1, 21\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*10/g, new: \"SpriteLibrary.Space_Shooter_1, 22\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*11/g, new: \"SpriteLibrary.Space_Shooter_1, 23\"},\r\n    ] \r\n\r\n    static patch(text: string): {patchedText: string, modified: boolean} {\r\n\r\n        let modified: boolean = false;\r\n\r\n        for(let patch of Patcher.patches){\r\n            if(text.match(patch.old) != null){\r\n                text = text.replace(patch.old, patch.new);\r\n                modified = true;\r\n            }\r\n        }\r\n\r\n        return {patchedText: text, modified: modified}\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { FileData } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { ArrayListClass } from \"../../runtimelibrary/collections/ArrayList.js\";\r\nimport { CollectionClass } from \"../../runtimelibrary/collections/Collection.js\";\r\nimport { IterableClass } from \"../../runtimelibrary/collections/Iterable.js\";\r\nimport { IteratorClass } from \"../../runtimelibrary/collections/Iterator.js\";\r\nimport { ListClass } from \"../../runtimelibrary/collections/List.js\";\r\nimport { ListIteratorImplClass } from \"../../runtimelibrary/collections/ListIteratorImpl.js\";\r\nimport { StackClass } from \"../../runtimelibrary/collections/Stack.js\";\r\nimport { VectorClass } from \"../../runtimelibrary/collections/Vector.js\";\r\nimport { SetClass } from \"../../runtimelibrary/collections/Set.js\";\r\nimport { SetIteratorImplClass } from \"../../runtimelibrary/collections/SetIteratorImpl.js\";\r\nimport { HashSetClass } from \"../../runtimelibrary/collections/HashSet.js\";\r\nimport { LinkedHashSetClass } from \"../../runtimelibrary/collections/LinkedHashSet.js\";\r\nimport { QueueClass } from \"../../runtimelibrary/collections/Queue.js\";\r\nimport { DequeClass } from \"../../runtimelibrary/collections/Deque.js\";\r\nimport { LinkedListClass } from \"../../runtimelibrary/collections/LinkedList.js\";\r\nimport { ConsoleClass } from \"../../runtimelibrary/Console.js\";\r\nimport { Actor as ActorClass } from \"../../runtimelibrary/graphics/Actor.js\";\r\nimport { AlignmentClass } from \"../../runtimelibrary/graphics/Alignment.js\";\r\nimport { BitmapClass } from \"../../runtimelibrary/graphics/Bitmap.js\";\r\nimport { CircleClass as CircleClass } from \"../../runtimelibrary/graphics/Circle.js\";\r\nimport { SectorClass } from \"../../runtimelibrary/graphics/Sector.js\";\r\nimport { ArcClass } from \"../../runtimelibrary/graphics/Arc.js\";\r\nimport { ColorClass } from \"../../runtimelibrary/graphics/Color.js\";\r\nimport { EllipseClass } from \"../../runtimelibrary/graphics/Ellipse.js\";\r\nimport { FilledShapeClass } from \"../../runtimelibrary/graphics/FilledShape.js\";\r\nimport { CollisionPairClass, GroupClass } from \"../../runtimelibrary/graphics/Group.js\";\r\nimport { KeyClass } from \"../../runtimelibrary/graphics/Key.js\";\r\nimport { PolygonClass } from \"../../runtimelibrary/graphics/Polygon.js\";\r\nimport { RectangleClass } from \"../../runtimelibrary/graphics/Rectangle.js\";\r\nimport { RepeatTypeClass } from \"../../runtimelibrary/graphics/RepeatType.js\";\r\nimport { RoundedRectangleClass } from \"../../runtimelibrary/graphics/RoundedRectangle.js\";\r\nimport { ScaleModeClass } from \"../../runtimelibrary/graphics/ScaleMode.js\";\r\nimport { ShapeClass } from \"../../runtimelibrary/graphics/Shape.js\";\r\nimport { SoundKlass as SoundClass } from \"../../runtimelibrary/graphics/Sound.js\";\r\nimport { SpriteClass, TileClass } from \"../../runtimelibrary/graphics/Sprite.js\";\r\nimport { SpriteLibraryClass } from \"../../runtimelibrary/graphics/SpriteLibraryEnum.js\";\r\nimport { TextClass } from \"../../runtimelibrary/graphics/Text.js\";\r\nimport { WorldClass } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\nimport { GamepadClass } from \"../../runtimelibrary/Gamepad.js\";\r\nimport { MathClass } from \"../../runtimelibrary/Math.js\";\r\nimport { MathToolsClass } from \"../../runtimelibrary/MathToolsClass.js\";\r\nimport { PrintStreamClass, SystemClass } from \"../../runtimelibrary/System.js\";\r\nimport { KeyListener, SystemToolsClass } from \"../../runtimelibrary/SystemTools.js\";\r\nimport { Runnable, TimerClass } from \"../../runtimelibrary/Timer.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { Interface, Klass, Visibility } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, BooleanType, CharacterType, charPrimitiveType, doublePrimitiveType, DoubleType, floatPrimitiveType, FloatType, IntegerType, intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType, varType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, PrimitiveType, Type, Variable } from \"../types/Types.js\";\r\nimport { ASTNode, MethodDeclarationNode, TypeNode } from \"./AST.js\";\r\nimport { Breakpoint, Program, Statement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { MapClass } from \"../../runtimelibrary/collections/Map.js\";\r\nimport { HashMapClass } from \"../../runtimelibrary/collections/HashMap.js\";\r\nimport { TriangleClass } from \"../../runtimelibrary/graphics/Triangle.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { LocalDateTimeClass, DayOfWeekEnum, MonthEnum } from \"../../runtimelibrary/graphics/LocalDateTime.js\";\r\nimport { LineClass } from \"../../runtimelibrary/graphics/Line.js\";\r\nimport { Vector2Class } from \"../../runtimelibrary/Vector2.js\";\r\nimport { MouseAdapterClass, MouseListenerInterface } from \"../../runtimelibrary/graphics/MouseListener.js\";\r\nimport { WebSocketClass } from \"../../runtimelibrary/network/WebSocket.js\";\r\nimport { WebSocketClientClass } from \"../../runtimelibrary/network/WebSocketClient.js\";\r\nimport { ProcessingClass } from \"../../runtimelibrary/graphics/Processing.js\";\r\nimport { TurtleClass } from \"../../runtimelibrary/graphics/Turtle.js\";\r\nimport { GNGZeichenfensterClass } from \"../../runtimelibrary/gng/GNGZeichenfenster.js\";\r\nimport { GNGRechteckClass } from \"../../runtimelibrary/gng/GNGRechteck.js\";\r\nimport { GNGBaseFigurClass } from \"../../runtimelibrary/gng/GNGBaseFigur.js\";\r\nimport { GNGAktionsempfaengerInterface } from \"../../runtimelibrary/gng/GNGAktionsempfaenger.js\";\r\nimport { GNGDreieckClass } from \"../../runtimelibrary/gng/GNGDreieck.js\";\r\nimport { GNGKreisClass } from \"../../runtimelibrary/gng/GNGKreis.js\";\r\nimport { GNGTurtleClass } from \"../../runtimelibrary/gng/GNGTurtle.js\";\r\nimport { GNGTextClass } from \"../../runtimelibrary/gng/GNGText.js\";\r\nimport { GNGEreignisbehandlung } from \"../../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GNGFigurClass } from \"../../runtimelibrary/gng/GNGFigur.js\";\r\nimport { RandomClass } from \"../../runtimelibrary/Random.js\";\r\nimport { DirectionClass } from \"../../runtimelibrary/graphics/Direction.js\";\r\nimport { Patcher } from \"./Patcher.js\";\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: Type | Method | Attribute | Variable;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: Method[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    isSystemModule: boolean = false;\r\n\r\n    breakpoints: Breakpoint[] = [];\r\n    breakpointDecorators: string[] = [];\r\n    decoratorIdToBreakpointMap: { [id: string]: Breakpoint } = {};\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    mainProgramAst: ASTNode[];\r\n    classDefinitionsAST: ASTNode[];\r\n    typeNodes: TypeNode[];\r\n\r\n    // 3rd pass: TypeResolver fill in resolvedType in typeNodes and populate typeStore\r\n    typeStore: TypeStore;\r\n\r\n    // 4th pass: generate code and symbol tables\r\n\r\n    /*\r\n    The mainProgramAST holds statements to:\r\n    1. call static constructor of each used class\r\n    2. execute main Program\r\n    */\r\n\r\n    mainProgram?: Program;\r\n    mainProgramEnd: TextPosition;\r\n    mainSymbolTable: SymbolTable;\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    dependsOnModules: Map<Module, boolean>;\r\n    isStartable: boolean;\r\n    dependsOnModulesWithErrors: boolean;\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"myJava\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.file.identical_to_repository_version = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if(main1.workspacesOwnerId != main1.user.id){\r\n                    if(that.file.text_before_revision == null || that.file.student_edited_after_revision){\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    getMethodDeclarationAtPosition(position: { lineNumber: number; column: number; }): MethodDeclarationNode {\r\n\r\n        if(this.classDefinitionsAST == null) return null;\r\n        \r\n        for(let cd of this.classDefinitionsAST){\r\n            if(cd.type == TokenType.keywordClass || cd.type == TokenType.keywordEnum){\r\n                for(let methodAST of cd.methods){\r\n                    if(methodAST.position != null && methodAST.scopeTo != null){\r\n                        if(methodAST.position.line <= position.lineNumber && methodAST.scopeTo.line >= position.lineNumber){\r\n                            return methodAST;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    \r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let patched = Patcher.patch(f.text);\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: patched.patchedText,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: !patched.modified,\r\n            version: f.version,\r\n            id: f.id,\r\n            is_copy_of_id: f.is_copy_of_id,\r\n            repository_file_version: f.repository_file_version,\r\n            identical_to_repository_version: f.identical_to_repository_version\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            is_copy_of_id: file.is_copy_of_id,\r\n            repository_file_version: file.repository_file_version,\r\n            identical_to_repository_version: file.identical_to_repository_version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 0\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n    pushMethodCallPosition(identifierPosition: TextPosition, commaPositions: TextPosition[],\r\n        possibleMethods: Method[] | string, rightBracketPosition: TextPosition) {\r\n\r\n        let lines: number[] = [];\r\n        lines.push(identifierPosition.line);\r\n        for (let cp of commaPositions) {\r\n            if (lines.indexOf[cp.line] < 0) {\r\n                lines.push(cp.line);\r\n            }\r\n        }\r\n\r\n        let mcp: MethodCallPosition = {\r\n            identifierPosition: identifierPosition,\r\n            commaPositions: commaPositions,\r\n            possibleMethods: possibleMethods,\r\n            rightBracketPosition: rightBracketPosition\r\n        };\r\n\r\n        for (let line of lines) {\r\n            let mcpList = this.methodCallPositions[line];\r\n            if (mcpList == null) {\r\n                this.methodCallPositions[line] = [];\r\n                mcpList = this.methodCallPositions[line];\r\n            }\r\n            mcpList.push(mcp);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    toggleBreakpoint(lineNumber: number, rerender: boolean) {\r\n        this.getBreakpointPositionsFromEditor();\r\n        if (this.getBreakpoint(lineNumber, true) == null) {\r\n            this.setBreakpoint(lineNumber, 1);\r\n        }\r\n        if (rerender) {\r\n            this.renderBreakpointDecorators();\r\n        }\r\n    }\r\n\r\n    getBreakpoint(line: number, remove: boolean = false): Breakpoint {\r\n\r\n        for (let i = 0; i < this.breakpoints.length; i++) {\r\n            let b = this.breakpoints[i];\r\n            if (b.line == line) {\r\n                this.breakpoints.splice(i, 1);\r\n                if (b.statement != null) {\r\n                    b.statement.breakpoint = undefined;\r\n                }\r\n                return b;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    setBreakpoint(line: number, column: number): Breakpoint {\r\n\r\n        let breakpoint: Breakpoint = {\r\n            line: line,\r\n            column: column,\r\n            statement: null\r\n        }\r\n\r\n        this.attachToStatement(breakpoint);\r\n        this.breakpoints.push(breakpoint);\r\n\r\n        return breakpoint;\r\n\r\n    }\r\n\r\n    attachToStatement(breakpoint: Breakpoint, programList?: Program[]) {\r\n\r\n        if (breakpoint.statement != null) {\r\n            breakpoint.statement.breakpoint = undefined;\r\n        }\r\n\r\n        if (programList == null) programList = this.getPrograms();\r\n\r\n        let nearestStatement: Statement = null;\r\n        let nearestDistance: number = 100000;\r\n\r\n        for (let program of programList) {\r\n            for (let statement of program.statements) {\r\n\r\n                let line = statement?.position?.line;\r\n                if (line != null && line >= breakpoint.line) {\r\n                    if (line - breakpoint.line < nearestDistance) {\r\n                        nearestStatement = statement;\r\n                        nearestDistance = line - breakpoint.line;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        breakpoint.statement = nearestStatement;\r\n        if (nearestStatement != null) {\r\n            nearestStatement.breakpoint = breakpoint;\r\n            // let pp = new ProgramPrinter();\r\n            // console.log(\"Attached Breakpoint line \" + breakpoint.line + \", column \" + \r\n            //     breakpoint.column + \" to statement \" + pp.print([nearestStatement]));\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    getPrograms(): Program[] {\r\n        let programList: Program[] = [];\r\n\r\n        if (this.mainProgram != null) {\r\n            programList.push(this.mainProgram);\r\n        }\r\n\r\n        if (this.typeStore != null) {\r\n\r\n            for (let type of this.typeStore.typeList) {\r\n                if (type instanceof Klass) {\r\n                    if (type.attributeInitializationProgram != null) {\r\n                        programList.push(type.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                    if (type.staticClass.attributeInitializationProgram != null) {\r\n                        programList.push(type.staticClass.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.staticClass.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return programList;\r\n\r\n    }\r\n\r\n    renderBreakpointDecorators() {\r\n\r\n        this.getBreakpointPositionsFromEditor();\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        for (let breakpoint of this.breakpoints) {\r\n            decorations.push({\r\n                range: { startLineNumber: breakpoint.line, endLineNumber: breakpoint.line, startColumn: 1, endColumn: 1 },\r\n                options: {\r\n                    isWholeLine: true, className: \"jo_decorate_breakpoint\",\r\n                    overviewRuler: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.OverviewRulerLane.Left\r\n                    },\r\n                    minimap: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.MinimapPosition.Inline\r\n                    },\r\n                    marginClassName: \"jo_margin_breakpoint\",\r\n                    stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\r\n                },\r\n                //@ts-ignore\r\n                breakpoint: breakpoint\r\n            });\r\n        }\r\n\r\n        this.breakpointDecorators = this.main.getMonacoEditor().deltaDecorations(this.breakpointDecorators, decorations);\r\n\r\n        this.decoratorIdToBreakpointMap = {};\r\n        for (let i = 0; i < this.breakpointDecorators.length; i++) {\r\n            this.decoratorIdToBreakpointMap[this.breakpointDecorators[i]] = this.breakpoints[i];\r\n        }\r\n\r\n    }\r\n\r\n    getBreakpointPositionsFromEditor() {\r\n        for (let decoration of this.main.getMonacoEditor().getModel().getAllDecorations()) {\r\n            if (decoration.options.marginClassName == \"margin_breakpoint\") {\r\n                let breakpoint = this.decoratorIdToBreakpointMap[decoration.id];\r\n                if (breakpoint != null) {\r\n                    breakpoint.line = decoration.range.startLineNumber;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    hasMainProgram() {\r\n\r\n        if (this.mainProgram == null) return false;\r\n        if (this.mainProgram.statements == null) return false;\r\n        return this.mainProgram.statements.length > 2 || this.mainProgram.statements.length == 2 && this.mainProgram.statements[0].type == TokenType.callMainMethod;\r\n\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n\r\n    getTypeAtPosition(line: number, column: number): { type: Type, isStatic: boolean } {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let foundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n                foundPosition = p;\r\n                let element = foundPosition.element;\r\n                if (element instanceof Method) {\r\n                    return { type: element, isStatic: false };\r\n                }\r\n                // Attribute, Variable\r\n                let type: Type = (element instanceof Type) ? element : element.type;\r\n                //@ts-ignore\r\n                if (foundPosition.position.length > 0 && element.type != null) {\r\n                    //@ts-ignore\r\n                    return { type: <Type>type, isStatic: false };\r\n                }\r\n\r\n                return { type: type, isStatic: foundPosition.position.length > 0 };\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): Klass | Interface | Method | Attribute | Variable {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    } else {\r\n                        if(p.element instanceof Method && bestFoundPosition.element instanceof Klass){\r\n                            bestFoundPosition = p;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainProgram = this.mainProgram;\r\n        this.mainProgram = null;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n        m.typeStore = this.typeStore;\r\n        // this.typeStore = null;\r\n        m.isStartable = this.isStartable;\r\n        m.dependsOnModulesWithErrors = this.dependsOnModulesWithErrors;\r\n\r\n        m.breakpoints = this.breakpoints;\r\n        this.breakpoints = [];\r\n        let programs = m.getPrograms();\r\n\r\n        programs.forEach((p) => p.module = m);\r\n\r\n        for (let b of m.breakpoints) {\r\n            this.breakpoints.push({\r\n                line: b.line,\r\n                column: b.column,\r\n                statement: null\r\n            });\r\n\r\n            m.attachToStatement(b, programs);\r\n\r\n        }\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n        this.typeNodes = [];\r\n        this.typeStore = new TypeStore();\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n        this.mainProgram = null;\r\n\r\n        this.methodCallPositions = {};\r\n        this.dependsOnModules = new Map();\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if(el.find(error => error.level == \"error\")){\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if(this.errorLevelCompare(e1.level, e2.level) == 1){\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if(level1 == \"error\") return 1;\r\n        if(level2 == \"error\") return 2;\r\n        if(level1 == \"warning\") return 1;\r\n        if(level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n\r\n    renderStartButton() {\r\n        let $buttonDiv = this.file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonStart');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_startButton').remove();\r\n\r\n        if (this.isStartable) {\r\n            let $startButtonDiv = jQuery('<div class=\"jo_startButton img_start-dark jo_button jo_active\" title=\"Hauptprogramm in der Datei starten\"></div>');\r\n            $buttonDiv.append($startButtonDiv);\r\n            let that = this;\r\n            $startButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n            $startButtonDiv.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.main.setModuleActive(that);\r\n\r\n                that.main.getInterpreter().start();\r\n            });\r\n\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BaseModule extends Module {\r\n    constructor(main: MainBase) {\r\n\r\n        super({ name: \"Base Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n\r\n        this.typeStore.addType(voidPrimitiveType);\r\n        this.typeStore.addType(intPrimitiveType);\r\n        this.typeStore.addType(floatPrimitiveType);\r\n        this.typeStore.addType(doublePrimitiveType);\r\n        this.typeStore.addType(charPrimitiveType);\r\n        this.typeStore.addType(booleanPrimitiveType);\r\n        this.typeStore.addType(stringPrimitiveType);\r\n        this.typeStore.addType(objectType);\r\n        this.typeStore.addType(varType);\r\n\r\n        this.typeStore.addType(IntegerType);\r\n        this.typeStore.addType(FloatType);\r\n        this.typeStore.addType(DoubleType);\r\n        this.typeStore.addType(CharacterType);\r\n        this.typeStore.addType(BooleanType);\r\n\r\n        // Collections Framework\r\n        this.typeStore.addType(new IteratorClass(this));\r\n        this.typeStore.addType(new IterableClass(this));\r\n        this.typeStore.addType(new CollectionClass(this));\r\n        this.typeStore.addType(new ListClass(this));\r\n        this.typeStore.addType(new ArrayListClass(this));\r\n        this.typeStore.addType(new VectorClass(this));\r\n        this.typeStore.addType(new QueueClass(this));\r\n        this.typeStore.addType(new DequeClass(this));\r\n        this.typeStore.addType(new LinkedListClass(this));\r\n        this.typeStore.addType(new StackClass(this));\r\n        this.typeStore.addType(new ListIteratorImplClass(this));\r\n        this.typeStore.addType(new SetClass(this));\r\n        this.typeStore.addType(new HashSetClass(this));\r\n        this.typeStore.addType(new LinkedHashSetClass(this));\r\n        this.typeStore.addType(new SetIteratorImplClass(this));\r\n        this.typeStore.addType(new MapClass(this));\r\n        this.typeStore.addType(new HashMapClass(this));\r\n\r\n        this.typeStore.addType(new ConsoleClass(this));\r\n        this.typeStore.addType(new MathClass(this));\r\n        this.typeStore.addType(new RandomClass(this));\r\n        this.typeStore.addType(new Vector2Class(this));\r\n        this.typeStore.addType(new MathToolsClass(this));\r\n        this.typeStore.addType(new KeyClass(this));\r\n        this.typeStore.addType(new SoundClass(this));\r\n        this.typeStore.addType(new InputClass(this));\r\n        this.typeStore.addType(new Runnable(this));\r\n        this.typeStore.addType(new TimerClass(this));\r\n        this.typeStore.addType(new ColorClass(this));\r\n        this.typeStore.addType(new ActorClass(this));\r\n        this.typeStore.addType(new DirectionClass(this));\r\n        this.typeStore.addType(new ShapeClass(this));\r\n        this.typeStore.addType(new FilledShapeClass(this));\r\n        this.typeStore.addType(new RectangleClass(this));\r\n        this.typeStore.addType(new RoundedRectangleClass(this));\r\n        this.typeStore.addType(new CircleClass(this));\r\n        this.typeStore.addType(new SectorClass(this));\r\n        this.typeStore.addType(new ArcClass(this));\r\n        this.typeStore.addType(new EllipseClass(this));\r\n        this.typeStore.addType(new BitmapClass(this));\r\n        this.typeStore.addType(new AlignmentClass(this));\r\n        this.typeStore.addType(new TextClass(this));\r\n        this.typeStore.addType(new ScaleModeClass(this));\r\n        this.typeStore.addType(new SpriteLibraryClass(this));\r\n        this.typeStore.addType(new RepeatTypeClass(this));\r\n        this.typeStore.addType(new TileClass(this));\r\n        this.typeStore.addType(new SpriteClass(this));\r\n        this.typeStore.addType(new CollisionPairClass(this));\r\n        this.typeStore.addType(new GroupClass(this));\r\n        this.typeStore.addType(new PolygonClass(this));\r\n        this.typeStore.addType(new LineClass(this));\r\n        this.typeStore.addType(new TriangleClass(this));\r\n        this.typeStore.addType(new TurtleClass(this));\r\n\r\n        this.typeStore.addType(new MouseListenerInterface(this));\r\n        this.typeStore.addType(new MouseAdapterClass(this));\r\n        this.typeStore.addType(new GamepadClass(this));\r\n        this.typeStore.addType(new WorldClass(this));\r\n        this.typeStore.addType(new ProcessingClass(this));\r\n\r\n        (<ActorClass>this.typeStore.getType(\"Actor\")).registerWorldType();\r\n\r\n\r\n        this.typeStore.addType(new PrintStreamClass(this));\r\n        this.typeStore.addType(new KeyListener(this));\r\n        this.typeStore.addType(new SystemClass(this));\r\n        this.typeStore.addType(new SystemToolsClass(this));\r\n        this.typeStore.addType(new DayOfWeekEnum(this));\r\n        this.typeStore.addType(new MonthEnum(this));\r\n        this.typeStore.addType(new LocalDateTimeClass(this));\r\n    \r\n        this.typeStore.addType(new WebSocketClientClass(this));\r\n        this.typeStore.addType(new WebSocketClass(this));\r\n\r\n    \r\n\r\n        stringPrimitiveType.module = this;\r\n        // stringPrimitiveType.baseClass = <any>(this.typeStore.getType(\"Object\"));\r\n        // stringPrimitiveType.baseClass = objectType;\r\n        // IntegerType.baseClass = objectType;\r\n        // DoubleType.baseClass = objectType;\r\n        // FloatType.baseClass = objectType;\r\n        // CharacterType.baseClass = objectType;\r\n        // BooleanType.baseClass = objectType;\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class GNGModule extends Module {\r\n    constructor(main: MainBase, moduleStore: ModuleStore) {\r\n\r\n        super({ name: \"Graphics and Games - Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n        this.typeStore.addType(new GNGAktionsempfaengerInterface(this));\r\n        this.typeStore.addType(new GNGBaseFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGZeichenfensterClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGEreignisbehandlung(this, moduleStore));\r\n        this.typeStore.addType(new GNGRechteckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGDreieckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGKreisClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTextClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTurtleClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGFigurClass(this, moduleStore));\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: {[name: string]: Module} = {};\r\n    private baseModule: BaseModule;\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase, withBaseModule: boolean, private additionalLibraries: string[] = []) {\r\n        if (withBaseModule) {\r\n            this.baseModule = new BaseModule(main);\r\n            this.putModule(this.baseModule);\r\n        }\r\n        \r\n        // additionalLibraries = [\"gng\"];\r\n\r\n        for(let lib of additionalLibraries){\r\n            this.addLibraryModule(lib);\r\n        }\r\n    }\r\n\r\n    addLibraryModule(identifier: string){\r\n        switch(identifier){\r\n            case \"gng\": this.putModule(new GNGModule(this.main, this));\r\n            break;\r\n        }\r\n    }\r\n\r\n    setAdditionalLibraries(additionalLibraries: string[]){\r\n\r\n        this.modules = this.modules.filter( m => (!m.isSystemModule) || m instanceof BaseModule);\r\n        this.moduleMap = {};\r\n\r\n        for(let m of this.modules){\r\n            this.moduleMap[m.file.name] =  m;\r\n        }\r\n\r\n        if(additionalLibraries != null){\r\n            for(let lib of additionalLibraries){\r\n                this.addLibraryModule(lib);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for(let module of this.modules){\r\n            if(module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getBaseModule() {\r\n        return this.baseModule;\r\n    }\r\n\r\n    public clearUsagePositions() {\r\n        this.baseModule.clearUsagePositions();\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main, true);\r\n        for (let m of this.modules) {\r\n            if (!m.isSystemModule) {\r\n                ms.putModule(m.copy());\r\n            }\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                if (!mo.isSystemModule) {\r\n                    return mo;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                if (!m.isSystemModule || includeSystemModules) {\r\n                    ret.push(m);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n    getType(identifier: string): { type: Type, module: Module } {\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                let type = module.typeStore.getType(identifier);\r\n                if (type != null) {\r\n                    return { type: type, module: module }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getTypeCompletionItems(moduleContext: Module, rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                for (let type of module.typeStore.typeList) {\r\n                    if (module == moduleContext || (type instanceof Klass && type.visibility == Visibility.public)\r\n                        || module.isSystemModule) {\r\n\r\n                        let detail = \"Klasse\";\r\n\r\n                        if(type.documentation != null){\r\n                            detail = type.documentation;\r\n                        } else if (module.isSystemModule) {\r\n                            if (type instanceof PrimitiveType) {\r\n                                detail = \"Primitiver Datentyp\";\r\n                            } else {\r\n                                detail = \"Systemklasse\";\r\n                            }\r\n                        }\r\n\r\n                        let item = {\r\n                            label: type.identifier,\r\n                            detail: detail,\r\n                            insertText: type.identifier,\r\n                            kind: type instanceof PrimitiveType ?\r\n                                monaco.languages.CompletionItemKind.Struct : monaco.languages.CompletionItemKind.Class,\r\n                            range: rangeToReplace,\r\n                            generic: ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0)\r\n                        };\r\n\r\n                        completionItems.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return completionItems;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class TypeStore {\r\n\r\n    typeList: Type[] = [];\r\n    typeMap: Map<string, Type> = new Map();\r\n\r\n    addType(type: Type) {\r\n        this.typeList.push(type);\r\n        this.typeMap.set(type.identifier, type);\r\n    }\r\n\r\n    clear() {\r\n        this.typeList.length = 0;\r\n        this.typeMap.clear();\r\n    }\r\n\r\n    getType(identifier: string) {\r\n        return this.typeMap.get(identifier);\r\n    }\r\n\r\n\r\n\r\n}\r\n","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$sliderDiv.on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider\");\r\n                jQuery(document).off(mousePointer + \"up.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        if($fileListDiv != null){\r\n            let $filesDiv = $fileListDiv.parent();\r\n            let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n            $filesDiv.append($addButton);\r\n    \r\n            $addButton.on(\"click\", () => {\r\n    \r\n                let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"java\" });\r\n                let fileData = this.addModule(module);\r\n    \r\n                this.renameElement(fileData, () => {\r\n                    // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                    if (that.currentFile != fileData) {\r\n                        that.selectFile(fileData);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        if(this.$fileListDiv != null){\r\n            this.$fileListDiv.append($fileDiv);\r\n        }\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"java\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv,\r\n            isFolder: false,\r\n            path: []\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"java\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        if(this.$fileListDiv == null) return;\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(\"LearnJ\", 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStore = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n\r\n\r\n                objectStore.transaction.oncomplete = function(event) {\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { HitPolygonStore } from \"../runtimelibrary/graphics/PolygonStore.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withPCode?: boolean,\r\n    withConsole?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    speed?: number | \"max\",\r\n    id?: string,\r\n    hideStartPanel?: boolean,\r\n    hideEditor?: boolean,\r\n    libraries?: string[]\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n    \r\n    isEmbedded(): boolean { return true; }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule){};\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n    $runDiv: JQuery<HTMLElement>;\r\n\r\n    debugger: Debugger;\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $resetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.initGUI($div);\r\n\r\n        this.initScripts();\r\n\r\n        if(!this.config.hideStartPanel){\r\n            this.indexedDB = new EmbeddedIndexedDB();\r\n            this.indexedDB.open(() => {\r\n    \r\n                if (this.config.id != null) {\r\n                    this.readScripts();\r\n                }\r\n    \r\n            });\r\n        }\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"java-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if(this.config.hideEditor == null) this.config.hideEditor = false;\r\n        if(this.config.hideStartPanel == null) this.config.hideStartPanel = false;\r\n\r\n        if(this.config.withBottomPanel == null){\r\n            this.config.withBottomPanel = this.config.withConsole || this.config.withPCode || this.config.withFileList || this.config.withErrorList;\r\n        }\r\n\r\n        if(this.config.hideEditor){\r\n            this.config.withBottomPanel = false;\r\n            this.config.withFileList = false;\r\n            this.config.withConsole = false;\r\n            this.config.withPCode = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n        if(this.config.withBottomPanel){\r\n            if (this.config.withFileList == null) this.config.withFileList = true;\r\n            if (this.config.withPCode == null) this.config.withPCode = true;\r\n            if (this.config.withConsole == null) this.config.withConsole = true;\r\n            if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        }\r\n\r\n        if(this.config.speed == null) this.config.speed = 9;\r\n        if(this.config.libraries == null) this.config.libraries = [];\r\n\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n        module.renderBreakpointDecorators();\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            script = this.eraseDokuwikiSearchMarkup(script);\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"java\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$resetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n        this.currentWorkspace.settings.libraries = this.config.libraries;\r\n        this.currentWorkspace.alterAdditionalLibraries();\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"java\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            identical_to_repository_version: false,\r\n            file_type: 0\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n        let $resetModalWindow = this.makeCodeResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$resetButton = jQuery('<div class=\"joe_resetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$resetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        this.$resetButton.hide();\r\n\r\n        this.$resetButton.on(\"click\", () => { $resetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n\r\n        if (this.config.withBottomPanel) {\r\n            let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n            this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n            $bottomDiv.append($bottomDivInner);\r\n            if (this.config.withFileList) {\r\n                let $filesDiv = this.makeFilesDiv();\r\n                $bottomDiv.prepend($filesDiv);\r\n                new EmbeddedSlider($filesDiv, false, false, () => { });\r\n            }\r\n            makeTabs($bottomDivInner);\r\n\r\n\r\n            $centerDiv.append($editorDiv, $bottomDiv);\r\n            new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n        } else {\r\n            $centerDiv.prepend($editorDiv);\r\n        }\r\n        \r\n        \r\n\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            if(this.config.hideEditor){\r\n                $rightDiv.prepend($controlsDiv);\r\n            } else {\r\n                $centerDiv.prepend($controlsDiv);\r\n                $controlsDiv.addClass('joe_controlPanel_top');\r\n                $editorDiv.css({\r\n                    'position': 'relative',\r\n                    'height': '1px'\r\n                });\r\n            }\r\n        }\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n        $div.append($centerDiv, $rightDiv);\r\n\r\n        if(!this.config.hideEditor){\r\n            new EmbeddedSlider($rightDiv, true, false, () => {\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n                this.editor.editor.layout();\r\n            });\r\n        }\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\">');\r\n        let $coordinates = jQuery('<div class=\"jo_coordinates\">(0/0)</div>');\r\n        this.$rightDivInner.append($rightSideContainer);\r\n        $rightSideContainer.append($coordinates);\r\n\r\n        this.debugger = new Debugger(this, this.$debuggerDiv, null);\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons($controlsDiv, $editorDiv),\r\n            this.$runDiv);\r\n\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-left: 16px\"></div>');\r\n        $controlsDiv.append($infoButton);\r\n\r\n        $infoButton.on('mousedown', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über die Online-IDE ...\",\r\n                link: \"https://www.online-ide.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }}], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.interpreter.initGUI();\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.interpreter.controlButtons.speedControl.setSpeedInStepsPerSecond(this.config.speed);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n        if(this.config.hideEditor){\r\n            $centerDiv.hide();\r\n            $rightDiv.css(\"flex\", \"1\");\r\n            if(!this.config.hideStartPanel){\r\n                $div.find(\".joe_rightDivInner\").css('height', 'calc(100% - 24px)');\r\n                $div.find(\".joe_controlsDiv\").css('padding', '2px');\r\n                $div.find(\".jo_speedcontrol-outer\").css('z-index', '10');\r\n            } else {\r\n                $div.find(\".joe_controlsDiv\").hide();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        jQuery(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        jQuery(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$resetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            let fileData = this.fileExplorer.files.find((fileData) => fileData.module.file == file);\r\n            if (fileData == null) {\r\n                return;\r\n            }\r\n\r\n            if (fileData.module != this.getCurrentlyEditedModule()) {\r\n                this.setModuleActive(fileData.module);\r\n            }\r\n\r\n            this.programPointerModule = fileData.module;\r\n        } else {\r\n            this.programPointerModule = this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n        this.programPointerDecoration = this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealProgramPointer', isWholeLine: true }\r\n            },\r\n            {\r\n                range: range,\r\n                options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n            }\r\n        ]);\r\n\r\n\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Programmdateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n        // for (let index = 0; index < 20; index++) {            \r\n        //     let $file = jQuery('<div class=\"jo_file jo_java\"><div class=\"jo_fileimage\"></div><div class=\"jo_filename\"></div></div></div>');\r\n        //     $filesList.append($file);\r\n        // }\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                this.version++;\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    if(this.config.hideStartPanel){\r\n                        this.actionManager.trigger('interpreter.start');\r\n                    }        \r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                // this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$resetButton.fadeIn(1000);\r\n        }\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        // clearTimeout(this.debounceDiagramDrawing);\r\n        // this.debounceDiagramDrawing = setTimeout(() => {\r\n        //     this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        // }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading\"></div>');\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsoleClear = jQuery('<div class=\"img_clear-dark jo_button jo_active jo_console-clear\"' +\r\n                'style=\"display: none; margin-right: 8px;\" title=\"Console leeren\"></div>');\r\n            $thRightSide.append($thConsoleClear);\r\n        }\r\n\r\n        $thRightSide.append($buttonDiv);\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsole = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_consoleTab\" style=\"line-height: 24px\">Console</div>');\r\n            $tabheadings.append($thConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading\" data-target=\"jo_pcodeTab\" style=\"line-height: 24px\">PCode</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withConsole) {\r\n            let $tabConsole = jQuery(\r\n                `\r\n        <div class=\"jo_editorFontSize jo_consoleTab\">\r\n        <div class=\"jo_console-inner\">\r\n            <div class=\"jo_scrollable jo_console-top\"></div>\r\n            <div class=\"jo_commandline\"></div>\r\n        </div>\r\n        </div>\r\n    `);\r\n\r\n            $tabs.append($tabConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $tabPCode = jQuery('<div class=\"jo_scrollable jo_pcodeTab\">PCode</div>');\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n        this.$debuggerDiv = jQuery('<div class=\"joe_debuggerDiv\"></div>');\r\n        this.$runDiv = jQuery(\r\n            `\r\n            <div class=\"jo_tab jo_active jo_run\">\r\n            <div class=\"jo_run-programend\">Programm beendet</div>\r\n            <div class=\"jo_run-input\">\r\n            <div>\r\n            <div>\r\n        <div class=\"jo_run-input-message\" class=\"jo_rix\">Bitte geben Sie eine Zahl ein!</div>\r\n        <input class=\"jo_run-input-input\" type=\"text\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button-outer\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button\" class=\"jo_rix\">OK</div>\r\n        </div>\r\n        \r\n        <div class=\"jo_run-input-error\" class=\"jo_rix\"></div>\r\n    </div>\r\n    </div>\r\n    </div> \r\n    <div class=\"jo_run-inner\">\r\n    <div class=\"jo_graphics\"></div>\r\n    <div class=\"jo_output jo_scrollable\"></div>\r\n    </div>\r\n    \r\n    </div>\r\n    \r\n    `);\r\n\r\n\r\n        if(!this.config.hideEditor){\r\n            let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n            $tabheadings.css('position', 'relative');\r\n            let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_run\" style=\"line-height: 24px\">Ausgabe</div>');\r\n            let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_variablesTab\" style=\"line-height: 24px\">Variablen</div>');\r\n            $tabheadings.append($thRun, $thVariables);\r\n            this.$rightDivInner.append($tabheadings);\r\n            let $vd = jQuery('<div class=\"jo_scrollable jo_editorFontSize jo_variablesTab\"></div>');\r\n            \r\n            let $alternativeText = jQuery(`\r\n            <div class=\"jo_alternativeText jo_scrollable\">\r\n            <div style=\"font-weight: bold\">Tipp:</div>\r\n            Die Variablen sind nur dann sichtbar, wenn das Programm\r\n            <ul>\r\n            <li>im Einzelschrittmodus ausgeführt wird(Klick auf <span class=\"img_step-over-dark jo_inline-image\"></span>),</li>\r\n            <li>an einem Breakpoint hält (Setzen eines Breakpoints mit Mausklick links neben den Zeilennummern und anschließendes Starten des Programms mit \r\n                <span class=\"img_start-dark jo_inline-image\"></span>) oder </li>\r\n                <li>in sehr niedriger Geschwindigkeit ausgeführt wird (weniger als 10 Schritte/s).\r\n                </ul>\r\n                </div>\r\n                `);\r\n                \r\n                $vd.append(this.$debuggerDiv, $alternativeText);\r\n                let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n                $tabs.append(this.$runDiv, $vd);\r\n                this.$rightDivInner.append($tabs);\r\n                makeTabs($rightDiv);\r\n            } else {\r\n                this.$rightDivInner.append(this.$runDiv);\r\n            }\r\n        \r\n        return $rightDiv;\r\n    }\r\n    \r\n    getSemicolonAngel(): SemicolonAngel{\r\n        return this.semicolonAngel;\r\n    }\r\n    \r\n}\r\n\r\n\r\n","import { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, FloatType, DoubleType, CharacterType, BooleanType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Formatter } from \"../main/gui/Formatter.js\";\r\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n// declare const require: any;\r\n\r\nexport type ScriptType = \"java\" | \"hint\";\r\n\r\nexport type JOScript = {\r\n    type: ScriptType;\r\n    title: string;\r\n    text: string;\r\n}\r\n\r\nexport class EmbeddedStarter {\r\n\r\n\r\n    startupComplete = 2;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    mainEmbeddedList: MainEmbedded[] = [];\r\n\r\n    initGUI() {\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        new Formatter().init();\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n    }\r\n\r\n    start() {\r\n\r\n        this.initJavaOnlineDivs();\r\n\r\n        // let that = this;\r\n        // setTimeout(() => {\r\n        //     that.monaco_editor.layout();\r\n        // }, 200);\r\n\r\n    }\r\n\r\n    initJavaOnlineDivs() {\r\n        \r\n        jQuery('.java-online').each((index: number, element: HTMLElement) => {\r\n            let $div = jQuery(element);\r\n            let scriptList: JOScript[] = [];\r\n            $div.find('script').each((index: number, element: HTMLElement) => {\r\n                let $script = jQuery(element);\r\n                let type: ScriptType = \"java\";\r\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\r\n                let script: JOScript = {\r\n                    type: type,\r\n                    title: $script.attr('title'),\r\n                    text: $script.text().trim()\r\n                };\r\n                script.text = this.eraseDokuwikiSearchMarkup(script.text);\r\n                scriptList.push(script);\r\n            });\r\n\r\n            this.initDiv($div, scriptList);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\r\n\r\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\r\n\r\n    }\r\n\r\n}\r\n\r\njQuery(function () {\r\n\r\n    let embeddedStarter = new EmbeddedStarter();\r\n\r\n    let prefix = \"\";\r\n    let editorPath = \"lib/monaco-editor/dev/vs\"\r\n    //@ts-ignore\r\n    if(window.javaOnlineDir != null){\r\n        //@ts-ignore\r\n        prefix = window.javaOnlineDir;\r\n    }\r\n\r\n    //@ts-ignore\r\n    if(window.monacoEditorPath != null){\r\n        //@ts-ignore\r\n        editorPath = window.monacoEditorPath;\r\n    }\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        embeddedStarter.initEditor();\r\n        embeddedStarter.initGUI();\r\n\r\n    });\r\n\r\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n    PIXI.Loader\r\n        .shared.add(prefix + \"assets/graphics/spritesheet.json\")\r\n        .load(() => { });\r\n\r\n\r\n});\r\n"],"sourceRoot":""}