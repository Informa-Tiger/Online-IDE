{"version":3,"file":"javaOnline.js","mappings":"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ACA,gCACA,sCACA,kCACA,wCACA,8BACA,kCACA,kCACA,sCACA,oCACA,0CACA,kCACA,oCACA,8CAQA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kCAAa,gCAGb,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,sBAAO,0BAAS,oCAAc,wCAC9B,sBACA,4BACA,gCACA,wCACA,0CACA,4DACA,gDACA,4CACA,kBAAK,gBACL,8BAEA,oCACA,oCACA,kCACA,gDACA,kDACA,kEACA,gBACA,kBAEA,sBACA,gDACA,gCACA,8BAEA,0CACA,sBACA,4BAEA,kBAGA,8BAGA,sBAGA,8BAGA,gBAGA,sBAEA,kBAGA,0BAGA,4BAGA,wCAGA,0BAGA,4BACA,6CAEA,2CAGA,6BACA,2BACA,6DACA,2DACA,6DACA,2DACA,mDACA,uCACA,2CACA,qCACA,uDACA,mDACA,qEACA,+BACA,+BACA,iDACA,iCACA,yCACA,2EACA,2CACA,+CACA,qDACA,yCACA,2CACA,yEACA,yBACA,+BACA,mCACA,iCACA,iEACA,+DACA,iCACA,qBACA,6DACA,2DACA,iCACA,iCACA,iCACA,yCACA,uDAGA,qBACA,uCACA,qDACA,+CACA,qDACA,qDACA,2CACA,6BACA,mDACA,uBACA,2BACA,uCACA,mDACA,+BACA,+CACA,mDACA,6FACA,6CACA,uBAnMJ,CAAYA,IAAAA,EAAS,KAsMd,ICjMFC,EDiMMC,EAA4C,CACnD,CAACF,EAAUG,YAAa,iBAExB,CAACH,EAAUI,iBAAkB,yBAC7B,CAACJ,EAAUK,uBAAwB,4BACnC,CAACL,EAAUM,iBAAkB,2BAC7B,CAACN,EAAUO,gBAAiB,+BAC5B,CAACP,EAAUQ,cAAe,sBAC1B,CAACR,EAAUS,MAAO,OAClB,CAACT,EAAUU,OAAQ,QAEnB,CAACV,EAAUW,cAAe,QAC1B,CAACX,EAAUY,aAAc,OACzB,CAACZ,EAAUa,cAAe,QAC1B,CAACb,EAAUc,YAAa,MACxB,CAACd,EAAUe,kBAAmB,YAC9B,CAACf,EAAUgB,aAAc,OACzB,CAAChB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","sources":["webpack:///../src/client/communication/AjaxHelper.ts","webpack:///../src/client/communication/NotifierClient.ts","webpack:///../src/client/tools/database/CacheManager.ts","webpack:///../src/client/communication/NetworkManager.ts","webpack:///../src/client/compiler/lexer/Token.ts","webpack:///../src/client/compiler/lexer/Lexer.ts","webpack:///../src/client/compiler/lexer/ColorLexer.ts","webpack:///../src/client/runtimelibrary/graphics/ColorHelper.ts","webpack:///../src/client/compiler/types/Class.ts","webpack:///../src/client/compiler/types/Types.ts","webpack:///../src/client/interpreter/RuntimeObject.ts","webpack:///../src/client/compiler/parser/LabelManager.ts","webpack:///../src/client/compiler/types/ObjectClass.ts","webpack:///../src/client/tools/StringTools.ts","webpack:///../src/client/compiler/types/PrimitiveTypes.ts","webpack:///../src/client/interpreter/Interpreter.ts","webpack:///../src/client/tools/ConvexHull.ts","webpack:///../src/client/compiler/types/boxedTypes/IntegerClass.ts","webpack:///../src/client/compiler/types/boxedTypes/LongClass.ts","webpack:///../src/client/compiler/types/boxedTypes/FloatClass.ts","webpack:///../src/client/compiler/types/boxedTypes/DoubleClass.ts","webpack:///../src/client/compiler/types/boxedTypes/CharacterClass.ts","webpack:///../src/client/compiler/types/boxedTypes/BooleanClass.ts","webpack:///../src/client/compiler/types/Array.ts","webpack:///../src/client/compiler/parser/SymbolTable.ts","webpack:///../src/client/compiler/types/Enum.ts","webpack:///../src/client/compiler/parser/CodeGenerator.ts","webpack:///../src/client/compiler/parser/Parser.ts","webpack:///../src/client/compiler/types/TypeTools.ts","webpack:///../src/client/compiler/parser/TypeResolver.ts","webpack:///../src/client/runtimelibrary/collections/ListIteratorImpl.ts","webpack:///../src/client/runtimelibrary/collections/ArrayList.ts","webpack:///../src/client/compiler/types/TypeHelper.ts","webpack:///../src/client/runtimelibrary/collections/Collection.ts","webpack:///../src/client/runtimelibrary/collections/Iterable.ts","webpack:///../src/client/runtimelibrary/collections/Iterator.ts","webpack:///../src/client/runtimelibrary/collections/List.ts","webpack:///../src/client/runtimelibrary/collections/Stack.ts","webpack:///../src/client/runtimelibrary/collections/Vector.ts","webpack:///../src/client/runtimelibrary/collections/Set.ts","webpack:///../src/client/runtimelibrary/collections/SetIteratorImpl.ts","webpack:///../src/client/runtimelibrary/collections/SetHelper.ts","webpack:///../src/client/runtimelibrary/collections/HashSet.ts","webpack:///../src/client/runtimelibrary/collections/LinkedHashSet.ts","webpack:///../src/client/runtimelibrary/collections/Queue.ts","webpack:///../src/client/runtimelibrary/collections/Deque.ts","webpack:///../src/client/runtimelibrary/collections/LinkedList.ts","webpack:///../src/client/runtimelibrary/Console.ts","webpack:///../src/client/main/gui/PrintManager.ts","webpack:///../src/client/interpreter/InputManager.ts","webpack:///../src/client/main/gui/Helper.ts","webpack:///../src/client/tools/KeyboardTool.ts","webpack:///../src/client/tools/GamepadTool.ts","webpack:///../src/client/runtimelibrary/graphics/FilledShapeDefaults.ts","webpack:///../src/client/runtimelibrary/graphics/World.ts","webpack:///../src/client/runtimelibrary/graphics/Actor.ts","webpack:///../src/client/runtimelibrary/graphics/Alignment.ts","webpack:///../src/client/tools/MatheTools.ts","webpack:///../src/client/runtimelibrary/graphics/Shape.ts","webpack:///../src/client/runtimelibrary/graphics/Bitmap.ts","webpack:///../src/client/runtimelibrary/graphics/FilledShape.ts","webpack:///../src/client/runtimelibrary/graphics/Circle.ts","webpack:///../src/client/runtimelibrary/graphics/Sector.ts","webpack:///../src/client/runtimelibrary/graphics/Arc.ts","webpack:///../src/client/runtimelibrary/graphics/Color.ts","webpack:///../src/client/runtimelibrary/graphics/Ellipse.ts","webpack:///../src/client/runtimelibrary/graphics/Group.ts","webpack:///../src/client/runtimelibrary/graphics/Key.ts","webpack:///../src/client/runtimelibrary/graphics/Polygon.ts","webpack:///../src/client/runtimelibrary/graphics/Rectangle.ts","webpack:///../src/client/runtimelibrary/graphics/RepeatType.ts","webpack:///../src/client/runtimelibrary/graphics/RoundedRectangle.ts","webpack:///../src/client/runtimelibrary/graphics/ScaleMode.ts","webpack:///../src/client/tools/SoundTools.ts","webpack:///../src/client/runtimelibrary/graphics/Sound.ts","webpack:///../src/client/runtimelibrary/graphics/PolygonStore.ts","webpack:///../src/client/runtimelibrary/graphics/Sprite.ts","webpack:///../src/client/runtimelibrary/graphics/SpriteLibraryEnum.ts","webpack:///../src/client/runtimelibrary/graphics/Text.ts","webpack:///../src/client/runtimelibrary/Input.ts","webpack:///../src/client/runtimelibrary/Gamepad.ts","webpack:///../src/client/runtimelibrary/Math.ts","webpack:///../src/client/runtimelibrary/MathToolsClass.ts","webpack:///../src/client/runtimelibrary/System.ts","webpack:///../src/client/runtimelibrary/SystemTools.ts","webpack:///../src/client/runtimelibrary/Timer.ts","webpack:///../src/client/runtimelibrary/collections/Map.ts","webpack:///../src/client/runtimelibrary/collections/MapHelper.ts","webpack:///../src/client/runtimelibrary/collections/HashMap.ts","webpack:///../src/client/runtimelibrary/graphics/Triangle.ts","webpack:///../src/client/runtimelibrary/graphics/LocalDateTime.ts","webpack:///../src/client/runtimelibrary/graphics/Line.ts","webpack:///../src/client/runtimelibrary/Vector2.ts","webpack:///../src/client/runtimelibrary/graphics/MouseListener.ts","webpack:///../src/client/runtimelibrary/network/WebSocketClient.ts","webpack:///../src/client/runtimelibrary/network/WebSocket.ts","webpack:///../src/client/runtimelibrary/graphics/Processing.ts","webpack:///../src/client/runtimelibrary/graphics/Turtle.ts","webpack:///../src/client/runtimelibrary/gng/GNGEreignisbehandlung.ts","webpack:///../src/client/runtimelibrary/gng/GNGZeichenfenster.ts","webpack:///../src/client/runtimelibrary/gng/GNGRechteck.ts","webpack:///../src/client/runtimelibrary/gng/GNGFarben.ts","webpack:///../src/client/runtimelibrary/gng/GNGBaseFigur.ts","webpack:///../src/client/runtimelibrary/gng/GNGAktionsempfaenger.ts","webpack:///../src/client/runtimelibrary/gng/GNGDreieck.ts","webpack:///../src/client/runtimelibrary/gng/GNGKreis.ts","webpack:///../src/client/runtimelibrary/gng/GNGTurtle.ts","webpack:///../src/client/runtimelibrary/gng/GNGText.ts","webpack:///../src/client/runtimelibrary/gng/GNGFigur.ts","webpack:///../src/client/runtimelibrary/Random.ts","webpack:///../src/client/runtimelibrary/graphics/Direction.ts","webpack:///../src/client/compiler/parser/Patcher.ts","webpack:///../src/client/runtimelibrary/graphics/KeyEvent.ts","webpack:///../src/client/main/gui/Formatter.ts","webpack:///../src/client/runtimelibrary/graphics/3d/Boxes3d.ts","webpack:///../src/client/runtimelibrary/graphics/3d/RobotCubeFactory.ts","webpack:///../src/client/runtimelibrary/graphics/3d/Robot.ts","webpack:///../src/client/runtimelibrary/database/ResultSet.ts","webpack:///../src/client/runtimelibrary/database/DatabaseStatement.ts","webpack:///../src/client/tools/database/sqljsWorkerSim.ts","webpack:///../src/client/tools/database/DatabaseTool.ts","webpack:///../src/client/tools/database/DatabaseLongPollingListener.ts","webpack:///../src/client/runtimelibrary/database/DatabasePreparedStatement.ts","webpack:///../src/client/runtimelibrary/database/Connection.ts","webpack:///../src/client/runtimelibrary/database/DatabaseManager.ts","webpack:///../src/client/compiler/parser/Module.ts","webpack:///../src/client/interpreter/DebuggerElement.ts","webpack:///../src/client/tools/HtmlTools.ts","webpack:///../src/client/compiler/AdhocCompiler.ts","webpack:///../src/client/interpreter/Evaluator.ts","webpack:///../src/client/workspace/Workspace.ts","webpack:///../src/client/main/gui/Dialog.ts","webpack:///../src/client/main/gui/WorkspaceImporter.ts","webpack:///../src/client/main/gui/Accordion.ts","webpack:///../src/client/interpreter/WatcherElement.ts","webpack:///../src/client/interpreter/Debugger.ts","webpack:///../src/client/main/gui/ActionManager.ts","webpack:///../src/client/compiler/parser/ProgramPrinter.ts","webpack:///../src/client/main/gui/console/ConsoleEntry.ts","webpack:///../src/client/main/gui/console/MyConsole.ts","webpack:///../src/client/main/gui/ErrorManager.ts","webpack:///../src/client/main/gui/HomeworkManager.ts","webpack:///../src/client/main/gui/BottomDiv.ts","webpack:///../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../src/client/compiler/types/DeclarationHelper.ts","webpack:///../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../src/client/main/gui/MyHoverProvider.ts","webpack:///../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../src/client/main/gui/MyReferenceProvider.ts","webpack:///../src/client/main/gui/MyColorProvider.ts","webpack:///../src/client/main/gui/Editor.ts","webpack:///../src/client/main/gui/MyJava.ts","webpack:///../src/client/main/gui/SpeedControl.ts","webpack:///../src/client/main/gui/ProgramControlButtons.ts","webpack:///../src/client/main/gui/diagrams/ZoomControl.ts","webpack:///../src/client/main/gui/diagrams/Diagram.ts","webpack:///../src/client/main/gui/diagrams/DiagramElement.ts","webpack:///../src/client/compiler/Compiler.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/ClassBox.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/ArrowHead.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/DiagramArrow.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/ClassDiagram.ts","webpack:///../src/client/main/gui/diagrams/objectdiagram/ListDiagram.ts","webpack:///../src/client/main/gui/diagrams/objectdiagram/ObjectDiagramVariant.ts","webpack:///../src/client/main/gui/diagrams/objectdiagram/ObjectDiagram.ts","webpack:///../src/client/main/gui/RightDiv.ts","webpack:///../src/client/embedded/EmbeddedSlider.ts","webpack:///../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../src/client/embedded/MainEmbedded.ts","webpack:///../src/client/main/gui/UserMenu.ts","webpack:///../src/client/main/gui/MainMenu.ts","webpack:///../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../src/client/main/gui/WorkspaceSettingsDialog.ts","webpack:///../src/client/main/gui/ProjectExplorer.ts","webpack:///../src/client/main/gui/Sliders.ts","webpack:///../src/client/main/gui/TeacherExplorer.ts","webpack:///../src/client/main/gui/ThemeManager.ts","webpack:///../src/client/main/Login.ts","webpack:///../src/client/main/gui/ViewModeController.ts","webpack:///../src/client/main/gui/WindowStateManager.ts","webpack:///../src/client/workspace/InconsistencyFixer.ts","webpack:///../src/client/main/Main.ts","webpack:///../src/client/repository/synchronize/SynchroWorkspace.ts","webpack:///../src/client/repository/synchronize/HistoryElement.ts","webpack:///../src/client/repository/synchronize/SynchronizationListElement.ts","webpack:///../src/client/repository/synchronize/RepositorySynchronizationManager.ts","webpack:///../src/client/repository/synchronize/RepositoryTool.ts","webpack:///../src/client/repository/update/RepositoryCreateManager.ts","webpack:///../src/client/repository/update/RepositorySettingsManager.ts","webpack:///../src/client/repository/update/RepositoryCheckoutManager.ts","webpack:///../src/client/main/IDEStarter.ts"],"sourcesContent":["import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++; //Test\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n        if(!url.startsWith(\"http\")){\r\n            url = \"servlet/\" + url;\r\n        }\r\n   \r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n                if (response.error != null) error = response.error;\r\n\r\n                if (error.indexOf(\"Not logged in\") >= 0) {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n                \r\n                console.log(\"Netzwerkfehler: \" + error);\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').show();\r\n    } else {\r\n        jQuery('.jo_network-busy').hide();\r\n    }\r\n}\r\n\r\n\r\n\r\n// export function newLogin(url: string, request: any, successCallback: (response: any) => void,\r\n//     errorCallback?: (message: string) => void) {\r\n\r\n//     if (credentials.username == null) return;\r\n//     let loginRequest: LoginRequest = {username: credentials.username, password: credentials.password};\r\n\r\n//     $.ajax({\r\n//         type: 'POST',\r\n//         data: JSON.stringify(loginRequest),\r\n//         contentType: 'application/json',\r\n//         url: \"login\",\r\n//         success: function (response: any) {\r\n//             if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n//             } else {\r\n//                 ajax(url, request, successCallback, errorCallback);\r\n//             }\r\n//             return;\r\n//         },\r\n//         error: function (jqXHR, message) {\r\n// //            ajax(url, request, successCallback, errorCallback);\r\n//         }\r\n//     });\r\n// }\r\n","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetWebSocketTokenResponse } from \"./Data.js\";\r\nimport { NetworkManager } from \"./NetworkManager.js\";\r\n\r\ntype SubscriptionMessageFromClient = {\r\n    command: number,  // 1 == \"subscribe\", 2 == \"disconnect\"\r\n    // 3 == \"keepalive request\"\r\n    token?: string   // when \"subscribe\"\r\n}\r\n\r\ntype SubscriptionMessageFromServer = {\r\n    command: number // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\r\n}\r\n\r\ntype NotifierState = \"connecting\" | \"connected\" | \"subscribed\" | \"disconnected\";\r\n\r\nexport class NotifierClient {\r\n\r\n    connection: WebSocket;\r\n    state: NotifierState;\r\n\r\n    constructor(private main: Main, private networkManager: NetworkManager){\r\n        this.connect();\r\n    }\r\n\r\n    connect() {\r\n        this.state = \"connecting\";\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/subscriptionwebsocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: SubscriptionMessageFromClient = {\r\n                    command: 1,   // \"subscribe\"\r\n                    token: response.token\r\n                }\r\n\r\n                this.state = \"connected\";\r\n                this.sendIntern(JSON.stringify(request));\r\n\r\n            }\r\n\r\n            let that = this;\r\n            setTimeout(() => {\r\n                if(this.state != \"subscribed\"){\r\n                    this.networkManager.forcedUpdateEvery = 1;\r\n                    this.networkManager.counterTillForcedUpdate = 1;\r\n                }\r\n            }, 7000);\r\n\r\n        });\r\n    }\r\n\r\n    disconnect(){\r\n        let request: SubscriptionMessageFromClient = {\r\n            command: 2   // \"disconnect\"\r\n        }\r\n\r\n        this.state = \"connected\";\r\n        this.sendIntern(JSON.stringify(request));\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (this.state != \"disconnected\") {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.state = \"disconnected\";\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: SubscriptionMessageFromClient = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\r\n        switch (response.command) {\r\n            case 1: // Acknoledge Connection\r\n                this.state = \"subscribed\";\r\n                break;\r\n            case 2: // Notify\r\n                this.networkManager.sendUpdates(() => {}, true);\r\n                break;\r\n            case 3: // disconnect\r\n                this.state = \"disconnected\";\r\n                break;\r\n            case 4: // keep alive response\r\n                break;\r\n        }\r\n    }\r\n\r\n    onError(error: Event) {\r\n        console.log(\"Fehler beim Notifier-Websocket\");\r\n    }\r\n\r\n}","export class CacheManager {\r\n    \r\n    fetchTemplateFromCache(databaseId: number, callback: (templateDump: Uint8Array) => void) {\r\n        if(databaseId == null){callback(null); return;}\r\n        let that = this;\r\n        if(!this.cacheAvailable()) callback(null);\r\n        this.getCache((cache) => {\r\n            cache.match(that.databaseIdToCacheIdentifier(databaseId)).then(\r\n                (value)=>{\r\n                    value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\r\n                })\r\n                .catch(() => callback(null));\r\n        })        \r\n    }\r\n\r\n    saveTemplateToCache(databaseId: number, templateDump: Uint8Array) {\r\n        if(!this.cacheAvailable()) return;\r\n        let that = this;\r\n        this.getCache((cache) => {\r\n            cache.put(that.databaseIdToCacheIdentifier(databaseId), new Response(templateDump));\r\n        })        \r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n    getCache(callback: (cache: Cache) => void) {\r\n        caches.open('my-cache').then(callback);\r\n    }\r\n\r\n    databaseIdToCacheIdentifier(databaseId: number): string {\r\n        return \"/onlineIdeTemplateDb\" + databaseId;\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax, PerformanceCollector } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, CollectPerformanceDataRequest, SetRepositorySecretRequest, SetRepositorySecretResponse, GetDatabaseRequest, getDatabaseResponse, DatabaseData, GetTemplateRequest, ObtainSqlTokenRequest, ObtainSqlTokenResponse, JAddStatementRequest, JAddStatementResponse, JRollbackStatementRequest, JRollbackStatementResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement, AccordionPanel } from \"../main/gui/Accordion.js\";\r\nimport {WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { NotifierClient } from \"./NotifierClient.js\";\r\nimport { CacheManager } from \"../tools/database/CacheManager.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    // sqlIdeURL = \"http://localhost:6500/servlet/\";\r\n    sqlIdeURL = \"https://www.sql-ide.de/servlet/\";\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 25;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 25;\r\n    forcedUpdateEvery: number = 25;\r\n    forcedUpdatesInARow: number = 0;\r\n\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    counterTillForcedUpdate: number;\r\n\r\n    notifierClient: NotifierClient;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                that.counterTillForcedUpdate--;\r\n                let doForceUpdate = that.counterTillForcedUpdate == 0;\r\n                if (doForceUpdate) {\r\n                    this.forcedUpdatesInARow++;\r\n                    that.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                    if (this.forcedUpdatesInARow > 50) {\r\n                        that.counterTillForcedUpdate = this.forcedUpdateEvery * 10;\r\n                    }\r\n                }\r\n\r\n\r\n                that.sendUpdates(() => { }, doForceUpdate, false);\r\n\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n            PerformanceCollector.sendDataToServer();\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    initializeNotifierClient(){\r\n        this.notifierClient = new NotifierClient(this.main, this);\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user == null || this.main.user.is_testuser) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let classDiagram = this.main.rightDiv?.classDiagram;\r\n        let userSettings = this.main.user.settings;\r\n\r\n        if (classDiagram?.dirty || this.main.userDataDirty) {\r\n\r\n            this.main.userDataDirty = false;\r\n            userSettings.classDiagram = classDiagram?.serialize();\r\n            this.sendUpdateUserSettings(() => { }, sendBeacon);\r\n            this.forcedUpdatesInARow = 0;\r\n        }\r\n\r\n        classDiagram.dirty = false;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n                this.forcedUpdatesInARow = 0;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    this.forcedUpdatesInARow = 0;\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 0,\r\n            currentWorkspaceId: this.main.currentWorkspace?.id,\r\n            getModifiedWorkspaces: sendIfNothingIsDirty\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty || this.errorHappened) {\r\n\r\n            if (sendBeacon) {\r\n                navigator.sendBeacon(\"sendUpdates\", JSON.stringify(request));\r\n            } else {\r\n\r\n                ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                    that.errorHappened = !response.success;\r\n                    if (!that.errorHappened) {\r\n\r\n                        // if (this.main.workspacesOwnerId == this.main.user.id) {\r\n                            if (response.workspaces != null) {\r\n                                that.updateWorkspaces(request, response);\r\n                            }\r\n                            if (response.filesToForceUpdate != null) {\r\n                                that.updateFiles(response.filesToForceUpdate);\r\n                            }\r\n\r\n                            if (callback != null) {\r\n                                callback();\r\n                                return;\r\n                            }\r\n                        // }\r\n                    } else {\r\n                        let message: string = \"Fehler beim Senden der Daten: \";\r\n                        if(response[\"message\"]) message += response[\"message\"];\r\n                        console.log(message);\r\n                    }\r\n                }, (message: string) => {\r\n                    that.errorHappened = true;\r\n                    console.log(\"Fehler beim Ajax-call: \" + message)\r\n                });\r\n\r\n            }\r\n\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(w: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            w.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let wd: WorkspaceData = w.getWorkspaceData(false);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            w.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            m.file.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\", null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 0\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 0\r\n            }\r\n\r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n\r\n        }, false);\r\n\r\n    }\r\n\r\n    sendSetSecret(repositoryId: number, read: boolean, write: boolean, callback: (response: SetRepositorySecretResponse) => void){\r\n        let request: SetRepositorySecretRequest = {repository_id: repositoryId, newSecretRead: read, newSecretWrite: write};\r\n\r\n        ajax(\"setRepositorySecret\", request, (response: SetRepositorySecretResponse) => {\r\n            callback(response)\r\n        }, (message) => {alert(message)});\r\n\r\n    }\r\n\r\n    sendCreateRepository(ws: Workspace, publish_to: number, repoName: string, repoDescription: string, callback: (error: string, repository_id?: number) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request = {\r\n                workspace_id: ws.id,\r\n                publish_to: publish_to,\r\n                name: repoName,\r\n                description: repoDescription\r\n            }\r\n\r\n            ajax(\"createRepository\", request, (response: { success: boolean, message?: string, repository_id?: number }) => {\r\n                ws.moduleStore.getModules(false).forEach(m => {\r\n                    m.file.is_copy_of_id = m.file.id;\r\n                    m.file.repository_file_version = 1;\r\n                })\r\n                ws.repository_id = response.repository_id;\r\n                ws.has_write_permission_to_repository = true;\r\n                callback(response.message, response.repository_id)\r\n            }, callback);\r\n\r\n        }, true);\r\n\r\n\r\n    }\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        if (sendBeacon) {\r\n            navigator.sendBeacon(\"updateUserSettings\", JSON.stringify(request));\r\n        } else {\r\n            ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n                if (response.success) {\r\n                    callback(null);\r\n                } else {\r\n                    callback(\"Netzwerkfehler!\");\r\n                }\r\n            }, callback);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    private updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (fileIdsSended.indexOf(fileId) < 0 && module.file.text != remoteFileData.text) {\r\n                        module.file.text = remoteFileData.text;\r\n                        module.model.setValue(remoteFileData.text);\r\n\r\n                        module.file.saved = true;\r\n                        module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                    }\r\n                    module.file.version = remoteFileData.version;\r\n                }\r\n\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    private updateFiles(filesFromServer: FileData[]) {\r\n        let fileIdToLocalModuleMap: Map<number, Module> = new Map();\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            for (let module of workspace.moduleStore.getModules(false)) {\r\n                fileIdToLocalModuleMap[module.file.id] = module;\r\n            }\r\n        }\r\n\r\n        for (let remoteFile of filesFromServer) {\r\n            let module = fileIdToLocalModuleMap[remoteFile.id];\r\n            if (module != null && module.file.text != remoteFile.text) {\r\n                module.file.text = remoteFile.text;\r\n                module.model.setValue(remoteFile.text);\r\n                module.file.saved = true;\r\n                module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                module.file.version = remoteFile.version;\r\n            }\r\n        }\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false): Workspace {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.repository_id = remoteWorkspace.repository_id;\r\n        w.has_write_permission_to_repository = remoteWorkspace.has_write_permission_to_repository;\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n        w.moduleStore.dirty = true;\r\n\r\n        if(remoteWorkspace.settings != null && remoteWorkspace.settings.startsWith(\"{\")){\r\n            let remoteWorkspaceSettings:WorkspaceSettings = JSON.parse(remoteWorkspace.settings);\r\n            w.settings = remoteWorkspaceSettings;\r\n            w.moduleStore.setAdditionalLibraries(remoteWorkspaceSettings.libraries);\r\n        }\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n        \r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: remoteWorkspace.repository_id == null ? \"workspace\" : \"repository\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        if(w.repository_id != null){\r\n            w.renderSynchronizeButton(panelElement);\r\n        }\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n        return w;\r\n    }\r\n\r\n    private createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: true,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            is_copy_of_id: remoteFile.is_copy_of_id,\r\n            repository_file_version: remoteFile.repository_file_version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n    fetchDatabaseAndToken(code: string, callback:(database: DatabaseData, token: string, error: string) => void){\r\n        let request: ObtainSqlTokenRequest = {code: code};\r\n\r\n        ajax(\"obtainSqlToken\", request, (response: ObtainSqlTokenResponse) => {\r\n            if (response.success) {\r\n                this.fetchDatabase(response.token, (database, error) => {\r\n                    callback(database, response.token, error);\r\n                })                \r\n            } else {\r\n                callback(null, null, response.message);\r\n            }\r\n        }, (errormessage) => {\r\n            callback(null, null, errormessage);\r\n        })\r\n    }\r\n\r\n    private fetchDatabase(token: string, callback: (database: DatabaseData, error: string) => void) {\r\n\r\n        let cacheManager: CacheManager = new CacheManager();\r\n\r\n        let request: GetDatabaseRequest = {\r\n            token: token\r\n        }\r\n\r\n        ajax(this.sqlIdeURL +  \"jGetDatabase\", request, (response: getDatabaseResponse) => {\r\n            if (response.success) {\r\n\r\n                let database = response.database;\r\n                \r\n                cacheManager.fetchTemplateFromCache(database.based_on_template_id, (templateDump: Uint8Array) => {\r\n\r\n                    if (templateDump != null) {\r\n                        //@ts-ignore\r\n                        database.templateDump = pako.inflate(templateDump);\r\n                        callback(database, null);\r\n                        return;\r\n                    } else {\r\n                        if (database.based_on_template_id == null) {\r\n                            callback(database, null);\r\n                            return\r\n                        }\r\n                        this.fetchTemplate(token, (template) => {\r\n                            if (template != null) {\r\n                                cacheManager.saveTemplateToCache(database.based_on_template_id, template);\r\n                                // @ts-ignore\r\n                                database.templateDump = pako.inflate(template);\r\n                                callback(database, null);\r\n                                return;\r\n                            } else {\r\n                                callback(null, \"Konnte das Template nicht laden.\");\r\n                                return;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                callback(null, \"Netzwerkfehler!\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    private fetchTemplate(token: string, callback: (template: Uint8Array) => void) {\r\n        let request: GetTemplateRequest = {\r\n            token: token\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: this.sqlIdeURL + \"jGetTemplate\",\r\n            xhrFields: { responseType: 'arraybuffer' },\r\n            success: function (response: any) {\r\n                callback(new Uint8Array(response));\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert(\"Konnte das Template nicht laden.\");\r\n                callback(null);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public addDatabaseStatement(token: string, version_before: number, statements: string[], \r\n        callback: (statementsBefore: string[], new_version: number, message: string) => void){\r\n\r\n        let request: JAddStatementRequest = {\r\n            token: token,\r\n            version_before: version_before,\r\n            statements: statements\r\n        }\r\n\r\n        ajax(this.sqlIdeURL +  \"jAddDatabaseStatement\", request, (response: JAddStatementResponse) => {\r\n            callback(response.statements_before, response.new_version, response.message);\r\n        }, (message) => {callback([], 0, message)})\r\n\r\n\r\n    }\r\n    \r\n    public rollbackDatabaseStatement(token: string, current_version: number, \r\n        callback: (message: string) => void){\r\n\r\n        let request: JRollbackStatementRequest = {\r\n            token: token,\r\n            current_version: current_version\r\n        }\r\n\r\n        ajax(this.sqlIdeURL +  \"jRollbackDatabaseStatement\", request, (response: JRollbackStatementResponse) => {\r\n            callback(response.message);\r\n        })\r\n\r\n\r\n    }\r\n    \r\n\r\n\r\n}","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    longConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordPrint,\r\n    keywordPrintln,\r\n    keywordClass,\r\n    keywordThis,\r\n    keywordSuper,\r\n    keywordNew,\r\n    keywordInterface,\r\n    keywordEnum,\r\n    keywordVoid,\r\n    keywordAbstract,\r\n    keywordPublic,\r\n    keywordProtected,\r\n    keywordPrivate,\r\n    keywordTransient,\r\n    keywordStatic,\r\n    keywordExtends,\r\n    keywordImplements,\r\n    keywordWhile,\r\n    keywordDo,\r\n    keywordFor,\r\n    keywordSwitch,\r\n    keywordCase,\r\n    keywordDefault,\r\n    keywordIf,\r\n    keywordThen,\r\n    keywordElse,\r\n    keywordReturn,\r\n    keywordBreak,\r\n    keywordContinue,\r\n    keywordNull,\r\n    keywordFinal,\r\n    keywordInstanceof,\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // operators\r\n    doubleMinus, doublePlus,\r\n\r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    equal, // ==\r\n    notEqual, // !=\r\n    assignment, // =\r\n    plusAssignment, // +=\r\n    minusAssignment, // -=\r\n    multiplicationAssignment, // *=\r\n    divisionAssignment, // /=\r\n    moduloAssignment, // /%=\r\n    and, or,   // &&, ||\r\n    ampersand, // &\r\n\r\n    ANDAssigment,\r\n    XORAssigment,\r\n    ORAssigment,\r\n    shiftLeftAssigment,\r\n    shiftRightAssigment,\r\n    shiftRightUnsignedAssigment,\r\n    OR, // |\r\n    XOR, // ^\r\n    // AND, // & see TokenType.ampersand above\r\n    tilde, // ~\r\n    shiftRightUnsigned, // >>>\r\n    shiftRight, // >>\r\n    shiftLeft, // <<\r\n\r\n    ternaryOperator,\r\n    colon, //:\r\n    ellipsis, // ...\r\n\r\n    not,    // !\r\n    \r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    // used by parser\r\n    negation, \r\n    referenceElement, // for arrays\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    binaryOp, // +, -, *, <=, ...\r\n    unaryOp, // ! and - \r\n    localVariableDeclaration,\r\n    heapVariableDeclaration,\r\n    pushLocalVariableToStack, // push value of a local variable to stack\r\n    popAndStoreIntoVariable,\r\n    pushFromHeapToStack, // push value from heap to stack\r\n    pushAttribute, // value of a attribute to stack\r\n    pushArrayLength, \r\n    pushConstant, // literal\r\n    pushStaticClassObject, // push class-Object to stack (which holds static attributes)\r\n    pushStaticAttribute, // push static attribute to stack\r\n    pushStaticAttributeIntrinsic, // push static attribute to stack\r\n    checkCast, // check if object may get casted to class or interface\r\n    castValue, // cast value on top of stack to other type\r\n    selectArrayElement, // select Element from Array (e.g. a[20])\r\n    callMethod,\r\n    callMainMethod,\r\n    processPostConstructorCallbacks, \r\n    callInputMethod, // Methods of Input class\r\n    makeEllipsisArray,\r\n    decreaseStackpointer, // decrease stack-pointer, nothing else\r\n    initStackframe,\r\n    closeStackframe,\r\n    increaseSpaceForLocalVariables,\r\n    return,\r\n    newObject,\r\n    jumpIfFalse,\r\n    jumpIfTrue,\r\n    jumpIfFalseAndLeaveOnStack,\r\n    jumpIfTrueAndLeaveOnStack,\r\n    jumpAlways,\r\n    noOp, // acts as jump destination\r\n    incrementDecrementBefore, // ++i, --i\r\n    incrementDecrementAfter, // i++, i--\r\n    programEnd,\r\n    beginArray, // push empty array to stack\r\n    addToArray, // pop element form stack and add it to array (on second stack position)\r\n    pushEmptyArray, // push multidimensional empty array to stack\r\n    forLoopOverCollection,\r\n\r\n    // additional AST node types\r\n    type, // e.g. int[][]\r\n    typeParameter, // e.g. <E extends String implements Comparable<E>>\r\n    attributeDeclaration,\r\n    methodDeclaration,\r\n    parameterDeclaration,\r\n    superConstructorCall,\r\n    constructorCall,       // call constructor with this() inside another constructor\r\n    newArray,\r\n    arrayInitialization,\r\n    print,\r\n    println, \r\n    pushEnumValue,\r\n    initializeEnumValue, \r\n    scopeNode,\r\n    returnIfDestroyed,\r\n    extendedForLoopInit,\r\n    extendedForLoopCheckCounterAndGetElement,\r\n    setPauseDuration,\r\n    pause\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordClass]: \"class\",\r\n    [TokenType.keywordThis]: \"this\",\r\n    [TokenType.keywordSuper]: \"super\",\r\n    [TokenType.keywordNew]: \"new\",\r\n    [TokenType.keywordInterface]: \"interface\",\r\n    [TokenType.keywordEnum]: \"enum\",\r\n    [TokenType.keywordVoid]: \"void\",\r\n    [TokenType.keywordAbstract]: \"abstract\",\r\n    [TokenType.keywordPublic]: \"public\",\r\n    [TokenType.keywordProtected]: \"protected\",\r\n    [TokenType.keywordPrivate]: \"private\",\r\n    [TokenType.keywordTransient]: \"transient\",\r\n    [TokenType.keywordStatic]: \"static\",\r\n    [TokenType.keywordExtends]: \"extends\",\r\n    [TokenType.keywordImplements]: \"implements\",\r\n    [TokenType.keywordWhile]: \"while\",\r\n    [TokenType.keywordDo]: \"do\",\r\n    [TokenType.keywordFor]: \"for\",\r\n    [TokenType.keywordSwitch]: \"switch\",\r\n    [TokenType.keywordCase]: \"case\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordThen]: \"then\",\r\n    [TokenType.keywordElse]: \"else\",\r\n    [TokenType.keywordReturn]: \"return\",\r\n    [TokenType.keywordBreak]: \"break\",\r\n    [TokenType.keywordContinue]: \"continue\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordFinal]: \"final\",\r\n    [TokenType.keywordInstanceof]: \"instanceof\",\r\n    [TokenType.keywordPrint]: \"print\",\r\n    [TokenType.keywordPrintln]: \"println\",\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.doubleMinus]: \"--\", \r\n    [TokenType.doublePlus]: \"++\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.equal]: \"==\", // ==\r\n    [TokenType.notEqual]: \"!=\", // !=\r\n    [TokenType.assignment]: \"=\", // =\r\n    [TokenType.plusAssignment]: \"+=\", // +=\r\n    [TokenType.minusAssignment]: \"-=\", // -=\r\n    [TokenType.multiplicationAssignment]: \"*=\", // *=\r\n    [TokenType.divisionAssignment]: \"/=\", // /=\r\n    [TokenType.moduloAssignment]: \"%=\",\r\n    [TokenType.ampersand]: \"&\", \r\n    [TokenType.and]: \"&&\", \r\n    [TokenType.or]: \"||\", \r\n    [TokenType.not]: \"!\", \r\n\r\n    [TokenType.ANDAssigment]: \"&=\",\r\n    [TokenType.XORAssigment]: \"^=\",\r\n    [TokenType.ORAssigment]: \"|=\",\r\n    [TokenType.shiftLeftAssigment]: \"<<=\",\r\n    [TokenType.shiftRightAssigment]: \">>=\",\r\n    [TokenType.shiftRightUnsignedAssigment]: \">>>=\",\r\n    // [TokenType.AND]: \"&\", \r\n    [TokenType.OR]: \"|\",\r\n    [TokenType.XOR]: \"^\",\r\n    [TokenType.tilde]: \"~\",\r\n    [TokenType.shiftLeft]: \"<<\",\r\n    [TokenType.shiftRight]: \">>\",\r\n    [TokenType.shiftRightUnsigned]: \">>>\",\r\n\r\n\r\n    [TokenType.ternaryOperator]: \"?\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n\r\n    [TokenType.colon]: \":\", // ;\r\n    [TokenType.ellipsis]: \"...\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.assignment,\r\n    \"&\": TokenType.and,\r\n    \"|\": TokenType.or,\r\n    \"!\": TokenType.not,\r\n    \"?\": TokenType.ternaryOperator,\r\n\r\n    \"^\": TokenType.XOR,\r\n    \"~\": TokenType.tilde,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    '...': TokenType.ellipsis,\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"class\": TokenType.keywordClass,\r\n    \"this\": TokenType.keywordThis,\r\n    \"super\": TokenType.keywordSuper,\r\n    \"new\": TokenType.keywordNew,\r\n    \"interface\": TokenType.keywordInterface,\r\n    \"enum\": TokenType.keywordEnum,\r\n    \"void\": TokenType.keywordVoid,\r\n    \"abstract\": TokenType.keywordAbstract,\r\n    \"public\": TokenType.keywordPublic,\r\n    \"protected\": TokenType.keywordProtected,\r\n    \"private\": TokenType.keywordPrivate,\r\n    \"transient\": TokenType.keywordTransient,\r\n    \"static\": TokenType.keywordStatic,\r\n    \"extends\": TokenType.keywordExtends,\r\n    \"implements\": TokenType.keywordImplements,\r\n    \"while\": TokenType.keywordWhile,\r\n    \"do\": TokenType.keywordDo,\r\n    \"for\": TokenType.keywordFor,\r\n    \"switch\": TokenType.keywordSwitch,\r\n    \"case\": TokenType.keywordCase,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"if\": TokenType.keywordIf,\r\n    \"then\": TokenType.keywordThen,\r\n    \"else\": TokenType.keywordElse,\r\n    \"return\": TokenType.keywordReturn,\r\n    \"break\": TokenType.keywordBreak,\r\n    \"continue\": TokenType.keywordContinue,\r\n    \"null\": TokenType.keywordNull,\r\n    \"final\": TokenType.keywordFinal,\r\n    \"instanceof\": TokenType.keywordInstanceof,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"print\": TokenType.keywordPrint,\r\n    \"println\": TokenType.keywordPrintln,\r\n    // \"int\": TokenType.keywordInt,\r\n    // \"boolean\": TokenType.keywordBoolean,\r\n    // \"String\": TokenType.keywordString,\r\n    // \"float\": TokenType.keywordFloat,\r\n    // \"char\": TokenType.keywordChar\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\nimport { text } from \"express\";\r\nimport { ColorLexer } from \"./ColorLexer.js\";\r\nimport { ColorHelper } from \"../../runtimelibrary/graphics/ColorHelper.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n\r\n    errorList: Error[];\r\n    colorInformation: monaco.languages.IColorInformation[];\r\n    colorLexer: ColorLexer = new ColorLexer();\r\n\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n    colorIndices: number[];\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string, colorInformation: monaco.languages.IColorInformation[] } {\r\n\r\n        this.input = input.replace(\"\\uc2a0\", \" \");\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.colorInformation = [];\r\n        this.colorIndices = []; // indices of identifier 'Color' inside tokenList\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null, colorInformation: [] };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        this.processColorIndices();\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError,\r\n            colorInformation: this.colorInformation\r\n        };\r\n\r\n    }\r\n\r\n    processColorIndices() {\r\n\r\n        for (let colorIndex of this.colorIndices) {\r\n\r\n            // new Color(100, 100, 100, 0.1)\r\n            // new Color(100, 100, 100)\r\n            // Color.red\r\n\r\n            let colorToken = this.tokenList[colorIndex];\r\n            let previousToken = this.getLastNonSpaceToken(colorIndex)\r\n\r\n            if (previousToken?.tt == TokenType.keywordNew) {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 7);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.leftBracket, TokenType.integerConstant, TokenType.comma,\r\n                TokenType.integerConstant, TokenType.comma, TokenType.integerConstant,\r\n                TokenType.rightBracket])) {\r\n                    this.colorInformation.push({\r\n                        color: {\r\n                            red: <number>nextTokens[1].value / 255,\r\n                            green: <number>nextTokens[3].value / 255,\r\n                            blue: <number>nextTokens[5].value / 255,\r\n                            alpha: 1\r\n                        },\r\n                        range: {\r\n                            startLineNumber: previousToken.position.line, startColumn: previousToken.position.column,\r\n                            endLineNumber: nextTokens[6].position.line, endColumn: nextTokens[6].position.column + 1\r\n                        }\r\n                    })\r\n                }\r\n            } else {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 2);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.dot, TokenType.identifier])) {\r\n                    let colorIdentifier = <string>nextTokens[1].value;\r\n                    let colorValue = ColorHelper.predefinedColors[colorIdentifier];\r\n                    if (colorValue != null) {\r\n                        this.colorInformation.push({\r\n                            color: {\r\n                                red: (colorValue >> 16) / 255,\r\n                                green: ((colorValue >> 8) & 0xff) / 255,\r\n                                blue: (colorValue & 0xff) / 255,\r\n                                alpha: 1\r\n                            }, range: {\r\n                                startLineNumber: colorToken.position.line, startColumn: colorToken.position.column,\r\n                                endLineNumber: nextTokens[1].position.line, endColumn: nextTokens[1].position.column + colorIdentifier.length\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    compareTokenTypes(tokenList: Token[], tokenTypeList: TokenType[]) {\r\n        if (tokenList.length != tokenTypeList.length) return false;\r\n        for (let i = 0; i < tokenList.length; i++) {\r\n            if (tokenList[i].tt != tokenTypeList[i]) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getNextNonSpaceTokens(tokenIndex: number, count: number): Token[] {\r\n        let tokens: Token[] = [];\r\n        let d = tokenIndex;\r\n        while (tokens.length < count && d + 1 < this.tokenList.length) {\r\n            let foundToken = this.tokenList[d + 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                tokens.push(foundToken);\r\n            }\r\n            d++;\r\n        }\r\n\r\n        return tokens;\r\n\r\n    }\r\n\r\n    getLastNonSpaceToken(tokenIndex: number) {\r\n        let d = tokenIndex;\r\n        while (d - 1 > 0) {\r\n            let foundToken = this.tokenList[d - 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                return foundToken;\r\n            }\r\n            d--;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.and:\r\n                    if (this.nextChar == \"&\") {\r\n                        this.pushToken(TokenType.and, \"&&\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ANDAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.ampersand, \"&\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.or:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ORAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.OR, \"|\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.XOR:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.XORAssigment, \"^=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.XOR, \"^\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.multiplication:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.multiplicationAssignment, \"*=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.multiplication, \"*\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.not:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.notEqual, \"!=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.not, \"!\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.divisionAssignment, \"/=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    } else if (this.nextChar == '/') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.modulo:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.moduloAssignment, \"%=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.modulo, \"/\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.plus:\r\n                    if (this.nextChar == '+') {\r\n                        this.pushToken(TokenType.doublePlus, '++');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.plusAssignment, '+=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.plus, '+');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '<') {\r\n                        this.lexShiftLeft();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '>') {\r\n                        this.lexShiftRight();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.dot:\r\n                    if (this.nextChar == '.' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == \".\") {\r\n                        this.pushToken(TokenType.ellipsis, '...');\r\n                        this.next();\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.dot, '.');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n\r\n                case TokenType.assignment:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.equal, '==');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.assignment, '=');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.minus:\r\n                    if (this.nextChar == '-') {\r\n                        this.pushToken(TokenType.doubleMinus, '--');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    }\r\n                    else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.minusAssignment, '-=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexCharacterConstant();\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    // triple double quote?\r\n                    if (this.nextChar == \"\\\"\" && this.pos + 3 < this.input.length && this.input[this.pos + 2] == \"\\\"\") {\r\n                        this.lexTripleQuoteStringConstant();\r\n                    } else {\r\n                        this.lexStringConstant();\r\n                    }\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n    lexShiftRight() {\r\n        this.next(); // Consume first > of >>\r\n\r\n        if (this.nextChar == \">\") {\r\n            this.lexShiftRightUnsigned();\r\n        } else if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightAssigment, \">>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRight, \">>\");\r\n            this.next(); // Consume second >\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftRightUnsigned() {\r\n        this.next(); // Consume second > of >>>\r\n\r\n        if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightUnsignedAssigment, \">>>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRightUnsigned, \">>>\");\r\n            this.next(); // Consume next\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftLeft() {\r\n        this.next(); // Consume first < of <<\r\n\r\n        if (this.nextChar == '=') {\r\n            this.pushToken(TokenType.shiftLeftAssigment, \"<<=\")\r\n            this.next(); // Consume second <\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftLeft, \"<<\")\r\n            this.next(); // Consume second <\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                char = this.parseStringLiteralEscapeCharacter();   \r\n                text += char;\r\n                continue;             \r\n            } else if (char == '\"') {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n\r\n        let color = this.colorLexer.getColorInfo(text);\r\n\r\n        if (color != null) {\r\n            this.colorInformation.push({\r\n                color: color,\r\n                range: { startLineNumber: line, endLineNumber: line, startColumn: column + 1, endColumn: this.column - 1 }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    lexTripleQuoteStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let StringLines: string[] = [];\r\n\r\n        // skip \"\"\" and all characters in same line\r\n\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n\r\n        let restOfLine: string = \"\";\r\n        while ([\"\\n\", \"\\r\"].indexOf(this.currentChar) < 0 && this.currentChar != endChar) {\r\n            restOfLine += this.currentChar;\r\n            this.next();\r\n        }\r\n\r\n        restOfLine = restOfLine.trim();\r\n        if(restOfLine.length > 0 && !restOfLine.startsWith(\"//\") && !restOfLine.startsWith(\"/*\")){\r\n            this.pushError('Eine Java-Multiline-Stringkonstante beginnt immer mit \"\"\" und einem nachfolgenden Zeilenumbruch. Alle nach \"\"\" folgenden Zeichen werden überlesen!', restOfLine.length + 3);\r\n        }\r\n\r\n        if(this.currentChar == '\\r'){\r\n            this.next();\r\n        }\r\n\r\n        if(this.currentChar == '\\n'){\r\n            this.next();\r\n            this.line++;\r\n            this.column = 1;\r\n        }\r\n\r\n        let currentStringLine: string = \"\";\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                currentStringLine += this.parseStringLiteralEscapeCharacter();\r\n            } else if (char == '\"' && this.nextChar == '\"' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == '\"') {\r\n                this.next();\r\n                this.next();\r\n                this.next();\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else if (char == endChar) {\r\n                let length = 0;\r\n                for(let s of StringLines) length += s.length;\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Textende erreicht.',length, \"error\", line, column);\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else \r\n            if(char == \"\\r\"){\r\n                this.next();\r\n            } else\r\n            if (char == \"\\n\"){\r\n                StringLines.push(currentStringLine);\r\n                currentStringLine = \"\";\r\n                this.line++;\r\n                this.column = 1;\r\n                this.next();\r\n                continue;\r\n            } else {\r\n                currentStringLine += char;\r\n            }\r\n            this.next();\r\n        }\r\n\r\n        if(StringLines.length == 0) return;\r\n        let lastLine = StringLines.pop();\r\n        let indent = 0;\r\n        while(lastLine.length > indent && lastLine.charAt(indent) == \" \"){\r\n            indent++;\r\n        }\r\n\r\n        let text: string = \"\"; \r\n        text = StringLines.map(s => s.substring(indent)).join(\"\\n\");\r\n\r\n        this.pushToken(TokenType.stringConstant, text, this.line, this.column, text.length + 2);\r\n\r\n    }\r\n\r\n    parseStringLiteralEscapeCharacter(): string {\r\n        this.next(); // skip \\\r\n        if(this.currentChar == \"u\"){\r\n            let hex: string = \"\";\r\n            this.next();\r\n            while(\"abcdef0123456789\".indexOf(this.currentChar) >= 0 && hex.length < 4){\r\n                hex += this.currentChar;\r\n                this.next();\r\n            }\r\n            if(hex.length < 4){\r\n                this.pushError('Die Escape-Sequenz \\\\u' + hex + ' gibt es nicht.', 1 + hex.length);\r\n                return \"\";\r\n            } else {\r\n                return String.fromCodePoint(parseInt(hex,16));\r\n            }\r\n        } else if(EscapeSequenceList[this.currentChar] != null){\r\n            let c = EscapeSequenceList[this.currentChar];\r\n            this.next();\r\n            return c;\r\n        } else {\r\n            this.pushError('Die Escape-Sequenz \\\\' + this.currentChar + ' gibt es nicht.', 2);\r\n            this.next();\r\n            return \"\";\r\n        }\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"//\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        } else if (this.currentChar == '+') {\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt = TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n        if (radix == 16 && this.column - column == 8) {\r\n            this.colorInformation.push({\r\n                color: {\r\n                    red: (value >> 16) / 255,\r\n                    green: ((value >> 8) & 0xff) / 255,\r\n                    blue: (value & 0xff) / 255,\r\n                    alpha: 1\r\n                },\r\n                range: {\r\n                    startLineNumber: line, endLineNumber: line, startColumn: column, endColumn: this.column\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n\r\n        this.next(); // consume @\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                case TokenType.keywordPrint:\r\n                case TokenType.keywordPrintln:\r\n                    if (this.nonSpaceLastTokenType == TokenType.dot) {\r\n                        this.pushToken(TokenType.identifier, text, line, column);\r\n                    } else {\r\n                        this.pushToken(tt, text, line, column);\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (text == 'Color') {\r\n            this.colorIndices.push(this.tokenList.length);\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","export class ColorLexer {\r\n    hexColorRegExp = /^#([a-fA-F0-9]{6})$/;\r\n    rgbColorRegExp = /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/;\r\n    rgbaColorRegExp = /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d*(?:\\.\\d+)?)\\)$/;\r\n\r\n    getColorInfo(s: string): monaco.languages.IColor {\r\n\r\n        if(s.startsWith('#')){\r\n            let m1 = s.match(this.hexColorRegExp);\r\n            if(m1 == null) return null;\r\n\r\n            let value = Number.parseInt(m1[1], 16);\r\n            return {\r\n                red: (value >> 16)/255,\r\n                green: ((value >> 8) & 0xff) / 255,\r\n                blue: (value & 0xff)/255,\r\n                alpha: 1\r\n            }\r\n\r\n        } else if(s.startsWith('rgb')){\r\n\r\n            if(s.startsWith('rgba')){\r\n                let m2 = s.match(this.rgbaColorRegExp);\r\n                if(m2 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m2[1])/255,\r\n                    green: Number.parseInt(m2[2]) / 255,\r\n                    blue: Number.parseInt(m2[3])/255,\r\n                    alpha: Number.parseFloat(m2[4])\r\n                }\r\n            } else {\r\n                let m3 = s.match(this.rgbColorRegExp);\r\n                if(m3 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m3[1])/255,\r\n                    green: Number.parseInt(m3[2]) / 255,\r\n                    blue: Number.parseInt(m3[3])/255,\r\n                    alpha: 1\r\n                }\r\n    \r\n\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n}","export class ColorHelper {\r\n\r\n    static predefinedColors = {\r\n        \"aliceblue\": 0xF0F8FF,\r\n        \"antiquewhite\": 0xFAEBD7,\r\n        \"aqua\": 0x00FFFF,\r\n        \"aquamarine\": 0x7FFFD4,\r\n        \"azure\": 0xF0FFFF,\r\n        \"beige\": 0xF5F5DC,\r\n        \"bisque\": 0xFFE4C4,\r\n        \"black\": 0x000000,\r\n        \"blanchedAlmond\": 0xFFEBCD,\r\n        \"blue\": 0x0000FF,\r\n        \"blueviolet\": 0x8A2BE2,\r\n        \"brown\": 0xA52A2A,\r\n        \"burlywood\": 0xDEB887,\r\n        \"cadetblue\": 0x5F9EA0,\r\n        \"chartreuse\": 0x7FFF00,\r\n        \"chocolate\": 0xD2691E,\r\n        \"coral\": 0xFF7F50,\r\n        \"cornflowerblue\": 0x6495ED,\r\n        \"cornsilk\": 0xFFF8DC,\r\n        \"crimson\": 0xDC143C,\r\n        \"cyan\": 0x00FFFF,\r\n        \"darkblue\": 0x00008B,\r\n        \"darkcyan\": 0x008B8B,\r\n        \"darkgoldenrod\": 0xB8860B,\r\n        \"darkgray\": 0xA9A9A9,\r\n        \"darkgrey\": 0xA9A9A9,\r\n        \"darkgreen\": 0x006400,\r\n        \"darkkhaki\": 0xBDB76B,\r\n        \"darkmagenta\": 0x8B008B,\r\n        \"darkolivegreen\": 0x556B2F,\r\n        \"darkorange\": 0xFF8C00,\r\n        \"darkorchid\": 0x9932CC,\r\n        \"darkred\": 0x8B0000,\r\n        \"darksalmon\": 0xE9967A,\r\n        \"darkseagreen\": 0x8FBC8F,\r\n        \"darkslateblue\": 0x483D8B,\r\n        \"darkslategray\": 0x2F4F4F,\r\n        \"darkslategrey\": 0x2F4F4F,\r\n        \"darkturquoise\": 0x00CED1,\r\n        \"darkviolet\": 0x9400D3,\r\n        \"deeppink\": 0xFF1493,\r\n        \"deepskyblue\": 0x00BFFF,\r\n        \"dimgray\": 0x696969,\r\n        \"dimgrey\": 0x696969,\r\n        \"dodgerblue\": 0x1E90FF,\r\n        \"firebrick\": 0xB22222,\r\n        \"floralwhite\": 0xFFFAF0,\r\n        \"forestgreen\": 0x228B22,\r\n        \"fuchsia\": 0xFF00FF,\r\n        \"gainsboro\": 0xDCDCDC,\r\n        \"ghostwhite\": 0xF8F8FF,\r\n        \"gold\": 0xFFD700,\r\n        \"goldenrod\": 0xDAA520,\r\n        \"gray\": 0x808080,\r\n        \"grau\": 0x808080,\r\n        \"green\": 0x008000,\r\n        \"greenyellow\": 0xADFF2F,\r\n        \"honeydew\": 0xF0FFF0,\r\n        \"hotpink\": 0xFF69B4,\r\n        \"indianred\": 0xCD5C5C,\r\n        \"indigo\": 0x4B0082,\r\n        \"ivory\": 0xFFFFF0,\r\n        \"khaki\": 0xF0E68C,\r\n        \"lavender\": 0xE6E6FA,\r\n        \"lavenderblush\": 0xFFF0F5,\r\n        \"lawngreen\": 0x7CFC00,\r\n        \"lemonchiffon\": 0xFFFACD,\r\n        \"lightblue\": 0xADD8E6,\r\n        \"lightcoral\": 0xF08080,\r\n        \"lightcyan\": 0xE0FFFF,\r\n        \"lightgoldenrodyellow\": 0xFAFAD2,\r\n        \"lightgray\": 0xD3D3D3,\r\n        \"lightgrey\": 0xD3D3D3,\r\n        \"lightgreen\": 0x90EE90,\r\n        \"lightpink\": 0xFFB6C1,\r\n        \"lightsalmon\": 0xFFA07A,\r\n        \"lightseagreen\": 0x20B2AA,\r\n        \"lightskyblue\": 0x87CEFA,\r\n        \"lightslategray\": 0x778899,\r\n        \"lightslategrey\": 0x778899,\r\n        \"lightsteelblue\": 0xB0C4DE,\r\n        \"lightyellow\": 0xFFFFE0,\r\n        \"lime\": 0x00FF00,\r\n        \"limegreen\": 0x32CD32,\r\n        \"linen\": 0xFAF0E6,\r\n        \"magenta\": 0xFF00FF,\r\n        \"maroon\": 0x800000,\r\n        \"mediumaquamarine\": 0x66CDAA,\r\n        \"mediumblue\": 0x0000CD,\r\n        \"mediumorchid\": 0xBA55D3,\r\n        \"mediumpurple\": 0x9370DB,\r\n        \"mediumseagreen\": 0x3CB371,\r\n        \"mediumslateblue\": 0x7B68EE,\r\n        \"mediumspringgreen\": 0x00FA9A,\r\n        \"mediumturquoise\": 0x48D1CC,\r\n        \"mediumvioletred\": 0xC71585,\r\n        \"midnightblue\": 0x191970,\r\n        \"mintcream\": 0xF5FFFA,\r\n        \"mistyrose\": 0xFFE4E1,\r\n        \"moccasin\": 0xFFE4B5,\r\n        \"navajowhite\": 0xFFDEAD,\r\n        \"navy\": 0x000080,\r\n        \"oldLace\": 0xFDF5E6,\r\n        \"olive\": 0x808000,\r\n        \"olivedrab\": 0x6B8E23,\r\n        \"orange\": 0xFFA500,\r\n        \"orangered\": 0xFF4500,\r\n        \"orchid\": 0xDA70D6,\r\n        \"palegoldenrod\": 0xEEE8AA,\r\n        \"palegreen\": 0x98FB98,\r\n        \"paleturquoise\": 0xAFEEEE,\r\n        \"palevioletred\": 0xDB7093,\r\n        \"papayawhip\": 0xFFEFD5,\r\n        \"peachpuff\": 0xFFDAB9,\r\n        \"peru\": 0xCD853F,\r\n        \"pink\": 0xFFC0CB,\r\n        \"plum\": 0xDDA0DD,\r\n        \"powderblue\": 0xB0E0E6,\r\n        \"purple\": 0x800080,\r\n        \"rebeccapurple\": 0x663399,\r\n        \"red\": 0xFF0000,\r\n        \"rosybrown\": 0xBC8F8F,\r\n        \"royalblue\": 0x4169E1,\r\n        \"saddlebrown\": 0x8B4513,\r\n        \"salmon\": 0xFA8072,\r\n        \"sandybrown\": 0xF4A460,\r\n        \"sand\": 0xF4A460,\r\n        \"seagreen\": 0x2E8B57,\r\n        \"seashell\": 0xFFF5EE,\r\n        \"sienna\": 0xA0522D,\r\n        \"silver\": 0xC0C0C0,\r\n        \"skyblue\": 0x87CEEB,\r\n        \"slateblue\": 0x6A5ACD,\r\n        \"slategray\": 0x708090,\r\n        \"slategrey\": 0x708090,\r\n        \"snow\": 0xFFFAFA,\r\n        \"springgreen\": 0x00FF7F,\r\n        \"steelblue\": 0x4682B4,\r\n        \"tan\": 0xD2B48C,\r\n        \"teal\": 0x008080,\r\n        \"thistle\": 0xD8BFD8,\r\n        \"tomato\": 0xFF6347,\r\n        \"turquoise\": 0x40E0D0,\r\n        \"violet\": 0xEE82EE,\r\n        \"wheat\": 0xF5DEB3,\r\n        \"white\": 0xFFFFFF,\r\n        \"whitesmoke\": 0xF5F5F5,\r\n        \"yellow\": 0xFFFF00,\r\n        \"yellowgreen\": 0x9ACD32,\r\n    };\r\n\r\n    static intColorToHexRGB(color: number) {\r\n        if(color == null){\r\n            return \"---\";\r\n        } else {\r\n            let s: string = color.toString(16);\r\n            while (s.length < 6) s = \"0\" + s;\r\n            return \"#\" + s;\r\n        }\r\n    }\r\n\r\n    static intColorToRGB(color: number) {\r\n        if(color == null) {return \"---\";} else\r\n        {return \"rgb(\" + ((color & 0xff0000) >> 16) + \", \" + ((color & 0xff00) >> 8) + \", \" + (color & 0xff) + \")\";}\r\n    }\r\n\r\n    static parseColorToOpenGL(color: string): { color: number, alpha: number } {\r\n\r\n        if(color == null){\r\n            return {\r\n                color: null,\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        let c = this.predefinedColors[color];\r\n        if (c != null) return { color: c, alpha: 1 };\r\n\r\n        // see https://stackoverflow.com/questions/11068240/what-is-the-most-efficient-way-to-parse-a-css-color-in-javascript\r\n\r\n        let m2 = color.match(/^#([0-9a-f]{6})$/i);\r\n        if (m2 && m2.length > 1) {\r\n            let m = m2[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: 1\r\n                };\r\n            }\r\n        }\r\n\r\n        let m3 = color.match(/^#([0-9a-f]{8})$/i);\r\n        if (m3 && m3.length > 1){\r\n            let m = m3[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: parseInt(m.substr(6, 2), 16) / 0xff\r\n                };\r\n            }\r\n        }\r\n\r\n        let m1 = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        m1 = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+\\.?\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: parseFloat(m1[4]) \r\n            };\r\n        }\r\n\r\n        return { color: 0xff0000, alpha: 1 };\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { ProgramStackElement } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { LabelManager } from \"../parser/LabelManager.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { SymbolTable } from \"../parser/SymbolTable.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { nullType, stringPrimitiveType, voidPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\n\r\nexport enum Visibility { public, protected, private };\r\n\r\nvar booleanPrimitiveTypeCopy: any;\r\nexport function setBooleanPrimitiveTypeCopy(bpt: Type) {\r\n    booleanPrimitiveTypeCopy = bpt;\r\n}\r\n\r\n// Used for class diagrams:\r\nexport type CompostionData = { klass: Klass | Interface, multiples: boolean, identifier: string };\r\n\r\n/**\r\n * For Generic types\r\n */\r\nexport type TypeVariable = {\r\n    identifier: string;\r\n    type: Klass;\r\n    scopeFrom: TextPosition;\r\n    scopeTo: TextPosition;\r\n}\r\n\r\n\r\nexport class Klass extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Klass;\r\n    isTypeVariable: boolean = false;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    private static dontInheritFrom: string[] = [\"Integer\", \"Float\", \"Double\", \"Boolean\", \"Character\", \"String\", \"Shape\", \"FilledShape\"];\r\n\r\n    baseClass: Klass;\r\n    firstPassBaseClass: string;\r\n\r\n    staticClass: StaticClass;\r\n\r\n    module: Module;\r\n\r\n    visibility: Visibility;\r\n\r\n    implements: Interface[] = [];\r\n    firstPassImplements: string[] = [];\r\n\r\n    isAbstract: boolean = false;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    postConstructorCallbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    public symbolTable: SymbolTable;\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n\r\n        this.documentation = documentation;\r\n\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n        this.visibility = Visibility.public;\r\n\r\n        this.staticClass = new StaticClass(this);\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    getNonGenericClass(): Klass {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    implementsInterface(i: Interface): boolean {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                if (i1.getThisOrExtendedInterface(i.getNonGenericIdentifier()) != null) return true;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getImplementedInterface(identifier: string): Interface {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                let i2: Interface = i1.getThisOrExtendedInterface(identifier);\r\n                if (i2 != null) return i2;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    registerUsedSystemClasses(usedSystemClasses: (Klass | Interface)[]) {\r\n        if (this.baseClass != null && this.baseClass.module != null && this.baseClass.module.isSystemModule &&\r\n            usedSystemClasses.indexOf(this.baseClass) < 0) {\r\n            usedSystemClasses.push(this.baseClass);\r\n        }\r\n        for (let cd of this.getCompositeData()) {\r\n            if (cd.klass != null && cd.klass.module != null && cd.klass.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(cd.klass) < 0) {\r\n                usedSystemClasses.push(cd.klass);\r\n            }\r\n        }\r\n        for (let interf of this.implements) {\r\n            if (interf != null && interf.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(interf) < 0) {\r\n                usedSystemClasses.push(interf);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCompositeData(): CompostionData[] {\r\n\r\n        let cd: CompostionData[] = [];\r\n        let cdMap: Map<Klass | Interface, CompostionData> = new Map();\r\n\r\n        for (let a of this.attributes) {\r\n            if (a.type instanceof Klass || a.type instanceof Interface) {\r\n                let cda = cdMap.get(a.type);\r\n                if (cda == null) {\r\n                    cda = {\r\n                        klass: a.type,\r\n                        multiples: false,\r\n                        identifier: a.identifier\r\n                    };\r\n                    cdMap.set(a.type, cda);\r\n                    cd.push(cda);\r\n                } else {\r\n                    cda.identifier += \", \" + a.identifier;\r\n                }\r\n            } else {\r\n                let type: Type = a.type;\r\n                while (type instanceof ArrayType) {\r\n                    type = type.arrayOfType;\r\n                }\r\n                if (type instanceof Klass || type instanceof Interface) {\r\n                    let cda = cdMap.get(type);\r\n                    if (cda == null) {\r\n                        cda = {\r\n                            klass: type,\r\n                            multiples: true,\r\n                            identifier: a.identifier\r\n                        };\r\n                        cdMap.set(type, cda);\r\n                        cd.push(cda);\r\n                    } else {\r\n                        cda.identifier += \", \" + a.identifier;\r\n                        cda.multiples = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return cd;\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n        if (this.staticClass != null) {\r\n            this.staticClass.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getPostConstructorCallbacks(): ((r: RuntimeObject) => void)[] {\r\n        let c: Klass = this;\r\n        let callbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n        while (c != null) {\r\n            if (c.postConstructorCallbacks != null) {\r\n                if (callbacks == null) { callbacks = c.postConstructorCallbacks; }\r\n                else {\r\n                    callbacks = callbacks.concat(c.postConstructorCallbacks);\r\n                }\r\n            }\r\n            c = c.baseClass;\r\n        }\r\n        return callbacks;\r\n    }\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange, currentMethod?: Method): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier + \"\",\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            if (method.isConstructor) {\r\n                if (currentMethod?.isConstructor && currentMethod != method && this.baseClass.methods.indexOf(method) >= 0) {\r\n                    this.pushSuperCompletionItem(itemList, method, leftBracketAlreadyThere, rangeToReplace);\r\n                    continue;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        itemList = itemList.concat(this.staticClass.getCompletionItems(visibilityUpTo,\r\n            leftBracketAlreadyThere, identifierAndBracketAfterCursor,\r\n            rangeToReplace));\r\n\r\n        return itemList;\r\n    }\r\n\r\n    pushSuperCompletionItem(itemList: monaco.languages.CompletionItem[], method: Method, leftBracketAlreadyThere: boolean,\r\n        rangeToReplace: monaco.IRange) {\r\n        itemList.push({\r\n            label: method.getCompletionLabel().replace(method.identifier, \"super\"),\r\n            filterText: \"super\",\r\n            command: {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            },\r\n            kind: monaco.languages.CompletionItemKind.Method,\r\n            insertText: method.getCompletionSnippet(leftBracketAlreadyThere).replace(method.identifier, \"super\"),\r\n            range: rangeToReplace,\r\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n            documentation: method.documentation == null ? undefined : {\r\n                value: method.documentation\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    pushStaticInitializationPrograms(programStack: ProgramStackElement[]) {\r\n\r\n        if (this.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            programStack.push({\r\n                program: this.staticClass.attributeInitializationProgram,\r\n                programPosition: 0,\r\n                textPosition: { line: 1, column: 1, length: 0 },\r\n                method: \"Initialisierung statischer Variablen der Klasse \" + this.staticClass.identifier,\r\n                callbackAfterReturn: null,\r\n                isCalledFromOutside: \"Initialisierung statischer Attribute\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getMethodBySignature(signature: string): Method {\r\n\r\n        let c: Klass = this;\r\n        while (c != null) {\r\n            let method = c.methodMap.get(signature);\r\n            if (method != null) return method;\r\n            c = c.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    setBaseClass(baseClass: Klass) {\r\n        this.baseClass = baseClass;\r\n        this.staticClass.baseClass = baseClass.staticClass;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        if (method.isConstructor) {\r\n            method.returnType = null;\r\n        }\r\n        if (method.isStatic) {\r\n            this.staticClass.addMethod(method);\r\n        } else {\r\n            this.methods.push(method);\r\n            this.methodMap.set(method.signature, method);\r\n        }\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        if (attribute.isStatic) {\r\n            this.staticClass.addAttribute(attribute);\r\n        } else {\r\n            this.attributes.push(attribute);\r\n            this.attributeMap.set(attribute.identifier, attribute);\r\n        }\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            if (secondOperandType instanceof Klass || secondOperandType == nullType) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            let firstOpClass = firstOperand?.value?.class;\r\n            if (firstOpClass == null) return false;\r\n            let typeLeft: Klass = <Klass>firstOpClass;\r\n            let typeRight = secondOperand.type;\r\n            if (typeRight instanceof StaticClass) {\r\n\r\n                while (typeLeft != null) {\r\n                    if (typeLeft === typeRight.Klass) return true;\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n                return false;\r\n            }\r\n            if (typeRight instanceof Interface) {\r\n                while (typeLeft != null) {\r\n                    for (let i of typeLeft.implements) {\r\n                        if (i === typeRight) return true;\r\n                    }\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * returns all visible methods of this class and all of its base classes\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || method.identifier == identifier);\r\n        });\r\n\r\n        if (this.baseClass != null && (identifier == null || identifier != this.identifier || methods.length == 0)) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier == this.identifier ? this.baseClass.identifier : identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all visible attributes of this class and all of its base classes\r\n     */\r\n    public getAttributes(upToVisibility: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = [];\r\n        for (let a of this.attributes) {\r\n            if (a.visibility <= upToVisibility) {\r\n                attributes.push(a);\r\n            }\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(upToVisibilityInBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                if (a.visibility > upToVisibilityInBaseClass) continue;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public hasConstructor() {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) return true;\r\n        }\r\n\r\n        if (this.baseClass != null) return this.baseClass.hasConstructor();\r\n\r\n        return false;\r\n    }\r\n\r\n    public hasParameterlessConstructor() {\r\n        let hasConstructorWithParameters: boolean = false;\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) {\r\n                if (m.parameterlist.parameters.length == 0) {\r\n                    return true;\r\n                } else {\r\n                    hasConstructorWithParameters = true;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasConstructorWithParameters && this.baseClass != null) {\r\n            return this.baseClass.hasParameterlessConstructor();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public getParameterlessConstructor(): Method {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor && m.parameterlist.parameters.length == 0) return m;\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n            return this.baseClass.getParameterlessConstructor();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    public getConstructor(parameterTypes: Type[], upToVisibility: Visibility, classIdentifier: string = this.identifier): { error: string, methodList: Method[] } {\r\n\r\n        let constructors: Method[] = this.methods.filter((m) => {\r\n            return m.isConstructor;\r\n        });\r\n\r\n        if (constructors.length == 0 && this.baseClass != null) {\r\n            return this.baseClass.getConstructor(parameterTypes, upToVisibility, classIdentifier);\r\n        } else {\r\n            return findSuitableMethods(constructors, this.identifier, parameterTypes, classIdentifier, true);\r\n        }\r\n\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        let allMethods = this.getMethods(upToVisibility);\r\n\r\n        let methods = findSuitableMethods(allMethods, identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n        if (methods.methodList.length == 0 && !searchConstructor) {\r\n            let staticMethods = this.staticClass.getMethodsThatFitWithCasting(identifier, parameterTypes, false, upToVisibility);\r\n            if (staticMethods.error == null) {\r\n                return staticMethods;\r\n            }\r\n\r\n            return methods;\r\n        }\r\n\r\n        return methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean } {\r\n\r\n        let error = null;\r\n        let foundButInvisible: boolean = false;\r\n\r\n        let attribute = this.attributeMap.get(identifier);\r\n        let attributeNotFound = attribute == null;\r\n\r\n        if (attribute == null) {\r\n            error = \"Das Attribut \" + identifier + \" kann nicht gefunden werden.\";\r\n        } else\r\n            if (attribute.visibility > upToVisibility) {\r\n                error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist daher hier nicht sichtbar.\";\r\n                attribute = null;\r\n                foundButInvisible = true;\r\n            }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttribute = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (baseClassAttribute.attribute != null || attributeNotFound) {\r\n                return baseClassAttribute;\r\n            }\r\n\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: foundButInvisible };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        // casting something to a String by calling toString() is neither possible in Java nor makes sense in my opinion\r\n\r\n        if (type instanceof Klass) {\r\n            let baseClass: Klass = this;\r\n\r\n            while (baseClass != null) {\r\n                if (type.getNonGenericIdentifier() == baseClass.getNonGenericIdentifier()) {\r\n                    if (type.typeVariables.length > 0) {\r\n                        let n: number = Math.min(type.typeVariables.length, baseClass.typeVariables.length);\r\n                        for (let i = 0; i < n; i++) {\r\n                            if (!baseClass.typeVariables[i].type.canCastTo(type.typeVariables[i].type)) return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return true;\r\n                }\r\n                baseClass = baseClass.baseClass;\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n\r\n            let klass: Klass = this;\r\n            while (klass != null) {\r\n                for (let i of klass.implements) {\r\n                    let shouldImplement = type.getNonGenericIdentifier();\r\n                    // look recursively into interface inheritance chain:                    \r\n                    if (i.getThisOrExtendedInterface(shouldImplement) != null) {\r\n                        return true;\r\n                    }\r\n                }\r\n                klass = klass.baseClass;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n    checkInheritance(): { message: string, missingMethods: Method[] } {\r\n\r\n        if (this.baseClass != null && Klass.dontInheritFrom.indexOf(this.baseClass.identifier) >= 0) {\r\n            return { message: \"Aus Performancegründen ist es leider nicht möglich, Unterklassen der Klassen String, Boolean, Character, Integer, Float und Double zu bilden.\", missingMethods: [] };\r\n        }\r\n\r\n        let message = \"\";\r\n        let missingAbstractMethods: Method[] = [];\r\n        let implementedMethods: Method[] = [];\r\n\r\n        let missingInterfaceMethods: Method[] = [];\r\n\r\n        let klass: Klass = this;\r\n        let hierarchy: string[] = [klass.identifier];\r\n        while (klass.baseClass != null) {\r\n            klass = klass.baseClass;\r\n            if (hierarchy.indexOf(klass.identifier) >= 0) {\r\n                klass.baseClass = null;  // This is necessary to avoid infinite loops in further compilation\r\n                hierarchy = [klass.identifier].concat(hierarchy);\r\n                message = \"Die Klasse \" + klass.identifier + \" erbt von sich selbst: \";\r\n                message += \"(\" + hierarchy.join(\" extends \") + \")\";\r\n                break;\r\n            }\r\n            hierarchy = [klass.identifier].concat(hierarchy);\r\n        }\r\n\r\n        if (message == \"\") {\r\n\r\n            if (this.baseClass != null) {\r\n\r\n                let abstractMethods: Method[] = [];\r\n\r\n                let klass: Klass = this;\r\n\r\n                // collect abstract Methods\r\n                while (klass != null) {\r\n                    for (let m of klass.methods) {\r\n                        if (m.isAbstract) {\r\n                            abstractMethods.push(m);\r\n                            let isImplemented: boolean = false;\r\n                            for (let m1 of implementedMethods) {\r\n                                if (m1.implements(m)) {\r\n                                    isImplemented = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (!isImplemented) {\r\n                                missingAbstractMethods.push(m);\r\n                            }\r\n                        } else {\r\n                            implementedMethods.push(m);\r\n                        }\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n            }\r\n\r\n            if (missingAbstractMethods.length > 0 && !this.isAbstract) {\r\n                message = \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden ihrer abstrakten Basisklassen implementieren: \";\r\n\r\n                message += missingAbstractMethods.map((m) => m.getSignatureWithReturnParameter()).join(\", \");\r\n\r\n            }\r\n\r\n            for (let i of this.implements) {\r\n                for (let m of i.getMethods()) {\r\n                    let isImplemented: boolean = false;\r\n                    for (let m1 of implementedMethods) {\r\n                        if (m1.implements(m)) {\r\n                            isImplemented = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!isImplemented) {\r\n                        missingInterfaceMethods.push(m);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (missingInterfaceMethods.length > 0) {\r\n\r\n                if (message != \"\") message += \"\\n\";\r\n\r\n                message += \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden der von ihr implementierten Interfaces implementieren: \";\r\n\r\n                message += missingInterfaceMethods.map((m) => m.signature).join(\", \");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return { message: message, missingMethods: missingAbstractMethods.concat(missingInterfaceMethods) };\r\n\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        let id = a.identifier;\r\n        if (a instanceof Klass) id = a.getNonGenericIdentifier();\r\n\r\n        while (c != null) {\r\n            if (c.getNonGenericIdentifier() == id) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = <RuntimeObject>value.value;\r\n\r\n        if (object == null) {\r\n            return \"null\";\r\n        }\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            let v = object.getValue(attribute.index);\r\n            if (attribute.type instanceof PrimitiveType) {\r\n                s += attribute.identifier + \":&nbsp;\" + attribute.type.debugOutput(v, maxLength / 2);\r\n            } else {\r\n                s += attribute.identifier + \":&nbsp; {...}\";\r\n            }\r\n            if (i < attributes.length - 1) {\r\n                s += \",&nbsp;\";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Klass {\r\n        // Klass.count++;\r\n\r\n        let newKlass: Klass = Object.create(this);\r\n\r\n        newKlass.implements = this.implements.slice(0);\r\n        newKlass.usagePositions = new Map();\r\n        newKlass.isGenericVariantFrom = this;\r\n\r\n        return newKlass;\r\n    }\r\n\r\n}\r\n\r\nexport class StaticClass extends Type {\r\n\r\n    baseClass: StaticClass;\r\n    Klass: Klass;\r\n    // TODO: Initialize\r\n    classObject: RuntimeObject;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    constructor(klass: Klass) {\r\n        super();\r\n\r\n        this.Klass = klass;\r\n        this.identifier = klass.identifier;\r\n\r\n        if (klass.baseClass != null) {\r\n            this.baseClass = klass.baseClass.staticClass;\r\n        }\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.Klass.module,\r\n            statements: [],\r\n            labelManager: null\r\n        }\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = this.classObject;\r\n\r\n        if (attributes == null) return \"{}\";\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            s += attribute.identifier + \": \" + object == null ? '---' : attribute.type?.debugOutput(object.getValue(attribute.index), maxLength / 2);\r\n            if (i < attributes.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n\r\n            itemList.push({\r\n                label: attribute.identifier,\r\n                //@ts-ignore\r\n                detail: attribute.color ? attribute.color : undefined,\r\n                //@ts-ignore\r\n                kind: attribute.color ? monaco.languages.CompletionItemKind.Color : monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        this.attributes.push(attribute);\r\n        this.attributeMap.set(attribute.identifier, attribute);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        return null;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(upToVisibility), identifier, parameterTypes,\r\n            this.Klass.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this class and all of its base classes\r\n     * @param isStatic returns only static methods if true\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.slice().filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || identifier == method.identifier);\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? Visibility.public : Visibility.protected;\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all attributes of this class and all of its base classes\r\n     * @param isStatic return only static attributes if true\r\n     */\r\n    public getAttributes(visibilityUpTo: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = this.attributes.filter((attribute) => {\r\n            return attribute.visibility <= visibilityUpTo;\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let visibilityUpToBaseClass = visibilityUpTo == Visibility.public ? visibilityUpTo : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(visibilityUpToBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass } {\r\n\r\n        let error = \"\";\r\n        let notFound = false;\r\n        let attribute = this.attributeMap.get(identifier);\r\n\r\n        if (attribute == null) {\r\n            notFound = true;\r\n            error = \"Das Attribut \" + identifier + \" konnte nicht gefunden werden.\";\r\n        } else if (attribute.visibility > upToVisibility) {\r\n            error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist hier daher nicht sichtbar.\";\r\n            attribute = null;\r\n        }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttributeWithError = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (notFound) {\r\n                return baseClassAttributeWithError;\r\n            }\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: !notFound, staticClass: this };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        while (c != null) {\r\n            if (c == a) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport class Interface extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Interface;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    public module: Module;\r\n\r\n    public extends: Interface[] = [];\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Interface = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    getThisOrExtendedInterface(identifier: String): Interface {\r\n        if (this.getNonGenericIdentifier() == identifier) return this;\r\n        for (let if1 of this.extends) {\r\n            let if2 = if1.getThisOrExtendedInterface(identifier);\r\n            if (if2 != null) return if2;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Interface {\r\n        // Interface.count++;\r\n        let newInterface: Interface = Object.create(this);\r\n\r\n        newInterface.usagePositions = new Map();\r\n        newInterface.isGenericVariantFrom = this;\r\n\r\n        return newInterface;\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCompletionItems(leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let method of this.getMethods()) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        if (value.value == null) {\r\n            return \"null\";\r\n        } else {\r\n            if (value.value instanceof RuntimeObject) {\r\n                return value.value.class.debugOutput(value);\r\n            } else {\r\n                return \"{...}\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        method.isAbstract = true;\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            return booleanPrimitiveTypeCopy;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    methodsWithSubInterfaces: Method[];\r\n\r\n    /**\r\n     * returns all methods of this interface\r\n     * @param isStatic is not used in interfaces\r\n     */\r\n    public getMethods(): Method[] {\r\n\r\n        if (this.extends.length == 0) return this.methods;\r\n\r\n        if (this.methodsWithSubInterfaces != null) return this.methodsWithSubInterfaces;\r\n\r\n        let visitedInterfaces: { [key: string]: boolean } = {};\r\n        let visitedMethods: { [signature: string]: boolean } = {};\r\n\r\n        this.methodsWithSubInterfaces = this.methods.slice(0);\r\n        for (let m of this.methods) visitedMethods[m.signature] = true;\r\n        visitedInterfaces[this.identifier] = true;\r\n\r\n        let todo: Interface[] = this.extends.slice(0);\r\n\r\n        while (todo.length > 0) {\r\n            let interf = todo.pop();\r\n            for (let m of interf.methods) {\r\n                if (!visitedMethods[m.signature]) {\r\n                    this.methodsWithSubInterfaces.push(m);\r\n                    visitedMethods[m.signature] = true;\r\n                }\r\n            }\r\n            for (let i of interf.extends) {\r\n                if (!visitedInterfaces[i.identifier]) {\r\n                    todo.push(i);\r\n                    visitedInterfaces[i.identifier] = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.methodsWithSubInterfaces;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        return this.methodMap.get(identifier + parameterlist.id);\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type instanceof Interface) {\r\n            let nonGenericCastable = false;\r\n            if (type.getNonGenericIdentifier() == this.getNonGenericIdentifier()) {\r\n                nonGenericCastable = true;\r\n                if (this.typeVariables.length == 0) return true;\r\n                let type2 = <Interface>type;\r\n                if (this.typeVariables.length != type2.typeVariables.length) return false;\r\n                for (let i = 0; i < this.typeVariables.length; i++) {\r\n                    let tv = this.typeVariables[i];\r\n                    let tvOther = type2.typeVariables[i];\r\n                    if (!tvOther.type.canCastTo(tv.type)) return false;\r\n                }\r\n                return false;\r\n            } else {\r\n                for (let type1 of this.extends) {\r\n                    if (type1.canCastTo(type)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        } else {\r\n            if (type instanceof Klass && type.getNonGenericIdentifier() == \"Object\") {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // return (type instanceof Klass) || (type instanceof Interface);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[], searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(), identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction findSuitableMethods(methodList: Method[], identifier: string, parameterTypes: Type[],\r\n    classIdentifier: string,\r\n    searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n    let suitableMethods: Method[] = [];\r\n    let howManyCastingsMax: number = 10000;\r\n    let error = null;\r\n\r\n    let oneWithCorrectIdentifierFound = false;\r\n\r\n    for (let m of methodList) {\r\n\r\n        let howManyCastings = 0;\r\n        if (m.identifier == identifier || m.isConstructor && searchConstructor) {\r\n\r\n            oneWithCorrectIdentifierFound = true;\r\n\r\n            let isEllipsis = m.hasEllipsis();\r\n            if (m.getParameterCount() == parameterTypes.length || (isEllipsis && m.getParameterCount() <= parameterTypes.length)) {\r\n\r\n                let suits = true;\r\n\r\n                let i = 0;\r\n\r\n                for (i = 0; i < m.getParameterCount() - (isEllipsis ? 1 : 0); i++) {\r\n                    let mParameterType = m.getParameterType(i);\r\n                    let givenType = parameterTypes[i];\r\n\r\n                    if (givenType == null) {\r\n                        suits = false; break;\r\n                    }\r\n\r\n                    if (mParameterType == givenType) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (givenType.canCastTo(mParameterType)) {\r\n                        howManyCastings++;\r\n                        /**\r\n                         * Rechteck r; \r\n                         * GNGFigur f;\r\n                         * Bei f.berührt(r) gibt es eine Variante mit Parametertyp String (schlecht!) und\r\n                         * eine mit Parametertyp Object. Letztere soll genommen werden, also:\r\n                         */\r\n                        if (mParameterType == stringPrimitiveType) howManyCastings += 0.5;\r\n                        continue;\r\n                    }\r\n\r\n                    suits = false;\r\n                    break;\r\n                }\r\n\r\n                // Ellipsis!\r\n                if (suits && isEllipsis) {\r\n                    let mParameterEllipsis = m.getParameter(i);\r\n                    let mParameterTypeEllispsis = (<ArrayType>mParameterEllipsis.type).arrayOfType;\r\n\r\n\r\n                    for (let j = i; j < parameterTypes.length; j++) {\r\n                        let givenType = parameterTypes[i];\r\n\r\n                        if (givenType == null) {\r\n                            suits = false; break;\r\n                        }\r\n\r\n                        if (mParameterTypeEllispsis == givenType) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (givenType.canCastTo(mParameterTypeEllispsis)) {\r\n                            howManyCastings++;\r\n                            /**\r\n                             * Rechteck r; \r\n                             * GNGFigur f;\r\n                             * Bei f.berührt(r) gibt es eine Variante mit Parametertyp String (schlecht!) und\r\n                             * eine mit Parametertyp Object. Letztere soll genommen werden, also:\r\n                             */\r\n                            if (mParameterTypeEllispsis == stringPrimitiveType) howManyCastings += 0.5;\r\n                            continue;\r\n                        }\r\n\r\n                        suits = false;\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n                if (suits && howManyCastings <= howManyCastingsMax) {\r\n                    if (howManyCastings < howManyCastingsMax) {\r\n                        suitableMethods = [];\r\n                    }\r\n                    suitableMethods.push(m);\r\n                    howManyCastingsMax = howManyCastings;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length == 0) {\r\n\r\n        if (oneWithCorrectIdentifierFound) {\r\n            if (parameterTypes.length == 0) {\r\n                error = searchConstructor ? \"Es gibt keinen parameterlosen Konstruktor der Klasse \" + classIdentifier : \"Die vorhandenen Methoden mit dem Bezeichner \" + identifier + \" haben alle mindestens einen Parameter. Hier wird aber kein Parameterwert übergeben.\";\r\n            } else {\r\n                let typeString = parameterTypes.map(type => type?.identifier).join(\", \");\r\n                error = searchConstructor ? `Die Parametertypen (${typeString}) passen zu keinem Konstruktor der Klasse ${classIdentifier}` : `Die Parametertypen (${typeString}) passen zu keiner der vorhandenen Methoden mit dem Bezeichner ${identifier}.`;\r\n            }\r\n        } else {\r\n            error = \"Der Typ \" + classIdentifier + \" besitzt keine Methode mit dem Bezeichner \" + identifier + \".\";\r\n            if (identifier == 'setCenter') {\r\n                error += ' Tipp: Die Methode setCenter der Klasse Shape wurde umbenannt in \"moveTo\".'\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length > 1) {\r\n        suitableMethods = suitableMethods.slice(0, 1);\r\n        // error = \"Zu den gegebenen Parametern hat der Typ \" + classIdentifier + \" mehrere passende Methoden.\";\r\n    }\r\n\r\n    return {\r\n        error: error,\r\n        methodList: suitableMethods\r\n    };\r\n\r\n}\r\n\r\nexport function getVisibilityUpTo(objectType: Klass | StaticClass, currentClassContext: Klass | StaticClass): Visibility {\r\n\r\n    if (currentClassContext == null) {\r\n        return Visibility.public;\r\n    }\r\n\r\n    if (objectType instanceof StaticClass) objectType = objectType.Klass;\r\n    if (currentClassContext instanceof StaticClass) currentClassContext = currentClassContext.Klass;\r\n\r\n    if (objectType == currentClassContext) {\r\n        return Visibility.private;\r\n    }\r\n\r\n    if (currentClassContext.hasAncestorOrIs(objectType)) {\r\n        return Visibility.protected;\r\n    }\r\n\r\n    return Visibility.public;\r\n\r\n}\r\n\r\n\r\nexport class UnboxableKlass extends Klass {\r\n\r\n    public unboxableAs: Type[] = [];\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        if (!(type instanceof PrimitiveType)) return null;\r\n        if (this.unboxableAs.includes(type)) {\r\n            if (value.value == null && !type.allowsNull()) throw Error(\"null kann nicht in einen primitiven \" + type.identifier + \" umgewandelt werden.\");\r\n            else return {\r\n                value: value.value,\r\n                type: type\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n}","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Visibility } from \"./Class.js\";\r\n\r\nexport type UsagePositions = Map<Module, TextPosition[]>;\r\n\r\nexport type TextPositionWithModule = {\r\n    module: Module,\r\n    position: TextPosition,\r\n    monacoModel?: monaco.editor.ITextModel\r\n}\r\n\r\nexport type CastInformation = {\r\n    automatic: boolean,\r\n    needsStatement: boolean\r\n}\r\n\r\nexport abstract class Type {\r\n\r\n    public onlyFirstPass = false;\r\n\r\n    public usagePositions: UsagePositions = new Map();\r\n    public declaration: TextPositionWithModule;\r\n\r\n    public identifier: string;\r\n    public documentation: string = \"\";\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public abstract getResultType(operation: TokenType, secondOperandType?: Type): Type;\r\n\r\n    public abstract compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any;\r\n\r\n    public abstract canCastTo(type: Type): boolean;\r\n\r\n    public abstract castTo(value: Value, type: Type): Value;\r\n\r\n    public abstract equals(type: Type): boolean;\r\n\r\n    public toTokenType(): TokenType {\r\n        return null;\r\n    };\r\n\r\n    public abstract debugOutput(value: Value, maxLength?: number): string;\r\n\r\n    clearUsagePositions() {\r\n        this.usagePositions = new Map();\r\n    }\r\n\r\n}\r\n\r\nexport abstract class PrimitiveType extends Type {\r\n\r\n    public initialValue: any = null;\r\n\r\n    public description: string = \"\";\r\n\r\n    protected operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    protected canCastToMap: { [type: string]: CastInformation };\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return this.canCastToMap[type.identifier] != null;\r\n    }\r\n\r\n    public getCastInformation(type: Type): CastInformation {\r\n        return this.canCastToMap[type.identifier];\r\n    }\r\n\r\n    public allowsNull(): boolean { return false; }\r\n\r\n    public valueToString(value: Value): string {\r\n        return  \"\" + value.value;\r\n    }\r\n\r\n}\r\n\r\nexport class Attribute {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    identifier: string;\r\n\r\n    index: number;\r\n\r\n    type: Type;\r\n    isStatic: boolean;\r\n    isFinal: boolean;\r\n    isTransient: boolean;\r\n    visibility: Visibility;\r\n    updateValue: (value: Value) => void;\r\n    usagePositions: UsagePositions;\r\n    declaration: TextPositionWithModule;\r\n    documentation: string;\r\n    annotation?: string;\r\n\r\n    constructor(name: string, type: Type, updateValue: (value: Value) => void,\r\n        isStatic: boolean, visibility: Visibility, isFinal: boolean, documentation?: string) {\r\n        this.identifier = name;\r\n        this.type = type;\r\n        this.updateValue = updateValue;\r\n        this.isStatic = isStatic;\r\n        this.visibility = visibility;\r\n        this.isFinal = isFinal;\r\n        this.usagePositions = new Map();\r\n        this.documentation = documentation;\r\n    }\r\n}\r\n\r\nexport class Method extends Type {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    visibility: Visibility;\r\n\r\n    isAbstract: boolean;\r\n    isStatic: boolean;\r\n    isConstructor: boolean = false;\r\n    isVirtual: boolean = false; // true, if child class has method with same signature\r\n\r\n    parameterlist: Parameterlist;\r\n    returnType: Type;\r\n    annotation?: string;\r\n\r\n    invoke?: (parameters: Value[]) => any;  // only for system functions\r\n    program?: Program;\r\n\r\n    reserveStackForLocalVariables: number = 0;\r\n\r\n    hasGenericTypes: boolean;\r\n\r\n    genericTypeMap: { [identifier: string]: Type } = null;\r\n\r\n    public signature: string;\r\n\r\n    implements(m: Method): boolean {\r\n        if(this.identifier != m.identifier) return false;\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            if(m.returnType != null && m.returnType.identifier != \"void\") return false;\r\n        } else {\r\n\r\n            if(m.returnType instanceof PrimitiveType){\r\n                if(m.returnType != this.returnType) {\r\n                    return false;\r\n                }\r\n            } else if(!this.returnType.canCastTo(m.returnType)){\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if(this.parameterlist.parameters.length != m.parameterlist.parameters.length) return false;\r\n\r\n        for(let i = 0; i < this.parameterlist.parameters.length; i++){\r\n            let myParameter = this.parameterlist.parameters[i];\r\n            let mParameter = m.parameterlist.parameters[i];\r\n\r\n            if(mParameter.type instanceof PrimitiveType){\r\n                if(mParameter.type != myParameter.type){\r\n                    return false;\r\n                }\r\n            } else if(!mParameter.type.canCastTo(myParameter.type)) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasEllipsis(): boolean {\r\n        if(this.parameterlist.parameters.length == 0) return false;\r\n        return this.parameterlist.parameters[this.parameterlist.parameters.length - 1].isEllipsis;\r\n    }\r\n\r\n\r\n    getParameterType(index: number): Type {\r\n        return this.parameterlist.parameters[index].type;\r\n    }\r\n\r\n    getParameter(index: number): Variable {\r\n        return this.parameterlist.parameters[index];\r\n    }\r\n\r\n    getReturnType(): Type {\r\n        return this.returnType;\r\n    }\r\n\r\n    getParameterCount() {\r\n        return this.parameterlist.parameters.length;\r\n    }\r\n\r\n    getParameterList(): Parameterlist {\r\n        return this.parameterlist;\r\n    }\r\n\r\n\r\n\r\n    constructor(name: string, parameterlist: Parameterlist, returnType: Type,\r\n        invokeOrAST: ((parameters: Value[]) => any) | Program,\r\n        isAbstract: boolean, isStatic: boolean, documentation?: string, isConstructor: boolean = false) {\r\n        super();\r\n        this.identifier = name;\r\n        this.parameterlist = parameterlist;\r\n        this.returnType = returnType;\r\n        this.isAbstract = isAbstract;\r\n        this.isStatic = isStatic;\r\n        this.visibility = 0;\r\n        this.documentation = documentation;\r\n        this.isConstructor = isConstructor;\r\n\r\n        if (invokeOrAST != null) {\r\n            if (typeof invokeOrAST == \"function\") {\r\n                this.invoke = invokeOrAST;\r\n            } else {\r\n                this.program = invokeOrAST;\r\n                invokeOrAST.method = this;\r\n            }\r\n        }\r\n\r\n        this.signature = name + parameterlist.id;\r\n\r\n        for (let p of parameterlist.parameters) {\r\n            if (p[\"isTypeVariable\"] == true) {\r\n                this.hasGenericTypes = true; break;\r\n            }\r\n        }\r\n\r\n        this.hasGenericTypes = this.hasGenericTypes || (this.returnType != null && this.returnType[\"isTypeVariable\"] == true);\r\n    }\r\n\r\n    getSignatureWithReturnParameter(){\r\n        if(this.returnType != null){\r\n            return this.returnType.identifier + \" \" + this.signature;\r\n        } else {\r\n            return \"void \" + this.signature;\r\n        }\r\n    }\r\n\r\n    getCompletionLabel() {\r\n\r\n        let label = \"\";\r\n\r\n        if (this.returnType != null && this.returnType.identifier != \"void\") {\r\n            label += getTypeIdentifier(this.returnType) + \" \";\r\n        }\r\n\r\n        label += this.identifier + \"(\";\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            if(p.isEllipsis){\r\n                let arrayType: ArrayType = <any>p.type;\r\n                label += getTypeIdentifier(arrayType.arrayOfType) + \"... \" + p.identifier;\r\n            } else {\r\n                label += getTypeIdentifier(p.type) + \" \" + p.identifier;\r\n            }\r\n\r\n            if (i < parameters.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        label += \")\";\r\n\r\n        return label;\r\n    }\r\n\r\n\r\n    getCompletionSnippet(leftBracketAlreadyThere: boolean) {\r\n\r\n        if (leftBracketAlreadyThere) return this.identifier + \"($0\";\r\n\r\n        let snippet = \"\";\r\n\r\n        snippet += this.identifier + \"(\";\r\n\r\n        let isVoidReturn = this.returnType == null || this.returnType.identifier == \"void\";\r\n        let isVoidReturnDelta = isVoidReturn ? 1 : 0;\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            snippet += \"${\" + ((i + 1) % (parameters.length + isVoidReturnDelta)) + \":\" + p.identifier + \"}\";\r\n\r\n            if (i < parameters.length - 1) {\r\n                snippet += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        snippet += \")\";\r\n\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            snippet += \";$0\";\r\n        }\r\n\r\n        return snippet;\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\";\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        return null;\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return false;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value { return value }\r\n\r\n\r\n}\r\n\r\nexport class Parameterlist {\r\n\r\n    id: string;\r\n\r\n    parameters: Variable[];\r\n\r\n    constructor(parameters: Variable[]) {\r\n        this.parameters = parameters;\r\n        this.computeId();\r\n    }\r\n\r\n    computeId() {\r\n        this.id = \"(\";\r\n        let i = 0;\r\n        while (i < this.parameters.length) {\r\n            this.id += this.parameters[i].type.identifier;\r\n            if (i < this.parameters.length - 1) {\r\n                this.id += \", \";\r\n            }\r\n            i++;\r\n        }\r\n        this.id += \")\";\r\n    }\r\n}\r\n\r\nexport type Variable = {\r\n    identifier: string,\r\n    type: Type,\r\n    stackPos?: number;\r\n    usagePositions: UsagePositions,\r\n    declaration: TextPositionWithModule,\r\n    isFinal: boolean,\r\n    isEllipsis?: boolean,\r\n    value?: Value // only for variables on heap,\r\n    declarationError?: any,     // if v.declarationError != null then variable has been used before initialization.\r\n    usedBeforeInitialization?: boolean,\r\n    initialized?: boolean\r\n}\r\n\r\nexport type Heap = { [identifier: string]: Variable };\r\n\r\nexport type Value = {\r\n    type: Type;\r\n    value: any;\r\n    updateValue?: (value: Value) => void;\r\n    object?: RuntimeObject;\r\n}\r\n\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if(type[\"typeVariables\"]){\r\n        if(type[\"typeVariables\"].length > 0){\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier) \r\n            + \"<\";\r\n               s += type[\"typeVariables\"].map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n","import { Klass, StaticClass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { PrimitiveType, Value } from \"../compiler/types/Types.js\";\r\n\r\n\r\n\r\nexport class RuntimeObject {\r\n\r\n    class: Klass | StaticClass;\r\n\r\n    intrinsicData: {[classIdentifier: string]: any} = {};  // for intrinsic (= builtin) classes to store data\r\n\r\n    // Attributes of class and base-classes\r\n    // Map class-identifier to Map <attribute-identifier, attribute-value>\r\n    // attributeValues: Map<string, Map<string, Value>> = new Map();\r\n    attributes: Value[];\r\n\r\n    constructor(klass: Klass | StaticClass ) {\r\n\r\n        this.class = klass;\r\n\r\n        this.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    getValue(attributeIndex: number):Value{\r\n\r\n        let av: Value = this.attributes[attributeIndex];\r\n        if(av?.updateValue != null){\r\n            av.updateValue(av);\r\n        }\r\n        return av;\r\n\r\n    }\r\n\r\n    private initializeAttributeValues(){\r\n\r\n        this.attributes = Array(this.class.numberOfAttributesIncludingBaseClass).fill(null);\r\n\r\n        let klass = this.class;\r\n        while(klass != null){\r\n\r\n            for(let att of klass.attributes){\r\n                \r\n                let value:any = null;\r\n                if(att.type instanceof PrimitiveType){\r\n                    value = att.type.initialValue;\r\n                }\r\n\r\n                let v: Value = {\r\n                    type: att.type,\r\n                    value: value\r\n                };\r\n\r\n                if(att.updateValue != null){\r\n                    v.updateValue = att.updateValue;\r\n                    v.object = this;\r\n                } \r\n                \r\n                this.attributes[att.index] = v;\r\n\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function deepCopy(obj: any): any {\r\n\r\n    var copy: any;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(obj.getTime());\r\n        return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n        copy = [];\r\n        for (var i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = deepCopy(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n        copy = {};\r\n        for (var attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) copy[attr] = deepCopy(obj[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n\r\n}\r\n\r\n","import { Statement, JumpNode, Program, JumpOnSwitchStatement } from \"./Program.js\";\r\nimport { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { CodeGenerator } from \"./CodeGenerator.js\";\r\n\r\ntype nodeToResolve = {\r\n    node: JumpNode,\r\n    labelIndex: number\r\n}\r\n\r\ntype LabeledNode = {\r\n    node?: Statement,\r\n    labelIndex: number,\r\n    position?: number\r\n}\r\n\r\n\r\nexport class LabelManager {\r\n\r\n    maxLabelIndex: number = 0;\r\n\r\n    labeledNodes: LabeledNode[] = [];\r\n    \r\n    labelMap: Map<number, LabeledNode> = new Map();\r\n    jumpNodesToResolve: nodeToResolve[] = [];\r\n\r\n    switchStatements: JumpOnSwitchStatement[] = [];\r\n\r\n    program: Program;\r\n\r\n    constructor(program: Program){\r\n        this.program = program;\r\n    }\r\n\r\n    correctPositionsAfterInsert(insertPosition: number, insertedLength: number) {\r\n        for(let ln of this.labeledNodes){\r\n            if(ln.position != null && ln.position >= insertPosition){\r\n                ln.position += insertedLength;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    registerSwitchStatement(switchStatement: JumpOnSwitchStatement) {\r\n        this.switchStatements.push(switchStatement);\r\n    }\r\n\r\n    insertJumpNode(type: TokenType.jumpIfTrue|TokenType.jumpIfFalse|TokenType.jumpAlways|\r\n        TokenType.jumpIfFalseAndLeaveOnStack|TokenType.jumpIfTrueAndLeaveOnStack,\r\n         position: TextPosition, codeGenerator: CodeGenerator, labelIndex?: number): number {\r\n        \r\n        let statementList = this.program.statements;\r\n\r\n        if(position == null){\r\n            if(statementList.length > 0){\r\n                position = statementList[statementList.length - 1].position;\r\n            }\r\n        }\r\n\r\n        let node: JumpNode = {\r\n            type: type,\r\n            position: position,\r\n            stepFinished: true\r\n        };\r\n\r\n        codeGenerator.pushStatements(node);\r\n\r\n        return this.registerJumpNode(node, labelIndex);\r\n\r\n    }\r\n\r\n    markJumpDestination(offset: number, labelIndex?:number): number {\r\n        \r\n        let position = this.program.statements.length - 1 + offset;\r\n        \r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let labeledNode = {\r\n            position: position,\r\n            labelIndex: labelIndex\r\n        };\r\n\r\n        this.labeledNodes.push(labeledNode);\r\n\r\n        this.labelMap.set(labelIndex, labeledNode);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    removeNode(node: Statement){\r\n        for(let i = 0; i < this.labeledNodes.length; i++){\r\n            let n = this.labeledNodes[i];\r\n            if(n.node == node){\r\n\r\n                let index = this.program.statements.indexOf(node);\r\n               \r\n                if(index < this.program.statements.length - 1){\r\n                    let newNode = this.program.statements[index + 1];\r\n                    n.node = newNode;\r\n                }\r\n\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerJumpDestination(node: Statement, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let label: LabeledNode = {\r\n            node: node,\r\n            labelIndex: labelIndex\r\n        }\r\n\r\n        this.labeledNodes.push(label);\r\n        this.labelMap.set(labelIndex, label);\r\n\r\n        return labelIndex;\r\n    }\r\n\r\n    public registerJumpNode(node: JumpNode, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let ntr: nodeToResolve = {\r\n            labelIndex: labelIndex,\r\n            node: node\r\n        }\r\n\r\n        this.jumpNodesToResolve.push(ntr);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    resolveNodes(){\r\n        for(let ln of this.labeledNodes){\r\n\r\n            if(ln.position == null){\r\n                ln.position = this.program.statements.indexOf(ln.node);\r\n            } else {\r\n                while(ln.position > this.program.statements.length - 1){\r\n                    this.program.statements.push({\r\n                        type: TokenType.noOp,\r\n                        position: null\r\n                    });\r\n                }\r\n                ln.node = this.program.statements[ln.position];\r\n            }\r\n\r\n        }\r\n\r\n        for(let jn of this.jumpNodesToResolve){\r\n            let dest = this.labelMap.get(jn.labelIndex);\r\n            if(dest != null){\r\n                jn.node.destination = dest.position;\r\n            }\r\n        }\r\n\r\n        for(let sw of this.switchStatements){\r\n            for(let dl of sw.destinationLabels){\r\n                sw.destinationMap[dl.constant] = this.labelMap.get(dl.label).position;\r\n            }\r\n            sw.destinationLabels = null;\r\n            if(sw.defaultDestination != null){\r\n                sw.defaultDestination = this.labelMap.get(sw.defaultDestination).position;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Method, Parameterlist, Value } from \"./Types.js\";\r\nimport { stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\n// neu:\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { type } from \"jquery\";\r\nimport { json } from \"express\";\r\nimport { ArrayType } from \"./Array.js\";\r\n\r\n\r\n/**\r\n * Base class for all classes\r\n */\r\n\r\nexport class ObjectClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Object\", module, \"Basisklasse aller Klassen\");\r\n\r\n        // stringPrimitiveType is used here before it is initialized. This problem is solved\r\n        // in the constructor of StringprimitiveType.\r\n        let m = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n        (parameters) => {\r\n            if(parameters[0].value instanceof RuntimeObject){\r\n                return \"(\" + (<RuntimeObject><unknown>parameters[0].value).class.identifier + \")\";\r\n            } else {\r\n                return parameters[0].value;\r\n            }\r\n\r\n\r\n        }, false, false);\r\n        m.isVirtual = true;\r\n        \r\n        this.addMethod(m);\r\n\r\n\r\n        // // Add default parameterless constructor\r\n        // let m = new Method(\"Object\", new Parameterlist([]), null,\r\n        // (parameters) => {\r\n\r\n        // }, false, false);\r\n        \r\n        // m.isConstructor = true;\r\n\r\n        // this.addMethod(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]) - 1, Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}\r\n\r\nexport function nullToString(s: string) {\r\n  return s == null ? \"null\" : s;\r\n}\r\n\r\nexport function floatToString(val: number){\r\n  return val + (Number.isInteger(val)? \".0\": \"\");\r\n}","import { TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass, setBooleanPrimitiveTypeCopy } from \"./Class.js\";\r\nimport { ObjectClass } from \"./ObjectClass.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\nimport { IntegerClass } from \"./boxedTypes/IntegerClass.js\";\r\nimport { LongClass } from \"./boxedTypes/LongClass.js\";\r\nimport { FloatClass } from \"./boxedTypes/FloatClass.js\";\r\nimport { CharacterClass } from \"./boxedTypes/CharacterClass.js\";\r\nimport { BooleanClass } from \"./boxedTypes/BooleanClass.js\";\r\nimport { DoubleClass } from \"./boxedTypes/DoubleClass.js\";\r\nimport { floatToString, nullToString } from \"../../tools/StringTools.js\";\r\n\r\nexport class NullType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"null\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) return secondOperandType.getResultType(operation,this);\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            return (firstOperand.value == secondOperand.value) == (operation == TokenType.equal);\r\n        }\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface || type instanceof ArrayType);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return {\r\n            value: value.value,\r\n            type: type\r\n        };\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"null\";\r\n    }\r\n}\r\n\r\nexport class VarType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"var\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"var\";\r\n    }\r\n}\r\n\r\nexport class IntPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"int\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.modulo]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.division]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.tilde]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n\r\n            // binary ops\r\n            [TokenType.OR]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.XOR]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.ampersand]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftLeft]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRight]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRightUnsigned]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: true, needsStatement: false },\r\n            \"long\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: true },\r\n            \"Long\": { automatic: true, needsStatement: true },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.integerConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == charPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: String.fromCharCode(<number>value.value)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value / <number>(secondOperand.value));\r\n                }\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.modulo:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value % <number>(secondOperand.value));\r\n                }\r\n                return 1;\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.tilde:\r\n                return ~value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n            case TokenType.OR:\r\n                return value | <number>(secondOperand.value);\r\n\r\n            case TokenType.XOR:\r\n                return value ^ <number>(secondOperand.value);\r\n\r\n            case TokenType.ampersand:\r\n                return value & <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftLeft:\r\n                return value << <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRight:\r\n                return value >> <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRightUnsigned:\r\n                return value >>> <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class LongPrimitiveType extends IntPrimitiveType {\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"long\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.modulo]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.division]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.tilde]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n\r\n            // binary ops\r\n            [TokenType.OR]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.XOR]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.ampersand]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.shiftLeft]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.shiftRight]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.shiftRightUnsigned]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: false, needsStatement: false },\r\n            \"long\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n            \"Long\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.longConstant;\r\n    }\r\n}\r\n\r\n\r\nexport class FloatPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"float\";\r\n\r\n        this.description = \"Fließkommazahl mit einfacher Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.minus]: { \"none\": floatPrimitiveType, \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.negation]: { \"none\": floatPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, doublePrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"Float\": { automatic: true, needsStatement: true },\r\n            \"Double\": { automatic: true, needsStatement: true },\r\n        }\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        // if (type == doublePrimitiveType || type == DoubleType || type == FloatType) {\r\n        //     return {\r\n        //         type: type,\r\n        //         value: value.value\r\n        //     }\r\n        // }\r\n\r\n    }\r\n\r\n    public valueToString(value: Value): string {\r\n        return floatToString(value.value);\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class DoublePrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"double\";\r\n\r\n        this.description = \"Fließkommazahl mit doppelter Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.minus]: { \"none\": doublePrimitiveType, \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.negation]: { \"none\": doublePrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, floatPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"Float\": { automatic: true, needsStatement: true },\r\n            \"Double\": { automatic: true, needsStatement: true },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public valueToString(value: Value): string {\r\n        return floatToString(value.value);\r\n    }\r\n\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BooleanPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"boolean\";\r\n\r\n        this.description = \"boolescher Wert (true oder false)\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: {},\r\n            [TokenType.and]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.or]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.not]: { \"none\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"boolean\": booleanPrimitiveType },\r\n        };\r\n\r\n        this.canCastToMap = {\r\n            \"boolean\": { automatic: true, needsStatement: false },\r\n            \"Boolean\": { automatic: true, needsStatement: true },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.booleanConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return undefined;\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <boolean>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + nullToString(<string>(secondOperand.value));\r\n\r\n            case TokenType.equal:\r\n                return value == <boolean>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <boolean>(secondOperand.value);\r\n\r\n            case TokenType.and:\r\n                return value && <boolean>(secondOperand.value);\r\n\r\n            case TokenType.or:\r\n                return value || <boolean>(secondOperand.value);\r\n\r\n            case TokenType.not:\r\n                return !value;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <boolean>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class VoidPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"void\";\r\n\r\n        this.description = \"leerer Rückgabewert\"\r\n\r\n        this.operationTable = {\r\n        };\r\n\r\n        this.canCastToMap = {};\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.keywordVoid;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"void\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class StringPrimitiveType extends Klass {\r\n\r\n    private operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.stringConstant;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            return super.getResultType(operation, secondOperandType);\r\n        }\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"String\", null, \"Ein Objekt der Klasse String speichert eine Zeichenkette.\");\r\n        this.baseClass = baseClass;\r\n        let stringClass = this;\r\n        baseClass.methods.filter(m => m.identifier == \"toString\").forEach(m => m.returnType = stringClass);\r\n    }\r\n\r\n    init() {\r\n        this.operationTable = {\r\n            [TokenType.plus]: {\r\n                \"String\": stringPrimitiveType\r\n            },\r\n            [TokenType.equal]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"String\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n\r\n        this.addMethod(new Method(\"length\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).length; }, false, false, \"Länge der Zeichenkette, d.h. Anzahl der Zeichen in der Zeichenkette.\"));\r\n        this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return <string>parameters[0].value == <string>(parameters[1].value); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (unter Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { caseFirst: 'upper' }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"compareToIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { sensitivity: \"accent\" }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"equalsIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLowerCase() == (<string>(parameters[1].value).toLowerCase()); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (**ohne** Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"endsWith\", new Parameterlist([{ identifier: \"suffix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).endsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = suffix) endet. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"startsWith\", new Parameterlist([{ identifier: \"präfix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).startsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = präfix) beginnt. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleLowerCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Großbuchstaben durch den entsprechenden Kleinbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleUpperCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Kleinbuchstaben durch den entsprechenden Großbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value)); }, false, false, \"Gibt das hintere Ende der Zeichenkette ab **beginIndex** zurück. **beginIndex** == 1 bedeutet, dass die Zeichenkette ab dem 2.(!) Zeichen zurückgegeben wird. \"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        { identifier: \"endIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die Teil-Zeichenkette von **beginIndex** bis **endIndex** zurück.\\n**Vorsicht: ** beginIndex und endIndex sind nullbasiert, d.h. beginIndex == 0 bedeutet die Position vor dem ersten Zeichen.\"));\r\n        this.addMethod(new Method(\"trim\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).trim(); }, false, false, \"Gibt die Zeichenkette zurück, die entsteht, wenn man am Anfang und Ende der Zeichenkette alle Leerzeichen, Tabs und Zeilenumbrüche entfernt.\"));\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)) == \"\"; }, false, false, \"Gibt genau dann wahr zurück, wenn die Zeichenkette leer ist.\\n**Warnung: ** Die Methode darf nicht mit dem '''null'''-Objekt aufgerufen werden!\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex mit der Suche begonnen.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex - von rechts her beginnend - gesucht.\"));\r\n        this.addMethod(new Method(\"replace\", new Parameterlist([\r\n            { identifier: \"target\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).replace(<string>(parameters[1].value), <string>(parameters[2].value)); }, false, false, \"Ersetzt alle Vorkommen von **target** durch **replacement** und gibt die entstandene Zeichenkette zurück. Die Zeichenkette selbst wird nicht verändert.\"));\r\n        this.addMethod(new Method(\"replaceAll\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **alle** Fundstellen durch **replacement**.\"));\r\n        this.addMethod(new Method(\"matches\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return <string>(parameters[0].value).match(regExp) != null;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert der Zeichenkette dem regulären Ausdruck (regex) entspricht.\"));\r\n        this.addMethod(new Method(\"replaceFirst\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **die erste** Fundstelle durch **replacement**.\"));\r\n        this.addMethod(new Method(\"split\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), new ArrayType(stringPrimitiveType),\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                let strings = (<string>(parameters[0].value)).split(regExp);\r\n                let values: Value[] = [];\r\n                for (let s of strings) {\r\n                    values.push({ type: stringPrimitiveType, value: s });\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, \"Teilt die Zeichenkette an den Stellen, die durch den regulären Ausdruck (regex) definiert sind, in Teile auf. Die Fundstellen des regex werden dabei weggelassen. Gibt die Teile als String-Array zurück.\"));\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        let err: Error = checkNotNull(operation, this, firstOperand, secondOperand, [TokenType.plus, TokenType.keywordInstanceof])\r\n        if (err != null) return err;\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return nullToString(value) + <string>(secondOperand.value); // because null + null = 0 in javascript\r\n                }\r\n\r\n            case TokenType.lower:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) < 0;\r\n            // return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) > 0;\r\n            // return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) <= 0;\r\n            // return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) >= 0;\r\n            // return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n            case TokenType.keywordInstanceof:\r\n                return super.compute(operation, firstOperand, secondOperand);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public allowsNull(): boolean { return true; }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return '\"' + <string>value.value + '\"';\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class CharPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = \"\\u0000\";\r\n\r\n        this.identifier = \"char\";\r\n\r\n        this.description = \"ein Zeichen\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"char\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: true, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: true },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: false },\r\n            \"Character\": { automatic: true, needsStatement: true },\r\n        }\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.charConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        // let unboxed = this.unboxFrom(value, type);\r\n        // if (unboxed != null) return unboxed;\r\n\r\n        // if (type == stringPrimitiveType || type == CharacterType) {\r\n        //     return {\r\n        //         type: type,\r\n        //         value: value\r\n        //     }\r\n        // }\r\n\r\n        if (type == intPrimitiveType || type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: (<string>value.value).charCodeAt(0)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"'\" + <string>value.value + \"'\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport var voidPrimitiveType = new VoidPrimitiveType();\r\nexport var intPrimitiveType = new IntPrimitiveType();\r\nexport var longPrimitiveType = new LongPrimitiveType();\r\nexport var floatPrimitiveType = new FloatPrimitiveType();\r\nexport var doublePrimitiveType = new DoublePrimitiveType();\r\nexport var booleanPrimitiveType = new BooleanPrimitiveType();\r\nsetBooleanPrimitiveTypeCopy(booleanPrimitiveType);\r\nexport var objectType = new ObjectClass(null);\r\nexport var stringPrimitiveType = new StringPrimitiveType(objectType);\r\nexport var charPrimitiveType = new CharPrimitiveType();\r\nexport var nullType = new NullType();\r\nexport var varType = new VarType();\r\n\r\nexport var IntegerType = new IntegerClass(objectType);\r\nexport var LongType = new LongClass(objectType);\r\nexport var FloatType = new FloatClass(objectType);\r\nexport var DoubleType = new DoubleClass(objectType);\r\nexport var CharacterType = new CharacterClass(objectType);\r\nexport var BooleanType = new BooleanClass(objectType);\r\n\r\nexport var TokenTypeToDataTypeMap: { [tt: number]: Type } = {\r\n    [TokenType.integerConstant]: intPrimitiveType,\r\n    [TokenType.longConstant]: longPrimitiveType,\r\n    [TokenType.floatingPointConstant]: floatPrimitiveType,\r\n    [TokenType.booleanConstant]: booleanPrimitiveType,\r\n    [TokenType.stringConstant]: stringPrimitiveType,\r\n    [TokenType.charConstant]: charPrimitiveType,\r\n    [TokenType.keywordNull]: nullType\r\n}\r\n\r\n\r\nfunction checkNotNull(operation: TokenType, type: Type, firstOperand: Value, secondOperand?: Value, nullAllowedFor: TokenType[] = []): Error {\r\n    if ((firstOperand.value == null || secondOperand.value == null) && !nullAllowedFor.concat([TokenType.equal, TokenType.notEqual]).includes(operation)) {\r\n        let typeAndNull: (v: Value) => string = (v: Value) => v.value == null ? \"(\" + type.identifier + \")\" + \" null\" : type.identifier;\r\n        return new OperandIsNull(\"Unerlaubte Rechnung mit null: \" + typeAndNull(firstOperand) + \" \" + TokenTypeReadable[operation] + \" \" + typeAndNull(secondOperand));\r\n    }\r\n    return null;\r\n}\r\n\r\nexport class OperandIsNull extends Error {\r\n    constructor(message?: string) {\r\n        super(message);\r\n        this.name = \"OperandIsNullError\";\r\n    }\r\n}","import { TextPosition, TokenType, TokenTypeReadable } from \"../compiler/lexer/Token.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Program, Statement, ReturnStatement } from \"../compiler/parser/Program.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { PrimitiveType, Type, Value, Heap, Method } from \"../compiler/types/Types.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Debugger } from \"./Debugger.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { InputManager } from \"./InputManager.js\";\r\nimport { WorldHelper } from \"../runtimelibrary/graphics/World.js\";\r\nimport { Helper } from \"../main/gui/Helper.js\";\r\nimport { TimerClass } from \"../runtimelibrary/Timer.js\";\r\nimport { KeyboardTool } from \"../tools/KeyboardTool.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\nimport { GroupHelper } from \"../runtimelibrary/graphics/Group.js\";\r\nimport { WebSocketRequestKeepAlive } from \"../communication/Data.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { ProcessingHelper } from \"../runtimelibrary/graphics/Processing.js\";\r\nimport { GNGEreignisbehandlungHelper } from \"../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GamepadTool } from \"../tools/GamepadTool.js\";\r\nimport { ConnectionHelper } from \"../runtimelibrary/database/Connection.js\";\r\n\r\nexport enum InterpreterState {\r\n    not_initialized, running, paused, error, done, waitingForInput, waitingForTimersToEnd\r\n}\r\n\r\nexport type ProgramStackElement = {\r\n    program: Program,\r\n    programPosition: number,  // next position to execute after return\r\n    textPosition: TextPosition, // textposition of method call\r\n    method: Method | string,\r\n    callbackAfterReturn: (interpreter: Interpreter) => void,\r\n    isCalledFromOutside: string,\r\n    stackElementsToPushBeforeFirstExecuting?: Value[]\r\n};\r\n\r\nexport class Interpreter {\r\n\r\n    debugger: Debugger;\r\n\r\n    mainModule: Module;\r\n    moduleStore: ModuleStore;\r\n    moduleStoreVersion: number = -100;\r\n\r\n    printManager: PrintManager;\r\n    inputManager: InputManager;\r\n\r\n    stepsPerSecond = 2;\r\n    maxStepsPerSecond = 1000000;\r\n    timerDelayMs = 10;\r\n\r\n    timerId: any;\r\n    state: InterpreterState;\r\n\r\n    currentProgram: Program;\r\n    currentProgramPosition: number;\r\n    currentMethod: Method | string;\r\n    currentCallbackAfterReturn: (interpreter: Interpreter) => void;\r\n    currentIsCalledFromOutside: string\r\n\r\n    programStack: ProgramStackElement[] = [];\r\n\r\n    stack: Value[] = [];\r\n    stackframes: number[] = [];\r\n    currentStackframe: number;\r\n\r\n    heap: Heap = {};\r\n\r\n    timerStopped: boolean = true;\r\n    timerExtern: boolean = false;\r\n\r\n    steps: number = 0;\r\n    timeNetto: number = 0;\r\n    timeWhenProgramStarted: number = 0;\r\n\r\n    stepOverNestingLevel: number = 0;\r\n    leaveLine: number = -1;\r\n    additionalStepFinishedFlag: boolean = false;\r\n\r\n    isFirstStatement: boolean = true;\r\n\r\n    showProgrampointerUptoStepsPerSecond = 15;\r\n\r\n    worldHelper: WorldHelper;\r\n    gngEreignisbehandlungHelper: GNGEreignisbehandlungHelper;\r\n    processingHelper: ProcessingHelper;\r\n    databaseConnectionHelpers: ConnectionHelper[] = [];\r\n\r\n    keyboardTool: KeyboardTool;\r\n    gamepadTool: GamepadTool;\r\n\r\n    webSocketsToCloseAfterProgramHalt: WebSocket[] = [];\r\n\r\n    pauseUntil?: number;\r\n\r\n    actions: string[] = [\"start\", \"pause\", \"stop\", \"stepOver\",\r\n        \"stepInto\", \"stepOut\", \"restart\"];\r\n\r\n    // buttonActiveMatrix[button][i] tells if button is active at \r\n    // InterpreterState i\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n    callbackAfterExecution: () => void;\r\n\r\n    constructor(public main: MainBase, public debugger_: Debugger, public controlButtons: ProgramControlButtons,\r\n        $runDiv: JQuery<HTMLElement>) {\r\n        this.printManager = new PrintManager($runDiv, this.main);\r\n        this.inputManager = new InputManager($runDiv, this.main);\r\n        if (main.isEmbedded()) {\r\n            this.keyboardTool = new KeyboardTool(jQuery('html'), main);\r\n        } else {\r\n            this.keyboardTool = new KeyboardTool(jQuery(window), main);\r\n        }\r\n\r\n        this.gamepadTool = new GamepadTool();\r\n\r\n        this.debugger = debugger_;\r\n\r\n        controlButtons.setInterpreter(this);\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.steps = 0;\r\n        this.timeNetto = 0;\r\n        this.timerEvents = 0;\r\n\r\n        this.timerDelayMs = 7;\r\n\r\n        let that = this;\r\n\r\n        let periodicFunction = () => {\r\n\r\n            if (!that.timerExtern) {\r\n                that.timerFunction(that.timerDelayMs, false, 0.7);\r\n            }\r\n\r\n        }\r\n\r\n        this.timerId = setInterval(periodicFunction, this.timerDelayMs);\r\n\r\n        let keepAliveRequest: WebSocketRequestKeepAlive = { command: 5 };\r\n        let req = JSON.stringify(keepAliveRequest);\r\n        setInterval(() => {\r\n            that.webSocketsToCloseAfterProgramHalt.forEach(ws => ws.send(req));\r\n        }, 30000);\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        let startFunction = () => {\r\n            that.stepOverNestingLevel = 1000000;\r\n            that.start();\r\n        };\r\n\r\n        let pauseFunction = () => {\r\n            that.pause();\r\n        };\r\n\r\n        am.registerAction(\"interpreter.start\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Programm starten\", this.controlButtons.$buttonStart);\r\n\r\n        am.registerAction(\"interpreter.pause\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Pause\", this.controlButtons.$buttonPause);\r\n\r\n        am.registerAction(\"interpreter.stop\", [],\r\n            () => {\r\n                that.stop(false);\r\n                that.steps = 0;\r\n            }, \"Programm anhalten\", this.controlButtons.$buttonStop);\r\n\r\n        // this.controlButtons.$buttonEdit.on('click', (e) => {\r\n        //     e.stopPropagation();\r\n        //     am.trigger('interpreter.stop');\r\n        // });\r\n\r\n        am.registerAction(\"interpreter.stepOver\", ['F6'],\r\n            () => {\r\n                this.oneStep(false);\r\n            }, \"Einzelschritt (Step over)\", this.controlButtons.$buttonStepOver);\r\n\r\n        am.registerAction(\"interpreter.stepInto\", ['F7'],\r\n            () => {\r\n                this.oneStep(true);\r\n            }, \"Einzelschritt (Step into)\", this.controlButtons.$buttonStepInto);\r\n\r\n        am.registerAction(\"interpreter.stepOut\", [],\r\n            () => {\r\n                this.stepOut();\r\n            }, \"Step out\", this.controlButtons.$buttonStepOut);\r\n\r\n        am.registerAction(\"interpreter.restart\", [],\r\n            () => {\r\n                that.stop(true);\r\n            }, \"Neu starten\", this.controlButtons.$buttonRestart);\r\n\r\n        this.setState(InterpreterState.not_initialized);\r\n\r\n    }\r\n\r\n    getStartableModule(moduleStore: ModuleStore): Module {\r\n\r\n        let cem: Module;\r\n        cem = this.main.getCurrentlyEditedModule();\r\n\r\n        let currentlyEditedModuleIsClassOnly = false;\r\n\r\n        // decide which module to start\r\n\r\n        // first attempt: is currently edited Module startable?\r\n        if (cem != null) {\r\n            let currentlyEditedModule = moduleStore.findModuleByFile(cem.file);\r\n            if (currentlyEditedModule != null) {\r\n                currentlyEditedModuleIsClassOnly = !cem.hasErrors()\r\n                    && !currentlyEditedModule.isStartable;\r\n                if (currentlyEditedModule.isStartable) {\r\n                    return currentlyEditedModule;\r\n                }\r\n            }\r\n        }\r\n\r\n        // second attempt: which module has been started last time?\r\n        if (this.mainModule != null && currentlyEditedModuleIsClassOnly) {\r\n            let lastMainModule = moduleStore.findModuleByFile(this.mainModule.file);\r\n            if (lastMainModule != null && lastMainModule.isStartable) {\r\n                return lastMainModule;\r\n            }\r\n        }\r\n\r\n        // third attempt: pick first startable module of current workspace\r\n        if (currentlyEditedModuleIsClassOnly) {\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if (m.isStartable) {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n        After user clicks start button (or stepover/stepInto-Button when no program is running) this\r\n        method ist called.\r\n    */\r\n    init() {\r\n\r\n        this.timerStopped = true;\r\n\r\n        let cem = this.main.getCurrentlyEditedModule();\r\n\r\n        cem.getBreakpointPositionsFromEditor();\r\n\r\n        this.main.getBottomDiv()?.console?.clearExceptions();\r\n\r\n        /*\r\n            As long as there is no startable new Version of current workspace we keep current compiled modules so\r\n            that variables and objects defined/instantiated via console can be kept, too. \r\n        */\r\n        if (this.moduleStoreVersion != this.main.version && this.main.getCompiler().atLeastOneModuleIsStartable) {\r\n            this.main.copyExecutableModuleStoreToInterpreter();\r\n            this.heap = {}; // clear variables/objects defined via console\r\n            this.main.getBottomDiv()?.console?.detachValues();  // detach values from console entries\r\n        }\r\n\r\n        let newMainModule = this.getStartableModule(this.moduleStore);\r\n\r\n        if (newMainModule == null) {\r\n            this.setState(InterpreterState.not_initialized);\r\n            return;\r\n        }\r\n\r\n        this.mainModule = newMainModule;\r\n\r\n        this.currentProgramPosition = 0;\r\n\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n        this.currentStackframe = 0;\r\n\r\n        this.setState(InterpreterState.done);\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.stepOverNestingLevel = 1000000;\r\n\r\n\r\n        // Instantiate enum value-objects; initialize static attributes; call static constructors\r\n\r\n        this.programStack.push({\r\n            program: this.mainModule.mainProgram,\r\n            programPosition: 0,\r\n            textPosition: { line: 1, column: 1, length: 0 },\r\n            method: \"Hauptprogramm\",\r\n            callbackAfterReturn: null,\r\n            isCalledFromOutside: \"Hauptprogramm\"\r\n\r\n        })\r\n\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            this.initializeEnums(m);\r\n            this.initializeClasses(m);\r\n        }\r\n\r\n        this.popProgram();\r\n\r\n    }\r\n\r\n    popProgram() {\r\n        let p = this.programStack.pop();\r\n        this.currentProgram = p.program;\r\n        this.currentProgramPosition = p.programPosition;\r\n        this.currentMethod = p.method;\r\n        this.currentCallbackAfterReturn = p.callbackAfterReturn;\r\n        this.currentIsCalledFromOutside = p.isCalledFromOutside;\r\n        if (p.stackElementsToPushBeforeFirstExecuting != null) {\r\n\r\n            this.stackframes.push(this.currentStackframe == null ? 0 : this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n\r\n            for (let se of p.stackElementsToPushBeforeFirstExecuting) this.stack.push(se);\r\n            p.stackElementsToPushBeforeFirstExecuting = null;\r\n        }\r\n    }\r\n\r\n    initializeClasses(m: Module) {\r\n\r\n        for (let klass of m.typeStore.typeList) {\r\n            if (klass instanceof Klass) {\r\n                klass.staticClass.classObject = new RuntimeObject(klass.staticClass);\r\n                klass.pushStaticInitializationPrograms(this.programStack);\r\n            }\r\n\r\n            if (klass instanceof Enum) {\r\n                // let staticValueMap = klass.staticClass.classObject.attributeValues.get(klass.identifier);\r\n                let staticValueList = klass.staticClass.classObject.attributes;\r\n                for (let enumInfo of klass.enumInfoList) {\r\n                    // staticValueMap.get(enumInfo.identifier).value = enumInfo.object;\r\n                    staticValueList[enumInfo.ordinal].value = enumInfo.object;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    initializeEnums(m: Module) {\r\n\r\n        for (let enumClass of m.typeStore.typeList) {\r\n            if (enumClass instanceof Enum) {\r\n\r\n                enumClass.pushStaticInitializationPrograms(this.programStack);\r\n\r\n                let valueList: Value[] = [];\r\n\r\n                let valueInitializationProgram: Program = {\r\n                    module: enumClass.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                };\r\n\r\n                let hasAttributeInitializationProgram = enumClass.attributeInitializationProgram.statements.length > 0;\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    this.programStack.push({\r\n                        program: valueInitializationProgram,\r\n                        programPosition: 0,\r\n                        textPosition: { line: 1, column: 1, length: 0 },\r\n                        method: \"Attribut-Initialisierung der Klasse \" + enumClass.identifier,\r\n                        callbackAfterReturn: null,\r\n                        isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                    });\r\n\r\n                }\r\n\r\n\r\n                for (let enumInfo of enumClass.enumInfoList) {\r\n                    enumInfo.object = new EnumRuntimeObject(enumClass, enumInfo);\r\n\r\n                    valueList.push({\r\n                        type: enumClass,\r\n                        value: enumInfo.object\r\n                    });\r\n\r\n                    if (enumInfo.constructorCallProgram != null) {\r\n                        this.programStack.push({\r\n                            program: enumInfo.constructorCallProgram,\r\n                            programPosition: 0,\r\n                            textPosition: { line: 1, column: 1, length: 0 },\r\n                            method: \"Konstruktor von \" + enumClass.identifier,\r\n                            callbackAfterReturn: null,\r\n                            isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                        });\r\n\r\n                    }\r\n\r\n                    if (hasAttributeInitializationProgram) {\r\n                        valueInitializationProgram.statements.push({\r\n                            type: TokenType.initializeEnumValue,\r\n                            position: enumInfo.position,\r\n                            enumClass: enumClass,\r\n                            valueIdentifier: enumInfo.identifier\r\n                        })\r\n                    }\r\n\r\n                }\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    valueInitializationProgram.statements.push({\r\n                        type: TokenType.programEnd,\r\n                        position: { line: 0, column: 0, length: 1 }\r\n                    })\r\n                }\r\n\r\n                enumClass.valueList = {\r\n                    type: new ArrayType(enumClass),\r\n                    value: valueList\r\n                };\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    timerEvents: number = 0;\r\n    start(callback?: () => void) {\r\n\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n\r\n        this.callbackAfterExecution = callback;\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.pauseUntil = null;\r\n\r\n        if (this.state == InterpreterState.error || this.state == InterpreterState.done) {\r\n            this.init();\r\n            this.resetRuntime();\r\n        }\r\n\r\n        this.setState(InterpreterState.running);\r\n\r\n        this.hideProgrampointerPosition();\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.timerStopped = false;\r\n\r\n        this.getTimerClass().startTimer();\r\n\r\n    }\r\n\r\n    getTimerClass(): TimerClass {\r\n        let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n        return <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n    }\r\n\r\n    lastStepTime: number = 0;\r\n    lastTimeBetweenEvents: number = 0;\r\n\r\n    timerFunction(timerDelayMs: number, forceRun: boolean, maxWorkloadFactor: number) {\r\n\r\n        let t0 = performance.now();\r\n\r\n        if (!forceRun) {\r\n            let timeBetweenSteps = 1000 / this.stepsPerSecond;\r\n            if (this.timerStopped || t0 - this.lastStepTime < timeBetweenSteps) return;\r\n            this.lastStepTime = t0;\r\n        }\r\n\r\n        this.lastTimeBetweenEvents = t0 - this.lastStepTime;\r\n\r\n        let n_stepsPerTimerGoal = forceRun ? Number.MAX_SAFE_INTEGER : this.stepsPerSecond * this.timerDelayMs / 1000;\r\n\r\n        this.timerEvents++;\r\n\r\n        let exception: string;\r\n        let i = 0;\r\n\r\n        while (i < n_stepsPerTimerGoal && !this.timerStopped && exception == null &&\r\n            (performance.now() - t0) / timerDelayMs < maxWorkloadFactor\r\n        ) {\r\n            exception = this.nextStep();\r\n            if (exception != null) {\r\n                break;\r\n            }\r\n\r\n            if (this.stepsPerSecond <= this.showProgrampointerUptoStepsPerSecond && !forceRun) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n\r\n            if (this.state == InterpreterState.error ||\r\n                this.state == InterpreterState.done) {\r\n                this.timerStopped = true;\r\n            }\r\n\r\n\r\n            if (this.stepOverNestingLevel < 0 && !this.timerStopped) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n                let position = node.position;\r\n                if (position == null || position.line != this.leaveLine) {\r\n                    this.timerStopped = true;\r\n                    this.setState(InterpreterState.paused);\r\n\r\n                    if (this.comesStatement(TokenType.closeStackframe)) {\r\n                        exception = this.nextStep();\r\n                        if (exception == null && this.comesStatement(TokenType.programEnd)) {\r\n                            exception = this.nextStep();\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n        }\r\n\r\n        if (this.timerStopped) {\r\n            if (this.state == InterpreterState.paused || this.state == InterpreterState.waitingForInput) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n            if (this.callbackAfterExecution != null) {\r\n                this.callbackAfterExecution();\r\n                this.callbackAfterExecution = null;\r\n            }\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        this.timeNetto += dt;\r\n\r\n        // if (\r\n        //     this.timerEvents % 300 == 0) {\r\n        //     console.log(\"Last time between Events: \" + this.lastTimeBetweenEvents);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    throwException(exception: string) {\r\n        this.timerStopped = true;\r\n        this.setState(InterpreterState.error);\r\n\r\n        let $errorDiv = jQuery('<div class=\"jo_exception\"></div>');\r\n\r\n        let consolePresent: boolean = true;\r\n        if (this.main.isEmbedded()) {\r\n            let mainEmbedded: MainEmbedded = <MainEmbedded>this.main;\r\n            let config = mainEmbedded.config;\r\n            if (config.withBottomPanel != true && config.withConsole != true) {\r\n                consolePresent = false;\r\n                let positionString = \"\";\r\n                let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n                if (currentStatement != null) {\r\n                    let textPosition = currentStatement?.position;\r\n                    positionString = \" in Zeile \" + textPosition.line + \", Spalte \" + textPosition.column;\r\n\r\n                    this.main.getBottomDiv()?.console?.showError(this.currentProgram.module, textPosition);\r\n                }\r\n\r\n                alert(\"Fehler\" + positionString + \": \" + exception);\r\n\r\n            }\r\n        }\r\n\r\n        if (consolePresent) {\r\n            $errorDiv.append(jQuery(\"<span class='jo_error-caption'>Fehler:</span>&nbsp;\" + exception + \"<br>\"));\r\n            this.pushCurrentProgram();\r\n\r\n            let first = true;\r\n            for (let i = this.programStack.length - 1; i >= 0; i--) {\r\n\r\n                let p = this.programStack[i];\r\n                let m = (p.method instanceof Method) ? p.method.identifier : p.method;\r\n                let s: string = \"<span class='jo_error-caption'>\" + (first ? \"Ort\" : \"aufgerufen von\") + \": </span>\" + m;\r\n                if (p.textPosition != null) s += \" <span class='jo_runtimeErrorPosition'>(Z \" + p.textPosition.line + \", S \" + p.textPosition.column + \")</span>\";\r\n                s += \"<br>\";\r\n                let errorLine = jQuery(s);\r\n                if (p.textPosition != null) {\r\n                    let that = this;\r\n                    jQuery(errorLine[2]).on('mousedown', () => {\r\n                        that.main.getBottomDiv()?.console?.showError(p.program.module, p.textPosition);\r\n                    });\r\n                }\r\n                $errorDiv.append(errorLine);\r\n\r\n                first = false;\r\n                if (p.isCalledFromOutside != null) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let console = this.main.getBottomDiv()?.console;\r\n\r\n            if (console != null) {\r\n                console.writeConsoleEntry($errorDiv, null, 'rgba(255, 0, 0, 0.4');\r\n                console.showTab();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    hideProgrampointerPosition() {\r\n\r\n        if (this.state == InterpreterState.running) {\r\n\r\n            if (this.stepsPerSecond > this.showProgrampointerUptoStepsPerSecond) {\r\n                this.main.hideProgramPointerPosition();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    comesStatement(statement: TokenType) {\r\n        if (this.currentProgram == null) return false;\r\n        if (this.currentProgramPosition > this.currentProgram.statements.length - 1) return false;\r\n        return this.currentProgram.statements[this.currentProgramPosition].type == statement;\r\n    }\r\n\r\n    resetRuntime() {\r\n        this.printManager.clear();\r\n        this.worldHelper?.destroyWorld();\r\n        this.processingHelper?.destroyWorld();\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n    }\r\n\r\n    stop(restart: boolean = false) {\r\n        this.inputManager.hide();\r\n        this.setState(InterpreterState.paused);\r\n        this.timerStopped = true;\r\n\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.spriteAnimations = [];\r\n        }\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n        this.main.hideProgramPointerPosition();\r\n\r\n        this.getTimerClass().stopTimer();\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.cacheAsBitmap();\r\n        }\r\n\r\n        this.databaseConnectionHelpers.forEach((ch) => ch.close());\r\n        this.databaseConnectionHelpers = [];\r\n\r\n        this.heap = {};\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n\r\n\r\n        setTimeout(() => {\r\n            this.setState(InterpreterState.done);\r\n            this.main.hideProgramPointerPosition();\r\n            if (restart) {\r\n                this.start();\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    pause() {\r\n        this.setState(InterpreterState.paused);\r\n        this.showProgramPointerAndVariables();\r\n        this.timerStopped = true;\r\n    }\r\n\r\n    lastPrintedModule: Module = null;\r\n    showProgramPointerAndVariables() {\r\n        if (this.currentProgram == null) return;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (node == null) return;\r\n        let position = node.position;\r\n        if (position != null) {\r\n            this.main.showProgramPointerPosition(this.currentProgram.module.file, position);\r\n            this.debugger.showData(this.currentProgram, position, this.stack, this.currentStackframe, this.heap);\r\n            let bottomDiv = this.main.getBottomDiv();\r\n            if (bottomDiv.programPrinter != null) {\r\n                if (this.currentProgram.module != this.lastPrintedModule) {\r\n                    this.main.getBottomDiv().printModuleToBottomDiv(null, this.currentProgram.module);\r\n                    this.lastPrintedModule = this.currentProgram.module;\r\n                }\r\n                this.main.getBottomDiv().programPrinter.showNode(node);\r\n            }\r\n        }\r\n    }\r\n\r\n    stepOut() {\r\n        this.stepOverNestingLevel = 0;\r\n        this.start();\r\n    }\r\n\r\n    oneStep(stepInto: boolean) {\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n        this.isFirstStatement = true;\r\n        if (this.state != InterpreterState.paused) {\r\n            this.init();\r\n            if (this.state == InterpreterState.not_initialized) {\r\n                return;\r\n            }\r\n            this.resetRuntime();\r\n            this.showProgramPointerAndVariables();\r\n            this.setState(InterpreterState.paused);\r\n            // Are there static Variables to initialize?\r\n            if (this.currentMethod == \"Hauptprogramm\") {\r\n                // No static variable initializers\r\n                this.return;\r\n            }\r\n        }\r\n        this.stepOverNestingLevel = 10000;\r\n        let oldStepOverNestingLevel = this.stepOverNestingLevel;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        let position = node.position;\r\n        let exception = this.nextStep();\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n            return;\r\n        }\r\n\r\n        if (!stepInto && this.stepOverNestingLevel > oldStepOverNestingLevel) {\r\n            this.stepOverNestingLevel = 0;\r\n            if (position != null) {\r\n                this.leaveLine = position.line;\r\n            } else {\r\n                this.leaveLine = -1;\r\n            }\r\n            this.start();\r\n        } else\r\n            //@ts-ignore\r\n            if (this.state == InterpreterState.done) {\r\n                this.main.hideProgramPointerPosition();\r\n            } else {\r\n                this.showProgramPointerAndVariables();\r\n                //@ts-ignore\r\n                if (this.state != InterpreterState.waitingForInput) {\r\n                    this.setState(InterpreterState.paused);\r\n                }\r\n            }\r\n\r\n    }\r\n\r\n    stepFinished: boolean = false;\r\n\r\n    nextStep(): string {\r\n\r\n        this.stepFinished = false;\r\n\r\n        let node: Statement;\r\n\r\n        let exception: string;\r\n\r\n        while (!this.stepFinished && !this.additionalStepFinishedFlag && exception == null) {\r\n\r\n\r\n            if (typeof this.currentProgram == \"undefined\") {\r\n                debugger;\r\n            }\r\n\r\n            if (this.currentProgramPosition > this.currentProgram.statements.length - 1) {\r\n                this.setState(InterpreterState.done);\r\n                break;\r\n            }\r\n\r\n            node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n            if (node.stepFinished != null) {\r\n                this.stepFinished = node.stepFinished;\r\n            }\r\n\r\n            exception = this.executeNode(node);\r\n\r\n        }\r\n\r\n        this.additionalStepFinishedFlag = false;\r\n\r\n        this.steps++;\r\n\r\n        return exception;\r\n    }\r\n\r\n    executeNode(node: Statement): string {\r\n\r\n        if (node.breakpoint != null && !this.isFirstStatement) {\r\n            this.additionalStepFinishedFlag = true;\r\n            this.pause();\r\n            return;\r\n        }\r\n\r\n        this.isFirstStatement = false;\r\n        let stackTop = this.stack.length - 1;\r\n        let stackframeBegin = this.currentStackframe;\r\n        let stack = this.stack;\r\n        let value: Value;\r\n\r\n        switch (node.type) {\r\n            case TokenType.castValue:\r\n                let relPos = node.stackPosRelative == null ? 0 : node.stackPosRelative;\r\n                value = stack[stackTop + relPos];\r\n                try {\r\n                    let casted = value.type.castTo(value, node.newType);\r\n                    if (casted == undefined) casted = {\r\n                        value: value.value,\r\n                        type: node.newType\r\n                    }\r\n                    stack[stackTop + relPos] = casted;\r\n                } catch (err) {\r\n                    if (err.message) return err.message;\r\n                    else return \"Bei dem Casten von \" + value.type.identifier + \" zu \" + node.newType.identifier + \" trat ein Fehler auf: \" + err.name + \".\";\r\n                }\r\n                break;\r\n            case TokenType.checkCast:\r\n                value = stack[stackTop];\r\n                if (value.value == null) break;\r\n                let rto = <RuntimeObject>value.value;\r\n                if (node.newType instanceof Klass) {\r\n                    if (typeof rto == \"object\") {\r\n                        if (!rto.class.hasAncestorOrIs(node.newType)) {\r\n                            return (\"Das Objekt der Klasse \" + rto.class.identifier + \" kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    } else {\r\n                        if (typeof rto == \"number\" && [\"Integer\", \"Double\", \"Float\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zahl kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"string\" && [\"String\", \"Character\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zeichenkette kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"boolean\" && node.newType.identifier != \"Boolean\") {\r\n                            return (\"Ein boolescher Wert kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    }\r\n                } else if (node.newType instanceof Interface) {\r\n                    if (!(<Klass>rto.class).implementsInterface(node.newType)) {\r\n                        return (\"Das Objekt der Klasse \" + rto.class.identifier + \" implementiert nicht das Interface \" + node.newType.identifier + \".\");\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.localVariableDeclaration:\r\n                let variable = node.variable;\r\n                let type = variable.type;\r\n                value = {\r\n                    type: type,\r\n                    value: null\r\n                };\r\n                if (type instanceof PrimitiveType) {\r\n                    value.value = type.initialValue;\r\n                }\r\n                stack[variable.stackPos + stackframeBegin] = value;\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    stack.push(value);\r\n                }\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                stack.push(stack[node.stackposOfVariable + stackframeBegin]);\r\n                break;\r\n            case TokenType.popAndStoreIntoVariable:\r\n                stack[node.stackposOfVariable + stackframeBegin] = stack.pop();\r\n                break;\r\n            case TokenType.pushAttribute:\r\n                let object1 = node.useThisObject ? stack[stackframeBegin].value : stack.pop().value;\r\n                if (object1 == null) return \"Zugriff auf ein Attribut (\" + node.attributeIdentifier + \") des null-Objekts\";\r\n                let value1 = (<RuntimeObject>object1).getValue(node.attributeIndex);\r\n                if (value1?.updateValue != null) {\r\n                    value1.updateValue(value1);\r\n                }\r\n                stack.push(value1);\r\n                break;\r\n            case TokenType.pushArrayLength:\r\n                let a = stack.pop().value;\r\n                if (a == null) return \"Zugriff auf das length-Attribut des null-Objekts\";\r\n                stack.push({ type: intPrimitiveType, value: (<any[]>a).length });\r\n                break;\r\n            case TokenType.assignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value = value.value;\r\n                if (!(stack[stackTop - 1].type instanceof PrimitiveType)) {\r\n                    stack[stackTop - 1].type = value.type;\r\n                }\r\n                if (!node.leaveValueOnStack) {\r\n                    stack.pop();\r\n                }\r\n                break;\r\n            case TokenType.plusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value += value.value;\r\n                break;\r\n            case TokenType.minusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value -= value.value;\r\n                break;\r\n            case TokenType.multiplicationAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value *= value.value;\r\n                break;\r\n            case TokenType.divisionAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value /= value.value;\r\n                break;\r\n            case TokenType.moduloAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value %= value.value;\r\n                break;\r\n            case TokenType.ANDAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value &= value.value;\r\n                break;\r\n            case TokenType.ORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value |= value.value;\r\n                break;\r\n            case TokenType.XORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value ^= value.value;\r\n                break;\r\n            case TokenType.shiftLeftAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value <<= value.value;\r\n                break;\r\n            case TokenType.shiftRightAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>= value.value;\r\n                break;\r\n            case TokenType.shiftRightUnsignedAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>>= value.value;\r\n                break;\r\n            case TokenType.binaryOp:\r\n                let secondOperand = stack.pop();\r\n                let resultValue =\r\n                    node.leftType.compute(node.operator, stack[stackTop - 1], secondOperand);\r\n                if (resultValue instanceof Error) {\r\n                    if (resultValue.message) return resultValue.message;\r\n                    else \"Bei der Berechnung von \" + stack[stackTop - 1].type.identifier + \" \" +\r\n                        TokenTypeReadable[node.operator] + \" \" + secondOperand.type.identifier +\r\n                        \" trat ein Fehler (\" + resultValue.name + \") auf.\"\r\n\r\n                }\r\n                let resultType = node.leftType.getResultType(node.operator, secondOperand.type);\r\n                stack[stackTop - 1] = {\r\n                    type: resultType,\r\n                    value: resultValue\r\n                };\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let oldValue = stack.pop();\r\n                if (node.operator == TokenType.minus) {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: -oldValue.value\r\n                    })\r\n                } else {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: !oldValue.value\r\n                    })\r\n                }\r\n                break;\r\n            case TokenType.pushConstant:\r\n                stack.push({\r\n                    value: node.value,\r\n                    type: node.dataType\r\n                });\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                if (node.klass instanceof Klass) {\r\n                    stack.push({\r\n                        type: node.klass.staticClass,\r\n                        value: node.klass.staticClass.classObject\r\n                    });\r\n                } else {\r\n                    // This is to enable instanceof operator with interfaces\r\n                    stack.push({\r\n                        type: node.klass,\r\n                        value: node.klass\r\n                    });\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                value = node.klass.classObject.getValue(node.attributeIndex);\r\n                if (value.updateValue != null) {\r\n                    value.updateValue(value);\r\n                }\r\n                stack.push(value);\r\n                break;\r\n            // case TokenType.pushStaticAttributeIntrinsic:\r\n            //     value = node.\r\n            //     stack.push({ type: node.attribute.type, value: node.attribute.updateValue(null) });\r\n            //     break;\r\n            case TokenType.selectArrayElement:\r\n                let index = stack.pop();\r\n                let array = stack.pop();\r\n\r\n                if (array.value == null) return \"Zugriff auf ein Element eines null-Feldes\";\r\n\r\n                if (index.value >= array.value.length || index.value < 0) {\r\n                    return \"Zugriff auf das Element mit Index \" + index.value + \" eines Feldes der Länge \" + array.value.length;\r\n                }\r\n                stack.push(array.value[index.value]);\r\n                break;\r\n\r\n            case TokenType.callMainMethod:\r\n                this.stack.push({ value: node.staticClass.classObject, type: node.staticClass });\r\n\r\n                let parameter: Value = {\r\n                    value: [{ value: \"Test\", type: stringPrimitiveType }],\r\n                    type: new ArrayType(stringPrimitiveType)\r\n                };\r\n                let parameterBegin2 = stackTop + 2; // 1 parameter\r\n\r\n                this.stack.push(parameter);\r\n\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.programStack.push({\r\n                    program: this.currentProgram,\r\n                    programPosition: this.currentProgramPosition + 1,\r\n                    textPosition: node.position,\r\n                    method: this.currentMethod,\r\n                    callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                    isCalledFromOutside: null\r\n                });\r\n\r\n                this.currentCallbackAfterReturn = null;\r\n                this.currentStackframe = parameterBegin2;\r\n\r\n                this.currentProgram = node.method.program;\r\n                this.currentMethod = node.method;\r\n                this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                for (let i = 0; i < node.method.reserveStackForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n\r\n                // this.stepOverNestingLevel++;\r\n\r\n                break;\r\n            case TokenType.makeEllipsisArray:\r\n                let ellipsisArray: Value[] = stack.splice(stack.length - node.parameterCount, node.parameterCount);\r\n\r\n                stack.push({\r\n                    value: ellipsisArray,\r\n                    type: node.arrayType\r\n                })\r\n\r\n                break;\r\n            case TokenType.callMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method = node.method;\r\n\r\n                let parameterBegin = stackTop + 1 + node.stackframeBegin;\r\n                let parameters1 = method.parameterlist.parameters;\r\n                for (let i = parameterBegin + 1; i <= stackTop; i++) {\r\n                    if (this.stack[i] != null && this.stack[i].type instanceof PrimitiveType) {\r\n                        stack[i] = {\r\n                            type: parameters1[i - parameterBegin - 1].type,  // cast to parameter type...\r\n                            value: stack[i].value\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (stack[parameterBegin].value == null && !method.isStatic) {\r\n                    return \"Aufruf der Methode \" + method.identifier + \" des null-Objekts\";\r\n                }\r\n\r\n                if (method.isAbstract || method.isVirtual && !node.isSuperCall) {\r\n                    let object = stack[parameterBegin];\r\n                    if (object.value instanceof RuntimeObject) {\r\n                        method = (<Klass>(<RuntimeObject>object.value).class).getMethodBySignature(method.signature);\r\n                    } else {\r\n                        method = (<Klass>object.type).getMethodBySignature(method.signature);\r\n                    }\r\n                }\r\n\r\n                if (method == null) {\r\n                    // TODO: raise runtime error\r\n                    break;\r\n                }\r\n\r\n                if (method.invoke != null) {\r\n                    let rt = method.getReturnType();\r\n                    let parameters = stack.splice(parameterBegin);\r\n                    let returnValue = method.invoke(parameters);\r\n                    if (rt != null && rt.identifier != 'void') {\r\n                        stack.push({\r\n                            value: returnValue,\r\n                            type: rt\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.stackframes.push(this.currentStackframe);\r\n                    this.programStack.push({\r\n                        program: this.currentProgram,\r\n                        programPosition: this.currentProgramPosition + 1,\r\n                        textPosition: node.position,\r\n                        method: this.currentMethod,\r\n                        callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                        isCalledFromOutside: null\r\n                    });\r\n\r\n                    this.currentCallbackAfterReturn = null;\r\n                    this.currentStackframe = parameterBegin;\r\n\r\n                    this.currentProgram = method.program;\r\n                    this.currentMethod = method;\r\n                    this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                    for (let i = 0; i < method.reserveStackForLocalVariables; i++) {\r\n                        stack.push(null);\r\n                    }\r\n\r\n                    this.stepOverNestingLevel++;\r\n                    this.additionalStepFinishedFlag = true;\r\n                }\r\n                break;\r\n            case TokenType.callInputMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method1 = node.method;\r\n                let parameterBegin1 = stackTop + 1 + node.stackframeBegin;\r\n                let parameters = stack.splice(parameterBegin1);\r\n\r\n                this.pauseForInput();\r\n\r\n                let that = this;\r\n                this.inputManager.readInput(method1, parameters, (value: Value) => {\r\n                    that.resumeAfterInput(value);\r\n                });\r\n                break;\r\n\r\n            case TokenType.return:\r\n                this.return(node, stack);\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                stack.splice(stackTop + 1 - node.popCount);\r\n                break;\r\n            case TokenType.initStackframe:\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.currentStackframe = stackTop + 1;\r\n                for (let i = 0; i < node.reserveForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n                break;\r\n            case TokenType.closeStackframe:\r\n                stack.splice(stackframeBegin);\r\n                this.currentStackframe = this.stackframes.pop();\r\n                break;\r\n            case TokenType.newObject:\r\n                let object = new RuntimeObject(node.class);\r\n\r\n                value = {\r\n                    value: object,\r\n                    type: node.class\r\n                };\r\n\r\n                stack.push(value);\r\n                if (node.subsequentConstructorCall) {\r\n                    stack.push(value);\r\n                    stackTop++;\r\n                }\r\n\r\n                let klass: Klass = node.class;\r\n\r\n                while (klass != null) {\r\n                    let aip = klass.attributeInitializationProgram;\r\n                    if (aip.statements.length > 0) {\r\n\r\n                        this.stackframes.push(this.currentStackframe);\r\n                        this.programStack.push({\r\n                            program: this.currentProgram,\r\n                            programPosition: this.currentProgramPosition + 1,\r\n                            textPosition: node.position,\r\n                            method: this.currentMethod,\r\n                            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                            isCalledFromOutside: null\r\n                        });\r\n\r\n                        this.currentCallbackAfterReturn = null;\r\n                        this.currentStackframe = stackTop + 1;\r\n\r\n                        this.currentProgram = aip;\r\n                        this.currentProgramPosition = -1;\r\n                        this.currentMethod = \"Konstruktor von \" + klass.identifier;\r\n                        this.stepOverNestingLevel++;\r\n\r\n                        this.additionalStepFinishedFlag = true;\r\n\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                // N.B.: constructor call is next statement\r\n\r\n                break;\r\n            case TokenType.processPostConstructorCallbacks:\r\n                value = stack[stackTop];\r\n                let classType = <Klass>value.type;\r\n                for (let pcc of classType.getPostConstructorCallbacks()) {\r\n                    pcc(value.value);\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopInit:\r\n                stack[node.stackPosOfCounter + stackframeBegin] = {\r\n                    type: intPrimitiveType,\r\n                    value: 0\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n                let counter: number = stack[node.stackPosOfCounter + stackframeBegin].value++;\r\n                let collection = stack[node.stackPosOfCollection + stackframeBegin].value;\r\n\r\n                switch (node.kind) {\r\n                    case \"array\":\r\n                        if (counter < (<any[]>collection).length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = (<any[]>collection)[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = (<any[]>collection)[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"internalList\":\r\n                        let list: any[] = (<ListHelper>(<RuntimeObject>collection).intrinsicData[\"ListHelper\"]).valueArray;\r\n                        if (counter < list.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        let list1: any[] = (<GroupHelper>(<RuntimeObject>collection).intrinsicData[\"Actor\"]).shapes;\r\n                        if (counter < list1.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list1[counter];\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list1[counter].klass;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n                value = stack[stackTop];\r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.incrementDecrementAfter:\r\n                value = stack[stackTop];\r\n                // replace value by copy:\r\n                stack[stackTop] = {\r\n                    value: value.value,\r\n                    type: value.type\r\n                };\r\n                // increment value which is not involved in subsequent \r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.jumpAlways:\r\n                this.currentProgramPosition = node.destination - 1;\r\n                break;\r\n            case TokenType.jumpIfTrue:\r\n                value = stack.pop();\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalse:\r\n                value = stack.pop();\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.noOp:\r\n                break;\r\n            case TokenType.programEnd:\r\n\r\n                if (this.programStack.length > 0) {\r\n                    this.popProgram();\r\n                    this.currentProgramPosition--; // gets increased later on after switch ends\r\n                    this.additionalStepFinishedFlag = true;\r\n                    this.leaveLine = -1;\r\n\r\n                    if (node.pauseAfterProgramEnd) {\r\n                        this.stepOverNestingLevel = -1;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                if ((this.worldHelper != null && this.worldHelper.hasActors()) || this.processingHelper != null\r\n                    || (this.gngEreignisbehandlungHelper != null && this.gngEreignisbehandlungHelper.hasAktionsEmpfaenger())) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n                let timerClass: TimerClass = <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n                if (timerClass.timerEntries.length > 0) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                // this.setState(InterpreterState.done);\r\n                this.currentProgram = null;\r\n                this.currentProgramPosition = -1;\r\n                this.additionalStepFinishedFlag = true;\r\n\r\n                Helper.showHelper(\"speedControlHelper\", this.main);\r\n\r\n                this.printManager.showProgramEnd();\r\n\r\n                if (this.steps > 0) {\r\n                    let dt = performance.now() - this.timeWhenProgramStarted;\r\n                    let message = 'Executed ' + this.steps + ' steps in ' + this.round(dt)\r\n                        + ' ms (' + this.round(this.steps / dt * 1000) + ' steps/s)';\r\n                    this.main.getBottomDiv()?.console?.writeConsoleEntry(message, null);\r\n                    // console.log(this.timerEvents + \" TimeEvents in \" + dt + \" ms ergibt ein Event alle \" + dt/this.timerEvents + \" ms.\");\r\n                    // console.log(\"Vorgegebene Timerfrequenz: Alle \" + this.timerDelayMs + \" ms\");\r\n                    this.steps = -1;\r\n                }\r\n\r\n                // if (this.worldHelper != null) {\r\n                //     this.worldHelper.spriteAnimations = [];\r\n                // }\r\n                // this.gngEreignisbehandlungHelper?.detachEvents();\r\n                // this.gngEreignisbehandlungHelper = null;\r\n\r\n                // this.main.hideProgramPointerPosition();\r\n\r\n                // if(this.worldHelper != null){\r\n                //     this.worldHelper.cacheAsBitmap();\r\n                // }\r\n\r\n                this.currentProgramPosition--;\r\n                this.stop();\r\n                break;\r\n            case TokenType.print:\r\n            case TokenType.println:\r\n                let text = null;\r\n                let color = null;\r\n                if (node.withColor) color = <string | number>stack.pop().value;\r\n                if (!node.empty) {\r\n                    text = <string>stack.pop().value;\r\n                    if (text == null) text = \"null\";\r\n                }\r\n                if (node.type == TokenType.println) {\r\n                    this.printManager.println(text, color);\r\n                } else {\r\n                    this.printManager.print(text, color);\r\n                }\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                let counts: number[] = [];\r\n                for (let i = 0; i < node.dimension; i++) {\r\n                    counts.push(<number>stack.pop().value);\r\n                }\r\n                stack.push(this.makeEmptyArray(counts, node.arrayType));\r\n                break;\r\n            case TokenType.beginArray:\r\n                stack.push({\r\n                    type: node.arrayType,\r\n                    value: []\r\n                });\r\n                break;\r\n            case TokenType.addToArray:\r\n                stackTop -= node.numberOfElementsToAdd;\r\n                // let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd);\r\n                let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd).map(tvo => ({ type: tvo.type, value: tvo.value }));\r\n                stack[stackTop].value = (<any[]>stack[stackTop].value).concat(values);\r\n                break;\r\n            case TokenType.pushEnumValue:\r\n                let enumInfo = node.enumClass.identifierToInfoMap[node.valueIdentifier];\r\n                stack.push(node.enumClass.valueList.value[enumInfo.ordinal]);\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                let switchValue = stack.pop().value;\r\n                let destination = node.destinationMap[switchValue];\r\n                if (destination != null) {\r\n                    this.currentProgramPosition = destination - 1; // it will be increased after this switch-statement!\r\n                } else {\r\n                    if (node.defaultDestination != null) {\r\n                        this.currentProgramPosition = node.defaultDestination - 1;\r\n                    }\r\n                    // there's a jumpnode after this node which jumps right after last switch case,\r\n                    // so there's nothing more to do here.\r\n                }\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n\r\n                let v = node.variable;\r\n                this.heap[v.identifier] = v;\r\n                v.value = {\r\n                    type: v.type,\r\n                    value: (v.type instanceof PrimitiveType) ? v.type.initialValue : null\r\n                }\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    this.stack.push(v.value);\r\n                }\r\n\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                let v1 = this.heap[node.identifier];\r\n                if (v1 != null) {\r\n                    this.stack.push(v1.value);\r\n                } else {\r\n                    return \"Die Variable \" + node.identifier + \" ist nicht bekannt.\";\r\n                }\r\n                break;\r\n            case TokenType.returnIfDestroyed:\r\n                let shapeRuntimeObject: RuntimeObject = this.stack[stackframeBegin].value;\r\n                if (shapeRuntimeObject != null) {\r\n                    let shape = shapeRuntimeObject.intrinsicData[\"Actor\"];\r\n                    if (shape[\"isDestroyed\"] == true) {\r\n                        this.return(null, stack);\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.setPauseDuration:\r\n                let duration = this.stack.pop().value;\r\n                if (this.pauseUntil == null) {\r\n                    this.pauseUntil = performance.now() + duration;\r\n                }\r\n                break;\r\n            case TokenType.pause:\r\n                node.stepFinished = true;\r\n                if (this.pauseUntil != null && performance.now() < this.pauseUntil) {\r\n                    this.currentProgramPosition--;\r\n                } else {\r\n                    this.pauseUntil = null;\r\n                }\r\n                break;\r\n\r\n        }\r\n\r\n\r\n        this.currentProgramPosition++;\r\n\r\n    }\r\n\r\n    oldState: InterpreterState;\r\n    pauseForInput() {\r\n        this.timerStopped = true;\r\n        this.additionalStepFinishedFlag = true;\r\n        this.oldState = this.state;\r\n        this.setState(InterpreterState.waitingForInput);\r\n        this.showProgramPointerAndVariables();\r\n    }\r\n\r\n    resumeAfterInput(value: Value, popPriorValue: boolean = false) {\r\n        if (popPriorValue) this.stack.pop();\r\n        if (value != null) this.stack.push(value);\r\n        this.main.hideProgramPointerPosition();\r\n        this.setState(InterpreterState.paused);\r\n        if (this.oldState == InterpreterState.running) {\r\n            this.start();\r\n        } else {\r\n            this.showProgramPointerAndVariables();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return(node: ReturnStatement | null, stack: Value[]) {\r\n\r\n        let currentCallbackAfterReturn = this.currentCallbackAfterReturn;\r\n\r\n        if (node != null && node.copyReturnValueToStackframePos0) {\r\n            let returnValue: Value = stack.pop();\r\n            stack[this.currentStackframe] = returnValue;\r\n            stack.splice(this.currentStackframe + 1);\r\n        } else {\r\n            stack.splice(this.currentStackframe + ((node != null && node.leaveThisObjectOnStack) ? 1 : 0));\r\n        }\r\n\r\n        this.currentStackframe = this.stackframes.pop();\r\n\r\n        this.popProgram();\r\n        if (node != null && node.methodWasInjected == true) this.currentProgramPosition++;\r\n        this.currentProgramPosition--;  // position gets increased by one at the end of this switch-statement, so ... - 1\r\n        this.stepOverNestingLevel--;\r\n\r\n        if (currentCallbackAfterReturn != null) {\r\n            currentCallbackAfterReturn(this);\r\n        }\r\n\r\n        if (this.stepOverNestingLevel < 0 && this.currentProgram.statements[this.currentProgramPosition + 1].type == TokenType.jumpAlways) {\r\n            this.stepFinished = false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeEmptyArray(counts: number[], type: Type): Value {\r\n        let type1 = (<ArrayType>type).arrayOfType;\r\n        if (counts.length == 1) {\r\n            let array: Value[] = [];\r\n            for (let i = 0; i < counts[0]; i++) {\r\n                let v = {\r\n                    type: type1,\r\n                    value: null\r\n                };\r\n\r\n                if (type1 instanceof PrimitiveType) {\r\n                    v.value = type1.initialValue;\r\n                }\r\n\r\n                array.push(v);\r\n\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        } else {\r\n            let array: Value[] = [];\r\n            let n = counts.pop();\r\n            for (let i = 0; i < n; i++) {\r\n                array.push(this.makeEmptyArray(counts, type1));\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    round(n: number): string {\r\n        return \"\" + Math.round(n * 10000) / 10000;\r\n    }\r\n\r\n    runningStates: InterpreterState[] = [InterpreterState.paused, InterpreterState.running, InterpreterState.waitingForInput];\r\n\r\n    setState(state: InterpreterState) {\r\n\r\n        // console.log(\"Set state \" + InterpreterState[state]);\r\n\r\n        let oldState = this.state;\r\n        this.state = state;\r\n\r\n        if (state == InterpreterState.error || state == InterpreterState.done) {\r\n            this.closeAllWebsockets();\r\n        }\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        for (let actionId of this.actions) {\r\n            am.setActive(\"interpreter.\" + actionId, this.buttonActiveMatrix[actionId][state]);\r\n        }\r\n\r\n        let buttonStartActive = this.buttonActiveMatrix['start'][state];\r\n\r\n        if (buttonStartActive) {\r\n            this.controlButtons.$buttonStart.show();\r\n            this.controlButtons.$buttonPause.hide();\r\n        } else {\r\n            this.controlButtons.$buttonStart.hide();\r\n            this.controlButtons.$buttonPause.show();\r\n        }\r\n\r\n        let buttonStopActive = this.buttonActiveMatrix['stop'][state];\r\n        if (buttonStopActive) {\r\n            // this.controlButtons.$buttonEdit.show();\r\n        } else {\r\n            // this.controlButtons.$buttonEdit.hide();\r\n            if (this.worldHelper != null) {\r\n                this.worldHelper.clearActorLists();\r\n            }\r\n            this.gngEreignisbehandlungHelper?.detachEvents();\r\n            this.gngEreignisbehandlungHelper = null;\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) >= 0 && this.runningStates.indexOf(state) < 0) {\r\n            this.debugger.disable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.keyboardTool.unsubscribeAllListeners();\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) < 0 && this.runningStates.indexOf(state) >= 0) {\r\n            this.debugger.enable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        }\r\n\r\n    }\r\n\r\n    closeAllWebsockets() {\r\n        this.webSocketsToCloseAfterProgramHalt.forEach(socket => socket.close());\r\n        this.webSocketsToCloseAfterProgramHalt = [];\r\n    }\r\n\r\n\r\n    pushCurrentProgram() {\r\n\r\n        if (this.currentProgram == null) return;\r\n\r\n        let textPosition: TextPosition;\r\n        let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (currentStatement != null) {\r\n            textPosition = currentStatement.position;\r\n        }\r\n\r\n        this.programStack.push({\r\n            program: this.currentProgram,\r\n            programPosition: this.currentProgramPosition,\r\n            textPosition: textPosition,\r\n            method: this.currentMethod,\r\n            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n            isCalledFromOutside: this.currentIsCalledFromOutside\r\n        })\r\n\r\n        this.currentCallbackAfterReturn = null;\r\n        this.currentIsCalledFromOutside = null;\r\n\r\n    }\r\n\r\n    // runTimer(method: Method, stackElements: Value[],\r\n    //     callbackAfterReturn: (interpreter: Interpreter) => void) {\r\n\r\n    //     if(this.state != InterpreterState.running){\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.pushCurrentProgram();\r\n\r\n    //     this.currentProgram = method.program;\r\n    //     this.currentMethod = method;\r\n    //     this.currentProgramPosition = 0;\r\n    //     this.currentCallbackAfterReturn = callbackAfterReturn;\r\n    //     this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n    //     this.stackframes.push(this.currentStackframe);\r\n    //     this.currentStackframe = this.stack.length;\r\n    //     for (let se of stackElements) this.stack.push(se);\r\n    //     let statements = method.program.statements;\r\n\r\n    //     // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n    //     // beforehand to compensate this effect.\r\n    //     if(statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n    // }\r\n\r\n    runTimer(method: Method, stackElements: Value[],\r\n        callbackAfterReturn: (interpreter: Interpreter) => void, isActor: boolean) {\r\n\r\n        if (this.state != InterpreterState.running) {\r\n            return;\r\n        }\r\n\r\n        let statements = method.program.statements;\r\n\r\n        if (isActor || this.programStack.length == 0) {\r\n            // Main Program is running => Timer has higher precedence\r\n            this.pushCurrentProgram();\r\n\r\n            this.currentProgram = method.program;\r\n            this.currentMethod = method;\r\n            this.currentProgramPosition = 0;\r\n            this.currentCallbackAfterReturn = callbackAfterReturn;\r\n            this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n            this.stackframes.push(this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n            this.stack = this.stack.concat(stackElements);\r\n            // for (let se of stackElements) this.stack.push(se);\r\n\r\n            // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n            // beforehand to compensate this effect.\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n        } else {\r\n            // another Timer is running => queue up\r\n            // position 0 in program stack is main program\r\n            // => insert timer in position 1\r\n\r\n            this.programStack.splice(1, 0, {\r\n                program: method.program,\r\n                programPosition: 0,\r\n                textPosition: { line: 0, column: 0, length: 0 },\r\n                method: method,\r\n                callbackAfterReturn: callbackAfterReturn,\r\n                isCalledFromOutside: \"Timer\",\r\n                stackElementsToPushBeforeFirstExecuting: stackElements\r\n            });\r\n\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    evaluate(program: Program): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = this.stack.length;\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n        let oldStackframe = this.currentStackframe;\r\n\r\n        let error: string;\r\n        let stepCount = 0;\r\n\r\n        try {\r\n            while (error == null &&\r\n                (this.currentProgram != program || this.currentProgramPosition <\r\n                    this.currentProgram.statements.length)\r\n                && stepCount < 100000\r\n                // && this.currentProgram == program\r\n            ) {\r\n                error = this.nextStep();\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (this.currentProgram == program && this.programStack.length > 0) {\r\n            this.popProgram();\r\n        }\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    executeImmediatelyInNewStackframe(program: Program, valuesToPushBeforeExecuting: Value[]): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        let oldProgramPosition = this.currentProgramPosition;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let numberOfStackframesBefore = this.stackframes.length;\r\n        this.stackframes.push(this.currentStackframe);\r\n        let stacksizeBefore = this.stack.length;\r\n        this.currentStackframe = stacksizeBefore;\r\n\r\n        for (let v of valuesToPushBeforeExecuting) this.stack.push(v);\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n\r\n        let stepCount = 0;\r\n        let error = null;\r\n\r\n        try {\r\n            while (this.stackframes.length > numberOfStackframesBefore\r\n                && stepCount < 100000 && error == null\r\n            ) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n                error = this.executeNode(node);\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (stepCount == 100000) this.throwException(\"Die Ausführung des Konstruktors dauerte zu lange.\");\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        // this.currentProgramPosition++;\r\n\r\n        this.currentProgramPosition = oldProgramPosition;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    instantiateObjectImmediately(klass: Klass): RuntimeObject {\r\n        let object = new RuntimeObject(klass);\r\n\r\n        let value = {\r\n            value: object,\r\n            type: klass\r\n        };\r\n\r\n        let klass1 = klass;\r\n\r\n        while (klass1 != null) {\r\n            let aip = klass1.attributeInitializationProgram;\r\n            if (aip.statements.length > 0) {\r\n\r\n                this.executeImmediatelyInNewStackframe(aip, [value]);\r\n\r\n            }\r\n            klass1 = klass1.baseClass;\r\n        }\r\n\r\n        let constructor = klass.getMethodBySignature(klass.identifier + \"()\");\r\n        if (constructor != null && constructor.program != null) {\r\n            // let programWithoutReturnStatement: Program = {\r\n            //     labelManager: null,\r\n            //     module: constructor.program.module,\r\n            //     statements: constructor.program.statements.slice(0, constructor.program.statements.length - 1)\r\n            // };\r\n            this.executeImmediatelyInNewStackframe(constructor.program, [value]);\r\n        }\r\n\r\n        return object;\r\n\r\n    }\r\n\r\n    registerDatabaseConnection(ch: ConnectionHelper) {\r\n        this.databaseConnectionHelpers.push(ch);\r\n    }\r\n\r\n\r\n}","/* \r\n * Convex hull algorithm - Library (TypeScript)\r\n * \r\n * Copyright (c) 2020 Project Nayuki\r\n * https://www.nayuki.io/page/convex-hull-algorithm\r\n * \r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with this program (see COPYING.txt and COPYING.LESSER.txt).\r\n * If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\n\r\n\r\n\r\nexport namespace convexhull {\r\n    \r\n    export interface Point {\r\n        x: number;\r\n        y: number;\r\n    }\r\n\t// Returns a new array of points representing the convex hull of\r\n\t// the given set of points. The convex hull excludes collinear points.\r\n\t// This algorithm runs in O(n log n) time.\r\n\texport function makeHull<P extends Point>(points: Array<P>): Array<P> {\r\n\t\tlet newPoints: Array<P> = points.slice();\r\n\t\tnewPoints.sort(convexhull.POINT_COMPARATOR);\r\n\t\treturn convexhull.makeHullPresorted(newPoints);\r\n\t}\r\n\t\r\n\t\r\n\t// Returns the convex hull, assuming that each points[i] <= points[i + 1]. Runs in O(n) time.\r\n\texport function makeHullPresorted<P extends Point>(points: Array<P>): Array<P> {\r\n\t\tif (points.length <= 1)\r\n\t\t\treturn points.slice();\r\n\t\t\r\n\t\t// Andrew's monotone chain algorithm. Positive y coordinates correspond to \"up\"\r\n\t\t// as per the mathematical convention, instead of \"down\" as per the computer\r\n\t\t// graphics convention. This doesn't affect the correctness of the result.\r\n\t\t\r\n\t\tlet upperHull: Array<P> = [];\r\n\t\tfor (let i = 0; i < points.length; i++) {\r\n\t\t\tconst p: P = points[i];\r\n\t\t\twhile (upperHull.length >= 2) {\r\n\t\t\t\tconst q: P = upperHull[upperHull.length - 1];\r\n\t\t\t\tconst r: P = upperHull[upperHull.length - 2];\r\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\r\n\t\t\t\t\tupperHull.pop();\r\n\t\t\t\telse\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tupperHull.push(p);\r\n\t\t}\r\n\t\tupperHull.pop();\r\n\t\t\r\n\t\tlet lowerHull: Array<P> = [];\r\n\t\tfor (let i = points.length - 1; i >= 0; i--) {\r\n\t\t\tconst p: P = points[i];\r\n\t\t\twhile (lowerHull.length >= 2) {\r\n\t\t\t\tconst q: P = lowerHull[lowerHull.length - 1];\r\n\t\t\t\tconst r: P = lowerHull[lowerHull.length - 2];\r\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\r\n\t\t\t\t\tlowerHull.pop();\r\n\t\t\t\telse\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tlowerHull.push(p);\r\n\t\t}\r\n\t\tlowerHull.pop();\r\n\t\t\r\n\t\tif (upperHull.length == 1 && lowerHull.length == 1 && upperHull[0].x == lowerHull[0].x && upperHull[0].y == lowerHull[0].y)\r\n\t\t\treturn upperHull;\r\n\t\telse\r\n\t\t\treturn upperHull.concat(lowerHull);\r\n\t}\r\n\t\r\n\t\r\n\texport function POINT_COMPARATOR(a: Point, b: Point): number {\r\n\t\tif (a.x < b.x)\r\n\t\t\treturn -1;\r\n\t\telse if (a.x > b.x)\r\n\t\t\treturn +1;\r\n\t\telse if (a.y < b.y)\r\n\t\t\treturn -1;\r\n\t\telse if (a.y > b.y)\r\n\t\t\treturn +1;\r\n\t\telse\r\n\t\t\treturn 0;\r\n\t}\r\n\t\r\n}","import { Klass, UnboxableKlass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType, longPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class IntegerClass extends UnboxableKlass {\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Integer\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", intPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ int annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", intPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ int annehmen kann\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType, longPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"int-wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen int-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[2].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, UnboxableKlass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { longPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class LongClass extends UnboxableKlass {\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Long\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", longPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ long annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", longPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ long annehmen kann\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, longPrimitiveType, floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Long\", new Parameterlist([\r\n            { identifier: \"long-wert\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Long-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Long\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Long-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen int-Wert um\"));\r\n        this.addMethod(new Method(\"longValue\", new Parameterlist([]), longPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen long-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherLong\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), longPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherLong\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), longPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseLong\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), longPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen long-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseLong\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), longPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen long-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), longPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[2].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Long-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Long-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Long-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, UnboxableKlass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { floatToString } from \"../../../tools/StringTools.js\";\r\n\r\n\r\nexport class FloatClass extends UnboxableKlass {\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Float\", null, \"Wrapper-Klasse, um float-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ float\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt, indem die übergebene Zeichenkette in einen float-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Float-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return floatToString(parameters[0].value);\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseFloat\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen float-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return floatToString(parameters[1].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, UnboxableKlass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, floatPrimitiveType, doublePrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { floatToString } from \"../../../tools/StringTools.js\";\r\n\r\n\r\nexport class DoubleClass extends UnboxableKlass {\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Double\", null, \"Wrapper-Klasse, um double-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ double\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt, indem die übergebene Zeichenkette in einen double-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Double-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return floatToString(parameters[0].value);\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseDouble\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen double-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return floatToString(parameters[1].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass, UnboxableKlass } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value } from \"../Types.js\";\r\n\r\n\r\nexport class CharacterClass extends UnboxableKlass {\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Character\", null, \"Wrapper-Klasse, um char-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [charPrimitiveType, stringPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Character\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Character-Objekt\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([]), charPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Character-Objekt in einen char-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[0].value).charCodeAt(0);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den char-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"digit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Gibt den numerischen Wert des Zeichens zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"forDigit\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value).toString(parameters[2].value).charAt(0);\r\n            }, false, true, \"Gibt den übergebenen Wert als Ziffer im Zahlensystem zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"getNumericValue\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).charCodeAt(0);\r\n            }, false, true, \"Wandelt das Zeichen in einen numerischen Wert (Unicode-Wert) um.\"));\r\n\r\n        this.addMethod(new Method(\"isLetter\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen ist.\"));\r\n\r\n        this.addMethod(new Method(\"isLetterOrDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen oder eine Ziffer ist.\"));\r\n\r\n        this.addMethod(new Method(\"isDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen eine Ziffer ist.\"));\r\n\r\n            this.addMethod(new Method(\"isWhitespace\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[ \\r\\n\\t]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein Leerzeichen, Tabulatorzeichen oder Zeilenumbruch ist.\"));\r\n\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleUpperCase();\r\n            }, false, true, \"Wandelt das Zeichen in Großschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleLowerCase();\r\n            }, false, true, \"Wandelt das Zeichen in Kleinschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den char-Wert in ein Character-Objekt um.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass, UnboxableKlass, Visibility } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Attribute } from \"../Types.js\";\r\n\r\n\r\nexport class BooleanClass extends UnboxableKlass {\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Boolean\", null, \"Wrapper-Klasse, um boolean-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"TRUE\", this, (value) => { value.value = true }, true, Visibility.public, true, \"das Boolean-Objekt, das TRUE repräsentiert\"));\r\n        this.addAttribute(new Attribute(\"FALSE\", this, (value) => { value.value = false }, true, Visibility.public, true, \"das Boolean-Objekt, das FALSE repräsentiert\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [booleanPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1] != null && parameters[1].value.toLowerCase() == \"true\";\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt: Es nimmt genau dann den Wert true an, wenn die übergebene Zeichenkette ohne Berücksichtigung von Klein-/Großschreibung den Wert \\\"true\\\" hat.\", true));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Boolean-Objekt in einen boolean-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                return v0 == v1 ? 0 : 1;\r\n            }, false, false, \"Gibt genau dann 0 zurück, wenn der Wert des Objekts gleich dem übergebenen Wert ist, ansonsten 1.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<boolean>parameters[0].value) ? 0 : 1;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den boolean-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den boolean-Wert in ein Boolean-Objekt um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n        this.addMethod(new Method(\"parseBoolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Method, Attribute, Value, Type, Parameterlist, PrimitiveType } from \"./Types.js\";\r\nimport { TokenType } from \"../lexer/Token.js\";\r\nimport { intPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Visibility } from \"./Class.js\";\r\n\r\nexport class ArrayType extends Type {\r\n\r\n    public arrayOfType: Type;\r\n    private lengthAttribute: Attribute;\r\n\r\n    constructor(arrayOfType: Type){\r\n        super();\r\n        this.arrayOfType = arrayOfType;\r\n        this.identifier = \"Array\";\r\n\r\n        if(arrayOfType != null){\r\n            this.identifier = arrayOfType.identifier + \"[]\";\r\n        }\r\n\r\n        this.lengthAttribute = new Attribute(\"length\", intPrimitiveType, (object: Value) => {\r\n            return (<any[]>object.value).length;\r\n        }, false, Visibility.public, true);\r\n    }   \r\n\r\n    public equals(type:Type): boolean{\r\n        return (type instanceof ArrayType) && type.arrayOfType.equals(this.arrayOfType);\r\n    }\r\n\r\n    public get id():string{\r\n        return this.arrayOfType.identifier + \"[]\";\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        if(operation == TokenType.referenceElement){\r\n            return this.arrayOfType;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        if(operation == TokenType.referenceElement){\r\n            return <any[]>firstOperand.value[<number>secondOperand.value];\r\n        }\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, signature: Parameterlist): Method{\r\n        return null;\r\n    }\r\n\r\n    public getAttribute(identifier: string): Attribute{\r\n        if(identifier == \"length\"){\r\n            return this.lengthAttribute;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean{\r\n\r\n        if(!(type instanceof ArrayType)){\r\n            return false;\r\n        }\r\n\r\n        return this.arrayOfType.canCastTo(type.arrayOfType);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        let array = (<Value[]>value.value).slice();\r\n        let destType = (<ArrayType><unknown>type).arrayOfType;\r\n\r\n        for(let a of array){\r\n            this.arrayOfType.castTo(a, destType);\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            value: array\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40):string {\r\n\r\n        let length: number = 0;\r\n\r\n        if(value.value != null){\r\n\r\n            let s: string = \"[\";\r\n\r\n                let a: Value[] = <Value[]>value.value;\r\n\r\n                for(let i = 0; i < a.length; i++){\r\n\r\n                    let v = a[i];\r\n\r\n                    let s1 = v.type.debugOutput(v, maxLength/2);\r\n\r\n                    s += s1;\r\n                    if(i < a.length - 1) s += \",&nbsp;\";\r\n                    length += s1.length;\r\n\r\n                    if(length > maxLength) break;\r\n\r\n                }\r\n\r\n            return s + \"]\"\r\n\r\n        } else return \"null\";\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { TextPosition } from \"../lexer/Token.js\";\r\nimport { Type, Variable, Method } from \"../types/Types.js\";\r\nimport { Klass, StaticClass } from \"../types/Class.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\n\r\n\r\nexport class SymbolTable {\r\n\r\n    static maxId: number = 0;\r\n\r\n    public id = SymbolTable.maxId++;\r\n\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    beginsNewStackframe: boolean = false;\r\n    stackframeSize: number;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    variableMap: Map<string, Variable> = new Map();\r\n\r\n    classContext: Klass | StaticClass = null;\r\n    method: Method = null;\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n        this.classContext = parentSymbolTable == null ? null : parentSymbolTable.classContext;\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n            this.method = this.parent.method;\r\n        }\r\n    }\r\n\r\n    getImitation(): SymbolTable {\r\n        let imitation = new SymbolTable(null, { line: 1, column: 1, length: 0 }, { line: 1, column: 10000, length: 0 });\r\n\r\n        imitation.beginsNewStackframe = true;\r\n        let st: SymbolTable = this;\r\n\r\n        let maxStackPos = -1;\r\n\r\n        while (st != null) {\r\n            if (st.classContext != null) {\r\n                imitation.classContext = st.classContext;\r\n            }\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                if (imitation.variableMap.get(identifier) == null) {\r\n                    imitation.variableMap.set(identifier, variable);\r\n                }\r\n\r\n                if (variable.stackPos > maxStackPos) {\r\n                    maxStackPos = variable.stackPos;\r\n                }\r\n\r\n            });\r\n\r\n            st = st.parent;\r\n\r\n        }\r\n\r\n        imitation.stackframeSize = maxStackPos + 1;\r\n\r\n        return imitation;\r\n    }\r\n\r\n\r\n\r\n    getLocalVariableCompletionItems(rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        this.variableMap.forEach((variable, identifier) => {\r\n\r\n            //@ts-ignore\r\n            if(identifier == 0) return;\r\n\r\n            // TODO: Zu einem Objekt mit identifier == 0 kommt es, wenn man ArrayList<In tippt und dann <Strg + Leertaste>.\r\n\r\n            if (variable != null && variable.type != null && variable.type instanceof ArrayType) {\r\n                completionItems.push({\r\n                    label: identifier + \"[]\",\r\n                    insertText: identifier + \"[$0]\",\r\n                    documentation: \"Element des Arrays\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: rangeToReplace\r\n                });\r\n\r\n            }\r\n            \r\n            completionItems.push({\r\n                label: identifier,\r\n                insertText: identifier,\r\n                kind: monaco.languages.CompletionItemKind.Variable,\r\n                range: rangeToReplace\r\n            });\r\n\r\n\r\n        });\r\n\r\n        if (this.parent != null && this.parent.classContext == this.classContext) {\r\n            completionItems = completionItems.concat(this.parent.getLocalVariableCompletionItems(rangeToReplace));\r\n        }\r\n\r\n        return completionItems;\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line) return column >= this.positionFrom.column;\r\n        if (line == this.positionTo.line) return column <= this.positionTo.column;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Program } from \"../parser/Program.js\";\r\nimport { Klass, Visibility } from \"./Class.js\";\r\nimport { Value, Attribute, Method, Parameterlist, Type } from \"./Types.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { EnumValueNode } from \"../parser/AST.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, objectType } from \"./PrimitiveTypes.js\";\r\n\r\nexport class EnumRuntimeObject extends RuntimeObject {\r\n\r\n    enumValue: EnumInfo;\r\n\r\n    constructor(en: Enum, enumValue: EnumInfo) {\r\n        super(en);\r\n        this.enumValue = enumValue;\r\n    }\r\n\r\n}\r\n\r\nexport type EnumInfo = {\r\n    identifier: string,\r\n    ordinal: number,\r\n    position?: TextPosition,\r\n    object?: EnumRuntimeObject,\r\n    constructorCallProgram?: Program\r\n}\r\n\r\n\r\nexport class Enum extends Klass {\r\n\r\n    enumInfoList: EnumInfo[] = [];\r\n    identifierToInfoMap: { [identifier: string]: EnumInfo } = {};\r\n    indexToInfoMap: { [index: number]: EnumInfo } = {};\r\n\r\n    valueList: Value = null;\r\n\r\n    getOrdinal(valueIdentifier: string): number {\r\n\r\n        let enumInfo: EnumInfo = this.identifierToInfoMap[valueIdentifier];\r\n        if (enumInfo == null) return -1;\r\n        return enumInfo.ordinal;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        let enumObject = <EnumRuntimeObject>value.value;\r\n        return this.identifier + \".\" + enumObject.enumValue.identifier;\r\n    }\r\n\r\n    constructor(identifier: string, module: Module, enumValueNodes: EnumValueNode[]) {\r\n\r\n        super(identifier, module);\r\n        this.baseClass = objectType;\r\n\r\n        let i: number = 0;\r\n\r\n        for (let evn of enumValueNodes) {\r\n\r\n            let attribute: Attribute = new Attribute(evn.identifier, this, null, true, Visibility.public, true);\r\n\r\n            if (evn.position != null) {\r\n                attribute.declaration = {\r\n                    module: module,\r\n                    position: evn.position\r\n                }\r\n\r\n                attribute.usagePositions.set(module, [evn.position]);\r\n            }\r\n\r\n            this.staticClass.addAttribute(\r\n                attribute\r\n            );\r\n\r\n\r\n            let ev: EnumInfo = {\r\n                identifier: evn.identifier,\r\n                ordinal: i++\r\n            }\r\n\r\n            this.enumInfoList.push(ev);\r\n            this.identifierToInfoMap[evn.identifier] = ev;\r\n            this.indexToInfoMap[ev.ordinal] = ev;\r\n\r\n        }\r\n\r\n        if(module.isSystemModule){\r\n            this.valueList = {\r\n                type: new ArrayType(this),\r\n                value: []\r\n            };\r\n            for(let ei of this.enumInfoList){\r\n\r\n                ei.object = new EnumRuntimeObject(this, ei);\r\n\r\n                this.valueList.value.push({\r\n                    type: this,\r\n                    value: ei.object\r\n                })\r\n            }\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.staticClass.addMethod(new Method(\"getValues\",\r\n            new Parameterlist([]), new ArrayType(this), (parameters: Value[]) => {\r\n\r\n                if (this.valueList == null) {\r\n\r\n                    let values = [];\r\n                    for (let vi of this.enumInfoList) {\r\n\r\n                        values.push({\r\n                            type: that,\r\n                            value: vi.object\r\n                        });\r\n\r\n                    }\r\n\r\n                    this.valueList = {\r\n                        type: new ArrayType(that),\r\n                        value: values\r\n                    }\r\n\r\n                }\r\n\r\n                return this.valueList.value;\r\n\r\n            }, false, true)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toString\",\r\n            new Parameterlist([]), stringPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.identifier;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toOrdinal\",\r\n            new Parameterlist([]), intPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.ordinal;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        return super.canCastTo(type);\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            let en = <EnumRuntimeObject>value.value;\r\n            return {\r\n                type: intPrimitiveType,\r\n                value: en.enumValue.ordinal\r\n            };\r\n        }\r\n\r\n        return super.castTo(value, type);\r\n    }\r\n\r\n\r\n}\r\n","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, StaticClass, Visibility, getVisibilityUpTo, UnboxableKlass } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, nullType, voidPrimitiveType, varType, doublePrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Type, Variable, Value, PrimitiveType, UsagePositions, Method, Heap, getTypeIdentifier, Parameterlist } from \"../types/Types.js\";\r\nimport { ASTNode, AttributeDeclarationNode, BinaryOpNode, ClassDeclarationNode, ConstantNode, DoWhileNode, ForNode, IdentifierNode, IfNode, IncrementDecrementNode, MethodcallNode, MethodDeclarationNode, NewObjectNode, ReturnNode, SelectArrayElementNode, SelectArributeNode, SuperconstructorCallNode, SuperNode, ThisNode, UnaryOpNode, WhileNode, LocalVariableDeclarationNode, ArrayInitializationNode, NewArrayNode, PrintNode, CastManuallyNode, EnumDeclarationNode, TermNode, SwitchNode, ScopeNode, ParameterNode, ForNodeOverCollecion, ConstructorCallNode } from \"./AST.js\";\r\nimport { LabelManager } from \"./LabelManager.js\";\r\nimport { Module, ModuleStore } from \"./Module.js\";\r\nimport { AssignmentStatement, InitStackframeStatement, JumpAlwaysStatement, Program, Statement, BeginArrayStatement, NewObjectStatement, JumpOnSwitchStatement, ExtendedForLoopCheckCounterAndGetElement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Enum, EnumInfo } from \"../types/Enum.js\";\r\n\r\ntype StackType = {\r\n    type: Type,\r\n    isAssignable: boolean,\r\n    isSuper?: boolean, // used for method calls with super.\r\n    withReturnStatement?: boolean\r\n};\r\n\r\nexport class CodeGenerator {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment,\r\n    TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.ANDAssigment, TokenType.ORAssigment,\r\n    TokenType.XORAssigment, TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    moduleStore: ModuleStore;\r\n    module: Module;\r\n\r\n    symbolTableStack: SymbolTable[];\r\n    currentSymbolTable: SymbolTable;\r\n\r\n    heap: Heap;\r\n\r\n    currentProgram: Program;\r\n\r\n    errorList: Error[];\r\n\r\n    nextFreeRelativeStackPos: number;\r\n\r\n    breakNodeStack: JumpAlwaysStatement[][];\r\n    continueNodeStack: JumpAlwaysStatement[][];\r\n\r\n    startAdhocCompilation(module: Module, moduleStore: ModuleStore, symbolTable: SymbolTable, heap: Heap): Error[] {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.symbolTableStack.push(symbolTable);\r\n        this.currentSymbolTable = symbolTable;\r\n\r\n        this.heap = heap;\r\n\r\n        let oldStackframeSize = symbolTable.stackframeSize;\r\n        this.nextFreeRelativeStackPos = oldStackframeSize;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain(true);\r\n\r\n        return this.errorList;\r\n\r\n    }\r\n\r\n    start(module: Module, moduleStore: ModuleStore) {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.currentSymbolTable = null;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.nextFreeRelativeStackPos = 0;\r\n\r\n        if (this.module.tokenList.length > 0) {\r\n            let lastToken = this.module.tokenList[this.module.tokenList.length - 1];\r\n            this.module.mainSymbolTable.positionTo = { line: lastToken.position.line, column: lastToken.position.column + 1, length: 1 };\r\n        }\r\n\r\n        this.symbolTableStack.push(this.module.mainSymbolTable);\r\n        this.currentSymbolTable = this.module.mainSymbolTable;\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain();\r\n\r\n        this.generateClasses();\r\n\r\n        this.lookForStaticVoidMain();\r\n\r\n        this.module.errors[3] = this.errorList;\r\n\r\n    }\r\n\r\n    lookForStaticVoidMain() {\r\n\r\n        let mainProgram = this.module.mainProgram;\r\n\r\n        if (mainProgram != null && mainProgram.statements.length > 2) return;\r\n\r\n        let mainMethod: Method = null;\r\n        let staticClass: StaticClass = null;\r\n        let classNode1: ASTNode;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n\r\n                let ct = classNode.resolvedType;\r\n\r\n                for (let m of ct.staticClass.methods) {\r\n                    if (m.identifier == \"main\" && m.parameterlist.parameters.length == 1) {\r\n                        let pt = m.parameterlist.parameters[0];\r\n                        if (pt.type instanceof ArrayType && pt.type.arrayOfType == stringPrimitiveType) {\r\n                            if (mainMethod != null) {\r\n                                this.pushError(\"Es existieren mehrere Klassen mit statischen main-Methoden.\", classNode.position);\r\n                            } else {\r\n                                mainMethod = m;\r\n                                staticClass = ct.staticClass;\r\n                                classNode1 = classNode;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (mainMethod != null) {\r\n\r\n            let position: TextPosition = mainMethod.usagePositions[0];\r\n            if (mainMethod.program != null && mainMethod.program.statements.length > 0) {\r\n                position = mainMethod.program.statements[0].position;\r\n            }\r\n\r\n            this.initCurrentProgram();\r\n\r\n            this.module.mainProgram = this.currentProgram;\r\n\r\n            this.pushStatements([{\r\n                type: TokenType.callMainMethod,\r\n                position: position,\r\n                stepFinished: false,\r\n                method: mainMethod,\r\n                staticClass: staticClass\r\n            }, {\r\n                type: TokenType.closeStackframe,\r\n                position: mainMethod.usagePositions.get(this.module)[0]\r\n            }\r\n            ], false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    generateClasses() {\r\n        if (this.module.classDefinitionsAST == null) return;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n                this.generateClass(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordEnum) {\r\n                this.generateEnum(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordInterface) {\r\n                let interf = classNode.resolvedType;\r\n                if (interf != null) {\r\n                    this.checkDoubleMethodDeclaration(interf);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    generateEnum(enumNode: EnumDeclarationNode) {\r\n\r\n        if (enumNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        let enumClass = <Enum>enumNode.resolvedType;\r\n\r\n        // this.pushUsagePosition(enumNode.position, enumClass);\r\n\r\n        this.currentSymbolTable.classContext = enumClass;\r\n        this.currentProgram = enumClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (enumClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // constructor calls\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        for (let enumValueNode of enumNode.values) {\r\n\r\n            if (enumValueNode.constructorParameters != null) {\r\n\r\n                let p: Program = {\r\n                    module: this.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                }\r\n\r\n                this.currentProgram = p;\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: enumValueNode.position,\r\n                    enumClass: enumClass,\r\n                    valueIdentifier: enumValueNode.identifier\r\n                });\r\n\r\n                this.processEnumConstructorCall(enumClass, enumValueNode.constructorParameters,\r\n                    enumValueNode.position, enumValueNode.commaPositions, enumValueNode.rightBracketPosition);\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.programEnd,\r\n                    position: enumValueNode.position,\r\n                    stepFinished: true\r\n                });\r\n\r\n                let enumInfo: EnumInfo = enumClass.identifierToInfoMap[enumValueNode.identifier];\r\n                enumInfo.constructorCallProgram = p;\r\n                enumInfo.position = enumValueNode.position;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = enumClass.staticClass;\r\n        this.currentProgram = enumClass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n        this.checkDoubleMethodDeclaration(enumClass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    processEnumConstructorCall(enumClass: Enum, parameterNodes: TermNode[],\r\n        position: TextPosition, commaPositions: TextPosition[], rightBracketPosition: TextPosition) {\r\n        let parameterTypes: Type[] = [];\r\n\r\n        for (let p of parameterNodes) {\r\n            let typeNode = this.processNode(p);\r\n            if (typeNode == null) continue;\r\n            parameterTypes.push(typeNode.type);\r\n        }\r\n\r\n        let methods = enumClass.getMethodsThatFitWithCasting(enumClass.identifier,\r\n            parameterTypes, true, Visibility.private);\r\n\r\n        this.module.pushMethodCallPosition(position, commaPositions, enumClass.getMethods(Visibility.private, enumClass.identifier), rightBracketPosition);\r\n\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            let srcType = parameterTypes[i];\r\n            if (!srcType.equals(destType)) {\r\n\r\n                if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n                    if (srcType.getCastInformation(destType).needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: null,\r\n                            newType: destType,\r\n                            stackPosRelative: -parameterTypes.length + 1 + i\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: parameterNodes[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            position: position,\r\n            stepFinished: true,\r\n            isSuperCall: false,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n    }\r\n\r\n    generateClass(classNode: ClassDeclarationNode) {\r\n\r\n        if (classNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        let klass = <Klass>classNode.resolvedType;\r\n\r\n        //this.pushUsagePosition(classNode.position, klass);\r\n\r\n        let inheritanceError = klass.checkInheritance();\r\n\r\n        if (inheritanceError.message != \"\") {\r\n            this.pushError(inheritanceError.message, classNode.position, \"error\", this.getInheritanceQuickFix(classNode.scopeTo, inheritanceError));\r\n        }\r\n\r\n        let baseClass = klass.baseClass;\r\n        if (baseClass != null && baseClass.module != klass.module && baseClass.visibility == Visibility.private) {\r\n            this.pushError(\"Die Basisklasse \" + baseClass.identifier + \" der Klasse \" + klass.identifier + \" ist hier nicht sichtbar.\", classNode.position);\r\n        }\r\n\r\n        this.currentSymbolTable.classContext = klass;\r\n        this.currentProgram = klass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n                let m: Method = methodNode.resolvedType;\r\n                if (m != null && m.annotation == \"@Override\") {\r\n                    if (klass.baseClass != null) {\r\n                        if (klass.baseClass.getMethodBySignature(m.signature) == null) {\r\n                            this.pushError(\"Die Methode \" + m.signature + \" ist mit @Override annotiert, überschreibt aber keine Methode gleicher Signatur einer Oberklasse.\", methodNode.position, \"warning\");\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.checkDoubleMethodDeclaration(klass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = klass.staticClass;\r\n        this.currentProgram = klass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    checkDoubleMethodDeclaration(cie: Klass | Interface) {  // N.B.: Enum extends Klass\r\n\r\n        let signatureMap: { [key: string]: Method } = {};\r\n\r\n        for (let m of cie.methods) {\r\n\r\n            let signature = m.getSignatureWithReturnParameter();\r\n            if (signatureMap[signature] != null) {\r\n\r\n                let cieType: String = \"In der Klasse \";\r\n                if (cie instanceof Interface) cieType = \"Im Interface \";\r\n                if (cie instanceof Enum) cieType = \"Im Enum \";\r\n\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, m.usagePositions.get(this.module)[0], \"error\");\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, signatureMap[signature].usagePositions.get(this.module)[0], \"error\");\r\n\r\n            } else {\r\n                signatureMap[signature] = m;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getInheritanceQuickFix(position: TextPosition, inheritanceError: { message: string; missingMethods: Method[]; }): QuickFix {\r\n\r\n        let s: string = \"\";\r\n        for (let m of inheritanceError.missingMethods) {\r\n            s += \"\\tpublic \" + (m.returnType == null ? \" void\" : getTypeIdentifier(m.returnType)) + \" \" + m.identifier + \"(\";\r\n            s += m.parameterlist.parameters.map(p => getTypeIdentifier(p.type) + \" \" + p.identifier).join(\", \");\r\n            s += \") {\\n\\t\\t//TODO: Methode füllen\\n\\t}\\n\\n\";\r\n        }\r\n\r\n        return {\r\n            title: \"Fehlende Methoden einfügen\",\r\n            editsProvider: (uri) => {\r\n                return [\r\n                    {\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: { startLineNumber: position.line, startColumn: position.column - 1, endLineNumber: position.line, endColumn: position.column - 1 },\r\n                            text: s\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getSuperconstructorCalls(nodes: ASTNode[], superconstructorCallsFound: ASTNode[], isFirstStatement: boolean): boolean {\r\n        for (let node of nodes) {\r\n            if (node == null) continue;\r\n            if (node.type == TokenType.superConstructorCall) {\r\n\r\n                if (!isFirstStatement) {\r\n                    if (superconstructorCallsFound.length > 0) {\r\n                        this.pushError(\"Ein Konstruktor darf nur einen einzigen Aufruf des Superkonstruktors enthalten.\", node.position, \"error\");\r\n                    } else {\r\n                        this.pushError(\"Vor dem Aufruf des Superkonstruktors darf keine andere Anweisung stehen.\", node.position, \"error\");\r\n                    }\r\n                }\r\n\r\n                superconstructorCallsFound.push(node);\r\n                isFirstStatement = false;\r\n            } else if (node.type == TokenType.scopeNode && node.statements != null) {\r\n                isFirstStatement = isFirstStatement && this.getSuperconstructorCalls(node.statements, superconstructorCallsFound, isFirstStatement);\r\n            } else {\r\n                isFirstStatement = false;\r\n            }\r\n        }\r\n        return isFirstStatement;\r\n    }\r\n\r\n\r\n    compileMethod(methodNode: MethodDeclarationNode) {\r\n        // Assumption: methodNode != null\r\n        let method = methodNode.resolvedType;\r\n\r\n        this.checkIfMethodIsVirtual(method);\r\n\r\n        if (method == null) return;\r\n\r\n        // this.pushUsagePosition(methodNode.position, method);\r\n\r\n        this.initCurrentProgram();\r\n        method.program = this.currentProgram;\r\n\r\n        this.pushNewSymbolTable(false, methodNode.scopeFrom, methodNode.scopeTo);\r\n        this.currentSymbolTable.method = method;\r\n\r\n        let stackPos: number = 1;\r\n\r\n        for (let v of method.getParameterList().parameters) {\r\n            v.stackPos = stackPos++;\r\n\r\n            this.currentSymbolTable.variableMap.set(v.identifier, v);\r\n        }\r\n\r\n        // \" + 1\" is for \"this\"-object\r\n        this.nextFreeRelativeStackPos = methodNode.parameters.length + 1;\r\n\r\n        if (method.isConstructor && this.currentSymbolTable.classContext instanceof Klass && methodNode.statements != null) {\r\n            let c: Klass = this.currentSymbolTable.classContext;\r\n\r\n            let superconstructorCalls: ASTNode[] = [];\r\n            this.getSuperconstructorCalls(methodNode.statements, superconstructorCalls, true);\r\n\r\n            let superconstructorCallEnsured: boolean = superconstructorCalls.length > 0;\r\n\r\n            // if (methodNode.statements.length > 0 && methodNode.statements[0].type == TokenType.scopeNode) {\r\n            //     let stm = methodNode.statements[0].statements;\r\n            //     if (stm.length > 0 && [TokenType.superConstructorCall, TokenType.constructorCall].indexOf(stm[0].type) >= 0) {\r\n            //         superconstructorCallEnsured = true;\r\n            //     }\r\n            // } else if ([TokenType.superConstructorCall, TokenType.constructorCall].indexOf(methodNode.statements[0].type) >= 0) {\r\n            //     superconstructorCallEnsured = true;\r\n            // }\r\n\r\n            if (c != null && c.baseClass?.hasConstructor() && !c.baseClass?.hasParameterlessConstructor()) {\r\n                let error: boolean = false;\r\n                if (methodNode.statements == null || methodNode.statements.length == 0) error = true;\r\n                if (!error) {\r\n                    error = !superconstructorCallEnsured;\r\n                }\r\n                if (error) {\r\n                    let quickFix: QuickFix = null;\r\n                    let constructors = c.baseClass.methods.filter(m => m.isConstructor);\r\n                    if (constructors.length == 1) {\r\n                        let methodCall = \"super(\" + constructors[0].parameterlist.parameters.map(p => p.identifier).join(\", \") + \");\";\r\n                        let position = methodNode.position;\r\n                        quickFix = {\r\n                            title: 'Aufruf des Konstruktors der Basisklasse einfügen',\r\n                            //06.06.2020\r\n                            editsProvider: (uri) => {\r\n                                return [{\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: {\r\n                                            startLineNumber: position.line + 1, startColumn: 0, endLineNumber: position.line + 1, endColumn: 0,\r\n                                            message: \"\",\r\n                                            severity: monaco.MarkerSeverity.Error\r\n                                        },\r\n                                        text: \"\\t\\t\" + methodCall + \"\\n\"\r\n                                    }\r\n                                }\r\n                                ];\r\n                            }\r\n                        }\r\n                    }\r\n                    this.pushError(\"Die Basisklasse der Klasse \" + c.identifier + \" besitzt keinen parameterlosen Konstruktor, daher muss diese Konstruktordefinition mit einem Aufruf eines Konstruktors der Basisklasse (super(...)) beginnen.\",\r\n                        methodNode.position, \"error\", quickFix);\r\n                }\r\n            } else if (!superconstructorCallEnsured && c.baseClass?.hasParameterlessConstructor()) {\r\n                // invoke parameterless constructor\r\n                let baseClassConstructor = c.baseClass.getParameterlessConstructor();\r\n                this.pushStatements([\r\n                    // Push this-object to stack:\r\n                    {\r\n                        type: TokenType.pushLocalVariableToStack,\r\n                        position: methodNode.position,\r\n                        stackposOfVariable: 0\r\n                    },\r\n                    {\r\n                        type: TokenType.callMethod,\r\n                        method: baseClassConstructor,\r\n                        isSuperCall: true,\r\n                        position: methodNode.position,\r\n                        stackframeBegin: -1 // this-object followed by parameters\r\n                    }\r\n\r\n                ])\r\n            }\r\n        }\r\n\r\n        let actorClass = <Klass>this.moduleStore.getType(\"Actor\").type;\r\n        let methodIdentifiers = [\"act\", \"onKeyTyped\", \"onKeyDown\", \"onKeyUp\",\r\n            \"onMouseDown\", \"onMouseUp\", \"onMouseMove\", \"onMouseEnter\", \"onMouseLeave\"];\r\n        if (methodIdentifiers.indexOf(method.identifier) >= 0 && this.currentSymbolTable.classContext.hasAncestorOrIs(actorClass)) {\r\n            this.pushStatements([\r\n\r\n                {\r\n                    type: TokenType.returnIfDestroyed,\r\n                    position: methodNode.position\r\n                },\r\n            ]);\r\n        }\r\n\r\n        let withReturnStatement = this.generateStatements(methodNode.statements).withReturnStatement;\r\n\r\n        if (!withReturnStatement) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: methodNode.scopeTo,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: true,\r\n                leaveThisObjectOnStack: false\r\n            });\r\n\r\n            let rt = method.getReturnType();\r\n            if (!method.isConstructor && rt != null && rt != voidPrimitiveType) {\r\n                this.pushError(\"Die Deklaration der Methode verlangt die Rückgabe eines Wertes vom Typ \" + rt.identifier + \". Es fehlt (mindestens) eine entsprechende return-Anweisung.\", methodNode.position);\r\n            }\r\n        }\r\n\r\n        method.reserveStackForLocalVariables = this.nextFreeRelativeStackPos\r\n            - methodNode.parameters.length - 1;\r\n\r\n        this.popSymbolTable();\r\n        this.currentProgram.labelManager.resolveNodes();\r\n    }\r\n\r\n\r\n    /**\r\n     * checks if child classes have method with same signature\r\n     */\r\n    checkIfMethodIsVirtual(method: Method) {\r\n\r\n        let klass = this.currentSymbolTable.classContext;\r\n        if (klass != null) {\r\n\r\n            for (let mo of this.moduleStore.getModules(false)) {\r\n                for (let c of mo.typeStore.typeList) {\r\n                    if (c instanceof Klass && c != klass && c.hasAncestorOrIs(klass)) {\r\n                        for (let m of c.methods) {\r\n                            if (m != null && method != null && m.signature == method.signature) {\r\n                                method.isVirtual = true;\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initializeAttribute(attribute: AttributeDeclarationNode) {\r\n\r\n        if (attribute == null) return;\r\n\r\n        // assumption: attribute != null\r\n        if (attribute.identifier == null || attribute.initialization == null || attribute.resolvedType == null) return;\r\n\r\n        if (attribute.isStatic) {\r\n            this.pushStatements({\r\n                type: TokenType.pushStaticAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.resolvedType.identifier,\r\n                position: attribute.initialization.position,\r\n                klass: <StaticClass>(this.currentSymbolTable.classContext)\r\n            });\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.identifier,\r\n                position: attribute.initialization.position,\r\n                useThisObject: true\r\n            });\r\n        }\r\n\r\n\r\n        let initializationType = this.processNode(attribute.initialization);\r\n\r\n        if (initializationType != null && initializationType.type != null) {\r\n            if (!this.ensureAutomaticCasting(initializationType.type, attribute.attributeType.resolvedType)) {\r\n\r\n                if (attribute.attributeType.resolvedType == null) {\r\n                    this.pushError(\"Der Datentyp von \" + attribute.identifier + \" konnte nicht ermittelt werden. \", attribute.position);\r\n                } else {\r\n                    this.pushError(\"Der Wert des Term vom Datentyp \" + initializationType.type + \" kann dem Attribut \" + attribute.identifier + \" vom Typ \" + attribute.attributeType.resolvedType.identifier + \" nicht zugewiesen werden.\", attribute.initialization.position);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.assignment,\r\n                position: attribute.initialization.position,\r\n                stepFinished: false,\r\n                leaveValueOnStack: false\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    initCurrentProgram() {\r\n\r\n        this.currentProgram = {\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.currentProgram.labelManager = new LabelManager(this.currentProgram);\r\n\r\n        this.lastStatement = null;\r\n\r\n    }\r\n\r\n    generateMain(isAdhocCompilation: boolean = false) {\r\n\r\n        this.initCurrentProgram();\r\n\r\n        let position: TextPosition = { line: 1, column: 1, length: 0 };\r\n\r\n        let mainProgramAst = this.module.mainProgramAst;\r\n        if (mainProgramAst != null && mainProgramAst.length > 0 && mainProgramAst[0] != null) {\r\n            position = this.module.mainProgramAst[0].position;\r\n        }\r\n\r\n        if (!isAdhocCompilation) {\r\n            this.pushNewSymbolTable(true, position, { line: 100000, column: 1, length: 0 }, this.currentProgram);\r\n            this.heap = {};\r\n        }\r\n\r\n        this.module.mainProgram = this.currentProgram;\r\n\r\n        let hasMainProgram: boolean = false;\r\n\r\n        if (this.module.mainProgramAst != null && this.module.mainProgramAst.length > 0) {\r\n\r\n            hasMainProgram = true;\r\n            this.generateStatements(this.module.mainProgramAst);\r\n\r\n            if (isAdhocCompilation && this.lastStatement != null && this.lastStatement.type == TokenType.decreaseStackpointer) {\r\n                this.removeLastStatement();\r\n            }\r\n\r\n            this.lastPosition = this.module.mainProgramEnd;\r\n            if (this.lastPosition == null) this.lastPosition = { line: 100000, column: 0, length: 0 };\r\n            // if(this.lastPosition == null) this.lastPosition = {line: 100000, column: 0, length: 0};\r\n\r\n            this.currentSymbolTable.positionTo = this.lastPosition;\r\n            if (!isAdhocCompilation) this.popSymbolTable(this.currentProgram, true);\r\n            this.heap = null;\r\n\r\n            this.pushStatements({\r\n                type: TokenType.programEnd,\r\n                position: this.lastPosition,\r\n                stepFinished: true,\r\n                pauseAfterProgramEnd: true\r\n            }, true);\r\n\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        if (!isAdhocCompilation && !hasMainProgram) {\r\n            this.popSymbolTable(this.currentProgram);\r\n            this.heap = null;\r\n        }\r\n\r\n    }\r\n\r\n    ensureAutomaticCasting(typeFrom: Type, typeTo: Type, position?: TextPosition, nodeFrom?: ASTNode): boolean {\r\n\r\n        if (typeFrom == null || typeTo == null) return false;\r\n\r\n        if (typeFrom.equals(typeTo)) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom.canCastTo(typeTo)) {\r\n            if (typeFrom instanceof PrimitiveType && (typeTo instanceof PrimitiveType || typeTo == stringPrimitiveType)) {\r\n                let castInfo = typeFrom.getCastInformation(typeTo);\r\n                if (!castInfo.automatic) {\r\n                    return false;\r\n                }\r\n            }\r\n            this.pushStatements({\r\n                type: TokenType.castValue,\r\n                position: position,\r\n                newType: typeTo\r\n            });\r\n            return true;\r\n        }\r\n\r\n        else {\r\n            if (!typeFrom.canCastTo(typeTo)) {\r\n                if (typeTo == booleanPrimitiveType && nodeFrom != null) {\r\n                    this.checkIfAssignmentInstedOfEqual(nodeFrom);\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    ensureAutomaticToString(typeFrom: Type, codepos: number = undefined, textposition?: TextPosition): boolean {\r\n        if (typeFrom == stringPrimitiveType) return true;\r\n        if (typeFrom == voidPrimitiveType) return false;\r\n        let automaticToString: Method;\r\n\r\n        if (typeFrom instanceof PrimitiveType) {\r\n            automaticToString = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, (parameters: Value[]) => {\r\n                let value = parameters[0];\r\n                return ((<PrimitiveType>value.type).valueToString(value));\r\n            }, false, true);\r\n\r\n        }\r\n        if ((typeFrom instanceof Klass) || (typeFrom == nullType)) {\r\n\r\n            let toStringMethod: Method;\r\n            if (typeFrom == nullType) {\r\n                toStringMethod = objectType.getMethodBySignature(\"toString()\");\r\n            }\r\n            else {\r\n                toStringMethod = (<Klass>typeFrom).getMethodBySignature(\"toString()\");\r\n            }\r\n            if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n                automaticToString = new Method(toStringMethod.identifier, toStringMethod.parameterlist, stringPrimitiveType, (parameters: Value[]) => {\r\n                    let value = parameters[0].value;\r\n                    if (value == null) return \"null\";\r\n                    return toStringMethod.invoke(parameters);\r\n                }, toStringMethod.isAbstract, true, toStringMethod.documentation, toStringMethod.isConstructor);\r\n\r\n            }\r\n\r\n        }\r\n        if (automaticToString != undefined) {\r\n            this.insertOrPushStatements({\r\n                type: TokenType.callMethod,\r\n                position: textposition,\r\n                method: automaticToString,\r\n                isSuperCall: false,\r\n                stackframeBegin: -1,\r\n                stepFinished: false\r\n            }, codepos);\r\n            return true;\r\n        }\r\n        return false;\r\n\r\n    }\r\n\r\n\r\n    checkIfAssignmentInstedOfEqual(nodeFrom: ASTNode, conditionType?: Type) {\r\n        if (nodeFrom == null) return;\r\n\r\n        if (nodeFrom.type == TokenType.binaryOp && nodeFrom.operator == TokenType.assignment) {\r\n            let pos = nodeFrom.position;\r\n            this.pushError(\"= ist der Zuweisungsoperator. Du willst sicher zwei Werte vergleichen. Dazu benötigst Du den Vergleichsoperator ==.\",\r\n                pos, conditionType == booleanPrimitiveType ? \"warning\" : \"error\", {\r\n                title: '= durch == ersetzen',\r\n                editsProvider: (uri) => {\r\n                    return [{\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: {\r\n                                startLineNumber: pos.line, startColumn: pos.column, endLineNumber: pos.line, endColumn: pos.column + 1,\r\n                                message: \"\",\r\n                                severity: monaco.MarkerSeverity.Error\r\n                            },\r\n                            text: \"==\"\r\n                        }\r\n                    }\r\n                    ];\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    generateStatements(nodes: ASTNode[]): { withReturnStatement: boolean, endPosition?: TextPosition } {\r\n\r\n\r\n        if (nodes == null || nodes.length == 0 || nodes[0] == null) return { withReturnStatement: false };\r\n\r\n        let withReturnStatement: boolean = this.processStatementsInsideBlock(nodes);\r\n\r\n        let lastNode = nodes[nodes.length - 1];\r\n        let endPosition: TextPosition;\r\n        if (lastNode != null) {\r\n            if (lastNode.type == TokenType.scopeNode) {\r\n                endPosition = lastNode.positionTo;\r\n            } else {\r\n                endPosition = Object.assign({}, lastNode.position);\r\n                if (endPosition != null) {\r\n                    endPosition.column += endPosition.length;\r\n                    endPosition.length = 1;\r\n                }\r\n            }\r\n            this.lastPosition = endPosition;\r\n        } else {\r\n            endPosition = this.lastPosition;\r\n        }\r\n\r\n        return { withReturnStatement: withReturnStatement, endPosition: endPosition };\r\n\r\n    }\r\n\r\n    processStatementsInsideBlock(nodes: ASTNode[]) {\r\n        let withReturnStatement = false;\r\n\r\n        for (let node of nodes) {\r\n\r\n            if (node == null) continue;\r\n\r\n            let type = this.processNode(node);\r\n\r\n            if (type != null && type.withReturnStatement != null && type.withReturnStatement) {\r\n                withReturnStatement = true;\r\n            }\r\n\r\n            // If last Statement has value which is not used further then pop this value from stack.\r\n            // e.g. statement 12 + 17 -7;\r\n            // Parser issues a warning in this case, see Parser.checkIfStatementHasNoEffekt\r\n            if (type != null && type.type != null && type.type != voidPrimitiveType) {\r\n\r\n                if (this.lastStatement != null &&\r\n                    this.lastStatement.type == TokenType.assignment && this.lastStatement.leaveValueOnStack) {\r\n                    this.lastStatement.leaveValueOnStack = false;\r\n                } else {\r\n                    this.pushStatements({\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: null,\r\n                        popCount: 1,\r\n                        stepFinished: true\r\n                    }, true)\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return withReturnStatement;\r\n    }\r\n\r\n\r\n    lastPosition: TextPosition;\r\n    lastStatement: Statement;\r\n\r\n    insertStatements(pos: number, statements: Statement | Statement[]) {\r\n        if (statements == null) return;\r\n        if (!Array.isArray(statements)) statements = [statements];\r\n        for (let st of statements) {\r\n            this.currentProgram.statements.splice(pos++, 0, st);\r\n        }\r\n    }\r\n\r\n    pushStatements(statement: Statement | Statement[], deleteStepFinishedFlagOnStepBefore: boolean = false) {\r\n\r\n        if (statement == null) return;\r\n\r\n        if (deleteStepFinishedFlagOnStepBefore && this.currentProgram.statements.length > 0) {\r\n            let stepBefore: Statement = this.currentProgram.statements[this.currentProgram.statements.length - 1];\r\n            stepBefore.stepFinished = false;\r\n        }\r\n\r\n        if (Array.isArray(statement)) {\r\n            for (let st of statement) {\r\n                this.currentProgram.statements.push(st);\r\n                if (st.type == TokenType.return || st.type == TokenType.jumpAlways) {\r\n                    if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n                }\r\n                if (st.position != null) {\r\n                    this.lastPosition = st.position;\r\n                } else {\r\n                    st.position = this.lastPosition;\r\n                }\r\n                this.lastStatement = st;\r\n            }\r\n        } else {\r\n            this.currentProgram.statements.push(statement);\r\n            if (statement.type == TokenType.return || statement.type == TokenType.jumpAlways) {\r\n                if (this.lastStatement != null && this.lastStatement.type != TokenType.noOp) this.lastStatement.stepFinished = false;\r\n            }\r\n            if (statement.position != null) {\r\n                this.lastPosition = statement.position;\r\n            } else {\r\n                statement.position = this.lastPosition;\r\n            }\r\n\r\n            this.lastStatement = statement;\r\n        }\r\n    }\r\n\r\n    insertOrPushStatements(statements: Statement | Statement[], pos?: number) {\r\n        if (pos == null && pos == undefined) this.pushStatements(statements);\r\n        else this.insertStatements(pos, statements);\r\n    }\r\n\r\n    removeLastStatement() {\r\n        let lst = this.currentProgram.statements.pop();\r\n        if (this.currentProgram.labelManager != null) {\r\n            this.currentProgram.labelManager.removeNode(lst);\r\n        }\r\n    }\r\n\r\n    initStackFrameNodes: InitStackframeStatement[] = [];\r\n\r\n\r\n    pushNewSymbolTable(beginNewStackframe: boolean, positionFrom: TextPosition, positionTo: TextPosition,\r\n        program?: Program): SymbolTable {\r\n\r\n        let st = new SymbolTable(this.currentSymbolTable, positionFrom, positionTo);\r\n\r\n        this.symbolTableStack.push(this.currentSymbolTable);\r\n\r\n        if (beginNewStackframe) {\r\n            st.beginsNewStackframe = true;\r\n            this.currentSymbolTable.stackframeSize = this.nextFreeRelativeStackPos;\r\n            this.nextFreeRelativeStackPos = 0;\r\n\r\n            if (program != null) {\r\n                let initStackFrameNode: InitStackframeStatement = {\r\n                    type: TokenType.initStackframe,\r\n                    position: positionFrom,\r\n                    reserveForLocalVariables: 0\r\n                }\r\n\r\n                program.statements.push(initStackFrameNode);\r\n                this.initStackFrameNodes.push(initStackFrameNode);\r\n            }\r\n\r\n        }\r\n\r\n        this.currentSymbolTable = st;\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    popSymbolTable(program?: Program, deleteStepFinishedFlagOnStepBefore: boolean = false): void {\r\n\r\n        let st = this.currentSymbolTable;\r\n        this.currentSymbolTable = this.symbolTableStack.pop();\r\n\r\n        // if v.declarationError != null then variable has been used before initialization.\r\n        st.variableMap.forEach(v => {\r\n            if (v.declarationError != null && v.usedBeforeInitialization) {\r\n                this.errorList.push(v.declarationError);\r\n                v.declarationError = null;\r\n            }\r\n        });\r\n\r\n        // if (!st.beginsNewStackframe && st.variableMap.size == 0 && removeI) {\r\n        //     // empty symbol table => remove it!\r\n        //     if (st.parent != null) {\r\n        //         st.parent.childSymbolTables.pop();\r\n        //     }\r\n        // } else \r\n        {\r\n            // TODO: add length of token\r\n\r\n            if (st.beginsNewStackframe) {\r\n\r\n                st.stackframeSize = this.nextFreeRelativeStackPos;\r\n                this.nextFreeRelativeStackPos = this.currentSymbolTable.stackframeSize;\r\n\r\n                if (program != null) {\r\n                    let initStackframeNode = this.initStackFrameNodes.pop();\r\n                    if (initStackframeNode != null) initStackframeNode.reserveForLocalVariables = st.stackframeSize;\r\n\r\n                    if (program.statements.length > 0 && deleteStepFinishedFlagOnStepBefore) {\r\n                        let statement = program.statements[program.statements.length - 1];\r\n\r\n                        // don't set stepFinished = false in jump-statements\r\n                        // as this could lead to infinity-loop is user sets \"while(true);\" just before program end\r\n                        if ([TokenType.jumpAlways, TokenType.jumpIfTrue, TokenType.jumpIfFalse, TokenType.jumpIfFalseAndLeaveOnStack, TokenType.jumpIfTrueAndLeaveOnStack].indexOf(statement.type) == -1) {\r\n                            program.statements[program.statements.length - 1].stepFinished = false;\r\n                        }\r\n                    }\r\n\r\n                    program.statements.push({\r\n                        type: TokenType.closeStackframe,\r\n                        position: st.positionTo\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushError(text: string, position: TextPosition, errorLevel: ErrorLevel = \"error\", quickFix?: QuickFix) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    openBreakScope() {\r\n        this.breakNodeStack.push([]);\r\n    }\r\n\r\n    openContinueScope() {\r\n        this.continueNodeStack.push([]);\r\n    }\r\n\r\n    pushBreakNode(breakNode: JumpAlwaysStatement) {\r\n        if (this.breakNodeStack.length == 0) {\r\n            this.pushError(\"Eine break-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", breakNode.position);\r\n        } else {\r\n            this.breakNodeStack[this.breakNodeStack.length - 1].push(breakNode);\r\n            this.pushStatements(breakNode);\r\n        }\r\n    }\r\n\r\n    pushContinueNode(continueNode: JumpAlwaysStatement) {\r\n        if (this.continueNodeStack.length == 0) {\r\n            this.pushError(\"Eine continue-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", continueNode.position);\r\n        } else {\r\n            this.continueNodeStack[this.continueNodeStack.length - 1].push(continueNode);\r\n            this.pushStatements(continueNode);\r\n        }\r\n    }\r\n\r\n    closeBreakScope(breakTargetLabel: number, lm: LabelManager) {\r\n        let breakNodes = this.breakNodeStack.pop();\r\n        for (let bn of breakNodes) {\r\n            lm.registerJumpNode(bn, breakTargetLabel);\r\n        }\r\n    }\r\n\r\n    closeContinueScope(continueTargetLabel: number, lm: LabelManager) {\r\n        let continueNodes = this.continueNodeStack.pop();\r\n        for (let bn of continueNodes) {\r\n            lm.registerJumpNode(bn, continueTargetLabel);\r\n        }\r\n    }\r\n\r\n    breakOccured(): boolean {\r\n        return this.breakNodeStack.length > 0 && this.breakNodeStack[this.breakNodeStack.length - 1].length > 0;\r\n    }\r\n\r\n    processNode(node: ASTNode, isLeftSideOfAssignment: boolean = false): StackType {\r\n\r\n        if (node == null) return;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                return this.processBinaryOp(node);\r\n            case TokenType.unaryOp:\r\n                return this.processUnaryOp(node);\r\n            case TokenType.pushConstant:\r\n                return this.pushConstant(node);\r\n            case TokenType.callMethod:\r\n                return this.callMethod(node);\r\n            case TokenType.identifier:\r\n                {\r\n                    let stackType = this.resolveIdentifier(node);\r\n                    let v = node.variable;\r\n                    if (v != null) {\r\n                        if (isLeftSideOfAssignment) {\r\n                            v.initialized = true;\r\n                            if (!v.usedBeforeInitialization) {\r\n                                v.declarationError = null;\r\n                            }\r\n                        } else {\r\n                            if (v.initialized != null && !v.initialized) {\r\n                                v.usedBeforeInitialization = true;\r\n                                this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                            }\r\n                        }\r\n                    }\r\n                    return stackType;\r\n                }\r\n            case TokenType.selectArrayElement:\r\n                return this.selectArrayElement(node);\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                return this.incrementDecrementBeforeOrAfter(node);\r\n            case TokenType.superConstructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.constructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.keywordThis:\r\n                return this.pushThisOrSuper(node, false);\r\n            case TokenType.keywordSuper:\r\n                return this.pushThisOrSuper(node, true);\r\n            case TokenType.pushAttribute:\r\n                return this.pushAttribute(node);\r\n            case TokenType.newObject:\r\n                return this.newObject(node);\r\n            case TokenType.keywordWhile:\r\n                return this.processWhile(node);\r\n            case TokenType.keywordDo:\r\n                return this.processDo(node);\r\n            case TokenType.keywordFor:\r\n                return this.processFor(node);\r\n            case TokenType.forLoopOverCollection:\r\n                return this.processForLoopOverCollection(node);\r\n            case TokenType.keywordIf:\r\n                return this.processIf(node);\r\n            case TokenType.keywordSwitch:\r\n                return this.processSwitch(node);\r\n            case TokenType.keywordReturn:\r\n                return this.processReturn(node);\r\n            case TokenType.localVariableDeclaration:\r\n                return this.localVariableDeclaration(node);\r\n            case TokenType.arrayInitialization:\r\n                return this.processArrayLiteral(node);\r\n            case TokenType.newArray:\r\n                return this.processNewArray(node);\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                return this.processPrint(node);\r\n            case TokenType.castValue:\r\n                return this.processManualCast(node);\r\n            case TokenType.keywordBreak:\r\n                this.pushBreakNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.keywordContinue:\r\n                this.pushContinueNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.rightBracket:\r\n                let type = this.processNode(node.termInsideBrackets);\r\n                if (type != null && type.type instanceof Klass) this.pushTypePosition(node.position, type.type);\r\n                return type;\r\n            case TokenType.scopeNode:\r\n                this.pushNewSymbolTable(false, node.position, node.positionTo);\r\n\r\n                let withReturnStatement = this.processStatementsInsideBlock(node.statements);\r\n\r\n                this.popSymbolTable();\r\n\r\n                return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processManualCast(node: CastManuallyNode): StackType {\r\n\r\n        let typeFrom1 = this.processNode(node.whatToCast);\r\n\r\n        if (typeFrom1 == null || typeFrom1.type == null) return;\r\n        let typeFrom: Type = typeFrom1.type;\r\n\r\n        if (typeFrom != null && node.castToType != null && node.castToType.resolvedType != null) {\r\n\r\n            let typeTo = node.castToType.resolvedType;\r\n\r\n            if (typeFrom.canCastTo(typeTo)) {\r\n\r\n                this.pushCastToStatement(typeFrom, typeTo, node);\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n\r\n            }\r\n\r\n            if ((typeFrom instanceof Klass || typeFrom instanceof Interface) && (typeTo instanceof Klass || typeTo instanceof Interface))\r\n\r\n            // if (typeFrom instanceof Klass &&\r\n            //     (typeTo instanceof Klass && !typeFrom.hasAncestorOrIs(typeTo) && typeTo.hasAncestorOrIs(typeFrom)) ||\r\n            //     (typeTo instanceof Interface && !(<Klass>typeFrom).implementsInterface(typeTo))) \r\n            {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.checkCast,\r\n                    position: node.position,\r\n                    newType: typeTo,\r\n                    stepFinished: false\r\n                });\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n            }\r\n            else {\r\n                this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushCastToStatement(typeFrom: Type, typeTo: Type, node: CastManuallyNode) {\r\n        let needsStatement: boolean = typeFrom != typeTo;\r\n\r\n        if (needsStatement) this.pushStatements({\r\n            type: TokenType.castValue,\r\n            position: node.position,\r\n            newType: typeTo\r\n        });\r\n\r\n    }\r\n\r\n    processPrint(node: PrintNode): StackType {\r\n\r\n        let type = node.type == TokenType.keywordPrint ? TokenType.print : TokenType.println;\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, TokenTypeReadable[node.type], node.rightBracketPosition);\r\n\r\n        if (node.text != null) {\r\n\r\n            let type = this.processNode(node.text);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticToString(type.type)) {\r\n                    this.pushError(\"Die Methoden print und println erwarten einen Parameter vom Typ String. Gefunden wurde ein Wert vom Typ \" + type.type?.identifier + \".\", node.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        let withColor: boolean = false;\r\n\r\n        if (node.color != null) {\r\n\r\n            let type = this.processNode(node.color);\r\n\r\n            if (type != null) {\r\n                if (type.type != stringPrimitiveType && type.type != intPrimitiveType) {\r\n                    if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                        this.pushError(\"Die Methoden print und println erwarten als Farbe einen Parameter vom Typ String oder int. Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                    }\r\n                }\r\n            }\r\n\r\n            withColor = true;\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: type,\r\n            position: node.position,\r\n            empty: (node.text == null),\r\n            stepFinished: true,\r\n            withColor: withColor\r\n        });\r\n\r\n\r\n        return null;\r\n    }\r\n\r\n    processNewArray(node: NewArrayNode): StackType {\r\n\r\n        if (node.initialization != null) {\r\n            return this.processArrayLiteral(node.initialization);\r\n        }\r\n\r\n        // int[7][2][] are 7 arrays each with arrays of length 2 which are empty\r\n\r\n        let dimension = 0;\r\n        for (let ec of node.elementCount) {\r\n            if (ec != null) {\r\n                this.processNode(ec); // push number of elements for this dimension on stack\r\n                dimension++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // for the array above: arrayType is array of array of int; dimension is 2; stack: 7 2\r\n        this.pushStatements({\r\n            type: TokenType.pushEmptyArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType,\r\n            dimension: dimension\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n\r\n    processArrayLiteral(node: ArrayInitializationNode): StackType {\r\n\r\n        let bes: BeginArrayStatement = {\r\n            type: TokenType.beginArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType\r\n        };\r\n\r\n        this.pushStatements(bes);\r\n\r\n        for (let ain of node.nodes) {\r\n\r\n            // Did an error occur when parsing a constant?\r\n            if (ain == null) {\r\n                continue;\r\n            }\r\n\r\n            if (ain.type == TokenType.arrayInitialization) {\r\n                this.processArrayLiteral(ain);\r\n            } else {\r\n                let sType = this.processNode(ain);\r\n                if (sType == null) {\r\n                    return;\r\n                }\r\n                let targetType = (<ArrayType>node.arrayType.resolvedType).arrayOfType;\r\n                if (!this.ensureAutomaticCasting(sType.type, targetType, ain.position)) {\r\n                    this.pushError(\"Der Datentyp des Terms (\" + sType.type?.identifier + \") kann nicht in den Datentyp \" + targetType?.identifier + \" konvertiert werden.\", ain.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.addToArray,\r\n            position: node.position,\r\n            numberOfElementsToAdd: node.nodes.length\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n    localVariableDeclaration(node: LocalVariableDeclarationNode, dontWarnWhenNoInitialization: boolean = false): StackType {\r\n\r\n        if (node.variableType.resolvedType == null) {\r\n            node.variableType.resolvedType = nullType; // Make the best out of it...\r\n        }\r\n\r\n        let declareVariableOnHeap = (this.heap != null && this.symbolTableStack.length <= 2);\r\n\r\n        let variable: Variable = {\r\n            identifier: node.identifier,\r\n            stackPos: declareVariableOnHeap ? null : this.nextFreeRelativeStackPos++,\r\n            type: node.variableType.resolvedType,\r\n            usagePositions: new Map(),\r\n            declaration: { module: this.module, position: node.position },\r\n            isFinal: node.isFinal\r\n        };\r\n\r\n        this.pushUsagePosition(node.position, variable);\r\n\r\n        if (declareVariableOnHeap) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.heapVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            });\r\n\r\n            if (this.heap[variable.identifier]) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.heap[variable.identifier] = variable;\r\n            // only for code completion:\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n        } else {\r\n\r\n            if (this.currentSymbolTable.variableMap.get(node.identifier)) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n            this.pushStatements({\r\n                type: TokenType.localVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            })\r\n\r\n        }\r\n\r\n        if (node.initialization != null) {\r\n            let initType = this.processNode(node.initialization);\r\n\r\n            if (initType != null) {\r\n\r\n                if (variable.type == varType) {\r\n                    variable.type = initType.type;\r\n                } else if (initType.type == null) {\r\n                    this.pushError(\"Der Typ des Terms auf der rechten Seite des Zuweisungsoperators (=) konnte nicht bestimmt werden.\", node.initialization.position);\r\n                } else\r\n                    if (!this.ensureAutomaticCasting(initType.type, variable.type)) {\r\n                        this.pushError(\"Der Term vom Typ \" + initType.type.identifier + \" kann der Variable vom Typ \" + variable.type.identifier + \" nicht zugeordnet werden.\", node.initialization.position);\r\n                    };\r\n                this.pushStatements({\r\n                    type: TokenType.assignment,\r\n                    position: node.initialization.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                });\r\n            }\r\n\r\n        } else {\r\n            if (variable.type == varType) {\r\n                this.pushError(\"Die Verwendung von var ist nur dann zulässig, wenn eine lokale Variable in einer Anweisung deklariert und initialisiert wird, also z.B. var i = 12;\", node.variableType.position);\r\n            } else {\r\n                let initializer: string = \" = null\";\r\n                if (variable.type == intPrimitiveType) initializer = \" = 0\";\r\n                if (variable.type == doublePrimitiveType) initializer = \" = 0.0\";\r\n                if (variable.type == booleanPrimitiveType) initializer = \" = false\";\r\n                if (variable.type == charPrimitiveType) initializer = \" = ' '\";\r\n                if (variable.type == stringPrimitiveType) initializer = ' = \"\"';\r\n\r\n                variable.declarationError = {\r\n                    text: \"Jede lokale Variable sollte vor ihrer ersten Verwendung initialisiert werden.\",\r\n                    position: node.position,\r\n                    quickFix:\r\n                    {\r\n                        title: initializer + \" ergänzen\",\r\n                        editsProvider: (uri) => {\r\n                            let pos = node.position;\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: pos.line, startColumn: pos.column + pos.length, endLineNumber: pos.line, endColumn: pos.column + pos.length },\r\n                                        text: initializer\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    level: \"info\"\r\n                }\r\n\r\n                variable.usedBeforeInitialization = false;\r\n                variable.initialized = dontWarnWhenNoInitialization;\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    processReturn(node: ReturnNode): StackType {\r\n\r\n        let method = this.currentSymbolTable.method;\r\n\r\n        if (method == null) {\r\n            this.pushError(\"Eine return-Anweisung ist nur im Kontext einer Methode erlaubt.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (node.term != null) {\r\n\r\n            if (method.getReturnType() == null) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet keinen Rückgabewert.\", node.position);\r\n                return null;\r\n            }\r\n\r\n            let type = this.processNode(node.term);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, method.getReturnType(), null, node)) {\r\n                    this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \". Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            if (method.getReturnType() != null && method.getReturnType() != voidPrimitiveType) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \", daher ist die leere Return-Anweisung (return;) nicht ausreichend.\", node.position);\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.return,\r\n            position: node.position,\r\n            copyReturnValueToStackframePos0: node.term != null,\r\n            stepFinished: true,\r\n            leaveThisObjectOnStack: false\r\n        });\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: true };\r\n\r\n    }\r\n\r\n    processSwitch(node: SwitchNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let ct = this.processNode(node.condition);\r\n        if (ct == null || ct.type == null) return;\r\n\r\n        let conditionType = ct.type;\r\n\r\n        let isString = conditionType == stringPrimitiveType || conditionType == charPrimitiveType;\r\n        let isInteger = conditionType == intPrimitiveType;\r\n        let isEnum = conditionType instanceof Enum;\r\n\r\n        if (!(isString || isInteger || isEnum)) {\r\n            this.pushError(\"Der Unterscheidungsterms einer switch-Anweisung muss den Datentyp String, char, int oder enum besitzen. Dieser hier ist vom Typ \" + conditionType.identifier, node.condition.position);\r\n        }\r\n\r\n        if (isEnum) {\r\n            this.pushStatements({\r\n                type: TokenType.castValue,\r\n                position: node.condition.position,\r\n                newType: intPrimitiveType\r\n            });\r\n        }\r\n\r\n        let switchStatement: JumpOnSwitchStatement = {\r\n            type: TokenType.keywordSwitch,\r\n            position: node.position,\r\n            defaultDestination: null,\r\n            switchType: isString ? \"string\" : \"number\",\r\n            destinationLabels: [],\r\n            destinationMap: {}\r\n        }\r\n\r\n        this.pushStatements(switchStatement);\r\n\r\n        // if value not included in case-statement and no default-statement present:\r\n        let endLabel = lm.insertJumpNode(TokenType.jumpAlways, node.position, this);\r\n\r\n        switchStatement.stepFinished = true;\r\n\r\n        lm.registerSwitchStatement(switchStatement);\r\n\r\n        this.openBreakScope();\r\n\r\n        let withReturnStatement = node.caseNodes.length > 0;\r\n\r\n        for (let caseNode of node.caseNodes) {\r\n\r\n            let isDefault = caseNode.caseTerm == null;\r\n\r\n            if (!isDefault) {\r\n\r\n                let constant: string | number = null;\r\n\r\n                if (isEnum && caseNode.caseTerm.type == TokenType.identifier) {\r\n                    let en: Enum = <Enum>conditionType;\r\n                    let info = en.identifierToInfoMap[caseNode.caseTerm.identifier];\r\n                    if (info == null) {\r\n                        this.pushError(\"Die Enum-Klasse \" + conditionType.identifier + \" hat kein Element mit dem Bezeichner \" + caseNode.caseTerm.identifier, caseNode.position, \"error\");\r\n                    } else {\r\n                        constant = info.ordinal;\r\n                    }\r\n                } else {\r\n                    let caseTerm = this.processNode(caseNode.caseTerm);\r\n\r\n                    let ls = this.lastStatement;\r\n\r\n                    if (ls.type == TokenType.pushConstant) {\r\n                        constant = ls.value;\r\n                    }\r\n\r\n                    if (ls.type == TokenType.pushEnumValue) {\r\n                        constant = ls.enumClass.getOrdinal(ls.valueIdentifier);\r\n                    }\r\n\r\n                    this.removeLastStatement();\r\n                }\r\n\r\n                if (constant == null) {\r\n                    this.pushError(\"Der Term bei case muss konstant sein.\", caseNode.caseTerm.position);\r\n                }\r\n\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n\r\n                switchStatement.destinationLabels.push({\r\n                    constant: constant,\r\n                    label: label\r\n                });\r\n            } else {\r\n                // default case\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n                switchStatement.defaultDestination = label;\r\n            }\r\n\r\n        }\r\n\r\n        if (switchStatement.defaultDestination == null) {\r\n            withReturnStatement = false;\r\n        }\r\n\r\n        lm.markJumpDestination(1, endLabel);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n    }\r\n\r\n    processIf(node: IfNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        this.checkIfAssignmentInstedOfEqual(node.condition, conditionType?.type);\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'if' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let beginElse = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        let withReturnStatementIf = this.generateStatements(node.statementsIfTrue).withReturnStatement;\r\n\r\n        let endOfIf: number;\r\n        if (node.statementsIfFalse != null) {\r\n            endOfIf = lm.insertJumpNode(TokenType.jumpAlways, null, this);\r\n        }\r\n\r\n        lm.markJumpDestination(1, beginElse);\r\n\r\n        let withReturnStatementElse: boolean;\r\n        if (node.statementsIfFalse == null || node.statementsIfFalse.length == 0) {\r\n            withReturnStatementElse = false;\r\n        } else {\r\n            withReturnStatementElse = this.generateStatements(node.statementsIfFalse).withReturnStatement;\r\n        }\r\n\r\n        if (endOfIf != null) {\r\n            lm.markJumpDestination(1, endOfIf);\r\n        }\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatementIf && withReturnStatementElse };\r\n\r\n    }\r\n\r\n\r\n    processFor(node: ForNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        this.generateStatements(node.statementsBefore);\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert der Bedingung muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n        this.generateStatements(node.statementsAfter);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processForLoopOverCollection(node: ForNodeOverCollecion): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        // reserve position on stack for collection\r\n        let stackPosForCollection = this.nextFreeRelativeStackPos++;\r\n\r\n        // assign value of collection term to collection\r\n        let ct = this.processNode(node.collection);\r\n        if (ct == null) return;\r\n        let collectionType = ct.type;\r\n\r\n        this.pushStatements({\r\n            type: TokenType.popAndStoreIntoVariable,\r\n            position: node.collection.position,\r\n            stackposOfVariable: stackPosForCollection,\r\n            stepFinished: false\r\n        })\r\n\r\n        let collectionElementType: Type;\r\n\r\n        let kind: \"array\" | \"internalList\" | \"group\" | \"userDefinedIterable\" = null;\r\n\r\n        if (collectionType instanceof ArrayType) {\r\n            collectionElementType = collectionType.arrayOfType;\r\n            kind = \"array\";\r\n        } else if (collectionType instanceof Klass && collectionType.getImplementedInterface(\"Iterable\") != null) {\r\n            if (collectionType.module.isSystemModule) {\r\n                kind = \"internalList\";\r\n            } else {\r\n                kind = \"userDefinedIterable\";\r\n            }\r\n            let iterableInterface = collectionType.getImplementedInterface(\"Iterable\");\r\n            if (collectionType.typeVariables.length == 0) {\r\n                collectionElementType = objectType;\r\n            } else {\r\n                collectionElementType = collectionType.typeVariables[0].type;\r\n            }\r\n        } else if (collectionType instanceof Klass && collectionType.identifier == \"Group\") {\r\n            kind = \"group\";\r\n            collectionElementType = this.moduleStore.getType(\"Shape\").type;\r\n        }\r\n        else {\r\n            this.pushError(\"Mit der vereinfachten for-Schleife (for identifier : collectionOrArray) kann man nur über Arrays oder Klassen, die das Interface Iterable implementieren, iterieren.\", node.collection.position);\r\n            return null;\r\n        }\r\n\r\n        let variableType = node.variableType.resolvedType;\r\n        if (variableType == null) return null;\r\n\r\n        let noCastingNeeded = variableType == varType;\r\n        if (noCastingNeeded) {\r\n            variableType = collectionElementType;\r\n            node.variableType.resolvedType = collectionElementType\r\n        } else {\r\n            if (!collectionElementType.canCastTo(variableType)) {\r\n                this.pushError(\"Der ElementTyp \" + collectionElementType.identifier + \" der Collection kann nicht in den Typ \" + variableType.identifier + \" der Iterationsvariable \" + node.variableIdentifier + \" konvertiert werden.\", node.position);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        this.localVariableDeclaration({\r\n            type: TokenType.localVariableDeclaration,\r\n            identifier: node.variableIdentifier,\r\n            initialization: null,\r\n            isFinal: false,\r\n            position: node.variablePosition,\r\n            variableType: node.variableType\r\n        }, true)\r\n\r\n        let variableStackPos = this.nextFreeRelativeStackPos - 1;\r\n        let stackPosOfCounterVariableOrIterator = this.nextFreeRelativeStackPos++;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            this.pushStatements([{\r\n                type: TokenType.extendedForLoopInit,\r\n                position: node.position,\r\n                stepFinished: false,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                typeOfElement: variableType,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator\r\n            }], true);\r\n        } else {\r\n            // get Iterator from collection\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosOfCounterVariableOrIterator,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"iterator\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }], true);\r\n        }\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n        let labelAfterForLoop: number;\r\n        let lastStatementBeforeCasting: Statement;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            let jumpNode: ExtendedForLoopCheckCounterAndGetElement = {\r\n                type: TokenType.extendedForLoopCheckCounterAndGetElement,\r\n                kind: kind,\r\n                position: node.variablePosition,\r\n                stepFinished: true,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator,\r\n                destination: 0 // gets filled in later,\r\n            };\r\n            lastStatementBeforeCasting = jumpNode;\r\n            labelAfterForLoop = lm.registerJumpNode(jumpNode);\r\n\r\n            this.pushStatements(\r\n                jumpNode\r\n            );\r\n\r\n        } else {\r\n            // call collection.hasNext()\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.variablePosition,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"hasNext\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n            ]);\r\n            labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n            // call collection.next() and assign to loop variable\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: variableStackPos,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"next\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }]);\r\n        }\r\n\r\n        if (!noCastingNeeded) {\r\n            let oldStatementCount = this.currentProgram.statements.length;\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variableStackPos,\r\n                stepFinished: false\r\n            });\r\n            this.ensureAutomaticCasting(collectionElementType, variableType);\r\n            if (this.currentProgram.statements.length < oldStatementCount + 2) {\r\n                // casting needed no statement, so delete pushLocalVariabletoStack-Statement\r\n                this.currentProgram.statements.pop();\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.popAndStoreIntoVariable,\r\n                    stackposOfVariable: variableStackPos,\r\n                    position: node.position,\r\n                    stepFinished: true\r\n                });\r\n                lastStatementBeforeCasting.stepFinished = false;\r\n            }\r\n        }\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processWhile(node: WhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let conditionBeginLabel = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let position = node.position;\r\n\r\n        if (node.condition != null) {\r\n            position = node.condition.position;\r\n        }\r\n\r\n        let afterWhileStatementLabel = lm.insertJumpNode(TokenType.jumpIfFalse, position, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let pc = this.currentProgram.statements.length;\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        if (this.currentProgram.statements.length == pc) {\r\n            this.insertNoOp(node.scopeTo, false);\r\n        }\r\n\r\n        this.closeContinueScope(conditionBeginLabel, lm);\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, conditionBeginLabel);\r\n\r\n        lm.markJumpDestination(1, afterWhileStatementLabel);\r\n\r\n        this.closeBreakScope(afterWhileStatementLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    insertNoOp(position: TextPosition, stepFinished: boolean) {\r\n        this.pushStatements({\r\n            type: TokenType.noOp,\r\n            position: position,\r\n            stepFinished: stepFinished\r\n        })\r\n    }\r\n\r\n    processDo(node: DoWhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let statementsBeginLabel = lm.markJumpDestination(1);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let pc = this.currentProgram.statements.length;\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        if (this.currentProgram.statements.length == pc) {\r\n            this.insertNoOp(node.scopeTo, false);\r\n        }\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        lm.insertJumpNode(TokenType.jumpIfTrue, statements.endPosition, this, statementsBeginLabel);\r\n\r\n        let endLabel = lm.markJumpDestination(1);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    newObject(node: NewObjectNode): StackType {\r\n\r\n        if (node.classType == null || node.classType.resolvedType == null) return null;\r\n\r\n        let resolvedType: Klass = <Klass>node.classType.resolvedType;\r\n        if (!(resolvedType instanceof Klass)) {\r\n            this.pushError(node.classType.identifier + \" ist keine Klasse, daher kann davon mit 'new' kein Objekt erzeugt werden.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (resolvedType.isAbstract) {\r\n            this.pushError(`${node.classType.identifier} ist eine abstrakte Klasse, daher kann von ihr mit 'new' kein Objekt instanziert werden. Falls ${node.classType.identifier} nicht-abstrakte Kindklassen besitzt, könntest Du von DENEN mit new Objekte instanzieren...`, node.position);\r\n            return null;\r\n        }\r\n\r\n        //this.pushTypePosition(node.rightBracketPosition, classType);\r\n\r\n        if (resolvedType.module != this.module && resolvedType.visibility != Visibility.public) {\r\n            this.pushError(\"Die Klasse \" + resolvedType.identifier + \" ist hier nicht sichtbar.\", node.position);\r\n        }\r\n\r\n        let newStatement: NewObjectStatement = {\r\n            type: TokenType.newObject,\r\n            position: node.position,\r\n            class: resolvedType,\r\n            subsequentConstructorCall: false,\r\n            stepFinished: true\r\n        };\r\n\r\n        this.pushStatements(newStatement);\r\n        this.pushTypePosition(node.rightBracketPosition, resolvedType); // to enable code completion when typing a point after the closing bracket\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n        let allStatements = this.currentProgram.statements;\r\n\r\n        if (node.constructorOperands?.length > 0) {\r\n            // for (let p of node.constructorOperands) {\r\n            for (let j = 0; j < node.constructorOperands.length; j++) {\r\n                let p = node.constructorOperands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n        let upToVisibility = getVisibilityUpTo(resolvedType, this.currentSymbolTable.classContext);\r\n\r\n        // let methods = resolvedType.getMethodsThatFitWithCasting(resolvedType.identifier,\r\n        //     parameterTypes, true, upToVisibility);\r\n\r\n        let methods = resolvedType.getConstructor(parameterTypes, upToVisibility);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, resolvedType.getMethods(Visibility.public, resolvedType.identifier), node.rightBracketPosition);\r\n\r\n        // if there's no parameterless constructor then return without error:\r\n        if (parameterTypes.length > 0 || resolvedType.hasConstructor()) {\r\n\r\n            if (methods.error != null) {\r\n                this.pushError(methods.error, node.position);\r\n                return { type: resolvedType, isAssignable: false }; // try to continue...\r\n            }\r\n\r\n            let method = methods.methodList[0];\r\n            this.pushUsagePosition(node.position, method);\r\n\r\n            let staticClassContext = null;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext != null && classContext instanceof Klass) {\r\n                staticClassContext = classContext.staticClass;\r\n            }\r\n\r\n            if (method.visibility == Visibility.private && resolvedType != classContext && resolvedType != staticClassContext) {\r\n                let ok = (resolvedType == classContext || resolvedType != staticClassContext || (classContext instanceof StaticClass && resolvedType == classContext.Klass));\r\n                if (!ok) {\r\n                    this.pushError(\"Die Konstruktormethode ist private und daher hier nicht sichtbar.\", node.position);\r\n                }\r\n            }\r\n\r\n            let destType: Type = null;\r\n            for (let i = 0; i < parameterTypes.length; i++) {\r\n                if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                    destType = method.getParameterType(i);\r\n                    if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                        destType = (<ArrayType>destType).arrayOfType;\r\n                    }\r\n                }\r\n\r\n                let srcType = parameterTypes[i];\r\n                // for (let st of parameterStatements[i]) {\r\n                //     this.currentProgram.statements.push(st);\r\n                // }\r\n                let programPosition = allStatements.length;\r\n                if (!this.ensureAutomaticCasting(srcType, destType, node.constructorOperands[i].position, node.constructorOperands[i])) {\r\n                    this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.constructorOperands[i].position);\r\n                }\r\n\r\n                if (allStatements.length > programPosition) {\r\n                    let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                    allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                    this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n                }\r\n\r\n            }\r\n\r\n            let stackframeDelta = 0;\r\n            if (method.hasEllipsis()) {\r\n                let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n                stackframeDelta = - (ellipsisParameterCount - 1);\r\n                this.pushStatements({\r\n                    type: TokenType.makeEllipsisArray,\r\n                    position: node.constructorOperands[method.getParameterCount() - 1].position,\r\n                    parameterCount: ellipsisParameterCount,\r\n                    stepFinished: false,\r\n                    arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n                })\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: false,\r\n                stepFinished: resolvedType.getPostConstructorCallbacks() == null,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            }, true);\r\n\r\n            newStatement.subsequentConstructorCall = true;\r\n            newStatement.stepFinished = false;\r\n\r\n        }\r\n\r\n        if (resolvedType.getPostConstructorCallbacks() != null) {\r\n            this.pushStatements({\r\n                type: TokenType.processPostConstructorCallbacks,\r\n                position: node.position,\r\n                stepFinished: true\r\n            }, true);\r\n        }\r\n\r\n        return { type: resolvedType, isAssignable: false };\r\n\r\n    }\r\n\r\n    pushAttribute(node: SelectArributeNode): StackType {\r\n\r\n        if (node.object == null || node.identifier == null) return null;\r\n\r\n        let ot = this.processNode(node.object);\r\n        if (ot == null) {\r\n            this.pushError('Links vom Punkt steht kein Objekt.', node.position);\r\n            return null;\r\n        }\r\n\r\n        if (!(ot.type instanceof Klass || ot.type instanceof StaticClass || ot.type instanceof ArrayType)) {\r\n            if (ot.type == null) {\r\n                this.pushError('Der Ausdruck links vom Punkt hat kein Attribut ' + node.identifier + \".\", node.position);\r\n            } else {\r\n                this.pushError('Links vom Punkt steht ein Ausdruck vom Datentyp ' + ot.type.identifier + \". Dieser hat kein Attribut \" + node.identifier + \".\", node.position);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | ArrayType = ot.type;\r\n\r\n        if (objectType instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            let attributeWithError = objectType.getAttribute(node.identifier, visibilityUpTo);\r\n\r\n            let staticAttributeWithError: { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass }\r\n                = null;\r\n            if (attributeWithError.attribute == null) {\r\n                staticAttributeWithError = objectType.staticClass.getAttribute(node.identifier, visibilityUpTo);\r\n            }\r\n\r\n            if (attributeWithError.attribute == null && staticAttributeWithError.attribute == null) {\r\n                if (attributeWithError.foundButInvisible || !staticAttributeWithError.foundButInvisible) {\r\n                    this.pushError(attributeWithError.error, node.position);\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                }\r\n                return {\r\n                    type: objectType,\r\n                    isAssignable: false\r\n                }\r\n            } else {\r\n                let attribute: Attribute;\r\n                if (attributeWithError.attribute != null) {\r\n                    this.pushStatements({\r\n                        type: TokenType.pushAttribute,\r\n                        position: node.position,\r\n                        attributeIndex: attributeWithError.attribute.index,\r\n                        attributeIdentifier: attributeWithError.attribute.identifier,\r\n                        useThisObject: false\r\n                    });\r\n                    attribute = attributeWithError.attribute;\r\n                } else {\r\n                    this.pushStatements([{\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: node.position,\r\n                        popCount: 1\r\n                    }, {\r\n                        type: TokenType.pushStaticAttribute,\r\n                        position: node.position,\r\n                        // klass: (<Klass>objectType).staticClass,\r\n                        klass: staticAttributeWithError.staticClass,\r\n                        attributeIndex: staticAttributeWithError.attribute.index,\r\n                        attributeIdentifier: staticAttributeWithError.attribute.identifier\r\n                    }]);\r\n                    attribute = staticAttributeWithError.attribute;\r\n                }\r\n\r\n                this.pushUsagePosition(node.position, attribute);\r\n\r\n                return {\r\n                    type: attribute.type,\r\n                    isAssignable: !attribute.isFinal\r\n                }\r\n            }\r\n\r\n        } else if (objectType instanceof StaticClass) {\r\n            // Static class\r\n            if (objectType.Klass instanceof Enum) {\r\n                this.removeLastStatement(); // remove push static enum class to stack\r\n\r\n                let enumInfo = objectType.Klass.enumInfoList.find(ei => ei.identifier == node.identifier);\r\n\r\n                if (enumInfo == null) {\r\n                    this.pushError(\"Die enum-Klasse \" + objectType.identifier + \" hat keinen enum-Wert mit dem Bezeichner \" + node.identifier, node.position);\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: node.position,\r\n                    enumClass: objectType.Klass,\r\n                    valueIdentifier: node.identifier\r\n                });\r\n\r\n                return {\r\n                    type: objectType.Klass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n                let staticAttributeWithError = objectType.getAttribute(node.identifier, upToVisibility);\r\n                if (staticAttributeWithError.attribute != null) {\r\n                    // if (staticAttributeWithError.attribute.updateValue != undefined) {\r\n                    //     this.removeLastStatement();\r\n                    //     this.pushStatements({\r\n                    //         type: TokenType.pushStaticAttributeIntrinsic,\r\n                    //         position: node.position,\r\n                    //         attribute: staticAttributeWithError.attribute\r\n                    //     });\r\n                    // } else \r\n                    {\r\n                        this.removeLastStatement();\r\n                        this.pushStatements({\r\n                            type: TokenType.pushStaticAttribute,\r\n                            position: node.position,\r\n                            attributeIndex: staticAttributeWithError.attribute.index,\r\n                            attributeIdentifier: staticAttributeWithError.attribute.identifier,\r\n                            klass: staticAttributeWithError.staticClass\r\n                        });\r\n                        this.pushUsagePosition(node.position, staticAttributeWithError.attribute);\r\n\r\n                    }\r\n                    return {\r\n                        type: staticAttributeWithError.attribute.type,\r\n                        isAssignable: !staticAttributeWithError.attribute.isFinal\r\n                    }\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                    return {\r\n                        type: objectType,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            if (node.identifier != \"length\") {\r\n                this.pushError('Der Wert vom Datentyp ' + ot.type.identifier + \" hat kein Attribut \" + node.identifier, node.position);\r\n                return null;\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.pushArrayLength,\r\n                position: node.position\r\n            });\r\n\r\n            let element: Attribute = new Attribute(\"length\", intPrimitiveType, null, true, Visibility.public, true, \"Länge des Arrays\");\r\n\r\n            this.module.addIdentifierPosition(node.position, element);\r\n\r\n            return {\r\n                type: intPrimitiveType,\r\n                isAssignable: false\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushThisOrSuper(node: ThisNode | SuperNode, isSuper: boolean): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (isSuper && classContext != null) {\r\n            classContext = classContext.baseClass;\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null) {\r\n            this.pushError(\"Das Objekt \" + (isSuper ? \"super\" : \"this\") + \" existiert nur innerhalb einer Methodendeklaration.\", node.position);\r\n            return null;\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: 0\r\n            })\r\n\r\n            this.pushTypePosition(node.position, classContext);\r\n            return { type: classContext, isAssignable: false, isSuper: isSuper };\r\n        }\r\n\r\n    }\r\n\r\n    superconstructorCall(node: SuperconstructorCallNode | ConstructorCallNode): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        let isSuperConstructorCall: boolean = node.type == TokenType.superConstructorCall;\r\n\r\n        if (isSuperConstructorCall) {\r\n            if (classContext?.baseClass == null || classContext.baseClass.identifier == \"Object\") {\r\n                this.pushError(\"Die Klasse ist nur Kindklasse der Klasse Object, daher ist der Aufruf des Superkonstruktors nicht möglich.\", node.position);\r\n            }\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null || !methodContext.isConstructor) {\r\n            this.pushError(\"Ein Aufruf des Konstruktors oder des Superkonstructors ist nur innerhalb des Konstruktors einer Klasse möglich.\", node.position);\r\n            return null;\r\n        }\r\n\r\n\r\n        let superclassType: Klass | StaticClass;\r\n\r\n        if (isSuperConstructorCall) {\r\n            superclassType = <Klass>classContext.baseClass;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine super-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n            if (superclassType == null) superclassType = <Klass>this.moduleStore.getType(\"Object\").type;\r\n        } else {\r\n            superclassType = <Klass>classContext;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine this-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n        }\r\n\r\n        // Push this-object to stack:\r\n        this.pushStatements({\r\n            type: TokenType.pushLocalVariableToStack,\r\n            position: node.position,\r\n            stackposOfVariable: 0\r\n        });\r\n\r\n        let parameterTypes: Type[] = [];\r\n\r\n        if (node.operands != null) {\r\n            let errorInOperands: boolean = false;\r\n            for (let p of node.operands) {\r\n                let pt = this.processNode(p);\r\n                if (pt != null) {\r\n                    parameterTypes.push(pt.type);\r\n                } else {\r\n                    errorInOperands = true;\r\n                }\r\n            }\r\n            if (errorInOperands) {\r\n                return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n            }\r\n        }\r\n\r\n        let methods = superclassType.getConstructor(parameterTypes, Visibility.protected);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, superclassType.getMethods(Visibility.protected, superclassType.identifier),\r\n            node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            isSuperCall: isSuperConstructorCall,\r\n            position: node.position,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n        // Pabst, 21.10.2020:\r\n        // super method is constructor => returns nothing even if method.getReturnType() is class object\r\n        // return { type: method.getReturnType(), isAssignable: false };\r\n        return { type: null, isAssignable: false };\r\n\r\n    }\r\n\r\n    incrementDecrementBeforeOrAfter(node: IncrementDecrementNode): StackType {\r\n        let type = this.processNode(node.operand);\r\n\r\n        if (type == null) return;\r\n\r\n        if (!type.isAssignable) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Variablen angewendet werden, nicht auf konstante Werte oder Rückgabewerte von Methoden.\", node.position);\r\n            return type;\r\n        }\r\n\r\n        if (!type.type.canCastTo(floatPrimitiveType)) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Zahlen angewendet werden, nicht auf Werte des Datentyps \" + type.type.identifier, node.position);\r\n            return type;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: node.type,\r\n            position: node.position,\r\n            incrementDecrementBy: node.operator == TokenType.doubleMinus ? - 1 : 1\r\n\r\n        });\r\n\r\n        return type;\r\n\r\n    }\r\n\r\n    selectArrayElement(node: SelectArrayElementNode): StackType {\r\n\r\n        let arrayType = this.processNode(node.object); // push array-object \r\n        let indexType = this.processNode(node.index); // push index\r\n\r\n        if (arrayType == null || indexType == null) return;\r\n\r\n        if (!(arrayType.type instanceof ArrayType)) {\r\n            this.pushError(\"Der Typ der Variablen ist kein Array, daher ist [] nicht zulässig. \", node.object.position);\r\n            return null;\r\n        }\r\n\r\n        this.module.addIdentifierPosition({\r\n            line: node.position.line,\r\n            column: node.position.column + node.position.length,\r\n            length: 0  // Module.getTypeAtPosition needs length == 0 here to know that this type-position is not in static context for code completion\r\n        }, arrayType.type.arrayOfType);\r\n\r\n        if (!this.ensureAutomaticCasting(indexType.type, intPrimitiveType)) {\r\n            this.pushError(\"Als Index eines Arrays wird ein ganzzahliger Wert erwartet. Gefunden wurde ein Wert vom Typ \" + indexType.type.identifier + \".\", node.index.position);\r\n            return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: TokenType.selectArrayElement,\r\n            position: node.position\r\n        })\r\n\r\n        return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n\r\n    }\r\n\r\n    pushTypePosition(position: TextPosition, type: Type) {\r\n        if (position == null) return;\r\n        if (position.length > 0) {\r\n            position = {\r\n                line: position.line,\r\n                column: position.column + position.length,\r\n                length: 0\r\n            }\r\n        }\r\n        this.module.addIdentifierPosition(position, type);\r\n    }\r\n\r\n\r\n\r\n    pushUsagePosition(position: TextPosition, element: Klass | Interface | Method | Attribute | Variable) {\r\n\r\n        this.module.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(this.module);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(this.module, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): StackType {\r\n\r\n        if (node.identifier == null) return null;\r\n\r\n        let variable = this.findLocalVariable(node.identifier);\r\n        if (variable != null) {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variable.stackPos\r\n            })\r\n\r\n            this.pushUsagePosition(node.position, variable);\r\n            node.variable = variable;\r\n\r\n            return { type: variable.type, isAssignable: !variable.isFinal };\r\n        }\r\n\r\n        if (this.heap != null) {\r\n            let variable = this.heap[node.identifier];\r\n            if (variable != null) {\r\n                this.pushStatements({\r\n                    type: TokenType.pushFromHeapToStack,\r\n                    position: node.position,\r\n                    identifier: node.identifier\r\n                })\r\n\r\n                this.pushUsagePosition(node.position, variable);\r\n                node.variable = variable;\r\n\r\n\r\n                return { type: variable.type, isAssignable: !variable.isFinal };\r\n            }\r\n\r\n        }\r\n\r\n        let attribute = this.findAttribute(node.identifier, node.position);\r\n        if (attribute != null) {\r\n\r\n            if (attribute.isStatic) {\r\n                let cc = this.currentSymbolTable.classContext;\r\n                let scc = (cc instanceof StaticClass) ? cc : cc.staticClass;\r\n\r\n                while (scc != null && scc.attributes.indexOf(attribute) == -1) {\r\n                    scc = scc.baseClass;\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticAttribute,\r\n                    position: node.position,\r\n                    klass: scc,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier\r\n                });\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushAttribute,\r\n                    position: node.position,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier,\r\n                    useThisObject: true\r\n                });\r\n                node.attribute = attribute;\r\n            }\r\n\r\n\r\n            this.pushUsagePosition(node.position, attribute);\r\n\r\n            return { type: attribute.type, isAssignable: !attribute.isFinal };\r\n        }\r\n\r\n        let klassModule = this.moduleStore.getType(node.identifier);\r\n        if (klassModule != null) {\r\n            let klass = klassModule.type;\r\n            if (!(klass instanceof Klass || klass instanceof Interface)) {\r\n                this.pushError(\"Der Typ \" + klass.identifier + \" hat keine statischen Attribute/Methoden.\", node.position);\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticClassObject,\r\n                    position: node.position,\r\n                    klass: klass\r\n                });\r\n\r\n                this.pushUsagePosition(node.position, klass);\r\n\r\n                return {\r\n                    type: klass instanceof Klass ? klass.staticClass : klass,\r\n                    isAssignable: false\r\n                }\r\n            }\r\n\r\n            return {\r\n                type: klass,\r\n                isAssignable: false\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Der Bezeichner \" + node.identifier + \" ist hier nicht bekannt.\", node.position);\r\n\r\n    }\r\n\r\n    findLocalVariable(identifier: string): Variable {\r\n        let st = this.currentSymbolTable;\r\n\r\n        while (st != null) {\r\n\r\n            let variable = st.variableMap.get(identifier);\r\n\r\n            if (variable != null && variable.stackPos != null) {\r\n                return variable;\r\n            }\r\n\r\n            st = st.parent;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAttribute(identifier: string, position: TextPosition): Attribute {\r\n        let classContext = this.currentSymbolTable.classContext;\r\n        if (classContext == null) {\r\n            return null;\r\n        }\r\n\r\n        let attribute = classContext.getAttribute(identifier, Visibility.private);\r\n        if (attribute.attribute != null) return attribute.attribute;\r\n\r\n        if (classContext instanceof Klass) {\r\n            let staticAttribute = classContext.staticClass.getAttribute(identifier, Visibility.private);\r\n            if (staticAttribute.attribute != null) return staticAttribute.attribute;\r\n        }\r\n\r\n        // this.pushError(attribute.error, position);\r\n\r\n        return null;\r\n    }\r\n\r\n    callMethod(node: MethodcallNode): StackType {\r\n\r\n        let objectNode: StackType = null;\r\n\r\n        if (node.object == null) {\r\n\r\n            // call method of this-class?\r\n\r\n            let thisClass = this.currentSymbolTable.classContext;\r\n            if (thisClass != null) {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: 0\r\n                });\r\n\r\n                objectNode = {\r\n                    type: thisClass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                this.pushError(\"Ein Methodenaufruf (hier: \" + node.identifier +\r\n                    \") ohne Punktschreibweise ist nur innerhalb anderer Methoden möglich.\", node.position);\r\n                return null;\r\n            }\r\n\r\n        } else {\r\n            objectNode = this.processNode(node.object);\r\n        }\r\n\r\n        if (objectNode == null) return null;\r\n\r\n        if (!(\r\n            (objectNode.type instanceof Klass) || (objectNode.type instanceof StaticClass) ||\r\n            (objectNode.type instanceof Interface && (node.object[\"variable\"] != null || node.object[\"attribute\"] != null || node.object[\"termInsideBrackets\"] != null)) || (objectNode.type instanceof Enum))) {\r\n\r\n            if (objectNode.type == null) {\r\n                this.pushError(\"Werte dieses Datentyps besitzen keine Methoden.\", node.position);\r\n            } else {\r\n                if (objectNode.type instanceof Interface) {\r\n                    this.pushError('Methodendefinitionen eines Interfaces können nicht statisch aufgerufen werden.', node.position);\r\n                } else {\r\n                    this.pushError('Werte des Datentyps ' + objectNode.type.identifier + \" besitzen keine Methoden.\", node.position);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | Interface = <any>objectNode.type;\r\n\r\n        let posBeforeParameterEvaluation = this.currentProgram.statements.length;\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n\r\n        let allStatements = this.currentProgram.statements;\r\n        if (node.operands != null) {\r\n            // for (let p of node.operands) {\r\n            for (let j = 0; j < node.operands.length; j++) {\r\n                let p = node.operands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let methods: { error: string, methodList: Method[] };\r\n        if (objectType instanceof Interface) {\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false);\r\n        } else {\r\n            let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false, upToVisibility);\r\n\r\n        }\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, objectType.getMethods(Visibility.private, node.identifier), node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        // You CAN call a static method on a object..., so:\r\n        if (method.isStatic && objectType instanceof Klass && objectType.identifier != \"PrintStream\") {\r\n            this.pushError(\"Es ist kein guter Programmierstil, statische Methoden einer Klasse mithilfe eines Objekts aufzurufen. Besser wäre hier \" + objectType.identifier + \".\" + method.identifier + \"(...).\", node.position, \"info\");\r\n            this.insertStatements(posBeforeParameterEvaluation, [{\r\n                type: TokenType.decreaseStackpointer,\r\n                position: node.position,\r\n                popCount: 1\r\n            },\r\n            {\r\n                type: TokenType.pushStaticClassObject,\r\n                position: node.position,\r\n                klass: objectType\r\n            }\r\n            ]);\r\n        }\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            // Marker 1\r\n            let srcType = parameterTypes[i];\r\n            // for (let st of parameterStatements[i]) {\r\n            //     this.currentProgram.statements.push(st);\r\n            // }\r\n            let programPosition = allStatements.length;\r\n\r\n            if (!this.ensureAutomaticCasting(srcType, destType, node.operands[i].position, node.operands[i])) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.operands[i].position);\r\n            }\r\n\r\n            if (allStatements.length > programPosition) {\r\n                let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n            }\r\n\r\n\r\n            // if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n            //     if (srcType.getCastInformation(destType).needsStatement) {\r\n            //         this.pushStatements({\r\n            //             type: TokenType.castValue,\r\n            //             position: null,\r\n            //             newType: destType,\r\n            //             stackPosRelative: -parameterTypes.length + 1 + i\r\n            //         });\r\n            //     }\r\n            // }\r\n\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        if (method.visibility != Visibility.public) {\r\n\r\n            let visible = true;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext == null) {\r\n                visible = false;\r\n            } else {\r\n                if (classContext != objectType &&\r\n                    !(classContext instanceof Klass && classContext.implements.indexOf(<Interface>objectType) > 0)) {\r\n                    if (method.visibility == Visibility.private) {\r\n                        visible = false;\r\n                    } else {\r\n                        visible = classContext.hasAncestorOrIs(<Klass | StaticClass>objectType);\r\n                    }\r\n                }\r\n            }\r\n            if (!visible) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" ist an dieser Stelle des Programms nicht sichtbar.\", node.position);\r\n            }\r\n        }\r\n\r\n        let isSystemMethod: boolean = false;\r\n        if (method.isStatic && objectNode.type != null &&\r\n            (objectNode.type instanceof StaticClass)) {\r\n            let classIdentifier = objectNode.type.Klass.identifier;\r\n\r\n            switch (classIdentifier) {\r\n                case \"Input\":\r\n                    this.pushStatements({\r\n                        type: TokenType.callInputMethod,\r\n                        method: method,\r\n                        position: node.position,\r\n                        stepFinished: true,\r\n                        stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n                    });\r\n                    isSystemMethod = true;\r\n                    break;\r\n                case \"SystemTools\":\r\n                case \"Robot\":\r\n                    if ([\"pause\", \"warten\"].indexOf(method.identifier) >= 0) {\r\n                        this.pushStatements([{\r\n                            type: TokenType.setPauseDuration,\r\n                            position: node.position,\r\n                            stepFinished: true\r\n                        }, {\r\n                            type: TokenType.pause,\r\n                            position: node.position,\r\n                            stepFinished: true\r\n                        }\r\n                        ]);\r\n                        isSystemMethod = true;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        if (!isSystemMethod) {\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: objectNode.isSuper == null ? false : objectNode.isSuper,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.pushTypePosition(node.rightBracketPosition, method.getReturnType());\r\n\r\n        return { type: method.getReturnType(), isAssignable: false };\r\n\r\n    }\r\n\r\n    pushConstant(node: ConstantNode): StackType {\r\n\r\n        let type: Type;\r\n\r\n        switch (node.constantType) {\r\n            case TokenType.integerConstant:\r\n                type = intPrimitiveType;\r\n                break;\r\n            case TokenType.booleanConstant:\r\n                type = booleanPrimitiveType;\r\n                break;\r\n            case TokenType.floatingPointConstant:\r\n                type = floatPrimitiveType;\r\n                break;\r\n            case TokenType.stringConstant:\r\n                type = stringPrimitiveType;\r\n                this.pushTypePosition(node.position, type);\r\n                break;\r\n            case TokenType.charConstant:\r\n                type = charPrimitiveType;\r\n                break;\r\n            case TokenType.keywordNull:\r\n                type = nullType\r\n                break;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.pushConstant,\r\n            dataType: type,\r\n            position: node.position,\r\n            value: node.constant\r\n        })\r\n\r\n        return { type: type, isAssignable: false };\r\n\r\n    }\r\n\r\n    processBinaryOp(node: BinaryOpNode): StackType {\r\n\r\n        let isAssignment = CodeGenerator.assignmentOperators.indexOf(node.operator) >= 0;\r\n\r\n        if (node.operator == TokenType.ternaryOperator) {\r\n            return this.processTernaryOperator(node);\r\n        }\r\n\r\n        let leftType = this.processNode(node.firstOperand, isAssignment);\r\n\r\n        let programPosAfterLeftOpoerand = this.currentProgram.statements.length;\r\n\r\n        let lazyEvaluationDest = null;\r\n        if (node.operator == TokenType.and) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfFalseAndLeaveOnStack, node.firstOperand.position, this);\r\n        } else if (node.operator == TokenType.or) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfTrueAndLeaveOnStack, node.firstOperand.position, this);\r\n        }\r\n\r\n        let rightType = this.processNode(node.secondOperand);\r\n\r\n        if (leftType == null || leftType.type == null || rightType == null || rightType.type == null) return null;\r\n\r\n        let convertedLeftType = leftType.type;\r\n\r\n        if (isAssignment) {\r\n            if (!this.ensureAutomaticCasting(rightType.type, leftType.type, node.position, node.firstOperand)) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + rightType.type.identifier + \" auf der rechten Seite kann der Variablen auf der linken Seite (Datentyp \" + leftType.type.identifier + \") nicht zugewiesen werden.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n            if (!leftType.isAssignable) {\r\n                this.pushError(\"Dem Term/der Variablen auf der linken Seite des Zuweisungsoperators (=) kann kein Wert zugewiesen werden.\", node.position);\r\n            }\r\n\r\n            let statement: AssignmentStatement = {\r\n                //@ts-ignore\r\n                type: node.operator,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: true\r\n            };\r\n\r\n            this.pushStatements(statement);\r\n\r\n\r\n            return leftType;\r\n\r\n        } else {\r\n\r\n            if (node.firstOperand.type == TokenType.identifier && node.firstOperand.variable != null) {\r\n                let v = node.firstOperand.variable;\r\n                if (v.initialized != null && !v.initialized) {\r\n                    v.usedBeforeInitialization = true;\r\n                    this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                }\r\n            }\r\n\r\n            let resultType = leftType.type.getResultType(node.operator, rightType.type);\r\n\r\n            let unboxableLeft = leftType.type[\"unboxableAs\"];\r\n            let unboxableRight = rightType.type[\"unboxableAs\"];\r\n\r\n\r\n            if (resultType == null && node.operator == TokenType.plus) {\r\n                if (rightType.type == stringPrimitiveType) {\r\n                    if (this.ensureAutomaticToString(leftType.type, programPosAfterLeftOpoerand, node.firstOperand.position)) {\r\n                        resultType = stringPrimitiveType;\r\n                        convertedLeftType = stringPrimitiveType;\r\n                    }\r\n                } else if (leftType.type == stringPrimitiveType) {\r\n                    if (this.ensureAutomaticToString(rightType.type, undefined, node.firstOperand.position)) {\r\n                        resultType = stringPrimitiveType;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (resultType == null && (unboxableLeft != null || unboxableRight != null)) {\r\n                let leftTypes: Type[] = unboxableLeft == null ? [leftType.type] : unboxableLeft;\r\n                let rightTypes: Type[] = unboxableRight == null ? [rightType.type] : unboxableRight;\r\n\r\n                for (let lt of leftTypes) {\r\n                    for (let rt of rightTypes) {\r\n                        resultType = lt.getResultType(node.operator, rt);\r\n                        if (resultType != null) {\r\n                            this.insertStatements(programPosAfterLeftOpoerand, {\r\n                                type: TokenType.castValue,\r\n                                position: node.firstOperand.position,\r\n                                newType: lt\r\n                            });\r\n                            this.pushStatements({\r\n                                type: TokenType.castValue,\r\n                                position: node.secondOperand.position,\r\n                                newType: rt\r\n                            });\r\n                            convertedLeftType = lt;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (resultType != null) break;\r\n                }\r\n            }\r\n\r\n\r\n            if (node.operator in [TokenType.and, TokenType.or]) {\r\n                this.checkIfAssignmentInstedOfEqual(node.firstOperand);\r\n                this.checkIfAssignmentInstedOfEqual(node.secondOperand);\r\n            }\r\n\r\n            if (resultType == null) {\r\n                let bitOperators = [TokenType.ampersand, TokenType.OR];\r\n                let booleanOperators = [\"&& (boolescher UND-Operator)\", \"|| (boolescher ODER-Operator)\"];\r\n                let betterOperators = [\"& &\", \"||\"];\r\n                let opIndex = bitOperators.indexOf(node.operator);\r\n                if (opIndex >= 0 && leftType.type == booleanPrimitiveType && rightType.type == booleanPrimitiveType) {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert. Du meintest wahrscheinlich den Operator \" + booleanOperators[opIndex] + \".\", node.position, \"error\",\r\n                        {\r\n                            title: \"Operator \" + betterOperators[opIndex] + \" verwenden statt \" + TokenTypeReadable[node.operator],\r\n                            editsProvider: (uri) => {\r\n                                return [\r\n                                    {\r\n                                        resource: uri,\r\n                                        edit: {\r\n                                            range: { startLineNumber: node.position.line, startColumn: node.position.column, endLineNumber: node.position.line, endColumn: node.position.column },\r\n                                            text: TokenTypeReadable[node.operator]\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n\r\n                        });\r\n                } else {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert.\", node.position);\r\n                }\r\n                return leftType;\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.binaryOp,\r\n                leftType: convertedLeftType,\r\n                operator: node.operator,\r\n                position: node.position\r\n            });\r\n\r\n            if (lazyEvaluationDest != null) {\r\n                this.currentProgram.labelManager.markJumpDestination(1, lazyEvaluationDest);\r\n            }\r\n\r\n            return { type: resultType, isAssignable: false };\r\n        }\r\n\r\n\r\n    }\r\n\r\n    processTernaryOperator(node: BinaryOpNode): StackType {\r\n\r\n        let leftType = this.processNode(node.firstOperand);\r\n\r\n        if (leftType == null) return;\r\n\r\n        if (this.ensureAutomaticCasting(leftType.type, booleanPrimitiveType, null, node.firstOperand)) {\r\n\r\n            let secondOperand = node.secondOperand;\r\n            if (secondOperand != null) {\r\n                if (secondOperand.type != TokenType.binaryOp || secondOperand.operator != TokenType.colon) {\r\n                    this.pushError(\"Auf den Fragezeichenoperator müssen - mit Doppelpunkt getrennt - zwei Alternativterme folgen.\", node.position);\r\n                } else {\r\n                    let lm = this.currentProgram.labelManager;\r\n                    let variantFalseLabel = lm.insertJumpNode(TokenType.jumpIfFalse, node.position, this);\r\n                    let firstType = this.processNode(secondOperand.firstOperand);\r\n\r\n                    let endLabel = lm.insertJumpNode(TokenType.jumpAlways, secondOperand.firstOperand.position, this);\r\n                    lm.markJumpDestination(1, variantFalseLabel);\r\n                    let secondType = this.processNode(secondOperand.secondOperand);\r\n                    lm.markJumpDestination(1, endLabel);\r\n\r\n                    let type = firstType.type;\r\n                    if (secondType != null && type != secondType.type && type.canCastTo(secondType.type)) {\r\n                        type = secondType.type;\r\n                    }\r\n\r\n                    return {\r\n                        type: type,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processUnaryOp(node: UnaryOpNode): StackType {\r\n        let leftType = this.processNode(node.operand);\r\n\r\n        if (leftType == null || leftType.type == null) return;\r\n\r\n        if (node.operator == TokenType.minus) {\r\n            if (!leftType.type.canCastTo(floatPrimitiveType)) {\r\n                this.pushError(\"Der Operator - ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        if (node.operator == TokenType.not) {\r\n            if (!(leftType.type == booleanPrimitiveType)) {\r\n                this.checkIfAssignmentInstedOfEqual(node.operand);\r\n                this.pushError(\"Der Operator ! ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.unaryOp,\r\n            operator: node.operator,\r\n            position: node.position\r\n        });\r\n\r\n        return leftType;\r\n    }\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Visibility, Klass } from \"../types/Class.js\";\r\nimport { ArrayInitializationNode, ASTNode, AttributeDeclarationNode, MethodDeclarationNode, NewArrayNode, ParameterNode, TermNode, TypeNode, EnumValueNode, SwitchNode, SwitchCaseNode, ConstantNode, BracketsNode, ScopeNode, TypeParameterNode, LocalVariableDeclarationNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, charPrimitiveType, TokenTypeToDataTypeMap, voidPrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { PrimitiveType, Type } from \"../types/Types.js\";\r\n\r\ntype ASTNodes = ASTNode[];\r\n\r\nexport class Parser {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, \r\n        TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.moduloAssignment, \r\n        TokenType.ANDAssigment, TokenType.XORAssigment, TokenType.ORAssigment, \r\n        TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    static operatorPrecedence: TokenType[][] = [Parser.assignmentOperators,\r\n    [TokenType.ternaryOperator], [TokenType.colon],\r\n\r\n    [TokenType.or], [TokenType.and], [TokenType.OR], [TokenType.XOR], [TokenType.ampersand],\r\n    [TokenType.equal, TokenType.notEqual],\r\n    [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual],\r\n    [TokenType.shiftLeft, TokenType.shiftRight, TokenType.shiftRightUnsigned],\r\n\r\n    // [TokenType.or], [TokenType.and],\r\n    // [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual],\r\n    \r\n    [TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo]\r\n    ];\r\n\r\n    static TokenTypeToVisibilityMap = {\r\n        [TokenType.keywordPublic]: Visibility.public,\r\n        [TokenType.keywordPrivate]: Visibility.private,\r\n        [TokenType.keywordProtected]: Visibility.protected\r\n    };\r\n\r\n    static forwardToInsideClass = [TokenType.keywordPublic, TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordVoid,\r\n    TokenType.identifier, TokenType.rightCurlyBracket, TokenType.keywordStatic, TokenType.keywordAbstract,\r\n    TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n    typeNodes: TypeNode[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n\r\n    constructor(private isInConsoleMode: boolean){\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.mainProgramAst = [];\r\n            this.module.classDefinitionsAST = [];\r\n            this.module.typeNodes = [];\r\n            this.module.errors[1] = this.errorList;\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n        this.typeNodes = [];\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        let astNodes = this.parseMain();\r\n        this.module.mainProgramAst = astNodes.mainProgramAST;\r\n        this.module.classDefinitionsAST = astNodes.classDefinitionAST;\r\n        this.module.mainProgramEnd = astNodes.mainProgramEnd;\r\n        this.module.typeNodes = this.typeNodes;\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if(token1.tt == TokenType.comment){\r\n                    this.lastComment = token1;\r\n                } \r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if(this.lastComment != null){\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if(token.tt == TokenType.comment){\r\n                this.lastComment = token;\r\n            } \r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    expect(tt: TokenType, skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt) \r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel && this.errorList.length < 3) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n\r\n            this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[]): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            return this.tt == token;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    static ClassTokens: TokenType[] = [TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n    static VisibilityTokens: TokenType[] = [TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordPublic];\r\n    static BeforeClassDefinitionTokens: TokenType[] = Parser.ClassTokens.concat(Parser.VisibilityTokens).concat(TokenType.keywordAbstract).concat(Parser.ClassTokens);\r\n\r\n    parseMain(): { mainProgramAST: ASTNodes, mainProgramEnd: TextPosition, classDefinitionAST: ASTNodes } {\r\n\r\n        let mainProgram: ASTNodes = [];\r\n        let classDefinitions: ASTNodes = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            if (this.comesToken(Parser.BeforeClassDefinitionTokens)) {\r\n                let cd = this.parseClassDefinition();\r\n                if (cd != null) classDefinitions = classDefinitions.concat(cd);\r\n            } else {\r\n                let st = this.parseStatement();\r\n\r\n                if (st != null) {\r\n                    mainProgram = mainProgram.concat(st);\r\n                }\r\n                mainProgramEnd = this.getCurrentPosition();\r\n            }\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                this.pos++;\r\n                this.initializeLookahead();\r\n            }\r\n\r\n        }\r\n\r\n        return {\r\n            mainProgramAST: mainProgram,\r\n            classDefinitionAST: classDefinitions,\r\n            mainProgramEnd: mainProgramEnd\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkIfStatementHasNoEffekt(st: ASTNode) {\r\n        \r\n        if(this.isInConsoleMode) return;\r\n\r\n        if ((st.type == TokenType.binaryOp && Parser.assignmentOperators.indexOf(st.operator) < 0)) {\r\n            let s = \"dieses Terms\";\r\n            switch (st.operator) {\r\n                case TokenType.plus: s = \"dieser Summe\"; break;\r\n                case TokenType.minus: s = \"dieser Differenz\"; break;\r\n                case TokenType.multiplication: s = \"dieses Produkts\"; break;\r\n                case TokenType.division: s = \"dieses Quotienten\"; break;\r\n            }\r\n            s += \" (Operator \" + TokenTypeReadable[st.operator] + \")\"\r\n            this.pushError(`Der Wert ${s} wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?`,\r\n                \"info\", st.position);\r\n        } else if (\r\n            [TokenType.unaryOp, TokenType.pushConstant,\r\n            TokenType.identifier, TokenType.selectArrayElement].indexOf(st.type) >= 0) {\r\n            this.pushError(\"Der Wert dieses Terms wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?\",\r\n                \"info\", st.position);\r\n        }\r\n    }\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode[] {\r\n\r\n        let retStatements: ASTNode[] = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n            case TokenType.identifier:\r\n            case TokenType.keywordThis:\r\n            case TokenType.keywordSuper:\r\n            case TokenType.keywordFinal:\r\n            case TokenType.charConstant:\r\n            case TokenType.integerConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.keywordNew:\r\n                let ret = this.parseVariableDeclarationOrTerm();\r\n                if (expectSemicolon) this.expect(TokenType.semicolon, true, true);\r\n                retStatements = ret;\r\n                break;\r\n            case TokenType.leftCurlyBracket:\r\n                let statements: ASTNode[] = [];\r\n                let positionFrom = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && Parser.BeforeClassDefinitionTokens.indexOf(this.tt) < 0) {\r\n                    statements = statements.concat(this.parseStatement());\r\n                }\r\n                let positionTo = this.getCurrentPosition();\r\n                positionTo.column = positionTo.column + positionTo.length;\r\n                positionTo.length = 0;\r\n                this.expect(TokenType.rightCurlyBracket);\r\n\r\n                retStatements = [{\r\n                    type: TokenType.scopeNode,\r\n                    position: positionFrom,\r\n                    positionTo: positionTo,\r\n                    statements: statements\r\n                }];\r\n                break;\r\n\r\n            case TokenType.keywordWhile:\r\n                retStatements = this.parseWhile();\r\n                break;\r\n            case TokenType.keywordFor:\r\n                retStatements = this.parseFor();\r\n                break;\r\n            case TokenType.keywordDo:\r\n                retStatements = this.parseDo();\r\n                break;\r\n            case TokenType.keywordIf:\r\n                retStatements = this.parseIf();\r\n                break;\r\n            case TokenType.keywordReturn:\r\n                retStatements = this.parseReturn();\r\n                break;\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                retStatements = this.parsePrint();\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                retStatements = this.parseSwitch();\r\n                break;\r\n            case TokenType.keywordBreak:\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordBreak,\r\n                    position: position\r\n                }];\r\n                break;\r\n            case TokenType.keywordContinue:\r\n                let position1 = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordContinue,\r\n                    position: position1\r\n                }];\r\n                break;\r\n            case TokenType.semicolon:\r\n                break;\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n\r\n                let dontSkip = Parser.BeforeClassDefinitionTokens.indexOf(this.tt) >= 0;\r\n                if (!dontSkip) {\r\n                    this.nextToken();\r\n                }\r\n                break;\r\n        }\r\n\r\n        if(retStatements == null){\r\n            // skip additional semicolons if present...\r\n            while (this.tt == TokenType.semicolon && expectSemicolon) {\r\n                this.nextToken();\r\n            }\r\n        }\r\n\r\n        if(retStatements != null && retStatements.length > 0){\r\n            let retStmt = retStatements[retStatements.length - 1];\r\n            if(retStmt != null){\r\n                this.checkIfStatementHasNoEffekt(retStatements[retStatements.length - 1]);\r\n            } else {\r\n                retStatements = null;\r\n            }\r\n        }\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseReturn(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        let term: TermNode;\r\n\r\n        if (!(this.tt == TokenType.semicolon)) {\r\n            term = this.parseTerm();\r\n            this.expect(TokenType.semicolon, true, true);\r\n        }\r\n\r\n        return [{\r\n            type: TokenType.keywordReturn,\r\n            position: position,\r\n            term: term\r\n        }];\r\n\r\n    }\r\n\r\n    parseWhile(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume while\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition  = this.getCurrentPosition();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"while\", rightBracketPosition);\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese while-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordWhile,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseFor(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let semicolonPositions: TextPosition[] = [];\r\n\r\n        this.nextToken(); // consume for\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            if (this.ct[2].tt == TokenType.colon) {\r\n                return this.parseForLoopOverCollection(position, scopeFrom);\r\n            }\r\n\r\n            let statementsBefore = this.parseStatement(false);\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon);\r\n            let condition = this.parseTerm();\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon, true);\r\n            let statementsAfter = this.parseStatement(false);\r\n\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            this.module.pushMethodCallPosition(position, semicolonPositions, \"for\", rightBracketPosition);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            if (condition == null) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordFor,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statementsBefore: statementsBefore,\r\n                    statementsAfter: statementsAfter,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseForLoopOverCollection(position: TextPosition, scopeFrom: TextPosition): ASTNode[] {\r\n\r\n        let variableType = this.parseType();\r\n\r\n        let variableIdentifier = <string>this.cct.value;\r\n        let variableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        this.expect(TokenType.colon, true);\r\n\r\n        let collection = this.parseTerm();\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n        }\r\n\r\n        let statements = this.parseStatement();\r\n        let scopeTo = this.getCurrentPosition();\r\n        scopeTo.length = 0;\r\n\r\n        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n            scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n        }\r\n\r\n        if (collection == null || variableType == null || statements == null) return [];\r\n\r\n        return [\r\n            {\r\n                type: TokenType.forLoopOverCollection,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                variableIdentifier: variableIdentifier,\r\n                variableType: variableType,\r\n                variablePosition: variableIdentifierPosition,\r\n                collection: collection,\r\n                statements: statements\r\n            }\r\n        ];\r\n\r\n    }\r\n\r\n    parsePrint(): ASTNode[] {\r\n\r\n        let tt = this.tt;\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.leftBracket, false)) {\r\n            let mcp = this.parseMethodCallParameters();\r\n            let paramenters = mcp.nodes;\r\n            if (paramenters.length > 2) {\r\n                this.pushError(\"Die Methoden print und println haben maximal zwei Parameter.\", \"error\", position);\r\n            }\r\n\r\n            this.expect(TokenType.semicolon, true, true);\r\n\r\n            return [{\r\n                //@ts-ignore\r\n                type: tt,\r\n                position: position,\r\n                text: paramenters.length == 0 ? null : paramenters[0],\r\n                color: paramenters.length <= 1 ? null : paramenters[1],\r\n                commaPositions: mcp.commaPositions,\r\n                rightBracketPosition: mcp.rightBracketPosition\r\n            }];\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseSwitch(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            let switchTerm = this.parseTerm();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"switch\", this.getCurrentPosition());\r\n\r\n            this.expect(TokenType.rightBracket);\r\n            let scopeFrom = this.getCurrentPosition();\r\n\r\n            this.expect(TokenType.leftCurlyBracket, true);\r\n\r\n            let switchNode: SwitchNode = {\r\n                type: TokenType.keywordSwitch,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: null,\r\n                condition: switchTerm,\r\n                caseNodes: []\r\n            }\r\n\r\n            let defaultAlreadyThere = false;\r\n\r\n            while (this.tt == TokenType.keywordCase || this.tt == TokenType.keywordDefault) {\r\n                let casePosition = this.getCurrentPosition();\r\n\r\n                let isDefault = this.tt == TokenType.keywordDefault;\r\n                if (isDefault) {\r\n                    if (defaultAlreadyThere) {\r\n                        this.pushError(\"Eine switch-Anweisung darf nur maximal einen default-Zweig haben.\", \"error\", casePosition);\r\n                    } else {\r\n                        defaultAlreadyThere = true;\r\n                    }\r\n                }\r\n\r\n                this.nextToken();\r\n\r\n                let caseTerm = null;\r\n                if (!isDefault) {\r\n                    caseTerm = this.parseUnary();\r\n                }\r\n\r\n                this.expect(TokenType.colon, true);\r\n\r\n                let statements: ASTNode[] = [];\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && this.tt != TokenType.keywordCase && this.tt != TokenType.keywordDefault\r\n                ) {\r\n                    let oldPos = this.pos;\r\n                    let statement = this.parseStatement();\r\n                    if (statement != null) {\r\n                        statements = statements.concat(statement);\r\n                    }\r\n                    if(oldPos == this.pos){\r\n                        this.pushError(this.cct.value + \" wird hier nicht erwartet.\");\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                let switchCaseNode: SwitchCaseNode = {\r\n                    type: TokenType.keywordCase,\r\n                    position: casePosition,\r\n                    caseTerm: caseTerm,\r\n                    statements: statements\r\n                }\r\n\r\n                switchNode.caseNodes.push(switchCaseNode);\r\n\r\n            }\r\n\r\n            switchNode.scopeTo = this.getEndOfCurrentToken();\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n            return [switchNode];\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseIf(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume if\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.module.pushMethodCallPosition(position, [], \"if\", rightBracketPosition);\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Falls die Bedingung zutrifft, wird nur der Strichpunkt ausgeführt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n            let statements = this.parseStatement();\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let elseStatements: ASTNode[] = null;\r\n\r\n            if (this.comesToken(TokenType.keywordElse)) {\r\n                this.nextToken();\r\n                elseStatements = this.parseStatement();\r\n            }\r\n\r\n            if (condition == null && this.errorList.length == 0) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordIf,\r\n                    position: position,\r\n                    condition: condition,\r\n                    statementsIfTrue: statements,\r\n                    statementsIfFalse: elseStatements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseDo(): ASTNode[] {\r\n\r\n        // let i = 10;\r\n        // do {\r\n        //     i = i +7;\r\n        // } while (i < 100);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        this.nextToken(); // consume do\r\n        let statements = this.parseStatement();\r\n\r\n        if (this.expect(TokenType.keywordWhile, true)) {\r\n            if (this.expect(TokenType.leftBracket, true)) {\r\n                let condition = this.parseTerm();\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n\r\n                this.expect(TokenType.rightBracket, true);\r\n\r\n                return [\r\n                    {\r\n                        type: TokenType.keywordDo,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        condition: condition,\r\n                        statements: statements\r\n                    }\r\n                ];\r\n\r\n            }\r\n        }\r\n        return [];\r\n\r\n    }\r\n\r\n    comesGenericType(): boolean {\r\n        if (this.ct[1].tt != TokenType.lower) return false;\r\n        if (this.ct[2].tt != TokenType.identifier) return false;\r\n        return this.ct[3].tt == TokenType.greater || this.ct[3].tt == TokenType.comma;\r\n\r\n    }\r\n\r\n    parseVariableDeclarationOrTerm(): ASTNode[] {\r\n\r\n        // Two identifiers in a row or identifier[]\r\n        if (\r\n            (this.tt == TokenType.identifier || this.tt == TokenType.keywordFinal) &&\r\n            (this.ct[1].tt == TokenType.identifier\r\n                || this.ct[1].tt == TokenType.leftRightSquareBracket ||\r\n                this.comesGenericType() \r\n            )\r\n        ) {\r\n            let ret: ASTNode[] = [];\r\n            let type: TypeNode = null;\r\n            do {\r\n                if (type != null) this.expect(TokenType.comma, true);\r\n                let vd = this.parseVariableDeclaration(type);\r\n                ret.push(vd);\r\n                type = vd?.variableType;\r\n                //@ts-ignore\r\n            } while (this.tt == TokenType.comma);\r\n\r\n            return ret;\r\n        } else {\r\n            return [this.parseTerm()];\r\n        }\r\n\r\n    }\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parsePlusPlusMinusMinus();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        // 28.05.2021: This broke evalation of ternery operator, so i commented it out.\r\n        // Don't know why it was there in the first place, so i expect some havoc to come...\r\n        // 15 Minutes later:\r\n        // This if-clause was here to make terms aber case possible, e.g. switch(a){ case 7 + 2: println(\"Here!\")}\r\n        // -> Bad idea. I changed this to only parse unary Terms left of the colon so i can comment out this if-clause here\r\n        // and fix the ternary operator.\r\n        //\r\n        // if (this.tt == TokenType.colon) {\r\n        //     return left;\r\n        // }\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n\r\n            for (let opData of [{ op: TokenType.lower, wrong: \"=<\", right: \"<=\", correctOp: TokenType.lowerOrEqual }, \r\n                                { op: TokenType.greater, wrong: \"=>\", right: \">=\", correctOp: TokenType.greaterOrEqual }]) {\r\n                if (operator == TokenType.assignment && this.tt == opData.op) {\r\n                    let position2 = this.getCurrentPosition();\r\n                    this.pushError(`Den Operator ${opData.wrong} gibt es nicht. Du meintest sicher: ${opData.right}`, \"error\",\r\n                        Object.assign({}, position, { length: 2 }), {\r\n                        title: `${opData.wrong} durch ${opData.right} ersetzen`,\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position2.column + position2.length },\r\n                                        text: opData.right\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    });\r\n                    this.nextToken();\r\n                    operator = opData.correctOp;\r\n                }\r\n            }\r\n\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parsePlusPlusMinusMinus();\r\n            }\r\n\r\n            if (right != null) {\r\n\r\n                let constantFolding = false;\r\n                if (this.isConstant(left) && this.isConstant(right)) {\r\n                    let pcLeft = <ConstantNode>left;\r\n                    let pcRight = <ConstantNode>right;\r\n                    let typeLeft = TokenTypeToDataTypeMap[pcLeft.constantType];\r\n                    let typeRight = TokenTypeToDataTypeMap[pcRight.constantType];\r\n                    let resultType = typeLeft.getResultType(operator, typeRight);\r\n                    if (resultType != null) {\r\n                        constantFolding = true;\r\n                        let result = typeLeft.compute(operator, { type: typeLeft, value: pcLeft.constant },\r\n                            { type: typeRight, value: pcRight.constant });\r\n\r\n                        this.considerIntDivisionWarning(operator, typeLeft, pcLeft.constant, typeRight, pcRight.constant, position);\r\n\r\n                        pcLeft.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcLeft.constant = result;\r\n                        pcLeft.position.length = pcRight.position.column + pcRight.position.length - pcLeft.position.column;\r\n                    }\r\n                }\r\n\r\n                if (!constantFolding)\r\n                    left = {\r\n                        type: TokenType.binaryOp,\r\n                        position: position,\r\n                        operator: operator,\r\n                        firstOperand: left,\r\n                        secondOperand: right\r\n                    };\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n    considerIntDivisionWarning(operator: TokenType, typeLeft: Type, leftConstant: any, typeRight: Type, rightConstant: any, position: TextPosition) {\r\n    \r\n        if(operator == TokenType.division){\r\n            if(this.isIntegerType(typeLeft) && this.isIntegerType(typeRight)){\r\n                if(rightConstant != 0 && leftConstant/rightConstant != Math.floor(leftConstant/rightConstant)){\r\n                    this.pushError(\"Da \" + leftConstant + \" und \" + rightConstant + \" ganzzahlige Werte sind, wird diese Division als Ganzzahldivision ausgeführt und ergibt den Wert \" + Math.floor(leftConstant/rightConstant) + \". Falls das nicht gewünscht ist, hänge '.0' an einen der Operanden.\", \"info\", position);\r\n                }\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n    isIntegerType(type: Type): boolean {\r\n        return type == intPrimitiveType;\r\n    }\r\n\r\n    isConstant(node: TermNode) {\r\n\r\n        return (node != null && node.type == TokenType.pushConstant);\r\n\r\n    }\r\n\r\n    parsePlusPlusMinusMinus(): TermNode {\r\n\r\n        let incrementDecrementBefore: TokenType = null;\r\n        let position = null;\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            incrementDecrementBefore = this.tt;\r\n            position = this.getCurrentPosition();\r\n            this.nextToken();\r\n        }\r\n\r\n        let t: TermNode = this.parseUnary();\r\n\r\n        if (incrementDecrementBefore != null) {\r\n            t = {\r\n                type: TokenType.incrementDecrementBefore,\r\n                position: position,\r\n                operator: incrementDecrementBefore,\r\n                operand: t\r\n            }\r\n        }\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            t = {\r\n                type: TokenType.incrementDecrementAfter,\r\n                position: this.getCurrentPosition(),\r\n                operator: this.tt,\r\n                operand: t\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return t;\r\n\r\n    }\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseDotOrArrayChains(this.bracketOrCasting());\r\n            case TokenType.minus:\r\n            case TokenType.not:\r\n            case TokenType.tilde:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                if (this.isConstant(term)) {\r\n                    let pcTerm = <ConstantNode>term;\r\n                    let typeTerm = TokenTypeToDataTypeMap[pcTerm.constantType];\r\n                    let resultType = typeTerm.getResultType(tt1);\r\n                    if (resultType != null) {\r\n                        let result = typeTerm.compute(tt1, { type: typeTerm, value: pcTerm.constant });\r\n                        pcTerm.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcTerm.constant = result;\r\n                        position.length = pcTerm.position.column - position.column + 1;\r\n                        return pcTerm;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n            case TokenType.keywordSuper:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.superConstructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordSuper,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordThis:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.constructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordThis,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordNew:\r\n                return this.parseDotOrArrayChains(this.parseNew());\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.keywordNull:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.keywordNull,\r\n                    constant: null\r\n                };\r\n                this.nextToken();\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                }\r\n\r\n                return this.parseDotOrArrayChains(term);\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder this oder super. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    tokensNotAfterCasting: TokenType[] = [TokenType.multiplication, TokenType.division, TokenType.plus,\r\n    TokenType.minus, TokenType.dot, TokenType.modulo, TokenType.semicolon, TokenType.rightBracket];\r\n\r\n    bracketOrCasting(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.identifier && this.ct[1].tt == TokenType.rightBracket &&\r\n            this.tokensNotAfterCasting.indexOf(this.ct[2].tt) < 0) {\r\n\r\n            let castToType = this.parseType();\r\n            let position1 = this.getCurrentPosition(); // Position of )\r\n            position.length = position1.column - position.column + 1;\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let whatToCast = this.parsePlusPlusMinusMinus();\r\n\r\n            return {\r\n                type: TokenType.castValue,\r\n                position: position,\r\n                castToType: castToType,\r\n                whatToCast: whatToCast\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.isConstant(term)) {\r\n                return term;\r\n            }\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseNew(): TermNode {\r\n\r\n        this.nextToken();\r\n        let position = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            let identifier = <string>this.cct.value;\r\n            let identifierPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n\r\n            let genericParameterTypes: TypeNode[] = null;\r\n\r\n            if (this.tt == TokenType.lower) {\r\n\r\n                genericParameterTypes = [];\r\n                let first: boolean = true;\r\n                this.nextToken();\r\n\r\n                //@ts-ignore\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                    if (!first) this.nextToken(); // consume comma\r\n\r\n                    first = false;\r\n\r\n                    genericParameterTypes.push(this.parseType());\r\n\r\n                }\r\n\r\n                this.expect(TokenType.greater);\r\n                if (genericParameterTypes.length == 0) genericParameterTypes = null;\r\n            }\r\n\r\n            if (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n\r\n                let typenode: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: position,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n                this.typeNodes.push(typenode);\r\n\r\n                let elementCount: TermNode[] = [];\r\n\r\n                while (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n                    typenode.arrayDimension++;\r\n\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.leftRightSquareBracket) {\r\n                        elementCount.push(null);\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.nextToken();\r\n                        elementCount.push(this.parseTerm());\r\n                        this.expect(TokenType.rightSquareBracket, true);\r\n                    }\r\n\r\n                }\r\n\r\n                let initialization = null;\r\n\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    initialization = this.parseArrayLiteral(typenode);\r\n                }\r\n\r\n                let newArrayNode: NewArrayNode = {\r\n                    type: TokenType.newArray,\r\n                    position: position,\r\n                    arrayType: typenode,\r\n                    elementCount: elementCount,\r\n                    initialization: initialization\r\n                }\r\n\r\n                return newArrayNode;\r\n\r\n\r\n            } else if (this.tt == TokenType.leftBracket) {\r\n                let parameters = this.parseMethodCallParameters();\r\n\r\n                let classType: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: identifierPosition,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n\r\n                this.typeNodes.push(classType);\r\n\r\n                return {\r\n                    type: TokenType.newObject,\r\n                    position: position,\r\n                    classType: classType,\r\n                    constructorOperands: parameters.nodes,\r\n                    rightBracketPosition: parameters.rightBracketPosition,\r\n                    commaPositions: parameters.commaPositions\r\n                }\r\n            } else {\r\n                this.pushError(\"Konstruktoraufruf (also runde Klammer auf) oder Array-Intanzierung (eckige Klammer auf) erwartet.\", \"error\", this.getCurrentPosition());\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseArrayLiteral(arrayType: TypeNode): ArrayInitializationNode {\r\n        // expects { as next token\r\n\r\n        let nodes: (ArrayInitializationNode | TermNode)[] = [];\r\n        let position = this.getCurrentPosition();\r\n        let dimension = null;\r\n\r\n        this.expect(TokenType.leftCurlyBracket, true);\r\n        if (this.tt != TokenType.rightCurlyBracket) {\r\n\r\n            let first = true;\r\n            while (first || this.tt == TokenType.comma) {\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                let newDimension: number;\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    let newType: TypeNode = {\r\n                        type: TokenType.type,\r\n                        position: this.getCurrentPosition(),\r\n                        arrayDimension: arrayType.arrayDimension - 1,\r\n                        identifier: arrayType.identifier\r\n                    }\r\n                    this.typeNodes.push(newType);\r\n                    let al = this.parseArrayLiteral(newType);\r\n                    newDimension = al.dimension + 1;\r\n                    nodes.push(al);\r\n                } else {\r\n                    nodes.push(this.parseTerm());\r\n                    newDimension = 1;\r\n                }\r\n\r\n                if (dimension != null) {\r\n                    if (dimension != newDimension) {\r\n                        this.pushError(\"Die Dimension dieses Array-Literals (\" + (newDimension - 1) + \" ist ungleich derjenigen der vorangegangenen Array-Literale (\" + (dimension - 1) + \").\", \"error\", position1);\r\n                    }\r\n                }\r\n                dimension = newDimension;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n        let ain: ArrayInitializationNode = {\r\n            type: TokenType.arrayInitialization,\r\n            position: position,\r\n            arrayType: arrayType,\r\n            dimension: dimension,\r\n            nodes: nodes\r\n        }\r\n\r\n        return ain;\r\n\r\n    }\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            let parameter = this.parseTerm();\r\n            if (parameter != null) {\r\n                parameters.push(parameter);\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.pushAttribute,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        object: term\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // let position = this.getCurrentPosition();\r\n                let position = term.position;\r\n                this.nextToken();\r\n                let index = this.parseTerm();\r\n                let positionEnd = this.getCurrentPosition();\r\n                let position1: TextPosition = Object.assign({}, position);\r\n                this.expect(TokenType.rightSquareBracket, true);\r\n                if (positionEnd.line == position.line) {\r\n                    position1.length = positionEnd.column + positionEnd.length - position1.column;\r\n                } else {\r\n                    position1 = positionEnd;\r\n                }\r\n                term = {\r\n                    type: TokenType.selectArrayElement,\r\n                    position: position1,\r\n                    index: index,\r\n                    object: term\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n    parseVariableDeclaration(type: TypeNode): LocalVariableDeclarationNode {\r\n\r\n        let isFinal = false;\r\n        if (this.tt == TokenType.keywordFinal) {\r\n            isFinal = true;\r\n            this.nextToken();\r\n        }\r\n\r\n        if (type == null) {\r\n            type = this.parseType();\r\n        }\r\n\r\n        if(this.tt != TokenType.identifier){\r\n            this.pushError(\"Hier wird ein Bezeichner (Name) einer Variable erwartet.\", \"error\", this.getCurrentPosition());\r\n            return null;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let initialization: TermNode = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.assignment) {\r\n            this.nextToken();\r\n            //@ts-ignore\r\n            if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                initialization = this.parseArrayLiteral(type);\r\n            } else {\r\n                initialization = this.parseTerm();\r\n            }\r\n        }\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.endofSourcecode && type == null && identifier == null) return null;\r\n\r\n        return {\r\n            type: TokenType.localVariableDeclaration,\r\n            position: position,\r\n            identifier: identifier,\r\n            variableType: type,\r\n            initialization: initialization,\r\n            isFinal: isFinal\r\n        }\r\n\r\n    }\r\n\r\n    parseType(): TypeNode {\r\n\r\n        /**\r\n         * e.g. int, int[][], Integer, ArrayList<Integer> ,HashMap<Integer, ArrayList<String>>[][]\r\n         */\r\n\r\n\r\n        if(this.tt != TokenType.identifier && this.tt != TokenType.keywordVoid){\r\n            this.pushError(\"Erwartet wird ein Datentyp. Dieser muss mit einem Bezeichner beginnen. Gefunden wurde: \" + this.cct.value, \"error\", this.getCurrentPosition());\r\n                this.nextToken();\r\n            return {\r\n                type: TokenType.type,\r\n                position: this.getCurrentPosition(),\r\n                arrayDimension: 0,\r\n                identifier: \"int\",\r\n                genericParameterTypes: []\r\n            };\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let genericParameterTypes: TypeNode[] = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.lower) {\r\n\r\n            genericParameterTypes = [];\r\n            let first: boolean = true;\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                if (!first) this.nextToken(); // consume comma\r\n\r\n                first = false;\r\n\r\n                genericParameterTypes.push(this.parseType());\r\n\r\n            }\r\n\r\n            this.expect(TokenType.greater);\r\n\r\n        }\r\n\r\n        let arrayDimension = 0;\r\n        //@ts-ignore\r\n        while (this.tt == TokenType.leftRightSquareBracket) {\r\n            arrayDimension++;\r\n            position.length += 2;\r\n            this.nextToken();\r\n        }\r\n\r\n        let typenode: TypeNode = {\r\n            type: TokenType.type,\r\n            position: position,\r\n            arrayDimension: arrayDimension,\r\n            identifier: identifier,\r\n            genericParameterTypes: genericParameterTypes\r\n        }\r\n\r\n        this.typeNodes.push(typenode);\r\n\r\n        return typenode;\r\n\r\n    }\r\n\r\n\r\n    parseClassDefinition(): ASTNode {\r\n\r\n        let commentBefore = this.cct.commentBefore;\r\n        let modifiers = this.collectModifiers();\r\n\r\n        if (!this.comesToken(Parser.ClassTokens)) {\r\n            this.pushError(\"Erwartet wird class, interface oder enum. Gefunden wurde: \" + this.cct.value);\r\n            return null;\r\n        }\r\n\r\n        let classType = this.tt;\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n\r\n            let identifier = <string>this.cct.value;\r\n            let position = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n            let typeParameters: TypeParameterNode[] = [];\r\n            // For Generics: parse expression like <E, F extends Test implements Comparable<Test>>\r\n            if (this.tt == TokenType.lower) {\r\n                typeParameters = this.parseTypeParameterDefinition();\r\n            }\r\n\r\n            let extendsImplements = this.parseExtendsImplements(classType == TokenType.keywordInterface);\r\n\r\n            if (classType == TokenType.keywordEnum) {\r\n                return this.parseEnum(identifier, extendsImplements, position, modifiers.visibility, commentBefore);\r\n            }\r\n\r\n            let scopeFrom = this.getCurrentPosition();\r\n            if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n                let methodsAndAttributes = this.parseClassBody(classType, identifier);\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n                this.expect(TokenType.rightCurlyBracket, true);\r\n                switch (classType) {\r\n\r\n                    case TokenType.keywordClass: return {\r\n                        type: TokenType.keywordClass,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        identifier: identifier,\r\n                        attributes: methodsAndAttributes.attributes,\r\n                        methods: methodsAndAttributes.methods,\r\n                        isAbstract: modifiers.isAbstract,\r\n                        visibility: modifiers.visibility,\r\n                        extends: extendsImplements.extends,\r\n                        implements: extendsImplements.implements,\r\n                        typeParameters: typeParameters,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                    case TokenType.keywordInterface: return {\r\n                        type: TokenType.keywordInterface,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        methods: methodsAndAttributes.methods,\r\n                        typeParameters: typeParameters,\r\n                        extends: extendsImplements.implements,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseTypeParameterDefinition(): TypeParameterNode[] {\r\n\r\n        let typeParameters: TypeParameterNode[] = [];\r\n\r\n        let identifierMap = {};\r\n\r\n        this.expect(TokenType.lower, true);\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n            if (!first) this.expect(TokenType.comma, true);\r\n\r\n            let tp: TypeParameterNode = {\r\n                type: TokenType.typeParameter,\r\n                position: this.getCurrentPosition(),\r\n                identifier: <string>this.cct.value,\r\n                extends: null,\r\n                implements: null\r\n            };\r\n\r\n            if (identifierMap[tp.identifier] != null) {\r\n                this.pushError(\"Zwei Typparameter dürfe nicht denselben Bezeichner tragen.\");\r\n            }\r\n\r\n            identifierMap[tp.identifier] = true;\r\n\r\n            this.nextToken();\r\n\r\n            let extendsImplements = this.parseTypeParameterBounds();\r\n\r\n            tp.extends = extendsImplements.extends;\r\n\r\n            if (tp.extends != null && tp.extends.arrayDimension > 0) {\r\n                this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n            }\r\n\r\n            tp.implements = extendsImplements.implements;\r\n\r\n            tp.implements.forEach((im) => {\r\n                if (im.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n                }\r\n            });\r\n\r\n            first = false;\r\n\r\n            typeParameters.push(tp);\r\n\r\n        }\r\n\r\n        this.expect(TokenType.greater, true);\r\n\r\n        return typeParameters;\r\n    }\r\n\r\n    parseEnum(identifier: string, extendsImplements: {\r\n        extends: TypeNode;\r\n        implements: TypeNode[];\r\n    }, position: TextPosition, visibility: Visibility, commentBefore: Token): ASTNode {\r\n\r\n        if (extendsImplements.extends != null) {\r\n            this.pushError(\"Ein enum kann nicht mit extends erweitert werden.\");\r\n        }\r\n        if (extendsImplements.implements.length > 0) {\r\n            this.pushError(\"Ein enum kann kein Interface implementieren.\");\r\n        }\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n            let values: EnumValueNode[] = this.parseEnumValues();\r\n\r\n            let methodsAndAttributes = this.parseClassBody(TokenType.keywordEnum, identifier);\r\n\r\n            let scopeTo = this.getEndOfCurrentToken();\r\n\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n\r\n            return {\r\n                type: TokenType.keywordEnum,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                attributes: methodsAndAttributes.attributes,\r\n                methods: methodsAndAttributes.methods,\r\n                identifier: identifier,\r\n                values: values,\r\n                visibility: visibility,\r\n                commentBefore: commentBefore\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseEnumValues(): EnumValueNode[] {\r\n\r\n        let values: EnumValueNode[] = [];\r\n\r\n        let pos: number = 0;\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || this.tt == TokenType.comma) {\r\n            pos = this.pos;\r\n            if (!first) this.nextToken(); // skip comma\r\n            first = false;\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                let constructorParameters: TermNode[] = null;\r\n\r\n                let commaPositions: TextPosition[] = [];\r\n                let rightBracketPosition: TextPosition = null;\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let mcp = this.parseMethodCallParameters();\r\n                    constructorParameters = mcp.nodes;\r\n                    commaPositions = mcp.commaPositions;\r\n                    rightBracketPosition = mcp.rightBracketPosition;\r\n                }\r\n\r\n                values.push({\r\n                    type: TokenType.pushEnumValue,\r\n                    constructorParameters: constructorParameters,\r\n                    identifier: identifier,\r\n                    position: position,\r\n                    commaPositions: commaPositions,\r\n                    rightBracketPosition: rightBracketPosition\r\n                });\r\n\r\n            };\r\n\r\n            if (this.pos == pos) {\r\n                this.nextToken(); // in case of parsing-emergency\r\n            }\r\n        }\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return values;\r\n\r\n    }\r\n\r\n    parseClassBody(classType: TokenType, className: string): { methods: MethodDeclarationNode[], attributes: AttributeDeclarationNode[] } {\r\n\r\n        // Assumption: { is already consumed\r\n\r\n        let methods: MethodDeclarationNode[] = [];\r\n        let attributes: AttributeDeclarationNode[] = [];\r\n\r\n        while (true) {\r\n\r\n            if (this.tt == TokenType.rightCurlyBracket || this.tt == TokenType.endofSourcecode) {\r\n                break;\r\n            }\r\n\r\n            let commentBefore: Token = this.cct.commentBefore;\r\n\r\n            let annotation = null;\r\n            if(this.tt == TokenType.at){\r\n                annotation = this.cct.value;\r\n                this.nextToken();\r\n            }\r\n            let modifiers = this.collectModifiers();\r\n\r\n            let isConstructor = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            if (this.tt == TokenType.identifier && <string>this.cct.value == className && this.ct[1].tt == TokenType.leftBracket) {\r\n                isConstructor = true;\r\n            }\r\n\r\n            let type = this.parseType();\r\n\r\n            if(isConstructor) {\r\n                type = {\r\n                    identifier: \"void\",\r\n                    arrayDimension: 0,\r\n                    position: type.position,\r\n                    type: TokenType.type\r\n                }\r\n            }\r\n\r\n            if (isConstructor || this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = className;\r\n\r\n                if (!isConstructor) {\r\n                    position = this.getCurrentPosition();\r\n\r\n                    identifier = <string>this.cct.value;\r\n                    this.nextToken();\r\n                }\r\n\r\n                if (this.tt == TokenType.leftBracket) {\r\n\r\n                    if (isConstructor && classType == TokenType.keywordEnum && modifiers.visibility != Visibility.private) {\r\n                        this.pushError(\"Konstruktoren in enums müssen private sein.\", \"error\", position);\r\n                    }\r\n\r\n                    let parameters: ParameterNode[] = this.parseMethodDeclarationParameters();\r\n\r\n                    let statements: ASTNode[];\r\n                    let scopeFrom: TextPosition = this.getCurrentPosition();\r\n                    let scopeTo: TextPosition = scopeFrom;\r\n\r\n                    if (modifiers.isAbstract) {\r\n                        this.expect(TokenType.semicolon, true);\r\n                        if (isConstructor) {\r\n                            this.pushError(\"Ein Konstruktor kann nicht abstrakt sein.\", \"error\", position);\r\n                        }\r\n                        statements = [];\r\n                    } else {\r\n                        scopeFrom = this.getCurrentPosition();\r\n                        statements = this.parseStatement();\r\n                        scopeTo = this.getEndOfCurrentToken();\r\n                        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                            let scopeNode = <ScopeNode>statements[0];\r\n                            scopeFrom = scopeNode.position;\r\n                            scopeTo = scopeNode.positionTo;\r\n                        }\r\n\r\n                    }\r\n\r\n                    methods.push({\r\n                        type: TokenType.methodDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        parameters: parameters,\r\n                        statements: statements,\r\n                        visibility: modifiers.visibility,\r\n                        isAbstract: modifiers.isAbstract || classType == TokenType.keywordInterface,\r\n                        isStatic: modifiers.isStatic,\r\n                        isConstructor: isConstructor,\r\n                        returnType: type,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                } else {\r\n\r\n                    if (identifier == className) {\r\n                        this.pushError(\"Das Attribut \" + className + \" darf nicht denselben Bezeichner haben wie die Klasse.\", \"error\", position);\r\n                    }\r\n\r\n                    let initialization: TermNode = null;\r\n\r\n                    if (this.tt == TokenType.assignment) {\r\n                        this.nextToken();\r\n                        //@ts-ignore\r\n                        if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                            initialization = this.parseArrayLiteral(type);\r\n                        } else {\r\n                            initialization = this.parseTerm();\r\n                        }\r\n                    }\r\n\r\n                    this.expect(TokenType.semicolon);\r\n\r\n                    attributes.push({\r\n                        type: TokenType.attributeDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        attributeType: type,\r\n                        isStatic: modifiers.isStatic,\r\n                        isFinal: modifiers.isFinal,\r\n                        visibility: modifiers.visibility,\r\n                        initialization: initialization,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                    if (classType == TokenType.keywordInterface) {\r\n                        this.pushError(\"Interfaces dürfen keine Attribute enthalten.\", \"error\", position);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        return { methods: methods, attributes: attributes }\r\n\r\n    }\r\n\r\n    parseMethodDeclarationParameters(): ParameterNode[] {\r\n\r\n        // Assumption: next token is (\r\n        let parameters: ParameterNode[] = [];\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.rightBracket) {\r\n            this.nextToken();\r\n            return [];\r\n        }\r\n\r\n        let ellipsis = false;\r\n\r\n        while (true) {\r\n            if (ellipsis) {\r\n                this.pushError(\"Nur der letzte Parameter darf als Ellipsis (...) definiert werden.\");\r\n            }\r\n            let isFinal = this.tt == TokenType.keywordFinal;\r\n\r\n            if (isFinal) this.nextToken();\r\n\r\n            let type: TypeNode = this.parseType();\r\n\r\n            ellipsis = this.tt == TokenType.ellipsis;\r\n            if (ellipsis) {\r\n                this.nextToken();\r\n                type.arrayDimension++;\r\n            }\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n                let identifier = <string>this.cct.value;\r\n                parameters.push({\r\n                    type: TokenType.parameterDeclaration,\r\n                    position: this.getCurrentPosition(),\r\n                    identifier: identifier,\r\n                    parameterType: type,\r\n                    isFinal: isFinal,\r\n                    isEllipsis: ellipsis\r\n                });\r\n                this.nextToken();\r\n            }\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken(); // consume comma\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return parameters;\r\n\r\n    }\r\n\r\n    parseExtendsImplements(isInterface: boolean): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        while(this.comesToken([TokenType.keywordExtends, TokenType.keywordImplements])){\r\n            if (this.comesToken(TokenType.keywordExtends) && !isInterface) {\r\n                if(sextends != null){\r\n                    this.pushError(\"Eine Klasse kann nicht Unterklasse von zwei anderen Klassen sein, es darf also hier nur ein Mal 'extends...' stehen.\", \"error\", sextends.position);\r\n                }\r\n                this.nextToken(); // skip extends\r\n                sextends = this.parseType();\r\n                if (sextends != null && sextends.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp der Basisklasse darf kein Array sein.\", \"error\", sextends.position);\r\n                }\r\n            }\r\n    \r\n            if ((!isInterface && this.comesToken(TokenType.keywordImplements)) || (isInterface && this.comesToken(TokenType.keywordExtends))) {\r\n                if(simplements.length > 0){\r\n                    this.pushError(\"Es darf hier nur ein Mal 'implements' stehen, hinter 'implements' ist aber eine kommaseparierte Liste von Interfaces erlaubt.\", \"warning\");\r\n                }\r\n                this.nextToken(); // Skip implements/extends\r\n                let first = true;\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n                    if (!first) this.nextToken(); // skip comma\r\n                    first = false;\r\n                    simplements.push(this.parseType());\r\n                }\r\n            }\r\n        }\r\n\r\n        simplements.forEach((im) => {\r\n            if (im.arrayDimension > 0) {\r\n                this.pushError(im.identifier + \"[] ist kein Interface, sondern ein Array. Array-Datentypen sind hier nicht erlaubt.\");\r\n            }\r\n        });\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n    }\r\n\r\n    parseTypeParameterBounds(): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        if (this.comesToken(TokenType.keywordExtends)) {\r\n            this.nextToken(); // skip extends\r\n            sextends = this.parseType();\r\n        }\r\n\r\n        while (this.comesToken(TokenType.ampersand)) {\r\n            this.nextToken(); // Skip ampersand\r\n            simplements.push(this.parseType());\r\n        }\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n\r\n    }\r\n\r\n    collectModifiers(): { isAbstract: boolean, isStatic: boolean, visibility: Visibility, isFinal: boolean, isTransient: boolean } {\r\n\r\n        let visibility = Visibility.public;\r\n        let isAbstract = false;\r\n        let isStatic = false;\r\n        let isFinal = false;\r\n        let isTransient = false;\r\n\r\n        let done = false;\r\n        let asError: boolean = false;\r\n\r\n        while (!done) {\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPublic:\r\n                    visibility = Visibility.public;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordPrivate:\r\n                    visibility = Visibility.private;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordProtected:\r\n                    visibility = Visibility.protected;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordStatic:\r\n                    isStatic = true;\r\n                    if(isAbstract && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordAbstract:\r\n                    isAbstract = true;\r\n                    if(isStatic && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordFinal:\r\n                    isFinal = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordTransient:\r\n                    isTransient = true;\r\n                    this.nextToken();\r\n                    break;\r\n                default: done = true;\r\n            }\r\n\r\n        }\r\n\r\n\r\n        return { isAbstract: isAbstract, isStatic: isStatic, visibility: visibility, isFinal: isFinal, isTransient: isTransient };\r\n\r\n    }\r\n\r\n\r\n}","import { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ModuleStore } from \"../parser/Module.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\ntype SerializedObject = {\r\n    \"!k\"?: string, // Class identifier or object index\r\n    \"!i\": number  // index\r\n}\r\n\r\nexport class JsonTool {\r\n    // to deserialize:\r\n    indexToObjectMap: { [index: number]: Value };\r\n    valuesToResolve: { v: Value, i: number }[];\r\n\r\n    // to serialize:\r\n    objectToIndexMap: Map<RuntimeObject, number>;\r\n    nextIndex: number;\r\n\r\n    primitiveTypes: String[] = [\"String\", \"Integer\", \"Double\", \"Boolean\", \"Float\", \"Character\"];\r\n\r\n    toJson(value: Value): string {\r\n        this.objectToIndexMap = new Map();\r\n        this.nextIndex = 0;\r\n        let json = JSON.stringify(this.toJsonObj(value));\r\n        this.objectToIndexMap = null; // free memory\r\n        return json;\r\n    }\r\n\r\n    toJsonObj(value: Value): any {\r\n        let type = value.type;\r\n        let v = value.value;\r\n        if (v == null) return null;\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                let enumObj = <EnumRuntimeObject>v;\r\n                return enumObj.enumValue.ordinal;\r\n            }\r\n\r\n            let rto = <RuntimeObject>v;\r\n            return this.objectToJsonObj(rto);\r\n        } else if (type instanceof ArrayType) {\r\n            let arrayValues: Value[] = v;\r\n            return arrayValues.map(value => this.toJsonObj(value));\r\n        } else {\r\n            // primitive Type\r\n            return value.value;\r\n        }\r\n    }\r\n\r\n    objectToJsonObj(rto: RuntimeObject): SerializedObject {\r\n        // We solve circular object references by serializing an index when the same object occurs more than once.\r\n        let index = this.objectToIndexMap.get(rto);\r\n        if (index != null) {\r\n            return { \"!i\": index };\r\n        }\r\n\r\n        index = this.nextIndex++;\r\n        this.objectToIndexMap.set(rto, index);\r\n        let klass: Klass = <Klass>rto.class;\r\n\r\n        let serializedObject: SerializedObject = { \"!k\": klass.identifier, \"!i\": index };\r\n        // Don't serialize system classes unless they are explicitely serializable\r\n        if (klass.module.isSystemModule) {\r\n            return null;\r\n        }\r\n\r\n        while (klass != null) {\r\n            let first: boolean = true;\r\n            let serializedAttributes: any;\r\n            for (let attribute of klass.attributes) {\r\n                if (!attribute.isStatic && !attribute.isTransient) {\r\n                    if (first) {\r\n                        first = false;\r\n                        serializedAttributes = {};\r\n                        serializedObject[klass.identifier] = serializedAttributes;\r\n                    }\r\n                    serializedAttributes[attribute.identifier] = this.toJsonObj(rto.attributes[attribute.index]);\r\n                }\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return serializedObject;\r\n    }\r\n\r\n    fromJson(jsonString: string, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): any {\r\n        this.indexToObjectMap = {};\r\n        this.valuesToResolve = [];\r\n\r\n        let obj: any = JSON.parse(jsonString);\r\n        let ret = this.fromJsonObj(obj, type, moduleStore, interpreter);\r\n\r\n        for (let vtr of this.valuesToResolve) {\r\n            let value = this.indexToObjectMap[vtr.i];\r\n            if (value != null) {\r\n                vtr.v.type = value.type;\r\n                vtr.v.value = value.value;\r\n            }\r\n        }\r\n\r\n        this.indexToObjectMap = null; // free memory\r\n        this.valuesToResolve = null;\r\n        return ret.value;\r\n    }\r\n\r\n    fromJsonObj(obj: any, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): Value {\r\n        if (obj == null) return { type: type, value: null };\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                return {\r\n                    type: type,\r\n                    value: type.indexToInfoMap[obj].object\r\n                }\r\n            }\r\n\r\n            let serializedObject = <SerializedObject>obj;\r\n            return this.objectFromJsonObj(serializedObject, type, moduleStore, interpreter);\r\n\r\n        } else if (type instanceof ArrayType) {\r\n            let jsonArray: any[] = obj;\r\n            return {\r\n                type: type,\r\n                value: jsonArray.map(v => this.fromJsonObj(v, type.arrayOfType, moduleStore, interpreter))\r\n            }\r\n        } else {\r\n            // primitive Type\r\n            return { type: type, value: obj }\r\n        }\r\n\r\n    }\r\n\r\n    objectFromJsonObj(serializedObject: SerializedObject, type: Klass | Interface, moduleStore: ModuleStore,\r\n        interpreter: Interpreter): Value {\r\n\r\n        let identifier: string = serializedObject[\"!k\"];\r\n        let index = serializedObject[\"!i\"];\r\n        if (identifier != null) {\r\n\r\n            let klass1: Klass = <Klass>moduleStore.getType(identifier).type;\r\n            let klass = klass1;\r\n\r\n            let rto: RuntimeObject = interpreter.instantiateObjectImmediately(klass);\r\n\r\n            while (klass != null) {\r\n                let attributes = rto.attributes;\r\n                let serializedAttributes = serializedObject[klass.identifier];\r\n                if (attributes != null && serializedObject != null) {\r\n                    for (let attribute of klass.attributes) {\r\n                        if (!attribute.isStatic && !attribute.isTransient) {\r\n                            attributes[attribute.index] = this.fromJsonObj(serializedAttributes[attribute.identifier], attribute.type, moduleStore, interpreter);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                klass = klass.baseClass;\r\n            }\r\n\r\n            let value: Value = { type: klass1, value: rto };\r\n            this.indexToObjectMap[index] = value;\r\n            return value;\r\n\r\n        } else {\r\n            let index = serializedObject[\"!i\"];\r\n            let value = this.indexToObjectMap[index];\r\n            if (value == null) {\r\n                value = { type: type, value: null };\r\n                this.valuesToResolve.push({ v: value, i: index });\r\n                return value;\r\n            } else {\r\n                return { type: value.type, value: value.value }; // return copy\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, TypeVariable } from \"../types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Type, Variable, PrimitiveType } from \"../types/Types.js\";\r\nimport { ClassDeclarationNode, InterfaceDeclarationNode, MethodDeclarationNode, TypeNode, EnumDeclarationNode, TypeParameterNode } from \"./AST.js\";\r\nimport { Module, ModuleStore } from \"./Module.js\";\r\nimport { nullType, intPrimitiveType, booleanPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType, objectType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { JsonTool } from \"../types/TypeTools.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype GenericTypeList = { typeNode: TypeNode, module: Module }[];\r\n\r\ntype TypeParameterInfo = {\r\n    tpn: TypeParameterNode;\r\n    tp: TypeVariable;\r\n    ci: Klass | Interface;\r\n    cdn: ClassDeclarationNode | InterfaceDeclarationNode;\r\n    index: number\r\n};\r\n\r\n// TODO: find cyclic references in extends ...\r\nexport class TypeResolver {\r\n\r\n    static WATCHDOG: number = 5;\r\n    moduleStore: ModuleStore;\r\n\r\n    classes: ClassDeclarationNode[];\r\n    interfaces: InterfaceDeclarationNode[];\r\n    enums: EnumDeclarationNode[];\r\n\r\n    moduleToTypeParameterListMap: Map<Module, TypeVariable[]> = new Map();\r\n\r\n    unresolvedTypes: Map<Module, TypeNode[]>;\r\n\r\n    genericTypes: GenericTypeList = [];\r\n    genericTypesInClassDefinitions: GenericTypeList = [];\r\n\r\n    typeParameterList: TypeParameterInfo[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    start(moduleStore: ModuleStore) {\r\n\r\n        this.classes = [];\r\n        this.interfaces = [];\r\n        this.enums = [];\r\n        this.unresolvedTypes = new Map();\r\n\r\n        this.moduleStore = moduleStore;\r\n\r\n        this.resolveTypesInModules();\r\n\r\n        this.setupClassesAndInterfaces();\r\n\r\n        let unresolvedGenericTypesInClasses = this.resolveTypeVariables();\r\n\r\n        this.resolveUnresolvedTypes(false);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypesInClasses);\r\n\r\n        this.resolveExtendsImplements();\r\n\r\n        let unresolvedGenericTypes = this.resolveGenericTypes(this.genericTypes);\r\n\r\n        this.resolveUnresolvedTypes(true);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n        this.setupMethodsAndAttributes();\r\n\r\n        this.checkDoubleIdentifierDefinition();\r\n\r\n        this.checkGenericTypesAgainsTypeGuards();\r\n\r\n        this.setupAttributeIndices();\r\n\r\n    }\r\n    \r\n    setupAttributeIndices() {\r\n        for(let cl of this.classes){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n        for(let cl of this.enums){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkGenericTypesAgainsTypeGuards() {\r\n\r\n        for (let tn of this.genericTypes) {\r\n            if (tn.typeNode.genericParameterTypes == null) continue; // Error in resolveGenericType => nothing to do.\r\n\r\n            let ci: Klass | Interface = <any>tn.typeNode.resolvedType;\r\n\r\n            if (ci.isGenericVariantFrom == null) continue;\r\n\r\n            if (ci.typeVariables.length != ci.isGenericVariantFrom.typeVariables.length) {\r\n                tn.module.errors[2].push({\r\n                    position: tn.typeNode.position,\r\n                    text: \"Der Generische Typ \" + ci.isGenericVariantFrom.identifier + \" hat \" + ci.isGenericVariantFrom.typeVariables.length + \" Typparameter. Hier wurden aber \" + ci.typeVariables.length + \" angegeben.\",\r\n                    level: \"error\"\r\n                });\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < ci.typeVariables.length; i++) {\r\n\r\n                let error: string = null;\r\n\r\n                let actualType = ci.typeVariables[i];\r\n                let typeGuard = ci.isGenericVariantFrom.typeVariables[i];\r\n                let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n                actualType.scopeFrom = typeGuard.scopeFrom;\r\n                actualType.scopeTo = typeGuard.scopeTo;\r\n                actualType.identifier = typeGuard.identifier;\r\n\r\n                error = \"\";\r\n                if (!actualType.type.hasAncestorOrIs(typeGuard.type)) {\r\n                    error += \"Die Klasse \" + actualType.type.identifier + \" ist keine Unterklasse von \" + typeGuard.type.identifier + \" und pass damit nicht zum Typparamter \" + typeGuard.identifier + \" der Klasse \" + ci.isGenericVariantFrom.identifier + \". \";\r\n                }\r\n\r\n                let ifList: string[] = [];\r\n                for (let tgInterface of typeGuard.type.implements) {\r\n                    if (!actualType.type.implementsInterface(tgInterface)) {\r\n                        ifList.push(tgInterface.identifier);\r\n                    }\r\n                }\r\n\r\n                if (ifList.length > 0) {\r\n                    error += \"Die Klasse \" + actualType.identifier + \" implementiert nicht die Interfaces \" + ifList.join(\", \");\r\n                }\r\n\r\n                if (error != \"\") {\r\n                    tn.module.errors[2].push({\r\n                        position: genericParameterType.position,\r\n                        text: \"Der angegebene Wert des Typparameters passt nicht zur Definition: \" + error,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            this.adjustMethodsAndAttributesToTypeParameters(ci, TypeResolver.WATCHDOG);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    adjustMethodsAndAttributesToTypeParameters(classOrInterface: Klass | Interface, watchdog: number) {\r\n\r\n        if(watchdog <= 0) return;\r\n\r\n        if (classOrInterface != null && classOrInterface.isGenericVariantFrom != null && classOrInterface.typeVariables.length != 0) {\r\n\r\n            let methodListAltered: boolean = false;\r\n            let newMethodList: Method[] = [];\r\n            for (let m of classOrInterface.methods) {\r\n                let newMethod = this.getAdjustedMethod(m, classOrInterface.typeVariables, watchdog - 1);\r\n                methodListAltered = methodListAltered || newMethod.altered;\r\n                newMethodList.push(newMethod.newMethod);\r\n            }\r\n\r\n            if (methodListAltered) classOrInterface.methods = newMethodList;\r\n\r\n            if (classOrInterface instanceof Klass) {\r\n\r\n                let newAttributes: Attribute[] = [];\r\n                let newAttributeMap: Map<string, Attribute> = new Map();\r\n                let attributesAltered: boolean = false;\r\n\r\n                for (let attribute of classOrInterface.attributes) {\r\n                    let newAttribute = this.getAdjustedAttribute(attribute, classOrInterface.typeVariables, watchdog - 1);\r\n                    attributesAltered = attributesAltered || newAttribute.altered;\r\n                    newAttributes.push(newAttribute.newAttribute);\r\n                    newAttributeMap.set(attribute.identifier, newAttribute.newAttribute);\r\n                }\r\n\r\n                if (attributesAltered) {\r\n                    classOrInterface.attributes = newAttributes;\r\n                    classOrInterface.attributeMap = newAttributeMap;\r\n                }\r\n\r\n                this.adjustMethodsAndAttributesToTypeParameters(classOrInterface.baseClass, watchdog - 1);\r\n\r\n                // for (let impl of classOrInterface.implements) {\r\n                //     this.adjustMethodsAndAttributesToTypeParameters(impl);\r\n                // }\r\n            } else {\r\n                for (let ext of classOrInterface.extends) {\r\n                    this.adjustMethodsAndAttributesToTypeParameters(ext, watchdog - 1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedAttribute(attribute: Attribute, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newAttribute: Attribute } {\r\n\r\n        let nt = this.getAdjustedType(attribute.type, typeVariables, true, watchdog - 1);\r\n        if (nt.altered) {\r\n            let a: Attribute = Object.create(attribute);\r\n            a.type = nt.newType;\r\n            return { altered: true, newAttribute: a }\r\n        } else {\r\n            return { altered: false, newAttribute: attribute }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedMethod(method: Method, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newMethod: Method } {\r\n\r\n        let nrt = this.getAdjustedType(method.returnType, typeVariables, true, watchdog - 1);\r\n\r\n        let parameterAltered: boolean = false;\r\n        let newParameters: Variable[] = [];\r\n        for (let p of method.parameterlist.parameters) {\r\n            let nt = this.getAdjustedType(p.type, typeVariables, false, watchdog - 1);\r\n            if (nt.altered) {\r\n                parameterAltered = true;\r\n                let pNew: Variable = Object.create(p);\r\n                pNew.type = nt.newType;\r\n                newParameters.push(pNew);\r\n            } else {\r\n                newParameters.push(p);\r\n            }\r\n        }\r\n\r\n        if (nrt.altered || parameterAltered) {\r\n            let newMethod: Method = Object.create(method);\r\n            if (nrt.altered) newMethod.returnType = nrt.newType;\r\n            if (parameterAltered) {\r\n                newMethod.parameterlist = new Parameterlist(newParameters);\r\n            }\r\n            return { altered: true, newMethod: newMethod }\r\n        } else {\r\n            return { altered: false, newMethod: method };\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedType(type: Type, typeVariables: TypeVariable[], adjustMethodsAndAttributesRecursive: boolean, watchdog: number): { altered: boolean, newType: Type } {\r\n\r\n        if (type == null) return { altered: false, newType: type };\r\n\r\n        if (type[\"isTypeVariable\"] == true) {\r\n            for (let tv of typeVariables) {\r\n                if (tv.identifier == type.identifier) {\r\n                    return { altered: true, newType: tv.type };\r\n                }\r\n            }\r\n            return { altered: false, newType: type };\r\n        }\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0) {\r\n            let newTypeVariables: TypeVariable[] = [];\r\n            let altered: boolean = false;\r\n            for (let tv of type.typeVariables) {\r\n                let nt = this.getAdjustedType(tv.type, typeVariables, false, watchdog - 1);\r\n                if (nt.altered) {\r\n                    newTypeVariables.push({\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: <Klass>nt.newType\r\n                    })\r\n                    altered = true;\r\n                } else {\r\n                    newTypeVariables.push(tv);\r\n                }\r\n            }\r\n            if (altered) {\r\n                let newClassInterface = type.clone();\r\n                newClassInterface.typeVariables = newTypeVariables;\r\n                if (adjustMethodsAndAttributesRecursive) this.adjustMethodsAndAttributesToTypeParameters(newClassInterface, watchdog - 1);\r\n                return { altered: true, newType: newClassInterface }\r\n            } else {\r\n                return { altered: false, newType: type }\r\n            }\r\n        }\r\n\r\n        if(type instanceof ArrayType){\r\n            let nt = this.getAdjustedType(type.arrayOfType, typeVariables, adjustMethodsAndAttributesRecursive, watchdog - 1);\r\n            return {\r\n                altered: nt.altered,\r\n                newType: nt.altered ? new ArrayType(nt.newType) : type\r\n            }\r\n        }\r\n\r\n        return { altered: false, newType: type };\r\n    }\r\n\r\n    resolveGenericTypes(genericTypes: GenericTypeList): GenericTypeList {\r\n        let done: boolean = false;\r\n        let todoList: GenericTypeList = genericTypes.slice(0);\r\n        while (!done) {\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tn = todoList[i];\r\n\r\n                if (this.resolveGenericType(tn)) {\r\n                    done = false;\r\n                }\r\n                if (tn.typeNode.genericParameterTypes == null || tn.typeNode.genericParameterTypesResolved != null) {\r\n                    todoList.splice(todoList.indexOf(tn), 1);\r\n                    i--;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return todoList;\r\n    }\r\n\r\n    // returns true if something new could be resolved\r\n    resolveGenericType(tn: { typeNode: TypeNode, module: Module }): boolean {\r\n\r\n        if (tn.typeNode.genericParameterTypesResolved != null) return false;\r\n        if (tn.typeNode.genericParameterTypes == null) return true;\r\n\r\n        /**\r\n         * e.g. Map<Integer, String> test = new Map<>();\r\n         * Subsequent Code processes the type Map<Integer, String>\r\n         */\r\n\r\n        let ci: Klass | Interface = <any>tn.typeNode.resolvedType; // in example: Map\r\n        if (ci == null || !(ci instanceof Interface || ci instanceof Klass)) { // There had been an error... (in example: Map has not been resolved)\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return false; // => exit gracefully\r\n        }\r\n\r\n        if (!ci.typeVariablesReady) return false;\r\n\r\n        let parameterTypes: (Klass | Interface)[] = [];\r\n        for (let i = 0; i < tn.typeNode.genericParameterTypes.length; i++) {\r\n            let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n            let resolvedType = genericParameterType.resolvedType;\r\n\r\n            if (resolvedType == null) {\r\n                return false;\r\n            }\r\n\r\n            if (genericParameterType.genericParameterTypes != null && genericParameterType.genericParameterTypesResolved == null) {\r\n                return false; // first resolve this type!\r\n            }\r\n\r\n            if (!(resolvedType instanceof Interface || resolvedType instanceof Klass)) {\r\n                tn.module.errors[2].push({\r\n                    position: genericParameterType.position,\r\n                    text: \"Hier wird ein Interface- oder Klassentyp erwartet. Der Typ \" + genericParameterType.identifier + \" ist aber keiner.\",\r\n                    level: \"error\"\r\n                });\r\n                tn.typeNode.genericParameterTypes = null;\r\n                return true; // => exit gracefully\r\n            }\r\n\r\n            parameterTypes.push(<any>genericParameterType.resolvedType);\r\n\r\n        }\r\n\r\n        let typeVariablesOldToNewMap: Map<Klass, Klass> = new Map();\r\n\r\n        if (ci.typeVariables.length != parameterTypes.length) {\r\n            tn.module.errors[2].push({\r\n                position: tn.typeNode.position,\r\n                text: (ci instanceof Klass ? \"Die Klasse \" : \"Das Interface \") + ci.identifier + \" hat \" + ci.typeVariables.length + \" Typparameter, hier sind aber \" + parameterTypes.length + \" angegeben.\",\r\n                level: \"error\"\r\n            });\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return true; // => exit gracefully\r\n        }\r\n\r\n        let i = 0;\r\n        for (let type of parameterTypes) {\r\n\r\n            let oldTypeVariable = ci.typeVariables[i];\r\n\r\n            if (type instanceof Interface) {\r\n                let type1 = objectType.clone();\r\n                type1.implements.push(type);\r\n                type = type1;\r\n            }\r\n\r\n            let newTypeVariable = {\r\n                identifier: oldTypeVariable.identifier,\r\n                scopeFrom: oldTypeVariable.scopeFrom,\r\n                scopeTo: oldTypeVariable.scopeTo,\r\n                type: type\r\n            };\r\n\r\n            typeVariablesOldToNewMap.set(ci.typeVariables[i].type, newTypeVariable.type)\r\n            i++;\r\n        }\r\n\r\n        let newCi =\r\n            this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(ci, typeVariablesOldToNewMap);\r\n\r\n        tn.typeNode.resolvedType = newCi;\r\n        tn.typeNode.genericParameterTypesResolved = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    propagateTypeParameterToBaseClassesAndImplementedInterfaces(classOrInterface: Klass | Interface,\r\n        typeVariablesOldToNewMap: Map<Klass, Klass>): Klass | Interface {\r\n\r\n        if (classOrInterface instanceof Klass) {\r\n            let newClass: Klass = classOrInterface.clone();\r\n\r\n            newClass.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newClass.typeVariables.push(tv1);\r\n            }\r\n\r\n            let baseKlass = classOrInterface.baseClass;\r\n            if (baseKlass != null && baseKlass.isGenericVariantFrom != null) {\r\n\r\n                newClass.setBaseClass(<Klass>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(baseKlass, typeVariablesOldToNewMap));\r\n\r\n            }\r\n\r\n            newClass.implements = [];\r\n            for (let impl of classOrInterface.implements) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newClass.implements.push(impl);\r\n                } else {\r\n                    newClass.implements.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newClass;\r\n\r\n        } else {\r\n            let newInterface: Interface = classOrInterface.clone();\r\n\r\n            newInterface.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newInterface.typeVariables.push(tv1);\r\n            }\r\n\r\n            newInterface.extends = [];\r\n            for (let impl of classOrInterface.extends) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newInterface.extends.push(impl);\r\n                } else {\r\n                    newInterface.extends.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newInterface;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkDoubleIdentifierDefinition() {\r\n        let identifierModuleMap: Map<string, Module> = new Map();\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            for (let type of module.typeStore.typeList) {\r\n                let otherModule = identifierModuleMap.get(type.identifier);\r\n                if (otherModule != null) {\r\n                    module.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                        position: type.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                    let otherType = otherModule.typeStore.getType(type.identifier);\r\n                    if (otherType != null) {\r\n                        otherModule.errors[1].push({\r\n                            text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                                otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                            position: otherType.declaration.position,\r\n                            level: \"error\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    identifierModuleMap.set(type.identifier, module);\r\n                }\r\n            }\r\n        }\r\n\r\n        let baseModule = this.moduleStore.getBaseModule();\r\n\r\n        for (let tp of this.typeParameterList) {\r\n            let module = tp.ci.module;\r\n            let otherModule = identifierModuleMap.get(tp.tpn.identifier);\r\n            if (otherModule == null) {\r\n                let systemType = baseModule.typeStore.getType(tp.tpn.identifier);\r\n                if (systemType != null) otherModule = baseModule;\r\n            }\r\n            if (otherModule != null) {\r\n                module.errors[1].push({\r\n                    text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                        module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                    position: tp.tpn.position,\r\n                    level: \"error\"\r\n                });\r\n                let otherType = otherModule.typeStore.getType(tp.tpn.identifier);\r\n                if (otherType != null && otherModule != baseModule) {\r\n                    otherModule.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                        position: otherType.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveUnresolvedTypes(lastPass: boolean) {\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            module.dependsOnModules = new Map();\r\n        }\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            let ut = this.unresolvedTypes.get(module);\r\n            let utNew: TypeNode[] = [];\r\n            for (let type of ut) {\r\n                if (!this.resolveType(type, module, lastPass)) {\r\n                    utNew.push(type);\r\n                }\r\n            }\r\n            this.unresolvedTypes.set(module, utNew);\r\n        }\r\n    }\r\n\r\n    addFromJsonMethod(klass: Klass) {\r\n        let interpreter = this.main.getInterpreter();\r\n        klass.addMethod(new Method(\"fromJson\", new Parameterlist([\r\n            { identifier: \"jsonString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), klass,\r\n            (parameters) => {\r\n                let json: string = parameters[1].value;\r\n                return new JsonTool().fromJson(json, klass, this.moduleStore, interpreter);\r\n            }, false, true, `Konvertiert eine Json-Zeichenkette in ein ${klass.identifier}-Objekt (\"deserialisieren\"). Vor dem Deserialisieren eines Objekts werden die Attributinitialisierer angewandt und - falls vorhanden - ein parameterloser Konstruktor ausgeführt. Der Algorithmus kommt auch mit zyklischen Objektreferenzen zurecht.`, false));\r\n\r\n    }\r\n\r\n    addToJsonMethod(klass: Klass) {\r\n        klass.addMethod(new Method(\"toJson\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return new JsonTool().toJson(parameters[0]);\r\n            }, false, false, `Konvertiert ein Objekt (rekursiv mitsamt referenzierter Objekte) in eine Json-Zeichenkette. Nicht konvertiert werden Systemklassen (außer: ArrayList) sowie mit dem Schlüsselwort transient ausgezeichnete Attribute.`));\r\n\r\n    }\r\n\r\n\r\n    setupMethodsAndAttributes() {\r\n\r\n        let classesOrEnums: (ClassDeclarationNode | EnumDeclarationNode)[] = [];\r\n        classesOrEnums = classesOrEnums.concat(this.classes);\r\n        classesOrEnums = classesOrEnums.concat(this.enums);\r\n\r\n        for (let cn of classesOrEnums) {\r\n            for (let mn of cn.methods) {\r\n                let m: Method = this.setupMethod(mn, cn.resolvedType.module, cn.resolvedType);\r\n                if (m != null) {\r\n                    if(mn.commentBefore != null) m.documentation = \"\" + mn.commentBefore.value;\r\n                    cn.resolvedType.addMethod(m);\r\n                }\r\n            }\r\n\r\n            this.addFromJsonMethod(cn.resolvedType);\r\n            this.addToJsonMethod(cn.resolvedType);\r\n\r\n            for (let att of cn.attributes) {\r\n\r\n                this.resolveType(att.attributeType, cn.resolvedType.module, true);\r\n                let type = att.attributeType.resolvedType;\r\n                if (type == null) {\r\n                    continue;\r\n                }\r\n\r\n                let attribute: Attribute = new Attribute(att.identifier, type, null, att.isStatic, att.visibility, att.isFinal);\r\n                att.resolvedType = attribute;\r\n                if(att.commentBefore != null) attribute.documentation = \"\" + att.commentBefore.value;\r\n                attribute.annotation = att.annotation;\r\n                attribute.isTransient = att.isTransient;\r\n                if (cn.resolvedType.attributeMap.get(attribute.identifier) != null) {\r\n                    cn.resolvedType.module.errors[2].push({\r\n                        text: \"Es darf nicht mehrere Attribute mit demselben Bezeichner '\" + attribute.identifier + \"' in derselben Klassse geben.\",\r\n                        position: att.position, level: \"error\"\r\n                    });\r\n                }\r\n                cn.resolvedType.addAttribute(attribute);\r\n\r\n                this.pushUsagePosition(cn.resolvedType.module, att.position, attribute);\r\n                attribute.declaration = { module: cn.resolvedType.module, position: att.position };\r\n\r\n            }\r\n        }\r\n\r\n        for (let ic of this.interfaces) {\r\n            for (let mn of ic.methods) {\r\n                let m1: Method = this.setupMethod(mn, ic.resolvedType.module, ic.resolvedType);\r\n                if (m1 != null) {\r\n                    ic.resolvedType.addMethod(m1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setupMethod(mn: MethodDeclarationNode, m: Module, c: Klass | Interface): Method {\r\n\r\n        let typesOK = true;\r\n\r\n        typesOK = typesOK && this.resolveType(mn.returnType, m, true);\r\n\r\n        let parameters: Variable[] = [];\r\n        for (let par of mn.parameters) {\r\n            typesOK = typesOK && this.resolveType(par.parameterType, m, true);\r\n            if (typesOK) {\r\n                let parameter = {\r\n                    definition: par.position,\r\n                    identifier: par.identifier,\r\n                    usagePositions: new Map(),\r\n                    type: par.parameterType.resolvedType,\r\n                    declaration: { module: m, position: par.position },\r\n                    isFinal: par.isFinal,\r\n                    isEllipsis: par.isEllipsis\r\n                };\r\n                parameters.push(parameter);\r\n                this.pushUsagePosition(m, par.position, parameter);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let pl: Parameterlist = new Parameterlist(parameters);\r\n\r\n        if (typesOK) {\r\n            let method = new Method(mn.identifier, pl, mn.returnType.resolvedType, null, mn.isAbstract, mn.isStatic);\r\n            method.isConstructor = mn.identifier == c.identifier;\r\n            method.visibility = mn.visibility;\r\n            method.isConstructor = mn.isConstructor;\r\n            mn.resolvedType = method;\r\n            method.annotation = mn.annotation;\r\n\r\n            this.pushUsagePosition(m, mn.position, method);\r\n            method.declaration = {\r\n                module: m,\r\n                position: mn.position\r\n            }\r\n\r\n            return method;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    pushUsagePosition(m: Module, position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n\r\n        m.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(m);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(m, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveType(tn: TypeNode, m: Module, lastPass: boolean): boolean {\r\n        if (tn.resolvedType == null) {\r\n            let typeModule = this.moduleStore.getType(tn.identifier);\r\n            if (typeModule != null) {\r\n                let type = typeModule.type;\r\n                m.dependsOnModules.set(typeModule.module, true);\r\n                this.pushUsagePosition(m, tn.position, type);\r\n                type = getArrayType(type, tn.arrayDimension);\r\n                this.registerGenericType(tn, m, false);\r\n                tn.resolvedType = type;\r\n                return true;\r\n            }\r\n\r\n            let typeParameterList = this.moduleToTypeParameterListMap.get(m);\r\n            if (typeParameterList != null) {\r\n                for (let tg of typeParameterList) {\r\n                    if (tg.identifier == tn.identifier) {\r\n                        let position = tn.position;\r\n                        if (position.line > tg.scopeFrom.line || position.line == tg.scopeFrom.line && position.column >= tg.scopeFrom.column) {\r\n                            if (position.line < tg.scopeTo.line || position.line == tg.scopeTo.line && position.column <= tg.scopeTo.column) {\r\n                                this.pushUsagePosition(m, tn.position, tg.type);\r\n                                tn.resolvedType = tg.type;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (lastPass) {\r\n\r\n                let typKlasse = (tn.identifier.length > 0 && tn.identifier[0].toUpperCase() == tn.identifier[0]) ? \"Die Klasse\" : \"Der Typ\";\r\n\r\n                m.errors[2].push({\r\n                    position: tn.position,\r\n                    text: typKlasse + \" \" + tn.identifier + \" konnte nicht gefunden werden.\" +\r\n                        (tn.identifier == \"string\" ? \" Meinten Sie String (großgeschrieben)?\" : \"\"),\r\n                    level: \"error\",\r\n                    quickFix: (tn.identifier == \"string\") ? {\r\n                        title: \"String groß schreiben\",\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: tn.position.line, startColumn: tn.position.column - 1, endLineNumber: tn.position.line, endColumn: tn.position.column + 6 },\r\n                                        text: \"String\"\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n\r\n                    } : null\r\n                });\r\n            }\r\n            tn.resolvedType = null;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    resolveExtendsImplements() {\r\n        for (let cn of this.classes) {\r\n\r\n            let c = cn.resolvedType;\r\n            for (let iNode of cn.implements) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei implements... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.implements.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n            if (cn.extends != null) {\r\n                this.resolveType(cn.extends, c.module, true);\r\n                let eType = cn.extends.resolvedType;\r\n                if (eType == null || !(eType instanceof Klass)) {\r\n                    c.module.errors[2].push({\r\n                        position: cn.extends.position,\r\n                        text: \"Der Typ \" + cn.extends.identifier + \" ist keine Klasse, darf also nicht hinter extends stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n\r\n                c.setBaseClass(<Klass>eType);\r\n                cn.extends.resolvedType = eType;\r\n            } else {\r\n                c.setBaseClass(<Klass>this.moduleStore.getType(\"Object\").type)\r\n            }\r\n\r\n        }\r\n        for (let interf of this.interfaces) {\r\n\r\n            let c = interf.resolvedType;\r\n            for (let iNode of interf.extends) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei extends... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.extends.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    setupClassesAndInterfaces() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            if (m.classDefinitionsAST != null) {\r\n                for (let cdn of m.classDefinitionsAST) {\r\n                    switch (cdn.type) {\r\n                        case TokenType.keywordClass:\r\n                            this.classes.push(cdn);\r\n                            let c = new Klass(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) c.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = c;\r\n                            c.visibility = cdn.visibility;\r\n                            c.isAbstract = cdn.isAbstract;\r\n                            m.typeStore.addType(c);\r\n                            this.pushUsagePosition(m, cdn.position, c);\r\n                            c.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, c);\r\n                            if (cdn.extends != null) this.registerGenericType(cdn.extends, m, true);\r\n                            if (cdn.implements != null) {\r\n                                for (let im of cdn.implements) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n                        case TokenType.keywordEnum:\r\n                            this.enums.push(cdn);\r\n                            let e = new Enum(cdn.identifier, m, cdn.values);\r\n                            if(cdn.commentBefore != null) e.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = e;\r\n                            e.visibility = cdn.visibility;\r\n                            m.typeStore.addType(e);\r\n                            this.pushUsagePosition(m, cdn.position, e);\r\n                            e.declaration = { module: m, position: cdn.position };\r\n                            break;\r\n                        case TokenType.keywordInterface:\r\n                            this.interfaces.push(cdn);\r\n                            let i = new Interface(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) i.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = i;\r\n                            m.typeStore.addType(i);\r\n                            this.pushUsagePosition(m, cdn.position, i);\r\n                            i.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, i);\r\n                            if (cdn.extends != null) {\r\n                                for (let im of cdn.extends) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveTypeVariables(): GenericTypeList {\r\n\r\n        let todoList = this.typeParameterList.slice(0);\r\n        let done = false;\r\n\r\n        let unresolvedGenericTypes: GenericTypeList = this.genericTypesInClassDefinitions.slice(0);\r\n\r\n        while (!done) {\r\n            this.resolveUnresolvedTypes(false);\r\n            unresolvedGenericTypes = this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tv = todoList[i];\r\n                let ready: boolean = true;\r\n                let ext: TypeNode[] = tv.tpn.extends == null ? [] : [tv.tpn.extends];\r\n                if (tv.tpn.implements != null) ext = ext.concat(tv.tpn.implements);\r\n                for (let extType of ext) {\r\n                    if (extType.genericParameterTypes != null && !(extType.genericParameterTypesResolved == true)) {\r\n                        ready = false;\r\n                    }\r\n                }\r\n\r\n                if (ready) {\r\n                    this.resolveTypeVariable(tv);\r\n                    todoList.splice(todoList.indexOf(tv), 1);\r\n                    i--;\r\n                    done = false;\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return unresolvedGenericTypes;\r\n    }\r\n\r\n\r\n    resolveTypeVariable(tp: TypeParameterInfo) {\r\n\r\n\r\n        let typeParameterKlass: Klass;\r\n        if (tp.tpn.extends != null && tp.tpn.extends.resolvedType != null) {\r\n            typeParameterKlass = (<Klass>tp.tpn.extends.resolvedType).clone();\r\n        } else {\r\n            typeParameterKlass = objectType.clone();\r\n        }\r\n\r\n        typeParameterKlass.identifier = tp.tpn.identifier;\r\n        typeParameterKlass.isTypeVariable = true;\r\n\r\n        typeParameterKlass.declaration = {\r\n            module: tp.ci.module,\r\n            position: tp.tpn.position\r\n        };\r\n\r\n\r\n        if (tp.tpn.implements != null) {\r\n            for (let impl of tp.tpn.implements) {\r\n                if (typeParameterKlass.implements.indexOf(<Interface>impl.resolvedType) < 0) {\r\n                    typeParameterKlass.implements.push(<Interface>impl.resolvedType);\r\n                }\r\n            }\r\n        }\r\n\r\n        let tp1: TypeVariable = {\r\n            identifier: tp.tpn.identifier,\r\n            type: typeParameterKlass,\r\n            scopeFrom: tp.cdn.position,\r\n            scopeTo: tp.cdn.scopeTo\r\n        };\r\n\r\n        tp.ci.typeVariables[tp.index] = tp1;\r\n        tp.ci.typeVariablesReady = true;\r\n        for (let tv of tp.ci.typeVariables) if (tv == null) tp.ci.typeVariablesReady = false;\r\n\r\n        let typeParameterList = this.moduleToTypeParameterListMap.get(tp.ci.module);\r\n        if (typeParameterList == null) {\r\n            typeParameterList = [];\r\n            this.moduleToTypeParameterListMap.set(tp.ci.module, typeParameterList);\r\n        }\r\n\r\n        typeParameterList.push(tp1);\r\n\r\n        this.pushUsagePosition(tp.ci.module, tp.tpn.position, typeParameterKlass);\r\n\r\n    }\r\n\r\n    registerTypeVariables(cdn: ClassDeclarationNode | InterfaceDeclarationNode, classOrInterface: Klass | Interface) {\r\n        let index = 0;\r\n        for (let typeParameter of cdn.typeParameters) {\r\n            if (typeParameter.extends != null) this.registerGenericType(typeParameter.extends, classOrInterface.module, true);\r\n            if (typeParameter.implements != null) {\r\n                for (let im of typeParameter.implements) {\r\n                    this.registerGenericType(im, classOrInterface.module, true);\r\n                }\r\n            }\r\n\r\n            classOrInterface.typeVariablesReady = false;\r\n            classOrInterface.typeVariables.push(null); // leave room\r\n\r\n            this.typeParameterList.push({\r\n                tpn: typeParameter, tp: {\r\n                    identifier: typeParameter.identifier,\r\n                    type: null,\r\n                    scopeFrom: cdn.position,\r\n                    scopeTo: cdn.scopeTo\r\n                }, ci: classOrInterface, cdn: cdn,\r\n                index: index++\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTypesInModules() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            let ut: TypeNode[] = [];\r\n            this.unresolvedTypes.set(m, ut);\r\n            for (let tn of m.typeNodes) {\r\n                if (tn.resolvedType == null) {\r\n                    let typeModule = this.moduleStore.getType(tn.identifier);\r\n                    if (typeModule != null) {\r\n                        let type = typeModule.type;\r\n                        this.pushUsagePosition(m, tn.position, type);\r\n                        tn.resolvedType = getArrayType(type, tn.arrayDimension);\r\n                        this.registerGenericType(tn, m, false);\r\n                    } else {\r\n                        ut.push(tn);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    registerGenericType(typeNode: TypeNode, module: Module, isInClassDefinition: boolean) {\r\n        if (typeNode.genericParameterTypes != null) {\r\n            if (isInClassDefinition) {\r\n                this.genericTypesInClassDefinitions.push({ typeNode: typeNode, module: module });\r\n            } else {\r\n                this.genericTypes.push({ typeNode: typeNode, module: module });\r\n            }\r\n        } else {\r\n            // new ArrayList<>() (without type Parameters!) should be castable to ANY other type with same name regarldess of it's type variable types (Java 7-style!)\r\n            let type = typeNode.resolvedType;\r\n            if (type != null && type instanceof Klass && type.typeVariables.length > 0) {\r\n                let type1 = <Klass>type.clone();\r\n                type1.typeVariables = []; // now this type can cast to ANY other type with same name regardless of it's type variable types!\r\n                typeNode.resolvedType = type1;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getArrayType(type: Type, arrayDimension: number) {\r\n    while (arrayDimension > 0) {\r\n        type = new ArrayType(type);\r\n        arrayDimension--;\r\n    }\r\n    return type;\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class ListIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(listHelper: ListHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"ListIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"IteratorHelper\"] = new IteratorHelper(listHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ListIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass IteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private listHelper: ListHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = listHelper.objectArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos - 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos - 1, 1);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos + 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos + 1, 1);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos++].value;\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos--].value;\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.listHelper.objectArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType, DoubleType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType, getTypeIdentifier } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { getTypeFromValue } from \"../../compiler/types/TypeHelper.js\";\r\n\r\nexport class ArrayListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ArrayList\", module, \"Liste mit Zugriff auf das n-te Objekt in konstanter Zeit, Einfügen in konstanter Zeit und Suchen in linearer Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\"));\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"ArrayList\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue ArrayList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"set\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let element: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.set(index, element);\r\n\r\n            }, false, false, \"Ersetzt das Element an Position index der Liste durch das übergebene Element; gibt das vorherige Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let r: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r, index);\r\n\r\n            }, false, false, \"Fügt das Element an der Position index der Liste ein. Tipp: Das erste Element der Liste hat index == 0.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index)?.value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index);\r\n\r\n                return null;\r\n\r\n            }, true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ListHelper {\r\n\r\n    valueArray: Value[] = [];\r\n    objectArray: any[] = []; // wird mitgeführt, um schnelle indexOf-Operationen zu ermöglichen\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\", \"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n                break;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.objectArray.map(o => \"\" + o).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => { }, true);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    addAll(object: RuntimeObject): boolean {\r\n\r\n        if (object.intrinsicData[\"ListHelper\"] instanceof ListHelper) {\r\n            let ah: ListHelper = object.intrinsicData[\"ListHelper\"];\r\n            if (ah != null) {\r\n                this.valueArray = this.valueArray.concat(ah.valueArray.map(v => { return { type: v.type, value: v.value } }));\r\n                this.objectArray = this.objectArray.concat(ah.objectArray);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        let getIteratorMethod = object.class.getMethod(\"iterator\", new Parameterlist([]));\r\n        if (getIteratorMethod == null) {\r\n            this.interpreter.throwException(\"Der an die Methode addAll übergebene Paramter besitzt keine Methode iterator().\");\r\n            return false;\r\n        }\r\n\r\n        if (getIteratorMethod.invoke) {\r\n\r\n            let iterator: RuntimeObject = getIteratorMethod.invoke([{ value: object, type: object.class }]);\r\n            let nextMethod = iterator.class.getMethod(\"next\", new Parameterlist([]));\r\n            let hasNextMethod = iterator.class.getMethod(\"hasNext\", new Parameterlist([]));\r\n            let type = nextMethod.returnType;\r\n\r\n            let iteratorAsValue: Value = { value: iterator, type: iterator.class };\r\n\r\n            while (hasNextMethod.invoke([iteratorAsValue])) {\r\n                let obj: any = nextMethod.invoke([iteratorAsValue]);\r\n                this.objectArray.push(obj);\r\n                this.valueArray.push({\r\n                    value: obj,\r\n                    type: getTypeFromValue(obj)\r\n                })\r\n            }\r\n\r\n            return;\r\n        } else {\r\n            let iteratorWithError = this.execute(getIteratorMethod, [{ value: object, type: object.class }]);\r\n            if (iteratorWithError.error != null) { this.interpreter.throwException(\"Fehler beim holen des Iterators.\"); return false; }\r\n            let iterator = iteratorWithError.value.value;\r\n\r\n            let nextMethod = iterator.class.getMethod(\"next\", new Parameterlist([]));\r\n            let hasNextMethod = iterator.class.getMethod(\"hasNext\", new Parameterlist([]));\r\n            let type = nextMethod.returnType;\r\n            let iteratorAsValue: Value = { value: iterator, type: iterator.class };\r\n\r\n            while (true) {\r\n                let hasNext = this.execute(hasNextMethod, [iteratorAsValue]);\r\n                if (hasNext.error != null) { this.interpreter.throwException(\"Fehler beim Ausführen der hasNext-Methode\"); return false; }\r\n                if (hasNext.value.value != true) break;\r\n                let objWithError = this.execute(nextMethod, [iteratorAsValue]);\r\n                if (objWithError.error != null) { this.interpreter.throwException(\"Fehler beim Ausführen der next-Methode\"); return false; }\r\n                let obj = objWithError.value.value;\r\n                this.objectArray.push(obj);\r\n                this.valueArray.push({ value: obj, type: type });\r\n            }\r\n\r\n            return true;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    execute(method: Method, parameters: Value[]): { error: string, value: Value } {\r\n        if (method.invoke) {\r\n            return { value: { value: method.invoke([]), type: method.returnType }, error: null };\r\n        } else {\r\n            return this.interpreter.executeImmediatelyInNewStackframe(method.program, parameters);\r\n        }\r\n    }\r\n\r\n    get(index: number): Value {\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            return this.valueArray[index];\r\n        }\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        return null;\r\n    }\r\n\r\n    remove(index: number): Value {\r\n\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return null;\r\n        }\r\n\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n\r\n        return null;\r\n    }\r\n\r\n    add(r: Value, index?): boolean {\r\n        if (index == null) {\r\n            this.valueArray.push({ type: r.type, value: r.value });\r\n            this.objectArray.push(r.value);\r\n        } else {\r\n            if (index <= this.objectArray.length && index >= 0) {\r\n                this.valueArray.splice(index, 0, { type: r.type, value: r.value });\r\n                this.objectArray.splice(index, 0, r.value);\r\n            } else {\r\n                this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    set(index: number, r: Value): boolean {\r\n        if (index < this.objectArray.length && index >= 0) {\r\n            let oldValue = this.objectArray[index];\r\n            this.valueArray[index] = { type: r.type, value: r.value };\r\n            this.objectArray[index] = r.value;\r\n            return oldValue;\r\n        } else {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        }\r\n        return true;\r\n    }\r\n\r\n    pop(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    peek(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    indexOf(o: Value): number {\r\n        return this.objectArray.indexOf(o.value);\r\n    }\r\n\r\n    size(): number {\r\n        return this.objectArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.objectArray.splice(index, 1);\r\n            this.valueArray.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.objectArray.indexOf(object.value) >= 0;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.objectArray = [];\r\n    }\r\n\r\n    peek_last_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n    peek_first_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[0];\r\n        }\r\n    }\r\n\r\n    removeLast_or_error() {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    };\r\n\r\n    addLast(object: Value) {\r\n        this.valueArray.push({ type: object.type, value: object.value });\r\n        this.objectArray.push(object.value);\r\n        return true;\r\n    }\r\n    addFirst(object: Value): any {\r\n        this.valueArray.splice(0, 0, { type: object.type, value: object.value });\r\n        this.objectArray.splice(0, 0, object.value);\r\n        return true;\r\n    }\r\n    removeFirstOccurrence(object: Value): boolean {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    peek_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    poll_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    removeFirst_or_error(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        } else {\r\n            let object = this.objectArray[0];\r\n            this.objectArray.splice(0, 1);\r\n            this.valueArray.splice(0, 1);\r\n            return object;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\n\r\nexport function getTypeFromValue(value: any){\r\n    if(typeof value == \"string\"){\r\n        return stringPrimitiveType;\r\n    } else if(typeof value == \"number\"){\r\n        if(Number.isInteger(value)) return intPrimitiveType;\r\n        return floatPrimitiveType;\r\n    } else if(typeof value == \"boolean\"){\r\n        return booleanPrimitiveType;\r\n    } else if(value instanceof RuntimeObject){\r\n        return value.class;\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class CollectionClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Collection\", module, \"Interface für Listen, Maps, Sets usw. mit Methoden zum Einfügen von Objekten, Zugriff auf Objekte und zur Ermittlung der Anzahl der Objekte\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iterableInterface = (<Interface>module.typeStore.getType(\"Iterable\")).clone();\r\n        iterableInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(iterableInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt der Collection ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Collection dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        // TODO: Implement\r\n        // this.addMethod(new Method(\"removeAll\", new Parameterlist([\r\n        //     { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), booleanPrimitiveType,\r\n        //     null,  // no implementation!\r\n        //     true, false, \"Löscht alle Elemente aus dieser Collection, die in c enthalten sind.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n    \r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IterableClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterable\", module, \"Interface mit Funktionalität zum iterieren (d.h. Durchlaufen aller Elemente)\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IteratorClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterator\", module);\r\n\r\n        let typeA: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeA.identifier = \"E\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ListClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"List\", module, \"Interface mit Methoden einer Liste (d.h. Anfügen von Elementen nur am Ende)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element der Liste an der Stelle index zurück. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n            this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class StackClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Stack\", module, \"Stack (Stapelspeicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n        let vectorType = <Klass>module.typeStore.getType(\"Vector\");\r\n\r\n        this.setBaseClass(vectorType);\r\n        this.typeVariables = vectorType.typeVariables;\r\n        let typeE = this.typeVariables[0].type;\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.add(r);\r\n\r\n                return r.value;\r\n\r\n            }, false, false, \"Pushed ein Element oben auf den Stack. Gibt das gerade gepushte Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            }, false, false, \"Nimmt das oberste Element vom Stack und gibt es zurück.\"));\r\n\r\n            this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek();\r\n\r\n            }, false, false, \"Gibt das oberste Element des Stacks zurück, nimmt es aber nicht vom Stack herunter.\"));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"search\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                let index = ah.indexOf(r);\r\n                return index == -1 ? index : ah.objectArray.length - index;\r\n\r\n            },\r\n            true, false, \"Gibt die Position des Objekts auf dem Stack zurück. Dabei hat das oberste Element den Index 1, das nächstunterste den Index 2 usw. . Falls sich das Objekt nicht auf dem Stack befindet, wird -1 zurückgegeben.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, TypeVariable, Interface } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\n\r\nexport class VectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector\", module, \"Liste mit Zugriff auf das n-te Element in konstanter Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"Vector\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert ein neues Vector-Objekt', true));\r\n\r\n            this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n            ]), iteratorType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n    \r\n                    return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n    \r\n                }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n    \r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index).value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index).value;\r\n\r\n                return null;\r\n\r\n            }, false, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, false, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class SetClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Set\", module, \"Interface mit Methoden eines Set, d.h. einer Menge, die jedes Element maximal einmal enthält\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set das Objekt o enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set alle Elemente der übergebenen Collection enthält.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class SetIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(MapHelper: SetHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"SetIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"SetIteratorHelper\"] = new SetIteratorHelper(MapHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"SetIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass SetIteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private MapHelper: SetHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = MapHelper.valueArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos - 1].value);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos + 1].value);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos++].value;\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos--].value;\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.MapHelper.valueArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class SetHelper {\r\n\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, boolean> = new Map(); // Maps key objects to index in keyArray/valueArray\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.valueArray.map(o => \"\" + o.value).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.valueArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    // Only for Set\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ret: boolean = false;\r\n        let ah: SetHelper | ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            for (let value of ah.valueArray) {\r\n                ret = ret || this.addToSet(value);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    addToSet(r: Value): boolean {\r\n        if (this.contains(r)) return false;\r\n\r\n        this.valueArray.push(r);\r\n        this.map.set(r.value, true);\r\n        return true;\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n\r\n        if(this.map.get(object.value) == null) return false;\r\n\r\n        for(let i = 0; i < this.valueArray.length; i++){\r\n            if(this.valueArray[i].value == object.value){\r\n                this.valueArray.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        this.map.delete(object.value);\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.map.get(object.value) != null;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class HashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashSet\", module, \"Set mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"HashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues HashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class LinkedHashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedHashSet\", module, \"Ein LinkedHashSet speichert jedes Element nur genau ein Mal.\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"LinkedHashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues LinkedHashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class QueueClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Queue\", module);\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class DequeClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Deque\", module, \"Interface für Liste mit zweiseitigem Zugriff (insbesondere Anfügen an beiden Enden)\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let QueueInterface = (<Interface>module.typeStore.getType(\"Queue\")).clone();\r\n        QueueInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(QueueInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge (Ende -> Anfang) durchläuft.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class LinkedListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedList\", module, \"Verkettete Liste\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let dequeInterface = (<Interface>module.typeStore.getType(\"Deque\")).clone();\r\n        dequeInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(dequeInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"LinkedList\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue LinkedList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"descending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge durchläuft (Ende -> Anfang).\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste am Ende ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.poll_or_null();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addFirst(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addLast(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeLast_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_first_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_last_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class ConsoleClass extends Klass {\r\n\r\n    constructor(module: Module){\r\n        super(\"Console\", module, \"Klasse zur Textausgabe in der Konsole.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod( new Method(\"log\", new Parameterlist([{identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false}]), null, \r\n                (parameters) => { \r\n                    // console.log(<string>(parameters[0].value)); \r\n                    module.main.getBottomDiv()?.console.$consoleTab.find('.jo_console-top').append(\"<div>\" + <string>(parameters[1].value) + \"</div>\"); \r\n                }, false, true));\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\n\r\ntype PrintCommand = {\r\n    text: string;\r\n    color: string;\r\n    newLine: boolean;\r\n}\r\n\r\nexport class PrintManager {\r\n\r\n    color: string = \"\";\r\n    lastSpan: string = \"\";\r\n    $lastSpan: JQuery<HTMLElement>;\r\n\r\n    $lastDiv: JQuery<HTMLElement>;\r\n    $outputDiv: JQuery<HTMLElement>;\r\n\r\n    maxLines: number = 2000;\r\n    $lines: JQuery<HTMLElement>[] = [];\r\n\r\n    newLines: number = 0;\r\n\r\n    printCommands: PrintCommand[] = [];\r\n\r\n    currentLinelength: number = 0;\r\n    beginOfLineState: boolean = true; // Spaces at begin of line are converted to &nbsp;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase) {\r\n        jQuery(() => {\r\n            this.$outputDiv = $runDiv.find('.jo_output');\r\n            this.clear();\r\n\r\n            let that = this;\r\n\r\n            let n: number = 0;\r\n\r\n            let dirty = false;\r\n            let lastPrinting = performance.now();\r\n\r\n            setInterval(() => {\r\n                if (that.printCommands.length > 0) {\r\n                    that.doPrinting();\r\n                    if (performance.now() - lastPrinting > 200) {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                    } else {\r\n                        dirty = true;\r\n                    }\r\n                    lastPrinting = performance.now();\r\n                }\r\n\r\n                if (n++ % 20 == 0 && dirty) {\r\n                    setTimeout(() => {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                        dirty = false;\r\n                    }, 200);\r\n                }\r\n\r\n            }, 50);\r\n\r\n\r\n        });\r\n    }\r\n\r\n    getGraphicsDiv():JQuery<HTMLElement> {\r\n        return this.$runDiv.find('.jo_graphics');\r\n    }\r\n\r\n    showProgramEnd() {\r\n        let $programEndDiv = this.$runDiv.find('.jo_run-programend');\r\n        $programEndDiv.show();\r\n        $programEndDiv.addClass('jo_programendkf');\r\n        setTimeout(() => {\r\n            $programEndDiv.removeClass('jo_programendkf');\r\n            $programEndDiv.hide();\r\n        }, 3000);\r\n    }\r\n\r\n    doPrinting() {\r\n\r\n        // If there are more than maxLines in next output batch: \r\n        // Delete surplus lines before printing them and empty output-div\r\n        if (this.newLines >= this.maxLines) {\r\n\r\n            this.$outputDiv.empty();\r\n\r\n            let i = this.printCommands.length - 1;\r\n            let nl = 0;\r\n\r\n            while (i >= 0) {\r\n\r\n                if (this.printCommands[i].newLine) {\r\n                    nl++;\r\n                    if (nl >= this.maxLines) {\r\n                        this.printCommands.splice(0, i + 1);\r\n                        break;\r\n                    }\r\n                }\r\n                i--;\r\n            }\r\n\r\n        }\r\n\r\n        this.newLines = 0;\r\n\r\n        // reopen last printed span-element\r\n        if(this.$lastSpan != null){\r\n            this.$lastSpan.remove();\r\n            if(this.lastSpan.endsWith(\"</span>\")) this.lastSpan = this.lastSpan.substring(0, this.lastSpan.length - 7);\r\n        }\r\n\r\n\r\n        for (let pc of this.printCommands) {\r\n\r\n            // replace spaces with &nbsp;'s\r\n            // pc.text = pc.text.replace(/ /g, \"&nbsp;\");\r\n\r\n\r\n            if (this.beginOfLineState && pc.text.startsWith(\" \")) {\r\n                let match = pc.text.match(/^( *)(.*)$/);\r\n                if (match[2].length > 0) this.beginOfLineState = false;\r\n            } else {\r\n                if (pc.text.length > 0) this.beginOfLineState = false;\r\n            }\r\n\r\n            pc.text = pc.text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n\r\n            if (pc.color == null) pc.color = \"var(--defaultOutputColor)\";\r\n\r\n            if (this.lastSpan == \"\" || this.color != pc.color) {\r\n                if (this.lastSpan != \"\") this.lastSpan += \"</span>\";      // new color => close old span\r\n                this.lastSpan += '<span style=\"color: ' + pc.color + '\">';\r\n                if(pc.newLine && pc.text == \"\") this.lastSpan += \"\\u200b\"; // makes empty lines possible; \\u200b is a space with 0 width but full height.\r\n                this.color = pc.color;\r\n            }\r\n\r\n            if (this.currentLinelength <= 10000) {\r\n                this.lastSpan += pc.text;\r\n                this.currentLinelength += pc.text.length;\r\n            }\r\n\r\n\r\n            if (pc.newLine) {\r\n                this.beginOfLineState = true;\r\n                if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n                this.$lastSpan = jQuery(this.lastSpan);\r\n                this.$lastDiv.append(this.$lastSpan);\r\n                \r\n                this.lastSpan = \"\";\r\n                this.$lastSpan = null;\r\n\r\n                this.$lastDiv = jQuery('<div></div>');\r\n\r\n                let $input = this.main.getInterpreter().inputManager.$input;\r\n                if($input != null){\r\n                    this.$lastDiv.insertBefore($input);\r\n                } else {\r\n                    this.$outputDiv.append(this.$lastDiv);\r\n                }\r\n\r\n                this.$lines.push(this.$lastDiv);\r\n                this.currentLinelength = 0;\r\n            }\r\n\r\n        }\r\n\r\n        if (this.lastSpan != \"\") {\r\n            if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n            this.$lastSpan = jQuery(this.lastSpan);\r\n            this.$lastDiv.append(this.$lastSpan);\r\n        }\r\n\r\n        if (this.$lines.length > this.maxLines * 1.5) {\r\n            let that = this;\r\n            let linesToDelete = that.$lines.length - that.maxLines;\r\n\r\n            let $linesToDelete = that.$lines.splice(0, linesToDelete);\r\n\r\n            for (let $line of $linesToDelete) {\r\n                $line.remove();\r\n            }\r\n\r\n        }\r\n\r\n        this.printCommands = [];\r\n    }\r\n\r\n    clear() {\r\n        this.$outputDiv.empty();\r\n        this.$lastDiv = jQuery('<div></div>');\r\n        this.$lines.push(this.$lastDiv);\r\n        this.$outputDiv.append(this.$lastDiv);\r\n        this.currentLinelength = 0;\r\n        this.color = \"\";\r\n        this.lastSpan = \"\";\r\n        this.printCommands = [];\r\n    }\r\n\r\n    print(text: string | null, color?: string|number) {\r\n        if (text == null) return;\r\n\r\n        if(typeof color == \"number\"){\r\n            color = color.toString(16);\r\n            while(color.length < 6) color = \"0\" + color;\r\n            color = \"#\" + color;\r\n        }\r\n\r\n        text = text.toString();\r\n        if (text.indexOf(\"\\n\") >= 0) {\r\n            let tList = text.split(\"\\n\");\r\n            for (let i = 0; i < tList.length; i++) {\r\n                let t = tList[i];\r\n                let newLine = i < tList.length - 1;\r\n                if (t == \"\" && i == tList.length - 1) continue;\r\n                this.printCommands.push({\r\n                    text: t,\r\n                    color: color,\r\n                    newLine: newLine\r\n                });\r\n                if (newLine) this.newLines++;\r\n            }\r\n        } else {\r\n            this.printCommands.push({\r\n                text: text,\r\n                color: color,\r\n                newLine: false\r\n            });\r\n        }\r\n    }\r\n\r\n    println(text: string | null, color?: string|number) {\r\n        if (text == null) text = \"\";\r\n        this.print(text + \"\\n\", color);\r\n    }\r\n\r\n}","import { Type, Method, Value } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType, charPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputManager {\r\n\r\n    $input: JQuery<HTMLInputElement>;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public readInput(method: Method, parameters: Value[], callback: (value: Value) => void){\r\n\r\n        let returnType = method.getReturnType();\r\n        let message = parameters[1].value;\r\n        let defaultValue = parameters.length == 3 ? parameters[2].value : null;\r\n\r\n        let printManager: PrintManager = this.main.getInterpreter().printManager;\r\n        if(message != null && message != \"\"){\r\n            printManager.beginOfLineState = true;\r\n            printManager.println(\"\\n\" + message);\r\n            printManager.doPrinting();\r\n        }\r\n\r\n        this.$input = jQuery('<input class=\"jo_newInput\" type=\"text\"/>');\r\n\r\n        let $od = printManager.$outputDiv;\r\n        $od.append(this.$input);\r\n\r\n        let dvt = defaultValue == null ? \"\" : defaultValue;\r\n        this.$input.val(dvt);\r\n\r\n        let that = this;\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').on('mousedown', (e)=>{\r\n        //     e.preventDefault();\r\n        //     that.onSubmit(returnType, callback);\r\n        // });\r\n        \r\n        this.$input.on('keydown', (e) => {\r\n            if(e.key == \"Enter\"){\r\n                that.onSubmit(returnType, callback);\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            that.$input.focus();\r\n        }, 200);\r\n\r\n        printManager.$outputDiv.on('mousedown.inputmanager', (e) => {\r\n            setTimeout(() => {\r\n                that.$input?.focus();\r\n            }, 200);\r\n        })\r\n\r\n    }\r\n\r\n    onSubmit(type: Type, callback: (value: Value) => void){\r\n        let v: string = <string>(this.$input.val());\r\n        let printManager = this.main.getInterpreter().printManager;\r\n\r\n        let valueAndError = this.parse(v, type);\r\n\r\n        if(valueAndError.error != null){\r\n            // jQuery('<div style=\"color: red\">' + valueAndError.error + '</div>').insertBefore(this.$input);\r\n            this.$input.detach();\r\n            printManager.println(valueAndError.error, \"#ff0000\");\r\n            printManager.doPrinting();\r\n            printManager.$outputDiv.append(this.$input);\r\n            this.$input[0].scrollIntoView();\r\n            this.$input.focus();\r\n            return;\r\n        }\r\n        \r\n        printManager.$outputDiv.off('mousedown.inputmanager');\r\n        printManager.println(v);\r\n        this.$input.off('keydown');\r\n        this.hide();\r\n\r\n        callback(valueAndError.value);\r\n\r\n    }\r\n\r\n    parse(v: string, type: Type):{value: Value, error: string} {\r\n\r\n        if(type == stringPrimitiveType){\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v.length == 0) return {error: \"Leere Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            if(v.length > 1) return {error: \"Zu lange Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v != \"true\" && v != \"false\") return {error: \"Erwartet wird true oder false.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v == \"true\", type: type}\r\n            }\r\n        }\r\n\r\n        v = v.replace(\",\", \".\");\r\n\r\n        let n = Number(v);\r\n\r\n        if(n == null){\r\n            return {error: \"Erwartet wird eine Zahl.\", value: null};\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(n != Math.round(n)) return {error: \"Erwartet wird eine ganze Zahl.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: Math.round(n), type: type}\r\n            }\r\n        }\r\n\r\n        return {\r\n            error: null,\r\n            value: {value: n, type: type}\r\n        }\r\n\r\n    }\r\n\r\n\r\n    hide(){\r\n\r\n        if(this.$input != null){\r\n            this.$input.remove();\r\n            this.$input = null;\r\n        }\r\n\r\n        // this.$runDiv.find('.jo_run-input').css('display', 'none');\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').off('mousedown');\r\n        \r\n        // this.$runDiv.find('.jo_run-input-input').off('keydown');\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box'); \r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: MainBase, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        if (id == \"speedControlHelper\" && helperHistory[\"speedControlHelperDone\"]) {\r\n            id = \"stepButtonHelper\";\r\n        }\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"folderButton\":\r\n                    text = `Mit diesem Button können Sie in der Liste der Workspaces Ordner anlegen. \r\n                    <ul>\r\n                    <li>Bestehende Workspaces lassen sich mit der Maus in Ordner ziehen.</li>\r\n                    <li>Wollen Sie einen Workspace in die oberste Ordnerebene bringen, so ziehen Sie ihn einfach auf den \"Workspaces\"-Balken.</li>\r\n                    <li>Über das Kontextmenü der Ordner lassen sich Workspaces und Unterordner anlegen.</li>\r\n                    </ul>`,\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"repositoryButton\":\r\n                    text = `Wenn der aktuelle Workspace mit einem Repository verknüft ist, erscheint hier der \"Synchronisieren-Button\". Ein Klick darauf öffnet einen Dialog, in dem die Dateien des Workspace mit denen des Repositorys abgeglichen werden können.`;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"speedControlHelper\":\r\n                    text = `Mit dem Geschwindigkeitsregler können  \r\n                            Sie einstellen, wie schnell das Programm abläuft. \r\n                            Bei Geschwindigkeiten bis 10 Steps/s wird \r\n                            während des Programmablaufs der Programzeiger gezeigt\r\n                            und die Anzeige der Variablen auf der linken \r\n                            Seite stets aktualisiert.`;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.speedControl.$grip;\r\n                    break;\r\n                case \"newFileHelper\":\r\n                    text = `Es gibt noch keine Programmdatei im Workspace. <br> Nutzen Sie den Button \r\n                        <span class='img_add-file-dark jo_inline-image'></span> um eine Programmdatei anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"newWorkspaceHelper\":\r\n                    text = `Es gibt noch keinen Workspace. <br> Nutzen Sie den Button\r\n                        <span class='img_add-workspace-dark jo_inline-image'></span> um einen Workspace anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"stepButtonHelper\":\r\n                    text = `Mit den Buttons \"Step over\"\r\n                        (<span class='img_step-over-dark jo_inline-image'></span>, Taste F8), \r\n                        \"Step into\" \r\n                        (<span class='img_step-into-dark jo_inline-image'></span>, Taste F7) und \r\n                        \"Step out\" \r\n                        (<span class='img_step-out-dark jo_inline-image'></span>, Taste F9)  \r\n                        können Sie das Programm schrittweise ausführen und sich nach jedem Schritt die Belegung der Variablen ansehen. <br>\r\n                        <ul><li><span class='img_step-over-dark jo_inline-image'></span> Step over führt den nächsten Schritt aus, insbesondere werden Methodenaufrufe in einem Schritt durchgeführt.</li>\r\n                        <li><span class='img_step-into-dark jo_inline-image'></span> Step into führt auch den nächsten Schritt aus, geht bei Methodenaufrufen aber in die Methode hinein und führt auch die Anweisungen innerhalb der Methode schrittweise aus.</li>\r\n                        <li><span class='img_step-out-dark jo_inline-image'></span> Befindet sich die Programmausführung innerhalb einer Methode, so bewirkt ein Klick auf Step out, dass der Rest der Methode ausgeführt wird und die Programmausführung erst nach der Aufrufstelle der Methode anhält.</li>\r\n                        </ul>\r\n                        `;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.$buttonStepOver;\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n                    $element = main.bottomDiv.console.$consoleTab.find('.jo_monaco-editor');\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class KeyboardTool {\r\n    \r\n    element: JQuery<any>;\r\n\r\n    pressedKeys: {[key: string]: boolean} = {};\r\n\r\n    keyPressedCallbacks: ((key: string) => void)[] = [];\r\n    keyUpCallbacks: ((key: string) => void)[] = [];\r\n    keyDownCallbacks: ((key: string) => void)[] = [];\r\n\r\n    constructor(element: JQuery<any>, private main: MainBase){\r\n        this.registerListeners(element);\r\n    }\r\n\r\n    unregisterListeners(){\r\n        this.element.off(\"keydown\");\r\n        this.element.off(\"keyup\");\r\n        this.element.off(\"keypressed\");\r\n    }\r\n\r\n    private registerListeners(element: JQuery<any>){\r\n        this.element = element;\r\n        let that = this;\r\n        element.on(\"keydown\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            // if(e.shiftKey) key = \"shift+\" + key;\r\n            // if(e.ctrlKey) key = \"ctrl+\" + key;\r\n            // if(e.altKey) key = \"alt+\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = true;\r\n\r\n            for(let kpc of that.keyDownCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // prevent <html>-Element from scrolling in embedded mode\r\n            if(this.main.isEmbedded() && this.main.getInterpreter().state == InterpreterState.running && !this.main.getMonacoEditor().hasTextFocus()){\r\n                if([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.key) >= 0)\r\n                e.preventDefault();\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        element.on(\"keyup\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(typeof key == \"undefined\") return;\r\n\r\n            // if(e.shiftKey) key = \"shift+\" + key;\r\n            // if(e.ctrlKey) key = \"ctrl+\" + key;\r\n            // if(e.altKey) key = \"alt+\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = false;\r\n\r\n            for(let kpc of that.keyUpCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // in ActionManager.init there is a \r\n            // if(that.main.isEmbedded && key == \" \"){\r\n            //     for(let kpc of that.keyPressedCallbacks){\r\n            //         kpc(key);\r\n            //     }    \r\n            // }\r\n\r\n            return true;\r\n        });\r\n        element.on(\"keyup\", (e) => {\r\n            let k = e.key;\r\n            if(e.shiftKey && k.length > 1){\r\n                k = \"[shift]+\" + k;\r\n            }\r\n            if(e.ctrlKey && k.length > 1){\r\n                k = \"[ctrl]+\" + k;\r\n            }\r\n            if(e.altKey && k.length > 1){\r\n                k = \"[alt]+\" + k;\r\n            }\r\n            for(let kpc of that.keyPressedCallbacks){\r\n                kpc(k);\r\n            }\r\n            return true;\r\n        });\r\n\r\n    }\r\n\r\n    isPressed(key: string){\r\n        if(key == null) return null;\r\n        return this.pressedKeys[key.toLowerCase()] == true;\r\n    }\r\n\r\n    unsubscribeAllListeners() {\r\n        this.keyPressedCallbacks = [];\r\n    }\r\n\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\n\r\nexport class GamepadTool {\r\n\r\n    gamepads: Gamepad[] = [];\r\n\r\n    constructor(){\r\n        let that = this;\r\n        window.addEventListener(\"gamepadconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad connected at index %d: %s. %d buttons, %d axes.\",\r\n              e.gamepad.index, e.gamepad.id,\r\n              e.gamepad.buttons.length, e.gamepad.axes.length);\r\n              if(that.gamepads.indexOf(e.gamepad) < 0){\r\n                  that.gamepads.push(e.gamepad);\r\n              }\r\n          });\r\n\r\n          window.addEventListener(\"gamepaddisconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad disconnected from index %d: %s\",\r\n              e.gamepad.index, e.gamepad.id);\r\n              let i = that.gamepads.indexOf(e.gamepad);\r\n              if(i >= 0){\r\n                that.gamepads.splice(i, 1);\r\n            }\r\n        });\r\n    }\r\n\r\n    isGamepadButtonPressed(gamepadIndex: number, buttonIndex: number): boolean{\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return false;\r\n        let button = gp.buttons[buttonIndex];\r\n        if(button){\r\n            // return typeof(button) == \"object\" ? button.pressed : (button == 1.0);\r\n            return button.pressed;\r\n        } else {return false;}\r\n    }\r\n\r\n    getGamepadAxisValue(gamepadIndex: number, axisIndex: number): number {\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return 0;\r\n        return gp.axes[axisIndex];\r\n    }\r\n\r\n    isGamepadConnected(gamepadIndex: number){\r\n        return navigator.getGamepads()[gamepadIndex] != null;\r\n    }\r\n\r\n}","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\n\r\nexport class FilledShapeDefaults {\r\n    static defaultFillColor: number = 0x8080ff;\r\n    static defaultFillAlpha: number = 1.0;\r\n\r\n    static defaultBorderColor: number = null;\r\n    static defaultBorderAlpha: number = 1.0;\r\n    static defaultBorderWidth: number = 10;\r\n\r\n    static defaultVisibility: boolean = true;\r\n\r\n    static initDefaultValues() {\r\n        FilledShapeDefaults.defaultFillColor = 0x8080ff;\r\n        FilledShapeDefaults.defaultFillAlpha = 1.0;\r\n\r\n        FilledShapeDefaults.defaultBorderColor = null;\r\n        FilledShapeDefaults.defaultBorderAlpha = 1.0;\r\n        FilledShapeDefaults.defaultBorderWidth = 10;\r\n\r\n        FilledShapeDefaults.defaultVisibility = true;\r\n    }\r\n\r\n    static setDefaultVisibility(visibility: boolean) {\r\n        FilledShapeDefaults.defaultVisibility = visibility;\r\n    }\r\n\r\n    static setDefaultBorder(width: number, color: string | number | RuntimeObject, alpha?: number) {\r\n\r\n        FilledShapeDefaults.defaultBorderWidth = width;\r\n\r\n        if (color instanceof RuntimeObject) {\r\n            color = (<ColorClassIntrinsicData>(color.intrinsicData)).hex;\r\n        }\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            FilledShapeDefaults.defaultBorderColor = c.color;\r\n            FilledShapeDefaults.defaultBorderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            FilledShapeDefaults.defaultBorderColor = color;\r\n            if (alpha != null) FilledShapeDefaults.defaultBorderAlpha = alpha;\r\n        }\r\n\r\n    }\r\n\r\n    static setDefaultFillColor(color: string | number | RuntimeObject, alpha?: number) {\r\n\r\n        if (color instanceof RuntimeObject) {\r\n            color = (<ColorClassIntrinsicData>(color.intrinsicData)).hex;\r\n        }\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            FilledShapeDefaults.defaultFillColor = c.color;\r\n            FilledShapeDefaults.defaultFillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            FilledShapeDefaults.defaultFillColor = color;\r\n            if (alpha != null) FilledShapeDefaults.defaultFillAlpha = alpha;\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\nimport { GroupClass, GroupHelper } from \"./Group.js\";\r\nimport { MouseListenerInterface } from \"./MouseListener.js\";\r\nimport { ShapeClass, ShapeHelper } from \"./Shape.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class WorldClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"World\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let groupType = <GroupClass>module.typeStore.getType(\"Group\");\r\n        let shapeType = <ShapeClass>module.typeStore.getType(\"Shape\");\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o, breite, höhe);  //new WorldHelper(breite, höhe, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an\", true));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o); // new WorldHelper(800, 600, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an. Das Koordinatensystem geht von 0 bis 800 in x-Richtung und von 0 - 600 in y-Richtung.\", true));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe wird als integer-Zahl erwartet. Am besten schreibt man sie als Hexadezimalzahl, also z.B. setBackgroundColor(0xff8080).\"', false));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe ist entweder eine vordefinierte Farbe (\"schwarz\", \"rot\", ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"color\", type: colorType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe ist entweder eine vordefinierte Farbe (\"schwarz\", \"rot\", ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-x, -y));\r\n\r\n            }, false, false, 'Verschiebt alle Objekte der Welt um x nach rechts und y nach unten.', false));\r\n\r\n        this.addMethod(new Method(\"follow\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"margin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let frameWidth: number = parameters[2].value;\r\n                let xMin: number = parameters[3].value;\r\n                let xMax: number = parameters[4].value;\r\n                let yMin: number = parameters[5].value;\r\n                let yMax: number = parameters[6].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                let moveX: number = 0;\r\n                let moveY: number = 0;\r\n\r\n                let shapeX: number = shapeHelper.getCenterX();\r\n                let shapeY: number = shapeHelper.getCenterY();\r\n\r\n                let outsideRight = shapeX - (wh.currentLeft + wh.currentWidth - frameWidth);\r\n                if (outsideRight > 0 && wh.currentLeft + wh.currentWidth < xMax) {\r\n                    moveX = -outsideRight;\r\n                }\r\n\r\n                let outsideLeft = (wh.currentLeft + frameWidth) - shapeX;\r\n                if (outsideLeft > 0 && wh.currentLeft > xMin) {\r\n                    moveX = outsideLeft;\r\n                }\r\n\r\n                let outsideBottom = shapeY - (wh.currentTop + wh.currentHeight - frameWidth);\r\n                if (outsideBottom > 0 && wh.currentTop + wh.currentHeight <= yMax) {\r\n                    moveY = -outsideBottom;\r\n                }\r\n\r\n                let outsideTop = (wh.currentTop + frameWidth) - shapeY;\r\n                if (outsideTop > 0 && wh.currentTop >= yMin) {\r\n                    moveY = outsideTop;\r\n                }\r\n\r\n                if (moveX != 0 || moveY != 0) {\r\n                    let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                    wh.stage.projectionTransform.identity();\r\n                    wh.stage.projectionTransform.translate(moveX, moveY);\r\n                    wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                    wh.computeCurrentWorldBounds();\r\n                    wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-moveX, -moveY));\r\n                }\r\n\r\n\r\n            }, false, false, 'Verschiebt die Welt so, dass das übergebene graphische Objekt (shape) sichtbar wird. Verschoben wird nur, wenn das Objekt weniger als frameWidth vom Rand entfernt ist und die Welt nicht über die gegebenen Koordinaten xMin, xMax, yMin und yMax hinausragt.', false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n\r\n                let angleRad = -angle / 180 * Math.PI;\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.rotate(angleRad);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach(\r\n                    (shape) => {\r\n                        shape.rotate(-angle, x, y);\r\n                    });\r\n\r\n            }, false, false, 'Rotiert die Welt um den angegebenen Winkel im Urzeigersinn. Drehpunkt ist der Punkt (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.scale(factor, factor);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.scale(1 / factor, x, y));\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"setCoordinateSystem\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                wh.stage.projectionTransform.identity();     // coordinate system (0/0) to (initialWidth/initialHeight)\r\n                wh.stage.projectionTransform.translate(-left, -top);\r\n                wh.stage.projectionTransform.scale(wh.initialWidth / width, wh.initialHeight / height);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => {\r\n                    shape.scale(width / wh.initialWidth, left, top);\r\n                    shape.move(left, top);\r\n                });\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setDefaultGroup\", new Parameterlist([\r\n            { identifier: \"group\", type: groupType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.defaultGroup = group == null ? null : group.intrinsicData[\"Actor\"];\r\n\r\n            }, false, false, 'Legt eine Gruppe fest, zu der ab jetzt alle neuen Objekte automatisch hinzugefügt werden. Falls null angegeben wird, werden neue Objekte zu keiner Gruppe automatisch hinzugefügt.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getDefaultGroup\", new Parameterlist([\r\n        ]), groupType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return wh.getDefaultGroup();\r\n\r\n            }, false, false, 'Gibt die Gruppe zurück, zu der aktuell alle neuen Objekte automatisch hinzugefügt werden. Falls gerade keine defaultGroup festgelegt ist, wird null zurückgegeben.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"addMouseListener\", new Parameterlist([\r\n            { identifier: \"listener\", type: mouseListenerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let listener: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.addMouseListener(listener);\r\n\r\n            }, false, false, 'Fügt einen neuen MouseListener hinzu, dessen Methoden bei Mausereignissen aufgerufen werden.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentWidth);\r\n\r\n            }, false, false, 'Gibt die \"Breite\" des Grafikbereichs zurück, genauer: die x-Koordinate am rechten Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentHeight);\r\n\r\n            }, false, false, 'Gibt die \"Höhe\" des Grafikbereichs zurück, genauer: die y-Koordinate am unteren Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getTop\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentTop);\r\n\r\n            }, false, false, 'Gibt die y-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLeft\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentLeft);\r\n\r\n            }, false, false, 'Gibt die x-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setCursor\", new Parameterlist([\r\n            { identifier: \"cursor\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n                let cursor: string = parameters[1].value;\r\n\r\n                wh.setCursor(cursor);\r\n\r\n            }, false, false, 'Ändert die Form des Mauscursors im gesamten Grafikbereich. Mögiche Werte: siehe https://developer.mozilla.org/de/docs/Web/CSS/cursor.', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(worldObject: RuntimeObject, breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n\r\n        if (wh != null) {\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.projectionTransform.scale(wh.width / breite, wh.width / höhe);\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n\r\n            return new WorldHelper(breite, höhe, this.module, worldObject);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport type MouseListenerShapeData = {\r\n    shapeHelper: ShapeHelper,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type MouseListenerData = {\r\n    listener: RuntimeObject,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type ActorData = {\r\n    actorHelper: ActorHelper,\r\n    method: Method\r\n}\r\n\r\n/**\r\n * @see https://javascript.plainenglish.io/inside-pixijs-projection-system-897872a3dc17\r\n */\r\nclass WorldContainer extends PIXI.Container {\r\n\r\n    projectionTransform: PIXI.Matrix;\r\n\r\n    constructor(public sourceFrame: PIXI.Rectangle, public destinationFrame: PIXI.Rectangle) {\r\n        super();\r\n        this.projectionTransform = new PIXI.Matrix();\r\n    }\r\n\r\n    render(renderer: PIXI.Renderer) {\r\n\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = this.projectionTransform;\r\n        renderer.renderTexture.bind(\r\n            renderer.renderTexture.current,\r\n            this.sourceFrame,\r\n            this.destinationFrame,\r\n        );\r\n        super.render(renderer);\r\n        renderer.batch.flush();\r\n\r\n        renderer.batch.flush();\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = null;\r\n        renderer.renderTexture.bind(null);\r\n    }\r\n}\r\n\r\n\r\nexport class WorldHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n    app: PIXI.Application;\r\n    stage: WorldContainer;\r\n\r\n    actActors: ActorData[] = [];\r\n    keyPressedActors: ActorData[] = [];\r\n    keyUpActors: ActorData[] = [];\r\n    keyDownActors: ActorData[] = [];\r\n    actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n    mouseListenerShapes: MouseListenerShapeData[] = [];\r\n    mouseListeners: MouseListenerData[] = [];\r\n\r\n    interpreter: Interpreter;\r\n    actorsFinished: boolean = true;\r\n    summedDelta: number = 0;\r\n\r\n    defaultGroup: GroupHelper;\r\n\r\n    initialWidth: number;\r\n    initialHeight: number;\r\n\r\n    $coordinateDiv: JQuery<HTMLElement>;\r\n\r\n    public scaledTextures: { [name: string]: PIXI.Texture } = {};\r\n\r\n\r\n    shapes: ShapeHelper[] = [];     // all shapes incl. groups that aren't part of a group\r\n\r\n    currentLeft: number;\r\n    currentTop: number;\r\n    currentWidth: number;\r\n    currentHeight: number;\r\n\r\n    shapesNotAffectedByWorldTransforms: ShapeHelper[] = [];\r\n\r\n    globalScale: number;\r\n\r\n    robotWorldHelper: any;\r\n\r\n    tickerFunction: (t: number) => void;\r\n\r\n    clearActorLists() {\r\n        this.actActors = [];\r\n        this.keyPressedActors = [];\r\n        this.keyUpActors = [];\r\n        this.keyDownActors = [];\r\n    }\r\n\r\n    constructor(public width: number, public height: number, private module: Module, public world: RuntimeObject) {\r\n\r\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n        PIXI.settings.TARGET_FPMS = 30.0 / 1000.0;\r\n\r\n        this.globalScale = 1;\r\n\r\n        while (height > 1000 || width > 2000) {\r\n            this.globalScale *= 2;\r\n            height /= 2;\r\n            width /= 2;\r\n        }\r\n\r\n        this.initialHeight = this.height;\r\n        this.initialWidth = this.width;\r\n\r\n        this.currentLeft = 0;\r\n        this.currentTop = 0;\r\n        this.currentWidth = this.width;\r\n        this.currentHeight = this.height;\r\n\r\n        this.interpreter = this.module?.main?.getInterpreter();\r\n\r\n        if (this.interpreter.processingHelper != null) {\r\n            this.interpreter.throwException(\"Die herkömmliche Grafikausgabe kann nicht zusammen mit Processing genutzt werden.\");\r\n        }\r\n\r\n        if (this.interpreter.worldHelper != null) {\r\n            this.interpreter.throwException(\"Es darf nur ein World-Objekt instanziert werden.\");\r\n        }\r\n\r\n        this.interpreter.worldHelper = this;\r\n\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n        this.$coordinateDiv = this.module.main.getRightDiv().$rightDiv.find(\".jo_coordinates\");\r\n\r\n        let f = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            if ($jo_tabs.length == 0) {\r\n                $jo_tabs = $graphicsDiv.parents(\".joe_rightDivInner\");\r\n            }\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n\r\n            if (height / width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': width / height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': height / width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', f);\r\n\r\n        f();\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        if (this.module.main.pixiApp) {\r\n            this.app = this.module.main.pixiApp;\r\n            this.app.renderer.resize(width, height);\r\n            this.app.renderer.backgroundColor = 0x0;\r\n        } else {\r\n            this.app = new PIXI.Application({\r\n                antialias: true,\r\n                width: width, height: height,\r\n                //resizeTo: $containerInner[0]\r\n            });\r\n            this.module.main.pixiApp = this.app;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.tickerFunction = (delta) => {\r\n            that.tick(PIXI.Ticker.shared.elapsedMS);\r\n        };\r\n\r\n        this.app.ticker.add(this.tickerFunction);\r\n        this.app.ticker.maxFPS = 30;\r\n\r\n        this.interpreter.timerExtern = true;\r\n\r\n        let sourceFrame = new PIXI.Rectangle(0, 0, this.width, this.height);\r\n        let destinationFrame = new PIXI.Rectangle(0, 0, width, height);\r\n        this.stage = new WorldContainer(sourceFrame, destinationFrame);\r\n        this.stage.projectionTransform = new PIXI.Matrix();\r\n\r\n        this.app.stage.addChild(this.stage);\r\n\r\n        this.$containerInner.append(this.app.view);\r\n\r\n        this.interpreter.keyboardTool.keyPressedCallbacks.push((key) => {\r\n            for (let kpa of that.keyPressedActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyUpCallbacks.push((key) => {\r\n            for (let kpa of that.keyUpActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyDownCallbacks.push((key) => {\r\n            for (let kpa of that.keyDownActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n\r\n            let eventType = listenerType;\r\n            if (window.PointerEvent) {\r\n                eventType = eventType.replace('mouse', 'pointer');\r\n            }\r\n\r\n            this.$containerInner.on(eventType, (e) => {\r\n                let x = width * e.offsetX / this.$containerInner.width();\r\n                let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n                let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n                this.stage.projectionTransform.applyInverse(p, p);\r\n                x = p.x;\r\n                y = p.y;\r\n\r\n                that.onMouseEvent(listenerType, x, y, e.button);\r\n\r\n                for (let listener of this.mouseListeners) {\r\n                    if (listener.types[listenerType] != null) {\r\n                        this.invokeMouseListener(listener, listenerType, x, y, e.button);\r\n                    }\r\n                }\r\n\r\n                if (listenerType == \"mousedown\") {\r\n                    let gngEreignisbehandlung = this.interpreter.gngEreignisbehandlungHelper;\r\n                    if (gngEreignisbehandlung != null) {\r\n                        gngEreignisbehandlung.handleMouseClickedEvent(x, y);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        let $coordinateDiv = this.$coordinateDiv;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$containerInner.on(mousePointer + \"move\", (e) => {\r\n            let x = width * e.offsetX / this.$containerInner.width();\r\n            let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n            let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n            this.stage.projectionTransform.applyInverse(p, p);\r\n            x = Math.round(p.x);\r\n            y = Math.round(p.y);\r\n            $coordinateDiv.text(`(${x}/${y})`);\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"enter\", (e) => {\r\n            $coordinateDiv.show();\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"leave\", (e) => {\r\n            $coordinateDiv.hide();\r\n        });\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    computeCurrentWorldBounds() {\r\n\r\n        let p1: PIXI.Point = new PIXI.Point(0, 0);\r\n        this.stage.projectionTransform.applyInverse(p1, p1);\r\n\r\n        let p2: PIXI.Point = new PIXI.Point(this.initialWidth, this.initialHeight);\r\n        this.stage.projectionTransform.applyInverse(p2, p2);\r\n\r\n        this.currentLeft = p1.x;\r\n        this.currentTop = p1.y;\r\n        this.currentWidth = Math.abs(p2.x - p1.x);\r\n        this.currentHeight = Math.abs(p2.y - p1.y);\r\n    }\r\n\r\n\r\n    hasActors(): boolean {\r\n        return this.actActors.length > 0 || this.keyPressedActors.length > 0 || this.keyUpActors.length > 0\r\n            || this.keyDownActors.length > 0 || this.mouseListeners.length > 0 || this.mouseListenerShapes.length > 0;\r\n    }\r\n\r\n    setAllHitpolygonsDirty() {\r\n        for (let shape of this.shapes) {\r\n            shape.setHitPolygonDirty(true);\r\n        }\r\n    }\r\n\r\n    setCursor(cursor: string) {\r\n        this.$containerInner.css('cursor', cursor);\r\n    }\r\n\r\n\r\n    actorsNotFinished: number = 0;\r\n    ticks: number = 0;\r\n    deltaSum: number = 0;\r\n\r\n    spriteAnimations: SpriteHelper[] = [];\r\n\r\n    tick(delta: any) {\r\n\r\n        if (this.interpreter != null) {\r\n            switch (this.interpreter.state) {\r\n                case InterpreterState.running:\r\n                    this.summedDelta += delta;\r\n                    for (let spriteHelper of this.spriteAnimations) {\r\n                        spriteHelper.tick(delta);\r\n                    }\r\n\r\n                    if (!this.actorsFinished) {\r\n                        this.actorsNotFinished++;\r\n                        break;\r\n                    }\r\n\r\n                    if (this.interpreter.pauseUntil != null) {\r\n                        break;\r\n                    }\r\n\r\n                    let first: boolean = true;\r\n\r\n                    for (let actorData of this.actActors) {\r\n\r\n                        let actorHelper = actorData.actorHelper;\r\n                        if (actorHelper.timerPaused || actorHelper.isDestroyed) continue;\r\n\r\n                        let program = actorData.method?.program;\r\n                        this.runActor(first, actorData, this.summedDelta);\r\n                        if (program != null && !actorData.actorHelper.isDestroyed) {\r\n                            first = false;\r\n                            this.actorsFinished = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case InterpreterState.done:\r\n                case InterpreterState.error:\r\n                case InterpreterState.not_initialized:\r\n                    this.clearActorLists();\r\n                    break;\r\n            }\r\n\r\n\r\n            this.summedDelta = 0;\r\n\r\n            if (this.interpreter.state == InterpreterState.running) {\r\n                if (this.actActors.length > 0) {\r\n                    this.interpreter.timerFunction(33.33, true, 0.5);\r\n                    //@ts-ignore\r\n                    if (this.interpreter.state == InterpreterState.running) {\r\n                        this.interpreter.timerStopped = false;\r\n                        this.interpreter.timerFunction(33.33, false, 0.08);\r\n                    }\r\n                } else {\r\n                    this.interpreter.timerFunction(33.33, false, 0.7);\r\n                }\r\n            }\r\n        }\r\n\r\n        while (this.actorHelpersToDestroy.length > 0) {\r\n\r\n            let actorHelper = this.actorHelpersToDestroy.pop();\r\n\r\n            for (let actorList of [this.keyPressedActors, this.keyUpActors, this.keyDownActors]) {\r\n                for (let i = 0; i < actorList.length; i++) {\r\n                    if (actorList[i].actorHelper === actorHelper) {\r\n                        actorList.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            for (let i = 0; i < this.mouseListenerShapes.length; i++) {\r\n                if (this.mouseListenerShapes[i].shapeHelper === actorHelper) {\r\n                    this.mouseListenerShapes.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.actActors.length; i++) {\r\n                if (this.actActors[i].actorHelper === actorHelper) {\r\n                    this.actActors.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            let displayObject = (<ShapeHelper>actorHelper).displayObject;\r\n            if (displayObject != null) {\r\n                displayObject.destroy();\r\n                (<ShapeHelper>actorHelper).displayObject = null;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setBackgroundColor(color: string | number | RuntimeObject) {\r\n\r\n        if (color instanceof RuntimeObject) {\r\n            color = (<ColorClassIntrinsicData>(color.intrinsicData)).hex;\r\n        }\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.app.renderer.backgroundColor = c.color;\r\n        } else {\r\n            this.app.renderer.backgroundColor = color;\r\n        }\r\n\r\n    }\r\n\r\n    runActorWhenKeyEvent(actorData: ActorData, key: string) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: stringPrimitiveType,\r\n                value: key\r\n            }\r\n        ];\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, null, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    runActor(first: boolean, actorData: ActorData, delta: number) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n        ];\r\n\r\n        if (actorData.method.getParameterCount() > 0) {\r\n            stackElements.push(\r\n                {\r\n                    type: doublePrimitiveType,\r\n                    value: delta\r\n                }\r\n\r\n            );\r\n        }\r\n\r\n        let that = this;\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, first ? (interpreter) => {\r\n                that.actorsFinished = true;\r\n                interpreter.timerStopped = true;\r\n            } : null, true);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n    cacheAsBitmap() {\r\n\r\n        let hasRobot = this.robotWorldHelper != null;\r\n\r\n        this.mouseListenerShapes = [];\r\n\r\n        let scaleMin = 1.0;\r\n        if (this.currentWidth * this.currentHeight > 2500000) scaleMin = Math.sqrt(2500000 / (this.currentWidth * this.currentHeight));\r\n        if (this.currentWidth * this.currentHeight < 1024 * 1024) scaleMin = Math.sqrt(1024 * 1024 / (this.currentWidth * this.currentHeight));\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: PIXI.SCALE_MODES.LINEAR,\r\n                width: Math.round(this.currentWidth * scaleMin),\r\n                height: Math.round(this.currentHeight * scaleMin)\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let transform = new PIXI.Matrix().scale(scaleMin, scaleMin);\r\n\r\n        setTimeout(() => {\r\n            if (!hasRobot) {\r\n                this.app.renderer.render(this.stage, {\r\n                    renderTexture: rt,\r\n                    transform: transform\r\n                });\r\n\r\n                setTimeout(() => {\r\n                    this.stage.children.forEach(c => c.destroy());\r\n                    this.stage.removeChildren();\r\n\r\n                    let sprite = new PIXI.Sprite(rt);\r\n                    sprite.localTransform.scale(this.globalScale, this.globalScale);\r\n                    // debugger;\r\n                    // sprite.localTransform.translate(0, rt.height);\r\n                    //@ts-ignore\r\n                    sprite.transform.onChange();\r\n                    // this.stage.projectionTransform = new PIXI.Matrix().scale(1, -1).translate(0, this.currentHeight);\r\n                    this.stage.projectionTransform = new PIXI.Matrix();\r\n                    this.stage.addChild(sprite);\r\n\r\n                }, 300);\r\n            }\r\n        }, 150);   // necessary to await Turtle's deferred rendering\r\n\r\n    }\r\n\r\n    destroyWorld() {\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.off(listenerType);\r\n        }\r\n        this.spriteAnimations = [];\r\n        this.app.ticker.remove(this.tickerFunction);\r\n\r\n        this.app.stage.children.forEach(c => c.destroy());\r\n        this.app.stage.removeChildren();\r\n\r\n        if (this.robotWorldHelper != null) {\r\n            this.robotWorldHelper.destroy();\r\n            this.robotWorldHelper = null;\r\n        }\r\n\r\n        jQuery(this.app.view).detach();\r\n\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.worldHelper = null;\r\n        this.$coordinateDiv.hide();\r\n\r\n        FilledShapeDefaults.initDefaultValues();\r\n    }\r\n\r\n    onMouseEvent(listenerType: string, x: number, y: number, button: number) {\r\n\r\n        switch (listenerType) {\r\n            case \"mousedown\":\r\n            case \"mouseup\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && (shapeHelper.containsPoint(x, y) || shapeHelper.trackMouseMove)) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button);\r\n                    }\r\n\r\n                }\r\n\r\n                break;\r\n            case \"mouseenter\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.containsPoint(x, y) && !shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = true;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mouseleave\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = false;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mousemove\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[\"mousemove\"] != null ||\r\n                        (listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) ||\r\n                        (listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject)\r\n                    ) {\r\n                        let containsPoint = shapeHelper.containsPoint(x, y);\r\n                        if ((shapeHelper.trackMouseMove || containsPoint) && listener.types[\"mousemove\"] != null) {\r\n                            this.invokeShapeMouseListener(listener, \"mousemove\", x, y, button);\r\n                        }\r\n                        if (containsPoint && listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseenter\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = true;\r\n                            });\r\n                        }\r\n                        if (!containsPoint && listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseleave\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = false;\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    invokeShapeMouseListener(listener: MouseListenerShapeData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        if (!listener.shapeHelper.reactToMouseEventsWhenInvisible &&\r\n            !listener.shapeHelper.displayObject.visible) return;\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.shapeHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    addMouseListener(listener: RuntimeObject) {\r\n\r\n        /*\r\n            If a shape is registered as MouseListener of the world-object, it gets all mouse-events twice. \r\n            => Deregister shape as mouseListenerShape and register it as mouse listener for the world object.\r\n        */\r\n        let index: number = this.mouseListenerShapes.findIndex((mls) => { return mls.shapeHelper.runtimeObject == listener });\r\n        if (index >= 0) {\r\n            this.mouseListenerShapes.splice(index, 1);\r\n        }\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>listener.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null && method.program.statements.length > 2 || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        listener: listener,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.mouseListeners.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    invokeMouseListener(listener: MouseListenerData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.listener;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    getDefaultGroup(): RuntimeObject {\r\n        return this.defaultGroup?.runtimeObject;\r\n    }\r\n\r\n}","import { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType, doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class Actor extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Actor\", module, \"Abstrakte Klasse mit überschreibbaren Methoden act (zur Implementierung eines Timers) und onKeyTyped, onKeyUp usw. zur Entgegennahme von Tastaturereignissen\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.isAbstract = true;\r\n\r\n        let methodSignatures: { signature: string, actorListIdentifier: string }[] = [\r\n            { signature: \"onKeyTyped(String)\", actorListIdentifier: \"keyPressedActors\" },\r\n            { signature: \"onKeyUp(String)\", actorListIdentifier: \"keyUpActors\" },\r\n            { signature: \"onKeyDown(String)\", actorListIdentifier: \"keyDownActors\" },\r\n            { signature: \"act()\", actorListIdentifier: \"actActors\" },\r\n            { signature: \"act(double)\", actorListIdentifier: \"actActors\" },\r\n        ];\r\n\r\n        this.postConstructorCallbacks = [\r\n            (r: RuntimeObject) => {\r\n\r\n                for (let ms of methodSignatures) {\r\n                    let method: Method = (<Klass>r.class).getMethodBySignature(ms.signature);\r\n\r\n                    if (method?.program != null \r\n                        // || method?.invoke != null\r\n                        ) {\r\n                        let ah: ActorHelper = <ActorHelper>r.intrinsicData['Actor'];\r\n                        ah.worldHelper[ms.actorListIdentifier].push({\r\n                            actorHelper: ah,\r\n                            method: method\r\n                        })\r\n                    }\r\n                }\r\n\r\n            }\r\n        ];\r\n\r\n        this.addMethod(new Method(\"Actor\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), this,\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let actorHelper = new ActorHelper(module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"Actor\"] = actorHelper;\r\n\r\n                // return o;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Der Konstruktor registriert den Actor beim Grafikfenster\", true));\r\n\r\n        this.addMethod(new Method(\"destroy\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Vernichtet das Grafikobjekt. Falls es in einem Group-Objekt enthalten ist, wird es vor dem Vernichten automatisch aus diesem entfernt.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade NICHT drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadButtonDown\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let buttonIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadConnected\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\r\n\r\n        this.addMethod(new Method(\"getGamepadAxisValue\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let axisIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\r\n\r\n            }, false, false, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"isDestroyed\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isDestroyed;\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Objekt bereits durch die Methode destroy() zerstört wurde.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWorld\", new Parameterlist([\r\n        ]), module.typeStore.getType(\"World\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let worldHelper = interpreter.worldHelper;\r\n                if (worldHelper == null) {\r\n                    let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n                    worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n                }        \r\n                return worldHelper.world;\r\n\r\n            }, false, false, \"Gibt das Welt-Objekt zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"stopActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // ah.timerPaused = true;\r\n                ah.setTimerPaused(true);\r\n\r\n                return;\r\n\r\n            }, false, false, \"Stoppt den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt.\", false));\r\n\r\n            this.addMethod(new Method(\"restartActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // sh.timerPaused = false;\r\n                sh.setTimerPaused(false);\r\n\r\n            }, false, false, \"Startet den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt erneut.\", false));\r\n\r\n            this.addMethod(new Method(\"isActing\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.timerPaused;\r\n\r\n            }, false, false, \"Gibt true zurück, wenn der periodische Aufruf der Methode act weiterhin erfolgt.\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n            { identifier: \"deltaTime\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null,\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt und wieder losgelassen hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste losgelassen hat.\", false));\r\n\r\n\r\n    }\r\n\r\n    registerWorldType() {\r\n        this.methods.filter(m => m.identifier == \"getWorld\")[0].returnType = this.module.typeStore.getType(\"World\");\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ActorHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n    isDestroyed: boolean = false;\r\n\r\n    timerPaused: boolean = false;\r\n\r\n    constructor(interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            // worldHelper = new WorldHelper(800, 600, interpreter.main.currentWorkspace.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            if(runtimeObject.intrinsicData[\"isGNG\"]){\r\n                worldHelper.setBackgroundColor(\"#e6e6e6\");\r\n            }\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n    }\r\n\r\n\r\n    isKeyDown(key: string): boolean {\r\n        return this.worldHelper.interpreter.keyboardTool.isPressed(key);\r\n    }\r\n\r\n    destroy() {\r\n        this.isDestroyed = true;\r\n        this.worldHelper.actorHelpersToDestroy.push(this);\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        if (this.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Es wurde die Methode \" + method + \" eines bereits mit destroy() zerstörten Grafikobjekts aufgerufen.\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class AlignmentClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Alignment\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"center\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Mögliche Ausrichtungen\"\r\n    }\r\n\r\n}","\r\nexport type Punkt = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport function gleich(a: number, b: number) {\r\n\r\n    return Math.abs(a - b) < 0.000000001;\r\n\r\n}\r\n\r\nexport function drehenUm(drehpunkt: Punkt, punkt: Punkt, winkelInGrad: number): Punkt {\r\n\r\n    let w = winkelInGrad / 180 * Math.PI;\r\n    let s = Math.sin(w);\r\n    let c = Math.cos(w);\r\n\r\n    let dx = punkt.x - drehpunkt.x;\r\n    let dy = punkt.y - drehpunkt.y;\r\n\r\n    let dxNeu = dx * c - dy * s;\r\n    let dyNeu = dx * s + dy * c;\r\n\r\n    return { x: drehpunkt.x + dxNeu, y: drehpunkt.y + dyNeu };\r\n\r\n}\r\n\r\n/**\r\n * Gibt true zurück, wenn die Strecke von (x0, y0) nach (x1, y1) die Strecke von\r\n * (x2, y2) nach (x3, y3) berührt.\r\n *\r\n * @param x0\r\n * @param y0\r\n * @param x1\r\n * @param y1\r\n * @param x2\r\n * @param y2\r\n * @param x3\r\n * @param y3\r\n * @return\r\n */\r\nexport function streckeSchneidetStrecke(p0: Punkt, p1: Punkt, p2: Punkt, p3: Punkt, schnittpunkt?:Punkt) {\r\n\r\n    let a1 = p1.x - p0.x;\r\n    let a2 = p1.y - p0.y;\r\n    let b1 = p2.x - p3.x;\r\n    let b2 = p2.y - p3.y;\r\n    let c1 = p2.x - p0.x;\r\n    let c2 = p2.y - p0.y;\r\n\r\n    let det = a1 * b2 - a2 * b1;\r\n\r\n    if (det * det < 0.000001) {\r\n        return false; // die Strecken sind so gut wie parallel\r\n    }\r\n\r\n    let det1 = c1 * b2 - c2 * b1;\r\n    let det2 = a1 * c2 - a2 * c1;\r\n\r\n    let s = det1 / det;\r\n    let t = det2 / det;\r\n\r\n    // liegt der Schnittpunkt innerhalb von beiden Strecken?\r\n    let schneidet = s >= 0 && s <= 1 && t >= 0 && t <= 1;\r\n\r\n    if(schneidet && schnittpunkt != null){\r\n        schnittpunkt.x = p0.x + s*(p1.x - p0.x);\r\n        schnittpunkt.y = p0.y + s*(p1.y - p0.y)\r\n        }\r\n\r\n    return schneidet;\r\n\r\n}\r\n\r\nexport function abstand(p1: Punkt, p2: Punkt) {\r\n\r\n    let dx = p2.x - p1.x;\r\n    let dy = p2.y - p1.y;\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n\r\n}\r\n\r\nexport function winkelGradZwischenPunkten(p1: Punkt, p2: Punkt): number {\r\n    let d = {\r\n        x: p2.x - p1.x,\r\n        y: p2.y - p1.y\r\n    }\r\n\r\n    return Math.atan2(d.y, d.x)/Math.PI*180;\r\n}\r\n\r\nexport function streckenzugEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n    for(let i = 0; i < punkte.length - 1; i++){\r\n        if(abstandPunktZuStrecke(punkte[i], punkte[i+1], punkt) < 0.000001){\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function polygonEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n\r\n    let inside = false;\r\n    let vertexCount = punkte.length;\r\n\r\n    for (let index = 0; index <= vertexCount - 1; index++) {\r\n\r\n        let i = index % vertexCount;\r\n        let j = (index - 1) % vertexCount;\r\n        if (j < 0) {\r\n            j += vertexCount;\r\n        }\r\n\r\n        if (((punkte[i].y > punkt.y) != (punkte[j].y > punkt.y)) &&\r\n            (punkt.x < (punkte[j].x - punkte[i].x) * (punkt.y - punkte[i].y) / (punkte[j].y - punkte[i].y) + punkte[i].x))\r\n            inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n\r\n}\r\n\r\nexport function kreisSchneidetStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt): boolean {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return false; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function schnittpunkteKreisStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt, schnittpunkte: Punkt[]): void {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t1 * (x2 - x1), y: y1 + t1 * (y2 - y1) });\r\n    }\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t2 * (x2 - x1), y: y1 + t2 * (y2 - y1) });\r\n    }\r\n\r\n    return;\r\n\r\n}\r\n\r\nexport function KreisBerührtPolygon(m: Punkt, r: number, punkte: Punkt[]) {\r\n\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        if (abstand(punkte[i], m) <= r) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    // Der Kreis enthält keinen Punkt des Vielecks. Enthält es den Mittelpunkt des Kreises?\r\n    if (polygonEnthältPunkt(punkte, m)) {\r\n        return true;\r\n    }\r\n\r\n    // schneidet die Kreislinie eine der Vielecksstrecken?\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        let p2 = punkte[(i + 1) % punkte.length];\r\n        if (kreisSchneidetStrecke(m, r, punkte[i], p2)) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport function polygonBerührtPolygon(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    // Nicht-exakte Lösung: prüfe, ob eines der Vielecke einen Eckpunkt des anderen enthält.\r\n    // Jede Kollision beginnt damit, dass ein Eckpunkt eines Polygons eine Seite des anderen schneidet.\r\n    // Falls oft genug geprüft wird, bleiben Kollisionen also nicht unerkannt.\r\n    for (let i = 0; i < punkte1.length; i++) {\r\n        if (polygonEnthältPunkt(punkte2, punkte1[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < punkte2.length; i++) {\r\n        if (polygonEnthältPunkt(punkte1, punkte2[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function steckenzugSchneidetStreckenzug(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    for(let i = 0; i < punkte1.length - 1; i++){\r\n        for(let j = 0; j < punkte2.length - 1; j++){\r\n            if(streckeSchneidetStrecke(punkte1[i], punkte1[i+1], punkte2[j], punkte2[j+1])){\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n\r\nexport function abstandPunktZuStrecke(a: Punkt, b: Punkt, p: Punkt){\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let q = dx*dx+dy*dy;\r\n\r\n    let lambda = ((-a.x+p.x)*dx + (-a.y+p.y)*dy)/q;\r\n\r\n    if(lambda < 0){\r\n        return abstand(a, p);\r\n    }\r\n\r\n    if(lambda > 1){\r\n        return abstand(b, p);\r\n    }\r\n\r\n    let fx = a.x + lambda * (b.x - a.x);\r\n    let fy = a.y + lambda * (b.y - a.y);\r\n\r\n    let s1 = p.x - fx;\r\n    let s2 = p.y - fy;\r\n\r\n    return Math.sqrt(s1*s1 + s2*s2);\r\n    \r\n}\r\n\r\nexport function abstandPunktZuGerade(a: Punkt, b: Punkt, p: Punkt) {\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let l = Math.sqrt(dy * dy + dx * dx);\r\n\r\n    if (l < 0.000000001) {\r\n        return abstand(a, p);\r\n    }\r\n\r\n    return Math.abs(dy * p.x - dx * p.y + b.x * a.y - b.y * a.x) / l;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygonExakt(punkte1: Punkt[], punkte2: Punkt[], istGeschlossen1: boolean = false,\r\n    istGeschlossen2: boolean = false, normaleDerBerührtenGerade1: Punkt = null) {\r\n\r\n    if(punkte1.length == 0 || punkte2.length == 0) return false;\r\n\r\n    let endIndex1 = punkte1.length + (istGeschlossen1 ? 0 : -1);\r\n    let endIndex2 = punkte2.length + (istGeschlossen2 ? 0 : -1);\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte1, punkte2[0])) {\r\n\r\n        if (normaleDerBerührtenGerade1 != null) {\r\n\r\n            let minAbstand = 100000;\r\n            let minIndex = 0;\r\n\r\n            for (let i = 0; i < punkte1.length - 1; i++) {\r\n                let j = (i + 1) % punkte1.length;\r\n\r\n                let d = abstandPunktZuStrecke(punkte1[i], punkte1[j], punkte2[0]);\r\n                if (d < minAbstand) {\r\n                    minAbstand = d;\r\n                    minIndex = 0;\r\n                }\r\n\r\n            }\r\n            let i2 = (minIndex + 1) % punkte1.length;\r\n            normaleDerBerührtenGerade1.y = punkte1[i2].x - punkte1[minIndex].x;\r\n            normaleDerBerührtenGerade1.x = -(punkte1[i2].y - punkte1[minIndex].y);\r\n\r\n        }\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte2, punkte1[0])) {\r\n        return true;\r\n    }\r\n\r\n    for (let i = 0; i < endIndex1; i++) {\r\n        let p1a = punkte1[i];\r\n        let p1b = punkte1[(i + 1) % punkte1.length];\r\n        for (let j = 0; j < endIndex2; j++) {\r\n            let p2a = punkte2[j];\r\n            let p2b = punkte2[(j + 1) % punkte2.length];\r\n\r\n            if (streckeSchneidetStrecke(p1a, p1b, p2a, p2b)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function länge(vektor: Punkt): number {\r\n    return Math.sqrt(vektor.x * vektor.x + vektor.y * vektor.y);\r\n}\r\n\r\nexport function einheitsVektor(vektor: Punkt): Punkt {\r\n    let l = länge(vektor);\r\n    return { x: vektor.x / l, y: vektor.y / l };\r\n}\r\n\r\n// export function normalenvektorBeiImpactEinesKreises(punkte: Punkt[], isMove: boolean[], k: Kreis): Punkt {\r\n\r\n//     let minAbstand = 100000;\r\n//     let minIndex = 0;\r\n//     let m = k.getMitte();\r\n\r\n//     for (let i = 0; i < punkte.length - 1; i++) {\r\n//         if (isMove != null && !isMove[i]) {\r\n//             let j = (i + 1) % punkte.length;\r\n\r\n//             let d = abstandPunktZuStrecke(punkte[i], punkte[j], m);\r\n//             if (d < minAbstand) {\r\n//                 minAbstand = d;\r\n//                 minIndex = i;\r\n//             }\r\n\r\n//             // console.log(\"\" + i + \": (\" + punkte[i].x + \",\" + punkte[i].y + \")->(\" + punkte[j].x + \",\" + punkte[j].y + \"): \" + d);\r\n//         }\r\n//     }\r\n//     let i2 = (minIndex + 1) % punkte.length;\r\n\r\n//     // let v = {x: punkte[i2].x - punkte[minIndex].x, y: punkte[i2].y - punkte[minIndex].y};\r\n//     let am = { x: m.x - punkte[minIndex].x, y: m.y - punkte[minIndex].y };\r\n\r\n//     let n = {\r\n//         y: punkte[i2].x - punkte[minIndex].x,\r\n//         x: -(punkte[i2].y - punkte[minIndex].y)\r\n//     };\r\n\r\n//     let sp = skalarprodukt(n, am);\r\n//     if (sp > 0) {\r\n//         return n;\r\n//     } else {\r\n//         return { x: -n.x, y: -n.y };\r\n//     }\r\n\r\n// }\r\n\r\n// export function normalenvektorBeiImpactAufKreis(punkte: Punkt[], k: Kreis): Punkt {\r\n\r\n//     let schnittpunkte = [];\r\n//     let m = k.getMitte();\r\n//     let r = k.getRadius();\r\n\r\n//     for (let i = 0; i < punkte.length; i++) {\r\n//         let j = (i + 1) % punkte.length;\r\n//         schnittpunkteKreisStrecke(m, r, punkte[i], punkte[j], schnittpunkte);\r\n//     }\r\n\r\n//     if (schnittpunkte.length == 0) {\r\n//         return {\r\n//             x: punkte[0].x - m.x, y: punkte[0].y - m.y\r\n//         }\r\n//     }\r\n\r\n//     let schwerpunkt = { x: 0, y: 0 };\r\n//     for (let p of schnittpunkte) {\r\n//         schwerpunkt.x += p.x;\r\n//         schwerpunkt.y += p.y;\r\n//     }\r\n//     schwerpunkt.x /= punkte.length;\r\n//     schwerpunkt.y /= punkte.length;\r\n\r\n//     return {\r\n//         x: schwerpunkt.x - m.x,\r\n//         y: schwerpunkt.y - m.y\r\n//     }\r\n\r\n// }\r\n\r\nexport function skalarprodukt(v1: Punkt, v2: Punkt) {\r\n    return v1.x * v2.x + v1.y * v2.y;\r\n}\r\n\r\n\r\nexport function zufall(von: number, bis: number){\r\n    return Math.random()*(bis - von) + von;\r\n}\r\n\r\nexport function intZufall(von: number, bis: number){\r\n    return Math.trunc(Math.random()*(bis - von + 1 - 0.00000001) + von);\r\n}\r\n\r\nexport function vektorVonPolarkoordinaten(winkelGrad: number, länge: number){\r\n    let winkel = winkelGrad/180*Math.PI;\r\n    return {\r\n        x: länge * Math.cos(winkel),\r\n        y: länge * Math.sin(winkel)\r\n    }\r\n}\r\n\r\nexport function farbeAusRGB(rot: number, grün: number, blau: number):number{\r\n    return blau + 256 * (rot + 256 * grün);\r\n}","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, booleanPrimitiveType, DoublePrimitiveType, stringPrimitiveType, nullType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { WorldHelper, MouseListenerShapeData } from \"./World.js\";\r\nimport { Punkt, polygonEnthältPunkt, polygonBerührtPolygon, polygonBerührtPolygonExakt } from \"../../tools/MatheTools.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { GroupHelper, GroupClass } from \"./Group.js\";\r\nimport { CircleHelper } from \"./Circle.js\";\r\nimport { TurtleHelper } from \"./Turtle.js\";\r\nimport { Enum, EnumInfo } from \"../../compiler/types/Enum.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\n\r\nexport class ShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Shape\", module, \"Basisklasse für alle graphischen Objekte die verschoben, skaliert und gedreht werden können\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Actor\"));\r\n        this.isAbstract = true;\r\n\r\n        // let matrixType = new ArrayType(doublePrimitiveType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n        let directionType = <Enum>(<any>module.typeStore.getType(\"Direction\"));\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n\r\n        this.addAttribute(new Attribute(\"angle\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.angle;\r\n\r\n            }, false, Visibility.protected, true, \"Richtung\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerX\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterX();\r\n\r\n            }, false, Visibility.protected, true, \"X-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerY\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterY();\r\n\r\n            }, false, Visibility.protected, true, \"Y-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        // this.addAttribute(new Attribute(\"transformation\", matrixType,\r\n        //     (value) => {\r\n\r\n        //         let rto: RuntimeObject = value.object;\r\n        //         let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n        //         if (helper == null || helper.isDestroyed || helper.displayObject.transform == null) {\r\n        //             value.value = null;\r\n        //             return;\r\n        //         }\r\n\r\n        //         let matrix = helper.displayObject.localTransform.toArray(false);\r\n\r\n        //         if (value.value == null) {\r\n        //             value.value = [];\r\n\r\n        //             for (let n of matrix) {\r\n        //                 value.value.push({\r\n        //                     type: doublePrimitiveType,\r\n        //                     value: n\r\n        //                 });\r\n        //             }\r\n        //         } else {\r\n        //             let i: number = 0;\r\n        //             for (let n of matrix) {\r\n        //                 value.value[i++].value = n;\r\n        //             }\r\n        //         }\r\n\r\n        //     }, false, Visibility.protected, true, \"Transformationsmatrix\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg, centerX, centerY);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist (centerX, centerY).\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist der 'Mittelpunkt' des Objekts\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, centerX, centerY);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der Punkt (centerX, centerY)\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"isOutsideView\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"isOutsideView\")) return;\r\n\r\n                return sh.isOutsideView();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn sich die Bounding Box des Objekts außerhalb des sichtbaren Bereichs befindet. \", false));\r\n\r\n        this.addMethod(new Method(\"getCenterX\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterX\")) return;\r\n\r\n                return sh.getCenterX();\r\n\r\n            }, false, false, \"Gibt die x-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getCenterY\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterY\")) return;\r\n\r\n                return sh.getCenterY();\r\n\r\n            }, false, false, \"Gibt die y-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAngle\")) return;\r\n\r\n                return sh.angle;\r\n\r\n            }, false, false, \"Gibt den Winkel des Grafikobjekts in Grad zurück. Winkel == 0 bedeutet: dieselbe Richtung wie zum Zeipunkt der Instanzierung des Objekts. Positive Winkelzunahme bedeutet Rechtsdrehung.\", false));\r\n\r\n        this.addMethod(new Method(\"containsPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"containsPoint\")) return;\r\n\r\n                return sh.containsPoint(x, y);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt den Punkt (x, y) enthält.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWith\", new Parameterlist([\r\n            { identifier: \"object\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der Parameter der Methode collidesWith darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWith\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode collidesWith als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.collidesWith(sh1);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt und das andere Grafikobjekt kollidieren.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWithAnyShape\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWithAnyShape\")) return;\r\n\r\n                return sh.collidesWithAnyShape();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt mit irgendeinem anderen Grafikobjekt kollidiert.\", false));\r\n\r\n        this.addMethod(new Method(\"moveBackFrom\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"keepColliding\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let keepColliding: boolean = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode moveBackFrom darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"moveBackFrom\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode moveBackFrom als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                sh.moveBackFrom(sh1, keepColliding);\r\n\r\n            }, false, false, \"Rückt das Objekt entlang der letzten durch move vorgegebenen Richtung zurück, bis es das übergebene Objekt gerade noch (keepColliding == true) bzw. gerade nicht mehr (keepColliding == false) berührt.\", false));\r\n\r\n        this.addMethod(new Method(\"directionRelativeTo\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), directionType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode directionRelativeTo darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"directionRelativeTo\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode directionRelativeTo als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.directionRelativeTo(sh1, directionType);\r\n\r\n            }, false, false, \"Gibt die Richtung (top, right, bottom oder left) zurück, in der das graphische Objekt relativ zum übergebenen graphischen Objekt steht.\", false));\r\n\r\n        this.addMethod(new Method(\"moveTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"moveTo\")) return;\r\n\r\n                sh.move(x - sh.getCenterX(), y - sh.getCenterY());\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt so, dass sich sein 'Mittelpunkt' an den angegebenen Koordinaten befindet.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenter\")) return;\r\n\r\n                sh.defineCenter(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenterRelative\", new Parameterlist([\r\n            { identifier: \"xRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenterRelative\")) return;\r\n\r\n                sh.defineCenterRelative(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dabei bedeutet (XRel/YRel) = (0/0) die linke obere Ecke der Bounding Box des Objekts, (XRel/YRel) = (1/1) die rechte untere Ecke. Defaultwert ist (XRel/YRel) = (0.5/0.5), also der Diagonalenschnittpunkt der Bounding Box. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\\n\\nVORSICHT: Diese Methode arbeitet nicht mehr korrekt, wenn das Objekt schon gedreht wurde!\", false));\r\n\r\n        this.addMethod(new Method(\"setAngle\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let angleDeg: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setAngle\")) return;\r\n\r\n                sh.rotate(angleDeg - sh.angle);\r\n\r\n            }, false, false, \"Dreht das Objekt zur angegebenen Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"setDefaultVisibility\", new Parameterlist([\r\n            { identifier: \"visibility\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let visibility: boolean = parameters[1].value;\r\n\r\n                FilledShapeDefaults.setDefaultVisibility(visibility);\r\n\r\n            }, false, true, 'Setzt den Standardwert für das Attribut \"visible\". Dieser wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt instanziert wird.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setVisible\", new Parameterlist([\r\n            { identifier: \"visible\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let visible: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setVisible\")) return;\r\n\r\n                sh.setVisible(visible);\r\n\r\n            }, false, false, \"Macht das Grafikobjekt sichtbar (visible == true) bzw. unsichtbar (visible == false).\", false));\r\n\r\n        this.addMethod(new Method(\"setStatic\", new Parameterlist([\r\n            { identifier: \"isStatic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let isStatic: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setStatic\")) return;\r\n\r\n                sh.setStatic(isStatic);\r\n\r\n            }, false, false, \"setStatic(true) hat zur Folge, dass die Ansicht des Objekts durch Transformationen des World-Objekts nicht verändert wird.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste nach unten drückt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste loslässt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und bewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht. Die Farbe wird als int-Wert angegeben, praktischerweise hexadezimal, also z.B. tint(0x303030).', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"color\", type: colorType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: RuntimeObject = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht. Die Farbe wird als int-Wert angegeben, praktischerweise hexadezimal, also z.B. tint(0x303030).', false));\r\n\r\n\r\n        this.addMethod(new Method(\"startTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = true;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt JEDE Bewegung des Mauszeigers (auch wenn sich dieser außerhalb des Objekts befindet) ein MouseMove-Ereignis für dieses Objekt auslöst. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"stopTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = false;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt nur noch dann Bewegungen des Mauszeigers ein MouseMove-Ereignis für dieses Objekt auslösen, wenn sich der Mauszeiger über dem Objekt befindet. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"reactToMouseEventsWhenInvisible\", new Parameterlist([\r\n            { identifier: \"react\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let react: boolean = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.reactToMouseEventsWhenInvisible = react;\r\n\r\n            }, false, false, 'Legt fest, ob das Objekt auf Mausevents (buttondown, mouse move, ...) reagiert, wenn es unsichtbar ist.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"defineDirection\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let direction: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"defineDirection\")) return;\r\n\r\n                sh.directionRad = direction / 180 * Math.PI;\r\n\r\n            }, false, false, 'Setzt die Blickrichtung des graphischen Objekts. Dies ist die Richtung, in die es durch Aufruf der Methode forward bewegt wird. \\nBemerkung: die Methode rotate ändert auch die Blickrichtung!', false));\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"distance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let distance: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(distance);\r\n\r\n            }, false, false, 'Bewegt das Objekt um die angegebene Länge in Richtung seiner Blickrichtung.\\nBemerkung: Die Blickrichtung kann mit defineDirection gesetzt werden.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, true, false, 'Erstellt eine Kopie des Grafikobjekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"bringToFront\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"bringToFront\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"sendToBack\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"sendToBack\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"getHitPolygon\", new Parameterlist([\r\n        ]), new ArrayType(vector2Class),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHitPolygon\")) return;\r\n\r\n                return sh.getHitPolygon(vector2Class);\r\n\r\n            }, false, false, \"Gibt ein Array zurück, das die vier Eckpunkte des Hit-Polygons in Form von Vector2-Ortsvektoren enthält. Bei den Klassen Rectangle, Triangle und Polygon sind dies die Eckpunkte.\", false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class ShapeHelper extends ActorHelper {\r\n\r\n    displayObject: PIXI.DisplayObject;\r\n\r\n    belongsToGroup: GroupHelper;\r\n\r\n    centerXInitial: number;\r\n    centerYInitial: number;\r\n\r\n    angle: number = 0;\r\n\r\n    hitPolygonInitial: Punkt[] = null;\r\n    hitPolygonTransformed: Punkt[] = null;\r\n    hitPolygonDirty = true;\r\n\r\n    reactToMouseEventsWhenInvisible: boolean = false;\r\n\r\n    mouseLastSeenInsideObject: boolean = false;\r\n\r\n    trackMouseMove: boolean = false;\r\n\r\n    scaleFactor: number = 1.0;\r\n\r\n    directionRad: number = 0;\r\n\r\n    lastMoveDx: number = 0;\r\n    lastMoveDy: number = 0;\r\n\r\n    copyFrom(shapeHelper: ShapeHelper) {\r\n\r\n        this.centerXInitial = shapeHelper.centerXInitial;\r\n        this.centerYInitial = shapeHelper.centerYInitial;\r\n\r\n        if (shapeHelper.hitPolygonInitial != null) {\r\n            this.hitPolygonInitial = [];\r\n            for (let p of shapeHelper.hitPolygonInitial) this.hitPolygonInitial.push(Object.assign({}, p));\r\n        }\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.hitPolygonDirty = shapeHelper.hitPolygonDirty;\r\n        this.reactToMouseEventsWhenInvisible = shapeHelper.reactToMouseEventsWhenInvisible;\r\n        this.mouseLastSeenInsideObject = shapeHelper.mouseLastSeenInsideObject;\r\n\r\n        this.displayObject.localTransform.copyFrom(shapeHelper.displayObject.transform.localTransform);\r\n        this.displayObject.updateTransform();\r\n\r\n    }\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n\r\n        super(interpreter, runtimeObject);\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerShapeData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>runtimeObject.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        shapeHelper: this,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.worldHelper.mouseListenerShapes.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n        if (this.worldHelper.defaultGroup == null) {\r\n            this.worldHelper.shapes.push(this);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        this.hitPolygonDirty = dirty;\r\n    }\r\n\r\n    bringOnePlaneFurtherToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index < highestIndex) {\r\n            container.setChildIndex(this.displayObject, index + 1);\r\n        }\r\n    }\r\n\r\n    bringOnePlaneFurtherToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index > 0) {\r\n            container.setChildIndex(this.displayObject, index - 1);\r\n        }\r\n    }\r\n\r\n    bringToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.setChildIndex(this, highestIndex);\r\n        } else {\r\n            container.setChildIndex(this.displayObject, highestIndex);\r\n        }\r\n    }\r\n\r\n    sendToBack() {\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.setChildIndex(this, 0);\r\n        } else {\r\n            let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n            container.setChildIndex(this.displayObject, 0);\r\n        }\r\n    }\r\n\r\n    addToDefaultGroupAndSetDefaultVisibility() {\r\n\r\n        this.displayObject.visible = FilledShapeDefaults.defaultVisibility;\r\n\r\n        if (this.worldHelper.defaultGroup != null) {\r\n            this.runtimeObject.intrinsicData[\"Actor\"] = this;\r\n            let groupHelper = <GroupHelper>this.worldHelper.defaultGroup;\r\n            groupHelper.add(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    tint(color: string | number | RuntimeObject) {\r\n        let c: number;\r\n        if (color instanceof RuntimeObject) {\r\n            color = (<ColorClassIntrinsicData>(color.intrinsicData)).hex;\r\n        }\r\n        if (typeof color == 'string') {\r\n            c = ColorHelper.parseColorToOpenGL(color).color;\r\n        } else {\r\n            c = color;\r\n        }\r\n        //@ts-ignore\r\n        if (this.displayObject.tint) {\r\n            //@ts-ignore\r\n            this.displayObject.tint = c;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n\r\n        this.displayObject.visible = visible;\r\n    }\r\n\r\n    collidesWithAnyShape(): boolean {\r\n        this.displayObject.updateTransform();\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        for (let shapeHelper of this.worldHelper.shapes) {\r\n            if (this == shapeHelper) continue;\r\n\r\n            if (shapeHelper[\"shapes\"] || shapeHelper[\"turtle\"]) {\r\n                if (shapeHelper.collidesWith(this)) {\r\n                    return true;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (this[\"turtle\"]) {\r\n                if (this.collidesWith(shapeHelper)) {\r\n                    return true;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            let bb = this.displayObject.getBounds();\r\n            let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n            if (bb.left > bb1.right || bb1.left > bb.right) continue;\r\n\r\n            if (bb.top > bb1.bottom || bb1.top > bb.bottom) continue;\r\n\r\n            // boundig boxes collide, so check further:\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n            // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n            if (polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n\r\n        // if(!(this instanceof TurtleHelper) && (shapeHelper instanceof TurtleHelper)){\r\n        if (this[\"lineElements\"] == null && (shapeHelper[\"lineElements\"] != null)) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.displayObject == null || shapeHelper.displayObject == null) return;\r\n\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        return polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true);\r\n\r\n    }\r\n\r\n    directionRelativeTo(shapeHelper: ShapeHelper, directionType: Enum) {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        let dx1 = bb1.left - bb.right;  // positive if left\r\n        let dx2 = bb.left - bb1.right;  // positive if right\r\n\r\n        let dy1 = bb1.top - bb.bottom;  // positive if top\r\n        let dy2 = bb.top - bb1.bottom;  // positive if bottom\r\n\r\n        let enuminfo = directionType.enumInfoList;\r\n        let pairs: { distance: number, ei: EnumInfo }[] = [];\r\n\r\n        if (this.lastMoveDx > 0) {\r\n            pairs.push({ distance: dx1, ei: enuminfo[3] });\r\n        } else if (this.lastMoveDx < 0) {\r\n            pairs.push({ distance: dx2, ei: enuminfo[1] });\r\n        }\r\n\r\n        if (this.lastMoveDy > 0) {\r\n            pairs.push({ distance: dy1, ei: enuminfo[0] });\r\n        } else if (this.lastMoveDy < 0) {\r\n            pairs.push({ distance: dy2, ei: enuminfo[2] });\r\n        }\r\n\r\n        if (pairs.length == 0) {\r\n            pairs = [\r\n                { distance: dx1, ei: enuminfo[3] },\r\n                { distance: dx2, ei: enuminfo[1] },\r\n                { distance: dy1, ei: enuminfo[0] },\r\n                { distance: dy2, ei: enuminfo[2] }\r\n            ]\r\n        }\r\n\r\n\r\n        let max = pairs[0].distance;\r\n        let ei = pairs[0].ei;\r\n        for (let i = 1; i < pairs.length; i++) {\r\n            if (pairs[i].distance > max) {\r\n                max = pairs[i].distance;\r\n                ei = pairs[i].ei;\r\n            }\r\n        }\r\n\r\n        return ei.object;\r\n    }\r\n\r\n\r\n    moveBackFrom(sh1: ShapeHelper, keepColliding: boolean) {\r\n\r\n        // subsequent calls to move destroy values in this.lastMoveDx and this.lastMoveDy, so:\r\n        let lmdx = this.lastMoveDx;\r\n        let lmdy = this.lastMoveDy;\r\n\r\n        let length = Math.sqrt(lmdx * lmdx + lmdy * lmdy);\r\n        if (length < 0.001) return;\r\n\r\n        if (!this.collidesWith(sh1)) return;\r\n\r\n        let parameterMax = 0;       // collision with this parameter\r\n        this.move(-lmdx, -lmdy);\r\n\r\n        let currentParameter = -1;  // move to parameterMin\r\n\r\n        while (this.collidesWith(sh1)) {\r\n            parameterMax = currentParameter;    // collision at this parameter\r\n            let newParameter = currentParameter * 2;\r\n            this.move(lmdx * (newParameter - currentParameter), lmdy * (newParameter - currentParameter));\r\n            currentParameter = newParameter;\r\n            if ((currentParameter + 1) * length < -100) {\r\n                this.move(lmdx * (-1 - currentParameter), lmdy * (-1 - currentParameter));\r\n                return;\r\n            }\r\n        }\r\n        let parameterMin = currentParameter;\r\n\r\n        let isColliding: boolean = false;\r\n        // Situation now: no collision at parameterMin == currentParameter, collision at parameterMax\r\n        while ((parameterMax - parameterMin) * length > 1) {\r\n            let np = (parameterMax + parameterMin) / 2;\r\n            this.move(lmdx * (np - currentParameter), lmdy * (np - currentParameter));\r\n            if (isColliding = this.collidesWith(sh1)) {\r\n                parameterMax = np;\r\n            } else {\r\n                parameterMin = np;\r\n            }\r\n            currentParameter = np;\r\n        }\r\n\r\n        if (keepColliding && !isColliding) {\r\n            this.move(lmdx * (parameterMax - currentParameter), lmdy * (parameterMax - currentParameter));\r\n        } else if (isColliding && !keepColliding) {\r\n            this.move(lmdx * (parameterMin - currentParameter), lmdy * (parameterMin - currentParameter));\r\n        }\r\n\r\n        this.lastMoveDx = lmdx;\r\n        this.lastMoveDy = lmdy;\r\n    }\r\n\r\n\r\n\r\n    containsPoint(x: number, y: number) {\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n    }\r\n\r\n    transformHitPolygon() {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n\r\n        this.hitPolygonTransformed = [];\r\n        let m = this.displayObject.transform.worldTransform;\r\n        for (let p of this.hitPolygonInitial) {\r\n            this.hitPolygonTransformed.push({\r\n                x: (m.a * p.x) + (m.c * p.y) + m.tx,\r\n                y: (m.b * p.x) + (m.d * p.y) + m.ty\r\n            });\r\n        }\r\n        this.setHitPolygonDirty(false);\r\n\r\n    }\r\n\r\n    isOutsideView() {\r\n        let bounds = this.displayObject.getBounds(true);\r\n        let wh = this.worldHelper;\r\n        return bounds.right < wh.currentLeft || bounds.left > wh.currentLeft + wh.currentWidth\r\n            || bounds.bottom < wh.currentTop || bounds.top > wh.currentTop + wh.currentHeight;\r\n    }\r\n\r\n    defineCenter(x: number, y: number) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n    }\r\n\r\n    defineCenterRelative(x: number, y: number) {\r\n        let bounds = this.displayObject.getBounds(false);\r\n        this.defineCenter(bounds.left + bounds.width * x, bounds.top + bounds.height * y);\r\n    }\r\n\r\n    move(dx: number, dy: number) {\r\n\r\n        if (dx != 0 || dy != 0) {\r\n            this.lastMoveDx = dx;\r\n            this.lastMoveDy = dy;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(dx, dy);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n    }\r\n\r\n    forward(distance: number) {\r\n        let dx = distance * Math.cos(this.directionRad);\r\n        let dy = -distance * Math.sin(this.directionRad);\r\n        this.move(dx, dy);\r\n    }\r\n\r\n    rotate(angleInDeg: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.updateTransform();       // necessary if world coordinate system is scaled\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.rotate(-angleInDeg / 180 * Math.PI);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.angle += angleInDeg;\r\n        this.directionRad += angleInDeg / 180 * Math.PI;\r\n    }\r\n\r\n    mirrorXY(scaleX: number, scaleY: number) {\r\n        let cX: number, cY: number;\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.localTransform.apply(p, p);\r\n        cX = p.x;\r\n        cY = p.y;\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(scaleX, scaleY);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n\r\n    scale(factor: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(factor, factor);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.scaleFactor *= factor;\r\n\r\n    }\r\n\r\n    public getCenterX(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        // this.displayObject.localTransform.apply(p, p);\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.x;\r\n    }\r\n\r\n    public getCenterY(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.y;\r\n    }\r\n\r\n    public abstract render(): void;\r\n\r\n    public destroy(): void {\r\n        super.destroy();\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.remove(this.runtimeObject);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(this);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        let index1 = this.worldHelper.shapesNotAffectedByWorldTransforms.indexOf(this);\r\n        if (index1 >= 0) {\r\n            this.worldHelper.shapesNotAffectedByWorldTransforms.splice(index1, 1);\r\n        }\r\n\r\n    }\r\n\r\n    getCollidingShapes(groupHelper: GroupHelper, shapeType: Type): any {\r\n        let collidingShapes: Value[] = [];\r\n        for (let shape of groupHelper.shapes) {\r\n            let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (shapeHelper.collidesWith(this)) {\r\n                collidingShapes.push({\r\n                    type: shapeType,\r\n                    value: shape\r\n                });\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n    }\r\n\r\n    abstract getCopy(klass: Klass): RuntimeObject;\r\n\r\n    getHitPolygon(vector2Class: Klass): Value[] {\r\n\r\n        if (this.hitPolygonDirty) {\r\n            this.transformHitPolygon();\r\n        }\r\n\r\n        let ret: Value[] = [];\r\n        for (let p of this.hitPolygonTransformed) {\r\n            let ro = new RuntimeObject(vector2Class);\r\n            ro.attributes = [{ type: doublePrimitiveType, value: p.x }, { type: doublePrimitiveType, value: p.y }];\r\n            ret.push({ type: vector2Class, value: ro });\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    setStatic(isStatic: boolean) {\r\n        let list = this.worldHelper.shapesNotAffectedByWorldTransforms;\r\n        if (isStatic) {\r\n            list.push(this);\r\n        } else {\r\n            let index = list.indexOf(this);\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    getParentGroup(): RuntimeObject {\r\n        return this.belongsToGroup?.runtimeObject || null\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { isPrefixUnaryExpression } from \"typescript\";\r\nimport { BufferResource } from \"@pixi/core\";\r\nimport { FORMATS } from \"@pixi/constants\";\r\n\r\nexport class BitmapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Bitmap\", module, \"Rechteckige Bitmap mit beliebiger Auflösung und Positionierung in der Grafikausgabe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"Bitmap\", new Parameterlist([\r\n            { identifier: \"pointsX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"pointsY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayWidth\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayHeight\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let pointsX: number = parameters[1].value;\r\n                let pointsY: number = parameters[2].value;\r\n                let left: number = parameters[3].value;\r\n                let top: number = parameters[4].value;\r\n                let width: number = parameters[5].value;\r\n                let height: number = parameters[6].value;\r\n\r\n                let rh = new BitmapHelperNew(pointsX, pointsY, left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Bitmap. pointsX bzw. pointsY bezeichnet Anzahl der Bildpunkte in x bzw. y-Richtung, (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(x, y, colorType);\r\n\r\n            }, false, false, 'Gibt die Farbe des Punkts (x, y) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\". 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: colorType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: colorType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\". 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color, 1);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: colorType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: RuntimeObject = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color, alpha);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"color\", type: colorType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: RuntimeObject = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color, alpha);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Bitmap-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clone\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clone\")) return;\r\n\r\n                return sh.getCopyOrClone(<Klass>o.class, true);\r\n\r\n            }, false, false, 'Erstellt ein weiteres Bitmap-Objekt, das auf dieselben Pixeldaten zurückgreift.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class BitmapHelperNew extends ShapeHelper {\r\n\r\n    texture: PIXI.Texture;\r\n    data: Uint32Array;\r\n\r\n    isBigEndian: boolean = true;\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        return this.getCopyOrClone(klass, false)\r\n    }\r\n\r\n    getCopyOrClone(klass: Klass, clone: boolean = false): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let bh: BitmapHelperNew = new BitmapHelperNew(this.anzahlX, this.anzahlY, this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro, this, clone);\r\n\r\n        ro.intrinsicData[\"Actor\"] = bh;\r\n\r\n        bh.copyFrom(this);\r\n        bh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    constructor(public anzahlX, public anzahlY, public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        let uInt32 = new Uint32Array([0x11223344]);\r\n        let uInt8 = new Uint8Array(uInt32.buffer);\r\n\r\n        if (uInt8[0] === 0x44) {\r\n            this.isBigEndian = false;\r\n        } else if (uInt8[0] === 0x11) {\r\n            this.isBigEndian = true;\r\n        }\r\n\r\n        // TODO: Little Endian...\r\n\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: left, y: top + height }, { x: left + width, y: top + height }, { x: left + width, y: top }\r\n        ];\r\n\r\n        this.initGraphics(bitmapToCopy, clone);\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        sprite.localTransform.scale(width / anzahlX, height / anzahlY);\r\n        sprite.localTransform.translate(left, top);\r\n        //@ts-ignore\r\n        sprite.transform.onChange();\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        sprite.localTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    protected initGraphics(bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n\r\n        if (bitmapToCopy == null) {\r\n            this.data = new Uint32Array(this.anzahlX * this.anzahlY);\r\n        } else {\r\n            if (clone) {\r\n                this.data = bitmapToCopy.data;\r\n            } else {\r\n                this.data = new Uint32Array(bitmapToCopy.data);\r\n            }\r\n        }\r\n\r\n        let u8Array = new Uint8Array(this.data.buffer);\r\n\r\n        if (!clone) {\r\n            let bufferResource = new PIXI.BufferResource(u8Array, { width: this.anzahlX, height: this.anzahlY });\r\n            let bt = new PIXI.BaseTexture(bufferResource, {\r\n                scaleMode: PIXI.SCALE_MODES.NEAREST\r\n            });\r\n            this.texture = new PIXI.Texture(bt);\r\n        } else {\r\n            this.texture = bitmapToCopy.texture;\r\n        }\r\n\r\n        this.displayObject = new PIXI.Sprite(this.texture);\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n    }\r\n\r\n    uploadData() {\r\n        this.texture.baseTexture.update();\r\n    }\r\n\r\n    public getFarbeAsObject(x: number, y: number, colorType: Klass): RuntimeObject {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        // let a = this.data[i + 3];\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let c = this.data[i];\r\n\r\n        let red = c & 0xff;\r\n        let green = (c & 0xff00) >> 8;\r\n        let blue = (c & 0xff0000) >> 16;\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            hex: ColorHelper.intColorToHexRGB(c >> 8)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n    public istFarbe(x: number, y: number, color: string | number | RuntimeObject, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        let c: number;\r\n\r\n        if (color instanceof RuntimeObject) {\r\n            color = (<ColorClassIntrinsicData>(color.intrinsicData)).hex;\r\n        }\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        let c1 = this.data[i];\r\n        let red = c1 & 0xff;\r\n        let green = (c1 & 0xff00) >> 8;\r\n        let blue = (c1 & 0xff0000) >> 16;\r\n\r\n\r\n        return c == red * 0x10000 + green * 0x100 + blue;\r\n\r\n    }\r\n\r\n    public setzeFarbe(x: number, y: number, color: string | number | RuntimeObject, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n        let c: number;\r\n\r\n        if (color instanceof RuntimeObject) {\r\n            color = (<ColorClassIntrinsicData>(color.intrinsicData)).hex;\r\n        }\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            if (alpha == null) alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n            if (alpha == null) alpha = 1.0;\r\n        }\r\n\r\n        this.data[i] = Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16);\r\n\r\n        this.uploadData();\r\n    }\r\n\r\n    public fillAll(color: string | number | RuntimeObject, alpha?: number) {\r\n        let c: number;\r\n\r\n        if (color instanceof RuntimeObject) {\r\n            color = (<ColorClassIntrinsicData>(color.intrinsicData)).hex;\r\n        }\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        this.data.fill(Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16));\r\n        // this.data.fill(0xffff0000);\r\n\r\n        this.uploadData();\r\n    }\r\n\r\n    public setzeFarbeRGBA(x: number, y: number, r: number, g: number, b: number, alpha: number) {\r\n        let c = alpha * 0xff000000 + b * 0x10000 + g * 0x100 + r;\r\n        let i = (x + y * (this.anzahlX));\r\n        this.data[i] = c;\r\n        this.uploadData();\r\n    }\r\n\r\n    public getFarbe(x: number, y: number): number {\r\n        let c = this.data[x + y * this.anzahlX] & 0xffffff;\r\n        return (c & 0xff) << 16 + (c & 0xff00) + (c & 0xff0000) >> 16;\r\n    }\r\n\r\n    public getAlpha(x: number, y: number): number {\r\n        return (this.data[x + y * this.anzahlX] & 0xff000000) >> 24 / 255;\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType, voidPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class FilledShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"FilledShape\", module, \"Basisklasse für grafische Objekte mit Füllfarbe und Randfarbe, beide wahlweise auch transparent\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n        this.isAbstract = true;\r\n\r\n        let that = this;\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"getFillColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.fillColor, sh.fillColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Füllfarbe des Objekts zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getBorderColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.borderColor, sh.borderColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Randfarbe des Objekts zurück.', false));\r\n\r\n        this.addAttribute(new Attribute(\"borderWidth\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: FilledShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null) {\r\n                    value.value = Number.NaN;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.borderWidth;\r\n\r\n            }, false, Visibility.protected, true, \"Randbreite in Pixeln\"));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"getAlpha\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAlpha\")) return;\r\n\r\n                return sh.fillAlpha;\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultBorder\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let width: number = parameters[1].value;\r\n                let color: string = parameters[2].value;\r\n\r\n                FilledShapeDefaults.setDefaultBorder(width, color);\r\n\r\n            }, false, true, 'Setzt Default-Eigenschaften des Randes. Sie werden nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultBorder\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let width: number = parameters[1].value;\r\n                let color: number = parameters[2].value;\r\n                let alpha: number = parameters[3].value;\r\n\r\n                FilledShapeDefaults.setDefaultBorder(width, color, alpha);\r\n\r\n            }, false, true, 'Setzt Default-Eigenschaften des Randes. Sie werden nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultBorder\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: colorType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let width: number = parameters[1].value;\r\n                let color: RuntimeObject = parameters[2].value;\r\n                let alpha: number = parameters[3].value;\r\n\r\n                FilledShapeDefaults.setDefaultBorder(width, color, alpha);\r\n\r\n            }, false, true, 'Setzt Default-Eigenschaften des Randes. Sie werden nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setDefaultBorder\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: colorType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let width: number = parameters[1].value;\r\n                let color: RuntimeObject = parameters[2].value;\r\n                let alpha: number = parameters[3].value;\r\n\r\n                FilledShapeDefaults.setDefaultBorder(width, color);\r\n\r\n            }, false, true, 'Setzt Default-Eigenschaften des Randes. Sie werden nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n\r\n                FilledShapeDefaults.setDefaultFillColor(color, alpha);\r\n\r\n            }, false, true, 'Setzt die Default-Füllfarbe. Sie wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let color: string = parameters[1].value;\r\n\r\n                FilledShapeDefaults.setDefaultFillColor(color);\r\n\r\n            }, false, true, 'Setzt die Default-Füllfarbe. Sie wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: colorType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let color: RuntimeObject = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n\r\n                FilledShapeDefaults.setDefaultFillColor(color, alpha);\r\n\r\n            }, false, true, 'Setzt die Default-Füllfarbe. Sie wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: colorType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let color: RuntimeObject = parameters[1].value;\r\n\r\n                FilledShapeDefaults.setDefaultFillColor(color);\r\n\r\n            }, false, true, 'Setzt die Default-Füllfarbe. Sie wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: colorType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: RuntimeObject = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: colorType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: RuntimeObject = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: colorType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: RuntimeObject = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: colorType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: RuntimeObject = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setBorderWidth\", new Parameterlist([\r\n            { identifier: \"widthInPixel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderWidth\")) return;\r\n\r\n                sh.setBorderWidth(width);\r\n\r\n            }, false, false, 'Setzt die Linienbreite des Randes (Einheit: Pixel)\"', false));\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    rgbaToHex(rgb: number, alpha: number): string {\r\n        let s = rgb == null ? \"---\" : rgb.toString(16);\r\n        while (s.length < 6) s = \"0\" + s;\r\n\r\n        let a = Math.round(alpha * 255).toString(16);\r\n        if (a.length < 2) a = \"0\" + a;\r\n\r\n        return \"#\" + s + a;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class FilledShapeHelper extends ShapeHelper {\r\n\r\n    fillColor: number;\r\n    fillAlpha: number;\r\n\r\n    borderColor: number;\r\n    borderAlpha: number;\r\n    borderWidth: number;\r\n\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.borderColor = FilledShapeDefaults.defaultBorderColor;\r\n        this.borderAlpha = FilledShapeDefaults.defaultBorderAlpha;\r\n        this.borderWidth = FilledShapeDefaults.defaultBorderWidth;\r\n\r\n        this.fillColor = FilledShapeDefaults.defaultFillColor;\r\n        this.fillAlpha = FilledShapeDefaults.defaultFillAlpha;\r\n    }\r\n\r\n    copyFrom(fsh: FilledShapeHelper) {\r\n        super.copyFrom(fsh);\r\n        this.fillColor = fsh.fillColor;\r\n        this.fillAlpha = fsh.fillAlpha;\r\n\r\n        this.borderColor = fsh.borderColor;\r\n        this.borderAlpha = fsh.borderAlpha;\r\n        this.borderWidth = fsh.borderWidth;\r\n    }\r\n\r\n    setAlpha(alpha: number) {\r\n\r\n        this.fillAlpha = alpha;\r\n        this.borderAlpha = alpha;\r\n        this.render();\r\n    }\r\n\r\n    setBorderColor(color: string | number | RuntimeObject, alpha?: number) {\r\n\r\n        if (color instanceof RuntimeObject) {\r\n            color = (<ColorClassIntrinsicData>(color.intrinsicData)).hex;\r\n        }\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.borderColor = c.color;\r\n            this.borderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.borderColor = color;\r\n            this.borderAlpha = alpha;\r\n        }\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setFillColor(color: string | number | RuntimeObject, alpha?: number) {\r\n\r\n        if (color instanceof RuntimeObject) {\r\n            color = (<ColorClassIntrinsicData>(color.intrinsicData)).hex;\r\n        }\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.fillColor = c.color;\r\n            this.fillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.fillColor = color;\r\n            if (alpha != null) this.fillAlpha = alpha;\r\n        }\r\n\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setBorderWidth(width: number) {\r\n        this.borderWidth = width;\r\n        this.render();\r\n    }\r\n\r\n    public getFarbeAsObject(color: number, alpha: number, colorType: Klass): RuntimeObject {\r\n\r\n        if (color == null) return null;\r\n\r\n        let r = (color & 0xff0000) >> 16;\r\n        let g = (color & 0xff00) >> 8;\r\n        let b = color & 0xff;\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: r,\r\n            green: g,\r\n            blue: b,\r\n            hex: ColorHelper.intColorToHexRGB(color)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class CircleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Circle\", module, \"Kreis\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Circle\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n\r\n                let rh = new CircleHelper(mx, my, r, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreis. (mx, my) ist der Mittelpunt, r sein Radius.', true));\r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreises.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Circle-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class CircleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: CircleHelper = new CircleHelper(this.mx, this.my, this.r, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI / 8;\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawCircle(this.mx, this.my, this.r);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx * dx + dy * dy <= this.r * this.r;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (shapeHelper instanceof CircleHelper) {\r\n\r\n            let p1 = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.updateTransform();\r\n            this.displayObject.transform.worldTransform.apply(p1, p1);\r\n\r\n            let radius1 = this.r * this.displayObject.scale.x\r\n            \r\n            let p2 = new PIXI.Point(shapeHelper.centerXInitial, shapeHelper.centerYInitial);\r\n            shapeHelper.displayObject.updateTransform();\r\n            shapeHelper.displayObject.transform.worldTransform.apply(p2, p2);\r\n            \r\n            let radius2 = shapeHelper.r * shapeHelper.displayObject.scale.x\r\n\r\n            let d1 = p1.x - p2.x;\r\n            let d2 = p1.y - p2.y;\r\n\r\n            return d1*d1 + d2*d2 <= (radius1 + radius2) * (radius1 + radius2);\r\n\r\n\r\n        } else {\r\n            return super.collidesWith(shapeHelper);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class SectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sector\", module, \"Kreisbogen/Kreissektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Sector\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n                let startAngle: number = parameters[4].value;\r\n                let endAngle: number = parameters[5].value;\r\n\r\n                let rh = new SectorHelper(mx, my, r, startAngle/180*Math.PI, endAngle/180*Math.PI, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreisbogen bzw. (falls die Füllfarbe nicht null ist) Kreissektor. (mx, my) ist der Mittelpunt, r sein Radius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\r\n\r\n            this.addMethod(new Method(\"drawRadii\", new Parameterlist([\r\n                { identifier: \"radiiZeichnen\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: boolean = parameters[1].value;\r\n                    let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"drawRadii\")) return;\r\n    \r\n                    sh.drawRadii = r;\r\n                    sh.render();\r\n    \r\n                }, false, false, 'Legt fest, ob beim Zeichnen des Umrisses auch die beiden Radii ( = Strecken vom Mittelpunkt zur Kreislinie) mitgezeichnet werden sollen.', false));\r\n    \r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\r\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setStartAngle\")) return;\r\n\r\n                if(angle < 0){\r\n                    angle += Math.ceil(-angle/360) * 360;\r\n                }\r\n\r\n                if(angle > 360){\r\n                    angle -= Math.trunc(angle/360) * 360;\r\n                }\r\n\r\n                sh.startAngleRad = angle/180*Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n            this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\r\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setEndAngle\")) return;\r\n\r\n                if(angle < 0){\r\n                    angle += Math.ceil(-angle/360) * 360;\r\n                }\r\n\r\n                if(angle > 360){\r\n                    angle -= Math.trunc(angle/360) * 360;\r\n                }\r\n\r\n                sh.endAngleRad = angle/180*Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getStartAngle\")) return;\r\n\r\n                return sh.startAngleRad/Math.PI*180;\r\n\r\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getEndAngle\")) return;\r\n\r\n                return sh.endAngleRad/Math.PI*180;\r\n\r\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sector-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SectorHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        public startAngleRad: number, public endAngleRad: number,\r\n        public drawRadii: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SectorHelper = new SectorHelper(this.mx, this.my, this.r, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\r\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = this.startAngleRad + deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if(Math.abs(this.startAngleRad - this.endAngleRad) < 0.00000001){\r\n            g.drawCircle(this.mx, this.my, this.r);\r\n        } else {\r\n            if(this.drawRadii){\r\n                g.moveTo(this.mx, this.my);\r\n            }\r\n            g.arc(this.mx, this.my, this.r, -this.startAngleRad, -this.endAngleRad, true);\r\n            if(this.drawRadii){\r\n                g.lineTo(this.mx, this.my);\r\n            }\r\n        }\r\n        if(this.drawRadii){\r\n            g.closePath();\r\n        }\r\n\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        let angle = Math.atan2(-dy, dx);\r\n\r\n        if (dx * dx + dy * dy <= this.r * this.r) {\r\n            let towPI = 2*Math.PI;\r\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\r\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\r\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\r\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\r\n            if(normalizedStartAngle <= normalizedEndAngle){\r\n                return ret;\r\n            } else {\r\n                return !ret;\r\n            }  \r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class ArcClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Arc\", module, \"Kreisbogenumriss (wahlweise gefüllt)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Arc\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let ri: number = parameters[3].value;\r\n                let ra: number = parameters[4].value;\r\n                let startAngle: number = parameters[5].value;\r\n                let endAngle: number = parameters[6].value;\r\n\r\n                let rh = new ArcHelper(mx, my, ri, ra, startAngle / 180 * Math.PI, endAngle / 180 * Math.PI, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreisbogen. (mx, my) ist der Mittelpunt, ri sein Innenradius, ra sein Außenradius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\r\n\r\n        this.addMethod(new Method(\"setInnerRadius\", new Parameterlist([\r\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n                sh.ri = r;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den inneren Radius des Kreisbogens\"', false));\r\n\r\n        this.addMethod(new Method(\"setOuterRadius\", new Parameterlist([\r\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n                sh.ra = r;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den äußeren Radius des Kreisbogens\"', false));\r\n\r\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\r\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setStartAngle\")) return;\r\n\r\n                if (angle < 0) {\r\n                    angle += Math.ceil(-angle / 360) * 360;\r\n                }\r\n\r\n                if (angle > 360) {\r\n                    angle -= Math.trunc(angle / 360) * 360;\r\n                }\r\n\r\n                sh.startAngleRad = angle / 180 * Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\r\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setEndAngle\")) return;\r\n\r\n                if (angle < 0) {\r\n                    angle += Math.ceil(-angle / 360) * 360;\r\n                }\r\n\r\n                if (angle > 360) {\r\n                    angle -= Math.trunc(angle / 360) * 360;\r\n                }\r\n\r\n                sh.endAngleRad = angle / 180 * Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"getInnerRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.ri * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den inneren Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getOuterRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getOuterRadius\")) return;\r\n\r\n                return sh.ra * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den äußeren Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getStartAngle\")) return;\r\n\r\n                return sh.startAngleRad / Math.PI * 180;\r\n\r\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getEndAngle\")) return;\r\n\r\n                return sh.endAngleRad / Math.PI * 180;\r\n\r\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Arc-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ArcHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public ri: number,\r\n        public ra: number,\r\n        public startAngleRad: number, public endAngleRad: number,\r\n        public drawRadii: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: ArcHelper = new ArcHelper(this.mx, this.my, this.ri, this.ra, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = this.startAngleRad + deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.ra * Math.cos(alpha),\r\n                y: this.my + this.ra * Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = this.endAngleRad - deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.ri * Math.cos(alpha),\r\n                y: this.my + this.ri * Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n\r\n        if (this.startAngleRad === void 0) { this.startAngleRad = 0; }\r\n        if (this.endAngleRad === void 0) { this.endAngleRad = Math.PI * 2; }\r\n        if (Math.abs(this.endAngleRad - this.startAngleRad) >= Math.PI * 2) {\r\n            g.drawCircle(this.mx, this.my, this.ra)\r\n                .beginHole()\r\n                .drawCircle(this.mx, this.my, this.ri)\r\n                .endHole();\r\n        } else {\r\n            g.moveTo(this.mx + this.ra * Math.cos(this.startAngleRad), this.my - this.ra * Math.sin(this.startAngleRad));\r\n            g.lineTo(this.mx + this.ri * Math.cos(this.startAngleRad), this.my - this.ri * Math.sin(this.startAngleRad));\r\n            g.arc(this.mx, this.my, this.ri, -this.startAngleRad, -this.endAngleRad, true)\r\n                .arc(this.mx, this.my, this.ra, -this.endAngleRad, -this.startAngleRad, false)\r\n        }\r\n\r\n        g.closePath();\r\n\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    \r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        let angle = Math.atan2(-dy, dx);\r\n\r\n        let r2 = dx * dx + dy * dy;\r\n\r\n        if ( r2 <= this.ra * this.ra && r2 >= this.ri * this.ri) {\r\n            let towPI = 2 * Math.PI;\r\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\r\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\r\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\r\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\r\n            if (normalizedStartAngle <= normalizedEndAngle) {\r\n                return ret;\r\n            } else {\r\n                return !ret;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport type ColorClassIntrinsicData = {\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    hex: string\r\n}\r\n\r\nexport class ColorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Color\", module, \"Farbe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for (let colorName in ColorHelper.predefinedColors) {\r\n\r\n            let intColor = ColorHelper.predefinedColors[colorName];\r\n\r\n            let r: RuntimeObject = new RuntimeObject(this);\r\n\r\n            let red = (intColor & 0xff0000) >> 16;\r\n            let green = (intColor & 0xff00) >> 8;\r\n            let blue = (intColor & 0xff);\r\n\r\n            let id: ColorClassIntrinsicData = {\r\n                red: red,\r\n                green: green,\r\n                blue: blue,\r\n                hex: ColorHelper.intColorToHexRGB(intColor)\r\n            }\r\n\r\n            r.intrinsicData = id;\r\n\r\n            let a: Attribute = new Attribute(colorName, this,\r\n                (value) => { value.value = r }, true, Visibility.public, true,\r\n                \"Die Farbe \" + colorName + \" (\" + ColorHelper.intColorToHexRGB(intColor) + \") oder \" + ColorHelper.intColorToRGB(intColor));\r\n\r\n            //@ts-ignore\r\n            a.color = ColorHelper.intColorToHexRGB(intColor);\r\n\r\n            this.addAttribute(a);\r\n        }\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"Color\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let red: number = Math.trunc(parameters[1].value);\r\n                let green: number = Math.trunc(parameters[2].value);\r\n                let blue: number = Math.trunc(parameters[3].value);\r\n\r\n\r\n                let intrinsicData: ColorClassIntrinsicData = {\r\n                    red: red,\r\n                    green: green,\r\n                    blue: blue,\r\n                    hex: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n            }, false, false, 'Instanziert eine neue Farbe. Red, green und blue sind die Farbanteile, jeweils als integer-Zahlen im Bereich von 0 bis 255.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return Math.floor(Math.random() * 0xffffff);\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n\r\n                let r: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let g: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let b: number = Math.floor(Math.random() * (256 - min)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maximumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                let max: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n                if (max < 0) max = 0;\r\n                if (max > 255) max = 255;\r\n\r\n                if (max < min) {\r\n                    let z = max;\r\n                    max = min;\r\n                    min = z;\r\n                }\r\n\r\n                let r: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let g: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let b: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, max der Höchstwert, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).hex;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen String.', false));\r\n\r\n        this.addMethod(new Method(\"toInt\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let cid = <ColorClassIntrinsicData>(o.intrinsicData);\r\n\r\n                return 0x10000 * cid.red + 0x100 * cid.green + cid.blue;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen int-Wert um, genauer: gibt 0x10000 * red + 0x100 * green + blue zurück.', false));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"otherColor\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let d = <ColorClassIntrinsicData>(o.intrinsicData);\r\n                let d1 = <ColorClassIntrinsicData>(o1.intrinsicData);\r\n\r\n                return (d.red == d1.red && d.green == d1.green && d.blue == d1.blue);\r\n\r\n            }, false, false, 'Vergleicht zwei Farben', false));\r\n\r\n        this.addMethod(new Method(\"getRed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).red;\r\n\r\n            }, false, false, 'Gibt den Rotanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getGreen\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).green;\r\n\r\n            }, false, false, 'Gibt den Grünanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getBlue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).blue;\r\n\r\n            }, false, false, 'Gibt den Blauanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"fromRGB\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                return (r * 0x10000 + g * 0x100 + b);\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromRGBA\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let color: string = (r * 0x1000000 + g * 0x10000 + b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSLA\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                let color: string = (rgb.r * 0x1000000 + rgb.g * 0x10000 + rgb.b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSL\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                return (rgb.r * 0x10000 + rgb.g * 0x100 + rgb.b);\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100)die Farbe.', false));\r\n\r\n\r\n    }\r\n\r\n    hslToRgb(h: number, s: number, l: number): { r: number, g: number, b: number } {\r\n\r\n        s /= 100;\r\n        l /= 100;\r\n\r\n        let c = (1 - Math.abs(2 * l - 1)) * s,\r\n            x = c * (1 - Math.abs((h / 60) % 2 - 1)),\r\n            m = l - c / 2,\r\n            r = 0,\r\n            g = 0,\r\n            b = 0;\r\n\r\n        if (0 <= h && h < 60) {\r\n            r = c; g = x; b = 0;\r\n        } else if (60 <= h && h < 120) {\r\n            r = x; g = c; b = 0;\r\n        } else if (120 <= h && h < 180) {\r\n            r = 0; g = c; b = x;\r\n        } else if (180 <= h && h < 240) {\r\n            r = 0; g = x; b = c;\r\n        } else if (240 <= h && h < 300) {\r\n            r = x; g = 0; b = c;\r\n        } else if (300 <= h && h < 360) {\r\n            r = c; g = 0; b = x;\r\n        }\r\n        r = Math.round((r + m) * 255);\r\n        g = Math.round((g + m) * 255);\r\n        b = Math.round((b + m) * 255);\r\n\r\n\r\n        return {r: r, g: g, b: b}\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class EllipseClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Ellipse\", module, \"Ellipse\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Ellipse\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let rx: number = parameters[3].value;\r\n                let ry: number = parameters[4].value;\r\n\r\n                let rh = new EllipseHelper(mx, my, rx, ry, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Ellipse. (mx, my) ist der Mittelpunt, rx und ry sind ihre Radien.', true));\r\n\r\n            this.addMethod(new Method(\"setRadiusX\", new Parameterlist([\r\n                { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusX(r);\r\n    \r\n                }, false, false, 'Setzt den x-Radius der Ellipse\"', false));\r\n\r\n            this.addMethod(new Method(\"setRadiusY\", new Parameterlist([\r\n                { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusY(r);\r\n    \r\n                }, false, false, 'Setzt den y-Radius der Ellipse\"', false));\r\n    \r\n                this.addMethod(new Method(\"copy\", new Parameterlist([\r\n                ]), this,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"copy\")) return;\r\n        \r\n                        return sh.getCopy(<Klass>o.class);\r\n        \r\n                    }, false, false, 'Erstellt eine Kopie des Ellipse-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class EllipseHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public rx: number, public ry: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: EllipseHelper = new EllipseHelper(this.mx, this.my, this.rx, this.ry, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    \r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI/8;\r\n        for(let i = 0; i < 16; i++){\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.rx*Math.cos(alpha),\r\n                y: this.my + this.ry*Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawEllipse(this.mx, this.my, this.rx, this.ry);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    setRadiusX(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    setRadiusY(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx*dx/(this.rx*this.rx) + dy*dy/(this.ry*this.ry) <= 1;\r\n    \r\n    }\r\n    \r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, Attribute, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper, ShapeClass } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class CollisionPairClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"CollisionPair\", module, \"Speichert die Referenzen auf zwei Figuren, die gerade kollidiert sind. Diese Klasse von den Kollisionsmethden der Klasse Group benutzt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n        this.addAttribute(new Attribute(\"shapeA\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeA\"];\r\n\r\n            }, false, Visibility.public, true, \"Erstes an der Kollision beteiligtes Shape\"));\r\n\r\n        this.addAttribute(new Attribute(\"shapeB\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeB\"];\r\n\r\n            }, false, Visibility.public, true, \"Zweites an der Kollision beteiligtes Shape\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class GroupClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Group\", module, \"Klasse zum Gruppieren grafischer Elemente. Die gruppierten Elemente können miteinander verschoben, gedreht, gestreckt sowie ein- und ausgeblendet werden. Zudem besitzt die Klasse Methoden zur schnellen Erkennung von Kollision mit Elementen außerhalb der Gruppe.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let collisionPairType = module.typeStore.getType(\"CollisionPair\");\r\n        let collisionPairArrayType = new ArrayType(collisionPairType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe. Ihr können mit der Methode add Elemente hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(module.typeStore.getType(\"Shape\")), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                for (let s of shapes) {\r\n                    rh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe und fügt die übergebenen Grafikobjekte der Gruppe hinzu. Der Gruppe können mit der Methode add weitere Grafikobjekte hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(shapeType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"add\")) return;\r\n\r\n                for (let s of shapes) {\r\n                    sh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Fügt die Grafikobjekte der Gruppe hinzu.', false));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"get\")) return;\r\n\r\n                return sh.getElement(index);\r\n\r\n            }, false, false, 'Gibt das Grafikelement der Gruppe mit dem entsprechenden Index zurück. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                sh.removeElementAt(index);\r\n\r\n            }, false, false, 'Entfernt das Grafikelement aus der Gruppe mit dem entsprechenden Index, zerstört es jedoch nicht. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"remove\")) return;\r\n\r\n                sh.remove(shape);\r\n                sh.worldHelper.shapes.push(shape.intrinsicData[\"Actor\"]);\r\n\r\n            }, false, false, 'Entfernt das übergebene Grafikelement aus der Gruppe, zerstört es jedoch nicht.', false));\r\n\r\n\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\") || shape == null) return [];\r\n\r\n                let shapes: RuntimeObject[] = sh.getCollidingObjects(shape);\r\n\r\n                let values: Value[] = [];\r\n                for (let sh of shapes) {\r\n                    values.push({\r\n                        type: shapeType,\r\n                        value: sh\r\n                    })\r\n\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, 'Gibt die Objekte der Gruppe zurück, die mit dem übergebenen Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"getCollisionPairs\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maxOneCollisionPerShape\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), collisionPairArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group2: RuntimeObject = parameters[1].value;\r\n                let maxOneCollisionPerShape: boolean = parameters[2].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n                let groupHelper2: GroupHelper = <GroupHelper>group2.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingObjects2(groupHelper2, collisionPairType, maxOneCollisionPerShape);\r\n\r\n            }, false, false, 'Überprüft, welche Objekte der Gruppe mit welchen der anderen kollidieren.' +\r\n            ' Gibt für jede Kollision ein Collisionpair-Objekt zurück, das die beiden kollidierenden Objekte enthält.' +\r\n        ' Falls maxOneCollisionPerShape == true ist jedes Objekt dabei aber nur in max. einem Collisionpair-Objekt enthalten.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"size\")) return;\r\n\r\n                return sh.shapes.length;\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Elemente in der Gruppe enthalten sind.', false));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"empty\")) return;\r\n\r\n                sh.removeAllChidren();\r\n\r\n            }, false, false, 'Entfernt alle Elemente aus der Gruppe, löscht die Elemente aber nicht.', false));\r\n\r\n        this.addMethod(new Method(\"destroyAllChildren\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"destroyAllChildren\")) return;\r\n\r\n                sh.destroyChildren();\r\n\r\n            }, false, false, 'Löscht alle Elemente der Gruppe, nicht aber die Gruppe selbst.', false));\r\n\r\n\r\n        (<Klass>shapeType).addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let groupHelper: GroupHelper = group.intrinsicData[\"Actor\"];\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingShapes(groupHelper, shapeType);\r\n\r\n            }, false, false, 'Gibt alle Shapes der Gruppe group zurück, die mit dem Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Group-Objekts (und aller seiner enthaltenen Grafikobjekte!) und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"renderAsStaticBitmap\", new Parameterlist([\r\n            { identifier: \"renderAsStaticBitmap\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let doCache: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"renderAsStaticBitmap\")) return;\r\n\r\n                sh.cacheAsBitmap(doCache);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Zeichnet alle Objekte dieser Group in ein Bild und verwendet fortan nur noch dieses Bild, ohne die Kindelemente der Group erneut zu zeichnen. Mit dieser Methode können komplexe Bilder (z.B. ein Sternenhimmel) aufgebaut und dann statisch gemacht werden. Nach dem Aufbau brauchen sie daher kaum mehr Rechenzeit.', false));\r\n\r\n            (<Klass>shapeType).addMethod(new Method(\"getParentGroup\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"getParentGroup\")) return;\r\n    \r\n                    return sh.getParentGroup();\r\n    \r\n                }, false, false, 'Gibt die Group zurück, in der sich das Grafikobjekt befindet, bzw. null, falls es in keiner Group ist.', false));\r\n    \r\n    }\r\n\r\n}\r\n\r\nexport class GroupHelper extends ShapeHelper {\r\n\r\n    shapes: RuntimeObject[] = [];\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.displayObject = new PIXI.Container();\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    setChildIndex(sh: ShapeHelper, index: number) {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject;\r\n        container.setChildIndex(sh.displayObject, index);\r\n\r\n        let oldIndex = this.shapes.indexOf(sh.runtimeObject);\r\n        this.shapes.splice(oldIndex, 1);\r\n        this.shapes.splice(index, 0, sh.runtimeObject);\r\n}\r\n\r\n\r\n    cacheAsBitmap(doCache: boolean) {\r\n        let container = <PIXI.Container>this.displayObject;\r\n\r\n        // If you set doCache to false and shortly afterwards to true: \r\n        // make shure there's at least one rendercycle in between.\r\n        if (doCache) {\r\n            setTimeout(() => {\r\n                container.cacheAsBitmap = true;\r\n            }, 300);\r\n        } else {\r\n            container.cacheAsBitmap = doCache;\r\n        }\r\n    }\r\n\r\n\r\n    removeElementAt(index: number) {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n\r\n        let shape = this.shapes[index];\r\n        this.remove(shape);\r\n    }\r\n\r\n    getElement(index: number): RuntimeObject {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n        return this.shapes[index];\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let groupHelperCopy: GroupHelper = new GroupHelper(this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = groupHelperCopy;\r\n\r\n        for (let ro of this.shapes) {\r\n            let shapeHelper: ShapeHelper = ro.intrinsicData[\"Actor\"];\r\n\r\n            let roCopy: RuntimeObject = shapeHelper.getCopy(<Klass>ro.class)\r\n            let shapeHelperCopy: ShapeHelper = roCopy.intrinsicData[\"Actor\"];\r\n\r\n            groupHelperCopy.add(roCopy);\r\n        }\r\n\r\n        groupHelperCopy.copyFrom(this);\r\n        groupHelperCopy.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.timerPaused = tp;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    add(shape: RuntimeObject) {\r\n\r\n        if(shape == null) return;\r\n\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        if (shapeHelper.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Ein schon zerstörtes Objekt kann keiner Gruppe hinzugefügt werden.\");\r\n            return;\r\n        }\r\n\r\n        if (this.hasCircularReference(shape)) {\r\n            return;\r\n        }\r\n\r\n        this.shapes.push(shape);\r\n\r\n        if (shapeHelper.belongsToGroup != null) {\r\n            shapeHelper.belongsToGroup.remove(shape);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(shapeHelper);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        shapeHelper.belongsToGroup = this;\r\n\r\n        this.displayObject.parent.updateTransform();\r\n        let inverse = new PIXI.Matrix().copyFrom(this.displayObject.transform.worldTransform);\r\n        inverse.invert();\r\n        shapeHelper.displayObject.localTransform.prepend(inverse.prepend(this.worldHelper.stage.localTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n\r\n        (<PIXI.Container>this.displayObject).addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let xSum: number = 0;\r\n        let ySum: number = 0;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            xSum += sh.getCenterX();\r\n            ySum += sh.getCenterY();\r\n        }\r\n\r\n        let x = xSum / this.shapes.length;\r\n        let y = ySum / this.shapes.length;\r\n\r\n        this.displayObject.updateTransform();\r\n        let p1: PIXI.Point = this.displayObject.worldTransform.applyInverse(new PIXI.Point(x, y));\r\n        this.centerXInitial = p1.x;\r\n        this.centerYInitial = p1.y;\r\n    }\r\n\r\n    public removeAllChidren() {\r\n        let index: number = 0;\r\n        for (let shape of this.shapes) {\r\n            this.deregister(shape, index++);\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    public remove(shape: RuntimeObject) {\r\n        let index = this.shapes.indexOf(shape);\r\n        if (index >= 0) {\r\n            this.shapes.splice(index, 1);\r\n            this.deregister(shape, index);\r\n        }\r\n    }\r\n\r\n    private deregister(shape: RuntimeObject, index: number) {\r\n        let shapeHelper: ShapeHelper = shape.intrinsicData['Actor'];\r\n\r\n        let transform = new PIXI.Matrix().copyFrom(shapeHelper.displayObject.transform.worldTransform);\r\n\r\n        (<PIXI.Container>this.displayObject).removeChild(shapeHelper.displayObject);\r\n\r\n        let inverseStageTransform = new PIXI.Matrix().copyFrom(this.worldHelper.stage.localTransform);\r\n        inverseStageTransform.invert();\r\n        shapeHelper.displayObject.localTransform.identity();\r\n        shapeHelper.displayObject.localTransform.append(transform.prepend(inverseStageTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n        this.worldHelper.stage.addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n        shapeHelper.belongsToGroup = null;\r\n\r\n    }\r\n\r\n\r\n    public render(): void {\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.destroyChildren();\r\n        super.destroy();\r\n    }\r\n\r\n    public destroyChildren(): void {\r\n        for (let shape of this.shapes.slice(0)) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.destroy();\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    hasOverlappingBoundingBoxWith(shapeHelper: ShapeHelper): boolean {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n        return true;\r\n    }\r\n\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (!this.hasOverlappingBoundingBoxWith(shapeHelper)) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.setHitPolygonDirty(dirty);\r\n        }\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        this.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n\r\n        if (x < bb.left || x > bb.left + bb.width || y < bb.top || y > bb.top + bb.height) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCollidingObjects(shape: RuntimeObject): RuntimeObject[] {\r\n\r\n        let collidingShapes: RuntimeObject[] = [];\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        for (let s of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>s.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                collidingShapes.push(s);\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n\r\n    }\r\n\r\n    getCollidingObjects2(groupHelper2: GroupHelper, collisionPairType: Type,\r\n        maxOneCollisionPerShape: boolean): Value[] {\r\n\r\n        let collisionPairs: Value[] = [];\r\n\r\n        let alreadyCollidedHelpers2: Map<ShapeHelper, boolean> = new Map();\r\n\r\n        for (let shape1 of this.shapes) {\r\n            let shapeHelper1: ShapeHelper = <ShapeHelper>shape1.intrinsicData[\"Actor\"];\r\n            for (let shape2 of groupHelper2.shapes) {\r\n                let shapeHelper2: ShapeHelper = <ShapeHelper>shape2.intrinsicData[\"Actor\"];\r\n                if (shapeHelper1.collidesWith(shapeHelper2)) {\r\n\r\n                    if (!maxOneCollisionPerShape || alreadyCollidedHelpers2.get(shapeHelper2) == null) {\r\n                        alreadyCollidedHelpers2.set(shapeHelper2, true);\r\n                        let rto: RuntimeObject = new RuntimeObject(<Klass>collisionPairType);\r\n\r\n                        rto.intrinsicData[\"ShapeA\"] = shapeHelper1.runtimeObject;\r\n                        rto.intrinsicData[\"ShapeB\"] = shapeHelper2.runtimeObject;\r\n                        collisionPairs.push({\r\n                            type: collisionPairType,\r\n                            value: rto\r\n                        });\r\n                    }\r\n\r\n                    if (maxOneCollisionPerShape) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisionPairs;\r\n\r\n    }\r\n\r\n    hasCircularReference(shapeToAdd: RuntimeObject) {\r\n        let gh = shapeToAdd.intrinsicData[\"Actor\"];\r\n        if (gh instanceof GroupHelper) {\r\n            if (gh == this) {\r\n                this.worldHelper.interpreter.throwException(\"Eine Group darf sich nicht selbst enthalten!\");\r\n                return true;\r\n            } else {\r\n                for (let shape of gh.shapes) {\r\n                    if (this.hasCircularReference(shape)) {\r\n                        return true;\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    tint(color: string) {\r\n        for (let child of this.shapes) {\r\n            (<ShapeHelper>child.intrinsicData[\"Actor\"]).tint(color);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class KeyClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Key\", module, \"Aufzählung von Sondertasten zur Benutzung in den Methoden Actor.onKeyUp, Actor.onKeyTyped und Actor.onKeyDown\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"ArrowUp\", stringPrimitiveType, (value) => { value.value = \"ArrowUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowDown\", stringPrimitiveType, (value) => { value.value = \"ArrowDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowLeft\", stringPrimitiveType, (value) => { value.value = \"ArrowLeft\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowRight\", stringPrimitiveType, (value) => { value.value = \"ArrowRight\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Enter\", stringPrimitiveType, (value) => { value.value = \"Enter\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Space\", stringPrimitiveType, (value) => { value.value = \" \" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Shift\", stringPrimitiveType, (value) => { value.value = \"Shift\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Alt\", stringPrimitiveType, (value) => { value.value = \"Alt\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Strg\", stringPrimitiveType, (value) => { value.value = \"Control\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageUp\", stringPrimitiveType, (value) => { value.value = \"PageUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageDown\", stringPrimitiveType, (value) => { value.value = \"PageDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Backspace\", stringPrimitiveType, (value) => { value.value = \"Backspace\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Escape\", stringPrimitiveType, (value) => { value.value = \"Escape\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Entf\", stringPrimitiveType, (value) => { value.value = \"Delete\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Einf\", stringPrimitiveType, (value) => { value.value = \"Insert\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Ende\", stringPrimitiveType, (value) => { value.value = \"End\" }, true, Visibility.public, true, \"\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\nimport { polygonEnthältPunkt, streckenzugEnthältPunkt } from \"../../tools/MatheTools.js\";\r\n\r\nexport class PolygonClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Polygon\", module, \"Wahlweise geschlossenes Polygon (mit Füllung und Rand) oder offener Streckenzug\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n        let shapeClass = <Klass>module.typeStore.getType(\"Shape\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als Array von double-Werten der Form {x1, y1, x2, y2, ...} übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als double-Werte der Form x1, y1, x2, y2, ... übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon ohne Punkte.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if(shape == null){\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n                shapeHelper.displayObject.getBounds();  // seems to work magic in updating transforms of children...\r\n                \r\n                let points: convexhull.Point[] = [];\r\n                points = this.extractPoints(shapeHelper, points);\r\n                points = convexhull.makeHull(points);\r\n\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let p of points){\r\n                    pointsNumber.push(p.x);\r\n                    pointsNumber.push(p.y);\r\n                }\r\n\r\n                if(pointsNumber.length > 0){\r\n                    pointsNumber = pointsNumber.concat(pointsNumber.slice(0, 2))\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o, true);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Seine Punkte sind die Punkte des Hitpolygons der übergebenen Figur.', true));\r\n            \r\n        this.addMethod(new Method(\"addPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoint\")) return;\r\n\r\n                sh.addPoint(x, y);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt hinzu.\"', false));\r\n\r\n            this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let points: Value[] = parameters[1].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"addPoints\")) return;\r\n    \r\n                    let p: { x: number, y: number }[];\r\n    \r\n                    sh.setPoints(points.map(value => value.value));\r\n    \r\n                }, false, false, 'Löscht alle Punkte des Polygons und setzt komplett neue. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n                \r\n        this.addMethod(new Method(\"addPoints\", new Parameterlist([\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let points: Value[] = parameters[1].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoints\")) return;\r\n\r\n                let p: { x: number, y: number }[];\r\n\r\n                for (let i = 0; i < points.length - 1; i += 2) {\r\n                    sh.addPoint(points[i].value, points[i + 1].value, i >= points.length - 2);\r\n                }\r\n\r\n            }, false, false, 'Fügt dem Polygon mehrere Punkte hinzu. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n\r\n        this.addMethod(new Method(\"insertPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.insertPoint(x, y, index);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt als \"index-ter\" Punkt hinzu. index == 0 => ganz am Anfang; index == Anzahl der bisherigen Punkte => ganz am Ende;\"', false));\r\n\r\n        this.addMethod(new Method(\"movePointTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.movePointTo(x, y, index);\r\n\r\n            }, false, false, 'schiebt den index-ten Punkt nach (x, y). index == 0 => erster Punkt, index == 1 => zweiter Punkt usw.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"close\")) return;\r\n\r\n                sh.isClosed = true;\r\n                sh.render();\r\n\r\n            }, false, false, 'Schließt das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"open\")) return;\r\n\r\n                sh.isClosed = false;\r\n                sh.render();\r\n\r\n            }, false, false, 'Öffnet das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Polygon-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[]{\r\n        if(shapeHelper instanceof GroupHelper){\r\n            let points1: convexhull.Point[] = [];\r\n            for(let sh of shapeHelper.shapes){\r\n                points1 = this.extractPoints(sh.intrinsicData[\"Actor\"], points1);\r\n            }\r\n            return points.concat(points1);\r\n        } else {\r\n            if(shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function(punkt){return {x: punkt.x, y: punkt.y}}));\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport class PolygonHelper extends FilledShapeHelper {\r\n\r\n    isClosed: boolean = false;\r\n\r\n    constructor(points: number[], private closeAndFill: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, isClosed: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.isClosed = isClosed;\r\n        let xSum = 0; let ySum = 0;\r\n        this.hitPolygonInitial = [];\r\n\r\n        for (let i = 0; i < points.length;) {\r\n            let x = points[i++];\r\n            let y = points[i++];\r\n            xSum += x;\r\n            ySum += y;\r\n            this.hitPolygonInitial.push({ x: x, y: y });\r\n        }\r\n\r\n        if (points.length > 1) {\r\n            this.centerXInitial = xSum / this.hitPolygonInitial.length;\r\n            this.centerYInitial = ySum / this.hitPolygonInitial.length;\r\n        }\r\n\r\n        if (!closeAndFill) {\r\n            this.borderColor = 0x0000ff;\r\n        }\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: PolygonHelper = new PolygonHelper([], this.closeAndFill, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if (this.hitPolygonInitial.length > 0) {\r\n            g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n            for (let i = 1; i < this.hitPolygonInitial.length; i++) {\r\n                g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n            }\r\n        }\r\n\r\n        if (this.closeAndFill || this.isClosed) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n    addPoint(x: number, y: number, render: boolean = true) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.push({ x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        if (render) this.render();\r\n    }\r\n\r\n    insertPoint(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.splice(index, 0, { x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    movePointTo(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        if(this.hitPolygonInitial.length == 0) return;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial[index].x = p.x;\r\n        this.hitPolygonInitial[index].y = p.y;\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setPoint(x: number, y: number, index: number) {\r\n        if (index == 0 || index == 1) {\r\n            this.hitPolygonInitial[index] = { x: x, y: y };\r\n            this.hitPolygonDirty = true;\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    setPoints(coordinates: number[]) {\r\n\r\n        this.hitPolygonInitial = [];\r\n        for(let i = 0; i < coordinates.length - 1; i += 2){\r\n            this.hitPolygonInitial.push({x: coordinates[i], y: coordinates[i+1]});\r\n        }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setAllPointsUntransformed(points: number[]) {\r\n        this.hitPolygonInitial = [];\r\n        for (let i = 0; i < points.length; i += 2) {\r\n            this.hitPolygonInitial.push({ x: points[i], y: points[i + 1] })\r\n        }\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        if(this.closeAndFill){\r\n            return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        } else {\r\n            return streckenzugEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class RectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Rectangle\", module, \"Rechteck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Rectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                \r\n                let rh = new RectangleHelper(left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n            \r\n            this.addMethod(new Method(\"setWidth\", new Parameterlist([\r\n                { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let width: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setWidth\")) return;\r\n\r\n                sh.width = width / sh.displayObject.scale.x;\r\n                sh.centerXInitial = sh.left + sh.width/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite des Rechtecks.\", false));\r\n\r\n            this.addMethod(new Method(\"setHeight\", new Parameterlist([\r\n                { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let height: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setHeight\")) return;\r\n\r\n                sh.height = height / sh.displayObject.scale.y;\r\n                sh.centerYInitial = sh.top + sh.height/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Höhe des Rechtecks.\", false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Rectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.render();\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RectangleHelper = new RectangleHelper(this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: this.left, y: this.top }, { x: this.left, y: this.top + this.height },\r\n             { x: this.left + this.width, y: this.top + this.height }, { x: this.left + this.width, y: this.top }\r\n        ];\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.moveTo(this.left, this.top);\r\n        g.lineTo(this.left + this.width, this.top);\r\n        g.lineTo(this.left + this.width, this.top + this.height);\r\n        g.lineTo(this.left, this.top + this.height);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class RepeatTypeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"RepeatType\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null, \r\n                identifier: \"once\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"loop\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"backAndForth\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Gibt an, auf welche Art eine Sprite-Animation abgespielt werden soll.\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RoundedRectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RoundedRectangle\", module, \"Rechteck mit abgerundeten Ecken\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"RoundedRectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let radius: number = parameters[5].value;\r\n\r\n                let rh = new RoundedRectangleHelper(left, top, width, height, radius, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles abgerundetes Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.radius * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt den Eckradius zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des RoundedRectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RoundedRectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number, public radius: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.addCenterCircle(left + radius, top + radius, Math.PI/2);\r\n        this.addCenterCircle(left + radius, top + height - radius, Math.PI);\r\n        this.addCenterCircle(left + width - radius, top + height - radius, 3*Math.PI/2);\r\n        this.addCenterCircle(left + width - radius, top + radius, 0);\r\n        this.hitPolygonInitial.push({x: left + radius, y: top});\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RoundedRectangleHelper = new RoundedRectangleHelper(this.left, this.top, this.width, this.height, this.radius, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    addCenterCircle(midx: number, midy: number, angleStart: number){\r\n        let n = 8;\r\n        let dw = Math.PI/2/n;\r\n\r\n        for(let i = 0; i <= n; i++){\r\n            this.hitPolygonInitial.push({x: midx + this.radius*Math.cos(angleStart + dw*i), y: midy - this.radius*Math.sin(angleStart + dw*i)})\r\n        }\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawRoundedRect(this.left,this.top, this.width, this.height, this.radius);\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n        // g.lineStyle(1, 0xff0000, 1);\r\n\r\n        // g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n        // for(let i = 1; i < this.hitPolygonInitial.length; i++){\r\n        //     g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n        // }\r\n        \r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class ScaleModeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"ScaleMode\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"linear\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"nearest_neighbour\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Art der Interpolation der Pixelfarben beim Skalieren von grafischen Objekten\"\r\n    }\r\n\r\n}","export type SoundType = {\r\n    url: string,\r\n    name: string,\r\n    //@ts-ignore\r\n    player?: Howl,\r\n    description: string\r\n}\r\n\r\nexport class SoundTools {\r\n\r\n    static sounds: SoundType[] = [\r\n        {\r\n            url: \"assets/mp3/nearby_explosion_with_debris.mp3\",\r\n            name: \"nearby_explosion_with_debris\",\r\n            description: \"nahe Explosion mit herabfallenden Trümmern\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/nearby_explosion.mp3\",\r\n            name: \"nearby_explosion\",\r\n            description: \"nahe Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_bomb.mp3\",\r\n            name: \"far_bomb\",\r\n            description: \"fernes Geräusch einer Bombe\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/cannon_boom.mp3\",\r\n            name: \"cannon_boom\",\r\n            description: \"einzelner Kanonendonner\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_explosion.mp3\",\r\n            name: \"far_explosion\",\r\n            description: \"ferne Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/laser_shoot.mp3\",\r\n            name: \"laser_shoot\",\r\n            description: \"Laserschuss (oder was man dafür hält...)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_bell.mp3\",\r\n            name: \"short_bell\",\r\n            description: \"kurzes Klingeln (wie bei alter Landenkasse)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/flamethrower.mp3\",\r\n            name: \"flamethrower\",\r\n            description: \"Flammenwerfer\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/digging.mp3\",\r\n            name: \"digging\",\r\n            description: \"Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_digging.mp3\",\r\n            name: \"short_digging\",\r\n            description: \"kurzes Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/shoot.mp3\",\r\n            name: \"shoot\",\r\n            description: \"Schussgeräusch\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_shoot.mp3\",\r\n            name: \"short_shoot\",\r\n            description: \"ein kurzer Schuss\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/step.mp3\",\r\n            name: \"step\",\r\n            description: \"ein Schritt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/boulder.mp3\",\r\n            name: \"boulder\",\r\n            description: \"Geräusch eines Steins, der auf einen zweiten fällt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_d5.wav\",\r\n            name: \"pong_d\",\r\n            description: \"Tiefer Pong-Ton\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_f5.wav\",\r\n            name: \"pong_f\",\r\n            description: \"Hoher Pong-Ton\"\r\n        },\r\n    ]\r\n\r\n    static soundMap: Map<string, SoundType> = new Map();\r\n\r\n    static getVolume: () => number = () => {return -1};\r\n\r\n    private static isInitialized: boolean = false;\r\n\r\n    public static init() {\r\n        let praefix: string = \"\";\r\n        //@ts-ignore\r\n        if (window.javaOnlineDir != null) {\r\n            //@ts-ignore\r\n            praefix = window.javaOnlineDir;\r\n        }\r\n        if (!SoundTools.isInitialized) {\r\n            SoundTools.isInitialized = true;\r\n            for (let sound of SoundTools.sounds) {\r\n                //@ts-ignore\r\n                sound.player = new Howl({ src: [praefix + sound.url], preload: true })\r\n                SoundTools.soundMap.set(sound.name, sound);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public static play(name: string) {\r\n        let st: SoundType = SoundTools.soundMap.get(name);\r\n        if (st != null) {\r\n            st.player.play();\r\n        }\r\n    }\r\n\r\n    static volumeDetectionRunning: boolean = false;\r\n    public static startDetectingVolume() {\r\n        if(SoundTools.volumeDetectionRunning) return;\r\n        SoundTools.volumeDetectionRunning = true;\r\n        console.log(\"starting...\");\r\n        //@ts-ignore\r\n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\r\n        //@ts-ignore\r\n        if (navigator.getUserMedia) {\r\n            //@ts-ignore\r\n            navigator.getUserMedia({\r\n                audio: true\r\n            },\r\n                function (stream) {\r\n                    let audioContext = new AudioContext();\r\n                    let analyser = audioContext.createAnalyser();\r\n                    let microphone = audioContext.createMediaStreamSource(stream);\r\n\r\n                    analyser.smoothingTimeConstant = 0.8;\r\n                    analyser.fftSize = 1024;\r\n\r\n                    microphone.connect(analyser);\r\n\r\n                    SoundTools.getVolume = () => {\r\n                        if(!SoundTools.volumeDetectionRunning) return 0;\r\n                        var times = new Float32Array(analyser.frequencyBinCount);\r\n                        analyser.getFloatTimeDomainData(times);\r\n                        let volume = 0;\r\n                        for (let i = 0; i < times.length; i++) {\r\n                            volume += Math.abs(times[i]);\r\n                        }\r\n                        volume = volume / times.length;\r\n                        return volume;\r\n                    };\r\n                },\r\n                function (err) {\r\n                    console.log(\"The following error occured: \" + err.name)\r\n                });\r\n        } else {\r\n            console.log(\"getUserMedia not supported\");\r\n        }\r\n    }\r\n}\r\n\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\n\r\nexport class SoundKlass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Sound\", module, \"Aufzählung aller Geräusche\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            this.addAttribute(new Attribute(sound.name, stringPrimitiveType, (value) => { value.value = sound.name }, true, Visibility.public, true, sound.description));\r\n        }\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n            { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let sound: string = parameters[1].value;\r\n            SoundTools.play(sound);\r\n        }    \r\n        , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"getVolume\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n        (parameters) => {\r\n            if(!SoundTools.volumeDetectionRunning) SoundTools.startDetectingVolume();\r\n            return SoundTools.getVolume();\r\n        }    \r\n        , false, true, \"Gibt die aktuelle Mikrofonlautstärke zurück. Beim ersten Aufruf muss der Benutzer dem Browser die Erlaubnis zur Benutzung des Mikrofons geben. Solange dies noch nicht erfolgt ist, gibt die Funktion den Wert -1 zurück.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Punkt, abstandPunktZuGerade, abstand } from \"../../tools/MatheTools.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class HitPolygonStore {\r\n\r\n    private static polygonStore: { [path: string]: Punkt[] } = {};\r\n\r\n    public static getPolygonForTexture(name: string, index: number, spriteHelper: SpriteHelper, sprite: PIXI.Sprite): Punkt[] {\r\n\r\n        if (index == null) {\r\n            index = 0;\r\n        }\r\n        name += \"#\" + index;\r\n\r\n        let polygon = HitPolygonStore.polygonStore[name];\r\n\r\n        if (polygon == null) {\r\n            // polygon = HitPolygonStore.getPolygon(<PIXI.Sprite>spriteHelper.displayObject, spriteHelper.worldHelper);\r\n            polygon = HitPolygonStore.getPolygon(sprite, spriteHelper.worldHelper);\r\n\r\n            HitPolygonStore.polygonStore[name] = polygon;\r\n        }\r\n\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static getPolygon(sprite: PIXI.Sprite, worldHelper: WorldHelper): Punkt[] {\r\n\r\n        let pixels = worldHelper.app.renderer.plugins.extract.pixels(sprite);\r\n        let w = sprite.width;\r\n        let h = sprite.height;\r\n\r\n        if (pixels.length !== 4 * w * h) {\r\n            return [{ x: 0, y: 0 }, { x: w, y: 0 }, { x: w, y: h }, { x: 0, y: h }];\r\n        }\r\n\r\n        let polygon: Punkt[] = [];\r\n        let additionalPointsPerHalfBorder = 3;\r\n        let pointsPerBorder = additionalPointsPerHalfBorder*2 + 3;\r\n\r\n        let probes: Punkt[] = [];\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: 0}, {x: w-1, y: 0}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: 0}, {x: w-1, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: h-1}, {x: 0, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: h-1}, {x: 0, y: 0}, \r\n            pointsPerBorder, probes);\r\n\r\n        let mid = {x: w/2, y: h/2};    \r\n        for(let probe of probes){\r\n            HitPolygonStore.probe(polygon, probe, mid,w, h, pixels);\r\n        }\r\n\r\n        let done: boolean = false;\r\n        while(!done){\r\n            done = true;\r\n            for(let i = 0; i < polygon.length - 1; i++){\r\n                let d = abstandPunktZuGerade(polygon[i], polygon[(i+2)%polygon.length], polygon[i+1]);\r\n                if(d < 2){\r\n                    polygon.splice(i+1, 1);\r\n                    done = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(polygon);\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static addPointsOnLine(start: Punkt, end: Punkt, n: number, points: Punkt[]){\r\n    \r\n        let fx = (end.x - start.x)/(n-1);\r\n        let fy = (end.y - start.y)/(n-1);\r\n\r\n        for(let i = 1; i <= n - 1 + 0.1; i++ ){\r\n            points.push({\r\n                x: start.x + fx*i,\r\n                y: start.y + fy*i\r\n            });\r\n        }    \r\n\r\n\r\n    }\r\n\r\n    private static probe(polygon: Punkt[], start: Punkt, end: Punkt, \r\n        width: number, height: number, pixels: Uint8Array) {\r\n\r\n        let length = abstand(start, end);\r\n        let fx = (end.x - start.x) / length;\r\n        let fy = (end.y - start.y) / length;\r\n\r\n        let x: number, y: number;\r\n\r\n        for (let i = 0; i <= length - 2; i++) {\r\n\r\n            x = start.x + i * fx;\r\n            y = start.y + i * fy;\r\n\r\n            if (!HitPolygonStore.isTransparent(x, y, width, height, pixels)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        polygon.push({ x: x, y: y });\r\n\r\n    }\r\n\r\n\r\n    private static isTransparent(x: number, y: number, width: number, height: number, pixels: Uint8Array) {\r\n\r\n        if (x < 0 || y < 0 || x > width || y > height) {\r\n            return true;\r\n        }\r\n\r\n        let p = pixels[4 * Math.round(x) + 4 * width * Math.round(y) + 3];\r\n        // console.log(\"x: \" + x + \", y: \" + y + \", width: \" + width + \" = \" + p);\r\n        // console.log(\"index: \" + (4 * x + 4 * width * y + 3) + \", length: \" + pixels.length);\r\n\r\n        return p == 0;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpriteLibraryPage } from \"../../help/SpriteLibraryPage.js\";\r\nimport { RenderTexture } from \"@pixi/core\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class SpriteClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sprite\", module, \"Ein Sprite ist eine kleine Pixelgrafik, die verschoben, gedreht und skaliert werden kann. Zudem besitzt es Methoden zum Erkennen von Kollisionen mit anderen grafischen Objekten.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let scaleModeClass = <Klass>module.typeStore.getType(\"ScaleMode\")\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[5].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o, null, scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], \"linear\");\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Aufzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, null, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let index: number = parameters[2].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier, index);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImageIndex\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n\r\n                sh.setTexture(sh.textureName, index);\r\n\r\n            }, false, false, 'Ändert den Bildindex des Sprites.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"indexArray\", type: new ArrayType(intPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let indexArray: Value[] = parameters[1].value;\r\n                let repeatType: EnumRuntimeObject = parameters[2].value;\r\n                let imagesPerSecond: number = parameters[3].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                let indices: number[] = [];\r\n                for (let v of indexArray) {\r\n                    indices.push(v.value);\r\n                }\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"toIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fromIndex: number = parameters[1].value;\r\n                let toIndex: number = parameters[2].value;\r\n                let repeatType: EnumRuntimeObject = parameters[3].value;\r\n                let imagesPerSecond: number = parameters[4].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                let indices: number[] = [];\r\n\r\n                if (Math.abs(toIndex - fromIndex) < 10000) {\r\n                    let delta = Math.sign(toIndex - fromIndex);\r\n                    for (let i = fromIndex; i != toIndex; i = i + delta) indices.push(i);\r\n                }\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"stopAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.stopAnimation(false);\r\n\r\n            }, false, false, 'Stoppt die gerade laufende Animation', false));\r\n\r\n        this.addMethod(new Method(\"pauseAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"pauseAnimation\")) return;\r\n\r\n                sh.pauseAnimation();\r\n\r\n            }, false, false, 'Pausiert die laufende Animation.', false));\r\n\r\n        this.addMethod(new Method(\"resumeAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"resumeAnimation\")) return;\r\n\r\n                sh.resumeAnimation();\r\n\r\n            }, false, false, 'Fährt mit einer pausierten Animation wieder fort.', false));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sprite-Objekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"makeTiling\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"makeTiling\")) return;\r\n\r\n                sh.makeTiling(width, height);\r\n\r\n            }, false, false, \"Fügt das identische Bild nach rechts und unten kachelartig ('tile'!) so oft hinzu, bis die angegebene Breite erreicht ist. \\nTIPP: Mit der Methode getTileImage() erhält man ein Tile-Objekt, dessen Methoden move, scale, mirrorX und mirrorY sich gleichzeitig auf jede einzelne Kachel auswirken.\", false));\r\n\r\n        this.addMethod(new Method(\"getTileImage\", new Parameterlist([\r\n        ]), <Klass>module.typeStore.getType(\"Tile\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getTileImage\")) return;\r\n\r\n                if(!sh.isTileSprite){\r\n                    sh.worldHelper.interpreter.throwException(\"Das Sprite hat kein TileImage. Sie müssen es zuerst mit der Methode makeTiling in ein Kachel-Sprite umwandeln.\")\r\n                    return;\r\n                }\r\n\r\n                let ret: RuntimeObject = new RuntimeObject(<Klass>module.typeStore.getType(\"Tile\"));\r\n\r\n                ret.intrinsicData[\"Actor\"] = new TileHelper(sh);\r\n\r\n                return ret;\r\n\r\n            }, false, false, \"Nachdem das Sprite mittels der Methode 'makeTiling' zum TileSprite gemacht wurde, kann wirken die Methoden move, scale und rotate immer auf den ganzen gekachelten Bereich. Will man das verfielfachte Bild ändern, so bekommt man über diese Methode das Sprite-Objekt, das diesem Bild entspricht. Ruft man für dieses Objekt die Methoden move, rotate oder scale auf, so wirken sie auf jede der einzelnen Kacheln.\", false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SpriteHelper extends ShapeHelper {\r\n\r\n    animationIndices: number[] = [];\r\n    animationRuns: boolean = false;\r\n    imagesPerMillisecond: number = 1;\r\n    animationTime: number = 0;\r\n    animationPaused: boolean = false;\r\n\r\n    repeatType = \"once\";\r\n    textureName: string = \"\";\r\n\r\n    isTileSprite: boolean = false;\r\n\r\n    constructor(public x: number, public y: number, public name: string, public index: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, copyFromOtherShape?: ShapeHelper,\r\n        public scaleMode: string = \"nearest_neighbour\") {\r\n        super(interpreter, runtimeObject);\r\n\r\n        if (copyFromOtherShape == null) {\r\n            this.setTexture(null, index);\r\n        } else {\r\n            this.copyBitmapFromShape(copyFromOtherShape);\r\n            let bounds = copyFromOtherShape.displayObject.getBounds();\r\n            this.x = bounds.left + bounds.width / 2;\r\n            this.y = bounds.top + bounds.height / 2;\r\n        }\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        this.displayObject.localTransform.translate(this.x - sprite.width / 2, this.y - sprite.height / 2);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.worldHelper.stage.addChild(sprite);\r\n\r\n        this.centerXInitial = sprite.width / 2;\r\n        this.centerYInitial = sprite.height / 2;\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    makeTiling(width: number, height: number) {\r\n        width /= this.scaleFactor;\r\n        height /= this.scaleFactor;\r\n        let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n        let tileSprite = new PIXI.TilingSprite(sprite.texture, width, height);\r\n        sprite.texture.baseTexture.mipmap = PIXI.MIPMAP_MODES.OFF;\r\n        tileSprite.setParent(sprite.parent);\r\n        tileSprite.transform.localTransform.copyFrom(sprite.transform.localTransform);\r\n        //@ts-ignore\r\n        tileSprite.transform.onChange();\r\n        tileSprite.updateTransform();\r\n        // tileSprite.clampMargin = -0.5;\r\n        this.displayObject = tileSprite;\r\n        this.centerXInitial += -sprite.width / 2 + width / 2;\r\n        this.centerYInitial += -sprite.height / 2 + height / 2;\r\n        let left = this.centerXInitial - width / 2;\r\n        let top = this.centerYInitial - height / 2;\r\n        let right = left + width;\r\n        let bottom = top + height;\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: right, y: top }, { x: right, y: bottom }, { x: left, y: bottom }\r\n        ];\r\n        this.setHitPolygonDirty(true);\r\n        sprite.destroy();\r\n        this.isTileSprite = true;\r\n    }\r\n\r\n    setTileOffset(x: number, y: number) {\r\n        if (this.isTileSprite) {\r\n            let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.displayObject;\r\n            tileSprite.tilePosition.set(x, y);\r\n        }\r\n    }\r\n\r\n\r\n    copyBitmapFromShape(copyFromOtherShape: ShapeHelper) {\r\n\r\n        let bounds = copyFromOtherShape.displayObject.getBounds();\r\n\r\n        let width = bounds.width;\r\n        let height = bounds.height;\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: this.scaleMode == \"nearest_neighbour\" ? PIXI.SCALE_MODES.NEAREST : PIXI.SCALE_MODES.LINEAR,\r\n                width: width,\r\n                height: height\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let dob = copyFromOtherShape.displayObject;\r\n        this.worldHelper.app.renderer.render(dob, {\r\n            renderTexture: rt,\r\n            transform: new PIXI.Matrix().translate(-bounds.left, -bounds.top)\r\n        });\r\n\r\n        let points: convexhull.Point[] = [];\r\n        points = this.extractPoints(copyFromOtherShape, points);\r\n\r\n        for (let p of points) {\r\n            p.x -= bounds.left;\r\n            p.y -= bounds.top;\r\n        }\r\n\r\n        this.hitPolygonInitial = points;\r\n        this.hitPolygonInitial = convexhull.makeHull(points);\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        this.displayObject = new PIXI.Sprite(rt);\r\n\r\n        copyFromOtherShape.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[] {\r\n        if (shapeHelper instanceof GroupHelper) {\r\n            for (let sh of shapeHelper.shapes) {\r\n                points = this.extractPoints(sh.intrinsicData[\"Actor\"], points);\r\n            }\r\n            return points;\r\n        } else {\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function (punkt) { return { x: punkt.x, y: punkt.y } }));\r\n\r\n        }\r\n    }\r\n\r\n    getWidth(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.width * this.scaleFactor;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.height * this.scaleFactor;\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SpriteHelper = new SpriteHelper(this.x, this.y, this.name, this.index, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    setAlpha(alpha: number) {\r\n        this.displayObject.alpha = alpha;\r\n    }\r\n\r\n    setTexture(name?: string, index?: number) {\r\n\r\n        if (name == this.name && index == this.index) return;\r\n\r\n        if (name == null) name = this.name;\r\n        if (index == null) index = 0;\r\n        this.index = index;\r\n\r\n        this.textureName = name;\r\n\r\n        // let prefix = \"\";\r\n        // //@ts-ignore\r\n        // if (window.javaOnlineDir != null) {\r\n        //     //@ts-ignore\r\n        //     prefix = window.javaOnlineDir;\r\n        // }\r\n\r\n        // let sheet = PIXI.Loader.shared.resources[prefix + \"assets/graphics/spritesheet.json\"].spritesheet;\r\n        let sheet = PIXI.Loader.shared.resources[\"spritesheet\"].spritesheet;\r\n        let nameWithIndex = name + \"#\" + index;\r\n        let texture = sheet.textures[nameWithIndex];\r\n\r\n        if (texture != null) {\r\n\r\n            if (this.scaleMode == \"linear\") {\r\n\r\n                let t = this.worldHelper.scaledTextures[nameWithIndex];\r\n\r\n                if (t == null) {\r\n                    let sprite = new PIXI.Sprite(texture);\r\n\r\n                    let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                        width: sprite.width,\r\n                        height: sprite.height,\r\n                        scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                    });\r\n\r\n                    this.worldHelper.app.renderer.render(sprite, {\r\n                        renderTexture: dynamicTexture1\r\n                    });\r\n                    this.worldHelper.scaledTextures[nameWithIndex] = dynamicTexture1;\r\n                    t = dynamicTexture1;\r\n                }\r\n\r\n                texture = t;\r\n                if (texture == null) texture = sheet.textures[nameWithIndex];\r\n\r\n                // let t = this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration];\r\n                // if( t != null){\r\n                //     texture = t;\r\n                // } else {\r\n                //     let sprite = new PIXI.Sprite(texture);\r\n\r\n                //     let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width,\r\n                //         height: sprite.height,\r\n                //         scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                //     });\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n\r\n                //     sprite = new PIXI.Sprite(dynamicTexture1);\r\n\r\n                //     let dynamicTexture2 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width * this.scaleOnTextureGeneration,\r\n                //         height: sprite.height * this.scaleOnTextureGeneration,\r\n                //         scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                //     });\r\n\r\n                //     let m = new PIXI.Matrix();\r\n                //     m.scale(this.scaleOnTextureGeneration, this.scaleOnTextureGeneration);\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture2, true,\r\n                //         m);\r\n\r\n                //     texture = dynamicTexture2;\r\n\r\n                //     this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration] = texture;\r\n            }\r\n\r\n            let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n            if (sprite == null) {\r\n                sprite = new PIXI.Sprite(texture);\r\n                this.displayObject = sprite;\r\n            } else {\r\n                sprite.texture = texture; // sheet.textures[nameWithIndex];\r\n            }\r\n\r\n            this.hitPolygonInitial = HitPolygonStore.getPolygonForTexture(name, index, this, new PIXI.Sprite(sheet.textures[nameWithIndex]));\r\n            this.hitPolygonDirty = true;\r\n\r\n        } else {\r\n            if (this.displayObject == null) {\r\n                this.displayObject = new PIXI.Sprite();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    playAnimation(indexArray: number[], repeatType: string, imagesPerSecond: number) {\r\n        this.stopAnimation(false);\r\n        this.animationIndices = indexArray;\r\n        this.repeatType = repeatType;\r\n        this.imagesPerMillisecond = imagesPerSecond / 1000;\r\n        this.animationTime = 0;\r\n        this.animationRuns = true;\r\n        this.worldHelper.spriteAnimations.push(this);\r\n    }\r\n\r\n    stopAnimation(setInvisible: boolean) {\r\n        if (this.animationRuns) {\r\n            let spriteHelperList = this.worldHelper.spriteAnimations;\r\n            let i = spriteHelperList.indexOf(this);\r\n            if (i >= 0) spriteHelperList.splice(i, 1);\r\n        }\r\n        this.animationRuns = false;\r\n        if (setInvisible) this.setVisible(false);\r\n    }\r\n\r\n    pauseAnimation() {\r\n        this.animationPaused = true;\r\n    }\r\n\r\n    resumeAnimation() {\r\n        this.animationPaused = false;\r\n    }\r\n\r\n    tick(deltaTime: number) {\r\n\r\n        if (this.animationPaused) return;\r\n\r\n        let image: number;\r\n\r\n        if (this.repeatType == \"backAndForth\") {\r\n            let period2 = this.animationIndices.length * 2 / this.imagesPerMillisecond;\r\n            let numberOfPeriodsDone = Math.trunc(this.animationTime / period2);\r\n            let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period2;\r\n            image = this.imagesPerMillisecond * timeIntoPeriod;\r\n            if (image >= this.animationIndices.length) {\r\n                image = Math.max(2 * this.animationIndices.length - 0.1 - image, 0);\r\n            }\r\n            image = Math.trunc(image);\r\n        } else\r\n            if (this.repeatType == \"loop\") {\r\n                let period = this.animationIndices.length / this.imagesPerMillisecond;\r\n                let numberOfPeriodsDone = Math.trunc(this.animationTime / period);\r\n                let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period;\r\n                image = this.imagesPerMillisecond * timeIntoPeriod;\r\n                image = Math.trunc(image);\r\n            } else {\r\n                image = Math.trunc(this.imagesPerMillisecond * this.animationTime);\r\n                if (image >= this.animationIndices.length) {\r\n                    this.stopAnimation(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n        this.animationTime += deltaTime;\r\n\r\n        this.setTexture(null, this.animationIndices[image]);\r\n    }\r\n\r\n}\r\n\r\nexport class TileClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Tile\", module, \"Eine Kachel in einem Sprite, das mithilfe der Methode makeTiling zu einer Kachelfläche gemacht wurde.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport class TileHelper {\r\n    constructor(public spriteHelper: SpriteHelper) {\r\n    }\r\n\r\n    move(dx: number, dy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tilePosition.x += dx;\r\n        tileSprite.tilePosition.y += dy;\r\n    }\r\n    \r\n    scale(fx: number, fy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tileScale.x *= fx;\r\n        tileSprite.tileScale.y *= fy;\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        return this.spriteHelper.testdestroyed(method);\r\n    }\r\n\r\n\r\n}","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\ntype SpriteLibraryEntry = {\r\n    filename: string,\r\n    name: string,\r\n    index?: number\r\n}\r\n\r\ndeclare var SpriteLibrary: SpriteLibraryEntry[];\r\n\r\nexport class SpriteLibraryClass extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SpriteLibrary\", module,\r\n\r\n            SpriteLibrary.filter(\r\n                (sle) => {\r\n                    return sle.index == null || sle.index == 0\r\n                }\r\n            ).map((sle: SpriteLibraryEntry) => {\r\n                return {\r\n                    type: TokenType.pushEnumValue,\r\n                    position: null,\r\n                    identifier: sle.name\r\n                };\r\n\r\n            })\r\n\r\n        );\r\n        this.documentation = \"Aufzählung der Sprite-Grafiken\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class TextClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Text\", module, \"Text, der innerhalb der Grafikausgabe dargestellt werden kann\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"font-family\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n                let fontFamily: string = parameters[5].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o, fontFamily);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"setFontsize\", new Parameterlist([\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fontsize: number = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setFontsize(fontsize);\r\n\r\n            }, false, false, 'Setzt die Schriftgröße des Textes (Einheit: Pixel).', false));\r\n\r\n        this.addMethod(new Method(\"setAlignment\", new Parameterlist([\r\n            { identifier: \"alignment\", type: module.typeStore.getType(\"Alignment\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alignment: EnumRuntimeObject = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setAlignment(alignment.enumValue.identifier);\r\n\r\n            }, false, false, 'Setzt die Ausrichtung in X-Richtung. Zulässige Werte sind \"Alignment.left\", \"Alignment.right\" und \"Alignment.center\".', false));\r\n\r\n        this.addMethod(new Method(\"setText\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let text: string = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, 'Setzt den Text.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Text-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, 'Gibt die Breite des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setStyle\", new Parameterlist([\r\n            { identifier: \"isBold\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"isItalic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let isBold: boolean = parameters[1].value;\r\n                let isItalic: boolean = parameters[2].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                sh.setStyle(isBold, isItalic);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class TextHelper extends FilledShapeHelper {\r\n\r\n    alignment: string = \"left\";\r\n\r\n    textStyle: PIXI.TextStyle =\r\n        new PIXI.TextStyle({\r\n            fontFamily: 'Arial',\r\n            fontSize: this.fontsize,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal',\r\n            fill: [this.fillColor], // gradient possible...\r\n            stroke: this.borderColor,\r\n            strokeThickness: this.borderWidth,\r\n            dropShadow: false,\r\n            wordWrap: false,\r\n            align: \"left\",\r\n            lineJoin: 'round'\r\n        });\r\n\r\n    constructor(public x: number, public y: number, public fontsize: number,\r\n        public text: string,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, public fontFamily?: string) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = x;\r\n        this.centerYInitial = y;\r\n\r\n        if (this.fontsize == 0) this.fontsize = 10;\r\n\r\n        this.borderColor = null;\r\n        this.textStyle.stroke = null;\r\n        if (fontFamily != null) {\r\n            this.textStyle.fontFamily = fontFamily;\r\n        }\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n    }\r\n\r\n    setStyle(isBold: boolean, isItalic: boolean){\r\n        this.textStyle.fontWeight = isBold ? \"bold\" : \"normal\";\r\n        this.textStyle.fontStyle = isItalic ? \"italic\" : \"normal\";\r\n        this.render();\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TextHelper = new TextHelper(this.x, this.y, this.fontsize, this.text, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.alignment = this.alignment;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        this.textStyle.fill = this.fillColor;\r\n        this.textStyle.stroke = this.borderColor;\r\n        this.textStyle.strokeThickness = this.borderWidth;\r\n        this.textStyle.fontSize = this.fontsize;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Text(this.text, this.textStyle);\r\n            this.displayObject = g;\r\n            this.displayObject.localTransform.translate(this.x, this.y);\r\n            //@ts-ignore\r\n            this.displayObject.transform.onChange();\r\n            this.worldHelper.stage.addChild(g);\r\n        } else {\r\n            g.text = this.text;\r\n            g.alpha = this.fillAlpha;\r\n            switch (this.alignment) {\r\n                case \"left\": g.anchor.x = 0; break;\r\n                case \"center\": g.anchor.x = 0.5; break;\r\n                case \"right\": g.anchor.x = 1.0; break;\r\n            }\r\n            g.style = this.textStyle;\r\n        }\r\n\r\n        this.centerXInitial = 0;\r\n        this.centerYInitial = 0;\r\n        if (this.text != null) {\r\n            let tm = PIXI.TextMetrics.measureText(this.text, this.textStyle);\r\n\r\n            this.centerXInitial = tm.width / 2;\r\n            this.centerYInitial = tm.height / 2;\r\n        }\r\n\r\n\r\n    };\r\n\r\n    setFontsize(fontsize: number) {\r\n        this.fontsize = fontsize;\r\n        if (this.fontsize == 0) this.fontsize = 10;\r\n        this.render();\r\n    }\r\n\r\n    setText(text: string) {\r\n        this.text = text;\r\n        this.render();\r\n    }\r\n\r\n    setAlignment(alignment: string) {\r\n        this.alignment = alignment;\r\n        this.render();\r\n    }\r\n\r\n    getWidth(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.width;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.height;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, charPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Input\", module, \"Klasse mit statischen Methoden zur Eingabe von Text per Tastatur\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n        /**\r\n         * Same methods without default value:\r\n         */\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n    }\r\n\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class GamepadClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Gamepad\", module, \"Klasse mit statischen Methoden zur Abfrage der Gamepads\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        // this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"isButtonDown\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let buttonIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\r\n\r\n            }, false, true, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\r\n\r\n        this.addMethod(new Method(\"isConnected\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\r\n\r\n            }, false, true, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\r\n\r\n        this.addMethod(new Method(\"getAxisValue\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let axisIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\r\n\r\n            }, false, true, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\r\n\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class MathClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Math\", module, \"Klasse mit statischen Methoden zur Berechnung mathematischer Funktionen (sin, cos, abs, ...) und zur Ermittlung von Zufallszahlen.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"round\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.round(<number>parameters[1].value);\r\n            }, false, true, \"**Rundet** den Wert\"));\r\n\r\n        this.addMethod(new Method(\"floor\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.floor(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert ab, sucht also die **nächstkleinere** ganze Zahl\"));\r\n\r\n        this.addMethod(new Method(\"ceil\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.ceil(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert auf, sucht also die **nächstgrößere** Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(<number>parameters[1].value);\r\n            }, false, true, \"Gibt das Vorzeichen der Zahl zurück, d.h. \\n  - -1, falls die Zahl **negativ** ist,\\n  - 0, falls die Zahl **0** ist und\\n  - +1, falls die Zahl **positiv** ist.\"));\r\n\r\n        this.addMethod(new Method(\"sqrt\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sqrt(<number>parameters[1].value);\r\n            }, false, true, \"Gibt die **Quadratwurzel** der Zahl zurück. Für andere Wurzeln benutze Math.pow(a, b), z.B. Math.pow(10, 1.0/3.0) für die Kubikwurzel aus 10.\"));\r\n\r\n        this.addMethod(new Method(\"random\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.random();\r\n            }, false, true, \"Gibt eine Zufallszahl aus dem Intervall [0;1[ zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pow\", new Parameterlist([\r\n            { identifier: \"Basis\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Exponent\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.pow(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, 'Math.pow(a, b) gibt \"a hoch b\" zurück.'));\r\n\r\n        this.addMethod(new Method(\"toDegrees\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / Math.PI * 180;\r\n            }, false, true, \"Wandelt einen Winkel von Rad in Grad um, d.h. berechnet Winkel/Pi*180.\"));\r\n\r\n        this.addMethod(new Method(\"toRadians\", new Parameterlist([\r\n            { identifier: \"WinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / 180 * Math.PI;\r\n            }, false, true, \"Wandelt einen Winkel von Grad in Rad um, d.h. berechnet Winkel/180*Pi.\"));\r\n\r\n        this.addMethod(new Method(\"exp\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.exp(<number>parameters[1].value);\r\n            }, false, true, 'Berechnet \"e hoch die Zahl\".'));\r\n\r\n        this.addMethod(new Method(\"log\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den natürlichen Logarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"log10\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log10(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Zehnerlogarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"sin\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Sinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"cos\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.cos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Cosinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"tan\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.tan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Tangens des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"asin\", new Parameterlist([\r\n            { identifier: \"WertDesSinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.asin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Sinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"acos\", new Parameterlist([\r\n            { identifier: \"WertDesCosinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.acos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Cosinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan\", new Parameterlist([\r\n            { identifier: \"WertDesTangens\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Tangens des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan2\", new Parameterlist([\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan2(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Sind (x, y) die kartesischen Koordinaten eines Punktes, so ist Math.atan2(x, y) der Winkel alpha der Polarkoordinaten (alpha, r) des Punktes. \\n**Bem.: **Alpha wird in Rad berechnet.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { abstandPunktZuGerade, abstandPunktZuStrecke, polygonEnthältPunkt, Punkt, schnittpunkteKreisStrecke, streckeSchneidetStrecke, vektorVonPolarkoordinaten } from \"../tools/MatheTools.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport class MathToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MathTools\", module, \"Klasse mit mathematischen Hilfsfunktionen als statische Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n        let vectorArrayClass = new ArrayType(vector2Class);\r\n\r\n        let xIndex = vector2Class.attributeMap.get(\"x\").index;\r\n        let yIndex = vector2Class.attributeMap.get(\"y\").index;\r\n\r\n\r\n        this.addMethod(new Method(\"intersectCircleWithPolygon\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vectorArrayClass,\r\n            (parameters) => {\r\n\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n                let points: Value[] = parameters[4].value;\r\n\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let schnittpunkte: Punkt[] = [];\r\n                let m: Punkt = {x: mx, y: my};\r\n                for(let i = 0; i < punkte.length; i++){\r\n                    let p1 = punkte[i];\r\n                    let p2 = punkte[(i+1)%punkte.length];\r\n                    schnittpunkteKreisStrecke(m, r, p1, p2, schnittpunkte);\r\n                }\r\n\r\n                let returnArray: Value[] = []\r\n\r\n                for(let p of schnittpunkte){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: p.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: p.y};\r\n                    returnArray.push({type: vector2Class, value:pVector});\r\n                }\r\n\r\n                return returnArray;\r\n\r\n            }, false, true, \"Zu einem gegebenen Kreis werden die Punkte berechnet, die auf den Seiten eines gegebenen Polygons liegen.\"));\r\n\r\n        this.addMethod(new Method(\"intersectLineSegments\", new Parameterlist([\r\n            { identifier: \"p0\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p1\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p2\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p3\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vector2Class,\r\n            (parameters) => {\r\n\r\n                let p: Punkt[] = [];\r\n                for(let i = 0; i < 4; i++){\r\n                    let att = parameters[i].value.attributes;\r\n                    p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                }\r\n\r\n                let ps: Punkt = {x: 0, y: 0};\r\n                if(streckeSchneidetStrecke(p[0], p[1], p[2], p[3], ps)){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: ps.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: ps.y};\r\n                    return pVector;\r\n                } else {\r\n                    return null;                    \r\n                }\r\n\r\n            }, false, true, \"Berechnet den Schnittpunkt der Strecken [p0, p1] und [p2, p3]. Gibt null zurück, wenn sich die Strecken nicht schneiden oder wenn sie parallel sind und teilweise aufeinander liegen.\"));\r\n\r\n        this.addMethod(new Method(\"polygonContainsPoint\", new Parameterlist([\r\n            { identifier: \"polygonPoints\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let points = parameters[1].value;\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let att = parameters[2].value.attributes;\r\n                let p: Punkt = {x: att[xIndex].value, y: att[yIndex].value}\r\n\r\n                return polygonEnthältPunkt(punkte, p);\r\n\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Polygon den Punkt enthält.\"));\r\n\r\n            this.addMethod(new Method(\"distancePointToLine\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuGerade(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Gerade AB.\"));\r\n    \r\n            this.addMethod(new Method(\"distancePointToLineSegment\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuStrecke(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Strecke [AB].\"));\r\n    \r\n    \r\n\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemClass extends Klass {\r\n\r\n    printStream: RuntimeObject;\r\n\r\n    deltaTimeMillis: number = 0; // when using WebSocket then the Server sends time synchronization\r\n\r\n    constructor(module: Module) {\r\n        super(\"System\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Sound, Löschen der Ausgabe usw.\");\r\n\r\n        this.printStream = new RuntimeObject(<Klass>module.typeStore.getType(\"PrintStream\"));\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"out\", module.typeStore.getType(\"PrintStream\"),\r\n            (value) => { value.value = this.printStream }, true, Visibility.public, true, \"PrintStream-Objekt, mit dem Text ausgegeben werden kann.\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        // this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        // ]), null,\r\n        //     (parameters) => {\r\n        //         module.main.getInterpreter().printManager.clear();\r\n        //     }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        // this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n        //     { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let r: RuntimeObject = parameters[1].value;\r\n        //     let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n        //     if (method != null) {\r\n\r\n        //         module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n        //             let program = method?.program;\r\n        //             let invoke = method?.invoke;\r\n\r\n        //             let stackElements: Value[] = [\r\n        //                 {\r\n        //                     type: r.class,\r\n        //                     value: r\r\n        //                 },\r\n        //                 {\r\n        //                     type: stringPrimitiveType,\r\n        //                     value: key\r\n        //                 }\r\n        //             ];\r\n\r\n        //             if (program != null) {\r\n        //                 module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n        //             } else if (invoke != null) {\r\n        //                 invoke([]);\r\n        //             }\r\n\r\n\r\n        //         });\r\n        //     }\r\n        // }    \r\n        // , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"currentTimeMillis\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Date.now() + this.deltaTimeMillis;\r\n            }\r\n            , false, true, \"Gibt die Anzahl der Millisekunden, die seit dem 01.01.1970 00:00:00 UTC vergangen sind, zurück.\"));\r\n\r\n        this.addMethod(new Method(\"exit\", new Parameterlist([\r\n            { identifier: \"status\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n                let console = module.main.getBottomDiv()?.console;\r\n                if(console != null){\r\n                    console.writeConsoleEntry(\"Das Programm wurde angehalten mit Statuswert: \" + parameters[1].value, null, \"#0000ff\");\r\n                    console.showTab();\r\n                }\r\n                module.main.getInterpreter().stop();\r\n            }\r\n            , false, true, \"Beendet das Programm und gibt den übergebenen Wert in der Konsole aus.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(\"\");\r\n            }, false, true, \"Setzt den Cursor in die nächste Zeile.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SystemTools\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Löschen der Ausgabe, Registrieren eines Tastaturlisteners usw.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.clear();\r\n            }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        this.addMethod(new Method(\"setSpeed\", new Parameterlist([\r\n            {identifier: \"speed\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let speed: number = parameters[1].value;\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(speed >= 1 ? speed : \"max\");\r\n\r\n            }, false, true, \"Setzt die Ausführungsgeschwindigkeit. Der Parameter speed wir in Steps/Sekunde angegeben. Eine negative Zahl bedeutet: 'maximal'.\"));\r\n\r\n        this.addMethod(new Method(\"getSpeed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return module.main.getInterpreter().controlButtons.speedControl.getSpeedInStepsPerSecond();\r\n\r\n            }, false, true, \"Gibt die Ausführungsgeschwindigkeit in Steps pro Sekunde zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pause\", new Parameterlist([\r\n            {identifier: \"durationInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n            }, false, true, \"Pausiert das Programm für die angegebene Zeit in ms.\"));\r\n\r\n        this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n            { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let r: RuntimeObject = parameters[1].value;\r\n                let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n                if (method != null) {\r\n\r\n                    module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n                        let program = method?.program;\r\n                        let invoke = method?.invoke;\r\n\r\n                        let stackElements: Value[] = [\r\n                            {\r\n                                type: r.class,\r\n                                value: r\r\n                            },\r\n                            {\r\n                                type: stringPrimitiveType,\r\n                                value: key\r\n                            }\r\n                        ];\r\n\r\n                        if (program != null) {\r\n                            module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n                        } else if (invoke != null) {\r\n                            invoke([]);\r\n                        }\r\n\r\n\r\n                    });\r\n                }\r\n            }\r\n            , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n    }\r\n}\r\n\r\nexport class KeyListener extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"KeyListener\", module, \"Interface mit Methode onKeyTyped. Eine Klasse, die dieses Interface implementiert, kann auf Tastatureingaben reagieren. Ein Objekt dieser Klasse muss zuvor aber mit System.addKeyListener() registriert werden.\");\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, nachdem eine Taste gedrückt wurde.\"));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { InterpreterState, Interpreter } from \"../interpreter/Interpreter.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\n\r\n\r\nexport class Runnable extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Runnable\", module);\r\n\r\n        this.addMethod(new Method(\"run\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird vom Timer immer wieder aufgerufen\"));\r\n    }\r\n\r\n}\r\n\r\ntype TimerEntry = {\r\n    timerListener: RuntimeObject,\r\n    dt: number,\r\n    running: boolean,\r\n    lastTimeFired: number,\r\n    method: Method\r\n}\r\n\r\nexport class TimerClass extends Klass {\r\n\r\n    timerEntries: TimerEntry[] = [];\r\n    timerRunning: boolean = false;\r\n\r\n    timerStarted: boolean = false;\r\n\r\n    constructor(module: Module) {\r\n        super(\"Timer\", module, \"Timer Klasse zur periodischen Ausführung von Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"repeat\", new Parameterlist([\r\n            {\r\n                identifier: \"runnable\", type: module.typeStore.getType(\"Runnable\"),\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n            {\r\n                identifier: \"deltaTimeInMs\", type: intPrimitiveType,\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let tl: RuntimeObject = <RuntimeObject>parameters[1].value;\r\n                let dt: number = <number>parameters[2].value;\r\n\r\n                let timerEntry: TimerEntry = {\r\n                    timerListener: tl,\r\n                    dt: dt,\r\n                    lastTimeFired: 0,\r\n                    running: true,\r\n                    method: tl.class.getMethod(\"run\", new Parameterlist([\r\n                        // {\r\n                        //     identifier: \"deltaTimeInMs\",\r\n                        //     type: intPrimitiveType,\r\n                        //     declaration: null,\r\n                        //     isFinal: true,\r\n                        //     usagePositions: null\r\n                        // }\r\n                    ]))\r\n                }\r\n\r\n                this.timerEntries.push(timerEntry);\r\n\r\n                // console.log(\"TimerListener added with dt = \" + dt + \" ms.\");\r\n\r\n            }, false, true, \"Fügt ein neues TimerListener-Objekt hinzu und ruft dessen tick-Methode immer wieder auf.\"));\r\n\r\n    }\r\n\r\n    startTimer(){\r\n        if(!this.timerStarted){\r\n            this.timerStarted = true;\r\n            this.processTimerEntries();\r\n        }\r\n    }\r\n    \r\n    stopTimer(){\r\n        this.timerStarted = false;\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if(!this.timerStarted){\r\n            return;\r\n        }\r\n\r\n        if (this.timerEntries.length > 0) {\r\n            let interpreter = this.module?.main?.getInterpreter();\r\n\r\n            if (interpreter != null) {\r\n                if (!this.timerRunning && interpreter.state == InterpreterState.running) {\r\n                    let t: number = performance.now();\r\n                    for (let timerentry of this.timerEntries) {\r\n                        let dt = t - timerentry.lastTimeFired;\r\n                        if (dt >= timerentry.dt) {\r\n                            this.runEntry(timerentry, interpreter, Math.round(dt));\r\n                            timerentry.lastTimeFired = t;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                switch (interpreter.state) {\r\n                    case InterpreterState.done:\r\n                    case InterpreterState.error:\r\n                    case InterpreterState.not_initialized:\r\n                        this.timerEntries = [];\r\n                        this.timerRunning = false;\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, 10);\r\n\r\n    }\r\n\r\n    runEntry(timerentry: TimerEntry, interpreter: Interpreter, dt: number) {\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: timerentry.timerListener.class,\r\n                value: timerentry.timerListener\r\n            },\r\n            // {\r\n            //     type: intPrimitiveType,\r\n            //     value: dt\r\n            // }\r\n        ];\r\n\r\n        this.timerRunning = true;\r\n        let that = this;\r\n\r\n        interpreter.runTimer(timerentry.method, stackElements, (interpreter) => {\r\n            that.timerRunning = false;\r\n        }, false);\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class MapClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Map\", module, \"Interface mit Methoden einer Map (Schlüssel-Wert-Speicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Map zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Map leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Map.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class MapHelper {\r\n\r\n    keyArray: Value[] = [];\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, Value> = new Map(); // Maps key objects to value-Values\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    get(key: Value){\r\n        return this.map.get(key.value);\r\n    }\r\n\r\n    set(key: Value, value: Value): Value {\r\n\r\n        let old = this.map.get(key.value);\r\n\r\n        if(old == null){\r\n            this.keyArray.push(key);\r\n        } else {\r\n            this.valueArray.splice(this.valueArray.indexOf(old), 1);\r\n        }\r\n\r\n        this.valueArray.push(value);\r\n        \r\n        this.map.set(key.value, value);\r\n\r\n        return old;\r\n\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.keyArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            let s = \"[\";\r\n            for (let i = 0; i < this.keyArray.length; i++) {\r\n                s += \"\" + this.keyArray[i].value + \" => \" + this.valueArray[i].value;\r\n                if (i < this.keyArray.length - 1) s += \", \";\r\n            }\r\n\r\n            return s + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.keyArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \" => \",\r\n                position: position,\r\n                stepFinished: false\r\n            });\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    leftType: stringPrimitiveType,\r\n                    operator: TokenType.plus,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    containsKey(key: Value): any {\r\n        return this.map.get(key.value) != null;\r\n    }\r\n\r\n    containsValue(value: Value): any {\r\n        for(let v of this.valueArray){\r\n            if(v.value == value.value) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.keyArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { MapHelper } from \"./MapHelper.js\";\r\n\r\nexport class HashMapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashMap\", module, \"Map-Klasse mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Map\")).clone();\r\n        setInterface.typeVariables = [tvK, tvV];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        this.addMethod(new Method(\"HashMap\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new MapHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert eine neue HashMap', true));\r\n\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let value: Value = parameters[2];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.set(key, value);\r\n\r\n            }, false, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Key-Value-Pairs aus dieser HashMap.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsKey(key);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let value: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsValue(value);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                let v: Value = ah.get(key);\r\n                return v == null ? null : v.value;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die HashMap leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der key-value-pairs der HashMap zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class TriangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Triangle\", module, \"Dreieck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Polygon\"));\r\n\r\n        this.addMethod(new Method(\"Triangle\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let i = 1; i <= 6; i++){\r\n                    pointsNumber.push(parameters[i].value);\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck.', true));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Triangle-Objekts und git sie zurück.', false));\r\n\r\n        }\r\n\r\n}\r\n","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport type LocalDateTimeIntrinsicData = {\r\n    date: Date\r\n}\r\n\r\nexport class LocalDateTimeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LocalDateTime\", module, \"Ein LocalDate-Objekt speichert einen Zeitpunkt (Datum und Uhrzeit).\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let dayOfWeekType = <Enum>module.typeStore.getType(\"DayOfWeek\");\r\n        let MonthType = <Enum>module.typeStore.getType(\"Month\");\r\n\r\n        // this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        // this.staticClass.classObject.initializeAttributeValues();\r\n        \r\n        this.addMethod(new Method(\"LocalDateTime\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return;\r\n\r\n            }, false, false, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , true));\r\n\r\n\r\n        this.addMethod(new Method(\"now\", new Parameterlist([]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: number = Math.trunc(parameters[2].value);\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month - 1, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"]= intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: MonthType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: EnumRuntimeObject = parameters[2].value;\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month.enumValue.ordinal, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"plusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() + days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen später liegt.', false));\r\n\r\n        this.addMethod(new Method(\"minusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() - days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen früher liegt.', false));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return Math.sign(oldMs - newMs);\r\n\r\n            }, false, false, 'Gibt 1 zurück, falls das Datum größer ist als das übergebene, 0, falls sie gleich sind und -1, falls das Datum kleiner ist als das übergebene.', false));\r\n\r\n        this.addMethod(new Method(\"until\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return (oldMs - newMs)/(24*3600);\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Tage (gerundet) zwischen den beiden Zeitpunkten liegen.', false));\r\n\r\n        this.addMethod(new Method(\"getYear\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getFullYear();\r\n\r\n            }, false, false, 'Gibt das Jahr zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMonthValue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth() + 1;\r\n\r\n            }, false, false, 'Gibt den Monat als Zahl zurück (Januar == 1, Februar == 2, ..., Dezember == 12).', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfMonth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDate();\r\n\r\n            }, false, false, 'Gibt den Tag innerhalb des Monats zurück (Zahl von 1 bis 31).', false));\r\n\r\n        this.addMethod(new Method(\"getHour\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getHours();\r\n\r\n            }, false, false, 'Gibt die Stunde innerhalb des Tages zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMinute\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMinutes();\r\n\r\n            }, false, false, 'Gibt die Minute zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getSecond\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getSeconds();\r\n\r\n            }, false, false, 'Gibt die Sekunde zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n\r\n                let td = (value: number) => {\r\n                    if(value < 10) return \"0\" + value;\r\n                    return \"\" + value;\r\n                }\r\n\r\n                return `${td(date.getDate())}.${td(date.getMonth() + 1)}.${td(date.getFullYear())} ${td(date.getHours())}:${td(date.getMinutes())}:${td(date.getSeconds())}`;\r\n\r\n            }, false, false, 'Gibt den Wert in der Form 12.03.2007 10:15:30 zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfWeek\", new Parameterlist([\r\n        ]), dayOfWeekType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let dow = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDay();\r\n                return dayOfWeekType.enumInfoList[dow - 1].object;\r\n\r\n            }, false, false, 'Gibt die den Wochentag zurück. Falls Du ihn als Zahl (0 == Montag, ...) benötigst, nutze getDayOfWeek().toOrdinal(). ', false));\r\n\r\n        this.addMethod(new Method(\"getMonth\", new Parameterlist([\r\n        ]), MonthType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let monthIndex = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth();\r\n                return MonthType.enumInfoList[monthIndex].object;\r\n\r\n            }, false, false, 'Gibt die den Monat zurück. Falls Du ihn als Zahl (1 == Januar, ...) benötigst, nutze getMonthValue()', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class DayOfWeekEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DayOfWeek\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Montag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dienstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mittwoch\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Donnerstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Freitag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Samstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Sonntag\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Wochentag\"\r\n    }\r\n}\r\n\r\nexport class MonthEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Month\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Januar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Februar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"März\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"April\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mai\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juni\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juli\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"August\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Septemter\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Oktober\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"November\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dezember\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Monat\"\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class LineClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Line\", module, \"Strecke (gerade Linie zwischen zwei Punkten)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Line\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n\r\n                let pointsNumber: number[] = [x1, y1, x2, y2];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert eine Strecke mit Anfangspunkt (x1/y1) und Endpunkt (x2/y2).', true));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie der Strecke und git sie zurück.', false));\r\n\r\n                this.addMethod(new Method(\"setPoint\", new Parameterlist([\r\n                    { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x: number = parameters[1].value;\r\n                        let y: number = parameters[2].value;\r\n                        let index: number = parameters[3].value;\r\n                        let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoint\")) return;\r\n        \r\n                        sh.setPoint(x, y, index - 1);\r\n        \r\n                    }, false, false, 'Ändert einen Punkt des Polygons. index == 1 bedeutet: Anfangspunkt; index == 2 bedeutet: Endpunkt', false));\r\n        \r\n                this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                    { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x1: number = parameters[1].value;\r\n                        let y1: number = parameters[2].value;\r\n                        let x2: number = parameters[3].value;\r\n                        let y2: number = parameters[4].value;\r\n                                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoints\")) return;\r\n        \r\n                        sh.setPoints([x1, y1, x2, y2]);\r\n        \r\n                    }, false, false, 'Ändert die Punkte der Strecke. (x1/y1) ist der neue Anfangspunkt, (x2/y2) ist der neue Endpunkt.', false));\r\n        \r\n     \r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class Vector2Class extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector2\", module, \"Repräsentiert einen zweidimensionalen Vektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"x-Komponente des Vektors\"));\r\n\r\n        this.addAttribute(new Attribute(\"y\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"y-Komponente des Vektors\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        let xIndex = this.attributeMap.get(\"x\").index;\r\n        let yIndex = this.attributeMap.get(\"y\").index;\r\n        \r\n\r\n        this.addMethod(new Method(\"Vector2\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n            }, false, false, 'Instanziert einen neuen zweidimensionalen Vektor mit den Komponenten x und y.', true));\r\n\r\n        this.addMethod(new Method(\"fromPolarCoordinates\", new Parameterlist([\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"alphaDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let r: number = parameters[1].value;\r\n                let alphaDeg: number = parameters[2].value;\r\n\r\n                alphaDeg *= Math.PI / 180.0;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: Math.cos(alphaDeg) * r };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: Math.sin(alphaDeg) * r };\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt einen neuen zweidimensionalen Vektor zurück, der mit den Polarkoordinaten (r/alphaDeg) gebildet wird. Datei ist r (Abstand zum Ursprung des Koordinatensystems) und alphaDeg (Winkel zur positiven x-Achse in Grad).', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return `(${x}/${y})`;\r\n\r\n            }, false, false, 'Gibt den Vektor als Zeichenkette in der Form \"(x/y)\" zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleDeg\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x) / Math.PI * 180;\r\n\r\n                return angle >= 0 ? angle : 360 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse in Grad zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleRad\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x);\r\n\r\n                return angle >= 0 ? angle : Math.PI * 2 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse im Bogenmaß zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLength\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return Math.sqrt(x * x + y * y);\r\n\r\n            }, false, false, 'Gibt die Länge des Vectors zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toUnitVector\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n                let length: number = Math.sqrt(x * x + y * y);\r\n\r\n                if (Math.abs(length) > 0.00000000001) {\r\n                    x /= length;\r\n                    y /= length;\r\n                } else {\r\n                    x = 0;\r\n                    y = 0;\r\n                }\r\n\r\n                o1.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o1.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt den zum Vektor zugehörigen Einheitsvektor (d.h. den Vektor mit derselben Richtung, aber der Länge 1) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setLength\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let length: number = parameters[1].value;\r\n\r\n                let l = Math.sqrt(x * x + y * y);\r\n                if (l > 0) {\r\n\r\n                    o.attributes[xIndex].value = x / l * length;\r\n                    o.attributes[yIndex].value = y / l * length;\r\n\r\n                }\r\n\r\n            }, false, false, 'Ändert den Vektor so, dass er seine Richtung beibehält, aber auf die angegebene Länge gestreckt/gestaucht wird.', false));\r\n\r\n        this.addMethod(new Method(\"plus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x + x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y + y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Summe zurück, die sich aus Addition dieses Vektor mit dem übergebenen Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"minus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x - x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y - y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Differenz zurück, die sich aus Subtraktion des übergebenen Vektors von diesem Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"scalarProduct\", new Parameterlist([\r\n            { identifier: \"vector1\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"vector2\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[1].value;\r\n                let o1: RuntimeObject = parameters[2].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                return x * x1 + y * y1;\r\n\r\n            }, false, true, 'Gibt das Skalarprodukt der beiden Vektoren zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"scaledBy\", new Parameterlist([\r\n            { identifier: \"scalar\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let s: number = parameters[1].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * s };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y * s };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt das Produkt zurück, das sich aus Multiplikation dieses Vektor mit dem übergebenen Skalar ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"rotatedBy\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle: number = -parameters[1].value * Math.PI / 180;\r\n                let sin: number = Math.sin(angle);\r\n                let cos: number = Math.cos(angle);\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * cos - y * sin };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: x * sin + y * cos };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt den um den übergebenen Winkel (in Grad) rotierten Vektor zurück. Positiver Winkel => Rotation GEGEN DEN Uhrzeigersinn. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n\r\n        this.addMethod(new Method(\"distance\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                let x1: number = <number>parameters[1].value;\r\n                let y1: number = <number>parameters[2].value;\r\n                let x2: number = <number>parameters[3].value;\r\n                let y2: number = <number>parameters[4].value;\r\n                let dx = x2 - x1;\r\n                let dy = y2 - y1;\r\n                return Math.sqrt(dx * dx + dy * dy);\r\n            }, false, true, \"Berechnet den Abstand der Punkte (x1/y1) und (x2/y2).\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class MouseListenerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseListener\", module, \"Interface mit Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class MouseAdapterClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseAdapter\", module, \"Klasse mit leeren Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt einer Kindklasse dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        this.implements.push(mouseListenerType);\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse } from \"../../communication/Data.js\";\r\nimport { WebSocketHelper } from \"./WebSocket.js\";\r\n\r\nexport class WebSocketClientClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocketClient\", module, \"Ein Objekt der Klasse WebSocketClient repräsentiert einen anderen Rechner, mit dem dieser Rechner über den WebSocket in Kontakt steht.\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addMethod(new Method(\"send\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.send(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an diesen Client. Den messageType kannst Du frei wählen. Die client bekommt ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"setUserData\", new Parameterlist([\r\n            { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"wert\", type: objectType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let key: string = parameters[1].value;\r\n                let value: RuntimeObject = parameters[2].value;\r\n\r\n                wh.setUserData(key, value);\r\n\r\n            }, false, false, 'Mit dieser Methode kannst Du beliebige Objektreferenzen in diesem WebSocketClient-Objekt speichern. Den Schlüssel kannst Du dabei frei wählen und später nutzen, um den Wert durch die Methode getUserData wieder zu holen.', false));\r\n\r\n        this.addMethod(new Method(\"getUserData\", new Parameterlist([\r\n            { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), objectType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let key: string = parameters[1].value;\r\n\r\n                return wh.getUserData(key);\r\n\r\n            }, false, false, 'Mit dieser Methode kannst Du eine Objektreferenz erhalten, die Du zuvor mit der Methode setUserData gespeichert hast. Bemerkung1: Diese Methode entfernt die Objekreferenz nicht aus dem WebSocketClient-Objekt. Bemerkung2: Damit Du alle Methoden des erhaltenen Objekts aufrufen kannst, musst Du dem Computer mitteilen, von welcher Klasse es ist (\"casten\"). Das geht für die Klasse MeineNutzerDaten bspw. so: MeineNutzerDaten mnd = (MeineNutzerDaten)client.getUserData(\"schlüssel\");', false));\r\n\r\n        let getterList: { att: string, getter: string, help: string }[] = [{ att: \"rufname\", getter: \"getFirstName\", help: \"Rufnamen\" },\r\n        { att: \"familienname\", getter: \"getLastName\", help: \"Familiennamen\" },\r\n        { att: \"username\", getter: \"getUsername\", help: \"Benutzernamen\" }, { att: \"nickname\", getter: \"getNickname\", help: \"Spielernamen\" }];\r\n\r\n        for (let getter of getterList) {\r\n            this.addMethod(new Method(getter.getter, new Parameterlist([\r\n            ]), stringPrimitiveType,\r\n                (parameters) => {\r\n\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    return wh[getter.att];\r\n\r\n                }, false, false, 'Gibt den ' + getter.help + \" des Clients zurück.\", false));\r\n\r\n        }\r\n\r\n        this.addMethod(new Method(\"getNumber\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                return wh.index;\r\n\r\n            }, false, false, 'Gehört ein Client zu einer mit findClient bzw. findClients gefundenen Gruppe, so erhältst Du mit dieser Methode die \"Rangfolge\" dieses Clients in dieser Gruppe. Allen Clients wird dieselbe Rangfolgeordnung vom Server mitgeteilt. So lässt sich bspw. einfach festlegen, welcher Client eine besondere Rolle (Server) in der Gruppe erhalten soll (z.B. Client mit Nummer 1). Bemerkung: Die Nummer ist eine Zahl zwischen 1 und der Anzahl der Clients in der Gruppe.', false));\r\n\r\n        this.addMethod(new Method(\"getIndex\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                return wh.index;\r\n\r\n            }, false, false, 'Diese Methode ist veraltet. Bitte benutze stattdessen getNumber.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketClientHelper {\r\n\r\n    keyValueStore: { [key: string]: RuntimeObject } = {};\r\n    index: number = 0;\r\n\r\n    public connected: boolean = true;\r\n\r\n    constructor(public runtimeObject: RuntimeObject, private webSocketHelper: WebSocketHelper,\r\n        private id: number, public rufname: string, public familienname: string, public username: string, public nickname: string) {\r\n\r\n    }\r\n\r\n    send(message: string, messageType: string) {\r\n        this.webSocketHelper.sendToClient(this.id, message, messageType);\r\n    }\r\n\r\n    getUserData(key: string): any {\r\n        return this.keyValueStore[key];\r\n    }\r\n\r\n    setUserData(key: string, value: RuntimeObject) {\r\n        this.keyValueStore[key] = value;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse, GetWebSocketTokenResponse, WebSocketResponsePairingFound, WebSocketRequestFindPairing } from \"../../communication/Data.js\";\r\nimport { WebSocketClientHelper } from \"./WebSocketClient.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { SystemClass } from \"../System.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\nexport class WebSocketClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocket\", module, \"Ein Objekt der Klasse WebSocket kann Daten über das Internet senden und empfangen. Um die Klasse benutzen zu können, musst Du eine eigene Klasse schreiben, die die Klasse WebSocket erweitert und die Methoden onConnect, onMessage, onOtherClientConnected und onOtherClientDisconnected überschreibt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let webSocketClientType = <Klass>module.typeStore.getType(\"WebSocketClient\");\r\n        let systemClassType = <SystemClass>module.typeStore.getType(\"System\");\r\n\r\n        this.addMethod(new Method(\"WebSocket\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let interpreter = this.module?.main?.getInterpreter();\r\n\r\n                let wh = new WebSocketHelper(o, interpreter, webSocketClientType, systemClassType);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Instanziert ein neues WebSocket-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n            { identifier: \"sessionCode\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"nickName\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sessionCode: string = parameters[1].value;\r\n                let nickName: string = parameters[2].value;\r\n\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                wh.connect(sessionCode, nickName);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Startet die Verbindung mit dem Server. Den SessionCode kannst Du frei wählen. Mit allen anderen Clients, die eine Verbindung mit demselben SessionCode aufbauen, kannst Du anschließend Daten austauschen. Auch der Nickname ist frei wählbar. Er ist für alle anderen Clients sichtbar.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"sendToAll\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.sendToAll(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an alle anderen Clients. Den messageType kannst Du frei wählen. Die empfangenden Clients bekommen ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"count\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let count: number = parameters[1].value;\r\n\r\n                wh.findClientsFromCount(count);\r\n\r\n            }, false, false, 'Sucht die übergebene Anzahl von \"kontaktbereiten\" Clients, d.h. solchen Clients, die exakt dieselbe Suchanfrage abgegeben haben. Findet der Server die Clients, so ruft er bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"nicknames\", type: new ArrayType(stringPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickNamesValues: Value[] = parameters[1].value;\r\n\r\n                let nicknames: string[] = nickNamesValues.map((nnv) => nnv.value);\r\n\r\n                wh.findClientsFromNicknames(nicknames);\r\n\r\n            }, false, false, 'Sucht die Clients mit den angegebenen Nicknames. Haben sie eine entsprechende Suchanfrage (d.h. dieselben Nicknames) abgegeben, so so ruft der Server bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClient\", new Parameterlist([\r\n            { identifier: \"nickname\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickName: string = parameters[1].value;\r\n\r\n                wh.findClientsFromNicknames([nickName]);\r\n\r\n            }, false, false, 'Sucht den Client mit dem angegebenen Nickname. Hat er eine entsprechende Suchanfrage (d.h. mit dem Nickname DIESES clients) abgegeben, so so ruft der Server bei beiden Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                wh.disconnect();\r\n\r\n            }, false, false, 'Beendet die Verbindung. Bei allen anderen Clients, die sich mit derselben sessionId verbunden haben, wird daraufhin die Methode onOtherClientDisconnected aufgerufen.', false));\r\n\r\n        this.addMethod(new Method(\"onOpen\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, sobald die Verbindung mit dem Server zustandegekommen ist.\", false));\r\n\r\n        this.addMethod(new Method(\"onClose\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem die Verbindung geschlossen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onMessage\", new Parameterlist([\r\n            { identifier: \"sender\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn eine Nachricht eines anderen Clients empfangen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn sich ein anderer Client unter Nutzung desselben sessionCodes mit dem Server verbunden hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientDisconnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn ein anderer Client unter Nutzung desselben sessionCodes die Verbindung mit dem Server beendet hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onClientsFound\", new Parameterlist([\r\n            { identifier: \"oherClients\", type: new ArrayType(webSocketClientType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ownNumber\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn die durch die Methoden findClient bzw. findClients zuvor gesuchten Clients gefunden wurden.\", false));\r\n\r\n        this.addMethod(new Method(\"getOtherClients\", new Parameterlist([]),\r\n            new ArrayType(webSocketClientType),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let ret = wh.clientList.map(client => {return {type: webSocketClientType, value: client.runtimeObject}});\r\n                \r\n                return ret;\r\n\r\n            }, // no statements!\r\n            false, false, \"Gibt alle bisher bei der selben Session angemeldeten Clients zurück.\", false));\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketHelper {\r\n\r\n    onOpenMethod: Method;\r\n    onCloseMethod: Method;\r\n    onMessageMethod: Method;\r\n    onClientConnectedMethod: Method;\r\n    onClientDisconnectedMethod: Method;\r\n    onClientsFoundMethod: Method;\r\n\r\n    clientList: WebSocketClientHelper[] = [];\r\n    idToClientMap: { [id: number]: WebSocketClientHelper } = {};\r\n\r\n    connection: WebSocket;\r\n    client_id: number; // own client-id\r\n    isOpen: boolean = false;\r\n\r\n    constructor(private runtimeObject: RuntimeObject, private interpreter: Interpreter,\r\n        private webSocketClientType: Klass, private systemClassType: SystemClass) {\r\n\r\n        let klass: Klass = <Klass>runtimeObject.class;\r\n\r\n        // [[Entries]]:Array(4)\r\n        // 0:{\"Test3()\" => Method}\r\n        // 1:{\"onConnect()\" => Method}\r\n        // 2:{\"onMessage(WebSocketClient, String, String)\" => Method}\r\n        // 3:{\"toJson()\" => Method}\r\n\r\n        this.onOpenMethod = klass.methods.find(m => m.signature == \"onOpen()\");\r\n        this.onCloseMethod = klass.methods.find(m => m.signature == \"onClose()\");\r\n        this.onMessageMethod = klass.methods.find(m => m.signature == \"onMessage(WebSocketClient, String, String)\");\r\n        this.onClientConnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientConnected(WebSocketClient)\");\r\n        this.onClientDisconnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientDisconnected(WebSocketClient)\");\r\n        this.onClientsFoundMethod = klass.methods.find(m => m.signature == \"onClientsFound(WebSocketClient[], int)\");\r\n\r\n    }\r\n\r\n    connect(sessionCode: string, nickName: string) {\r\n\r\n        if(this.interpreter.main.isEmbedded()){\r\n            this.interpreter.throwException(\"Die Netzwerkfunktionalitäten stehen nur eingeloggten Nutzern in der Entwicklungsumgebung zur Verfügung und können daher leider hier nicht ausprobiert werden.\");\r\n            return;\r\n        }\r\n\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    nickname: nickName,\r\n                    sessionCode: sessionCode\r\n                }\r\n\r\n                this.interpreter.webSocketsToCloseAfterProgramHalt.push(this.connection);\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n        this.runMethod(this.onCloseMethod, []);\r\n    }\r\n\r\n    sendToClient(clientId: number, data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToClient = {\r\n            command: 3,\r\n            data: data,\r\n            dataType: dataType,\r\n            recipient_id: clientId\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    sendToAll(data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToAll = {\r\n            command: 2,\r\n            data: data,\r\n            dataType: dataType\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        let wtr = this.interpreter.webSocketsToCloseAfterProgramHalt;\r\n        wtr.splice(wtr.indexOf(this.connection), 1);\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 1: // new Client\r\n                let clientRuntimeObject = new RuntimeObject(this.webSocketClientType);\r\n                let wch: WebSocketClientHelper = new WebSocketClientHelper(clientRuntimeObject, this, response.user_id,\r\n                    response.rufname, response.familienname, response.username, response.nickname);\r\n                clientRuntimeObject.intrinsicData[\"Helper\"] = wch;\r\n                this.clientList.push(wch);\r\n                this.idToClientMap[response.user_id] = wch;\r\n                this.runMethod(this.onClientConnectedMethod, [{ type: this.webSocketClientType, value: clientRuntimeObject }]);\r\n                break;\r\n            case 2: // message\r\n                let clientHelper = this.idToClientMap[response.from_client_id];\r\n                if (clientHelper == null) return;\r\n                this.runMethod(this.onMessageMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper.runtimeObject },\r\n                    { type: stringPrimitiveType, value: response.data },\r\n                    { type: stringPrimitiveType, value: response.dataType }\r\n                ]);\r\n                break;\r\n            case 3: // other client disconnected\r\n                let clientHelper1 = this.idToClientMap[response.disconnecting_client_id];\r\n                if (clientHelper1 == null) return;\r\n                this.clientList.splice(this.clientList.indexOf(clientHelper1), 1);\r\n                this.idToClientMap[response.disconnecting_client_id] = undefined;\r\n                this.runMethod(this.onClientDisconnectedMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper1.runtimeObject }\r\n                ]);\r\n                break;\r\n            case 4: // time synchronization\r\n                this.systemClassType.deltaTimeMillis = response.currentTimeMills - Date.now();\r\n                this.client_id = response.client_id\r\n                break;\r\n            case 5: // keep alive\r\n                break;\r\n            case 6: // Clients found\r\n                this.onClientsFound(response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onClientsFound(response: WebSocketResponsePairingFound) {\r\n        let own_index: number = 0;\r\n        let otherClients: Value[] = [];\r\n\r\n        for (let client of response.clients) {\r\n            if (client.id == this.client_id) {\r\n                own_index = client.index;\r\n            } else {\r\n                let otherClient = this.idToClientMap[client.id];\r\n                if (otherClient != null) {\r\n                    otherClient.index = client.index;\r\n                    otherClients.push({\r\n                        type: this.webSocketClientType,\r\n                        value: otherClient.runtimeObject\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        let arrayValue: Value = {\r\n            type: new ArrayType(this.webSocketClientType),\r\n            value: otherClients\r\n        }\r\n\r\n        this.runMethod(this.onClientsFoundMethod, [arrayValue, { type: intPrimitiveType, value: own_index }]);\r\n\r\n    }\r\n\r\n    onError(error: Event) {\r\n        this.interpreter.throwException(\"Kommunikationsfehler beim WebSocket\");\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if(this.unsentMessages.length > 0){\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n        this.runMethod(this.onOpenMethod, []);\r\n    }\r\n\r\n    runMethod(method: Method, stackElements: Value[]) {\r\n        if (method == null) return;\r\n        stackElements.splice(0, 0, {\r\n            type: this.runtimeObject.class,\r\n            value: this.runtimeObject\r\n        });\r\n\r\n        if (this.interpreter.state == InterpreterState.waitingForInput) {\r\n            this.interpreter.executeImmediatelyInNewStackframe(method.program, stackElements);\r\n        } else {\r\n            this.interpreter.runTimer(method, stackElements, () => { }, false);\r\n        }\r\n    }\r\n\r\n    findClientsFromCount(count: number) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: count,\r\n            nicknames: []\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    findClientsFromNicknames(nicknames: string[]) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: nicknames.length,\r\n            nicknames: nicknames\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Variable, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n// import * as p5 from \"p5\";\r\ntype p5 = any;\r\n\r\nexport class ProcessingClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"PApplet\", module, \"Processing-Applet\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.documentation = \"Wenn Du Deine Klasse von PApplet ableitest (class Test extends PApplet{...}), kannst Du auf diese Weise ein Processing-Applet erstellen (siehe https://processing.org), indem Du ihre Methoden draw(), mousePressed(), usw. überschreibst und mit Inhalt füllst. Du startest das Applet, indem Du ein Objekt Deiner Klasse instanzierst und davon die main-Methode aufrufst: new Test().main();\"\r\n\r\n        // this.addAttribute(new Attribute(\"mouseX\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseX) },\r\n        //     false, Visibility.public, true, \"aktuelle x-Koordinate des Mauszeigers\"));\r\n\r\n        // this.addAttribute(new Attribute(\"mouseY\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseY) },\r\n        //     false, Visibility.public, true, \"aktuelle y-Koordinate des Mauszeigers\"));\r\n\r\n        let intConstants: string[][] = [[\"mouseX\", \"aktuelle x-Koordinate des Mauszeigers\"], [\"mouseY\", \"aktuelle y-Koordinate des Mauszeigers\"],\r\n        [\"pMouseX\", \"x-Koordinate des Mauszeigers im vorhergehenden Frame\"], [\"pMouseY\", \"y-Koordinate des Mauszeigers im vorhergehenden Frame\"],\r\n        [\"LEFT\", \"links\"], [\"CENTER\", \"Mitte\"], [\"RIGHT\", \"rechts\"], [\"TOP\", \"obenbündig\"], [\"BASELINE\", \"bündig auf der Grundlinie\"], [\"BOTTOM\", \"untenbündig\"],\r\n        [\"width\", \"Breite des Zeichenbereichs\"], [\"height\", \"Höhe des Zeichenbereichs\"], [\"keyCode\", \"Zahlencode der zuletzt gedrückten Taste\"],\r\n        [\"mouseButton\", \"zuletzt gedrückte Maustaste, kann die Werte LEFT, RIGHT und CENTER annehmen\"],\r\n        [\"CORNER\", \"Mode zum Zeichnen von Rechtecken\"], [\"CORNERS\", \"Mode zum Zeichnen von Rechtecken\"], [\"RADIUS\", \"Mode zum Zeichnen von Rechtecken\"],\r\n\r\n        [\"POINTS\", \"zeichne nachfolgend Einzelpunkte\"],\r\n        [\"LINES\", \"zeichne nachfolgend einzelne Linien\"],\r\n        [\"TRIANGLES\", \"zeichne nachfolgend einzelne Dreiecke\"],\r\n        [\"TRIANGLE_STRIP\", \"zeichne nachfolgend einen Triangle-Strip\"],\r\n        [\"TRIANGLE_FAN\", \"zeichne nachfolgend einen Triangle-Fan\"],\r\n        [\"QUADS\", \"zeichne nachfolgend Vierecke\"],\r\n        [\"QUAD_STRIP\", \"zeichne nachfolgend einen Quad-Strip\"],\r\n        [\"TESS\", \"zeichne nachfolgend ein TESS - geht nur bei createCanvas(width, height, WEBGL)\"],\r\n        [\"CLOSE\", \"endShape(CLOSE) schließt den Linienzug\"],\r\n\r\n        [\"DEGREES\", \"angleMode(DEGREES) sorgt dafür, dass nachfolgende Winkelangaben in Grad interpretiert werden.\"],\r\n        [\"RADIANS\", \"angleMode(RADIANS) sorgt dafür, dass nachfolgende Winkelangaben im Bogenmaß interpretiert werden.\"],\r\n\r\n        ];\r\n\r\n        intConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], intPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        let stringConstants: string[][] = [[\"WEBGL\", \"WebGL-Renderer zur 3D-Ausgabe\"], [\"P2D\", \"Renderer zur zweidimensionalen Ausgabe\"],\r\n        [\"RGB\", \"Color-Mode RGB (rot, grün, blau)\"], [\"HSL\", \"Color-Mode HSL\"], [\"HSB\", \"Color-Mode HSB\"]\r\n        ];\r\n\r\n        stringConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], stringPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        this.addAttribute(new Attribute(\"key\", charPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o.key },\r\n            false, Visibility.public, true, \"letzte gedrückte Taste\"));\r\n\r\n\r\n        this.addMethod(new Method(\"PApplet\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = this.getProcessingHelper(o);\r\n                o.intrinsicData[\"Processing\"] = ph;\r\n\r\n            }, false, false, \"Legt eine neues Processing-Applet an\", true));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n            { identifier: \"name\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                // ph.main legt das aktuelle Programm (a) des Interpreters auf den programStack\r\n                // und setzt als currentProgram ein neues (b). Nach Ende dieser Methode erhöht\r\n                // der Interpreter currentProgramPosition im Glauben, (a) sei aktiv. Daher ist\r\n                // die gespeicherte ProgramPosition von (a) um eins zu niedrig (und wird daher gleich noch\r\n                // vor ph.main(); erhöht) und die bei (b) wird irrtümlich nach Rückkehr von dieser Methode \r\n                // um eins erhöht. Sie wird daher nach Ausführung von ph.main() um eins erniedrigt, damit\r\n                // der Effekt kompensiert wird. \r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"loop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.loop();\r\n\r\n            }, false, false, 'Startet nach noLoop() die Renderer-Loop wieder neu, so dass draw() wieder periodisch aufgerufen wird.', false));\r\n\r\n        this.addMethod(new Method(\"noLoop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.noLoop();\r\n\r\n            }, false, false, 'Stoppt die Render-Loop, so dass draw() nicht mehr aufgerufen wird. Kann mit loop() wieder gestartet werden.', false));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"renderer\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let renderer: string = parameters[3].value;\r\n\r\n                ph.renderer = renderer;\r\n                ph.createCanvas(width, height);\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"draw\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die draw-Methode wird 60-mal pro Sekunde aufgerufen (\"Render-Loop\"). Die Render-Loop kann mit der Methode noLoop() gestoppt und mit loop() wieder gestartet werden. redraw() ruft (im gestoppten Zustand) draw genau ein Mal auf.', false));\r\n\r\n        this.addMethod(new Method(\"settings\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die settings-Methode wird aufgerufen, nachdem das Processing-Applet durch Aufruf der Methode main gestartet wurde. Im Unterschied zur Original Java-Version von Processing hat die Methode settings hier keine andere Bewandtnis als die - unmittelbar darauf aufgerufene - Methode setup. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"setup\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die setup-Methode wird beim Programmstart nach der settings-Methode aufgerufen. Im Unterschied zur Original Java-Version von Processing hat die Methode setup hier keine andere Bewandtnis als die - unmittelbar davor aufgerufene - Methode settings. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"mousePressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mousePressed-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste heruntergedrückt wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade heruntergedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseReleased-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseClicked\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseClicked-Methode wird immer dann aufgerufen, wenn eine Maustaste auf dem Zeichenbereich gedrückt und anschließend losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseDragged\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseDragged-Methode wird immer dann aufgerufen, wenn eine Maustaste gerade heruntergedrückt ist und die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseMoved\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseMoved-Methode wird immer dann aufgerufen, wenn die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseEntered\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseEntered-Methode wird immer dann aufgerufen, wenn der Mauszeiger von außen neu in den Zeichenbereich hineinfährt.', false));\r\n\r\n        this.addMethod(new Method(\"mouseExited\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseExited-Methode wird immer dann aufgerufen, wenn der Mauszeiger den Zeichnbereich gerade verlassen hat.', false));\r\n\r\n        this.addMethod(new Method(\"keyPressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyPressed-Methode wird immer dann aufgerufen, wenn eine Taste gerade heruntergedrückt wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"keyReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyReleased-Methode wird immer dann aufgerufen, wenn eine Taste gerade losgelassen wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n\r\n\r\n        // this.addMethod(new Method(\"rect\", new Parameterlist([\r\n        //     { identifier: \"left\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"top\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"width\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"height\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        // ]), voidPrimitiveType,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n        //         let left: number = parameters[1].value;\r\n        //         let top: number = parameters[2].value;\r\n        //         let width: number = parameters[3].value;\r\n        //         let height: number = parameters[4].value;\r\n\r\n        //         ph.addStatement((p5o) => p5o.rect(left, top, width, height));\r\n\r\n\r\n        //     }, false, false, 'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.', false));\r\n\r\n\r\n        /**\r\n         * Setzen von Farben\r\n         */\r\n        this.addProcessingMethod('clear', [], [],\r\n            'Löscht die Zeichenfläche.');\r\n\r\n        this.addProcessingMethod('background', ['rgb'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe.');\r\n\r\n        this.addProcessingMethod('background', ['colorAsString'], stringPrimitiveType,\r\n            \"Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. Übergeben wird eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('background', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], intPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['gray'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('noFill', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden nicht gefüllt.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], intPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['gray'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('strokeWeight', ['weight'], floatPrimitiveType,\r\n            'Setzt die Linienbreite.');\r\n\r\n        this.addProcessingMethod('noStroke', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden ohne Rand gezeichnet.');\r\n\r\n        this.addProcessingMethod('color', ['gray'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['colorAsString'], stringPrimitiveType,\r\n            \"Gibt die Farbe zurück. Übergeben kann eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['gray', 'alpha'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 und alpha gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerpColor', ['colorA', 'colorB', 't'], [stringPrimitiveType, stringPrimitiveType, floatPrimitiveType],\r\n            'Gibt eine Zwischenfarbe zwischen colorA und colorB zurück. t == 0 bedeutet: colorA, t == 1 bedeutet: colorB, t == 0.5 bedeutet: genau zwischen beiden, usw.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('colorMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max'], [stringPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3', 'maxAlpha'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n\r\n\r\n        /**\r\n         * Zeichnen geometrischer Figuren\r\n         */\r\n        this.addProcessingMethod('rectMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von rect(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks. Radius ist der Eckenradius');\r\n\r\n        this.addProcessingMethod('ellipse', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet eine Ellipse. (left, top) ist die linke obere Ecke der Boundingbox der Ellipse, width ihre Breite und height ihre Höhe. Das lässt sich aber mit ellipseMode(...) ändern!');\r\n\r\n        this.addProcessingMethod('circle', ['x', 'y', 'extent'], floatPrimitiveType,\r\n            'Zeichnet einen Kreis. (x, y) ist der Mittelpunkt des Kreises, extent der doppelte Radius.');\r\n\r\n        this.addProcessingMethod('ellipseMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von ellipse(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1) nach (x2, y2).');\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'z1', 'x2', 'y2', 'z2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1, z1) nach (x2, y2, z2).');\r\n\r\n        this.addProcessingMethod('triangle', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3'], floatPrimitiveType,\r\n            'Zeichnet eine Dreieck mit den Eckpunkten (x1, y1), (x2, y2) und (x3, y3).');\r\n\r\n        this.addProcessingMethod('quad', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Viereck mit den Eckpunkten (x1, y1), (x2, y2), (x3, y3) und (x4, y4).');\r\n\r\n        this.addProcessingMethod('bezier', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine kubische Bezierkurve mit den Ankerpunkten (x1, y1), (x4, y4) und den Kontrollpunkten (x2, y2), (x3, y3).');\r\n\r\n        this.addProcessingMethod('curve', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Catmull-Rom-Kurve vom Punkt (x2, y2) nach (x3, y3) so, als würde sie von (x1, x2) kommen und es am Ende zu (x4, y4) weitergehen.');\r\n\r\n        this.addProcessingMethod('curvePoint', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('curveTangent', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierPoint', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierTangent', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n\r\n        this.addProcessingMethod('beginShape', [], [],\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt.');\r\n\r\n        this.addProcessingMethod('endShape', [], [],\r\n            'Endet das Zeichnen eines Polygons.');\r\n\r\n        this.addProcessingMethod('beginShape', ['kind'], stringPrimitiveType,\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt. Mögliche Werte für kind sind: POINTS, LINES, TRIANGLES, TRIANGLE_STRIP, TRIANGLE_FAN, QUADS, QUAD_STRIP');\r\n\r\n        this.addProcessingMethod('endShape', ['kind'], stringPrimitiveType,\r\n            'endShape(CLOSE) schließt den Linienzug.');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('set', ['x', 'y', 'color'], [floatPrimitiveType, floatPrimitiveType, stringPrimitiveType],\r\n            'Setzt die Farbe des Pixels bei (x, y).');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('curveVertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('curvevertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('box', ['size'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit der Seitenlänge size.');\r\n\r\n        this.addProcessingMethod('box', ['sizeX', 'sizeY', 'sizeZ'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit den angegebenen Seitenlängen.');\r\n\r\n        /**\r\n         * Transformationen\r\n         */\r\n        this.addProcessingMethod('resetMatrix', [], [],\r\n            'Setzt alle erfolgten Transformationen zurück.');\r\n\r\n        this.addProcessingMethod('push', [], [],\r\n            'Sichert den aktuellen Zeichenzustand, d.h. die Farben und Transformationen, auf einen Stack.');\r\n\r\n        this.addProcessingMethod('pop', [], [],\r\n            'Holt den obersten Zeichenzustand, d.h. die Farben und Transformationen, vom Stack.');\r\n\r\n        this.addProcessingMethod('scale', ['factor'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY', 'factorZ'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('rotate', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateX', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die X-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateY', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearX', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung derX-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearY', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung der Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateZ', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Z-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('angleMode', ['mode'], stringPrimitiveType,\r\n            'Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie winkel bei Rotationen interpretiert werden. Default ist RADIANS.');\r\n\r\n        /**\r\n         * Text\r\n         */\r\n        this.addProcessingMethod('textSize', ['size'], floatPrimitiveType,\r\n            'Setzt die Schriftgröße in Pixel.');\r\n\r\n        // this.addProcessingMethod('loadFont', ['fontname'], stringPrimitiveType,\r\n        //     'Lädt eine Schriftart. Diese Methode muss in der Methode preload aufgerufen werden.');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes in x-Richtung. Mögliche Werte sind CENTER, LEFT, RIGHT');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX', 'alignY'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes. Mögliche Werte für alignX sind CENTER, LEFT, RIGHT, mögliche Werte für alignY sind TOP, CENTER, BASELINE, BOTTOM');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus.');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y', 'x2', 'y2'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus. x2 und y2 sind die Breite und Höhe des Textausgabebereichs. Hat der Text horizontal nicht Platz, so wird er entsprechend umgebrochen.');\r\n\r\n        /**\r\n         * Mathematische Funktionen\r\n         */\r\n        this.addProcessingMethod('random', ['low', 'high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen low und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('random', ['high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen 0 und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['n'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel von n zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('pow', ['basis', 'exponent'], floatPrimitiveType,\r\n            'Gibt die den Wert der Potenz (\"basis hoch exponent\") zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('max', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den größeren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('min', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den kleineren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], floatPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sin', ['n'], floatPrimitiveType,\r\n            'Gibt den Sinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('cos', ['n'], floatPrimitiveType,\r\n            'Gibt den Cosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('tan', ['n'], floatPrimitiveType,\r\n            'Gibt den Tangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('asin', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('acos', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('radians', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Gradmaß ins Bogenmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('degrees', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Bogenmaß ins Gradmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan2', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sq', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt das Quadrat des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], intPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('round', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('ceil', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Aufrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('floor', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Abfrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('dist', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Berechnet den Abstand der Punkte (x1, y1) und (x2, y2).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerp', ['a', 'b', 't'], floatPrimitiveType,\r\n            'Berechnet den a + (b - a)*t. Wählt man t zwischen 0 und 1, so kann man damit die Zwischenwerte zwischen a und b errechnen.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('constrain', ['value', 'min', 'max'], floatPrimitiveType,\r\n            'Beschränkt value auf den Bereich [min, max], genauer: Ist value < min, so wird min zurückgegeben. Ist value > max, so wird max zurückgegeben. Ansonsten wird value zurückgegeben.', floatPrimitiveType);\r\n\r\n        /**\r\n         * Sonstiges\r\n         */\r\n\r\n        this.addProcessingMethod('year', [], [],\r\n            'Aktuelle Jahreszahl', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('month', [], [],\r\n            'Monat: 1 == Januar, 12 == Dezember', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('day', [], [],\r\n            'Tag (innerhalb des Monats) des aktuellen Datums', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('minute', [], [],\r\n            'Minutenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('second', [], [],\r\n            'Sekundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('frameRate', ['n'], intPrimitiveType,\r\n            'Setzt die Framerate (Anzahl der Aufrufe von draw() pro Sekunde)');\r\n\r\n        this.addProcessingMethod('textWidth', ['text'], stringPrimitiveType,\r\n            'Gibt die Breite des Texts zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textAscent', ['text'], stringPrimitiveType,\r\n            'Gibt den Ascent Textes zurück ( = Höhe des größten Zeichens über der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textDescent', ['text'], stringPrimitiveType,\r\n            'Gibt den Descent Textes zurück ( = Tiefe des tiefsten Zeichens unter der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textLeading', ['leading'], floatPrimitiveType,\r\n            'Setzt den Abstand zweier aufeinanderfolgender Textzeilen.');\r\n\r\n        this.addProcessingMethod('cursor', ['type'], stringPrimitiveType,\r\n            'Ändert das Aussehen des Mauscursors. Type ist einer der Werte \"arrow\", \"cross\", \"text\", \"move\", \"hand\", \"wait\", \"progress\".');\r\n\r\n        this.addProcessingMethod('noCursor', ['type'], stringPrimitiveType,\r\n            'Hat zur Folge, dass der Mauscursor über dem Zeichenbereich unsichtbar ist.');\r\n\r\n        this.addProcessingMethod('copy', ['sx', 'sy', 'sw', 'sh', 'dx', 'dy', 'dw', 'dh'], floatPrimitiveType,\r\n            'Kopiert den rechteckigen Bereich mit der linken oberen Ecke (sx, sy) sowie der Breite sw und der Höhe sh in den Bereich mit der linken oberen Ecke (dx, dy), der Breite dw und der Höhe dh.');\r\n\r\n        this.addProcessingMethod('millis', [], [],\r\n            'Gibt die Millisekunden zurück, die vergangen sind, seit setup() aufgerufen wurde.');\r\n\r\n        this.addProcessingMethod('redraw', [], [],\r\n            'Führt draw() genau ein Mal aus. Macht ggf. Sinn, wenn die Render-Loop zuvor mit noLoop() gestoppt wurde.');\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    addProcessingMethod(identifier: string, parameterNames: string[], parameterTypes: Type[] | Type, comment: string, returnType?: Type) {\r\n\r\n        let parameters: Variable[] = [];\r\n        if (Array.isArray(parameterTypes)) {\r\n            for (let i = 0; i < parameterNames.length; i++) {\r\n                parameters.push({ identifier: parameterNames[i], type: parameterTypes[i], declaration: null, usagePositions: null, isFinal: true });\r\n            }\r\n        } else {\r\n            parameters = parameterNames.map((name) => { return { identifier: name, type: parameterTypes, declaration: null, usagePositions: null, isFinal: true } })\r\n        }\r\n\r\n        if (returnType == null) {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), null,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n        } else {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), returnType,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    return ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getProcessingHelper(processingObject: RuntimeObject, breite: number = 800, höhe: number = 600): ProcessingHelper {\r\n\r\n        let interpreter = this.module?.main?.getInterpreter();\r\n\r\n\r\n        if (interpreter.processingHelper != null) {\r\n\r\n            interpreter.throwException(\"Es kann nur ein einziges Processing-Applet instanziert werden.\");\r\n            return;\r\n        }\r\n\r\n        if (interpreter.worldHelper != null) {\r\n\r\n            interpreter.throwException(\"Processing kann nicht gleichzeitig mit der herkömmlichen Grafikausgabe genutzt werden.\");\r\n            return;\r\n        }\r\n\r\n        return new ProcessingHelper(this.module, interpreter, processingObject);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ProcessingHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n\r\n    $div: JQuery<HTMLElement>;\r\n\r\n    width: number = 800;\r\n    height: number = 600;\r\n\r\n    p5o: p5;\r\n\r\n    renderer: string;\r\n    loopStopped: boolean = false;\r\n\r\n    onSizeChanged: () => void;\r\n\r\n\r\n    constructor(private module: Module, private interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n\r\n        this.interpreter.processingHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n\r\n        this.onSizeChanged = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (this.height / this.width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': this.width / this.height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': this.height / this.width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', this.onSizeChanged);\r\n\r\n        this.onSizeChanged();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    createCanvas(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.onSizeChanged();\r\n        this.p5o.createCanvas(this.width, this.height, this.renderer);\r\n        this.$div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n\r\n        });\r\n    }\r\n\r\n    main() {\r\n        this.interpreter.timerExtern = true;\r\n        this.setupProcessing(this.$containerInner);\r\n    }\r\n\r\n    setupProcessing($div: JQuery<HTMLElement>) {\r\n\r\n        let that = this;\r\n        let drawMethodPending: boolean = true;\r\n        this.$div = $div;\r\n\r\n        let sketch = (p5: p5) => {\r\n\r\n            p5.setup = function () {\r\n                that.renderer = p5.P2D;\r\n\r\n                let afterFinishingBoth = () => {\r\n                    // p5.createCanvas(that.width, that.height, that.renderer);\r\n                    drawMethodPending = false\r\n                    // $div.find('canvas').css({\r\n                    //     'width': '',\r\n                    //     'height': ''\r\n                    // })            \r\n                }\r\n\r\n                let i = 2;\r\n\r\n                that.runMethod('setup', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n                that.runMethod('settings', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n\r\n            };\r\n\r\n            p5.preload = function () {\r\n                that.runMethod('preload');\r\n            };\r\n\r\n            p5.draw = function () {\r\n                if (that.interpreter.state == InterpreterState.running && !that.loopStopped) {\r\n                    if (!drawMethodPending) {\r\n                        drawMethodPending = true;\r\n                        that.runMethod(\"draw\", () => {\r\n                            drawMethodPending = false;\r\n                        });\r\n                    }\r\n                }\r\n                that.tick();\r\n                // p5.background(50);\r\n                // p5.rect(p5.width / 2, p5.height / 2, 50, 50);\r\n\r\n            };\r\n\r\n            p5.mousePressed = function () {\r\n                that.runMethod('mousePressed');\r\n            };\r\n\r\n            p5.mouseReleased = function () {\r\n                that.runMethod('mouseReleased');\r\n            };\r\n\r\n            p5.mouseClicked = function () {\r\n                that.runMethod('mouseClicked');\r\n            };\r\n\r\n            p5.mouseDragged = function () {\r\n                that.runMethod('mouseDragged');\r\n            };\r\n\r\n            p5.mouseEntered = function () {\r\n                that.runMethod('mouseEntered');\r\n            };\r\n\r\n            p5.mouseExited = function () {\r\n                that.runMethod('mouseExited');\r\n            };\r\n\r\n            p5.mouseMoved = function () {\r\n                that.runMethod('mouseMoved');\r\n            };\r\n\r\n            p5.keyPressed = function () {\r\n                that.runMethod('keyPressed');\r\n            };\r\n\r\n            p5.keyReleased = function () {\r\n                that.runMethod('keyReleased');\r\n            };\r\n\r\n\r\n        }\r\n\r\n        //@ts-ignore\r\n        this.p5o = new p5(sketch, $div[0]);\r\n        $div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n        })\r\n\r\n    }\r\n\r\n\r\n    tick() {\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            this.interpreter.timerFunction(33.33, true, 0.5);\r\n            this.interpreter.timerStopped = false;\r\n            this.interpreter.timerFunction(33.33, false, 0.08);\r\n        }\r\n\r\n    }\r\n\r\n    loop() {\r\n        this.loopStopped = false;\r\n    }\r\n\r\n    noLoop() {\r\n        this.loopStopped = true;\r\n    }\r\n\r\n    runMethod(methodIdentifier: string, callback: () => void = null) {\r\n\r\n        let klass: Klass = <Klass>this.runtimeObject.class;\r\n        let method = klass.getMethodBySignature(methodIdentifier + \"()\");\r\n\r\n        let program = method?.program;\r\n\r\n        if (program == null) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: klass,\r\n                value: this.runtimeObject\r\n            },\r\n        ];\r\n\r\n        this.interpreter.runTimer(method, stackElements, (interpreter) => {\r\n            if (callback != null) callback();\r\n        }, methodIdentifier == \"draw\");\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        if (this.p5o != null) this.p5o.remove();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.processingHelper = null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { polygonBerührtPolygon, polygonEnthältPunkt, steckenzugSchneidetStreckenzug, streckenzugEnthältPunkt } from \"../../tools/MatheTools.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class TurtleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Turtle\", module, \"Turtle-Klasse zum Zeichnen von Streckenzügen oder gefüllten Figuren. Wichtig sind vor allem die Methoden forward(double length) und turn(double angleDeg), die die Turtle nach vorne bewegen bzw. ihre Blickrichtung ändern.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                let ph = new TurtleHelper(x, y, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Am Ende des Streckenzugs wird eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let showTurtle: boolean = parameters[3].value;\r\n\r\n                let ph = new TurtleHelper(x, y, showTurtle, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Falls showTurtle == true, wird am Ende des Streckenzuges eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let length: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(length);\r\n\r\n            }, false, false, 'Weist die Turtle an, die angegebene Länge vorwärts zu gehen. Ihr zurückgelegter Weg wird als gerade Strecke mit der aktuellen BorderColor gezeichnet. Mit setBorderColor(null) bewirkst Du, dass ein Stück ihres Weges nicht gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"turn\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"turn\")) return;\r\n\r\n                sh.turn(angle);\r\n\r\n            }, false, false, 'Bewirkt, dass sich die Turtle um den angegebenen Winkel (in Grad!) dreht, d.h. ihre Blickrichtung ändert. Ein positiver Winkel bewirkt eine Drehung gegen den Uhrzeigersinn. Diese Methode wirkt sich NICHT auf die bisher gezeichneten Strecken aus. Willst Du alles bisher Gezeichnete inklusive Turtle drehen, so nutze die Methode rotate.', false));\r\n\r\n        this.addMethod(new Method(\"penUp\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penUp\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"penDown\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penDown\")) return;\r\n\r\n                sh.penIsDown = true;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"closeAndFill\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"closeAndFill\")) return;\r\n\r\n                sh.closeAndFill(closeAndFill);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"showTurtle\", new Parameterlist([\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let showTurtle: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"showTurtle\")) return;\r\n\r\n                sh.setShowTurtle(showTurtle);\r\n\r\n            }, false, false, 'showTurtle == true bewirkt, dass am Ort der Turtle ein rotes Dreieck gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Turtle-Objekts und gibt es zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clear\")) return;\r\n\r\n                return sh.clear();\r\n\r\n            }, false, false, 'Löscht alle bis jetzt mit der Turtle gezeichneten Strecken.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\ntype LineElement = {\r\n    x: number,\r\n    y: number,\r\n    color: number,\r\n    alpha: number,\r\n    lineWidth: number\r\n}\r\n\r\nexport class TurtleHelper extends FilledShapeHelper {\r\n\r\n    lineElements: LineElement[] = [];\r\n    turtleAngleDeg: number = 0; // in Rad\r\n\r\n    isFilled: boolean = false;\r\n\r\n    turtle: PIXI.Graphics;\r\n    lineGraphic: PIXI.Graphics;\r\n\r\n    xSum: number = 0;\r\n    ySum: number = 0;\r\n\r\n    initialHitPolygonDirty: boolean = true;\r\n\r\n    turtleSize: number = 40;\r\n\r\n    penIsDown: boolean = true;\r\n\r\n    lastLineWidth: number = 0;\r\n    lastColor: number = 0;\r\n    lastAlpha: number = 0;\r\n\r\n    lastTurtleAngleDeg: number = 0; // angle in Rad\r\n\r\n    renderJobPresent: boolean = false;\r\n\r\n    constructor(xStart: number, yStart: number, private showTurtle: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.lineElements.push({\r\n            x: xStart,\r\n            y: yStart,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.borderColor = 0xffffff;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let container = new PIXI.Container();\r\n        this.displayObject = container;\r\n\r\n        this.lineGraphic = new PIXI.Graphics();\r\n        container.addChild(this.lineGraphic);\r\n        this.lineGraphic.moveTo(xStart, yStart);\r\n\r\n        this.turtle = new PIXI.Graphics();\r\n        container.addChild(this.turtle);\r\n        this.turtle.visible = this.showTurtle;\r\n        this.initTurtle(0, 0, this.turtleAngleDeg);\r\n        this.moveTurtleTo(xStart, yStart, this.turtleAngleDeg);\r\n\r\n\r\n        // let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    calculateCenter() {\r\n        let length = this.lineElements.length;\r\n        let lastLineElement = this.lineElements[length - 1];\r\n        this.xSum += lastLineElement.x;\r\n        this.ySum += lastLineElement.y;\r\n        this.centerXInitial = this.xSum / length;\r\n        this.centerYInitial = this.ySum / length;\r\n    }\r\n\r\n    closeAndFill(closeAndFill: boolean) {\r\n        if (closeAndFill != this.isFilled) {\r\n            this.isFilled = closeAndFill;\r\n            this.render();\r\n            this.initialHitPolygonDirty = true;\r\n        }\r\n    }\r\n\r\n    setShowTurtle(show: boolean) {\r\n        this.turtle.visible = show;\r\n    }\r\n\r\n    turn(angleDeg: number) {\r\n        this.turtleAngleDeg -= angleDeg;\r\n        if(Math.abs(this.turtleAngleDeg) > 360){\r\n            this.turtleAngleDeg -= Math.floor(this.turtleAngleDeg/360)*360;\r\n        }\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.moveTurtleTo(lastLineElement.x, lastLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n    rotate(angleInDegrees: number, cx?: number, cy?: number) {\r\n        // this.turn(angleInDegrees);\r\n        super.rotate(angleInDegrees, cx, cy);\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TurtleHelper = new TurtleHelper(this.lineElements[0].x, this.lineElements[0].y,\r\n            this.showTurtle, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.turtleAngleDeg = this.turtleAngleDeg;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    newTurtleX: number;\r\n    newTurtleY: number;\r\n    newAngleDeg: number;\r\n\r\n    forward(length: number) {\r\n\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n\r\n        let turtleAngleRad = this.turtleAngleDeg/180.0*Math.PI;\r\n\r\n        let newLineElement: LineElement = {\r\n            x: lastLineElement.x + length * Math.cos(turtleAngleRad),\r\n            y: lastLineElement.y + length * Math.sin(turtleAngleRad),\r\n            color: this.penIsDown ? this.borderColor : null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        // if (this.isFilled) {\r\n        //     this.render();\r\n        // } else {\r\n        //     if (this.borderColor != null) {\r\n        //         // this.lineGraphic.moveTo(lastLineElement.x, lastLineElement.y);\r\n        //         this.lineGraphic.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        //         this.lineGraphic.lineTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"LineTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     } else {\r\n        //         this.lineGraphic.moveTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"MoveTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     }\r\n        // }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n\r\n        this.newTurtleX = newLineElement.x;\r\n        this.newTurtleY = newLineElement.y;\r\n        this.newAngleDeg = this.turtleAngleDeg;\r\n\r\n        // don't render more frequent than every 1/100 s\r\n        if (!this.renderJobPresent) {\r\n            this.renderJobPresent = true;\r\n            setTimeout(() => {\r\n                this.renderJobPresent = false;\r\n                this.render();\r\n                this.moveTurtleTo(this.newTurtleX, this.newTurtleY, this.turtleAngleDeg);\r\n            }, 100);\r\n        }\r\n\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        let newLineElement: LineElement = {\r\n            x: x,\r\n            y: y,\r\n            color: null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n        this.moveTurtleTo(newLineElement.x, newLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n\r\n    initTurtle(x: number, y: number, angleDeg: number): void {\r\n        this.turtle.clear();\r\n        this.turtle.lineStyle(3, 0xff0000, 1, 0.5);\r\n        this.turtle.moveTo(x, y);\r\n\r\n        let angleRad = angleDeg/180.0*Math.PI;\r\n\r\n        let vx = Math.cos(angleRad);\r\n        let vy = Math.sin(angleRad);\r\n\r\n        let vxp = -Math.sin(angleRad);\r\n        let vyp = Math.cos(angleRad);\r\n\r\n        let lengthForward = this.turtleSize / 2;\r\n        let lengthBackward = this.turtleSize / 4;\r\n        let lengthBackwardP = this.turtleSize / 4;\r\n\r\n        this.turtle.moveTo(x + vx * lengthForward, y + vy * lengthForward);\r\n        this.turtle.lineTo(x - vx * lengthBackward + vxp * lengthBackwardP, y - vy * lengthBackward + vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x - vx * lengthBackward - vxp * lengthBackwardP, y - vy * lengthBackward - vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x + vx * lengthForward, y + vy * lengthForward);\r\n    }\r\n\r\n    moveTurtleTo(x: number, y: number, angleDeg: number){\r\n        this.turtle.localTransform.identity();\r\n        this.turtle.localTransform.rotate(angleDeg/180.0*Math.PI);\r\n        this.turtle.localTransform.translate(x, y);\r\n\r\n        // this.turtle.localTransform.translate(-this.turtleX, -this.turtleY);\r\n        // this.turtle.localTransform.rotate((angleDeg - this.lastTurtleAngleDeg)/180.0*Math.PI);\r\n        // this.turtle.localTransform.translate(x, y);\r\n        //@ts-ignore\r\n        this.turtle.transform.onChange();\r\n        this.turtle.updateTransform();\r\n\r\n        this.lastTurtleAngleDeg = this.turtleAngleDeg;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = this.lineGraphic;\r\n\r\n        this.lastLineWidth = 0;\r\n        this.lastColor = 0;\r\n        this.lastAlpha = 0;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n\r\n        let firstPoint = this.lineElements[0];\r\n        g.moveTo(firstPoint.x, firstPoint.y);\r\n\r\n        if (this.isFilled) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        }\r\n        for (let i = 1; i < this.lineElements.length; i++) {\r\n            let le: LineElement = this.lineElements[i];\r\n            if (le.color != null) {\r\n                if (!this.isFilled) {\r\n                    if (le.lineWidth != this.lastLineWidth || le.color != this.lastColor || le.alpha != this.lastAlpha) {\r\n                        g.lineStyle(le.lineWidth, le.color, le.alpha, 0.5)\r\n                        this.lastLineWidth = le.lineWidth;\r\n                        this.lastColor = le.color;\r\n                        this.lastAlpha = le.alpha;\r\n                    }\r\n                }\r\n                g.lineTo(le.x, le.y);\r\n                // console.log(\"LineTo: \" + le.x + \", \" + le.y);\r\n            } else {\r\n                g.moveTo(le.x, le.y);\r\n                // console.log(\"MoveTo: \" + le.x + \", \" + le.y);\r\n            }\r\n        }\r\n\r\n        if (this.isFilled) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    collidesWith(shapeHelper: any) {\r\n\r\n        if (shapeHelper instanceof TurtleHelper && shapeHelper.initialHitPolygonDirty) {\r\n            shapeHelper.setupInitialHitPolygon();\r\n        }\r\n\r\n        if (this.initialHitPolygonDirty) {\r\n            this.setupInitialHitPolygon();\r\n            this.transformHitPolygon();\r\n            this.render();\r\n        }\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        if(shapeHelper. hitPolygonTransformed.length == 2 && !this.isFilled){\r\n            return steckenzugSchneidetStreckenzug(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        }\r\n\r\n        return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n\r\n    }\r\n\r\n    setupInitialHitPolygon() {\r\n        this.hitPolygonInitial = this.lineElements.map((le) => { return { x: le.x, y: le.y } });\r\n    }\r\n\r\n    clear(x: number = null, y: number = null, angle: number = null) {\r\n        let lastLineElement = this.lineElements.pop();\r\n        if(x == null) x = lastLineElement.x;\r\n        if(y == null) y = lastLineElement.y;\r\n\r\n        this.lineElements = [];\r\n\r\n        this.lineElements.push({\r\n            x: x,\r\n            y: y,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.hitPolygonInitial = [];\r\n        if(angle != null){\r\n            this.turtleAngleDeg = angle;\r\n            this.lastTurtleAngleDeg = 0;\r\n            this.borderColor = 0;\r\n            this.turtleSize = 40;\r\n        }\r\n        this.render();\r\n        if(angle != null){\r\n            this.moveTurtleTo(x, y, angle);\r\n        }\r\n    }\r\n\r\n\r\n    touchesAtLeastOneFigure(): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesColor(farbe: number): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                if (sh instanceof FilledShapeHelper && sh.fillColor == farbe) return true;\r\n                // if(sh instanceof TurtleHelper) TODO\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesShape(shape: ShapeHelper) {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n        return shape.containsPoint(x, y);\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (this.initialHitPolygonDirty) {\r\n            this.setupInitialHitPolygon();\r\n            this.transformHitPolygon();\r\n            this.render();\r\n        }\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        if(this.isFilled){\r\n            return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        } else {\r\n            return streckenzugEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport type GNGAktionsempfaengerType = \"ausführen\" | \"taste\" | \"sondertaste\" | \"geklickt\";\r\n\r\nexport type GNGAktionsempfaengerData = {\r\n    type: GNGAktionsempfaengerType,\r\n    method: Method,\r\n    runtimeObject: RuntimeObject\r\n}\r\n\r\nexport class GNGEreignisbehandlung extends Klass {\r\n\r\n    constructor(module: Module, private moduleStore: ModuleStore) {\r\n\r\n        super(\"Ereignisbehandlung\", module, \"Zugriff auf Ereignisse einschließlich Taktgeber (Graphics'n Games-Bibliothek (Cornelsen-Verlag))\");\r\n\r\n\r\n        this.addMethod(new Method(\"Ereignisbehandlung\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let helper = GNGEreignisbehandlung.getHelper(module);\r\n\r\n                helper.registerEvents(o);\r\n\r\n            }, false, false, 'Instanziert ein neues Ereignisbehandlungs-Objekt.', true));\r\n\r\n        // this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n        //     { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n        //         let groesse: number = parameters[1].value;\r\n\r\n\r\n        //     }, false, false, \"Setzt die Größe der Figur.\", false));\r\n\r\n        this.addMethod(new Method(\"Starten\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                 GNGEreignisbehandlung.getHelper(module).startTimer();\r\n\r\n            }, false, false, \"Zeitgeber starten.\", false));\r\n\r\n        this.addMethod(new Method(\"Anhalten\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                GNGEreignisbehandlung.getHelper(module).stopTimer();\r\n\r\n            }, false, false, \"Zeitgeber anhalten.\", false));\r\n\r\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\r\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let dauer: number = parameters[1].value;\r\n                GNGEreignisbehandlung.getHelper(module).taktdauer = dauer;\r\n\r\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\r\n\r\n\r\n        this.addMethod(new Method(\"TaktImpulsAusführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n    }\r\n\r\n    static getHelper(module: Module):GNGEreignisbehandlungHelper{\r\n        let interpreter = module.main.getInterpreter();\r\n        if (interpreter.gngEreignisbehandlungHelper == null) {\r\n            interpreter.gngEreignisbehandlungHelper = new GNGEreignisbehandlungHelper(module);\r\n            interpreter.gngEreignisbehandlungHelper.bindEvents();\r\n        }\r\n\r\n        return interpreter.gngEreignisbehandlungHelper;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class GNGEreignisbehandlungHelper {\r\n\r\n    aktionsempfaengerTypes: string[] = [\"ausführen\", \"taste\", \"sondertaste\", \"geklickt\"];\r\n    methodSignatureList: string[] = [\"TaktImpulsAusführen()\", \"Ausführen()\", \"AktionAusführen()\", \"MausGeklickt(int, int, int)\", \"Taste(char)\", \"TasteGedrückt(char)\", \r\n    \"SonderTaste(int)\", \"SonderTasteGedrückt(int)\"];\r\n    methodToAktionsempfaengerTypeMap: { [signature: string]: string } = {\r\n        \"TaktImpulsAusführen()\": \"ausführen\",\r\n        \"Ausführen()\": \"ausführen\",\r\n        \"AktionAusführen()\": \"ausführen\",\r\n        \"MausGeklickt(int, int, int)\": \"geklickt\",\r\n        \"Taste(char)\": \"taste\",\r\n        \"TasteGedrückt(char)\": \"taste\",\r\n        \"SonderTaste(int)\": \"sondertaste\",\r\n        \"SonderTasteGedrückt(int)\": \"sondertaste\"\r\n    };\r\n\r\n    // see https://www.freecodecamp.org/news/javascript-keycode-list-keypress-event-key-codes/\r\n    keyToKeyCodeMap: { [key: string]: number } = {\r\n        \"Enter\": 13,\r\n        \"ArrowLeft\": 37,\r\n        \"ArrowRight\": 39,\r\n        \"ArrowUp\": 38,\r\n        \"ArrowDown\": 40,\r\n        \"F1\": 112,\r\n        \"F2\": 113,\r\n        \"F3\": 114,\r\n        \"F4\": 115,\r\n        \"F5\": 116,\r\n        \"F6\": 117,\r\n        \"F7\": 118,\r\n        \"F8\": 119,\r\n        \"F9\": 120,\r\n        \"F10\": 121,\r\n        \"F11\": 122,\r\n        \"F12\": 123,\r\n        \"PageUp\": 33,\r\n        \"PageDown\": 34,\r\n        \"Insert\": 155\r\n    }\r\n\r\n    // For gng library (Cornelsen-Verlag):\r\n    aktionsempfaengerMap: { [aktionsempfaengerType: string]: GNGAktionsempfaengerData[] } = {};\r\n\r\n    timerRunning: boolean = false;\r\n    taktdauer: number = 300;\r\n    remainingTime: number = 0;\r\n\r\n    onKeyDownMethod: (key: string) => void;\r\n\r\n    constructor(private module:Module){\r\n        for (let type of this.aktionsempfaengerTypes) {\r\n            this.aktionsempfaengerMap[type] = [];\r\n        }\r\n\r\n    }\r\n\r\n    hasAktionsEmpfaenger(): boolean {\r\n\r\n        for(let type of this.aktionsempfaengerTypes){\r\n            if(this.aktionsempfaengerMap[type].length > 0){\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n\r\n    registerEvents(o: RuntimeObject) {\r\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\r\n\r\n        for (let ms of this.methodSignatureList) {\r\n            let method: Method = klass.getMethodBySignature(ms);\r\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n                this.aktionsempfaengerMap[type].push({\r\n                    type: <GNGAktionsempfaengerType>type,\r\n                    method: method,\r\n                    runtimeObject: o\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    unregisterEvents(o: RuntimeObject) {\r\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\r\n\r\n        for (let ms of this.methodSignatureList) {\r\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\r\n\r\n            this.aktionsempfaengerMap[type] =\r\n                this.aktionsempfaengerMap[type].filter(ae => ae.runtimeObject != o);\r\n        }\r\n    }\r\n\r\n\r\n    bindEvents() {\r\n        let interpreter = this.module.main.getInterpreter();\r\n\r\n        this.onKeyDownMethod = (key: string) => {\r\n            if (key.length == 1) {\r\n                for (let ae of this.aktionsempfaengerMap[\"taste\"]) {\r\n                    this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: key }]);\r\n                }\r\n            } else {\r\n                let keyCode = this.keyToKeyCodeMap[key];\r\n                if (keyCode != null) {\r\n                    for (let ae of this.aktionsempfaengerMap[\"sondertaste\"]) {\r\n                        this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: keyCode }]);\r\n                    }\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        interpreter.keyboardTool.keyDownCallbacks.push(this.onKeyDownMethod);\r\n\r\n        // this.startTimer();\r\n\r\n    }\r\n\r\n    detachEvents() {\r\n        let interpreter = this.module.main.getInterpreter();\r\n        let index = interpreter.keyboardTool.keyDownCallbacks.indexOf(this.onKeyDownMethod);\r\n        if (index >= 0) interpreter.keyboardTool.keyDownCallbacks.splice(index, 1);\r\n        this.stopTimer();\r\n    }\r\n\r\n\r\n    invokeMethod(method: Method, runtimeObject: RuntimeObject, parameters: Value[] = [], callback?: () => void) {\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        parameters = parameters.slice(0);\r\n        parameters.unshift({ type: runtimeObject.class, value: runtimeObject });\r\n\r\n        if (program != null) {\r\n            this.module.main.getInterpreter().runTimer(method, parameters, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke(parameters);\r\n        }\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        this.timerRunning = false;\r\n    }\r\n\r\n    startTimer() {\r\n\r\n        if (!this.timerRunning) {\r\n            this.timerRunning = true;\r\n            this.processTimerEntries();\r\n        }\r\n\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if (!this.timerRunning) return;\r\n\r\n        let dt = 10;\r\n\r\n        this.remainingTime += dt;\r\n        if (this.remainingTime > this.taktdauer) {\r\n            this.remainingTime -= this.taktdauer;\r\n\r\n            let liste = this.aktionsempfaengerMap[\"ausführen\"];\r\n            for (let ae of liste) {\r\n\r\n                this.invokeMethod(ae.method, ae.runtimeObject, []);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, dt);\r\n\r\n    }\r\n\r\n    handleMouseClickedEvent(x: number, y: number) {\r\n        let parameters: Value[] = [\r\n            { type: intPrimitiveType, value: Math.round(x) },\r\n            { type: intPrimitiveType, value: Math.round(y) },\r\n            { type: intPrimitiveType, value: 1 }\r\n        ]\r\n\r\n        let liste = this.aktionsempfaengerMap[\"geklickt\"];\r\n        for (let ae of liste) {\r\n            this.invokeMethod(ae.method, ae.runtimeObject, parameters);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper } from \"../graphics/World.js\";\r\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\r\n\r\nexport class GNGZeichenfensterClass extends Klass {\r\n\r\n    constructor(public module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Zeichenfenster\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\r\n\r\n        let aktionsempfaengerType = <GNGZeichenfensterClass>module.typeStore.getType(\"Aktionsempfaenger\");\r\n\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n\r\n        this.addMethod(new Method(\"MalflächenBreiteGeben\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return Math.round(this.getWorldHelper().width);\r\n\r\n            }, false, true, 'Gibt die Breite des Zeichenbereichs in Pixeln zurück.', false));\r\n\r\n        this.addMethod(new Method(\"MalflächenHöheGeben\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return Math.round(this.getWorldHelper().width);\r\n\r\n            }, false, true, 'Gibt die Höhe des Zeichenbereichs in Pixeln zurück.', false));\r\n\r\n        this.addMethod(new Method(\"AktionsEmpfängerEintragen\", new Parameterlist([\r\n            { identifier: \"neu\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.registerEvents(aktionsempfaenger);\r\n\r\n            }, false, true, 'Trägt einen neuen Aktionsempfänger ein.', false));\r\n\r\n        this.addMethod(new Method(\"AktionsEmpfängerEntfernen\", new Parameterlist([\r\n            { identifier: \"alt\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.unregisterEvents(aktionsempfaenger);\r\n\r\n            }, false, true, 'Löscht einen Aktionsempfänger aus der Liste.', false));\r\n\r\n        this.addMethod(new Method(\"TaktgeberStarten\", new Parameterlist([]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.startTimer();\r\n\r\n            }, false, true, 'Startet den Taktgeber', false));\r\n\r\n        this.addMethod(new Method(\"TaktgeberStoppen\", new Parameterlist([]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.stopTimer();\r\n\r\n            }, false, true, 'Stoppt den Taktgeber', false));\r\n\r\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\r\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let dauer: number = parameters[1].value;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.taktdauer = dauer;\r\n\r\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n        if (wh != null) {\r\n\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.localTransform.scale(wh.width / breite, wh.height / höhe);\r\n                wh.width = breite;\r\n                wh.height = höhe;\r\n                // this.stage.localTransform.rotate(45/180*Math.PI);\r\n                // this.stage.localTransform.translate(400,300);\r\n                //@ts-ignore\r\n                wh.stage.transform.onChange();\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n            let worldObject: RuntimeObject = new RuntimeObject(<Klass>this.module.typeStore.getType(\"World\"));\r\n            let wh = new WorldHelper(breite, höhe, this.module, worldObject);\r\n            worldObject.intrinsicData[\"World\"] = wh;\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\n\r\nexport class GNGRechteckClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Rechteck\", module, \"Rechteck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(Math.abs(sh.width * sh.displayObject.scale.x)); \r\n        }, false, Visibility.protected, false, \"Breite des Rechtecks\"));\r\n\r\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(Math.abs(sh.height * sh.displayObject.scale.x)); \r\n        }, false, Visibility.protected, false, \"Höhe des Rechtecks\"));\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.addMethod(new Method(\"Rechteck\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new RectangleHelper(10, 10, 100, 100, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\r\n\r\n                o.intrinsicData[\"Farbe\"] = \"rot\";\r\n                rh.setFillColor(0xff0000);\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\r\n\r\n                sh.height = höhe / sh.displayObject.scale.y;\r\n                sh.width = breite / sh.displayObject.scale.x;\r\n\r\n                sh.centerXInitial = sh.left + sh.width/2;\r\n                sh.centerYInitial = sh.top + sh.height/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite und Höhe des Rechtecks.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","export var GNGFarben: {[identifier: string]: number} = {\r\n    \"weiß\": 0xffffff,\r\n    \"weiss\": 0xffffff,\r\n    \"rot\": 0xff0000,\r\n    \"grün\": 0x00ff00,\r\n    \"gruen\": 0x00ff00,\r\n    \"blau\": 0x0000ff,\r\n    \"gelb\": 0xffff00,\r\n    \"magenta\": 0xff00ff,\r\n    \"cyan\": 0x00ffff,\r\n    \"hellgelb\": 0xffff80,\r\n    \"hellgrün\": 0x80ff80,\r\n    \"hellgruen\": 0x80ff80,\r\n    \"orange\": 0xff8000,\r\n    \"braun\": 0x804000,\r\n    \"grau\": 0x808080,\r\n    \"schwarz\": 0x000000\r\n} ","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\r\nimport { GNGFarben } from \"./GNGFarben.js\";\r\n\r\nexport class GNGBaseFigurClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"GNGBaseFigur\", module, \"Oberklasse der graphischen Elemente in der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        let objectType = <Klass>moduleStore.getType(\"Object\").type;\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addAttribute(new Attribute(\"farbe\", stringPrimitiveType, (value: Value) => { \r\n            let farbe = value.object.intrinsicData[\"Farbe\"];\r\n            value.value = farbe == null ? \"schwarz\" : farbe;\r\n        }, false, Visibility.protected, false, \"Farbe des Grafikobjekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.getCenterX()); \r\n        }, false, Visibility.protected, false, \"x-Position des Grafikobjekts\"));\r\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.getCenterY()); \r\n        }, false, Visibility.protected, false, \"y-Position des Grafikobjekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].angle \r\n        }, false, Visibility.protected, false, \"Blickrichtung des Grafikobjekts in Grad\"));\r\n\r\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \r\n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \r\n        }, false, Visibility.protected, false, \"Größe des Grafikobjekts (100 entspricht 'normalgroß')\"));\r\n\r\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \r\n        }, false, Visibility.protected, false, \"true, wenn das Grafikobjekt sichtbar ist\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\r\n\r\n                let moveAnchor: {x: number, y: number} = o.intrinsicData[\"moveAnchor\"];\r\n\r\n                let p: PIXI.Point = new PIXI.Point(moveAnchor.x, moveAnchor.y);\r\n                sh.displayObject.updateTransform();\r\n                sh.displayObject.transform.worldTransform.apply(p, p);\r\n        \r\n                sh.move(x - p.x, y - p.y);\r\n\r\n            }, false, false, \"Verschiebt das Rechteck so, dass seine linke obere Ecke bei (x,y) zu liegen kommt.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"Verschieben\", new Parameterlist([\r\n            { identifier: \"deltaX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"deltaY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"Verschieben\")) return;\r\n\r\n                sh.move(x, y);\r\n\r\n            }, false, false, \"Verschiebt die Figur um (x, y)\", false));\r\n\r\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\r\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let grad: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Drehen\")) return;\r\n\r\n                sh.rotate(grad);\r\n\r\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Drehpunkt ist der Diagonalenschnittpunkt der kleinsten achsenparallelen Bounding Box um die Figur.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let farbe: string = parameters[1].value;\r\n\r\n                o.intrinsicData[\"Farbe\"] = farbe;\r\n\r\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\r\n                if (color == null) color = 0x000000; // default: schwarz\r\n\r\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\r\n\r\n                sh.setFillColor(color);\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Farbe der Figur.\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\r\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let winkel: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\r\n\r\n                sh.rotate(winkel - sh.angle);\r\n\r\n            }, false, false, \"Setzt den Drehwinkel der Figur. Der Winkel wird in Grad angegebenen, positive Werte bedeuten eine Drehung gegen den Uhrzeigersinn.\", false));\r\n\r\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\r\n            { identifier: \"sichtbarkeit\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sichtbarkeit: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\r\n\r\n                sh.setVisible(sichtbarkeit);\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Entfernen\")) return;\r\n\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Zerstört das Objekt.\", false));\r\n\r\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\r\n\r\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class GNGAktionsempfaengerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Aktionsempfaenger\", module, \"GNG: Interface für die Aktionsausführung\");\r\n\r\n        this.addMethod(new Method(\"Ausführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"Taste\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTaste\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"Geklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\n\r\nexport class GNGDreieckClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Dreieck\", module, \"Dreieck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \r\n            let breite = value.object.intrinsicData[\"Breite\"];\r\n            value.value = Math.round(breite); \r\n        }, false, Visibility.protected, false, \"Breite des Dreiecks\"));\r\n\r\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \r\n            let höhe = value.object.intrinsicData[\"Höhe\"];\r\n            value.value = Math.round(höhe); \r\n        }, false, Visibility.protected, false, \"Höhe des Dreiecks\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Dreieck\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n\r\n                let rh = new PolygonHelper([60, 10, 110,110, 10, 110],true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 10};\r\n                rh.centerXInitial = 60;\r\n                rh.centerYInitial = 60;\r\n\r\n                o.intrinsicData[\"Breite\"] = 100;\r\n                o.intrinsicData[\"Höhe\"] = 100;\r\n\r\n                o.intrinsicData[\"Farbe\"] = \"rot\";\r\n                rh.setFillColor(0xff0000);\r\n\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck-Objekt.', true));\r\n\r\n            this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n                { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n                    let breite: number = parameters[1].value;\r\n                    let höhe: number = parameters[2].value;\r\n\r\n                    o.intrinsicData[\"Breite\"] = breite;\r\n                    o.intrinsicData[\"Höhe\"] = höhe;    \r\n\r\n                    breite /= sh.scaleFactor;\r\n                    höhe /= sh.scaleFactor;\r\n\r\n                    if (sh.testdestroyed(\"GrößeSetzen\")) return;\r\n    \r\n                    sh.setAllPointsUntransformed([60, 10, 60 - breite/2, 10 + höhe, 60 + breite/2, 10 + höhe ]);\r\n                    sh.centerXInitial = 60;\r\n                    sh.centerYInitial = 10 + höhe/2;\r\n                    \r\n                    // sh.setAllPointsUntransformed([60, 60 - höhe/2, 60 - breite/2, 60 + höhe/2, 60 + breite/2, 60 + höhe/2 ]);\r\n    \r\n                }, false, false, \"Setzt die Breite und Höhe des Dreiecks.\", false));\r\n    \r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\n\r\nexport class GNGKreisClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Kreis\", module, \"Kreis-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"radius\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.r * sh.displayObject.scale.x); \r\n        }, false, Visibility.protected, false, \"Radius des Kreises\"));\r\n\r\n        this.setupAttributeIndicesRecursive();  \r\n\r\n        this.addMethod(new Method(\"Kreis\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new CircleHelper(60, 60, 50, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 60};\r\n\r\n                o.intrinsicData[\"Farbe\"] = \"rot\";\r\n                rh.setFillColor(0xff0000);\r\n\r\n            }, false, false, 'Instanziert ein neues Kreis-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"RadiusSetzen\", new Parameterlist([\r\n            { identifier: \"radius\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n                let radius: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"radiusSetzen\")) return;\r\n\r\n                sh.setRadius(radius);\r\n\r\n            }, false, false, \"Setzt den Radius des Kreis-Objekts.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\nimport { TurtleHelper } from \"../graphics/Turtle.js\";\r\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\r\nimport { ShapeHelper } from \"../graphics/Shape.js\";\r\nimport { GNGFarben } from \"./GNGFarben.js\";\r\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\r\n\r\nexport class GNGTurtleClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        let objectType = moduleStore.getType(\"Object\").type;\r\n\r\n        super(\"GTurtle\", module, \"Turtle-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].x); \r\n        }, false, Visibility.protected, false, \"x-Position der Figur\"));\r\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].y); \r\n        }, false, Visibility.protected, false, \"x-Position der Figur\"));\r\n\r\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].turtleAngleDeg \r\n        }, false, Visibility.protected, false, \"Blickrichtung der Figur in Grad\"));\r\n\r\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \r\n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \r\n        }, false, Visibility.protected, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\r\n\r\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \r\n        }, false, Visibility.protected, false, \"true, wenn die Figur sichtbar ist\"));\r\n\r\n        this.addAttribute(new Attribute(\"stiftUnten\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].penIsDown; \r\n        }, false, Visibility.protected, false, \"true, wenn die Turtle beim Gehen zeichnet\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"GTurtle\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new TurtleHelper(100, 200, true, module.main.getInterpreter(), o);\r\n                rh.borderWidth = 1;\r\n                rh.setShowTurtle(true);\r\n                rh.setBorderColor(0);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.registerEvents(o);\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let größe: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"größeSetzen\")) return;\r\n\r\n                sh.turtleSize = größe;\r\n                sh.turn(0);\r\n\r\n            }, false, false, \"Setzt die Größe des Turtle-Dreiecks.\", false));\r\n\r\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let farbe: string = parameters[1].value;\r\n\r\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\r\n                if (color == null) color = 0x000000; // default: schwarz\r\n\r\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Zeichenfarbe der Turtle.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\r\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let grad: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Drehen\")) return;\r\n\r\n                sh.turn(grad);\r\n\r\n            }, false, false, \"Dreht die Turtle um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\r\n\r\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\r\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let länge: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Gehen\")) return;\r\n\r\n                sh.forward(länge);\r\n\r\n            }, false, false, \"Bewirkt, dass die Turtle um die angegebene Länge nach vorwärts geht.\", false));\r\n\r\n        this.addMethod(new Method(\"StiftHeben\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"StiftHeben\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.\", false));\r\n\r\n        this.addMethod(new Method(\"StiftSenken\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"StiftSenken\")) return;\r\n\r\n                sh.penIsDown = true;\r\n\r\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.\", false));\r\n\r\n        this.addMethod(new Method(\"Löschen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Löschen\")) return;\r\n\r\n                sh.clear(100, 200, 0);\r\n\r\n            }, false, false, \"Löscht alles von der Turtle gezeichnete und versetzt die Turtle in den Ausgangszustand.\", false));\r\n\r\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\r\n\r\n                sh.moveTo(x, y);\r\n\r\n            }, false, false, \"Verschiebt die Turtle an die Position (x, y) ohne eine neue Linie zu zeichnen.\", false));\r\n\r\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\r\n\r\n                sh.moveTo(100, 200);\r\n\r\n            }, false, false, \"Verschiebt die Turtle an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\r\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let winkel: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\r\n\r\n                sh.turn(winkel + sh.turtleAngleDeg);\r\n\r\n            }, false, false, \"Setzt den Blickwinkel der Turtle. 0° => nach rechts, 90°: => nach oben, usw..\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\r\n\r\n                return Math.round(-sh.turtleAngleDeg);\r\n\r\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\r\n\r\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].x);\r\n\r\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\r\n\r\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].y);\r\n\r\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\r\n            { identifier: \"sichtbarkeit\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sichtbarkeit: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\r\n\r\n                sh.setVisible(sichtbarkeit);\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Entfernen\")) return;\r\n\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\r\n\r\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                return sh.touchesAtLeastOneFigure();\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur befindet.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbeString: string = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                return sh.touchesColor(farbe);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur mit der angegebenen Farbe befindet.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\r\n\r\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                return sh.touchesShape(objectShapeHelper);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die übergebene Figur die aktuelle Turtleposition enthält.', false));\r\n\r\n\r\n\r\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { TextHelper } from \"../graphics/Text.js\";\r\n\r\nexport class GNGTextClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"GText\", module, \"Text-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"text\", stringPrimitiveType, (value: Value) => { \r\n            let text = value.object.intrinsicData[\"Actor\"].text;\r\n            value.value = text; \r\n        }, false, Visibility.private, false, \"Angezeigter Text\"));\r\n\r\n        this.addAttribute(new Attribute(\"textgröße\", intPrimitiveType, (value: Value) => { \r\n            let fontsize = value.object.intrinsicData[\"Actor\"].fontsize;\r\n            value.value = Math.round(fontsize); \r\n        }, false, Visibility.private, false, \"Textgröße\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new TextHelper(2, -8, 12, \"Text\", module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"moveAnchor\"] = {x: 6, y: 16};\r\n\r\n                rh.setFillColor(0);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Text-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"TextSetzen\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n                let text: string = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"TextSetzen\")) return;\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, \"Ändert den Text des Text-Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"TextGrößeSetzen\", new Parameterlist([\r\n            { identifier: \"textGröße\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n                let größe: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"TextGrößeSetzen\")) return;\r\n\r\n                sh.setFontsize(größe);\r\n\r\n            }, false, false, \"Setzt die Schriftgröße des Text-Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"TextVergrößern\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"TextVergrößern\")) return;\r\n\r\n                let size = sh.fontsize;\r\n                if (size <= 10) {\r\n                    size += 1;\r\n                }\r\n                else if (size <= 40) {\r\n                    size += 2;\r\n                }\r\n                else {\r\n                    size += 4;\r\n                }\r\n\r\n                sh.setFontsize(size);\r\n\r\n            }, false, false, \"Vergrößert die Schriftgröße des Text-Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"TextVerkleinern\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"TextVerkleinern\")) return;\r\n\r\n                let size = sh.fontsize;\r\n                if (size <= 10) {\r\n                    size -= 1;\r\n                }\r\n                else if (size <= 40) {\r\n                    size -= 2;\r\n                }\r\n                else {\r\n                    size -= 4;\r\n                }\r\n                if (size < 1) {\r\n                    size = 1;\r\n                }\r\n\r\n\r\n                sh.setFontsize(size);\r\n\r\n            }, false, false, \"Verkleinert die Schriftgröße des Text-Objekts.\", false));\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore, TypeStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\r\nimport { ShapeHelper } from \"../graphics/Shape.js\";\r\nimport { GroupHelper } from \"../graphics/Group.js\";\r\nimport { GNGFarben } from \"./GNGFarben.js\";\r\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { EllipseHelper } from \"../graphics/Ellipse.js\";\r\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\r\n\r\ntype GNGPoint = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport class GNGFigurClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        let objectType = <Klass>moduleStore.getType(\"Object\").type;\r\n\r\n        super(\"Figur\", module, \"Figur-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(objectType);\r\n\r\n        let polygonClass: Klass = <Klass>moduleStore.getType(\"Polygon\").type;\r\n        let circleClass: Klass = <Klass>moduleStore.getType(\"Circle\").type;\r\n        let ellipseClass: Klass = <Klass>moduleStore.getType(\"Ellipse\").type;\r\n        let rectangleClass: Klass = <Klass>moduleStore.getType(\"Rectangle\").type;\r\n\r\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].x) }, false, Visibility.private, false, \"x-Position der Figur\"));\r\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].y) }, false, Visibility.private, false, \"y-Position der Figur\"));\r\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].angle \r\n        }, false, Visibility.private, false, \"Blickrichtung der Figur in Grad\"));\r\n\r\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \r\n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \r\n        }, false, Visibility.private, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\r\n\r\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \r\n        }, false, Visibility.private, false, \"true, wenn die Figur sichtbar ist\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Figur\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                let rh = new FigurHelper(interpreter, o, helper);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                let center: GNGPoint = {\r\n                    x: 100,\r\n                    y: 200\r\n                };\r\n\r\n                o.intrinsicData[\"Center\"] = center;\r\n\r\n                this.drawInitialTriangle(rh, polygonClass, circleClass, interpreter, center);\r\n                o.intrinsicData[\"isInitialTriangle\"] = true;\r\n\r\n                rh.scale(0.4, center.x, center.y);\r\n                rh.displayObject.updateTransform();\r\n\r\n                helper.registerEvents(o);\r\n\r\n\r\n            }, false, false, 'Instanziert ein neues Figur-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let groesse: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n                let newFactor = groesse / 100;\r\n                sh.scale(newFactor / sh.scaleFactor, center.x, center.y);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Setzt die Größe der Figur.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\r\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let grad: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Drehen\")) return;\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                sh.rotate(grad, center.x, center.y);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\r\n\r\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\r\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let länge: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Gehen\")) return;\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                let angleRad = sh.angle / 180 * Math.PI;\r\n                let dx = länge * Math.cos(angleRad);\r\n                let dy = länge * Math.sin(-angleRad);\r\n                center.x += dx;\r\n                center.y += dy;                \r\n\r\n                sh.move(dx, dy);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Bewirkt, dass die Figur um die angegebene Länge 'nach vorne' geht.\", false));\r\n\r\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                sh.move(x - center.x, y - center.y);\r\n                sh.displayObject.updateTransform();\r\n                center.x = x;\r\n                center.y = y;\r\n\r\n            }, false, false, \"Verschiebt die Figur an die Position (x, y).\", false));\r\n\r\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                sh.move(100 - center.x, 200 - center.y);\r\n                sh.displayObject.updateTransform();\r\n                center.x = 100;\r\n                center.y = 200;\r\n\r\n            }, false, false, \"Verschiebt die Figur an die Position (100, 200).\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\r\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let winkel: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\r\n\r\n                sh.rotate(winkel - sh.angle);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Dreht die Figur so, dass der Blickwinkel der Figur in die angegebene Richtung zeigt. 0° => nach rechts (initial), 90°: => nach oben, usw..\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\r\n\r\n                if(sh.angle < 0) sh.angle += 360*Math.ceil(sh.angle/(-360));\r\n                if(sh.angle >= 360) sh.angle -= 360*Math.floor(sh.angle/360);\r\n                return Math.round(sh.angle);\r\n\r\n            }, false, false, \"Gibt den Blickwinkel der Figur zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n                return center.x;\r\n\r\n            }, false, false, \"Gibt x-Position der Figur zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n                return center.y;\r\n\r\n            }, false, false, \"Gibt y-Position der Figur zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\r\n            { identifier: \"sichtbarkeit\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sichtbarkeit: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\r\n\r\n                sh.setVisible(sichtbarkeit);\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FigurHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Entfernen\")) return;\r\n\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Entfernt die Figur aus dem Zeichenfenster\", false));\r\n\r\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\r\n\r\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\r\n\r\n        this.addMethod(new Method(\"EigeneFigurLöschen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"EigeneFigurLöschen\")) return;\r\n\r\n                sh.destroyChildren();\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                this.drawInitialTriangle(sh, polygonClass, circleClass, this.module.main.getInterpreter(), center);\r\n                o.intrinsicData[\"isInitialTriangle\"] = true;\r\n\r\n\r\n            }, false, false, 'Löscht die hinzugefügten Figuren', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                for (let shape of sh.worldHelper.shapes) {\r\n                    if (shape != sh &&  sh.collidesWith(shape)) return true;\r\n                }\r\n\r\n                return false;\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt kollidiert.', false));\r\n    \r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbeString: string = parameters[1].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                for (let shape of sh.worldHelper.shapes) {\r\n                    if (shape != sh) {\r\n                        if(shape instanceof FigurHelper){\r\n                            for(let part of shape.shapes){\r\n                                let partHelper = part.intrinsicData[\"Actor\"];\r\n                                if (partHelper instanceof FilledShapeHelper && farbe == partHelper.fillColor){\r\n                                    if(sh.collidesWith(partHelper)){\r\n                                        return true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n\r\n                            if(shape instanceof FilledShapeHelper && farbe == shape.fillColor){\r\n                                if (sh.collidesWith(shape)) return true;\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                return false;\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt der angegebenen Farbe kollidiert.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\r\n\r\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                return sh.collidesWith(objectShapeHelper);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit dem übergebenen graphischen Objekt kollidiert.', false));\r\n\r\n        this.addMethod(new Method(\"FigurteilFestlegenDreieck\", new Parameterlist([\r\n            { identifier: \"x1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n                let x3: number = parameters[5].value;\r\n                let y3: number = parameters[6].value;\r\n                let farbeString: string = parameters[7].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"FigurteilFestlegenDreieck\")) return;\r\n\r\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\r\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\r\n                    sh.destroyChildren();\r\n                }\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                let rto = new RuntimeObject(polygonClass);\r\n                let triangle = new PolygonHelper([x1, y1, x2, y2, x3, y3], true, this.module.main.getInterpreter(), rto);\r\n                rto.intrinsicData[\"Actor\"] = triangle;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                triangle.rotate(sh.angle, 0, 0);\r\n                triangle.scale(sh.scaleFactor, 0, 0);\r\n                triangle.move(center.x, center.y);\r\n                triangle.setFillColor(farbe);\r\n                triangle.setBorderColor(\"black\");\r\n                triangle.setBorderWidth(2);\r\n                sh.add(rto);\r\n\r\n            }, false, false, 'Erzeugt ein neues, dreieckiges Element und fügt es der Figur hinzu.', false));\r\n\r\n        this.addMethod(new Method(\"FigurteilFestlegenRechteck\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let breite: number = parameters[3].value;\r\n                let höhe: number = parameters[4].value;\r\n                let farbeString: string = parameters[5].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"FigurteilFestlegenRechteck\")) return;\r\n\r\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\r\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\r\n                    sh.destroyChildren();\r\n                }\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                let rto = new RuntimeObject(rectangleClass);\r\n                let rectangleHelper = new RectangleHelper(x + 0.05, y + 0.05, breite - 0.1, höhe - 0.1, this.module.main.getInterpreter(), rto);\r\n                rto.intrinsicData[\"Actor\"] = rectangleHelper;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                rectangleHelper.rotate(sh.angle, 0, 0);\r\n                rectangleHelper.scale(sh.scaleFactor, 0, 0);\r\n                rectangleHelper.move(center.x, center.y);\r\n                rectangleHelper.setFillColor(farbe);\r\n                rectangleHelper.setBorderColor(\"black\");\r\n                rectangleHelper.setBorderWidth(2);\r\n                sh.add(rto);\r\n\r\n            }, false, false, 'Erzeugt ein neues, rechteckiges Element einer eigenen Darstellung der Figur.', false));\r\n\r\n        this.addMethod(new Method(\"FigurteilFestlegenEllipse\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let breite: number = parameters[3].value;\r\n                let höhe: number = parameters[4].value;\r\n                let farbeString: string = parameters[5].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"FigurteilFestlegenEllipse\")) return;\r\n                \r\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\r\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\r\n                    sh.destroyChildren();\r\n                }\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                höhe = höhe - 0.1;      // hack to ensure collision-handling identical to gng (also 0.05 two lines below)\r\n                breite = breite - 0.1;\r\n\r\n                let rto = new RuntimeObject(ellipseClass);\r\n                let ellipseHelper = new EllipseHelper(x + breite / 2 + 0.05, y + höhe / 2 + 0.05, breite / 2, höhe / 2, this.module.main.getInterpreter(), rto);\r\n                rto.intrinsicData[\"Actor\"] = ellipseHelper;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                ellipseHelper.rotate(sh.angle, 0, 0);\r\n                ellipseHelper.scale(sh.scaleFactor, 0, 0);\r\n                ellipseHelper.move(center.x, center.y);\r\n                ellipseHelper.setFillColor(farbe);\r\n                ellipseHelper.setBorderColor(\"black\");\r\n                ellipseHelper.setBorderWidth(2);\r\n                sh.add(rto);\r\n\r\n            }, false, false, 'Erzeugt ein neues, elliptisches Element einer eigenen Darstellung der Figur.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    drawInitialTriangle(gh: GroupHelper, triangleClass: Klass, circleClass: Klass, interpreter: Interpreter, center: GNGPoint) {\r\n        let t: RuntimeObject = new RuntimeObject(triangleClass);\r\n        let th: PolygonHelper = new PolygonHelper([-50, -50, 50, 0, -50, 50], true, interpreter, t);\r\n        t.intrinsicData[\"Actor\"] = th;\r\n        th.move(center.x, center.y);\r\n        th.setFillColor(\"yellow\");\r\n        th.setBorderColor(\"black\");\r\n        th.setBorderWidth(2);\r\n        gh.add(t);\r\n\r\n        let c: RuntimeObject = new RuntimeObject(circleClass);\r\n        let ch: CircleHelper = new CircleHelper(0, 0, 10, interpreter, c);\r\n        c.intrinsicData[\"Actor\"] = ch;\r\n        ch.move(center.x, center.y);\r\n        ch.setFillColor(\"blue\");\r\n        ch.setBorderColor(\"black\");\r\n        ch.setBorderWidth(2);\r\n        gh.add(c);\r\n\r\n    }\r\n}\r\n\r\n\r\nclass FigurHelper extends GroupHelper {\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject, private gngEreignisbehandlungsHelper: GNGEreignisbehandlungHelper) {\r\n        super(interpreter, runtimeObject);\r\n    }\r\n\r\n    destroy(){\r\n        this.gngEreignisbehandlungsHelper.unregisterEvents(this.runtimeObject);\r\n        super.destroy();\r\n    }\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class RandomClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Random\", module, \"Zufallszahlengenerator\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.addMethod(new Method(\"nextInt\", new Parameterlist([\r\n            { identifier: \"bound\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let bound: number = parameters[1].value;\r\n\r\n                return Math.floor(Math.random()*bound);\r\n\r\n            }, false, false, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {0, 1, ..., bound - 1} zurück.', false));\r\n\r\n        this.addMethod(new Method(\"randint\", new Parameterlist([\r\n            { identifier: \"from\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"to\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let from: number = parameters[1].value;\r\n                let to: number = parameters[2].value;\r\n\r\n                return Math.floor(Math.random()*(to - from + 1) + from);\r\n\r\n            }, false, true, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {from, from + 1, ..., to} zurück.', false));\r\n\r\n        this.addMethod(new Method(\"randdouble\", new Parameterlist([\r\n            { identifier: \"from\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"to\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let from: number = parameters[1].value;\r\n                let to: number = parameters[2].value;\r\n\r\n                return Math.random()*(to - from) + from;\r\n\r\n            }, false, true, 'Gibt eine Zufallszahl aus dem Intervall [from, to[ zurück.', false));\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class DirectionClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Direction\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Richtung (oben, rechts, unten, links)\"\r\n    }\r\n\r\n}","type Patch = {\r\n    old: RegExp, \r\n    new: string\r\n}\r\n\r\nexport class Patcher {\r\n\r\n    static patches: Patch[] = [\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 0\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 1\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 2\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 3\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 4\"},\r\n\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 5\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 6\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 7\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 8\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 9\"},\r\n\r\n        {old: /SpriteLibrary.Asteroid_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 10\"},\r\n        {old: /SpriteLibrary.Gegner_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 11\"},\r\n\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 12\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 13\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 14\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 15\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 16\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*5/g, new: \"SpriteLibrary.Space_Shooter_1, 17\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*6/g, new: \"SpriteLibrary.Space_Shooter_1, 18\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*7/g, new: \"SpriteLibrary.Space_Shooter_1, 19\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*8/g, new: \"SpriteLibrary.Space_Shooter_1, 20\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*9/g, new: \"SpriteLibrary.Space_Shooter_1, 21\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*10/g, new: \"SpriteLibrary.Space_Shooter_1, 22\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*11/g, new: \"SpriteLibrary.Space_Shooter_1, 23\"},\r\n    ] \r\n\r\n    static patch(text: string): {patchedText: string, modified: boolean} {\r\n\r\n        let modified: boolean = false;\r\n\r\n        for(let patch of Patcher.patches){\r\n            if(text.match(patch.old) != null){\r\n                text = text.replace(patch.old, patch.new);\r\n                modified = true;\r\n            }\r\n        }\r\n\r\n        return {patchedText: text, modified: modified}\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\n\r\ntype Key = {name: string, code: number};\r\n\r\nexport class KeyEvent extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"KeyEvent\", module, \"Nachbildung von java.awt.event.KeyEvent\");\r\n\r\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\r\n\r\n        /**\r\n         *  \"Enter\": 13,\r\n        \"ArrowLeft\": 37,\r\n        \"ArrowRight\": 39,\r\n        \"ArrowUp\": 38,\r\n        \"ArrowDown\": 40,\r\n        \"F1\": 112,\r\n        \"F2\": 113,\r\n        \"F3\": 114,\r\n        \"F4\": 115,\r\n        \"F5\": 116,\r\n        \"F6\": 117,\r\n        \"F7\": 118,\r\n        \"F8\": 119,\r\n        \"F9\": 120,\r\n        \"F10\": 121,\r\n        \"F11\": 122,\r\n        \"F12\": 123,\r\n        \"PageUp\": 33,\r\n        \"PageDown\": 34,\r\n        \"Insert\": 155\r\n         */\r\n\r\n        let keys: Key[] = [{name: \"VK_ENTER\", code: 13}, {name: \"VK_LEFT\", code: 37}, {name: \"VK_UP\", code: 38}, \r\n        {name: \"VK_RIGHT\", code: 39}, {name: \"VK_DOWN\", code: 40}, {name: \"VK_PAGE_UP\", code: 33}, {name: \"VK_PAGE_DOWN\", code: 34},\r\n        {name: \"VK_INSERT\", code: 155}];\r\n\r\n        for(let i = 1; i <= 12; i++){\r\n            keys.push({name: \"VK\" + i, code: 111 + i});\r\n        }\r\n        \r\n        for(let key of keys){\r\n            this.addAttribute(new Attribute(key.name, intPrimitiveType, (value) => {value.value = key.code}, \r\n            true, Visibility.public, true, \"KeyCode für die Taste \" + key.name));\r\n        }\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n    }\r\n\r\n}\r\n\r\n","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.keywordSwitch:\r\n                    switchHappend = true;\r\n                    break;\r\n                case TokenType.keywordCase:\r\n                case TokenType.keywordDefault:\r\n                    // outdent: line with case:\r\n                    if (t.position.column > 3) {\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                    }\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            if(lastNonSpaceToken.position.line == t.position.line){\r\n                                this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && [TokenType.newline, TokenType.keywordFor, TokenType.keywordWhile].indexOf(lastToken2.tt) < 0 && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let nextNonSpaceToken = this.getNextNonSpaceToken(i, tokenlist);\r\n\r\n                        // no additional indent after \"case 12 :\"\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt) && lastNonSpaceToken?.tt != TokenType.colon;\r\n                        let nextTokenIsOperator = this.isBinaryOperator(nextNonSpaceToken.tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline || nextNonSpaceToken.tt == TokenType.comment) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.keywordFor:\r\n                case TokenType.keywordWhile:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt == TokenType.leftBracket) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.assignment, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space || tokenlist[j].tt == TokenType.return)){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.colon;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","export class Boxes3d {\r\n    public static createCube3d(material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createCube3dMesh(), material);\r\n    }\r\n    public static createCube3dMesh() {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n                buffer: new Float32Array([-1, 1, 1, -1, -1, -1, -1, -1, 1, -1, 1, -1,  // 0, 1, 2, 3\r\n                -1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1,  // 4, 5, 6, 7\r\n                    1, 1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, // 8, 9, 10, 11\r\n                    1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1,  // 12, 13, 14, 15\r\n                    1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, 1,  // 16, 17, 18, 19\r\n                -1, 1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1]) // 20, 21, 22, 23\r\n            },\r\n            indices: {\r\n                buffer: new Uint8Array([0, 1, 2, 0, 3, 1, 4, 5, 6, 4, 7, 5, 8, 9, 10, 8, 11, 9, 12, 13, 14, 12, 15, 13, 16, 17, 18, 16, 19, 17, 20, 21, 22, 20, 23, 21])\r\n            },\r\n            normals: {\r\n                buffer: new Float32Array([-1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n                buffer: new Float32Array([\r\n                    0.66666, 0.00, 0.33333, 1.00,  0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0,       0,    0.33333, 0.25, 0.33333, 0,    0,       0.25, \r\n                    0.66666, 0, 1.0, 1.0, 1.0, 0, 0.66666, 1.00])\r\n                // buffer: new Float32Array([0.66666, 1, 0.33333, 0.75, 0.33333, 1,   0.66666, 0.75, 0.66666, 0.75, 0.33333, 0.5, 0.33333, 0.75, 0.66666, 0.5, \r\n                //  0.66666, 0.5, 0.33333, 0.25, 0.33333, 0.5, 0.66666, 0.25, 0.66666, 0.25, 0.33333, 0, 0.33333, 0.25, 0.66666, 0, \r\n                //  0.33333, 0.25, 0.125, 0.5, 0.33333, 0.5, 0.125, 0.25, \r\n                //1.0, 0.25, 0.66666, 0.5, 1.0, 0.5, 0.66666, 0.25])\r\n            }],\r\n            tangents: {\r\n                buffer: new Float32Array([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1])\r\n            }\r\n        })\r\n    }\r\n\r\n    public static createHalfheightCube3d(material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createHalfheightCube3dMesh(), material);\r\n    }\r\n    public static createHalfheightCube3dMesh() {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n                buffer: new Float32Array([-1, 1, 1, -1, 0, -1, -1, 0, 1, -1, 1, -1,  // 0, 1, 2, 3\r\n                -1, 1, -1, 1, 0, -1, -1, 0, -1, 1, 1, -1,  // 4, 5, 6, 7\r\n                    1, 1, -1, 1, 0, 1, 1, 0, -1, 1, 1, 1, // 8, 9, 10, 11\r\n                    1, 1, 1, -1, 0, 1, 1, 0, 1, -1, 1, 1,  // 12, 13, 14, 15\r\n                    1, 0, 1, -1, 0, -1, 1, 0, -1, -1, 0, 1,  // 16, 17, 18, 19\r\n                -1, 1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1]) // 20, 21, 22, 23\r\n            },\r\n            indices: {\r\n                buffer: new Uint8Array([0, 1, 2, 0, 3, 1, 4, 5, 6, 4, 7, 5, 8, 9, 10, 8, 11, 9, 12, 13, 14, 12, 15, 13, 16, 17, 18, 16, 19, 17, 20, 21, 22, 20, 23, 21])\r\n            },\r\n            normals: {\r\n                buffer: new Float32Array([-1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n                buffer: new Float32Array([\r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0,       0,    0.33333, 0.25, 0.33333, 0,    0,       0.25, \r\n                    0.66666, 0, 1.0, 1.0, 1.0, 0, 0.66666, 1.00])\r\n                // buffer: new Float32Array([0.6, 1, 0.4, 0.75, 0.4, 1, 0.6, 0.75, 0.6, 0.75, 0.4, 0.5, 0.4, 0.75, \r\n                //                           0.6, 0.5, 0.6, 0.5, 0.4, 0.25, 0.4, 0.5, 0.6, 0.25, 0.6, 0.25, 0.4, 0, \r\n                //                           0.4, 0.25, 0.6, 0, 0.4, 0.25, 0.125, 0.5, 0.4, 0.5, 0.125, 0.25, 1.0, 0.25, 0.6, \r\n                //                           0.5, 1.0, 0.5, 0.6, 0.25])\r\n            }],\r\n            tangents: {\r\n                buffer: new Float32Array([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1])\r\n            }\r\n        })\r\n    }\r\n\r\n    public static createPlane3d(repeatTextureU: number = 1, repeatTextureV: number = 1, material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createPlane3dMesh(repeatTextureU, repeatTextureV), material);\r\n    }\r\n\r\n    public static createPlane3dMesh(repeatTextureU: number = 1, repeatTextureV: number = 1) {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n              buffer: new Float32Array([-1, 0, 1, 1, 0, -1, -1, 0, -1, 1, 0, 1])\r\n            },\r\n            indices: {\r\n              buffer: new Uint8Array([0, 1, 2, 0, 3, 1])\r\n            },\r\n            normals: {\r\n              buffer: new Float32Array([0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n              buffer: new Float32Array([0, repeatTextureV, repeatTextureU, 0, 0, 0, repeatTextureU, repeatTextureV])\r\n            }]\r\n          })\r\n    }\r\n\r\n\r\n}\r\n","import { WorldHelper } from \"../World.js\";\r\nimport { Boxes3d } from \"./Boxes3d.js\";\r\n\r\nexport function getSpritesheetTexture(identifier: string, copy: boolean = false, renderer: PIXI.Renderer = null) {\r\n    let sheet = PIXI.Loader.shared.resources[\"spritesheet\"].spritesheet;\r\n    let texture = sheet.textures[identifier];\r\n\r\n    if (copy) {\r\n        let sprite = new PIXI.Sprite(texture);\r\n\r\n        let dynamicTexture1 = PIXI.RenderTexture.create({\r\n            width: sprite.width,\r\n            height: sprite.height,\r\n            scaleMode: PIXI.SCALE_MODES.NEAREST,\r\n            wrapMode: PIXI.WRAP_MODES.REPEAT\r\n        });\r\n\r\n        renderer.render(sprite, {\r\n            renderTexture: dynamicTexture1\r\n        });\r\n\r\n        return new Pixi3d.StandardMaterialTexture(dynamicTexture1.baseTexture);\r\n    } else {\r\n        let smt = new Pixi3d.StandardMaterialTexture(texture.baseTexture);\r\n        smt.transform = new Pixi3d.TextureTransform()\r\n        smt.transform.offset.set(\r\n            (texture.frame.x + 0) / texture.baseTexture.width,\r\n            (texture.frame.y + 0) / texture.baseTexture.height\r\n        )\r\n        smt.transform.scale.set(\r\n            texture.frame.width / texture.baseTexture.width,\r\n            texture.frame.height / texture.baseTexture.height\r\n        )\r\n        return smt;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class RobotMarker extends Pixi3d.Mesh3D {\r\n    constructor(geometry: Pixi3d.MeshGeometry3D, material: Pixi3d.Material, public farbe: string) {\r\n        super(geometry, material);\r\n    }\r\n}\r\n\r\nexport class RobotBrick extends Pixi3d.Mesh3D {\r\n    constructor(geometry: Pixi3d.MeshGeometry3D, material: Pixi3d.Material, public farbe: string) {\r\n        super(geometry, material);\r\n    }\r\n}\r\n\r\nexport class RobotCubeFactory {\r\n\r\n    farben: string[] = [\"rot\", \"gelb\", \"grün\", \"blau\"];\r\n    farbeToColorInfoMap: { [farbe: string]: number[] } = {\r\n        \"rot\": [1.0, 0.0, 0.0],\r\n        \"gelb\": [1.0, 1.0, 0.0],\r\n        \"grün\": [0.0, 1.0, 0.0],\r\n        \"blau\": [0.0, 0.0, 1.0]\r\n    }\r\n    farbeToMarkerMaterialMap: { [farbe: string]: Pixi3d.StandardMaterial } = {};\r\n    farbeToBrickMaterialMap: { [farbe: string]: Pixi3d.StandardMaterial } = {};\r\n\r\n\r\n    grassBrickMaterial: Pixi3d.StandardMaterial;\r\n    groundPlaneMaterial: Pixi3d.StandardMaterial;\r\n\r\n    planeMaterial: { [key: string]: Pixi3d.StandardMaterial } = {};\r\n\r\n    cloudMaterial: Pixi3d.StandardMaterial;\r\n\r\n    light1: Pixi3d.Light;\r\n    light2: Pixi3d.Light;\r\n    lightingEnvironment: Pixi3d.LightingEnvironment;\r\n\r\n\r\n\r\n    getBrick(farbe: string) {\r\n        return new RobotBrick(Boxes3d.createHalfheightCube3dMesh(), this.farbeToBrickMaterialMap[farbe], farbe);\r\n    }\r\n\r\n    getGrassBrick() {\r\n        return new Pixi3d.Mesh3D(Boxes3d.createCube3dMesh(), this.grassBrickMaterial);\r\n    }\r\n\r\n    getGrassPlane(x: number, z: number) {\r\n        let mesh = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(x, z), this.groundPlaneMaterial);\r\n        mesh.scale.x = x;\r\n        mesh.scale.z = z;\r\n        mesh.x += x - 1;\r\n        mesh.z += z - 1;\r\n        //let plane = Pixi3d.Mesh3D.createPlane();\r\n        // (<Pixi3d.StandardMaterial>plane.material).baseColor = new Pixi3d.Color(0, 1, 0, 1); // The base color will be blended together with base color texture (if available).\r\n        // plane.y = -0.5;\r\n        // plane.scale.set(10);\r\n        return mesh;\r\n    }\r\n\r\n    makePlane(container: Pixi3d.Container3D, x: number, y: number, z: number, widthX: number, widthZ: number, spriteOrColor: string | Pixi3d.Color) {\r\n        let material: Pixi3d.StandardMaterial;\r\n        if (typeof spriteOrColor == \"string\") {\r\n            material = this.getPlaneMaterial(spriteOrColor);\r\n        } else {\r\n            material = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(material);\r\n            material.baseColor = spriteOrColor;\r\n        }\r\n        let mesh = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(widthX, widthZ), material);\r\n        mesh.y = y;\r\n        mesh.x = x;\r\n        mesh.z = z;\r\n        mesh.scale.set(widthX, 1, widthZ);\r\n        container.addChild(mesh);\r\n    }\r\n\r\n    getMarker(farbe: string) {\r\n        let marker = new RobotMarker(Boxes3d.createCube3dMesh(), this.farbeToMarkerMaterialMap[farbe], farbe);\r\n        marker.scale.set(0.9, 0.1, 0.9);\r\n        return marker;\r\n    }\r\n\r\n    getSidePlanes(worldX: number, worldY: number, sideSprite: string, radius: number, deep: number): Pixi3d.Mesh3D[] {\r\n        let planes: Pixi3d.Mesh3D[] = [];\r\n\r\n        let sideMaterial = this.getPlaneMaterial(sideSprite); //3d#3\r\n\r\n        let mesh1 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), sideMaterial);\r\n        mesh1.scale.x = worldX + 2 * radius;\r\n        mesh1.x += worldX - 1;\r\n        mesh1.y -= 1 + 2 * deep;\r\n        mesh1.z -= 1 + 2 * radius;\r\n        mesh1.rotationQuaternion.setEulerAngles(-90, 0, 180);\r\n        planes.push(mesh1);\r\n\r\n        let mesh2 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), sideMaterial);\r\n        mesh2.scale.x = worldX + 2 * radius;\r\n        mesh2.x += worldX - 1;\r\n        mesh2.y -= 1 + 2 * deep;\r\n        mesh2.z += 2 * worldY - 1 + 2 * radius;\r\n        mesh2.rotationQuaternion.setEulerAngles(90, 0, 0);\r\n        planes.push(mesh2);\r\n\r\n        let mesh3 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), sideMaterial);\r\n        mesh3.scale.x = worldY + 2 * radius;\r\n        mesh3.y -= 1 + 2 * deep;\r\n        mesh3.x -= 1 + 2 * radius;\r\n        mesh3.z += worldY - 1;\r\n        mesh3.rotationQuaternion.setEulerAngles(90, -90, 0);\r\n        planes.push(mesh3);\r\n\r\n        let mesh4 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), sideMaterial);\r\n        mesh4.scale.x = worldY + 2 * radius;\r\n        mesh4.y -= 1 + 2 * deep;\r\n        mesh4.x += 2 * worldX - 1 + 2 * radius;\r\n        mesh4.z += worldY - 1;\r\n        mesh4.rotationQuaternion.setEulerAngles(90, 90, 0);\r\n        planes.push(mesh4);\r\n\r\n        return planes;\r\n    }\r\n\r\n    getHorizontalPlanes(worldX: number, worldY: number, topSprite: string, radius: number, deep: number): Pixi3d.Mesh3D[] {\r\n        let planes: Pixi3d.Mesh3D[] = [];\r\n\r\n        let topMaterial = this.getPlaneMaterial(topSprite);\r\n\r\n        let mesh5 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh5.scale.x = worldX + 2 * radius;\r\n        mesh5.x += worldX - 1;\r\n        mesh5.y -= 2 + 2 * deep;\r\n        mesh5.z -= 2 + 2 * radius;\r\n        mesh5.rotationQuaternion.setEulerAngles(180, 0, 180);\r\n        planes.push(mesh5);\r\n\r\n        let mesh6 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), topMaterial);\r\n        mesh6.scale.x = worldX + 2 * radius;\r\n        mesh6.x += worldX - 1;\r\n        mesh6.y -= 2 + 2 * deep;\r\n        mesh6.z += 2 * worldY + 2 * radius;\r\n        mesh6.rotationQuaternion.setEulerAngles(0, 0, 0);\r\n        planes.push(mesh6);\r\n\r\n        let mesh7 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh7.scale.x = worldY + 2 * radius + 2;\r\n        mesh7.y -= 2 + 2 * deep;\r\n        mesh7.x -= 2 + 2 * radius;\r\n        mesh7.z += worldY - 1;\r\n        mesh7.rotationQuaternion.setEulerAngles(0, -90, 0);\r\n        planes.push(mesh7);\r\n\r\n        let mesh8 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh8.scale.x = worldY + 2 * radius + 2;\r\n        mesh8.y -= 2 + 2 * deep;\r\n        mesh8.x += 2 * worldX + 2 * radius;\r\n        mesh8.z += worldY - 1;\r\n        mesh8.rotationQuaternion.setEulerAngles(0, 90, 0);\r\n        planes.push(mesh8);\r\n\r\n        return planes;\r\n    }\r\n\r\n    makeClouds(container: Pixi3d.Container3D, height: number, originX: number, originZ: number) {\r\n        let count = 150;\r\n        let numberOfBatches = 20;\r\n        let todo = count;\r\n\r\n        let f = () => {\r\n            if (todo <= 0) return;\r\n            let radius = 1500;\r\n            let maxWidth = 20;\r\n            for (let i = 0; i < count / numberOfBatches; i++) {\r\n                todo--;\r\n                let distance = Math.sqrt(Math.random()) * radius;\r\n                let angle = Math.random() * 2 * Math.PI;\r\n\r\n                let x1 = Math.floor(distance * Math.cos(angle)) + originX;\r\n                let z1 = Math.floor(distance * Math.sin(angle)) + originZ;\r\n\r\n                let count = Math.random() * 10 + 2;\r\n\r\n                for (let j = 0; j < count; j++) {\r\n                    let mesh = Boxes3d.createCube3d(this.cloudMaterial);\r\n\r\n                    let scaleX = Math.floor(Math.random() * maxWidth + 2);\r\n                    let scaleY = Math.floor(Math.random() * maxWidth / 4 + 2);\r\n                    let scaleZ = Math.floor(Math.random() * maxWidth + 2);\r\n\r\n                    let dx = Math.floor(Math.random() * 3 * (5 + count + scaleX));\r\n                    let dz = Math.floor(Math.random() * 3 * (5 + count + scaleZ));\r\n\r\n                    mesh.x = x1 + dx;\r\n                    mesh.z = z1 + dz;\r\n\r\n                    mesh.y = height + scaleY / 2;\r\n\r\n                    mesh.scale.set(scaleX, scaleY, scaleZ);\r\n\r\n                    container.addChild(mesh);\r\n\r\n                }\r\n\r\n            }\r\n\r\n            setTimeout(f, 200);\r\n\r\n        }\r\n\r\n        f();\r\n\r\n    }\r\n\r\n    constructor(private worldHelper: WorldHelper, private camera: Pixi3d.Camera) {\r\n\r\n        let renderer = <PIXI.Renderer>worldHelper.app.renderer;\r\n\r\n        this.light1 = Object.assign(new Pixi3d.Light(), {\r\n            type: Pixi3d.LightType.ambient,\r\n            range: 100,\r\n            intensity: 30,\r\n            color: new Pixi3d.Color(1, 1, 1)\r\n        });\r\n        this.light1.position.set(-4, 4, 4);\r\n\r\n        this.light2 = Object.assign(new Pixi3d.Light(), {\r\n            type: Pixi3d.LightType.directional,\r\n            range: 600,\r\n            intensity: 4,\r\n            color: new Pixi3d.Color(1, 1, 1)\r\n        });\r\n        this.light2.position.set(12, 16, -12);\r\n        this.light2.rotationQuaternion.setEulerAngles(25, 45, 0);\r\n\r\n        this.lightingEnvironment = new Pixi3d.LightingEnvironment(<PIXI.Renderer>worldHelper.app.renderer);\r\n        this.lightingEnvironment.lights.push(this.light1, this.light2);\r\n\r\n\r\n        this.grassBrickMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.grassBrickMaterial);\r\n        this.grassBrickMaterial.baseColorTexture = getSpritesheetTexture(\"robot#0\");\r\n\r\n        this.cloudMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.cloudMaterial);\r\n        this.cloudMaterial.baseColor = new Pixi3d.Color(1.0, 1.0, 1.0, 0.5);\r\n\r\n        this.groundPlaneMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.groundPlaneMaterial);\r\n        this.groundPlaneMaterial.baseColorTexture = getSpritesheetTexture(\"robot#2\", true, renderer);\r\n\r\n        for (let farbe of this.farben) {\r\n            let material = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(material);\r\n            let colorInfo = this.farbeToColorInfoMap[farbe];\r\n            material.baseColor = new Pixi3d.Color(colorInfo[0], colorInfo[1], colorInfo[2], 1);\r\n            this.farbeToMarkerMaterialMap[farbe] = material;\r\n\r\n            let brickMaterial = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(brickMaterial);\r\n            let index = this.farben.indexOf(farbe) + 4;\r\n            brickMaterial.baseColorTexture = getSpritesheetTexture(\"robot#\" + index);\r\n            this.farbeToBrickMaterialMap[farbe] = brickMaterial;\r\n        }\r\n\r\n    }\r\n\r\n    initMaterial(material: Pixi3d.StandardMaterial) {\r\n        material.camera = this.camera;\r\n        material.exposure = 1;\r\n        material.roughness = 0.9;\r\n        material.lightingEnvironment = this.lightingEnvironment;\r\n    }\r\n\r\n    getPlaneMaterial(spriteKey: string): Pixi3d.StandardMaterial {\r\n        let renderer = <PIXI.Renderer>this.worldHelper.app.renderer;\r\n\r\n        if (this.planeMaterial[spriteKey] != null) return this.planeMaterial[spriteKey];\r\n\r\n        let material = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(material);\r\n        material.baseColorTexture = getSpritesheetTexture(spriteKey, true, renderer);\r\n        // material.doubleSided = true;\r\n        this.planeMaterial[spriteKey] = material;\r\n\r\n        return material;\r\n    }\r\n\r\n    makeSprite3d(textureKey: string, container: Pixi3d.Container3D){\r\n        let material = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(material);\r\n        material.baseColorTexture = getSpritesheetTexture(textureKey, false);\r\n        material.alphaMode = Pixi3d.StandardMaterialAlphaMode.mask;\r\n        let sprite = Boxes3d.createPlane3d(1, 1, material);\r\n        container.addChild(sprite);\r\n        return sprite;\r\n    }\r\n\r\n}","import { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"../FilledShape.js\";\r\nimport { WorldHelper } from \"../World.js\";\r\nimport { Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { FilledShapeDefaults } from \"../FilledShapeDefaults.js\";\r\nimport { ShapeHelper } from \"../Shape.js\";\r\nimport { Boxes3d } from \"./Boxes3d.js\";\r\nimport { RobotBrick, RobotCubeFactory, RobotMarker } from \"./RobotCubeFactory.js\";\r\n\r\nexport class RobotClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Robot\", module, \"Robot Karol\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let robotWorldType = <Klass>module.typeStore.getType(\"RobotWorld\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, 1, 1, 5, 8)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter steht anfangs an der Stelle (1/1)', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, 5, 10)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt.', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n                let worldX: number = parameters[3].value;\r\n                let worldY: number = parameters[4].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, worldX, worldY)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt. Wenn die RobotWorld noch nicht instanziert ist, wird sie mit der Größe worldX * worldY neu erstellt.', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"initialeWelt\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n                let initialeWelt: string = parameters[3].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, 0, 0, initialeWelt)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt. Wenn die RobotWorld noch nicht instanziert ist, wird sie auf Grundlage des Strings initialeWelt erstellt.', true));\r\n\r\n        this.addMethod(new Method(\"getWelt\", new Parameterlist([\r\n        ]), robotWorldType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.robotWorldHelper.runtimeObject;\r\n\r\n            }, false, false, 'Gibt das RobotWorld-Objekt zurück', false));\r\n\r\n        this.addMethod(new Method(\"rechtsDrehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.direction.turnRight();\r\n                rh.adjustAngle();\r\n\r\n            }, false, false, 'Dreht den Roboter um 90° nach rechts.', false));\r\n\r\n        this.addMethod(new Method(\"linksDrehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.direction.turnLeft();\r\n                rh.adjustAngle();\r\n\r\n            }, false, false, 'Dreht den Roboter um 90° nach links.', false));\r\n\r\n        this.addMethod(new Method(\"schritt\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.schritt();\r\n\r\n            }, false, false, 'Lässt den Roboter einen Schritt nach vorne gehen.', false));\r\n\r\n        this.addMethod(new Method(\"schritt\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.schritt()) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl Schritte nach vorne gehen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.hinlegen(\"rot\");\r\n\r\n            }, false, false, 'Lässt den Roboter einen roten Ziegel vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"markeLöschen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeLöschen();\r\n\r\n            }, false, false, 'Lässt den Roboter eine Marke, die direkt unter ihm liegt, löschen.', false));\r\n\r\n        this.addMethod(new Method(\"markeSetzen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeSetzen(\"gelb\");\r\n\r\n            }, false, false, 'Lässt den Roboter eine gelbe Marke direkt unter sich setzen.', false));\r\n\r\n        this.addMethod(new Method(\"markeSetzen\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeSetzen(farbe);\r\n\r\n            }, false, false, 'Lässt den Roboter eine Marke der angegebenen Farbe direkt unter sich setzen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.hinlegen(\"rot\")) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl rote Ziegel vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.hinlegen(farbe);\r\n\r\n            }, false, false, 'Lässt den Roboter einen Ziegel der angegebenen Farbe vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"aufheben\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.aufheben();\r\n\r\n            }, false, false, 'Lässt den Roboter einen roten Ziegel vor sich aufheben.', false));\r\n\r\n        this.addMethod(new Method(\"aufheben\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.aufheben()) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl rote Ziegel vor sich aufheben.', false));\r\n\r\n        this.addMethod(new Method(\"warten\", new Parameterlist([\r\n            { identifier: \"ZeitInMillisekunden\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n            }, false, false, \"Pausiert das Programm für die angegebene Zeit in ms.\"));\r\n\r\n        this.addMethod(new Method(\"langsam\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(5);\r\n\r\n            }, false, false, \"Setzt die Ausführungsgeschwindigkeit auf 5 Programmschritte/Sekunde.\"));\r\n\r\n        this.addMethod(new Method(\"schnell\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(\"max\");\r\n            }, false, false, \"Setzt die Ausführungsgeschwindigkeit auf 'maximal'.\"));\r\n\r\n        this.addMethod(new Method(\"beenden\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                let console = module.main.getBottomDiv()?.console;\r\n                if (console != null) {\r\n                    console.writeConsoleEntry(\"Das Programm wurde durch einen Roboter angehalten.\", null, \"#0000ff\");\r\n                    console.showTab();\r\n                }\r\n                module.main.getInterpreter().stop();\r\n            }, false, false, \"Beendet das Programm.\"));\r\n\r\n        this.addMethod(new Method(\"istWand\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istWand();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter direkt vor einer Wand steht.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstWand\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istWand();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter nicht direkt vor einer Wand steht.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter mindestens ein Ziegel liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(anzahl);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter genau Anzahl Ziegel liegen.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn auf dem Ziegelstapel direkt vor dem Roboter mindestens ein Ziegel mit der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter kein Ziegel liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(anzahl);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter nicht genau Anzahl Ziegel liegen.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn auf dem Ziegelstapel direkt vor dem Roboter kein Ziegel mit der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istMarke\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istMarke(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter eine Marke in der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istMarke\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istMarke(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter eine Marke (egal in welcher Farbe) liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstMarke\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istMarke(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter keine Marke in der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstMarke\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istMarke(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter keine Marke (egal in welcher Farbe) liegt.\"));\r\n\r\n        let himmelsrichtungen = [\"Norden\", \"Osten\", \"Süden\", \"Westen\"];\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            let hr: string = himmelsrichtungen[i];\r\n\r\n            this.addMethod(new Method(\"ist\" + hr, new Parameterlist([\r\n            ]), booleanPrimitiveType,\r\n                (parameters) => {\r\n\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                    return rh.direction.index == i;\r\n\r\n                }, false, false, \"Gibt genau dann true zurück, wenn der Roboter nach \" + hr + \" blickt.\"));\r\n        }\r\n\r\n        this.addMethod(new Method(\"istLeer\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine == 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter keinen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"istVoll\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine == rh.maxSteine;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter die maximale Anzahl von Steinen mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstLeer\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine > 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens einen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"hatZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine > 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens einen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"hatZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.hatSteine >= anzahl;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens Anzahl Steine mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstVoll\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine < rh.maxSteine;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter weniger als die maximale Anzahl von Steinen mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"setzeAnzahlSteine\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.hatSteine = anzahl;\r\n\r\n            }, false, false, \"Befüllt den Rucksack des Roboters mit genau Anzahl Steinen.\"));\r\n\r\n        this.addMethod(new Method(\"setzeRucksackgröße\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.maxSteine = anzahl;\r\n\r\n            }, false, false, \"Gibt dem Roboter einen Rucksack, der maximal Anzahl Steine fasst.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RobotWorldClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RobotWorld\", module, \"Welt für Robot Karol\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"RobotWorld\", new Parameterlist([\r\n            { identifier: \"worldX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let worldX: number = parameters[1].value;\r\n                let worldY: number = parameters[2].value;\r\n\r\n                const interpreter = module.main.getInterpreter();\r\n\r\n                let rh = new RobotWorldHelper(interpreter, o, worldX, worldY, null);\r\n                o.intrinsicData[\"RobotWorldHelper\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Robot-Welt', true));\r\n\r\n        this.addMethod(new Method(\"RobotWorld\", new Parameterlist([\r\n            { identifier: \"initialeWelt\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let initialeWelt: string = parameters[1].value;\r\n\r\n                const interpreter = module.main.getInterpreter();\r\n\r\n                let rh = new RobotWorldHelper(interpreter, o, 0, 0, initialeWelt);\r\n                o.intrinsicData[\"RobotWorldHelper\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Robot-Welt.', true));\r\n\r\n            this.addMethod(new Method(\"setzeMaximalhöhe\", new Parameterlist([\r\n                { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let anzahl: number = parameters[1].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n    \r\n                    return rh.maximumHeight = anzahl;\r\n    \r\n                }, false, false, \"Ändert die maximale Höhe der Ziegelstapel.\"));\r\n    \r\n            this.addMethod(new Method(\"setzeZiegel\", new Parameterlist([\r\n                { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let x: number = parameters[1].value;\r\n                    let y: number = parameters[2].value;\r\n                    let farbe: string = parameters[3].value;\r\n                    let anzahl: number = parameters[4].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n                    \r\n                    if(x < 1 || x > rh.worldX || y < 1 || y > rh.worldY){\r\n                        rh.interpreter.throwException(`Die Position (${x}/${y}) ist außerhalb der Weltgrenzen.`);\r\n                        return;\r\n                    }\r\n\r\n                    for(let i = 0; i < anzahl; i++){\r\n                        rh.addBrick(x-1, y-1, farbe);\r\n                    }\r\n    \r\n                }, false, false, \"Setzt Anzahl Ziegel an der angegebenen Position mit der angegebenen Farbe. Die x- und y-Koordinaten beginnen bei 1.\"));\r\n    \r\n            this.addMethod(new Method(\"setzeMarke\", new Parameterlist([\r\n                { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let x: number = parameters[1].value;\r\n                    let y: number = parameters[2].value;\r\n                    let farbe: string = parameters[3].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n\r\n                    if(x < 1 || x > rh.worldX || y < 1 || y > rh.worldY){\r\n                        rh.interpreter.throwException(`Die Position (${x}/${y}) ist außerhalb der Weltgrenzen.`);\r\n                        return;\r\n                    }\r\n\r\n                    rh.setMarker(x-1, y-1, farbe);\r\n    \r\n                }, false, false, \"Setzt einen Marker an der angegebenen Position mit der angegebenen Farbe. Die x- und y-Koordinaten beginnen bei 1.\"));\r\n    \r\n    \r\n    }\r\n\r\n}\r\n\r\nexport class RobotWorldHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n\r\n    robotCubeFactory: RobotCubeFactory;\r\n    camera: Pixi3d.Camera;\r\n    displayObject: PIXI.DisplayObject;\r\n    container3D: Pixi3d.Container3D;\r\n\r\n    markers: RobotMarker[][] = [];    // x, y\r\n    bricks: RobotBrick[][][] = [];   // x, y, height\r\n\r\n    maximumHeight: number = 15;\r\n\r\n    robots: RobotHelper[] = [];\r\n\r\n    constructor(public interpreter: Interpreter, public runtimeObject: RuntimeObject,\r\n        public worldX: number, public worldY: number, initialeWelt: string) {\r\n\r\n        this.fetchWorld(interpreter);\r\n\r\n        if (this.worldHelper.robotWorldHelper != null) {\r\n            this.interpreter.throwException(\"Es wurde bereits ein Robot-World-Objekt instanziert. Davon kann es aber nur ein einziges geben. \\nTipp: Jedes Robot-Objekt kann das Robot-World-Objekt mit der getRobotWorld() holen.\");\r\n            return;\r\n        }\r\n\r\n        this.worldHelper.robotWorldHelper = this;\r\n\r\n        this.camera = new Pixi3d.Camera(<PIXI.Renderer>this.worldHelper.app.renderer);\r\n\r\n        this.robotCubeFactory = new RobotCubeFactory(this.worldHelper, this.camera);\r\n\r\n        this.markers = [];\r\n        this.bricks = [];\r\n\r\n        this.container3D = new Pixi3d.Container3D();\r\n        this.displayObject = this.container3D;\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n\r\n        if (initialeWelt != null) {\r\n            this.initFromString(initialeWelt);\r\n        } else {\r\n            this.initWorldArrays(worldX, worldY);\r\n        }\r\n\r\n        this.renderOrnamentsAndInitCamera();\r\n\r\n    }\r\n\r\n    adjustRobotPositions(x: number, y: number){\r\n        for(let robot of this.robots){\r\n            if(robot.x == x && robot.y == y){\r\n                robot.model.y = this.getBrickCount(x, y) + 1.6;\r\n            }\r\n        }\r\n    }\r\n\r\n    initWorldArrays(worldX: number, worldY: number) {\r\n        for (let x = 0; x < worldX; x++) {\r\n            let markerColumn = [];\r\n            this.markers.push(markerColumn);\r\n            let brickColumn = [];\r\n            this.bricks.push(brickColumn);\r\n            for (let y = 0; y < worldY; y++) {\r\n                markerColumn.push(null);\r\n                brickColumn.push([]);\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchWorld(interpreter: Interpreter) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            interpreter.worldHelper = worldHelper;\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n\r\n    renderOrnamentsAndInitCamera() {\r\n        this.worldHelper.app.renderer.backgroundColor = 0x8080ff;\r\n\r\n        let gp = this.robotCubeFactory.getGrassPlane(this.worldX, this.worldY);\r\n        this.container3D.addChild(gp);\r\n\r\n        let deep: number = 0;\r\n        let radius: number = 0;\r\n        this.robotCubeFactory.getSidePlanes(this.worldX, this.worldY, \"robot#3\", radius, deep++)\r\n            .forEach(p => { this.container3D.addChild(p); });\r\n\r\n            this.robotCubeFactory.getSidePlanes(this.worldX, this.worldY, \"robot#10\", radius, deep++)\r\n                .forEach(p => { this.container3D.addChild(p); });\r\n\r\n        this.robotCubeFactory.makeClouds(this.container3D, 60, this.worldX/2, this.worldY/2);\r\n\r\n        this.robotCubeFactory.makePlane(this.container3D, this.worldX/2, -4, this.worldY/2, 3000, 3000, \r\n        new Pixi3d.Color(55.0/255, 174.0/255, 77.0/255));\r\n\r\n        let northSprite = this.robotCubeFactory.makeSprite3d(\"robot#11\", this.container3D);\r\n        // northSprite.position.set(this.worldX + 6, 1, this.worldY - 1);\r\n        northSprite.position.set(2*this.worldX + 1, -1, 2*this.worldY - 6);\r\n        northSprite.scale.set(257.0/40, 1, 1);\r\n        northSprite.rotationQuaternion.setEulerAngles(0, 90, 0);\r\n\r\n        let control = new Pixi3d.CameraOrbitControl(this.worldHelper.app.view, this.camera);\r\n        control.angles.x = 45;\r\n        control.angles.y = -20;\r\n        control.target = { x: this.worldX - 1, y: 0, z: this.worldY - 1 }\r\n        control.distance = Math.max(this.worldX, this.worldY) * 2.3;\r\n\r\n    }\r\n\r\n    addBrick(x: number, y: number, farbe: string): boolean {\r\n        let oldHeight = this.bricks[x][y].length;\r\n        if (oldHeight < this.maximumHeight) {\r\n            let brick = this.robotCubeFactory.getBrick(farbe);\r\n            this.setToXY(x, y, oldHeight, brick);\r\n            this.bricks[x][y].push(brick);\r\n            this.container3D.addChild(brick);\r\n            this.adjustMarkerHeight(x, y);\r\n            this.adjustRobotPositions(x, y);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    removeBrick(x: number, y: number): boolean {\r\n        if (this.bricks[x][y].length > 0) {\r\n            let brick = this.bricks[x][y].pop();\r\n            brick.destroy();\r\n            this.adjustMarkerHeight(x, y);\r\n            this.adjustRobotPositions(x, y);\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    getBrickCount(x: number, y: number) {\r\n        return this.bricks[x][y].length;\r\n    }\r\n\r\n    hasBrickColor(x: number, y: number, farbe: string): boolean {\r\n        for (let brick of this.bricks[x][y]) {\r\n            if (brick.farbe == farbe) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getMarkerColor(x: number, y: number): string {\r\n        let marker = this.markers[x][y];\r\n        if (marker == null) return null;\r\n        return marker.farbe;\r\n    }\r\n\r\n    setMarker(x: number, y: number, farbe: string) {\r\n        if (this.markers[x][y] != null) {\r\n            this.markers[x][y].destroy();\r\n        }\r\n        let marker = this.robotCubeFactory.getMarker(farbe);\r\n        this.markers[x][y] = marker;\r\n        this.container3D.addChild(marker);\r\n        this.setToXY(x, y, 0, marker);\r\n        this.adjustMarkerHeight(x, y);\r\n    }\r\n\r\n    removeMarker(x: number, y: number): boolean {\r\n        let marker = this.markers[x][y];\r\n        if (marker == null) {\r\n            return false;\r\n        } else {\r\n            this.markers[x][y] = null;\r\n            marker.destroy();\r\n            return true;\r\n        }\r\n    }\r\n\r\n    adjustMarkerHeight(x: number, y: number) {\r\n        let marker = this.markers[x][y];\r\n        if (marker != null) {\r\n            let height = this.bricks[x][y].length\r\n            marker.y = height + 0.1;\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        for (let x = 0; x < this.bricks.length; x++) {\r\n            for (let y = 0; y < this.bricks[x].length; y++) {\r\n                let brickList = this.bricks[x][y];\r\n                while (brickList.length > 0) {\r\n                    brickList.pop().destroy();\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let x = 0; x < this.markers.length; x++) {\r\n            for (let y = 0; y < this.markers[x].length; y++) {\r\n                let marker = this.markers[x][y];\r\n                if (marker != null) {\r\n                    this.markers[x][y] = null;\r\n                    marker.destroy();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setDimensions(worldX: number, worldY: number) {\r\n        this.clear();\r\n\r\n        this.worldX = worldX;\r\n        this.worldY = worldY;\r\n\r\n        this.markers = [];\r\n        this.bricks = [];\r\n        for (let x = 0; x < worldX; x++) {\r\n            let markerColumn = [];\r\n            this.markers.push(markerColumn);\r\n            let brickColumn = [];\r\n            this.bricks.push(brickColumn);\r\n            for (let y = 0; y < worldY; y++) {\r\n                markerColumn.push(null);\r\n                brickColumn.push([]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getNumberOfBricks(x: number, y: number) {\r\n        return this.bricks[x][y].length;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param initString \r\n     * \" \": empty \r\n     * \"_\": no brick, yellow marker\r\n     * \"Y\", \"G\", \"B\", \"R\": switch marker color\r\n     * \"y\", \"g\", \"b\", \"r\": switch brick color\r\n     * \"1\", ..., \"9\": 1, ..., 9 bricks \r\n     * \"1m\", ..., \"9m\": 1, ..., 9 bricks with markers on them\r\n     */\r\n    initFromString(initString: string) {\r\n\r\n        let lowerCaseCharToColor = { \"r\": \"rot\", \"g\": \"grün\", \"b\": \"blau\", \"y\": \"gelb\" };\r\n        let upperCaseCharToColor = { \"R\": \"rot\", \"G\": \"grün\", \"B\": \"blau\", \"Y\": \"gelb\" };\r\n        let digits = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"];\r\n\r\n        this.clear();\r\n        let rows = initString.split(\"\\n\");\r\n        let maxColumns = 0;\r\n        rows.forEach((row) => { let rowLength = this.rowLength(row); if (rowLength > maxColumns) maxColumns = rowLength });\r\n        this.initWorldArrays(maxColumns, rows.length);\r\n\r\n        this.worldX = maxColumns;\r\n        this.worldY = rows.length;\r\n\r\n        let c1: string;\r\n        let c2: string;\r\n        let brickColor = \"rot\";\r\n        let markerColor = \"gelb\";\r\n\r\n        for (let y = 0; y < rows.length; y++) {\r\n            let row = rows[y];\r\n            let x = 0;\r\n            let pos = 0;\r\n            while (pos < row.length) {\r\n                c1 = row.charAt(pos);\r\n                c2 = pos < row.length - 1 ? row.charAt(pos + 1) : null;\r\n                pos++;\r\n                if (lowerCaseCharToColor[c1] != null) {\r\n                    brickColor = lowerCaseCharToColor[c1];\r\n                    continue;\r\n                }\r\n                if (upperCaseCharToColor[c1] != null) {\r\n                    markerColor = upperCaseCharToColor[c1];\r\n                    continue;\r\n                }\r\n                let index = digits.indexOf(c1);\r\n                if (index >= 0) {\r\n                    for (let i = 0; i < index + 1; i++) {\r\n                        this.addBrick(x, y, brickColor);\r\n                    }\r\n                    if (c2 == \"m\") {\r\n                        this.setMarker(x, y, markerColor);\r\n                        pos++;\r\n                    }\r\n                    x++;\r\n                    continue;\r\n                }\r\n                if (c1 == \" \") {\r\n                    x++;\r\n                    continue;\r\n                }\r\n                if (c1 == \"_\") {\r\n                    this.setMarker(x, y, markerColor);\r\n                    x++;\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    rowLength(row: string) {\r\n        let l: number = 0;\r\n        let forwardChars = \" _1234567890\";\r\n\r\n        for (let i = 0; i < row.length; i++) {\r\n            if (forwardChars.indexOf(row.charAt(i)) >= 0) {\r\n                l++;\r\n            }\r\n        }\r\n        return l;\r\n    }\r\n\r\n    setToXY(x: number, y: number, height: number, mesh: Pixi3d.Mesh3D) {\r\n        mesh.x = 2 * (this.worldX - x - 1);\r\n        mesh.z = 2 * (this.worldY - y - 1);\r\n        mesh.y = height;\r\n    }\r\n\r\n    // Wird von WorldHelper aufgerufen\r\n    destroy() {\r\n\r\n    }\r\n\r\n    gibtFarbe(farbe: string): boolean {\r\n        return this.robotCubeFactory.farben.indexOf(farbe) >= 0;\r\n    }\r\n\r\n}\r\n\r\n\r\nclass Direction {\r\n    names: string[] = [\"top\", \"right\", \"bottom\", \"left\"];\r\n    deltas: { dx: number, dy: number }[] = [{ dx: 0, dy: -1 }, { dx: -1, dy: 0 }, { dx: 0, dy: 1 }, { dx: 1, dy: 0 }];\r\n    angles: number[] = [0, 90, 180, 270];\r\n\r\n    public index: number = 2; // top\r\n\r\n    turnRight() {\r\n        this.index = (this.index - 1 + 4) % 4;\r\n    }\r\n\r\n    turnLeft() {\r\n        this.index = (this.index + 1 + 4) % 4;\r\n    }\r\n\r\n    getAngle() {\r\n        return this.angles[this.index];\r\n    }\r\n\r\n    getDeltas() {\r\n        return this.deltas[this.index];\r\n    }\r\n\r\n}\r\n\r\nexport class RobotHelper {\r\n\r\n    robotWorldHelper: RobotWorldHelper;\r\n    model: Pixi3d.Model;\r\n    x: number;\r\n    y: number;\r\n\r\n    hatSteine: number = 10000000;\r\n    maxSteine: number = 100000000;\r\n\r\n    direction: Direction = new Direction();\r\n\r\n    constructor(private interpreter: Interpreter, private runtimeObject: RuntimeObject,\r\n        startX: number, startY: number,\r\n        worldX: number, worldY: number,\r\n        initialeWelt: string = null\r\n    ) {\r\n\r\n        this.fetchRobotWorld(interpreter, worldX, worldY, initialeWelt);\r\n        this.robotWorldHelper.robots.push(this);\r\n\r\n        this.render();\r\n\r\n        this.moveTo(startX - 1, startY - 1);\r\n        this.adjustAngle();\r\n\r\n    }\r\n\r\n    fetchRobotWorld(interpreter: Interpreter, worldX: number, worldY: number, initialeWelt: string) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        this.robotWorldHelper = worldHelper?.robotWorldHelper;\r\n\r\n        if (this.robotWorldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"RobotWorld\").type);\r\n            this.robotWorldHelper = new RobotWorldHelper(interpreter, w, worldX, worldY, initialeWelt);\r\n            w.intrinsicData[\"RobotWorldHelper\"] = this.robotWorldHelper;\r\n        }\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n        //@ts-ignore\r\n        let robot = Pixi3d.Model.from(PIXI.Loader.shared.resources[\"steve\"].gltf);\r\n        robot.scale.set(0.1);\r\n        for (let mesh of robot.meshes) {\r\n            let sm = <Pixi3d.StandardMaterial>mesh.material;\r\n            sm.camera = this.robotWorldHelper.camera;\r\n            sm.exposure = 0.5;\r\n            sm.lightingEnvironment = this.robotWorldHelper.robotCubeFactory.lightingEnvironment;\r\n        }\r\n        this.robotWorldHelper.container3D.addChild(robot);\r\n        this.model = robot;\r\n\r\n    };\r\n\r\n    crop(n: number, min: number, max: number): number {\r\n        if (n < min) n = min;\r\n        if (n > max) n = max;\r\n        return n;\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        const rw = this.robotWorldHelper;\r\n        x = this.crop(x, 0, rw.worldX - 1);\r\n        y = this.crop(y, 0, rw.worldY - 1);\r\n\r\n        this.model.x = 2 * (rw.worldX - x - 1);\r\n        this.model.z = 2 * (rw.worldY - y - 1);\r\n        this.model.y = rw.getNumberOfBricks(x, y) + 1.6;\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    adjustAngle() {\r\n        this.model.transform.rotationQuaternion.setEulerAngles(0, this.direction.getAngle(), 0);\r\n    }\r\n\r\n    schritt(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter ist gegen eine Wand geprallt!\");\r\n            return false;\r\n        }\r\n\r\n        let oldHeight = rw.getNumberOfBricks(this.x, this.y);\r\n        let newHeight = rw.getNumberOfBricks(newX, newY);\r\n\r\n        if (newHeight < oldHeight - 1) {\r\n            this.interpreter.throwException(\"Der Roboter kann maximal einen Ziegel nach unten springen.\");\r\n            return false;\r\n        }\r\n\r\n        if (newHeight > oldHeight + 1) {\r\n            this.interpreter.throwException(\"Der Roboter kann maximal einen Ziegel hoch springen.\");\r\n            return false;\r\n        }\r\n\r\n        this.moveTo(newX, newY);\r\n        return true;\r\n    }\r\n\r\n    hinlegen(farbe: string): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter steht direkt vor einer Wand. Da kann er keine Ziegel hinlegen.\");\r\n            return false;\r\n        }\r\n\r\n        farbe = farbe.toLocaleLowerCase();\r\n        if (!rw.gibtFarbe(farbe)) {\r\n            this.interpreter.throwException(\"Es gibt nur Ziegel der Farben \" + rw.robotCubeFactory.farben.join(\", \") + \". Die Farbe \" + farbe + \" ist nicht darunter.\");\r\n            return false;\r\n        }\r\n\r\n        if (this.hatSteine == 0) {\r\n            this.interpreter.throwException(\"Der Roboter hat keine Ziegel mehr bei sich und kann daher keinen mehr hinlegen.\");\r\n            return false;\r\n        }\r\n\r\n        if(rw.bricks[newX][newY].length >= rw.maximumHeight){\r\n            this.interpreter.throwException(\"Der Ziegelstapel darf die maximale Höhe \" + rw.maximumHeight + \" nicht überschreiten.\");\r\n            return false;\r\n        }\r\n\r\n        rw.addBrick(newX, newY, farbe);\r\n        this.hatSteine--;\r\n\r\n        return true;\r\n    }\r\n\r\n    aufheben(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter steht direkt vor einer Wand. Da kann er keinen Ziegel aufheben.\");\r\n            return false;\r\n        }\r\n\r\n        if (rw.getNumberOfBricks(newX, newY) < 1) {\r\n            this.interpreter.throwException(\"Vor dem Roboter liegt kein Ziegel, er kann daher keinen aufheben.\");\r\n            return false;\r\n        }\r\n\r\n        rw.removeBrick(newX, newY);\r\n\r\n        if (this.hatSteine < this.maxSteine) {\r\n            this.hatSteine++;\r\n        } else {\r\n            this.interpreter.throwException(\"Der Roboter kann nicht mehr Steine aufheben, da er keinen Platz mehr in seinem Rucksack hat.\");\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    markeSetzen(farbe: string) {\r\n        const rw = this.robotWorldHelper;\r\n        farbe = farbe.toLocaleLowerCase();\r\n\r\n        if (!rw.gibtFarbe(farbe)) {\r\n            this.interpreter.throwException(\"Es gibt nur Marken der Farben \" + rw.robotCubeFactory.farben.join(\", \") + \". Die Farbe \" + farbe + \" ist nicht darunter.\");\r\n            return false;\r\n        }\r\n\r\n        rw.setMarker(this.x, this.y, farbe);\r\n    }\r\n\r\n    markeLöschen() {\r\n        const rw = this.robotWorldHelper;\r\n\r\n        rw.removeMarker(this.x, this.y);\r\n    }\r\n\r\n    istWand(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        return (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY)\r\n\r\n    }\r\n\r\n    istZiegel(param: number | string | null): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            return false;\r\n        }\r\n\r\n        if (param == null) return rw.getBrickCount(newX, newY) > 0;\r\n\r\n        if (typeof param == \"string\") {\r\n            return rw.hasBrickColor(newX, newY, param.toLocaleLowerCase());\r\n        }\r\n\r\n        return rw.bricks[newX][newY].length == param;\r\n\r\n    }\r\n\r\n    istMarke(param: string | null): boolean {\r\n        const rw = this.robotWorldHelper;\r\n        let marke = rw.markers[this.x][this.y];\r\n        if (param == null) return marke != null;\r\n\r\n        if (typeof param == \"string\") {\r\n            return marke != null && marke.farbe == param.toLocaleLowerCase();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n","import { QueryResult } from \"../../tools/database/DatabaseTool.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, StringPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class ResultSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"ResultSet\", module, \"Ein ResultSet-Objekt speichert das Ergebnis einer Abfrage an die Datenbank.\");\r\n\r\n        let resultSetType = <Klass>module.typeStore.getType(\"ResultSet\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n \r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n                return rsh.next();\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"wasNull\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n                return rsh.wasNull;\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn der zuletzt gelesene Wert null war.',\r\n            false));\r\n\r\n        let types = [booleanPrimitiveType, intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n\r\n        for(let type of types){\r\n\r\n            let typeIdFirstUppercase = type.identifier.charAt(0).toUpperCase() + type.identifier.substring(1);\r\n\r\n            this.addMethod(new Method(\"get\"+typeIdFirstUppercase, new Parameterlist([\r\n                { identifier: \"columnIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), type,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let columnIndex: number = parameters[1].value;\r\n\r\n                    let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    let interpreter = module.main.getInterpreter();\r\n                    if(columnIndex < 1 || columnIndex > rsh.columnCount()){\r\n                        interpreter.throwException(\"Das Ergebnis hat keine Spalte \" + columnIndex + \".\");\r\n                        return;\r\n                    }\r\n\r\n                    if(rsh.isAfterLast()){\r\n                        interpreter.throwException(\"Der Cursor befindet sich hinter dem letzten Datensatz des ResultSet.\");\r\n                    }\r\n    \r\n                    return rsh.getValue(type, columnIndex);\r\n    \r\n                }, false, false, 'Gibt den Wert der Spalte mit dem angegebenen Spaltenindex als ' + type.identifier + \" zurück.\",\r\n                false));\r\n\r\n            this.addMethod(new Method(\"get\"+typeIdFirstUppercase, new Parameterlist([\r\n                { identifier: \"columnLabel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), type,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let columnLabel: string = parameters[1].value;\r\n\r\n                    let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    let interpreter = module.main.getInterpreter();\r\n\r\n\r\n                    if(rsh.isAfterLast()){\r\n                        interpreter.throwException(\"Der Cursor befindet sich hinter dem letzten Datensatz des ResultSet.\");\r\n                    }\r\n\r\n                    let columnIndex: number = rsh.getColumnIndex(columnLabel);\r\n                    if(columnIndex < 0){\r\n                        interpreter.throwException(\"Das Ergebnis hat keine Spalte mit dem Bezeichner \" + columnLabel + \".\");\r\n                        return;\r\n                    }\r\n    \r\n                    return rsh.getValue(type, columnIndex);\r\n    \r\n                }, false, false, 'Gibt den Wert der Spalte mit dem angegebenen Spaltenindex als ' + type.identifier + \" zurück.\",\r\n                false));\r\n\r\n        }\r\n\r\n\r\n        \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class ResultsetHelper {\r\n    cursor: number = -1;\r\n    wasNull: boolean = false;\r\n\r\n    constructor(private result: QueryResult){\r\n\r\n    }\r\n\r\n    getColumnIndex(columnLabel: string): number {\r\n        \r\n        columnLabel = columnLabel.toLocaleLowerCase();\r\n\r\n        let index = this.result.columns.findIndex((value, index) => {return value.toLocaleLowerCase() == columnLabel});\r\n        if(index < 0) return index;\r\n        return index + 1;\r\n    }\r\n\r\n\r\n    next(): boolean {\r\n        this.cursor++;\r\n        if(this.result == null) return false;\r\n        return this.cursor < this.result.values.length;\r\n    }\r\n\r\n    columnCount(): number {\r\n        return this.result.columns.length;\r\n    }\r\n\r\n    getValue(type: Type, columnIndex: number) {\r\n\r\n        let value = this.result.values[this.cursor][columnIndex - 1];\r\n        this.wasNull = value == null;\r\n\r\n        if(type == stringPrimitiveType){\r\n            return value == null ? null : \"\" + value;\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(value == null || !(typeof value == \"number\")){\r\n                return 0;\r\n            }\r\n            return Math.floor(value);\r\n        }\r\n\r\n        if(type == floatPrimitiveType || type == doublePrimitiveType){\r\n            if(value == null || !(typeof value == \"number\")){\r\n                return 0;\r\n            }\r\n            return value;\r\n        }\r\n\r\n        if(type == booleanPrimitiveType){\r\n            if(value == null) return false;\r\n            return (value + \"\").indexOf(\"1\") >= 0;\r\n        }\r\n\r\n    }\r\n\r\n    isAfterLast(): boolean {\r\n        return this.cursor > this.result.values.length - 1;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ConnectionHelper } from \"./Connection.js\";\r\nimport { ResultsetHelper } from \"./ResultSet.js\";\r\n\r\nexport class DatabaseStatementClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Statement\", module, \"Ein Statement-Objekt repräsentiert eine Anweisung an die Datenbank.\");\r\n\r\n\r\n        let resultSetType = <Klass>module.typeStore.getType(\"ResultSet\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n \r\n        this.addMethod(new Method(\"executeQuery\", new Parameterlist([\r\n            { identifier: \"query\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), resultSetType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let query: string = parameters[1].value;\r\n\r\n                let connectionHelper: ConnectionHelper = o.intrinsicData[\"ConnectionHelper\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                query = query.trim();\r\n                if(!query.toLocaleLowerCase().startsWith(\"select\")){\r\n                    module.main.getInterpreter().resumeAfterInput(null);\r\n                    interpreter.throwException(\"Mit der Methode executeQuery können nur select-Anweisungen ausgeführt werden. Benutze für datenverändernde Anweisungen die Methode executeUpdate.\");                    \r\n                    return null;\r\n                }\r\n\r\n                interpreter.pauseForInput();\r\n                \r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n\r\n\r\n                connectionHelper.executeQuery(query, (error, result) => {\r\n                module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if(error != null){\r\n                        module.main.getInterpreter().resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                        return;\r\n                    }\r\n                    let rsh = new ResultsetHelper(result);\r\n                    let rs = new RuntimeObject(resultSetType);\r\n                    rs.intrinsicData[\"Helper\"] = rsh;\r\n                    interpreter.resumeAfterInput({value: rs, type: resultSetType}, true);\r\n                })\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus, das eine selct-Anweisung enthält.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"executeUpdate\", new Parameterlist([\r\n            { identifier: \"query\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let query: string = parameters[1].value;\r\n\r\n                let connectionHelper: ConnectionHelper = o.intrinsicData[\"ConnectionHelper\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n\r\n                query = query.trim();\r\n                if(query.toLocaleLowerCase().startsWith(\"select\")){\r\n                    module.main.getInterpreter().resumeAfterInput(null);\r\n                    interpreter.throwException(\"Mit der Methode executeUpdate können nur datenverändernde Anweisungen ausgeführt werden. Benutze für select-Anweisungen die Methode executeQuery.\");                    \r\n                    return;\r\n                }\r\n\r\n                interpreter.pauseForInput();\r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n\r\n                connectionHelper.executeWriteStatement(query, (error) => {\r\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if(error != null){\r\n                        module.main.getInterpreter().resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                        return;\r\n                    }\r\n                    interpreter.resumeAfterInput({value: 0, type: intPrimitiveType}, true);\r\n                })\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus, das eine datenverändernde Anweisung enthält.',\r\n            false));\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","export class WorkerSim {\r\n\r\n    //@ts-ignore\r\n    initsql = initSqlJs({locateFile: (path, scriptDirectory) => \"https://embed.learn-sql.de/include/lib/sql.js/sql-wasm.wasm\"});\r\n    db;\r\n    SQL;\r\n\r\n    onmessage: (event: {data: any}) => void;\r\n\r\n    onError: (event: ErrorEvent) => void;\r\n\r\n    postMessageToClient(message: any) {\r\n        this.onmessage({data: message})\r\n    }\r\n\r\n    postMessage(data: any){\r\n        let that = this;\r\n        if (that.db == null) {\r\n            that.initsql.then((SQL1) => {\r\n                that.SQL = SQL1;\r\n                that.db = createDb(SQL1, undefined);\r\n                that.worker(data);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n                //@ts-ignore\r\n                return that.postMessageToClient({\r\n                    id: this[\"data\"][\"id\"],\r\n                    error: err[\"message\"]\r\n                });\r\n            })\r\n        } else {\r\n            that.worker(data);\r\n        }\r\n    }\r\n\r\n    terminate() {\r\n\r\n    }\r\n\r\n    worker(data: any) {\r\n        var buff; var result;\r\n        var config = data[\"config\"] ? data[\"config\"] : {};\r\n        try {\r\n            switch (data && data[\"action\"]) {\r\n                case \"open\":\r\n                    buff = data[\"buffer\"];\r\n                    this.db = createDb(this.SQL, buff && new Uint8Array(buff));\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"],\r\n                        ready: true\r\n                    });\r\n                case \"exec\":\r\n                    if (this.db === null) {\r\n                        this.db = createDb(this.SQL, undefined);\r\n                    }\r\n                    if (!data[\"sql\"]) {\r\n                        throw \"exec: Missing query string\";\r\n                    }\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"],\r\n                        results: this.db.exec(data[\"sql\"], data[\"params\"], config)\r\n                    });\r\n                case \"each\":\r\n                    if (this.db === null) {\r\n                        this.db = createDb(this.SQL, undefined);\r\n                    }\r\n                    var callback = function callback(row) {\r\n                        //@ts-ignore\r\n                        return this.postMessage({\r\n                            id: data[\"id\"],\r\n                            row: row,\r\n                            finished: false\r\n                        });\r\n                    };\r\n                    var done = function done() {\r\n                        //@ts-ignore\r\n                        return this.postMessage({\r\n                            id: data[\"id\"],\r\n                            finished: true\r\n                        });\r\n                    };\r\n                    return this.db.each(data[\"sql\"], data[\"params\"], callback, done, config);\r\n                case \"export\":\r\n                    buff = this.db[\"export\"]();\r\n                    result = {\r\n                        id: data[\"id\"],\r\n                        results: [\r\n                            {\r\n                                buffer: buff\r\n                            }\r\n                        ]\r\n                    };\r\n                    try {\r\n                        //@ts-ignore\r\n                        return this.postMessageToClient(result);\r\n                    } catch (error) {\r\n                        //@ts-ignore\r\n                        return this.postMessageToClient(result);\r\n                    }\r\n                case \"close\":\r\n                    if (this.db) {\r\n                        this.db.close();\r\n                    }\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"]\r\n                    });\r\n                default:\r\n                    throw new Error(\"Invalid action : \" + (data && data[\"action\"]));\r\n            }\r\n\r\n        } catch (err) {\r\n\r\n            //@ts-ignore\r\n            return this.postMessageToClient({\r\n                id: data[\"id\"],\r\n                error: err[\"message\"]\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { MainBase } from \"src/client/main/MainBase.js\";\r\nimport { WorkerSim } from \"./sqljsWorkerSim.js\";\r\n\r\nexport type DatabaseDumpType = \"binaryUncompressed\" | \"binaryCompressed\" | \"other\";\r\n\r\nexport type DatabaseDirectoryEntry = {\r\n    name: string,\r\n    description: string,\r\n    filename: string\r\n}\r\n\r\nexport type QueryResult = {\r\n    columns: string[],\r\n    values: any[][],\r\n    buffer?: Uint8Array\r\n}\r\n\r\nexport type QuerySuccessCallback = (results: QueryResult[]) => void;\r\nexport type QueryErrorCallback = (error: string) => void;\r\n\r\nexport type ColumnStructure = {\r\n    name: string;\r\n    table: TableStructure;\r\n\r\n    typeLengths?: number[]; // for varchar(5), ...\r\n    completeTypeSQL: string;\r\n\r\n    references?: ColumnStructure;\r\n    referencesRawData?: any[];\r\n    isPrimaryKey: boolean;\r\n    isAutoIncrement: boolean;\r\n\r\n    notNull: boolean;\r\n    defaultValue: string;\r\n\r\n    dumpValueFunction?: (any) => string\r\n}\r\n\r\nexport type TableStructure = {\r\n    name: string;\r\n    size: number;\r\n    columns: ColumnStructure[];\r\n    completeSQL: string;\r\n}\r\n\r\nexport type DatabaseStructure = {\r\n    tables: TableStructure[]\r\n}\r\n\r\n\r\nexport class DatabaseTool {\r\n\r\n    databaseDirectoryEntries: DatabaseDirectoryEntry[] = null;\r\n\r\n    worker: Worker;\r\n\r\n    queryId: number = 0;\r\n\r\n    querySuccessCallbacksMap: Map<number, QuerySuccessCallback> = new Map();\r\n    queryErrorCallbackMap: Map<number, QueryErrorCallback> = new Map();\r\n\r\n    databaseStructure: DatabaseStructure;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    initializeWorker(template: Uint8Array, queries: string[], callbackAfterInitializing?: (error: string) => void) {\r\n        \r\n        this.main.getBottomDiv().console.writeConsoleEntry('Bitte warten, die Datenbank wird initialisiert...', null);\r\n        \r\n            if (this.worker != null) {\r\n            this.worker.terminate();\r\n        }\r\n\r\n        let t = performance.now();\r\n\r\n        // console.log(\"Starting worker...\");\r\n\r\n        let url: string = \"js/tools/database/sqljsWorker.js\"\r\n        if(this.main.isEmbedded()){\r\n            //@ts-ignore\r\n            url = window.javaOnlineDir + url;\r\n        }\r\n\r\n        //@ts-ignore\r\n        if(window.jo_doc){\r\n            //@ts-ignore\r\n            this.worker = new WorkerSim();\r\n        } else {\r\n            this.worker = new Worker(url);\r\n        }\r\n        let that = this;\r\n\r\n        let error: string;\r\n\r\n        this.worker.onmessage = () => {\r\n            // console.log(\"Database opened (\" + (performance.now() - t)/1000 + \" s)\");\r\n            that.worker.onmessage = event => {\r\n\r\n                // console.log(event.data);\r\n\r\n                let id = event.data.id;\r\n                if (event.data.error == null) {\r\n                    let querySuccessCallback = that.querySuccessCallbacksMap.get(id);\r\n                    if (querySuccessCallback != null) {\r\n                        querySuccessCallback(event.data.results);\r\n                    }\r\n                } else {\r\n                    let queryErrorCallback = that.queryErrorCallbackMap.get(id);\r\n                    if (queryErrorCallback != null) {\r\n                        queryErrorCallback(event.data.error);\r\n                    }\r\n                }\r\n\r\n                // if(event.data.buffer){\r\n                //     console.log(event.data.buffer);\r\n                // }\r\n\r\n\r\n                this.queryErrorCallbackMap.delete(id);\r\n                this.querySuccessCallbacksMap.delete(id);\r\n\r\n            };\r\n\r\n            if(queries == null) queries = [];\r\n            queries = queries.slice();\r\n            let queryCount = queries.length;\r\n\r\n            let execQuery = () => {\r\n                if (queries.length > 0) {\r\n                    // this.main.getWaitOverlay().setProgress(`${Math.round((1-queries.length/queryCount)*100) + \" %\"}`)\r\n                    let query = queries.shift();\r\n                    that.executeQuery(query, (result) => {\r\n                        execQuery();\r\n                    }, (error) => {\r\n                        error = (\"Error while setting up database: \" + error + \", query: \" + query);\r\n                        console.log({\"error\": \"Error while setting up database: \" + error, \"query\": query});\r\n                        console.log()\r\n                        execQuery();\r\n                    })\r\n                } else {\r\n                    if (callbackAfterInitializing != null) callbackAfterInitializing(error);\r\n                   \r\n                }\r\n            }\r\n\r\n            execQuery();\r\n\r\n        };\r\n\r\n        this.worker.onerror = (e) => {\r\n            error = (\"Worker error: \" + e.error);\r\n            console.log(\"Worker error: \" + e.error);\r\n        }\r\n\r\n        this.worker.postMessage({\r\n            id: that.queryId++,\r\n            action: \"open\",\r\n            buffer: template, /*Optional. An ArrayBuffer representing an SQLite Database file*/\r\n        });\r\n\r\n    }\r\n\r\n    executeQuery(query: string, successCallback: QuerySuccessCallback, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, successCallback);\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"exec\",\r\n            sql: query,\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    executeWriteQueries(queries: string[], successCallback: () => void, errorCallback: QueryErrorCallback){\r\n\r\n        if(queries.length == 0){\r\n            successCallback()\r\n            return;\r\n        }\r\n\r\n        let query = queries.shift();\r\n\r\n        this.executeQuery(query, () => {\r\n            this.executeWriteQueries(queries, successCallback, errorCallback);\r\n        }, (message) => {\r\n            this.executeWriteQueries(queries, () => {}, (error) => {});\r\n            errorCallback(message); // report first error\r\n        });\r\n\r\n    }\r\n\r\n    static getDumpType(dump: Uint8Array): DatabaseDumpType {\r\n\r\n        let sqliteMagicBytes: number[] = [0x53, 0x51, 0x4c, 0x69, 0x74, 0x65];\r\n        let zlibMagicByte: number = 0x78;\r\n\r\n        let found: boolean = true;\r\n        for (let i = 0; i < sqliteMagicBytes.length; i++) {\r\n            if (sqliteMagicBytes[i] != dump[i]) {\r\n                found = false;\r\n                break;\r\n            }\r\n        }\r\n        if (found) return \"binaryUncompressed\";\r\n\r\n        if (dump[0] == zlibMagicByte) return \"binaryCompressed\";\r\n\r\n        return \"other\";\r\n\r\n    }\r\n\r\n    close(){\r\n        if(this.worker != null){\r\n            this.worker.terminate();\r\n            this.worker = null;\r\n        }\r\n    }\r\n\r\n}","import { DatabaseLongPollingListenerRequest, JMessageFromServer, JWebSocketMessageConnect, JWebSocketMessageDisconnect, JWebSocketMessageExecuteStatement, LongPollingListenerResponse, SendingStatementsMessageFromServer, WebSocketRequestConnect } from \"../../communication/Data.js\";\r\nimport { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ConnectionHelper } from \"../../runtimelibrary/database/Connection.js\";\r\n\r\nexport class DatabaseLongPollingListener {\r\n\r\n    identifier: number = Math.floor(Math.random() * 999999999);\r\n    isClosed: boolean = false;\r\n\r\n    constructor(private networkManager: NetworkManager,\r\n        private token: string,\r\n        private onServerSentStatementsCallback: (firstNewStatementIndex: number, newStatements: string[], rollbackToVersion: number) => void) {\r\n    }\r\n\r\n    longPoll() {\r\n        let that = this;\r\n\r\n        let request: DatabaseLongPollingListenerRequest = {\r\n            token: this.token,\r\n            listenerIdentifier: this.identifier\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: that.networkManager.sqlIdeURL + \"jRegisterLongPollingListener\",\r\n            success: function (resp: string) {\r\n                if (resp != null && !that.isClosed && resp != \"\") {\r\n                    let response: LongPollingListenerResponse = JSON.parse(resp);\r\n                    if (response.success) {\r\n                        that.onServerSentStatementsCallback(response.firstNewStatementIndex,\r\n                            response.newStatements, response.rollbackToVersion);\r\n                    }\r\n                }\r\n\r\n                if (!that.isClosed) {\r\n                    setTimeout(() => {\r\n                        that.longPoll();\r\n                    }, 1000);\r\n                }\r\n            },\r\n            error: function (jqXHR, message) {\r\n                if (!that.isClosed) {\r\n                    setTimeout(() => {\r\n                        that.longPoll();\r\n                    }, 3000);\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    close(){\r\n        this.isClosed = true;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ConnectionHelper } from \"./Connection.js\";\r\nimport { ResultsetHelper } from \"./ResultSet.js\";\r\n\r\n\r\nexport class DatabasePreparedStatementClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PreparedStatement\", module, \"Ein PreparedStatement-Objekt repräsentiert eine parametrisierte Anweisung an die Datenbank.\");\r\n\r\n\r\n        let resultSetType = <Klass>module.typeStore.getType(\"ResultSet\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"executeQuery\", new Parameterlist([\r\n        ]), resultSetType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let psh: PreparedStatementHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                if (!psh.query.toLocaleLowerCase().startsWith(\"select\")) {\r\n                    module.main.getInterpreter().resumeAfterInput(null);\r\n                    interpreter.throwException(\"Mit der Methode executeQuery können nur select-Anweisungen ausgeführt werden. Benutze für datenverändernde Anweisungen die Methode executeUpdate.\");\r\n                    return null;\r\n                }\r\n\r\n                interpreter.pauseForInput();\r\n\r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n\r\n                let error = psh.checkQuery();\r\n\r\n                if (error != null) {\r\n                    interpreter.throwException(error);\r\n                    return null;\r\n                }\r\n\r\n\r\n                psh.connectionHelper.executeQuery(psh.getQueryWithParameterValuesFilledIn(), (error, result) => {\r\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if (error != null) {\r\n                        module.main.getInterpreter().resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                        return;\r\n                    }\r\n                    let rsh = new ResultsetHelper(result);\r\n                    let rs = new RuntimeObject(resultSetType);\r\n                    rs.intrinsicData[\"Helper\"] = rsh;\r\n                    interpreter.resumeAfterInput({ value: rs, type: resultSetType }, true);\r\n                })\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus, das eine select-Anweisung enthält.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"executeUpdate\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let psh: PreparedStatementHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                if (psh.query.toLocaleLowerCase().startsWith(\"select\")) {\r\n                    module.main.getInterpreter().resumeAfterInput(null);\r\n                    interpreter.throwException(\"Mit der Methode execute können nur datenverändernde Anweisungen ausgeführt werden.\" + \r\n                    \"Benutze für select-Anweisungen die Methode executeQuery.\");\r\n                    return null;\r\n                }\r\n\r\n                interpreter.pauseForInput();\r\n\r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n\r\n                let error = psh.checkQuery();\r\n\r\n                if (error != null) {\r\n                    interpreter.resumeAfterInput(null);\r\n                    interpreter.throwException(error);\r\n                    return null;\r\n                }\r\n                \r\n                psh.connectionHelper.executeWriteStatement(psh.getQueryWithParameterValuesFilledIn(), (error) => {\r\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if (error != null) {\r\n                        module.main.getInterpreter().resumeAfterInput(null);\r\n                        interpreter.resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                        return;\r\n                    }\r\n                    interpreter.resumeAfterInput({ value: 0, type: intPrimitiveType }, true);\r\n                })\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus, das eine datenverändernde Anweisung enthält.',\r\n            false));\r\n\r\n        let types = [booleanPrimitiveType, intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n\r\n        for (let type of types) {\r\n\r\n            let typeIdFirstUppercase = type.identifier.charAt(0).toUpperCase() + type.identifier.substring(1);\r\n\r\n\r\n            this.addMethod(new Method(\"set\"+typeIdFirstUppercase, new Parameterlist([\r\n                { identifier: \"parameterIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"value\", type: type, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), voidPrimitiveType,\r\n                (parameters) => {\r\n\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let index: number = parameters[1].value;\r\n                    let value: any = parameters[2].value;\r\n                    let psh: PreparedStatementHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    let error = psh.setValue(value, index);\r\n                    if (error != null) {\r\n                        module.main.getInterpreter().resumeAfterInput(null);\r\n                        module.main.getInterpreter().throwException(error);\r\n                    }\r\n\r\n                    return;\r\n\r\n                }, false, false, 'Setzt im Parameter mit dem angegebenen Index den ' + type.identifier + '-Wert ein.'));\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PreparedStatementHelper {\r\n\r\n    parameterValues: string[];\r\n    parameterPositions: number[];\r\n    query: string;\r\n\r\n    constructor(public connectionHelper: ConnectionHelper, query: string) {\r\n        this.query = query.trim();\r\n        this.prepareStatement(this.query);\r\n    }\r\n\r\n    prepareStatement(sql: string) {\r\n\r\n        let insideQuotation: boolean = false;\r\n        this.parameterPositions = [];\r\n\r\n        for (let i = 0; i < sql.length; i++) {\r\n\r\n            let c = sql.charAt(i);\r\n            switch (c) {\r\n                case \"'\": insideQuotation = !insideQuotation;\r\n                    break;\r\n                case \"?\": if (!insideQuotation) {\r\n                    this.parameterPositions.push(i);\r\n                }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        this.parameterValues = new Array(this.parameterPositions.length);\r\n\r\n    }\r\n\r\n    setValue(value: any, position: number): string {\r\n        if (position < 1 || position > this.parameterPositions.length) {\r\n            if (this.parameterPositions.length == 0) {\r\n                return \"Es gibt keine Parameter (mit ? besetzte Stellen) in dieser Anweisung.\";\r\n            }\r\n            return \"Es gibt nur die Parameterpositionen 1 bis \" + this.parameterPositions.length + \" in der SQL-Anweisung, keine Position \" + position + \".\";\r\n        }\r\n\r\n        if(value == null){\r\n            this.parameterValues[position - 1] = \"null\";\r\n        } else\r\n        if (typeof value == \"string\") {\r\n            value = value.replace(/'/g, \"''\");\r\n            this.parameterValues[position - 1] = \"'\" + value + \"'\";\r\n        } else {\r\n            this.parameterValues[position - 1] = \"\" + value;\r\n        }\r\n        return;\r\n    }\r\n\r\n    checkQuery(): string {\r\n        return null;\r\n    }\r\n\r\n    getQueryWithParameterValuesFilledIn(): string {\r\n        let query = this.query;\r\n        let queryParts: string[] = [];\r\n        let pos = 0;\r\n\r\n        for (let i = 0; i < this.parameterPositions.length; i++) {\r\n            queryParts.push(query.substring(pos, this.parameterPositions[i]));\r\n            pos = this.parameterPositions[i] + 1;\r\n        }\r\n\r\n        if (pos < query.length) {\r\n            queryParts.push(query.substring(pos));\r\n        }\r\n\r\n        let queryWithParameterValues = \"\";\r\n        for (let i = 0; i < this.parameterPositions.length; i++) {\r\n            queryWithParameterValues += queryParts[i] + this.parameterValues[i];\r\n        }\r\n\r\n        if (queryParts.length > this.parameterPositions.length) {\r\n            queryWithParameterValues += queryParts[queryParts.length - 1];\r\n        }\r\n\r\n        return queryWithParameterValues;\r\n    }\r\n\r\n}","import { DatabaseData, SendingStatementsMessageFromServer } from \"../../communication/Data.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { DatabaseTool, QueryResult } from \"../../tools/database/DatabaseTool.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { DatabaseLongPollingListener } from \"../../tools/database/DatabaseLongPollingListener.js\";\r\nimport { stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { PreparedStatementHelper } from \"./DatabasePreparedStatement.js\";\r\n\r\nexport class ConnectionClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Connection\", module, \"Ein Connection-Objekt repräsentiert die Verbindung zu einer Datenbank auf www.sql-ide.de\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let preparedStatementType = <Klass>module.typeStore.getType(\"PreparedStatement\");\r\n        let statementType = <Klass>module.typeStore.getType(\"Statement\");\r\n\r\n        this.addMethod(new Method(\"createStatement\", new Parameterlist([\r\n        ]), statementType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ch: ConnectionHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let stmt: RuntimeObject = new RuntimeObject(statementType);\r\n                stmt.intrinsicData[\"ConnectionHelper\"] = ch;\r\n\r\n                return stmt;\r\n\r\n            }, false, false, 'Erstellt ein Statement-Objekt, mit dem Statements zur Datenbank geschickt werden können.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"prepareStatement\", new Parameterlist([\r\n            { identifier: \"query\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), preparedStatementType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let query: string = parameters[1].value;\r\n\r\n                let ch: ConnectionHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let stmt: RuntimeObject = new RuntimeObject(preparedStatementType);\r\n                stmt.intrinsicData[\"Helper\"] = new PreparedStatementHelper(ch, query);\r\n\r\n                return stmt;\r\n\r\n            }, false, false, 'Erstellt ein PreparedStatement-Objekt, mit dem Anweisungen zur Datenbank geschickt werden können.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ch: ConnectionHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                ch.close();\r\n\r\n            }, false, false, 'Schließt die Verbindung zur Datenbank.',\r\n            false));\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class ConnectionHelper {\r\n\r\n    database: DatabaseTool;\r\n    databaseData: DatabaseData;\r\n    token: string;\r\n    longPollingListener: DatabaseLongPollingListener;\r\n\r\n    constructor(private main: Main) {\r\n\r\n        main.getInterpreter().registerDatabaseConnection(this);\r\n\r\n    }\r\n\r\n    connect(code: string, callback: (error: string) => void) {\r\n        let that = this;\r\n        this.main.networkManager.fetchDatabaseAndToken(code, (dbData, token, error) => {\r\n            if (error == null) {\r\n                that.token = token;\r\n                that.databaseData = dbData;\r\n                that.database = new DatabaseTool(that.main);\r\n                that.database.initializeWorker(dbData.templateDump, dbData.statements, (error) => {\r\n\r\n                    that.longPollingListener = new DatabaseLongPollingListener(that.main.networkManager,\r\n                        that.token, (firstNewStatementIndex, newStatements, rollbackToVersion) => {\r\n                            that.onServerSentStatements(firstNewStatementIndex, newStatements, rollbackToVersion);\r\n                        })\r\n\r\n                    that.longPollingListener.longPoll();\r\n                    callback(null);\r\n                });\r\n            } else {\r\n                callback(error);\r\n            }\r\n        })\r\n    }\r\n\r\n    close() {\r\n        if (this.longPollingListener != null) {\r\n            this.longPollingListener.close();\r\n            this.longPollingListener = null;\r\n        }\r\n\r\n        if(this.database != null){\r\n            this.database.close();\r\n            this.database = null;\r\n        }\r\n\r\n    }\r\n\r\n    skipNextServerSentStatement: boolean = false;\r\n    onServerSentStatements(firstNewStatementIndex: number, newStatements: string[], rollbackToVersion: number) {\r\n\r\n        if(this.skipNextServerSentStatement){\r\n            this.skipNextServerSentStatement = false;\r\n            return;\r\n        }\r\n\r\n        if (rollbackToVersion != null) {\r\n            // Rollback\r\n            this.databaseData.statements.splice(rollbackToVersion);\r\n            this.database.initializeWorker(this.databaseData.templateDump, this.databaseData.statements);\r\n            return;\r\n        } else {\r\n            this.executeStatementsFromServer(firstNewStatementIndex, newStatements);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    executeStatementsFromServer(firstStatementIndex: number, statements: string[],\r\n        callback?: (error: string) => void) {\r\n\r\n        // connection already closed?\r\n        if (this.database == null) {\r\n            if(callback) callback(\"Keine Datenbankverbindung.\");\r\n            return;\r\n        }\r\n\r\n        let currentDBVersion = this.databaseData.statements.length;\r\n        let delta = currentDBVersion - firstStatementIndex + 1; // these statements are already there\r\n        if (delta >= statements.length) {\r\n            if(callback) callback(null);\r\n            return;\r\n        }\r\n        statements = statements.slice(delta);\r\n        this.databaseData.statements = this.databaseData.statements.concat(statements);\r\n\r\n        this.database.executeWriteQueries(statements, () => {\r\n            if (callback != null) callback(null);\r\n        }, (errorMessage) => {\r\n            if (callback != null) callback(errorMessage);\r\n        })\r\n    }\r\n\r\n    executeWriteStatement(query: string, callback: (error: string, lastRowId: number) => void, retrieveLastRowId: boolean = false) {\r\n\r\n        // connection already closed?\r\n        if (this.database == null) {\r\n            callback(\"Es besteht keine Verbindung zur Datenbank.\", 0);\r\n        }\r\n\r\n        let that = this;\r\n        let oldStatementIndex = that.databaseData.statements.length;\r\n        this.database.executeQuery(\"explain \" + query, () => {\r\n\r\n            that.skipNextServerSentStatement = true;\r\n            that.main.networkManager.addDatabaseStatement(that.token, oldStatementIndex,\r\n                [query], (statementsBefore, new_version, errorMessage) => {\r\n                    if (errorMessage != null) {\r\n                        callback(errorMessage, 0);\r\n                        return;\r\n                    }\r\n\r\n                    that.executeStatementsFromServer(oldStatementIndex + 1, statementsBefore, (error: string) => {\r\n\r\n                        that.database.executeWriteQueries([query], () => {\r\n                            that.databaseData.statements.push(query);\r\n                            if (!retrieveLastRowId) {\r\n                                callback(null, 0);\r\n                                return;\r\n                            }\r\n                            that.executeQuery(\"select last_insert_rowid()\", (error, data) => {\r\n                                callback(null, data.values[0][0]);\r\n                            })\r\n                        }, (errorMessage) => {\r\n                            that.databaseData.statements.push(query);\r\n                            if (callback != null) callback(errorMessage, 0);\r\n                            // try rollback so that server doesn't store this statement\r\n                            that.main.networkManager.rollbackDatabaseStatement(that.token, that.databaseData.statements.length, () => {})\r\n                        })\r\n                \r\n\r\n                    });\r\n\r\n                })\r\n\r\n        }, (error) => {\r\n            callback(error, 0);\r\n        })\r\n\r\n    }\r\n\r\n    executeQuery(query: string, callback: (error: string, data: QueryResult) => void) {\r\n\r\n        if (this.database == null || this.longPollingListener == null) {\r\n            callback(\"Es besteht keine Verbindung zur Datenbank.\", null);\r\n            return;\r\n        }\r\n\r\n        this.database.executeQuery(query, (results: QueryResult[]) => {\r\n            callback(null,results.length == 0 ? {columns: [], values: []} : results[0]);\r\n        }, (error: string) => {\r\n            callback(error, null);\r\n        })\r\n\r\n    }\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ConnectionHelper } from \"./Connection.js\";\r\n\r\nexport class DatabaseManagerClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DatabaseManager\", module, \"Über die statische Methode DatabaseManager.getConnection(String code) kann die Verbindung zu einer Datenbank auf www.sql-ide.de aufgebaut werden.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let connectionType = <Klass>module.typeStore.getType(\"Connection\");\r\n \r\n        this.addMethod(new Method(\"getConnection\", new Parameterlist([\r\n            { identifier: \"code\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), connectionType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let code: string = parameters[1].value;\r\n\r\n                let main = module.main;\r\n                let interpreter = module.main.getInterpreter();\r\n                if(main.isEmbedded()){\r\n                    interpreter.throwException(\"Verbindung zu einer Datenbank kann nur von www.online-ide.de aus aufgebaut werden.\");\r\n                    return null;\r\n                }\r\n\r\n                let ch: ConnectionHelper = new ConnectionHelper(<Main>module.main);\r\n                interpreter.pauseForInput();\r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n                ch.connect(code, (error: string) => {\r\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if(error == null){\r\n                        let connectionRuntimeObject = new RuntimeObject(connectionType);\r\n                        connectionRuntimeObject.intrinsicData[\"Helper\"] = ch;\r\n                        interpreter.resumeAfterInput({value: connectionRuntimeObject, type: connectionType}, true);\r\n                    } else {\r\n                        interpreter.resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                    }\r\n                })\r\n\r\n                return;\r\n\r\n            }, false, true, 'Baut eine Verbindung mit einer Datenbank auf www.sql-ide.de auf. Gibt ein Connection-Objekt zurück, das diese Verbindung repräsentiert.',\r\n            false));\r\n\r\n    }\r\n\r\n}","import { FileData, WorkspaceSettings } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { ArrayListClass } from \"../../runtimelibrary/collections/ArrayList.js\";\r\nimport { CollectionClass } from \"../../runtimelibrary/collections/Collection.js\";\r\nimport { IterableClass } from \"../../runtimelibrary/collections/Iterable.js\";\r\nimport { IteratorClass } from \"../../runtimelibrary/collections/Iterator.js\";\r\nimport { ListClass } from \"../../runtimelibrary/collections/List.js\";\r\nimport { ListIteratorImplClass } from \"../../runtimelibrary/collections/ListIteratorImpl.js\";\r\nimport { StackClass } from \"../../runtimelibrary/collections/Stack.js\";\r\nimport { VectorClass } from \"../../runtimelibrary/collections/Vector.js\";\r\nimport { SetClass } from \"../../runtimelibrary/collections/Set.js\";\r\nimport { SetIteratorImplClass } from \"../../runtimelibrary/collections/SetIteratorImpl.js\";\r\nimport { HashSetClass } from \"../../runtimelibrary/collections/HashSet.js\";\r\nimport { LinkedHashSetClass } from \"../../runtimelibrary/collections/LinkedHashSet.js\";\r\nimport { QueueClass } from \"../../runtimelibrary/collections/Queue.js\";\r\nimport { DequeClass } from \"../../runtimelibrary/collections/Deque.js\";\r\nimport { LinkedListClass } from \"../../runtimelibrary/collections/LinkedList.js\";\r\nimport { ConsoleClass } from \"../../runtimelibrary/Console.js\";\r\nimport { Actor as ActorClass } from \"../../runtimelibrary/graphics/Actor.js\";\r\nimport { AlignmentClass } from \"../../runtimelibrary/graphics/Alignment.js\";\r\nimport { BitmapClass } from \"../../runtimelibrary/graphics/Bitmap.js\";\r\nimport { CircleClass as CircleClass } from \"../../runtimelibrary/graphics/Circle.js\";\r\nimport { SectorClass } from \"../../runtimelibrary/graphics/Sector.js\";\r\nimport { ArcClass } from \"../../runtimelibrary/graphics/Arc.js\";\r\nimport { ColorClass } from \"../../runtimelibrary/graphics/Color.js\";\r\nimport { EllipseClass } from \"../../runtimelibrary/graphics/Ellipse.js\";\r\nimport { FilledShapeClass } from \"../../runtimelibrary/graphics/FilledShape.js\";\r\nimport { CollisionPairClass, GroupClass } from \"../../runtimelibrary/graphics/Group.js\";\r\nimport { KeyClass } from \"../../runtimelibrary/graphics/Key.js\";\r\nimport { PolygonClass } from \"../../runtimelibrary/graphics/Polygon.js\";\r\nimport { RectangleClass } from \"../../runtimelibrary/graphics/Rectangle.js\";\r\nimport { RepeatTypeClass } from \"../../runtimelibrary/graphics/RepeatType.js\";\r\nimport { RoundedRectangleClass } from \"../../runtimelibrary/graphics/RoundedRectangle.js\";\r\nimport { ScaleModeClass } from \"../../runtimelibrary/graphics/ScaleMode.js\";\r\nimport { ShapeClass } from \"../../runtimelibrary/graphics/Shape.js\";\r\nimport { SoundKlass as SoundClass } from \"../../runtimelibrary/graphics/Sound.js\";\r\nimport { SpriteClass, TileClass } from \"../../runtimelibrary/graphics/Sprite.js\";\r\nimport { SpriteLibraryClass } from \"../../runtimelibrary/graphics/SpriteLibraryEnum.js\";\r\nimport { TextClass } from \"../../runtimelibrary/graphics/Text.js\";\r\nimport { WorldClass } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\nimport { GamepadClass } from \"../../runtimelibrary/Gamepad.js\";\r\nimport { MathClass } from \"../../runtimelibrary/Math.js\";\r\nimport { MathToolsClass } from \"../../runtimelibrary/MathToolsClass.js\";\r\nimport { PrintStreamClass, SystemClass } from \"../../runtimelibrary/System.js\";\r\nimport { KeyListener, SystemToolsClass } from \"../../runtimelibrary/SystemTools.js\";\r\nimport { Runnable, TimerClass } from \"../../runtimelibrary/Timer.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { Interface, Klass, Visibility } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, BooleanType, CharacterType, charPrimitiveType, doublePrimitiveType, DoubleType, floatPrimitiveType, FloatType, IntegerType, intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType, varType, longPrimitiveType, LongType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, PrimitiveType, Type, Variable } from \"../types/Types.js\";\r\nimport { ASTNode, MethodDeclarationNode, TypeNode } from \"./AST.js\";\r\nimport { Breakpoint, Program, Statement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { MapClass } from \"../../runtimelibrary/collections/Map.js\";\r\nimport { HashMapClass } from \"../../runtimelibrary/collections/HashMap.js\";\r\nimport { TriangleClass } from \"../../runtimelibrary/graphics/Triangle.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { LocalDateTimeClass, DayOfWeekEnum, MonthEnum } from \"../../runtimelibrary/graphics/LocalDateTime.js\";\r\nimport { LineClass } from \"../../runtimelibrary/graphics/Line.js\";\r\nimport { Vector2Class } from \"../../runtimelibrary/Vector2.js\";\r\nimport { MouseAdapterClass, MouseListenerInterface } from \"../../runtimelibrary/graphics/MouseListener.js\";\r\nimport { WebSocketClass } from \"../../runtimelibrary/network/WebSocket.js\";\r\nimport { WebSocketClientClass } from \"../../runtimelibrary/network/WebSocketClient.js\";\r\nimport { ProcessingClass } from \"../../runtimelibrary/graphics/Processing.js\";\r\nimport { TurtleClass } from \"../../runtimelibrary/graphics/Turtle.js\";\r\nimport { GNGZeichenfensterClass } from \"../../runtimelibrary/gng/GNGZeichenfenster.js\";\r\nimport { GNGRechteckClass } from \"../../runtimelibrary/gng/GNGRechteck.js\";\r\nimport { GNGBaseFigurClass } from \"../../runtimelibrary/gng/GNGBaseFigur.js\";\r\nimport { GNGAktionsempfaengerInterface } from \"../../runtimelibrary/gng/GNGAktionsempfaenger.js\";\r\nimport { GNGDreieckClass } from \"../../runtimelibrary/gng/GNGDreieck.js\";\r\nimport { GNGKreisClass } from \"../../runtimelibrary/gng/GNGKreis.js\";\r\nimport { GNGTurtleClass } from \"../../runtimelibrary/gng/GNGTurtle.js\";\r\nimport { GNGTextClass } from \"../../runtimelibrary/gng/GNGText.js\";\r\nimport { GNGEreignisbehandlung } from \"../../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GNGFigurClass } from \"../../runtimelibrary/gng/GNGFigur.js\";\r\nimport { RandomClass } from \"../../runtimelibrary/Random.js\";\r\nimport { DirectionClass } from \"../../runtimelibrary/graphics/Direction.js\";\r\nimport { Patcher } from \"./Patcher.js\";\r\nimport { KeyEvent as KeyEventClass } from \"../../runtimelibrary/graphics/KeyEvent.js\";\r\nimport { Formatter } from \"../../main/gui/Formatter.js\";\r\nimport { RobotClass, RobotWorldClass } from \"../../runtimelibrary/graphics/3d/Robot.js\";\r\nimport { ResultSetClass } from \"../../runtimelibrary/database/ResultSet.js\";\r\nimport { DatabaseStatementClass } from \"../../runtimelibrary/database/DatabaseStatement.js\";\r\nimport { ConnectionClass } from \"../../runtimelibrary/database/Connection.js\";\r\nimport { DatabaseManagerClass } from \"../../runtimelibrary/database/DatabaseManager.js\";\r\nimport { DatabasePreparedStatementClass } from \"../../runtimelibrary/database/DatabasePreparedStatement.js\";\r\n\r\nexport type ExportedWorkspace = {\r\n    name: string;\r\n    modules: ExportedModule[];\r\n    settings: WorkspaceSettings;\r\n}\r\n\r\nexport type ExportedModule = {\r\n    name: string;\r\n    text: string;\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: Type | Method | Attribute | Variable;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: Method[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    isSystemModule: boolean = false;\r\n\r\n    breakpoints: Breakpoint[] = [];\r\n    breakpointDecorators: string[] = [];\r\n    decoratorIdToBreakpointMap: { [id: string]: Breakpoint } = {};\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    colorInformation: monaco.languages.IColorInformation[] = [];\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    mainProgramAst: ASTNode[];\r\n    classDefinitionsAST: ASTNode[];\r\n    typeNodes: TypeNode[];\r\n\r\n    // 3rd pass: TypeResolver fill in resolvedType in typeNodes and populate typeStore\r\n    typeStore: TypeStore;\r\n\r\n    // 4th pass: generate code and symbol tables\r\n\r\n    /*\r\n    The mainProgramAST holds statements to:\r\n    1. call static constructor of each used class\r\n    2. execute main Program\r\n    */\r\n\r\n    mainProgram?: Program;\r\n    mainProgramEnd: TextPosition;\r\n    mainSymbolTable: SymbolTable;\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    dependsOnModules: Map<Module, boolean>;\r\n    isStartable: boolean;\r\n    dependsOnModulesWithErrors: boolean;\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"myJava\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3, bracketColorizationOptions: {enabled: true} });\r\n        let formatter = new Formatter();\r\n\r\n        if(main.isEmbedded() && file.text != null && file.text.length > 3){\r\n            let edits = <monaco.languages.TextEdit[]>formatter.format(this.model);\r\n            this.model.applyEdits(edits);\r\n        }\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.file.identical_to_repository_version = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if(main1.workspacesOwnerId != main1.user.id){\r\n                    if(that.file.text_before_revision == null || that.file.student_edited_after_revision){\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    toExportedModule(): ExportedModule {\r\n        return {\r\n            name: this.file.name,\r\n            text: this.getProgramTextFromMonacoModel(),\r\n            identical_to_repository_version: this.file.identical_to_repository_version,\r\n            is_copy_of_id: this.file.is_copy_of_id,\r\n            repository_file_version: this.file.repository_file_version\r\n        }\r\n    }\r\n\r\n    getMethodDeclarationAtPosition(position: { lineNumber: number; column: number; }): MethodDeclarationNode {\r\n\r\n        if(this.classDefinitionsAST == null) return null;\r\n        \r\n        for(let cd of this.classDefinitionsAST){\r\n            if(cd.type == TokenType.keywordClass || cd.type == TokenType.keywordEnum){\r\n                for(let methodAST of cd.methods){\r\n                    if(methodAST.position != null && methodAST.scopeTo != null){\r\n                        if(methodAST.position.line <= position.lineNumber && methodAST.scopeTo.line >= position.lineNumber){\r\n                            return methodAST;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    \r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let patched = Patcher.patch(f.text);\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: patched.patchedText,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: !patched.modified,\r\n            version: f.version,\r\n            id: f.id,\r\n            is_copy_of_id: f.is_copy_of_id,\r\n            repository_file_version: f.repository_file_version,\r\n            identical_to_repository_version: f.identical_to_repository_version\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            is_copy_of_id: file.is_copy_of_id,\r\n            repository_file_version: file.repository_file_version,\r\n            identical_to_repository_version: file.identical_to_repository_version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 0\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n    pushMethodCallPosition(identifierPosition: TextPosition, commaPositions: TextPosition[],\r\n        possibleMethods: Method[] | string, rightBracketPosition: TextPosition) {\r\n\r\n        let lines: number[] = [];\r\n        lines.push(identifierPosition.line);\r\n        for (let cp of commaPositions) {\r\n            if (lines.indexOf[cp.line] < 0) {\r\n                lines.push(cp.line);\r\n            }\r\n        }\r\n\r\n        let mcp: MethodCallPosition = {\r\n            identifierPosition: identifierPosition,\r\n            commaPositions: commaPositions,\r\n            possibleMethods: possibleMethods,\r\n            rightBracketPosition: rightBracketPosition\r\n        };\r\n\r\n        for (let line of lines) {\r\n            let mcpList = this.methodCallPositions[line];\r\n            if (mcpList == null) {\r\n                this.methodCallPositions[line] = [];\r\n                mcpList = this.methodCallPositions[line];\r\n            }\r\n            mcpList.push(mcp);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    toggleBreakpoint(lineNumber: number, rerender: boolean) {\r\n        this.getBreakpointPositionsFromEditor();\r\n        if (this.getBreakpoint(lineNumber, true) == null) {\r\n            this.setBreakpoint(lineNumber, 1);\r\n        }\r\n        if (rerender) {\r\n            this.renderBreakpointDecorators();\r\n        }\r\n    }\r\n\r\n    getBreakpoint(line: number, remove: boolean = false): Breakpoint {\r\n\r\n        for (let i = 0; i < this.breakpoints.length; i++) {\r\n            let b = this.breakpoints[i];\r\n            if (b.line == line) {\r\n                this.breakpoints.splice(i, 1);\r\n                if (b.statement != null) {\r\n                    b.statement.breakpoint = undefined;\r\n                }\r\n                return b;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    setBreakpoint(line: number, column: number): Breakpoint {\r\n\r\n        let breakpoint: Breakpoint = {\r\n            line: line,\r\n            column: column,\r\n            statement: null\r\n        }\r\n\r\n        this.attachToStatement(breakpoint);\r\n        this.breakpoints.push(breakpoint);\r\n\r\n        return breakpoint;\r\n\r\n    }\r\n\r\n    attachToStatement(breakpoint: Breakpoint, programList?: Program[]) {\r\n\r\n        if (breakpoint.statement != null) {\r\n            breakpoint.statement.breakpoint = undefined;\r\n        }\r\n\r\n        if (programList == null) programList = this.getPrograms();\r\n\r\n        let nearestStatement: Statement = null;\r\n        let nearestDistance: number = 100000;\r\n\r\n        for (let program of programList) {\r\n            for (let statement of program.statements) {\r\n\r\n                let line = statement?.position?.line;\r\n                if (line != null && line >= breakpoint.line) {\r\n                    if (line - breakpoint.line < nearestDistance) {\r\n                        nearestStatement = statement;\r\n                        nearestDistance = line - breakpoint.line;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        breakpoint.statement = nearestStatement;\r\n        if (nearestStatement != null) {\r\n            nearestStatement.breakpoint = breakpoint;\r\n            // let pp = new ProgramPrinter();\r\n            // console.log(\"Attached Breakpoint line \" + breakpoint.line + \", column \" + \r\n            //     breakpoint.column + \" to statement \" + pp.print([nearestStatement]));\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    getPrograms(): Program[] {\r\n        let programList: Program[] = [];\r\n\r\n        if (this.mainProgram != null) {\r\n            programList.push(this.mainProgram);\r\n        }\r\n\r\n        if (this.typeStore != null) {\r\n\r\n            for (let type of this.typeStore.typeList) {\r\n                if (type instanceof Klass) {\r\n                    if (type.attributeInitializationProgram != null) {\r\n                        programList.push(type.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                    if (type.staticClass.attributeInitializationProgram != null) {\r\n                        programList.push(type.staticClass.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.staticClass.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return programList;\r\n\r\n    }\r\n\r\n    renderBreakpointDecorators() {\r\n\r\n        this.getBreakpointPositionsFromEditor();\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        for (let breakpoint of this.breakpoints) {\r\n            decorations.push({\r\n                range: { startLineNumber: breakpoint.line, endLineNumber: breakpoint.line, startColumn: 1, endColumn: 1 },\r\n                options: {\r\n                    isWholeLine: true, className: \"jo_decorate_breakpoint\",\r\n                    overviewRuler: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.OverviewRulerLane.Left\r\n                    },\r\n                    minimap: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.MinimapPosition.Inline\r\n                    },\r\n                    marginClassName: \"jo_margin_breakpoint\",\r\n                    stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\r\n                },\r\n                //@ts-ignore\r\n                breakpoint: breakpoint\r\n            });\r\n        }\r\n\r\n        this.breakpointDecorators = this.main.getMonacoEditor().deltaDecorations(this.breakpointDecorators, decorations);\r\n\r\n        this.decoratorIdToBreakpointMap = {};\r\n        for (let i = 0; i < this.breakpointDecorators.length; i++) {\r\n            this.decoratorIdToBreakpointMap[this.breakpointDecorators[i]] = this.breakpoints[i];\r\n        }\r\n\r\n    }\r\n\r\n    getBreakpointPositionsFromEditor() {\r\n        for (let decoration of this.main.getMonacoEditor().getModel().getAllDecorations()) {\r\n            if (decoration.options.marginClassName == \"margin_breakpoint\") {\r\n                let breakpoint = this.decoratorIdToBreakpointMap[decoration.id];\r\n                if (breakpoint != null) {\r\n                    breakpoint.line = decoration.range.startLineNumber;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    hasMainProgram() {\r\n\r\n        if (this.mainProgram == null) return false;\r\n        if (this.mainProgram.statements == null) return false;\r\n        return this.mainProgram.statements.length > 2 || this.mainProgram.statements.length == 2 && this.mainProgram.statements[0].type == TokenType.callMainMethod;\r\n\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n\r\n    getTypeAtPosition(line: number, column: number): { type: Type, isStatic: boolean } {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let foundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n                foundPosition = p;\r\n                let element = foundPosition.element;\r\n                if (element instanceof Method) {\r\n                    return { type: element, isStatic: false };\r\n                }\r\n                // Attribute, Variable\r\n                let type: Type = (element instanceof Type) ? element : element.type;\r\n                //@ts-ignore\r\n                if (foundPosition.position.length > 0 && element.type != null) {\r\n                    //@ts-ignore\r\n                    return { type: <Type>type, isStatic: false };\r\n                }\r\n\r\n                return { type: type, isStatic: foundPosition.position.length > 0 };\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): Klass | Interface | Method | Attribute | Variable {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    } else {\r\n                        if(p.element instanceof Method && bestFoundPosition.element instanceof Klass){\r\n                            bestFoundPosition = p;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainProgram = this.mainProgram;\r\n        this.mainProgram = null;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n        m.typeStore = this.typeStore;\r\n        // this.typeStore = null;\r\n        m.isStartable = this.isStartable;\r\n        m.dependsOnModulesWithErrors = this.dependsOnModulesWithErrors;\r\n\r\n        m.breakpoints = this.breakpoints;\r\n        this.breakpoints = [];\r\n        let programs = m.getPrograms();\r\n\r\n        programs.forEach((p) => p.module = m);\r\n\r\n        for (let b of m.breakpoints) {\r\n            this.breakpoints.push({\r\n                line: b.line,\r\n                column: b.column,\r\n                statement: null\r\n            });\r\n\r\n            m.attachToStatement(b, programs);\r\n\r\n        }\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n        this.typeNodes = [];\r\n        this.typeStore = new TypeStore();\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n        this.mainProgram = null;\r\n\r\n        this.methodCallPositions = {};\r\n        this.dependsOnModules = new Map();\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if(el.find(error => error.level == \"error\")){\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if(this.errorLevelCompare(e1.level, e2.level) == 1){\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if(level1 == \"error\") return 1;\r\n        if(level2 == \"error\") return 2;\r\n        if(level1 == \"warning\") return 1;\r\n        if(level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n\r\n    renderStartButton() {\r\n        let $buttonDiv = this.file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonStart');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_startButton').remove();\r\n\r\n        if (this.isStartable) {\r\n            let $startButtonDiv = jQuery('<div class=\"jo_startButton img_start-dark jo_button jo_active\" title=\"Hauptprogramm in der Datei starten\"></div>');\r\n            $buttonDiv.append($startButtonDiv);\r\n            let that = this;\r\n            $startButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n            $startButtonDiv.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.main.setModuleActive(that);\r\n\r\n                that.main.getInterpreter().start();\r\n            });\r\n\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BaseModule extends Module {\r\n    constructor(main: MainBase) {\r\n\r\n        super({ name: \"Base Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n\r\n        this.typeStore.addType(voidPrimitiveType);\r\n        this.typeStore.addType(intPrimitiveType); \r\n        this.typeStore.addType(longPrimitiveType); \r\n        this.typeStore.addType(floatPrimitiveType);\r\n        this.typeStore.addType(doublePrimitiveType);\r\n        this.typeStore.addType(charPrimitiveType);\r\n        this.typeStore.addType(booleanPrimitiveType);\r\n        this.typeStore.addType(stringPrimitiveType);\r\n        this.typeStore.addType(objectType);\r\n        this.typeStore.addType(varType);\r\n\r\n        this.typeStore.addType(IntegerType);\r\n        this.typeStore.addType(LongType);\r\n        this.typeStore.addType(FloatType);\r\n        this.typeStore.addType(DoubleType);\r\n        this.typeStore.addType(CharacterType);\r\n        this.typeStore.addType(BooleanType);\r\n\r\n        // Collections Framework\r\n        this.typeStore.addType(new IteratorClass(this));\r\n        this.typeStore.addType(new IterableClass(this));\r\n        this.typeStore.addType(new CollectionClass(this));\r\n        this.typeStore.addType(new ListClass(this));\r\n        this.typeStore.addType(new ArrayListClass(this));\r\n        this.typeStore.addType(new VectorClass(this));\r\n        this.typeStore.addType(new QueueClass(this));\r\n        this.typeStore.addType(new DequeClass(this));\r\n        this.typeStore.addType(new LinkedListClass(this));\r\n        this.typeStore.addType(new StackClass(this));\r\n        this.typeStore.addType(new ListIteratorImplClass(this));\r\n        this.typeStore.addType(new SetClass(this));\r\n        this.typeStore.addType(new HashSetClass(this));\r\n        this.typeStore.addType(new LinkedHashSetClass(this));\r\n        this.typeStore.addType(new SetIteratorImplClass(this));\r\n        this.typeStore.addType(new MapClass(this));\r\n        this.typeStore.addType(new HashMapClass(this));\r\n\r\n        this.typeStore.addType(new ConsoleClass(this));\r\n        this.typeStore.addType(new MathClass(this));\r\n        this.typeStore.addType(new RandomClass(this));\r\n        this.typeStore.addType(new Vector2Class(this));\r\n        this.typeStore.addType(new MathToolsClass(this));\r\n        this.typeStore.addType(new KeyClass(this));\r\n        this.typeStore.addType(new SoundClass(this));\r\n        this.typeStore.addType(new InputClass(this));\r\n        this.typeStore.addType(new Runnable(this));\r\n        this.typeStore.addType(new TimerClass(this));\r\n        this.typeStore.addType(new ColorClass(this));\r\n        this.typeStore.addType(new ActorClass(this));\r\n        this.typeStore.addType(new DirectionClass(this));\r\n        this.typeStore.addType(new ShapeClass(this));\r\n        this.typeStore.addType(new FilledShapeClass(this));\r\n        this.typeStore.addType(new RectangleClass(this));\r\n        this.typeStore.addType(new RoundedRectangleClass(this));\r\n        this.typeStore.addType(new CircleClass(this));\r\n        this.typeStore.addType(new SectorClass(this));\r\n        this.typeStore.addType(new ArcClass(this));\r\n        this.typeStore.addType(new EllipseClass(this));\r\n        this.typeStore.addType(new BitmapClass(this));\r\n        this.typeStore.addType(new AlignmentClass(this));\r\n        this.typeStore.addType(new TextClass(this));\r\n        this.typeStore.addType(new ScaleModeClass(this));\r\n        this.typeStore.addType(new SpriteLibraryClass(this));\r\n        this.typeStore.addType(new RepeatTypeClass(this));\r\n        this.typeStore.addType(new TileClass(this));\r\n        this.typeStore.addType(new SpriteClass(this));\r\n        this.typeStore.addType(new CollisionPairClass(this));\r\n        this.typeStore.addType(new GroupClass(this));\r\n        this.typeStore.addType(new PolygonClass(this));\r\n        this.typeStore.addType(new LineClass(this));\r\n        this.typeStore.addType(new TriangleClass(this));\r\n        this.typeStore.addType(new TurtleClass(this));\r\n\r\n        this.typeStore.addType(new MouseListenerInterface(this));\r\n        this.typeStore.addType(new MouseAdapterClass(this));\r\n        this.typeStore.addType(new GamepadClass(this));\r\n        this.typeStore.addType(new WorldClass(this));\r\n        this.typeStore.addType(new ProcessingClass(this));\r\n\r\n        (<ActorClass>this.typeStore.getType(\"Actor\")).registerWorldType();\r\n\r\n\r\n        this.typeStore.addType(new PrintStreamClass(this));\r\n        this.typeStore.addType(new KeyListener(this));\r\n        this.typeStore.addType(new SystemClass(this));\r\n        this.typeStore.addType(new SystemToolsClass(this));\r\n        this.typeStore.addType(new DayOfWeekEnum(this));\r\n        this.typeStore.addType(new MonthEnum(this));\r\n        this.typeStore.addType(new LocalDateTimeClass(this));\r\n    \r\n        this.typeStore.addType(new WebSocketClientClass(this));\r\n        this.typeStore.addType(new WebSocketClass(this));\r\n\r\n        this.typeStore.addType(new RobotWorldClass(this));\r\n        this.typeStore.addType(new RobotClass(this));\r\n\r\n        this.typeStore.addType(new ResultSetClass(this));\r\n        this.typeStore.addType(new DatabaseStatementClass(this));\r\n        this.typeStore.addType(new DatabasePreparedStatementClass(this));\r\n        this.typeStore.addType(new ConnectionClass(this));\r\n        this.typeStore.addType(new DatabaseManagerClass(this));\r\n\r\n    \r\n\r\n        stringPrimitiveType.module = this;\r\n        // stringPrimitiveType.baseClass = <any>(this.typeStore.getType(\"Object\"));\r\n        // stringPrimitiveType.baseClass = objectType;\r\n        // IntegerType.baseClass = objectType;\r\n        // DoubleType.baseClass = objectType;\r\n        // FloatType.baseClass = objectType;\r\n        // CharacterType.baseClass = objectType;\r\n        // BooleanType.baseClass = objectType;\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class GNGModule extends Module {\r\n    constructor(main: MainBase, moduleStore: ModuleStore) {\r\n\r\n        super({ name: \"Graphics and Games - Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n        this.typeStore.addType(new GNGAktionsempfaengerInterface(this));\r\n        this.typeStore.addType(new GNGBaseFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGZeichenfensterClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGEreignisbehandlung(this, moduleStore));\r\n        this.typeStore.addType(new GNGRechteckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGDreieckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGKreisClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTextClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTurtleClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new KeyEventClass(this, moduleStore));\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: {[name: string]: Module} = {};\r\n    private baseModule: BaseModule;\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase, withBaseModule: boolean, private additionalLibraries: string[] = []) {\r\n        if (withBaseModule) {\r\n            this.baseModule = new BaseModule(main);\r\n            this.putModule(this.baseModule);\r\n        }\r\n        \r\n        // additionalLibraries = [\"gng\"];\r\n\r\n        for(let lib of additionalLibraries){\r\n            this.addLibraryModule(lib);\r\n        }\r\n    }\r\n\r\n    addLibraryModule(identifier: string){\r\n        switch(identifier){\r\n            case \"gng\": this.putModule(new GNGModule(this.main, this));\r\n            break;\r\n        }\r\n    }\r\n\r\n    setAdditionalLibraries(additionalLibraries: string[]){\r\n\r\n        this.modules = this.modules.filter( m => (!m.isSystemModule) || m instanceof BaseModule);\r\n        this.moduleMap = {};\r\n\r\n        for(let m of this.modules){\r\n            this.moduleMap[m.file.name] =  m;\r\n        }\r\n\r\n        if(additionalLibraries != null){\r\n            for(let lib of additionalLibraries){\r\n                this.addLibraryModule(lib);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for(let module of this.modules){\r\n            if(module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getBaseModule() {\r\n        return this.baseModule;\r\n    }\r\n\r\n    public clearUsagePositions() {\r\n        this.baseModule.clearUsagePositions();\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main, true);\r\n        for (let m of this.modules) {\r\n            if (!m.isSystemModule) {\r\n                ms.putModule(m.copy());\r\n            }\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                if (!mo.isSystemModule) {\r\n                    return mo;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                if (!m.isSystemModule || includeSystemModules) {\r\n                    ret.push(m);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n    getType(identifier: string): { type: Type, module: Module } {\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                let type = module.typeStore.getType(identifier);\r\n                if (type != null) {\r\n                    return { type: type, module: module }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getTypeCompletionItems(moduleContext: Module, rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                for (let type of module.typeStore.typeList) {\r\n                    if (module == moduleContext || (type instanceof Klass && type.visibility == Visibility.public)\r\n                        || module.isSystemModule) {\r\n\r\n                        let detail = \"Klasse\";\r\n\r\n                        if(type.documentation != null){\r\n                            detail = type.documentation;\r\n                        } else if (module.isSystemModule) {\r\n                            if (type instanceof PrimitiveType) {\r\n                                detail = \"Primitiver Datentyp\";\r\n                            } else {\r\n                                detail = \"Systemklasse\";\r\n                            }\r\n                        }\r\n\r\n                        let item = {\r\n                            label: type.identifier,\r\n                            detail: detail,\r\n                            insertText: type.identifier,\r\n                            kind: type instanceof PrimitiveType ?\r\n                                monaco.languages.CompletionItemKind.Struct : monaco.languages.CompletionItemKind.Class,\r\n                            range: rangeToReplace,\r\n                            generic: ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0)\r\n                        };\r\n\r\n                        completionItems.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return completionItems;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class TypeStore {\r\n\r\n    typeList: Type[] = [];\r\n    typeMap: Map<string, Type> = new Map();\r\n\r\n    addType(type: Type) {\r\n        this.typeList.push(type);\r\n        this.typeMap.set(type.identifier, type);\r\n    }\r\n\r\n    clear() {\r\n        this.typeList.length = 0;\r\n        this.typeMap.clear();\r\n    }\r\n\r\n    getType(identifier: string) {\r\n        return this.typeMap.get(identifier);\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Value, Type, Variable } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\n\r\nexport class DebuggerElement {\r\n\r\n    caption: string; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: DebuggerElement;\r\n    children: DebuggerElement[] = [];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    value: Value;\r\n    variable: Variable;\r\n\r\n    type: Type;\r\n    identifier: string;\r\n\r\n    $debuggerElement: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string, parent: DebuggerElement, identifier: string, value: Value, type: Type, variable: Variable) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n        this.type = type;\r\n        this.variable = variable;\r\n        this.identifier = identifier;\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.$debuggerElement == null) {\r\n            this.$debuggerElement = jQuery('<div>');\r\n            this.$debuggerElement.addClass(\"jo_debuggerElement\");\r\n            this.$debuggerElement.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n            let $deFirstLine = jQuery('<div class=\"jo_deFirstline\"><span class=\"jo_deIdentifier\">' +\r\n                this.identifier + '</span>:&nbsp;<span class=\"jo_deValue\"></span></div>');\r\n\r\n            this.$debuggerElement.append($deFirstLine);\r\n\r\n            // show compound types in own branch of visible tree\r\n            if (this.type instanceof ArrayType ||\r\n                (this.type instanceof Klass && !(this.type instanceof Enum) && !(this.type == stringPrimitiveType))\r\n                || this.type instanceof StaticClass\r\n                || this.type instanceof Interface\r\n            ) {\r\n                this.canOpen = true;\r\n                this.$debuggerElement.addClass('jo_canOpen');\r\n                this.$debuggerElement.append(jQuery('<div class=\"jo_deChildContainer\"></div>'));\r\n\r\n                this.$debuggerElement.find('.jo_deFirstline').on('mousedown', (event) => {\r\n                    if (this.value != null && this.value.value != null) {\r\n                        if (this.children.length == 0) {\r\n                            this.onFirstOpening();\r\n                        }\r\n                        this.$debuggerElement.toggleClass('jo_expanded');\r\n                        this.isOpen = !this.isOpen;\r\n                    } else {\r\n                        this.children = [];\r\n                    }\r\n\r\n                    event.stopPropagation();\r\n\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        if (this.type instanceof Klass) {\r\n\r\n            let ro: RuntimeObject = this.value.value;\r\n            let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n            if (listHelper != null) {\r\n                this.renderListElements(listHelper);\r\n            } else {\r\n                for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n            }\r\n\r\n\r\n        } else if (this.type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$debuggerElement.find('.jo_deChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new DebuggerElement(null, this, \"[\" + i + \"]\", a[i], this.type.arrayOfType, null);\r\n                de.render();\r\n                $childContainer.append(de.$debuggerElement);\r\n\r\n            }\r\n\r\n        } else if (this.type instanceof StaticClass) {\r\n\r\n            for (let a of this.type.getAttributes(Visibility.private)) {\r\n                let ro = this.type.classObject;\r\n                let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n            }\r\n\r\n        } else if (this.type instanceof Interface) {\r\n\r\n            if (this.value.value != null && this.value.value instanceof RuntimeObject) {\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n\r\n            } else {\r\n                this.children == [];\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderListElements(listHelper: ListHelper) {\r\n\r\n        let valueArray = listHelper.valueArray;\r\n        if (this.children.length > valueArray.length) {\r\n            for (let i = valueArray.length; i < this.children.length; i++) {\r\n                let childElement = this.children[i];\r\n                childElement.$debuggerElement.remove();\r\n            }\r\n            this.children.splice(valueArray.length);\r\n        }\r\n\r\n        if (this.children.length < valueArray.length && this.children.length < 100) {\r\n            for (let i = this.children.length; i < valueArray.length && i <= 100; i++) {\r\n                let v: Value = valueArray[i];\r\n                let title = \"\" + i;\r\n                if (i == 100) {\r\n                    v = { type: stringPrimitiveType, value: \"\" + (listHelper.valueArray.length - 100) + \" weitere...\" };\r\n                    title = \"...\";\r\n                }\r\n                let de = new DebuggerElement(null, this, title, v, v.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').first().append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n        let s: string;\r\n        let v = this.value;\r\n\r\n        if (v == null) {\r\n            this.$debuggerElement.hide();\r\n            return;\r\n        }\r\n\r\n        this.$debuggerElement.show();\r\n        if (v.value == null) {\r\n            s = \"null\";\r\n            this.removeAllChildren();\r\n        } else {\r\n\r\n            if (v.updateValue != null) {\r\n                v.updateValue(v);\r\n            }\r\n\r\n            s = v.type?.debugOutput(v);\r\n\r\n            if (this.type instanceof Klass) {\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n                let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n                if (listHelper != null) {\r\n                    this.renderListElements(listHelper);\r\n                    if(listHelper.allElementsPrimitive()){\r\n                        s = \"\" +listHelper.valueArray.length + \" El: \"\r\n                        s += \"[\" + listHelper.objectArray.slice(0, 20).map(o => \"\" + o).join(\", \") + \"]\"\r\n                    } else {\r\n                        s = v.type.identifier + \" (\" +listHelper.valueArray.length + \" Elemente)\";\r\n                    }\r\n                }\r\n            } \r\n            \r\n        }\r\n\r\n        this.$debuggerElement.find('.jo_deValue').first().html(s == null ? \"\" : s);\r\n\r\n\r\n        for (let child of this.children) {\r\n            child.renderValue();\r\n        }\r\n    }\r\n\r\n    removeAllChildren() {\r\n        for (let de of this.children) {\r\n            de.$debuggerElement.remove();\r\n        }\r\n        this.children = []\r\n    }\r\n\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver, getArrayType } from \"./parser/TypeResolver.js\";\r\nimport { SymbolTable } from \"./parser/SymbolTable.js\";\r\nimport { Program } from \"./parser/Program.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Heap } from \"./types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { TokenType } from \"./lexer/Token.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport type Compilation = {\r\n    errors: Error[],\r\n    program: Program,\r\n    symbolTable: SymbolTable\r\n}\r\n\r\nexport class AdhocCompiler {\r\n\r\n    moduleStore: ModuleStore;\r\n    lexer: Lexer;\r\n    module: Module;\r\n    parser: Parser;\r\n    codeGenerator: CodeGenerator;\r\n\r\n    constructor(private main: MainBase) {\r\n        this.moduleStore = new ModuleStore(this.main, true);\r\n        this.lexer = new Lexer();\r\n        this.parser = new Parser(true);\r\n        this.codeGenerator = new CodeGenerator();\r\n        this.module = new Module(null, main);\r\n    }\r\n\r\n    compile(code: string, moduleStore: ModuleStore, heap: Heap, symbolTable?: SymbolTable): Compilation {\r\n\r\n        let t0 = performance.now();\r\n\r\n        let errors: Error[] = [];\r\n\r\n        this.module.clear();\r\n        if (symbolTable == null) {\r\n            symbolTable = new SymbolTable(null, { column: 1, line: 1, length: 0 }, { column: 1, line: 100, length: 0 });\r\n            symbolTable.beginsNewStackframe = true;\r\n        } else {\r\n            symbolTable = symbolTable.getImitation();\r\n        }\r\n\r\n        // 1st pass: lexing\r\n        let lexed = this.lexer.lex(code);\r\n        errors = lexed.errors;\r\n        this.module.tokenList = lexed.tokens;\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        let parser: Parser = new Parser(true);\r\n        parser.parse(this.module);\r\n        errors = errors.concat(this.module.errors[1]);\r\n\r\n        // 3rd pass: resolve types and populate typeStores\r\n\r\n        for (let typenode of this.module.typeNodes) {\r\n            if (typenode.resolvedType == null) {\r\n                let resolvedTypeAndModule = moduleStore.getType(typenode.identifier);\r\n                if (resolvedTypeAndModule == null) {\r\n                    errors.push({\r\n                        text: \"Der Datentyp \" + typenode.identifier + \" ist nicht bekannt.\",\r\n                        position: typenode.position,\r\n                        level: \"error\"\r\n                    })\r\n                } else {\r\n                    typenode.resolvedType = getArrayType(resolvedTypeAndModule.type, typenode.arrayDimension);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 4th pass: code generation\r\n\r\n        // let codeGeneratorErrors = this.codeGenerator\r\n        //     .startAdhocCompilation(this.module, this.moduleStore, symbolTable, heap);\r\n        let codeGeneratorErrors = this.codeGenerator\r\n            .startAdhocCompilation(this.module, moduleStore, symbolTable, heap);\r\n        errors = errors.concat(codeGeneratorErrors);\r\n\r\n\r\n\r\n        if (errors.length == 0) {\r\n\r\n            let statements = this.module.mainProgram.statements;\r\n            for (let statement of statements) {\r\n                statement.stepFinished = false;\r\n            }\r\n\r\n            if (statements.length > 0 && statements[statements.length - 1].type == TokenType.programEnd) {\r\n                statements.splice(statements.length - 1, 1);\r\n            }\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        return {\r\n            program: this.module.mainProgram,\r\n            errors: errors,\r\n            symbolTable: symbolTable\r\n        };\r\n    }\r\n\r\n\r\n}","import { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { Heap, Value } from \"../compiler/types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Evaluator {\r\n\r\n    private programMap: Map<string, Map<number, Program>> = new Map();\r\n    private compiler: AdhocCompiler;\r\n\r\n    constructor(private workspace: Workspace, private main: MainBase){\r\n        this.compiler = new AdhocCompiler(main);\r\n    }\r\n\r\n    compile(expression: string, symbolTable: SymbolTable): {error: string, program: Program} {\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        let pmEntry = this.programMap.get(expression);\r\n        if(pmEntry != null){\r\n            let program = pmEntry.get(symbolTable.id);\r\n            if(program != null){\r\n                return {error: null, program: program};\r\n            }\r\n        } else {\r\n            pmEntry = new Map();\r\n            this.programMap.set(expression, pmEntry);\r\n        }\r\n\r\n        let moduleStore = this.workspace.moduleStore;\r\n        let heap: Heap = this.main.getInterpreter().heap;\r\n\r\n        if (expression.length > 0 && moduleStore != null) {\r\n\r\n            let compilation = this.compiler.compile(expression, moduleStore, heap, symbolTable);\r\n\r\n            if (compilation.errors.length > 0) {\r\n                return { error: compilation.errors[0].text, program: null};\r\n            } else {\r\n\r\n                pmEntry.set(symbolTable.id, compilation.program);\r\n\r\n                return {error: null, program: compilation.program};\r\n            }\r\n\r\n        } else {\r\n            return {error: \"Leerer Ausdruck\", program: null};\r\n        }\r\n    }\r\n\r\n    evaluate(expression: string, symbolTable?: SymbolTable): { error: string, value: Value } {\r\n\r\n        if(symbolTable == null) symbolTable = this.main.getDebugger().lastSymboltable;\r\n\r\n        let c = this.compile(expression, symbolTable);\r\n\r\n        if(c?.error != null){\r\n            return { error: c.error, value: null};\r\n        }\r\n\r\n        if(c == null){\r\n            return { error: \"Fehler beim Kompilieren\", value: null};\r\n        }\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n\r\n        return interpreter.evaluate(c.program);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { WorkspaceData, WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { ExportedWorkspace, Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Evaluator } from \"../interpreter/Evaluator.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string;\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    // published_to 0: none; 1: class; 2: school; 3: all\r\n    published_to: number;\r\n    \r\n    repository_id: number;    // id of repository-workspace\r\n    has_write_permission_to_repository: boolean; // true if owner of this working copy has write permission to repository workspace\r\n\r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    evaluator: Evaluator;\r\n\r\n    settings: WorkspaceSettings = {\r\n        libraries: []\r\n    };\r\n    \r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main, true, this.settings.libraries);\r\n        this.evaluator = new Evaluator(this, main);\r\n    }\r\n\r\n    toExportedWorkspace(): ExportedWorkspace {\r\n        return {\r\n            name: this.name,\r\n            modules: this.moduleStore.getModules(false).map(m => m.toExportedModule()),\r\n            settings: this.settings\r\n        }\r\n    }\r\n\r\n\r\n    alterAdditionalLibraries() {\r\n        this.moduleStore.setAdditionalLibraries(this.settings.libraries);\r\n        this.moduleStore.dirty = true;\r\n    }\r\n\r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            path: this.path,\r\n            isFolder: this.isFolder,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            version: this.version,\r\n            repository_id: this.repository_id,\r\n            has_write_permission_to_repository: this.has_write_permission_to_repository,\r\n            language: 0,\r\n            sql_baseDatabase: \"\",\r\n            sql_history: \"\",\r\n            sql_manipulateDatabaseStatements: \"\",\r\n            settings: JSON.stringify(this.settings)\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n\r\n    renderSynchronizeButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonRepository');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        let that = this;\r\n        let myMain: Main = <Main>this.main;\r\n\r\n        if (this.repository_id != null && this.owner_id == myMain.user.id) {\r\n            let $button = jQuery('<div class=\"jo_startButton img_open-change jo_button jo_active\" title=\"Workspace mit Repository synchronisieren\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.synchronizeWithRepository();\r\n\r\n            });\r\n\r\n        } else {\r\n            $buttonDiv.find('.jo_startButton').remove();\r\n        }\r\n    }\r\n\r\n    synchronizeWithRepository(){\r\n        let myMain: Main = <Main>this.main;\r\n        if(this.repository_id != null && this.owner_id == myMain.user.id){\r\n            myMain.networkManager.sendUpdates(() => {\r\n                myMain.synchronizationManager.synchronizeWithWorkspace(this);\r\n            }, true);\r\n        }\r\n    }\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let settings: WorkspaceSettings = (ws.settings != null && ws.settings.startsWith(\"{\")) ? JSON.parse(ws.settings) : {libraries: []}; \r\n\r\n        //@ts-ignore\r\n        if(settings.libaries){\r\n            //@ts-ignore\r\n            settings.libraries = settings.libaries;\r\n        }\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.version = ws.version;\r\n        w.repository_id = ws.repository_id;\r\n        w.has_write_permission_to_repository = ws.has_write_permission_to_repository;\r\n        w.settings = settings;\r\n\r\n        if(w.settings.libraries == null){\r\n            w.settings.libraries = [];\r\n        }\r\n\r\n        if(w.settings.libraries.length > 0){\r\n            w.moduleStore.setAdditionalLibraries(w.settings.libraries);\r\n        }\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport type CheckboxState = () => boolean;\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    addDiv($div: JQuery<HTMLElement>){\r\n        this.$dialogMain.append($div);\r\n    }\r\n\r\n    subHeading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-subheading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    addCheckbox(description: string, ischecked: boolean, name: string): CheckboxState {\r\n        let cb: string = '<input type=\"checkbox\" name=\"' + name + '\"' + (ischecked ? ' checked' : '') + '>';\r\n        let $checkbox = jQuery(cb);\r\n        let $description = jQuery('<label for=\"' + name + '\">' + description + \"</label>\");\r\n        \r\n        let $div = jQuery('<div class=\"jo_checkbox_div\"></div>')\r\n        $div.append($checkbox, $description);\r\n\r\n        $description.on('click', () => {$checkbox.prop(\"checked\", !$checkbox.prop(\"checked\"))})\r\n\r\n        this.$dialogMain.append($div);\r\n        return () => {\r\n            return $checkbox.is(':checked');\r\n        }\r\n    }\r\n\r\n\r\n}","import { ExportedWorkspace, File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\n\r\nexport class WorkspaceImporter {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main, private path: string[] = []) {\r\n\r\n        this.dialog = new Dialog();\r\n        \r\n    }\r\n\r\n    show() {\r\n        let that = this;\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Workspace importieren\");\r\n        this.dialog.description(\"Bitte klicken Sie auf den Button 'Datei auswählen...' oder ziehen Sie eine Datei auf das gestrichelt umrahmte Feld.\")\r\n        let pathDescription = \"Dieser Workspace wird auf unterster Ordnerebene in der Workspaceliste importiert.\";\r\n        if(this.path.length  > 0){\r\n            pathDescription = \"Dieser Workspace wird in den Ordner \" + this.path.join(\"/\") + \" importiert.\";\r\n        }\r\n        this.dialog.description(pathDescription);\r\n\r\n        let $fileInputButton = jQuery('<input type=\"file\" id=\"file\" name=\"file\" multiple />');\r\n        this.dialog.addDiv($fileInputButton);\r\n        \r\n        let exportedWorkspaces: ExportedWorkspace[] = [];\r\n        \r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let $workspacePreviewDiv = jQuery(`<ul></ul>`);\r\n        \r\n        let registerFiles = (files: FileList) => {\r\n            for (let i = 0; i < files.length; i++) {\r\n                let f = files[i];\r\n                var reader = new FileReader();\r\n                reader.onload = (event) => {\r\n                    let text: string = <string>event.target.result;\r\n                    if (!text.startsWith(\"{\")) {\r\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\r\n                        return;\r\n                    }\r\n                    \r\n                    let ew: ExportedWorkspace = JSON.parse(text);\r\n                    \r\n                    if(ew.modules == null || ew.name == null || ew.settings == null){\r\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\r\n                        return;\r\n                    }\r\n\r\n                    exportedWorkspaces.push(ew);\r\n                    $workspacePreviewDiv.append(jQuery(`<li>Workspace ${ew.name} mit ${ew.modules.length} Dateien</li>`));\r\n\r\n                };\r\n                reader.readAsText(f);\r\n            }\r\n        }\r\n\r\n        $fileInputButton.on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            registerFiles(files);\r\n        })\r\n\r\n        let $dropZone = jQuery(`<div class=\"jo_workspaceimport_dropzone\">Dateien hierhin ziehen</div>`);\r\n        this.dialog.addDiv($dropZone);\r\n        this.dialog.description('<b>Diese Workspaces werden importiert:</b>');\r\n\r\n\r\n\r\n        $dropZone.on('dragover', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\r\n        })\r\n        $dropZone.on('drop', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n\r\n            var files = evt.originalEvent.dataTransfer.files;\r\n            registerFiles(files);\r\n        })\r\n\r\n        this.dialog.addDiv($workspacePreviewDiv);\r\n\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => { this.dialog.close() }\r\n            },\r\n            {\r\n                caption: \"Importieren\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    \r\n                    let networkManager = this.main.networkManager;\r\n                    let projectExplorer = this.main.projectExplorer;\r\n\r\n                    let owner_id: number = this.main.user.id;\r\n                    if (this.main.workspacesOwnerId != null) {\r\n                        owner_id = this.main.workspacesOwnerId;\r\n                    }\r\n\r\n                    let count = 0;\r\n                    for(let wse of exportedWorkspaces) count += 1 + wse.modules.length;\r\n\r\n                    let firstWorkspace: Workspace;\r\n\r\n                    for(let wse of exportedWorkspaces){\r\n\r\n                        let ws: Workspace = new Workspace(wse.name, this.main, owner_id);\r\n                        if(firstWorkspace == null) firstWorkspace = ws;\r\n                        ws.isFolder = false;\r\n                        ws.path = this.path.join(\"/\");\r\n                        ws.settings = wse.settings;\r\n                        this.main.workspaceList.push(ws);\r\n                        ws.alterAdditionalLibraries();\r\n\r\n                        networkManager.sendCreateWorkspace(ws, owner_id, (error: string) => {\r\n                            count--;\r\n                            if (error == null) {\r\n                                projectExplorer.workspaceListPanel.addElement({\r\n                                    name: ws.name,\r\n                                    externalElement: ws,\r\n                                    iconClass: \"workspace\",\r\n                                    isFolder: false,\r\n                                    path: that.path\r\n                                }, true);\r\n\r\n                                for(let mo of wse.modules){\r\n                                    let f: File = {\r\n                                        name: mo.name,\r\n                                        dirty: false,\r\n                                        saved: true,\r\n                                        text: mo.text,\r\n                                        text_before_revision: null,\r\n                                        submitted_date: null,\r\n                                        student_edited_after_revision: false,\r\n                                        version: 1,\r\n                                        is_copy_of_id: null,\r\n                                        repository_file_version: null,\r\n                                        identical_to_repository_version: null\r\n                                    };\r\n                                    let m = new Module(f, this.main);\r\n                                    ws.moduleStore.putModule(m);\r\n                                    networkManager.sendCreateFile(m, ws, owner_id,\r\n                                        (error: string) => {\r\n                                            count--;\r\n                                            if (error == null) {\r\n                                                projectExplorer.workspaceListPanel.sortElements();\r\n                                                this.dialog.close();\r\n                                                if(firstWorkspace != null) projectExplorer.setWorkspaceActive(firstWorkspace, true);\r\n                                            } else {\r\n                                                alert('Der Server ist nicht erreichbar!');\r\n                    \r\n                                            }\r\n                                        });\r\n                                }\r\n\r\n                            } else {\r\n                                alert('Der Server ist nicht erreichbar!');\r\n        \r\n                            }\r\n                        });\r\n\r\n\r\n\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { openContextMenu, makeEditable, ContextMenuItem, jo_mouseDetected, animateToTransparent } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { isJSDocThisTag, isThisTypeNode } from \"typescript\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonHomework\"></div>\r\n           <div class=\"jo_additionalButtonStart\"></div>\r\n           <div class=\"jo_additionalButtonRepository\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neuer Workspace...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            that.$buttonNew.trigger(mousePointer + 'down');\r\n                        }\r\n                    }, {\r\n                        caption: \"Workspace importieren...\",\r\n                        callback: () => {\r\n                            new WorkspaceImporter(<Main>that.accordion.main, element.path.concat([element.name])).show();\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'down', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class WatcherElement {\r\n\r\n    constructor(public expression: string, public accordionElement: AccordionElement,\r\n        private main: MainBase, private $secondLine: JQuery<HTMLElement>, private $rightTextInFirstLine: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    setError(error: string) {\r\n        this.$secondLine.empty();\r\n        this.$secondLine.append(jQuery('<div class=\"jo_watcherResult\">' + \"---\" + '</div>'));\r\n    }\r\n\r\n    evaluate() {\r\n\r\n        let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n        let result = evaluator.evaluate(this.expression);\r\n        if (result.error != null) {\r\n            this.setError(result.error);\r\n        } else {\r\n\r\n            let v = \"---\";\r\n            if (result.value != null) {\r\n                v = result.value.type.debugOutput(result.value);\r\n            }\r\n\r\n            this.$secondLine.empty();\r\n            this.$rightTextInFirstLine.empty();\r\n\r\n            monaco.editor.colorize(v, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n                let $result = jQuery('<div class=\"jo_watcherResult\">' + command + '</div>');\r\n\r\n                if (this.expression.length + v.length < 20) {\r\n                    this.$rightTextInFirstLine.append($result);\r\n                } else {\r\n                    this.$secondLine.append($result);\r\n                }\r\n\r\n            }\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Interpreter, ProgramStackElement, InterpreterState } from \"./Interpreter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Value, Heap } from \"../compiler/types/Types.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { DebuggerElement } from \"./DebuggerElement.js\";\r\nimport { Accordion, AccordionPanel, AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { StaticClass } from \"../compiler/types/Class.js\";\r\nimport { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { WatcherElement } from \"./WatcherElement.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Debugger {\r\n\r\n    lastSymboltable: SymbolTable;\r\n    lastDebuggerElements: DebuggerElement[] = [];\r\n    accordion: Accordion;\r\n\r\n    variablePanel: AccordionPanel;\r\n\r\n    watchPanel: AccordionPanel;\r\n\r\n\r\n    constructor(private main: MainBase, private $debuggerDiv: JQuery<HTMLElement>, private $projectexplorerDiv?: JQuery<HTMLElement>) {\r\n\r\n        this.accordion = new Accordion(main, $debuggerDiv);\r\n\r\n        this.variablePanel = new AccordionPanel(this.accordion, \"Variablen\", \"3\", null, null, \"\", false, false, \"file\", false, []);\r\n        this.variablePanel.$listElement.css('margin-left', '4px');\r\n\r\n        this.watchPanel = new AccordionPanel(this.accordion, \"Beobachten\", \"2\",\r\n            \"img_add-dark\", \"Beobachtungsterm hinzufügen\",\r\n            \"watcher\", true, false, \"file\", false, []);\r\n        this.watchPanel.$listElement.css('margin-left', '4px');\r\n\r\n        let that = this;\r\n        this.watchPanel.newElementCallback = (accordionElement, callbackIfSuccesful) => {\r\n            that.addWatchExpression(accordionElement);\r\n            callbackIfSuccesful(accordionElement.externalElement);\r\n            return null;\r\n        };\r\n\r\n        this.watchPanel.deleteCallback = (watchExpression, callbackIfSuccesful) => {\r\n            that.deleteWatchExpression(watchExpression);\r\n            callbackIfSuccesful();\r\n        };\r\n\r\n        this.watchPanel.renameCallback = (watchExpression, newName) => {\r\n            that.renameWatchExpression(watchExpression, newName);\r\n            return newName;\r\n        }\r\n\r\n        this.$debuggerDiv.hide();\r\n    }\r\n\r\n    public enable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.hide();\r\n        }\r\n        this.$debuggerDiv.show();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").hide();\r\n    }\r\n\r\n    public disable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.show();\r\n        }\r\n        this.$debuggerDiv.hide();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").show();\r\n    }\r\n\r\n    showData(currentProgram: Program, textPosition: TextPosition,\r\n        stack: Value[], stackframe: number, heap: Heap) {\r\n\r\n        if (currentProgram.module.file == null) return; // inside command line\r\n\r\n        let elementsToKeep: HTMLElement[] = [];\r\n\r\n        let module = currentProgram.module;\r\n        let symbolTable = module.findSymbolTableAtPosition(textPosition.line, textPosition.column);\r\n\r\n        let oldDebuggerElements = this.lastDebuggerElements;\r\n\r\n        this.lastDebuggerElements = [];\r\n        let $variableList = this.variablePanel.$listElement;\r\n\r\n        let st = symbolTable;\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        if (st.classContext != null) {\r\n\r\n            let object = stack[stackframe];\r\n            // same object context as before?\r\n            if (oldDebuggerElements.length > 0 && oldDebuggerElements[0].value == object && oldDebuggerElements[0].variable == null) {\r\n                // yes => keep old Debugger Element and html-Element\r\n                this.lastDebuggerElements.push(oldDebuggerElements[0]);\r\n                elementsToKeep.push(this.lastDebuggerElements[0].$debuggerElement[0]);\r\n            } else {\r\n                // no => make a new one\r\n                let thisString = (st.classContext instanceof StaticClass) ? st.classContext.identifier : \"this\";\r\n                let de: DebuggerElement = new DebuggerElement(null, null, thisString, object, st.classContext, null);\r\n                this.lastDebuggerElements.push(de);\r\n            }\r\n\r\n        }\r\n\r\n        // in nested scopes there may be a variable in inner scope with same\r\n        // identifier as variable in outer scope. We only want to show the variable in \r\n        // the inner scope, so we iterate from inner scope to outer scope and keep\r\n        // track of already shown variable names:\r\n        let visibleVariablesMap: { [identifier: string]: boolean } = {};\r\n\r\n        // iterate over SymbolTable from inside to outside\r\n        while (st != null) {\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                // had there been a variable with same identifier in inner scope?\r\n                if (visibleVariablesMap[variable.identifier] == null) {\r\n                    // no\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    // Reuse old Debugger Element vor variable, if present\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable && oldDe.$debuggerElement != null) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            if (de.value == null && de.variable != null) {\r\n                                de.value = stack[stackframe + de.variable.stackPos];\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // no old debugger element present, so make a new one\r\n                    if (de == null) {\r\n                        let value = stack[stackframe + variable.stackPos];\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n\r\n            }, this);\r\n\r\n            // next outer symbol table\r\n            st = st.parent;\r\n        }\r\n\r\n        // if we are outside class context, then variables on heap are visible:\r\n        if (symbolTable.classContext == null) {\r\n            for (let identifier in heap) {\r\n\r\n                let variable = heap[identifier];\r\n\r\n                if (visibleVariablesMap[variable.identifier] != true) {\r\n\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            de.value = de.variable.value;\r\n\r\n                        }\r\n                    }\r\n\r\n                    if (de == null) {\r\n                        let value = variable.value;\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // remove unused elements from html DOM:\r\n        for (let child of $variableList.children()) {\r\n            if (!(elementsToKeep.indexOf(child) >= 0)) {\r\n                child.remove();\r\n            }\r\n        }\r\n\r\n        // inject new values into debugger elements:\r\n        for (let de of this.lastDebuggerElements) {\r\n\r\n            if (de.variable != null) {\r\n                if (de.variable.stackPos != null) {\r\n                    de.value = stack[stackframe + de.variable.stackPos];\r\n                } else {\r\n                    de.value = de.variable.value;\r\n                }\r\n            }\r\n\r\n            de.render();\r\n\r\n            // if html element corresponding to debugger element is not already present in Browser-DOM\r\n            // then append it to DOM\r\n            if (elementsToKeep.indexOf(de.$debuggerElement[0]) < 0) {\r\n                $variableList.append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n        this.lastSymboltable = symbolTable;\r\n\r\n        // this.evaluateWatcherExpressions(currentProgram, textPosition, stack, stackframe);\r\n        this.evaluateWatcherExpressions();\r\n\r\n    }\r\n\r\n    renameWatchExpression(watcherElement: WatcherElement, newName: string) {\r\n        watcherElement.expression = newName;\r\n\r\n        monaco.editor.colorize(newName, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = watcherElement.accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', watcherElement.expression);\r\n\r\n        });\r\n\r\n        if (this.main.getInterpreter().state == InterpreterState.paused) {\r\n            watcherElement.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteWatchExpression(watchExpression: any) {\r\n        // nothing to do\r\n    }\r\n\r\n    addWatchExpression(accordionElement: AccordionElement) {\r\n\r\n        accordionElement.$htmlSecondLine = jQuery('<div></div>');\r\n        let $rightTextAfterFilename = accordionElement.$htmlFirstLine.parent().find('.jo_textAfterName').first();\r\n\r\n        let we = new WatcherElement(accordionElement.name, accordionElement,\r\n            this.main, accordionElement.$htmlSecondLine, $rightTextAfterFilename);\r\n\r\n        accordionElement.externalElement = we;\r\n\r\n        monaco.editor.colorize(accordionElement.name, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', accordionElement.externalElement.expression);\r\n\r\n        });\r\n\r\n        we.evaluate();\r\n\r\n    }\r\n\r\n    evaluateWatcherExpressions() {\r\n\r\n        for (let ae of this.watchPanel.elements) {\r\n            let we: WatcherElement = ae.externalElement;\r\n            we.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n\r\n                /*\r\n                 * Event is bubbling down to body element\r\n                 * when pressing space bar in embedded mode while program runs.\r\n                 * This leads to scrolling page down. To prevent this:\r\n                 */\r\n                if(event.key == \" \" && that.main.isEmbedded() && \r\n                   that.main.getInterpreter().state == InterpreterState.running && !that.main.getMonacoEditor().hasTextFocus()){\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            button.on(mousePointer + 'down', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n                if(identifier == \"interpreter.start\"){\r\n                    SoundTools.init();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Variable } from \"../types/Types.js\";\r\nimport { Statement } from \"./Program.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Klass } from \"../types/Class.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype Label = {\r\n    number: number;\r\n}\r\n\r\nexport class ProgramPrinter {\r\n\r\n\r\n\r\n    private $pcodeTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>){\r\n        this.$pcodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n    }\r\n\r\n    showNode(node: Statement) {\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pCodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n        $pCodeTab.find('div').removeClass(\"jo_revealProgramPointer\");\r\n        let $div:JQuery<HTMLElement> = node[\"$div\"];\r\n        if($div != null){\r\n            $div.addClass(\"jo_revealProgramPointer\");\r\n            let pos = $div.position().top + this.$pcodeTab.scrollTop();\r\n            pos -= this.$pcodeTab.height()/2;\r\n            this.$pcodeTab.scrollTop(pos);\r\n\r\n            // $div[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\r\n        }\r\n    }\r\n\r\n    initGUI(){\r\n        this.$pcodeTab.on('myshow', () => {\r\n            this.main.printProgram();\r\n        });\r\n\r\n    }\r\n\r\n    printModuleToBottomDiv(workspace: Workspace, m: Module){\r\n\r\n        if(m == null) return;\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pcode = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n        $pcode.html(\"\");\r\n        $pcode.append(this.printModule(m));\r\n\r\n        if(workspace != null && workspace.compilerMessage != null){\r\n            $pcode.prepend(\"<div>\" + workspace.compilerMessage + \"</div>\");\r\n        }\r\n        \r\n\r\n        $pcode.find('.jo_label_destination').on(\"click\", (ev) => {\r\n            let dest = jQuery(ev.target).data('destination');\r\n            if(dest == null){\r\n                dest = jQuery(ev.target).parent().data('destination');\r\n            }\r\n            if(dest != null){\r\n                let $dest = this.$pcodeTab.find('.' + dest);\r\n                $dest[0].scrollIntoView();            \r\n            } \r\n                \r\n        });\r\n\r\n    }\r\n\r\n    printModule(m: Module): JQuery<HTMLElement>[] {\r\n\r\n        if (m == null) {\r\n            return [jQuery(\"<div></div>\")];\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n\r\n        if (m.mainProgram != null) {\r\n            s.push(jQuery(\"<h3>Main Program: </h3>\"));\r\n            s = s.concat(this.print(m.mainProgram.statements));\r\n        }\r\n\r\n        if (m.typeStore != null && m.typeStore.typeList != null) {\r\n\r\n            for (let c of m.typeStore.typeList) {\r\n                if (c instanceof Klass) {\r\n                    s.push(jQuery(\"<h2>Class \" + c.identifier + \":</h2>\"));\r\n\r\n                    if(c.attributeInitializationProgram.statements.length > 0){\r\n                        s.push(jQuery(\"<h3>Attribute-initialization:</h3>\"));\r\n                        s = s.concat(this.print(c.attributeInitializationProgram.statements));\r\n                }\r\n\r\n                    for (let m of c.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                    for (let m of c.staticClass.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Static Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    print(statements: Statement[], indent: string = \"\"): JQuery<HTMLElement>[] {\r\n\r\n        let labels: Map<number, Label> = new Map();\r\n        let lastLabelNumber: number = 0;\r\n\r\n        for(let statement of statements){\r\n            if(statement.type == TokenType.jumpAlways || statement.type == TokenType.jumpIfFalse || \r\n                statement.type == TokenType.jumpIfTrue || statement.type == TokenType.jumpIfFalseAndLeaveOnStack || \r\n                statement.type == TokenType.jumpIfTrueAndLeaveOnStack || statement.type ==TokenType.extendedForLoopCheckCounterAndGetElement ){\r\n                let dest = statement.destination;\r\n                let label = labels.get(dest);\r\n                if(label == null){\r\n                    labels.set(dest, {\r\n                        number: lastLabelNumber++\r\n                    });\r\n                }\r\n            }\r\n            if(statement.type == TokenType.keywordSwitch){\r\n                for(let value in statement.destinationMap){\r\n                    let dest = statement.destinationMap[value];\r\n                    let label = labels.get(dest);\r\n                    if(label == null){\r\n                        labels.set(dest, {\r\n                            number: lastLabelNumber++\r\n                        });\r\n                    }                        \r\n                }\r\n                if(statement.defaultDestination != null){\r\n                    let label = labels.get(statement.defaultDestination);\r\n                    if(label == null){\r\n                        labels.set(statement.defaultDestination, {\r\n                            number: lastLabelNumber++\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n        let i = 0;\r\n\r\n        for (let statement of statements) {\r\n            s.push(this.printNode(statement, indent, i, labels));\r\n            i++;\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    printNode(node: Statement, indent: string, n: number, labels: Map<number, Label>): JQuery<HTMLElement> {\r\n\r\n        let s = indent;\r\n\r\n        let label = labels.get(n);\r\n        if(label != null){\r\n            s += \"<span style='font-weight: bold' class='label\" + label.number + \"'>Label&nbsp;<span style='color: green'>\" + label.number + \":</span></span><br>\";\r\n        }\r\n\r\n        if (node.position != null) {\r\n            s += \"(l\" + this.format3(node.position.line) + \",&nbsp;c\" + this.format3(node.position.column) + \"): \";\r\n        } else {\r\n            s += \"(l&nbsp;xxx,&nbsp;c&nbsp;xxx):\";\r\n        }\r\n        // s += \"<span style='fontweight: bold; color: darkgreen'>[\" + n + \"]</span>&nbsp;\";\r\n        s += \"<span style='fontweight: bold; color: #8080ff'>\" + TokenType[node.type] + \"</span>&nbsp;\";\r\n\r\n        let s1: string = \"\";\r\n        switch (node.type) {\r\n            case TokenType.localVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                s1 += \"StackPos: \" + node.stackposOfVariable;\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                s1 += \"v: \" + node.identifier;    \r\n            break;\r\n            case TokenType.pushAttribute:\r\n                s1 += \"Attribut: \" + node.attributeIdentifier + \", use THIS-Object: \" + node.useThisObject\r\n                break;\r\n            case TokenType.assignment:\r\n            case TokenType.plusAssignment:\r\n            case TokenType.minusAssignment:\r\n            case TokenType.multiplicationAssignment:\r\n            case TokenType.divisionAssignment:\r\n                s1 += \"Assignmenttype: \" + TokenTypeReadable[node.type] + \"&nbsp;&nbsp;\";\r\n                if(node.type == TokenType.assignment){\r\n                    s1 += \", leaveValueOnStack: \" + node.leaveValueOnStack;\r\n                }\r\n                \r\n                break;\r\n            case TokenType.binaryOp:\r\n            case TokenType.unaryOp:\r\n                s1 += \"Operator: \" + TokenTypeReadable[node.operator];\r\n                break;\r\n            case TokenType.pushConstant:\r\n                s1 += \"Value: \" + node.value;\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                s1 += \"Static class: \" + node.klass.identifier;\r\n                break;\r\n            case TokenType.castValue:\r\n                s1 += \"New Type: \" + node.newType.identifier;\r\n                break;\r\n            case TokenType.selectArrayElement:\r\n                break;\r\n            case TokenType.callMethod:\r\n                s1 += node.method.identifier;\r\n                s1 += \", StackframeBegin: \" + node.stackframeBegin\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                s1 += \"count: \" + node.popCount;\r\n                break;\r\n            case TokenType.return:\r\n                s1 += \"copyReturnValueToStackframePos0: \" + node.copyReturnValueToStackframePos0;\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n            case TokenType.jumpAlways:\r\n            case TokenType.jumpIfFalse:\r\n            case TokenType.jumpIfTrue:\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                let number: number = labels.get(node.destination).number;\r\n                s1 += \"destination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                s1 += \"amount: \" + node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.beginArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                break;\r\n            case TokenType.addToArray:\r\n                s1 += \"count: \" + node.numberOfElementsToAdd;\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                s1 += \", dimension: \" + node.dimension;\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                s1 += \"destinationMap: {\";\r\n                for(let key in node.destinationMap){\r\n                    let number: number = labels.get(node.destinationMap[key]).number;\r\n                    s1 += key + \": <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\" + \", \";\r\n                }\r\n\r\n                if(s1.endsWith(\", \")) s1 = s1.substring(0, s1.length - 2);\r\n\r\n                s1 += \"}\";\r\n                if(node.defaultDestination != null){\r\n                    let number = labels.get(node.defaultDestination).number;\r\n                    s1 += \", defaultDestination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                if(node.klass != null)\r\n                s1 += \"class: \" + node.klass.identifier + \", attribute: \" + node.attributeIdentifier;\r\n                break;\r\n            case TokenType.newObject: \r\n                s1 += \"class: \" + node.class.identifier;\r\n                break;\r\n        }\r\n\r\n\r\n        if(s1 != \"\") s += ` [${s1}]`;\r\n\r\n        if (node.stepFinished == true) {\r\n            s += \"::\"\r\n        }\r\n\r\n        s = \"<div>\" + s + \"</div>\";\r\n\r\n        let $div = jQuery(s);\r\n\r\n        node[\"$div\"] = $div;\r\n\r\n        return $div;\r\n    }\r\n\r\n    printVariable(v: Variable): string {\r\n        return v.type.identifier + \" \" + v.identifier + (v.stackPos == null ? \"\" :\" (sp: \" + v.stackPos + \")\");\r\n    }\r\n\r\n    format3(n: number):string{\r\n        if(n >= 100) return \"\" + n;\r\n        if(n >= 10) return \"&nbsp;\" + n;\r\n        return \"&nbsp;&nbsp;\" + n;\r\n    }\r\n\r\n}","import { Value } from \"../../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ConsoleEntry {\r\n\r\n    caption: string|JQuery<HTMLElement>; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: ConsoleEntry;\r\n    children: ConsoleEntry[];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    identifier: string;\r\n    value: Value;\r\n\r\n    $consoleEntry: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string|JQuery<HTMLElement>, value: Value, identifier: string, parent: ConsoleEntry, \r\n        private withBottomBorder: boolean, private color: string = null ) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n\r\n        this.identifier = identifier;\r\n\r\n        this.render();\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        this.$consoleEntry = jQuery('<div>');\r\n        this.$consoleEntry.addClass(\"jo_consoleEntry\");\r\n        this.$consoleEntry.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n        if(this.color != null){\r\n            this.$consoleEntry.css('background-color', this.color);\r\n        }\r\n\r\n        if(this.withBottomBorder){\r\n            this.$consoleEntry.addClass('jo_withBorder');\r\n        }\r\n\r\n        let $deFirstLine = jQuery('<div class=\"jo_ceFirstline\"></div>');\r\n\r\n        this.$consoleEntry.append($deFirstLine);\r\n\r\n\r\n        if (this.value != null && this.value.type != null && (this.value.type instanceof ArrayType ||\r\n            (this.value.type instanceof Klass && !(this.value.type instanceof Enum) && !(this.value.type == stringPrimitiveType))\r\n            || this.value.type instanceof Interface\r\n            )) {\r\n            this.canOpen = true;\r\n            this.$consoleEntry.addClass('jo_canOpen');\r\n            this.$consoleEntry.append(jQuery('<div class=\"jo_ceChildContainer\"></div>'));\r\n\r\n            this.$consoleEntry.find('.jo_ceFirstline').on('mousedown', (event) => {\r\n                if (this.value != null && this.value.value != null) {\r\n                    if (this.children == null) {\r\n                        this.onFirstOpening();\r\n                    }\r\n                    this.$consoleEntry.toggleClass('jo_expanded');\r\n                    this.isOpen = !this.isOpen;\r\n                } else {\r\n                    this.children = null;\r\n                }\r\n\r\n                event.stopPropagation();\r\n\r\n            });\r\n\r\n        } else {\r\n            if(this.caption == null && this.getLevel() == 0){\r\n                this.$consoleEntry.addClass('jo_cannotOpen');\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        let type = this.value.type;\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                let ro = <RuntimeObject>this.value.value;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                this.$consoleEntry.find('.jo_ceChildContainer').append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new ConsoleEntry(null, a[i], \"[\" + i + \"]\", this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n\r\n            }\r\n\r\n        } else if (type instanceof StaticClass) {\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let a of type.getAttributes(Visibility.private)) {\r\n                let ro = type.classObject;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof Interface) {\r\n\r\n            if(this.value.value != null && this.value.value instanceof RuntimeObject){\r\n\r\n                let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                    de.render();\r\n                    $childContainer.append(de.$consoleEntry);\r\n                }\r\n\r\n            } else {\r\n                this.children == null;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n\r\n        let $firstLine = this.$consoleEntry.find('.jo_ceFirstline');\r\n\r\n        let v = this.value;\r\n        \r\n        if (v == null) {\r\n            if(this.caption != null){\r\n                if(typeof this.caption == \"string\" ){\r\n                    $firstLine.append(jQuery('<span class=\"jo_ceCaption\">' + this.caption + \"</span>\"));\r\n                } else {\r\n                    let span = jQuery('<span class=\"jo_ceCaption\"></span>');\r\n                    span.append(this.caption);\r\n                    $firstLine.append(span);\r\n                }\r\n            } else {\r\n                $firstLine.append(jQuery('<span class=\"jo_ceNoValue\">Kein Wert zurückgegeben.</span>'));\r\n            }\r\n            return;\r\n        }\r\n        \r\n        let valueString = \"\";\r\n        if (v.value == null) {\r\n            valueString = \"null\";\r\n        } else {\r\n            valueString = v.type.debugOutput(v, 400);\r\n        }\r\n        \r\n        if(this.identifier != null){\r\n            $firstLine.append(jQuery('<span class=\"jo_ceIdentifier\">' + this.identifier + \":&nbsp;</span>\"));\r\n        }\r\n        $firstLine.append(jQuery('<span class=\"jo_ceValue\">' + valueString + \"</span>\"));\r\n    }\r\n\r\n    detachValue() {\r\n        this.value = undefined;\r\n        this.$consoleEntry.removeClass('jo_canOpen');\r\n        if(this.getLevel() == 0 && this.caption == null){\r\n            this.$consoleEntry.addClass('jo_cannotOpen');\r\n        }\r\n    }\r\n\r\n}","import { AdhocCompiler } from \"../../../compiler/AdhocCompiler.js\";\r\nimport { Error } from \"../../../compiler/lexer/Lexer.js\";\r\nimport { Heap, Value } from \"../../../compiler/types/Types.js\";\r\nimport { InterpreterState, Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { ConsoleEntry } from \"./ConsoleEntry.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { TextPosition, TokenType } from \"../../../compiler/lexer/Token.js\";\r\nimport { Program } from \"../../../compiler/parser/Program.js\";\r\nimport { Helper } from \"../Helper.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport class MyConsole {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n    history: string[] = [];\r\n    historyPos: number = 0;\r\n\r\n    timerHandle: any;\r\n    isDirty: boolean = false;\r\n    readyToExecute: boolean = false;\r\n\r\n    compiler: AdhocCompiler;\r\n\r\n    consoleEntries: ConsoleEntry[] = [];\r\n\r\n    errorDecoration: string[] = [];\r\n    $consoleTabHeading: JQuery<HTMLElement>;\r\n    $consoleTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>){\r\n        if($bottomDiv == null) return; // Console is only used to highlight exceptions\r\n\r\n        this.$consoleTabHeading = $bottomDiv.find('.jo_tabheadings>.jo_console-tab');\r\n        this.$consoleTab = $bottomDiv.find('.jo_tabs>.jo_consoleTab');\r\n    }\r\n\r\n    initConsoleClearButton(){\r\n\r\n        let that = this;\r\n\r\n        let $consoleClear = this.$consoleTabHeading.parent().find('.jo_console-clear');\r\n\r\n        this.$consoleTab.on('myshow', () => {\r\n            $consoleClear.show();\r\n            that.editor.layout();\r\n        });\r\n\r\n        this.$consoleTab.on('myhide', () => {\r\n            $consoleClear.hide();\r\n        });\r\n\r\n        $consoleClear.on('mousedown', (e) => {\r\n            e.stopPropagation();\r\n            that.clear();\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        if(this.$bottomDiv == null) return;\r\n\r\n        this.initConsoleClearButton();\r\n\r\n        let $editorDiv = this.$consoleTab.find('.jo_commandline');\r\n\r\n        this.editor = monaco.editor.create($editorDiv[0], {\r\n            value: [\r\n                ''\r\n            ].join('\\n'),\r\n            automaticLayout: false,\r\n            renderLineHighlight: \"none\",\r\n            guides: {\r\n                bracketPairs: false,\r\n                highlightActiveIndentation: false,\r\n                indentation: false\r\n            },\r\n            overviewRulerLanes: 0,\r\n            lineNumbers: 'off',\r\n            glyphMargin: false,\r\n            folding: false,\r\n            // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882\r\n            lineDecorationsWidth: 0,\r\n            lineNumbersMinChars: 0,\r\n            fixedOverflowWidgets: true,\r\n            language: 'myJava',\r\n\r\n            fontSize: 14,\r\n            //@ts-ignore\r\n            fontFamily: window.javaOnlineFont == null ? \"Consolas, Roboto Mono\" : window.javaOnlineFont,\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            occurrencesHighlight: false,\r\n            suggest: { \r\n                localityBonus: true,\r\n                snippetsPreventQuickSuggestions: false\r\n            },\r\n            minimap: {\r\n                enabled: false\r\n            },\r\n            scrollbar: {\r\n                vertical: 'hidden',\r\n                horizontal: 'hidden'\r\n            },\r\n            theme: \"myCustomThemeDark\"\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.layout();\r\n        \r\n        let that = this;\r\n\r\n        this.editor.addCommand(monaco.KeyCode.Enter, () => {\r\n\r\n            that.compileIfDirty();\r\n\r\n            if (that.readyToExecute) {\r\n                let command = that.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n\r\n                if(command == \"\"){\r\n                    return;\r\n                }\r\n\r\n                that.history.push(command);\r\n                that.historyPos = 0;\r\n\r\n                that.execute();\r\n\r\n                that.editor.setValue(\"\");\r\n\r\n            } else {\r\n                // TODO: Fehlermeldung!\r\n            }\r\n\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.UpArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos + 1);\r\n            if (nextHistoryPos >= 0) {\r\n                that.historyPos++;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.DownArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos - 1);\r\n            if (nextHistoryPos <= that.history.length - 1) {\r\n                that.historyPos--;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            } else {\r\n                that.editor.setValue(\"\");\r\n                that.historyPos = 0;\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.compiler = new AdhocCompiler(this.main);\r\n\r\n        let model = this.editor.getModel();\r\n        let lastVersionId = 0;\r\n\r\n        model.onDidChangeContent(() => {\r\n            let versionId = model.getAlternativeVersionId();\r\n\r\n            if (versionId != lastVersionId) {\r\n                that.isDirty = true;\r\n                lastVersionId = versionId;\r\n            }\r\n        });\r\n\r\n        this.startTimer();\r\n\r\n        this.$consoleTabHeading.on(\"mousedown\", ()=>{\r\n            Helper.showHelper(\"consoleHelper\", this.main);\r\n\r\n            setTimeout(() => {\r\n                that.editor.focus();\r\n            }, 500);\r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        this.stopTimer();\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n            this.timerHandle = null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.isDirty) {\r\n\r\n            let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n            let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n            let symbolTable = this.main.getDebugger().lastSymboltable;\r\n            let heap = this.main.getInterpreter().heap;\r\n\r\n            if (command.length > 0 && moduleStore != null) {\r\n\r\n                let compilation = this.compiler.compile(command, moduleStore, heap, symbolTable);\r\n\r\n                this.readyToExecute = compilation.errors.length == 0;\r\n\r\n                this.showErrors(compilation.errors);\r\n\r\n                this.isDirty = false;\r\n\r\n            } else {\r\n                this.showErrors([]);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    showErrors(errors: Error[]) {\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n\r\n        for (let error of errors) {\r\n            markers.push({\r\n                startLineNumber: error.position.line,\r\n                startColumn: error.position.column,\r\n                endLineNumber: error.position.line,\r\n                endColumn: error.position.column + error.position.length,\r\n                message: error.text,\r\n                severity: monaco.MarkerSeverity.Error\r\n            });\r\n\r\n        }\r\n\r\n        monaco.editor.setModelMarkers(this.editor.getModel(), 'Fehler', markers);\r\n\r\n    }\r\n\r\n    execute() {\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n        let module = this.compiler.module;\r\n        let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n        let program = module.mainProgram;\r\n\r\n        monaco.editor.colorize(command, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            // if(this.programHasMethodCalls(program)){\r\n                // this.executeInStepMode(interpreter, program, command);\r\n            // } else {\r\n                this.executeRapidly(interpreter, program, command);\r\n                interpreter.showProgramPointerAndVariables();\r\n            // }\r\n\r\n        });\r\n\r\n    }\r\n    programHasMethodCalls(program: Program): boolean {\r\n        \r\n        for(let statement of program.statements){\r\n            if(statement.type == TokenType.callMethod && statement.method.invoke == null){\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n\r\n    }\r\n\r\n    executeInStepMode(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        interpreter.pushCurrentProgram();\r\n\r\n        interpreter.currentProgram = program;\r\n        interpreter.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = interpreter.stack.length;\r\n        let oldInterpreterState = interpreter.state;\r\n\r\n        interpreter.setState(InterpreterState.paused);\r\n\r\n        interpreter.start(() => {\r\n\r\n            let stackTop: Value;\r\n            if (interpreter.stack.length > stacksizeBefore) {\r\n                stackTop = interpreter.stack.pop();\r\n\r\n                while (interpreter.stack.length > stacksizeBefore) {\r\n                    interpreter.stack.pop();\r\n                }\r\n\r\n            }\r\n\r\n            this.writeConsoleEntry(command, stackTop);\r\n\r\n            interpreter.setState(oldInterpreterState);\r\n            if (oldInterpreterState == InterpreterState.paused) {\r\n                interpreter.showProgramPointerAndVariables();\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    executeRapidly(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        let result = interpreter.evaluate(program);\r\n\r\n        if(result.error == null){\r\n            \r\n            this.writeConsoleEntry(command, result.value);\r\n\r\n        } else {\r\n\r\n            let $entry = jQuery('<div><div>' + command + '</div></div>');\r\n            $entry.append(jQuery('<div class=\"jo_console-error\"> ' + result.error + '</div>'));\r\n\r\n            this.writeConsoleEntry($entry, null)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showTab(){\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        this.$consoleTabHeading.trigger(mousePointer + \"down\");\r\n    }\r\n\r\n    writeConsoleEntry(command: string|JQuery<HTMLElement>, stackTop: Value, color: string = null) {\r\n\r\n        if(this.$consoleTab == null){\r\n            return;\r\n        }\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n\r\n        let commandEntry = new ConsoleEntry(command, null, null, null, stackTop == null, color);\r\n        this.consoleEntries.push(commandEntry);\r\n        consoleTop.append(commandEntry.$consoleEntry);\r\n\r\n        if(stackTop != null){\r\n            let resultEntry = new ConsoleEntry(null, stackTop, null, null, true, color);\r\n            this.consoleEntries.push(resultEntry);\r\n            consoleTop.append(resultEntry.$consoleEntry);\r\n        }\r\n\r\n        var height = consoleTop[0].scrollHeight;\r\n        consoleTop.scrollTop(height);\r\n\r\n    }\r\n\r\n    clear() {\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        consoleTop.children().remove(); // empty();\r\n        this.consoleEntries = [];\r\n    }\r\n\r\n    detachValues() {\r\n        for(let ce of this.consoleEntries){\r\n            ce.detachValue();\r\n        }\r\n    }\r\n\r\n    showError(m: Module, position: TextPosition) {\r\n\r\n        if(this.main instanceof Main){\r\n            if (m?.file?.name != this.main.projectExplorer.getCurrentlyEditedModule()?.file?.name) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealError' }\r\n\r\n            },\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealErrorWholeLine', isWholeLine: true }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n    clearErrors(){\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n        ]);\r\n    }\r\n\r\n    clearExceptions(){\r\n        if(this.$bottomDiv == null) return;\r\n        let $consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        $consoleTop.find('.jo_exception').parents('.jo_consoleEntry').remove();\r\n    }\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 800);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\")\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton);\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('jo_active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace, true);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MyConsole } from \"./console/MyConsole.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    programPrinter: ProgramPrinter;\r\n    console: MyConsole;\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n        if (this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab').length > 0) {\r\n            this.programPrinter = new ProgramPrinter(main, $bottomDiv);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_console-tab').length > 0) {\r\n            this.console = new MyConsole(main, $bottomDiv);\r\n        } else {\r\n            this.console = new MyConsole(main, null);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.programPrinter != null) this.programPrinter.initGUI();\r\n        if (this.console != null) this.console.initGUI();\r\n        if(this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n        let that = this;\r\n        jQuery(\".jo_pcodeTab\").on(\"myshow\", () => {\r\n            that.printCurrentlyExecutedModule();\r\n        });\r\n\r\n    }\r\n\r\n    printCurrentlyExecutedModule() {\r\n        let interpreter = this.main.getInterpreter();\r\n        if (interpreter.state == InterpreterState.running || interpreter.state == InterpreterState.paused) {\r\n            let module = interpreter.currentProgram?.module;\r\n            this.printModuleToBottomDiv(null, module);\r\n        }\r\n    }\r\n\r\n    printModuleToBottomDiv(currentWorkspace: Workspace, module: Module) {\r\n        if (this.programPrinter != null) this.programPrinter.printModuleToBottomDiv(currentWorkspace, module);\r\n    }\r\n\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_homeworkTabheading').trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_tabheadings').children().first().trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n    showHideDbBusyIcon(visible: boolean){\r\n        let displayValue: string = visible ? \"block\" : \"none\";\r\n        jQuery(\".jo_db-busy\").css(\"display\", displayValue);\r\n    }\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, getVisibilityUpTo, Interface, Visibility, StaticClass } from \"../../compiler/types/Class.js\";\r\nimport { SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' '];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"]?.widget;\r\n            if (sw != null && sw._widget != null && this.first) {\r\n                sw._widget.toggleDetails();\r\n                this.first = false;\r\n            }\r\n            // sw.toggleSuggestionDetails();\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.toggleSuggestionDetails', {});\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.triggerSuggest', {});\r\n            // this.main.monaco.trigger(monaco.KeyMod.CtrlCmd + monaco.KeyCode.Space, 'type', {});\r\n        }, 300);\r\n\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        this.isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(this.isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = this.isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        if (context.triggerCharacter == \" \") {\r\n            let newMatch = textUntilPosition.match(/.*(new )$/);\r\n            if (newMatch != null) {\r\n                return this.getCompletionItemsAfterNew(module);\r\n            }\r\n            let classMatch = textUntilPosition.match(/.*(class )[\\wöäüÖÄÜß<> ,]*[\\wöäüÖÄÜß<> ] $/);\r\n            if (classMatch != null) {\r\n\r\n                let classIndex = textUntilPosition.lastIndexOf('class');\r\n                let countLower = 0;\r\n                let countGreater = 0;\r\n                for (let i = classIndex; i < textUntilPosition.length; i++) {\r\n                    let c = textUntilPosition.charAt(i);\r\n                    switch (c) {\r\n                        case '<': countLower++; break;\r\n                        case '>': countGreater++; break;\r\n                    }\r\n                }\r\n\r\n                return this.getCompletionItemsAfterClass(module, countLower > countGreater, textAfterPosition);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*\\(?)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        let leftBracketAlreadyThere = identifierAndBracketAfterCursor.endsWith(\"(\");\r\n\r\n        // First guess:  dot followed by part of Identifier?\r\n        let dotMatch = textUntilPosition.match(/.*(\\.)([\\wöäüÖÄÜß]*)$/);\r\n        if (dotMatch != null) {\r\n            if (this.isConsole) {\r\n                this.main.getBottomDiv()?.console?.compileIfDirty();\r\n            } else {\r\n                this.main.compileIfDirty();\r\n            }\r\n        }\r\n\r\n        let symbolTable = this.isConsole ? this.main.getDebugger().lastSymboltable : module.findSymbolTableAtPosition(position.lineNumber, position.column);\r\n        let classContext = symbolTable == null ? null : symbolTable.classContext;\r\n\r\n\r\n        if (dotMatch != null) {\r\n            return this.getCompletionItemsAfterDot(dotMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere);\r\n        }\r\n\r\n        let varOrClassMatch = textUntilPosition.match(/.*[^\\wöäüÖÄÜß]([\\wöäüÖÄÜß]*)$/);\r\n\r\n        if (varOrClassMatch == null) {\r\n            varOrClassMatch = textUntilPosition.match(/^([\\wöäüÖÄÜß]*)$/);\r\n        }\r\n\r\n        if (varOrClassMatch != null) {\r\n\r\n            return this.getCompletionItemsInsideIdentifier(varOrClassMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere, symbolTable);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getCompletionItemsAfterNew(module: Module): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        for (let i = 0; i < completionItems.length; i++) {\r\n            let item = completionItems[i];\r\n            if (item.detail.match('Primitiv')) {\r\n                completionItems.splice(i, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n            if (item[\"generic\"]) {\r\n                item.insertText += \"<>($0)\";\r\n            } else {\r\n                item.insertText += \"($0)\";\r\n            }\r\n            item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n            item.command = {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            };\r\n\r\n        }\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterClass(module: Module, insideGenericParameterDefinition: boolean, textAfterPosition: string): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let startsWithCurlyBrace: boolean = textAfterPosition.trimLeft().startsWith(\"{\");\r\n\r\n        completionItems = completionItems.concat([\r\n            {\r\n                label: \"extends\",\r\n                insertText: \"extends $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"extends-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"implements\",\r\n                insertText: \"implements $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"implements-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"{}\",\r\n                insertText: \"{\\n\\t$0\\n}\",\r\n                detail: \"Klassenrumpf\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            },\r\n        ]);\r\n\r\n        // completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsInsideIdentifier(varOrClassMatch: RegExpMatchArray, position: monaco.Position, module: Module, identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean, symbolTable: SymbolTable): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let text = varOrClassMatch[1];\r\n\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - text.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        if (symbolTable?.classContext != null && symbolTable?.method == null && symbolTable.classContext instanceof Klass) {\r\n            completionItems = completionItems.concat(this.getOverridableMethodsCompletion(symbolTable.classContext));\r\n        }\r\n\r\n        if (symbolTable != null) {\r\n            completionItems = completionItems.concat(symbolTable.getLocalVariableCompletionItems(rangeToReplace).map(ci => {\r\n                ci.sortText = \"aaa\" + ci.label;\r\n                return ci;\r\n            }));\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, rangeToReplace));\r\n\r\n        if (classContext != null && symbolTable?.method != null) {\r\n            completionItems = completionItems.concat(\r\n                classContext.getCompletionItems(Visibility.private, leftBracketAlreadyThere, identifierAndBracketAfterCursor, rangeToReplace, symbolTable.method)\r\n                    .map(ci => {\r\n                        ci.sortText = \"aa\" + ci.label;\r\n                        return ci;\r\n                    })\r\n            );\r\n            completionItems.push(\r\n                {\r\n                    label: \"super\",\r\n                    filterText: \"super\",\r\n                    insertText: \"super.\",\r\n                    detail: \"Aufruf einer Methode einer Basisklasse\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined,\r\n                    command: {\r\n                        id: \"editor.action.triggerSuggest\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    }    \r\n                }\r\n            )\r\n        } else {\r\n            // Use filename to generate completion-item for class ... ?\r\n            let name = module.file?.name;\r\n            if (name != null) {\r\n                if (name.endsWith(\".java\")) name = name.substr(0, name.indexOf(\".java\"));\r\n                let m = name.match(/([\\wöäüÖÄÜß]*)$/);\r\n                if (module.classDefinitionsAST.length == 0 && m != null && m.length > 0 && m[0] == name && name.length > 0) {\r\n                    name = name.charAt(0).toUpperCase() + name.substring(1);\r\n                    completionItems.push({\r\n                        label: \"class \" + name,\r\n                        filterText: \"class\",\r\n                        insertText: \"class ${1:\" + name + \"} {\\n\\t$0\\n}\\n\",\r\n                        detail: \"Definition der Klasse \" + name,\r\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                        kind: monaco.languages.CompletionItemKind.Snippet,\r\n                        range: undefined\r\n                    },\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.getKeywordCompletion(symbolTable));\r\n\r\n\r\n        // console.log(\"Complete variable/Class/Keyword \" + text);\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterDot(dotMatch: RegExpMatchArray, position: monaco.Position, module: Module,\r\n        identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let textAfterDot = dotMatch[2];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let tStatic = module.getTypeAtPosition(position.lineNumber, dotColumn);\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        if (tStatic == null) return null;\r\n\r\n        let { type, isStatic } = tStatic;\r\n\r\n\r\n        // console.log(\"Complete element.praefix; praefix: \" + textAfterDot + \", Type: \" + (type == null ? null : type.identifier));\r\n\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(type, classContext);\r\n\r\n            if (isStatic) {\r\n                return Promise.resolve({\r\n                    suggestions: type.staticClass.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace)\r\n                });\r\n            } else {\r\n                return Promise.resolve({\r\n                    suggestions: type.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace, null)\r\n                });\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n            return Promise.resolve({\r\n                suggestions: type.getCompletionItems(leftBracketAlreadyThere,\r\n                    identifierAndBracketAfterCursor, rangeToReplace)\r\n            });\r\n        }\r\n\r\n        if (type instanceof ArrayType) {\r\n            return Promise.resolve({\r\n                suggestions: [\r\n                    {\r\n                        label: \"length\",\r\n                        filterText: \"length\",\r\n                        kind: monaco.languages.CompletionItemKind.Field,\r\n                        insertText: \"length\",\r\n                        range: rangeToReplace,\r\n                        documentation: {\r\n                            value: \"Anzahl der Elemente des Arrays\"\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getKeywordCompletion(symbolTable: SymbolTable): monaco.languages.CompletionItem[] {\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n        if (!this.isConsole && (symbolTable?.classContext == null || symbolTable?.method != null))\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"while(Bedingung){Anweisungen}\",\r\n                    detail: \"while-Wiederholung\",\r\n                    filterText: 'while',\r\n                    // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                    insertText: \"while($1){\\n\\t$0\\n}\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for( $1 ; $2 ; $3 ){\\n\\t$0\\n}\",\r\n                    detail: \"for-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(int i = 0; i < 10; i++){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for(int ${1:i} = 0; ${1:i} < ${2:10}; ${1:i}++){\\n\\t$0\\n}\",\r\n                    detail: \"Zähl-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"switch(){case...}\",\r\n                    // insertText: \"switch(${1:Selektor}){\\n\\tcase ${2:Wert_1}: {\\n\\t\\t ${3:Anweisungen}\\n\\t\\t}\\n\\tcase ${4:Wert_2}: {\\n\\t\\t ${0:Anweisungen}\\n\\t\\t}\\n}\",\r\n                    insertText: \"switch($1){\\n\\tcase $2:\\n\\t\\t $3\\n\\t\\tbreak;\\n\\tcase $4:\\n\\t\\t $5\\n\\t\\tbreak;\\n\\tdefault:\\n\\t\\t $0\\n}\",\r\n                    detail: \"switch-Anweisung\",\r\n                    filterText: 'switch',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){}\",\r\n                    // insertText: \"if(${1:Bedingung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"if($1){\\n\\t$0\\n}\",\r\n                    detail: \"Bedingung\",\r\n                    filterText: 'if',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){} else {}\",\r\n                    insertText: \"if($1){\\n\\t$2\\n}\\nelse {\\n\\t$0\\n}\",\r\n                    detail: \"Zweiseitige Bedingung\",\r\n                    filterText: 'if',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"else {}\",\r\n                    insertText: \"else {\\n\\t$0\\n}\",\r\n                    detail: \"else-Zweig\",\r\n                    filterText: 'el',\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n            ]);\r\n\r\n        if (symbolTable?.classContext == null || symbolTable?.method != null) {\r\n\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"instanceof\",\r\n                    insertText: \"instanceof $0\",\r\n                    detail: \"instanceof-Operator\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"print\",\r\n                    insertText: \"print($1);$0\",\r\n                    detail: \"Ausgabe (ggf. mit Farbe \\nals zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"println\",\r\n                    insertText: \"println($1);$0\",\r\n                    detail: \"Ausgabe mit Zeilenumbruch (ggf. mit \\nFarbe als zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n\r\n            ]);\r\n        }\r\n\r\n        if (!this.isConsole && (symbolTable == null || symbolTable.classContext == null)) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"class\",\r\n                    filterText: \"class\",\r\n                    insertText: \"class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public class\",\r\n                    filterText: \"public class\",\r\n                    insertText: \"public class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Öffentliche Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n\r\n            ]);\r\n        } else if (!this.isConsole && symbolTable?.method == null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"public\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public \",\r\n                    detail: \"Schlüsselwort public\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public void method(){}\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public ${1:void} ${2:Bezeichner}(${3:Parameter}) {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Methodendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"protected\",\r\n                    filterText: \"protected\",\r\n                    insertText: \"protected \",\r\n                    detail: \"Schlüsselwort protected\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"static\",\r\n                    filterText: \"static\",\r\n                    insertText: \"static \",\r\n                    detail: \"Schlüsselwort static\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"private\",\r\n                    filterText: \"private\",\r\n                    insertText: \"private \",\r\n                    detail: \"Schlüsselwort private\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        if (symbolTable != null && symbolTable.method != null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"return\",\r\n                    filterText: \"return\",\r\n                    insertText: \"return\",\r\n                    detail: \"Schlüsselwort return\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n    getOverridableMethodsCompletion(classContext: Klass) {\r\n\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let methods: Method[] = [];\r\n        let c = classContext.baseClass;\r\n        while (c != null) {\r\n            methods = methods.concat(c.methods.filter((m) => {\r\n                if (m.isAbstract || (m.program == null && m.invoke == null) || m.identifier.startsWith('onMouse') || m.identifier.startsWith('onKey')) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }));\r\n            c = c.baseClass;\r\n        }\r\n\r\n        for (let i of classContext.implements) {\r\n            methods = methods.concat(i.getMethods());\r\n        }\r\n\r\n        for (let m of methods) {\r\n\r\n            let alreadyImplemented = false;\r\n            for (let m1 of classContext.methods) {\r\n                if (m1.signature == m.signature) {\r\n                    alreadyImplemented = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (alreadyImplemented) continue;\r\n\r\n            let label: string = (m.isAbstract ? \"implement \" : \"override \") + m.getCompletionLabel();\r\n            let filterText = m.identifier;\r\n            let insertText = Visibility[m.visibility] + \" \" + (m.getReturnType() == null ? \"void\" : m.getReturnType().identifier) + \" \";\r\n            insertText += m.identifier + \"(\";\r\n            for (let i = 0; i < m.getParameterList().parameters.length; i++) {\r\n                let p = m.getParameterList().parameters[i];\r\n                insertText += m.getParameterType(i).identifier + \" \" + p.identifier;\r\n                if (i < m.getParameterCount() - 1) {\r\n                    insertText += \", \";\r\n                }\r\n            }\r\n            insertText += \") {\\n\\t$0\\n}\";\r\n\r\n            keywordCompletionItems.push(\r\n                {\r\n                    label: label,\r\n                    detail: (m.isAbstract ? \"Implementiere \" : \"Überschreibe \") + \"die Methode \" + label + \" der Basisklasse.\",\r\n                    filterText: filterText,\r\n                    insertText: insertText,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            );\r\n\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n}","import { Klass, Interface, Visibility } from \"./Class.js\";\r\nimport { Method, Attribute, Type, PrimitiveType, Variable } from \"./Types.js\";\r\nimport { objectType } from \"./PrimitiveTypes.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { formatAsJavadocComment } from \"../../tools/StringTools.js\";\r\n\r\nexport function getDeclarationAsString(element: Klass | Interface | Method | Attribute | Variable,\r\n    indent: string = \"\", short: boolean = false): string {\r\n\r\n    if (element instanceof Klass) {\r\n\r\n        if (element.isTypeVariable) {\r\n            return getTypeVariableDeclaration(element);\r\n        }\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\") {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                // s += indent + \"/**  \\n\" + element.documentation + \"  \\n**/  \\n\" + indent;\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n        if (element.isAbstract) s += \"abstract \";\r\n        s += \"class \" + element.identifier + \" \";\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            s += getGenericParameterDefinition(element);\r\n        }\r\n\r\n\r\n        if (element.baseClass != null && element.baseClass.identifier != \"Object\") {\r\n            s += \"extends \" + element.baseClass.identifier + \" \";\r\n            if (element.baseClass.typeVariables.length > 0) {\r\n                s += getGenericParameterDefinition(element.baseClass);\r\n            }\r\n        }\r\n\r\n        if (element.implements != null && element.implements.length > 0) {\r\n            s += \"implements \";\r\n            for (let i = 0; i < element.implements.length; i++) {\r\n                s += element.implements[i].identifier;\r\n                if (element.implements[i].typeVariables.length > 0) {\r\n                    s += getGenericParameterDefinition(element.implements[i]);\r\n                }\r\n                if (i < element.implements.length - 1) {\r\n                    s += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (short) return s;\r\n\r\n        s += indent + \"{\\n  \";\r\n\r\n        for (let a of element.getAttributes(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let a of element.staticClass.getAttributes(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n        for (let m of element.getMethods(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let m of element.staticClass.getMethods(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n\r\n        s += \"\\n}\";\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    if (element instanceof Interface) {\r\n\r\n        let decl = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                decl += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                decl += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        decl += indent + \"interface \" + element.identifier;\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            decl += getGenericParameterDefinition(element);\r\n        }\r\n\r\n        if (element.extends != null && element.extends.length > 0) {\r\n            decl += \"extends \";\r\n            for (let i = 0; i < element.extends.length; i++) {\r\n                decl += element.extends[i].identifier;\r\n                if (element.extends[i].typeVariables.length > 0) {\r\n                    decl += getGenericParameterDefinition(element.extends[i]);\r\n                }\r\n                if (i < element.extends.length - 1) {\r\n                    decl += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!short) {\r\n\r\n            decl += \"{\\n\";\r\n\r\n            for (let m of element.methods) {\r\n                decl += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n\r\n            decl += \"\\n}\";\r\n        }\r\n\r\n        return decl;\r\n\r\n    }\r\n\r\n    if (element instanceof Attribute) {\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        s += getTypeIdentifier(element.type) + \" \" + element.identifier;\r\n\r\n        return s;\r\n    }\r\n\r\n    if (element instanceof Method) {\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        if (element.getReturnType() != null) {\r\n            s += getTypeIdentifier(element.getReturnType()) + \" \";\r\n        } else {\r\n            s += element.isConstructor ? \"\" : \"void \";\r\n        }\r\n\r\n        s += element.identifier + \"(\";\r\n\r\n        let parameters = element.getParameterList().parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            let type: Type = element.getParameterType(i);\r\n\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            s += getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n\r\n            if (i < parameters.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        s += \")\";\r\n\r\n        return s;\r\n\r\n\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nfunction getTypeVariableDeclaration(element: Klass) {\r\n    let s: string = element.identifier;\r\n\r\n    if (element.isGenericVariantFrom != objectType) s += \" extends \" + getTypeIdentifier(element.isGenericVariantFrom);\r\n    if (element.implements.length > 0) {\r\n        let implList = element.implements.filter(impl => element.isGenericVariantFrom.implements.indexOf(impl) < 0)\r\n            .map(impl => getTypeIdentifier(impl)).join(\", \");\r\n        if (implList != \"\") {\r\n            s += \" implements \" + implList;\r\n        }\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if (type instanceof Klass || type instanceof Interface) {\r\n        if (type.typeVariables.length > 0) {\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type.isGenericVariantFrom?.identifier) : type.identifier)\r\n                + \"<\";\r\n            s += type.typeVariables.map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n\r\nexport function getGenericParameterDefinition(element: Klass | Interface): string {\r\n\r\n    let s: string = \"\";\r\n\r\n    if (element.typeVariables.length > 0) {\r\n        s = \"<\";\r\n\r\n        let typeList: string[] = [];\r\n        for (let tv of element.typeVariables) {\r\n            let t: string = tv.type.identifier;\r\n            let k: Klass = tv.type;\r\n            if (k.isGenericVariantFrom != null && k.isGenericVariantFrom.identifier != \"Object\") {\r\n                t += \" extends \" + k.isGenericVariantFrom.identifier;\r\n            }\r\n            if (k.implements != null) {\r\n\r\n                let implList = k.implements;\r\n                if (k.isGenericVariantFrom != null) {\r\n                    implList = implList.filter(impl => k.isGenericVariantFrom.implements.indexOf(impl) < 0);\r\n                }\r\n\r\n                for (let im of implList) {\r\n                    t += \" & \" + im.identifier;\r\n                }\r\n            }\r\n            typeList.push(t);\r\n        }\r\n\r\n        s += typeList.join(\", \");\r\n        s += \"> \";\r\n    }\r\n\r\n    return s;\r\n}","import { Main } from \"../Main.js\";\r\nimport { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { sign } from \"crypto\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { getTypeIdentifier } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model == this.main.getBottomDiv()?.console?.editor?.getModel());\r\n\r\n        if (!isConsole && model != this.main.getMonacoEditor().getModel()) {\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                if (isConsole) {\r\n                    this.main.getBottomDiv()?.console?.compileIfDirty();\r\n                } else {\r\n                    this.main.compileIfDirty();\r\n                }\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        if ((typeof methodCallPosition.possibleMethods) == \"string\") {\r\n            signatureInformationList = signatureInformationList.concat(this.makeIntrinsicSignatureInformation(<string>methodCallPosition.possibleMethods, parameterIndex));\r\n        } else {\r\n            for (let method of methodCallPosition.possibleMethods) {\r\n                let m = <Method>method;\r\n                if (m.getParameterCount() > parameterIndex) {\r\n\r\n                    signatureInformationList = signatureInformationList.concat(this.makeSignatureInformation(m));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n    makeIntrinsicSignatureInformation(method: string, parameterIndex: number): monaco.languages.SignatureInformation[] {\r\n\r\n        switch (method) {\r\n            case \"while\":\r\n                return [\r\n                    {\r\n                        label: \"while(Bedingung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit Anfangsbedingung (while-loop)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                        ]\r\n                    }];\r\n            case \"if\":\r\n                return [\r\n                    {\r\n                        label: \"if(Bedingung){ Anweisungen1 } else { Anweisungen2 }\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Ist die Bedingung erfüllt (d.h. hat sie den Wert true), so werden die Anweisungen1 ausgeführt. Trifft die Bedingung nicht zu (d.h. hat sie den Wert false), so werden die Anweisungen2 ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"switch\":\r\n                return [\r\n                    {\r\n                        label: \"switch(Selektor){case Wert_1: Anweisungen1; break; case Wert_2 Anweisungen2; break; default: Defaultanweisungen; break;}\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Selektor\", documentation: \"Der Wert des Selektor-Terms wird ausgewertet. Hat er den Wert Wert_1, so werden die Anweisungen1 ausgeführt. Hat er den Wert Wert_2, so werden die Anweisungen2 ausgeführt usw. Hat er keinen der bei case... aufgeführten Werte, so werden die Defaultanweisungen ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"for\":\r\n                return [\r\n                    {\r\n                        label: \"for(Startanweisung; Bedingung; Anweisung am Ende jeder Wiederholung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit for (for-loop)\",\r\n                        parameters: [\r\n                            { label: \"Startanweisung\", documentation: \"Diese Anweisung wird vor der ersten Wiederholung einmal ausgeführt.\" },\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                            { label: \"Anweisung am Ende jeder Wiederholung\", documentation: \"Diese Anweisung wird stets am Ende jeder Wiederholung ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"print\":\r\n                let methods: monaco.languages.SignatureInformation[] =\r\n                    [\r\n                        {\r\n                            label: \"print(text: String, color: String)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255)) oder statisches Attribut der Klasse Color, z.B. Color.red\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String, color: int)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe als int-Wert kodiert, z.B. 0xff00ff\" },\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String)\",\r\n                            documentation: \"Gibt Text in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                            ]\r\n                        }\r\n                    ];\r\n                return methods;\r\n            case \"println\":\r\n\r\n                return [\r\n                    {\r\n                        label: \"println(text: String, color: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255) oder statisches Attribut der Klasse Color, z.B. Color.red)\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String, color: int)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: int\", documentation: \"Farbe als int-kodierter Wert, z.B. 0xffffff\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                        ]\r\n                    },\r\n                ];\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeSignatureInformation(method: Method): monaco.languages.SignatureInformation[] {\r\n\r\n        let label: string = \"\";\r\n\r\n        if (method.getReturnType() != null && !method.isConstructor) {\r\n            label += getTypeIdentifier(method.getReturnType()) + \" \";\r\n        }\r\n\r\n        label += method.identifier + \"(\";\r\n\r\n        let parameterInformationList: monaco.languages.ParameterInformation[] = [];\r\n\r\n        let pl = method.getParameterList().parameters;\r\n\r\n        for (let i = 0; i < pl.length; i++) {\r\n\r\n            let p = pl[i];\r\n            let posFrom = label.length;\r\n            let type = p.type;\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            let pLabel = getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n            label += pLabel;\r\n            let posTo = label.length;\r\n\r\n            if (i < pl.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n            let pi: monaco.languages.ParameterInformation = {\r\n                label: [posFrom, posTo],\r\n                documentation: \"\" //Test: Parameter documentation\"\r\n            };\r\n\r\n            parameterInformationList.push(pi);\r\n\r\n        }\r\n\r\n\r\n\r\n        label += \")\";\r\n\r\n        return [{\r\n            label: label,\r\n            parameters: parameterInformationList,\r\n            documentation: method.documentation == null ? \"\" : method.documentation\r\n        }]\r\n\r\n    }\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString, getGenericParameterDefinition } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"|\": \"```\\na | b\\n```  \\n (sprich: 'a or b') berechnet die **bitweise oder-Verknüpfung** der Werte a und b.\",\r\n        \"&\": \"```\\na & b\\n```  \\n (sprich: 'a und b') berechnet die **bitweise und-Verknüpfung** der Werte a und b.\",\r\n        \"^\": \"```\\na ^ b\\n```  \\n (sprich: 'a xor b') berechnet die **bitweise exklusiv-oder-Verknüpfung** der Werte a und b.\",\r\n        \">>\": \"```\\na >> b\\n```  \\n (sprich: 'a right shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach rechts verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a/(2 hoch b).\",\r\n        \"<<\": \"```\\na >> b\\n```  \\n (sprich: 'a left shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach links verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a*(2 hoch b).\",\r\n        \"~\": \"```\\n~a\\n```  \\n (sprich: 'nicht a') berechnet den Wert, der entsteht, wenn man **alle Bits von a umkehrt**.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwort ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n        \"var\": \"```\\nvar\\n```  \\nWird einer Variable beim Deklarieren sofort ein Startwert zugewiesen (z.B. Circle c = new Circle(100, 100, 10)), so kann statt des Datentyps das Schlüsselwort ```var``` verwendet werden (also var c = new Circle(100, 100, 10)).\",\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null && element.identifier != \"var\") {\r\n            if (element instanceof Klass || element instanceof Method || element instanceof Interface\r\n                || element instanceof Attribute) {\r\n                declarationAsString = getDeclarationAsString(element);\r\n            } else if (element instanceof PrimitiveType) {\r\n                declarationAsString = \"```\\n\" + element.identifier + \"\\n```  \\nprimitiver Datentyp: \" + element.description + \"\";\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: declarationAsString }],\r\n                }\r\n            } else {\r\n                // Variable\r\n                let typeIdentifier: string = element?.type?.identifier;\r\n                if(element?.type instanceof Klass || element?.type instanceof Interface){\r\n                    typeIdentifier += \" \" + getGenericParameterDefinition(element.type);\r\n                }\r\n\r\n                if (typeIdentifier == null) {\r\n                    typeIdentifier = \"\";\r\n                } else {\r\n                    typeIdentifier += \" \";\r\n                }\r\n\r\n                declarationAsString = typeIdentifier + element?.identifier;\r\n            }\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n        let state = this.editor.main.getInterpreter().state;\r\n\r\n        let value: string = null;\r\n\r\n        if (state == InterpreterState.paused) {\r\n            let evaluator = this.editor.main.getCurrentWorkspace().evaluator;\r\n\r\n            let identifier: string = this.widenDeclaration(model, position, element?.identifier);\r\n\r\n            if(identifier == null){\r\n                return null;\r\n            }\r\n\r\n            let result = evaluator.evaluate(identifier);\r\n            if (result.error == null && result.value != null) {\r\n                value = result.value.type.debugOutput(result.value);\r\n                declarationAsString = identifier;\r\n            }\r\n\r\n        }\r\n\r\n        let contents = [];\r\n\r\n        if (value == null && declarationAsString.length == 0) {\r\n            return null;\r\n        }\r\n\r\n        if (value != null) {\r\n            if (value.length + declarationAsString.length > 40) {\r\n                contents.push({ value: '```\\n' + declarationAsString + ' ==\\n```' });\r\n                contents.push({ value: '```\\n' + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            } else {\r\n                contents.push({ value: '```\\n' + declarationAsString + \" == \" + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            }\r\n        } else {\r\n            contents.push({ value: '```\\n' + declarationAsString + '\\n```' });\r\n        }\r\n\r\n        let range = null;\r\n\r\n        return {\r\n            range: range,\r\n            contents: contents,\r\n        }\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyColorProvider implements monaco.languages.DocumentColorProvider {\r\n    \r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    provideDocumentColors(model: monaco.editor.ITextModel, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorInformation[]> {\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        let isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n    \r\n        if(this.main.getCompiler() == null){\r\n            let that = this;\r\n            let i = 3;\r\n            return new Promise(function(resolve, reject){\r\n\r\n                let f = () => {\r\n                    if(that.main.getCompiler() != null){\r\n                        that.main.compileIfDirty();\r\n                        resolve(module.colorInformation);\r\n                    } else {\r\n                        i--;\r\n                        if(i == 0){\r\n                            resolve([]);\r\n                        } else {\r\n                            setTimeout(f, 500);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                setTimeout(f, 500);       \r\n            })\r\n        }\r\n\r\n        this.main.compileIfDirty();\r\n        \r\n        return module.colorInformation;\r\n\r\n    }\r\n\r\n    provideColorPresentations(model: monaco.editor.ITextModel, colorInfo: monaco.languages.IColorInformation, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorPresentation[]> {\r\n        var color = colorInfo.color;\r\n        var oldColor: string = model.getValueInRange(colorInfo.range);\r\n\r\n        var red256 = Math.round(color.red * 255);\r\n        var green256 = Math.round(color.green * 255);\r\n        var blue256 = Math.round(color.blue * 255);\r\n        var label;\r\n\r\n        let hex6Digits = this.toHex2Digits(red256) + this.toHex2Digits(green256) + this.toHex2Digits(blue256);\r\n        let rgbCommaSeparated = red256 + ', ' + green256 + ', ' + blue256;\r\n\r\n        if(oldColor.startsWith('#')){\r\n            label = '#' + hex6Digits; \r\n        } else if(oldColor.startsWith('0x') ){\r\n            label = '0x' + hex6Digits;\r\n        } else if(oldColor.startsWith('rgb')){\r\n            if(color.alpha < 0.999){\r\n                label = 'rgba(' + rgbCommaSeparated + ', ' + color.alpha + ')';\r\n            } else {\r\n                label = 'rgb(' + rgbCommaSeparated + ')';\r\n            }\r\n        } else if(oldColor.startsWith(\"new\") || oldColor.startsWith('Color')){\r\n            label = 'new Color(' + rgbCommaSeparated + ')';\r\n        }\r\n\r\n        return [\r\n            {\r\n                label: label\r\n            }\r\n        ];\r\n    }\r\n\r\n    toHex2Digits(n: number){\r\n        let hex = n.toString(16);\r\n        while(hex.length < 2){\r\n            hex = '0' + hex;\r\n        }\r\n        return hex;\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { MySemanticTokenProvider } from \"./MySemanticTokenProvider.js\";\r\nimport { MyColorProvider } from \"./MyColorProvider.js\";\r\n\r\nexport type HistoryEntry = {\r\n    module_id: number,\r\n    workspace_id: number,\r\n    position: monaco.Position;\r\n}\r\n\r\nexport class Editor implements monaco.languages.RenameProvider {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    highlightCurrentMethod: boolean = true;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    lastPosition: HistoryEntry;\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineMyJava();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'print', foreground: 'dcdcaa', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: 'b5cea8' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: '9cdcfe' },\r\n                { token: 'statement', foreground: 'bb96c0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '68bed4', fontStyle: 'bold' },\r\n                { token: 'string3', foreground: 'ff0000' },\r\n\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n\r\n                // semantic tokens:\r\n                {token: 'property', foreground: 'ffffff' ,fontStyle: 'bold'},\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightMethod\": \"#2b2b7d\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'print', foreground: '811f3f', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '001080' },\r\n                { token: 'statement', foreground: '8000e0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightMethod\": \"#babaec\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'myJava',\r\n            \"semanticHighlighting.enabled\": true,\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            //@ts-ignore\r\n            fontFamily: window.javaOnlineFont == null ? \"Consolas, Roboto Mono\" : window.javaOnlineFont,\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"advanced\",\r\n            // renderWhitespace: \"boundary\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n            tabSize: 3,\r\n            insertSpaces: true,\r\n            detectIndentation: false,\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.onKeyDown((e: monaco.IKeyboardEvent) => {\r\n            let state = this.main.getInterpreter().state;\r\n\r\n            if ([InterpreterState.done, InterpreterState.error, InterpreterState.not_initialized].indexOf(state) < 0) {\r\n\r\n                if (e.code.indexOf(\"Arrow\") >= 0 || e.code.indexOf(\"Page\") >= 0) return; // don't react to Cursor keys\r\n\r\n                this.main.getActionManager().trigger(\"interpreter.stop\");\r\n            }\r\n        });\r\n\r\n        // this.uri = monaco.Uri.from({ path: '/file1.java', scheme: 'file' })\r\n        // this.modelJava = monaco.editor.createModel(\"\", \"myJava\", this.uri);\r\n        // this.editor.setModel(this.modelJava);\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n        if (!this.isEmbedded) {\r\n\r\n            let _main: Main = <Main>this.main;\r\n\r\n            _main.windowStateManager.registerBackButtonListener((event: PopStateEvent) => {\r\n                let historyEntry: HistoryEntry = <HistoryEntry>event.state;\r\n                if(event.state == null) return;\r\n                let workspace: Workspace = _main.workspaceList.find((ws) => ws.id == historyEntry.workspace_id);\r\n                if(workspace == null) return;\r\n                let module: Module = workspace.moduleStore.findModuleById(historyEntry.module_id);\r\n                if(module == null) return; \r\n\r\n                // console.log(\"Processing pop state event, returning to module \" + historyEntry.module_id);\r\n\r\n                if(workspace != _main.currentWorkspace) \r\n                {\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setWorkspaceActive(workspace);\r\n                    that.dontPushNextCursorMove--;\r\n                }\r\n                if(module != _main.getCurrentlyEditedModule()){\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setModuleActive(module);\r\n                    that.dontPushNextCursorMove--;\r\n                } \r\n                that.dontPushNextCursorMove++;\r\n                that.editor.setPosition(historyEntry.position);\r\n                that.editor.revealPosition(historyEntry.position);\r\n                that.dontPushNextCursorMove--;\r\n                that.pushHistoryState(true, historyEntry);\r\n            });\r\n        }\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            let currentModelId = this.main.getCurrentlyEditedModule()?.file?.id;\r\n            if(currentModelId == null) return;\r\n            let pushNeeded = this.lastPosition == null\r\n                || event.source == \"api\"\r\n                || currentModelId != this.lastPosition.module_id\r\n                || Math.abs(this.lastPosition.position.lineNumber - event.position.lineNumber) > 20;\r\n            \r\n            if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                this.pushHistoryState(false, this.getPositionForHistory());\r\n            } else if(currentModelId == history.state?.module_id){\r\n\r\n                    this.pushHistoryState(true, this.getPositionForHistory());\r\n            }\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n            that.onEvaluateSelectedText(event);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                // if(!this.dontPushHistoryStateOnNextModelChange){\r\n                //     this.lastPosition = {\r\n                //         position: this.editor.getPosition(),\r\n                //         workspace_id: this.main.getCurrentWorkspace().id,\r\n                //         module_id: module.file.id\r\n                //     }\r\n                //     this.pushHistoryState(false);\r\n                // }\r\n                // this.dontPushHistoryStateOnNextModelChange = false;\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n\r\n                let pushNeeded = this.lastPosition == null\r\n                    || module.file.id != this.lastPosition.module_id;\r\n                \r\n                if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                    this.pushHistoryState(false, this.getPositionForHistory());\r\n                }    \r\n\r\n            }\r\n\r\n        });\r\n\r\n//        monaco.languages.registerDocumentRangeSemanticTokensProvider('myJava', new MySemanticTokenProvider(this.main));\r\n\r\n        monaco.languages.registerRenameProvider('myJava', this);\r\n        monaco.languages.registerColorProvider('myJava', new MyColorProvider(this.main));\r\n\r\n        monaco.languages.registerDefinitionProvider('myJava', {\r\n            provideDefinition: (model, position, cancellationToken) => {\r\n                return that.provideDefinition(model, position, cancellationToken);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('myJava', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('myJava', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('myJava', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('myJava', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('myJava', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        // console.log(this.editor.getSupportedActions().map(a => a.id));\r\n\r\n        return this.editor;\r\n    }\r\n\r\n    getPositionForHistory(): HistoryEntry {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if(module == null) return;\r\n        \r\n        return {\r\n            position: this.editor.getPosition(),\r\n            workspace_id: this.main.getCurrentWorkspace().id,\r\n            module_id: this.main.getCurrentlyEditedModule().file.id\r\n        }\r\n    }\r\n\r\n    lastPushTime: number = 0;\r\n    pushHistoryState(replace: boolean, historyEntry: HistoryEntry){\r\n\r\n        if(this.main.isEmbedded() || historyEntry == null) return;\r\n\r\n        if(replace){\r\n            history.replaceState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${this.lastPosition.position.lineNumber}, Spalte ${this.lastPosition.position.column})`);\r\n            // console.log(\"Replace History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        } else {\r\n            let time = new Date().getTime();\r\n            if(time - this.lastPushTime > 200){\r\n                history.pushState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${historyEntry.position.lineNumber}, Spalte ${historyEntry.position.column})`);\r\n            } else {\r\n                history.replaceState(historyEntry, \"\");\r\n            }\r\n            this.lastPushTime = time;\r\n            // console.log(\"Pushed History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        }\r\n\r\n        this.lastPosition = historyEntry;\r\n    }\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertTextAndSetCursor = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if(!nextLine.trim().startsWith(\"*\")){\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertTextAndSetCursor(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertTextAndSetCursor(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        } else if(text == '\"') {\r\n            //a: x| -> x\"|\"\r\n            //d: \"|x -> \"\"|x\r\n            //c: \"|\" -> \"\"\"\\n|\\n\"\"\"\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const selection = this.editor.getSelection();\r\n\r\n            const isSelected = selection.startColumn != selection.endColumn || selection.startLineNumber != selection.endLineNumber;\r\n\r\n            const line = model.getLineContent(position.lineNumber);\r\n            let doInsert: boolean = true;\r\n            let charBefore: string = \"x\";\r\n            if(position.column > 1){\r\n                charBefore = line.charAt(position.column - 3);\r\n            }\r\n            let charAfter: string = \"x\";\r\n            if(position.column - 1 < line.length){\r\n                charAfter = line.charAt(position.column - 1);\r\n            }\r\n\r\n            if(!isSelected){\r\n                if(charBefore != '\"'){\r\n                    insertTextAndSetCursor(position, '\"', position.lineNumber, position.column);\r\n                } else if(charAfter == '\"'){\r\n                    let pos1 = {...position, column: position.column + 1};\r\n                    insertTextAndSetCursor(pos1, '\\n\\n\"\"\"', position.lineNumber + 1, 1);\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n            let bottomDiv1 = this.main.getBottomDiv();\r\n            if (bottomDiv1 != null && bottomDiv1.console != null) {\r\n                bottomDiv1.console.editor.updateOptions({\r\n                    fontSize: fontSizePx / factor\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        let bottomDiv = this.main.getBottomDiv();\r\n        if (bottomDiv != null && bottomDiv.console != null) {\r\n            let $commandLine = bottomDiv.$bottomDiv.find('.jo_commandline');\r\n            $commandLine.css({\r\n                height: (fontSizePx * 1.1 + 4) + \"px\",\r\n                \"line-height\": (fontSizePx * 1.1 + 4) + \"px\"\r\n            })\r\n            bottomDiv.console.editor.layout();\r\n        }\r\n\r\n\r\n        // let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        // console.log({editorFS: editorfs, newFs: fontSizePx, newEditorFs: newEditorfs});\r\n\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // Strg + # funktioniert bei Firefox nicht, daher alternativ Strg + ,:\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Toggle line comment',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Zeilenkommentar ein-/ausschalten',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.US_COMMA ],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'insert',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                console.log('Hier!');\r\n                ed.getAction('editor.action.commentLine').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onEvaluateSelectedText(event: monaco.editor.ICursorPositionChangedEvent) {\r\n\r\n        let that = this;\r\n\r\n        if (that.cw != null) {\r\n            that.editor.removeContentWidget(that.cw);\r\n            that.cw = null;\r\n        }\r\n\r\n        if (that.main.getInterpreter().state == InterpreterState.paused) {\r\n\r\n            let model = that.editor.getModel();\r\n            let text = model.getValueInRange(that.editor.getSelection());\r\n            if (text != null && text.length > 0) {\r\n                let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n                let result = evaluator.evaluate(text);\r\n                if (result.error == null && result.value != null) {\r\n                    let v = result.value.type.debugOutput(result.value);\r\n\r\n                    monaco.editor.colorize(text + \": \", 'myJava', { tabSize: 3 }).then((text) => {\r\n                        if (text.endsWith(\"<br/>\")) text = text.substr(0, text.length - 5);\r\n                        that.cw = {\r\n                            getId: function () {\r\n                                return 'my.content.widget';\r\n                            },\r\n                            getDomNode: function () {\r\n                                let dn = jQuery('<div class=\"jo_editorTooltip jo_codeFont\">' + text + v + '</div>');\r\n                                return dn[0];\r\n                            },\r\n                            getPosition: function () {\r\n                                return {\r\n                                    position: event.position,\r\n                                    preference: [monaco.editor.ContentWidgetPositionPreference.ABOVE, monaco.editor.ContentWidgetPositionPreference.BELOW]\r\n                                };\r\n                            }\r\n                        };\r\n                        that.editor.addContentWidget(that.cw);\r\n\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        module.toggleBreakpoint(lineNumber, true);\r\n\r\n        if (this.main.getInterpreter().moduleStore != null) {\r\n            let runningModule = this.main.getInterpreter().moduleStore.findModuleByFile(module.file);\r\n            if (runningModule != null) runningModule.toggleBreakpoint(lineNumber, false);\r\n        }\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (this.highlightCurrentMethod) {\r\n\r\n            let method = module.getMethodDeclarationAtPosition(position);\r\n            if (method != null) {\r\n                decorations.push({\r\n                    range: { startColumn: 0, startLineNumber: method.position.line, endColumn: 100, endLineNumber: method.scopeTo.line },\r\n                    options: {\r\n                        className: 'jo_highlightMethod', isWholeLine: true, overviewRuler: {\r\n                            color: { id: \"jo_highlightMethod\" },\r\n                            darkColor: { id: \"jo_highlightMethod\" },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: 'jo_highlightMethod' },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n    dontDetectLastChange() {\r\n        // this.dontDetectLastChanging = true;\r\n    }\r\n\r\n    resolveRenameLocation(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.RenameLocation & monaco.languages.Rejection> {\r\n\r\n            let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n            if (currentlyEditedModule == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n            \r\n            let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n            if (element == null || element.declaration == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n    \r\n            let pos = element.declaration.position;\r\n\r\n            return {\r\n                range: {startColumn: position.column, startLineNumber: position.lineNumber, endLineNumber: position.lineNumber, endColumn: position.column + pos.length},\r\n                text: element.identifier\r\n            };\r\n\r\n    }\r\n\r\n    provideRenameEdits(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        newName: string, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.WorkspaceEdit & monaco.languages.Rejection> {\r\n\r\n        let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n        if (currentlyEditedModule == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let resourceEdits: monaco.languages.WorkspaceTextEdit[] = [];\r\n\r\n        usagePositions.forEach((usagePositionsInModule, module) => {\r\n            if (usagePositionsInModule != null) {\r\n                let edits: monaco.languages.TextEdit[] = [];\r\n                for (let up of usagePositionsInModule) {\r\n                    resourceEdits.push(\r\n                        {\r\n                            resource: module.uri, edit:\r\n                            {\r\n                                range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length },\r\n                                text: newName\r\n                            }\r\n                        });\r\n                }\r\n                if (edits.length > 0) {\r\n                    module.file.dirty = true;\r\n                    module.file.saved = false;\r\n                    module.file.identical_to_repository_version = false;\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n//        console.log(resourceEdits);\r\n\r\n        return {\r\n            edits: resourceEdits\r\n        }\r\n\r\n    }\r\n\r\n    provideDefinition(model: monaco.editor.ITextModel, position: monaco.Position, cancellationToken: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Definition> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) return null;\r\n\r\n        let decl = element.declaration;\r\n\r\n        if (decl == null) {\r\n            // class from Base-Module? Let definition point to current position, so that ctrl + click opens peek references widget\r\n            if (element instanceof Klass || element instanceof Enum || element instanceof Interface || element instanceof Method || element instanceof Attribute) {\r\n                return Promise.resolve({\r\n                    range: {\r\n                        startLineNumber: position.lineNumber, endLineNumber: position.lineNumber,\r\n                        startColumn: position.column, endColumn: position.column + element.identifier.length\r\n                    },\r\n                    uri: module.uri\r\n                });\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            range: {\r\n                startLineNumber: decl.position.line, endLineNumber: decl.position.line,\r\n                startColumn: decl.position.column, endColumn: decl.position.column + decl.position.length\r\n            },\r\n            uri: decl.module.uri\r\n        });\r\n\r\n    }\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineMyJava() {\r\n    monaco.languages.register({ id: 'myJava', \r\n    extensions: ['.learnJava'],\r\n    //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        indentationRules: {\r\n            // ^(.*\\*/)?\\s*\\}.*$\r\n            decreaseIndentPattern: /^(.*\\*\\/)?\\s*\\}.*$/,\r\n            // ^.*\\{[^}\"']*$\r\n            increaseIndentPattern: /^.*\\{[^}\"']*$/\r\n        },\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                // beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                beforeText: /^(\\t|(\\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        // the default separators except `@$`\r\n        wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n        comments: {\r\n            lineComment: '//',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')'],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            // { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n            { open: '<', close: '>' },\r\n        ],\r\n        folding: {\r\n            markers: {\r\n                start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n                end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n            }\r\n        },\r\n\r\n    };\r\n    let language = {\r\n        defaultToken: '',\r\n        tokenPostfix: '.java',\r\n        keywords: [\r\n            'abstract', 'continue', 'new', 'switch', 'assert', 'default',\r\n            'goto', 'package', 'synchronized', 'private',\r\n            'this', 'implements', 'protected', 'throw',\r\n            'import', 'public', 'throws', 'case', 'instanceof', 'return',\r\n            'transient', 'catch', 'extends', 'try', 'final',\r\n            'static', 'finally', 'strictfp',\r\n            'volatile', 'const', 'native', 'super', 'true', 'false', 'null'\r\n        ],\r\n        print: ['print', 'println'],\r\n        statements: ['for', 'while', 'if', 'then', 'else', 'do', 'break', 'continue'],\r\n        types: ['int', 'boolean', 'char', 'float', 'double', 'long', 'void', 'byte', 'short',\r\n        'class', 'enum', 'interface', 'var'],\r\n        operators: [\r\n            '=', '>', '<', '!', '~', '?', ':',\r\n            '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n            '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n            '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n            '^=', '%=', '<<=', '>>=', '>>>='\r\n        ],\r\n        // we include these common regular expressions\r\n        symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        digits: /\\d+(_+\\d+)*/,\r\n        octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n        binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n        hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n        // The main tokenizer for our languages\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                // [/[a-zA-Z_$][\\w$]*/, {\r\n                [/\\.[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@print': { token: 'print.$0' },\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöüß][\\w$äöüßÄÖÜ]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*/, 'class'],\r\n                // whitespace\r\n                { include: '@whitespace' },\r\n                // delimiters and operators\r\n                [/[{}()\\[\\]]/, '@brackets'],\r\n                [/[<>](?!@symbols)/, '@brackets'],\r\n                [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n                // @ annotations.\r\n                [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n                // numbers\r\n                [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n                [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n                [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n                [/(@digits)[fFdD]/, 'number.float'],\r\n                [/(@digits)[lL]?/, 'number'],\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, 'delimiter'],\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n                [/\"\"\"/, 'string', '@string'],\r\n                [/\"/, 'string', '@string'],\r\n                // characters\r\n                [/'[^\\\\']'/, 'string'],\r\n                [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n                [/'/, 'string.invalid']\r\n            ],\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, ''],\r\n                [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\r\n                [/\\/\\*/, 'comment', '@comment'],\r\n                [/\\/\\/.*$/, 'comment'],\r\n            ],\r\n            comment: [\r\n                [/[^\\/*]+/, 'comment'],\r\n                // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n                // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n                [/\\*\\//, 'comment', '@pop'],\r\n                [/[\\/*]/, 'comment']\r\n            ],\r\n            //Identical copy of comment above, except for the addition of .doc\r\n            javadoc: [\r\n                [/[^\\/*]+/, 'comment.doc'],\r\n                // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\r\n                [/\\/\\*/, 'comment.doc.invalid'],\r\n                [/\\*\\//, 'comment.doc', '@pop'],\r\n                [/[\\/*]/, 'comment.doc']\r\n            ],\r\n            string: [\r\n                [/[^\\\\\"]+/, 'string'],\r\n                [/@escapes/, 'string.escape'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/\"\"\"/, 'string', '@pop'],\r\n                [/\"/, 'string', '@pop']\r\n            ],\r\n            \r\n        },\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('myJava', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('myJava', language);\r\n\r\n    // monaco.languages.registerCompletionItemProvider(\"myJava\", {    // Or any other language...\r\n    //     provideCompletionItems: (model, position) => {\r\n    //         // Retrieve the text until the current cursor's position, anything\r\n    //         // after that doesn't really matter.\r\n    //         var textToMatch = model.getValueInRange({\r\n    //             startLineNumber: 1,\r\n    //             startColumn: 1,\r\n    //             endLineNumber: position.lineNumber,\r\n    //             endColumn: position.column\r\n    //         });\r\n\r\n    //         // Return JSON array containing all completion suggestions.\r\n    //         return {\r\n    //             suggestions: [\r\n    //                 // Example: io.write ()\r\n    //                 {\r\n    //                     label: \"io.write (string)\",\r\n    //                     kind: monaco.languages.CompletionItemKind.Function,\r\n    //                     documentation: \"Writes a string to stdout.\",\r\n    //                     insertText: \"io.write (\\\"\\\")\",  // Escape JSON as needed.\r\n    //                     range: {\r\n    //                         startLineNumber: position.lineNumber,\r\n    //                         endLineNumber: position.lineNumber,\r\n    //                         startColumn: position.column,\r\n    //                         endColumn: position.column\r\n    //                     }\r\n    //                 },  // Other items.\r\n    //             ]\r\n    //         };\r\n    //     }\r\n    // });\r\n\r\n\r\n}","import { convertPxToNumber } from \"../../tools/HtmlTools.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class SpeedControl {\r\n\r\n    position: number = 0;\r\n    xMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $bar: JQuery<HTMLElement>;\r\n    $display: JQuery<HTMLElement>;\r\n    $outer: JQuery<HTMLElement>;\r\n\r\n    gripWidth: number = 10;\r\n    overallWidth: number = 100;\r\n\r\n    interpreter: Interpreter\r\n\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n\r\n\r\n    constructor($container: JQuery<HTMLElement>){\r\n\r\n        this.$outer = jQuery('<div class=\"jo_speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\"></div>');\r\n        this.$bar = jQuery('<div class=\"jo_speedcontrol-bar\" draggable=\"false\"></div>');\r\n        this.$grip = jQuery('<div class=\"jo_speedcontrol-grip\" draggable=\"false\"></div>');\r\n        this.$display = jQuery('<div class=\"jo_speedcontrol-display\" draggable=\"false\">100 Schritte/s</div>');\r\n\r\n        this.$grip.append(this.$display);\r\n        this.$outer.append(this.$bar, this.$grip);\r\n\r\n        $container.append(this.$outer);\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n    }\r\n\r\n    initGUI(){\r\n        \r\n        let mousedownX: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallWidth = convertPxToNumber(this.$outer.css('width'));\r\n        that.gripWidth = convertPxToNumber(that.$grip.css('width'));\r\n        that.xMax = that.overallWidth - that.gripWidth;\r\n        \r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        \r\n        that.$outer.on(mousePointer + 'down', (e) => {\r\n            \r\n            \r\n\r\n            let x = e.pageX - that.$outer.offset().left - 4;\r\n            that.setSpeed(x);\r\n            that.$grip.css('left', x + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientX]);\r\n\r\n            // jQuery('#speedcontrol-display').show();\r\n            // jQuery(document).on('mouseup.speedcontrol1', () => {\r\n            //     jQuery(document).off('mouseup.speedcontrol1');\r\n            //     jQuery('#speedcontrol-display').hide();\r\n            // });\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, x) => {\r\n            if(x == null) x = e.clientX;\r\n            mousedownX = x;\r\n            oldPosition = that.position;\r\n            jQuery('.joe_controlPanel_top').css(\"z-index\", \"1000\");\r\n            that.$display.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.speedcontrol', (e)=>{\r\n                let deltaX = e.clientX - mousedownX;\r\n                that.setSpeed(oldPosition + deltaX);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.speedcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.speedcontrol');\r\n                jQuery(document).off(mousePointer + 'move.speedcontrol');\r\n                that.$display.hide();\r\n                jQuery('.joe_controlPanel_top').css(\"z-index\", \"0\");\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    getSpeedInStepsPerSecond(): number {\r\n        return this.interpreter.stepsPerSecond;\r\n    }\r\n\r\n    setSpeedInStepsPerSecond(stepsPerSecond: number | \"max\"){\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        if(stepsPerSecond == \"max\") stepsPerSecond = this.interpreter.maxStepsPerSecond;\r\n        stepsPerSecond = Math.min(stepsPerSecond, this.interpreter.maxStepsPerSecond);\r\n        stepsPerSecond = Math.max(stepsPerSecond, 1);\r\n\r\n        for(let i = 0; i < intervalBorders.length - 1; i++){\r\n            let left = intervalBorders[i];\r\n            let right = intervalBorders[i+1];\r\n            if(stepsPerSecond >= left && stepsPerSecond <= right){\r\n                let gripIntervalLength = this.xMax/(intervalBorders.length - 1);\r\n                let gripPosition = Math.round(gripIntervalLength * i + gripIntervalLength * (stepsPerSecond - left)/(right - left));\r\n                this.$grip.css('left', gripPosition + 'px');\r\n                this.position = gripPosition;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setInterpreterSpeed(stepsPerSecond);\r\n\r\n    }\r\n\r\n    setSpeed(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.xMax){\r\n            newPosition = this.xMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('left', newPosition + \"px\");\r\n\r\n        // in steps/s\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        let intervalDelta = this.xMax / (intervalBorders.length - 1);\r\n        let intervalIndex = Math.floor(newPosition/intervalDelta);\r\n        if(intervalIndex == intervalBorders.length - 1) intervalIndex--;\r\n        let factorInsideInterval = (newPosition - intervalIndex*intervalDelta)/intervalDelta;\r\n\r\n        let intervalMin = intervalBorders[intervalIndex];\r\n        let intervalMax = intervalBorders[intervalIndex + 1];\r\n\r\n        let speed = intervalMin + (intervalMax - intervalMin) * factorInsideInterval;\r\n\r\n        this.setInterpreterSpeed(speed);\r\n        \r\n        // console.log( speed + ' steps/s entspricht ' + this.interpreter.timerDelayMs + ' ms zwischen Steps')\r\n\r\n    }\r\n    \r\n    setInterpreterSpeed(stepsPerSecond: number){\r\n        this.interpreter.stepsPerSecond = stepsPerSecond;\r\n\r\n        this.interpreter.hideProgrampointerPosition();\r\n\r\n        let speedString = \"\" + Math.ceil(stepsPerSecond);\r\n        if(stepsPerSecond >= this.interpreter.maxStepsPerSecond - 10){\r\n            speedString = \"Maximale Geschwindigkeit\";\r\n        }\r\n\r\n        this.$display.html(speedString + \" Schritte/s\");\r\n    }\r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpeedControl } from \"./SpeedControl.js\";\r\n\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    speedControl: SpeedControl;\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonPause: JQuery<HTMLElement>;\r\n    $buttonStop: JQuery<HTMLElement>;\r\n    $buttonStepOver: JQuery<HTMLElement>;\r\n    $buttonStepInto: JQuery<HTMLElement>;\r\n    $buttonStepOut: JQuery<HTMLElement>;\r\n    $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n    private interpreter: Interpreter;\r\n\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private $editorContainer: JQuery<HTMLElement>){\r\n\r\n        this.speedControl = new SpeedControl($buttonsContainer);\r\n        this.speedControl.initGUI();\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonPause, this.$buttonStop,\r\n            this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart);\r\n\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n        this.speedControl.setInterpreter(i);\r\n        this.speedControl.setSpeed(20);\r\n    }\r\n}","import { convertPxToNumber } from \"../../../tools/HtmlTools.js\";\r\n\r\nexport class ZoomControl {\r\n    \r\n    public static preventFading:boolean = false;\r\n\r\n    position: number = 0;\r\n    yMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $zoomcontrolDisplay: JQuery<HTMLElement>;\r\n\r\n    gripHeight: number = 10;\r\n    overallHeight: number = 150;\r\n\r\n    zoomMin: number = 0.2;\r\n    zoomMax: number = 2;\r\n\r\n\r\n    constructor($parentElement: JQuery<HTMLElement>, private callback?: (zoomfactor: number) => void){\r\n        let $zoomcontrolOuter = jQuery('<div class=\"jo_zoomcontrol-outer\" title=\"Zoom\" draggable=\"false\"></div>');\r\n        $parentElement.append($zoomcontrolOuter);\r\n        let $zoomcontrolBar = jQuery('<div class=\"jo_zoomcontrol-bar\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append($zoomcontrolBar);\r\n        this.$grip = jQuery('<div class=\"jo_zoomcontrol-grip\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append(this.$grip);\r\n        this.$zoomcontrolDisplay = jQuery('<div class=\"jo_zoomcontrol-display\"></div>');\r\n        this.$grip.append(this.$zoomcontrolDisplay);\r\n\r\n        let mousedownY: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallHeight = convertPxToNumber($zoomcontrolOuter.css('height'));\r\n        that.gripHeight = convertPxToNumber(that.$grip.css('height'));\r\n        that.yMax = that.overallHeight - that.gripHeight;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $zoomcontrolBar.on(mousePointer + 'down', (e) => {\r\n\r\n            let y = e.pageY - $zoomcontrolOuter.offset().top - 4;\r\n            that.setZoom(y);\r\n            that.$grip.css('top', y + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientY]);\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, y) => {\r\n            if(y == null) y = e.clientY;\r\n            mousedownY = y;\r\n            oldPosition = that.position;\r\n            this.$zoomcontrolDisplay.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.zoomcontrol', (e)=>{\r\n                let deltaY = e.clientY - mousedownY;\r\n                that.setZoom(oldPosition + deltaY);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.zoomcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.zoomcontrol');\r\n                jQuery(document).off(mousePointer + 'move.zoomcontrol');\r\n                this.$zoomcontrolDisplay.hide();\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n        $parentElement.on(mousePointer + \"enter\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeIn();\r\n        });\r\n        \r\n        $parentElement.on(mousePointer + \"leave\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeOut();\r\n        });\r\n\r\n        let factor = (1.0 - this.zoomMin)/(this.zoomMax - this.zoomMin);\r\n        this.position = factor*(this.overallHeight - this.gripHeight);\r\n        this.$grip.css('top', this.position + \"px\");\r\n    }\r\n\r\n    setZoom(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.yMax){\r\n            newPosition = this.yMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('top', newPosition + \"px\");\r\n\r\n        let zoomfactor = newPosition/(this.overallHeight - this.gripHeight);\r\n        zoomfactor = this.zoomMin + zoomfactor*(this.zoomMax - this.zoomMin);\r\n\r\n        let zfs = Math.round(zoomfactor * 100) + \" %\";\r\n        this.$zoomcontrolDisplay.html(zfs);\r\n\r\n        if(this.callback != null){\r\n            this.callback(zoomfactor);\r\n        }\r\n\r\n    }\r\n\r\n}","import { ZoomControl } from \"./ZoomControl.js\";\r\nimport { ClassBox } from \"./classdiagram/ClassBox.js\";\r\nimport { Rectangle, Point } from \"./classdiagram/Router.js\";\r\nimport { DiagramElement } from \"./DiagramElement.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport var DiagramUnitCm = 0.2; // in cm\r\n\r\nexport class Diagram {\r\n\r\n    zoomControl: ZoomControl;\r\n    zoomfactor: number = 1.0;\r\n\r\n    $canvas: JQuery<HTMLElement>;\r\n    svgElement: Element;\r\n\r\n    $menuButton: JQuery<HTMLElement>;\r\n\r\n    defs: Element;\r\n    style: Element;\r\n\r\n    inlineStyles: { [selector: string]: { [key: string]: string } } = {};\r\n    marginCm = 1.6;\r\n    minDistance = 2.0;\r\n    minWidthHeightCm = 10;\r\n    widthCm = this.minWidthHeightCm;\r\n    heightCm = this.minWidthHeightCm;\r\n\r\n    $centerRectangle: JQuery<SVGElement>;\r\n\r\n    constructor($htmlElement: JQuery<HTMLElement>, public main: MainBase){\r\n\r\n        this.$menuButton = jQuery('<div class=\"jo_classDiagram_Menubutton jo_button jo_active img_menu-three-bars\"></div>');\r\n        $htmlElement.append(this.$menuButton);\r\n\r\n        let $scrollpane = jQuery('<div></div>');\r\n        $htmlElement.append($scrollpane);\r\n        $scrollpane.addClass('jo_scrollable');\r\n        $scrollpane.css({overflow: \"auto\", position: \"relative\", width: \"100%\", height: \"100%\"});\r\n\r\n        this.$canvas = jQuery('<div class=\"jo_diagram-canvas\"></div>');\r\n        $scrollpane.append(this.$canvas);\r\n        this.zoomControl = new ZoomControl($htmlElement, (factor: number) => {\r\n            this.$canvas.css({\r\n                transform: \"scale(\" + factor + \")\"\r\n            });\r\n            this.zoomfactor = factor;\r\n        });\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        this.svgElement = document.createElementNS(ns, 'svg');\r\n        // jQuery(this.svgElement).css('pointer-events', 'none');\r\n        jQuery(this.svgElement).addClass(\"jo_diagram-svg svg_all_pointer_events\");\r\n\r\n        // this.insertStyleElement({\".svp_draggable\": {cursor: \"pointer\"}});\r\n\r\n        this.$canvas[0].appendChild(this.svgElement);\r\n\r\n        this.$centerRectangle = <any>jQuery(this.createElement(\"rect\", this.svgElement));\r\n\r\n        this.$centerRectangle.css({fill: \"#ffffff\", \"stroke\": \"none\"});\r\n\r\n        this.adjustCenterRectangle();\r\n\r\n        let $svgElement =  jQuery(this.svgElement);\r\n\r\n        let x: number;\r\n        let y: number;\r\n\r\n        $svgElement.on('mousedown', (ev1) => {\r\n            x = ev1.screenX;\r\n            y = ev1.screenY;\r\n            \r\n            jQuery(document).on('mousemove.diagram', (ev) => {\r\n                let dx = ev.screenX - x;\r\n                let dy = ev.screenY - y;\r\n                x = ev.screenX;\r\n                y = ev.screenY;\r\n                $scrollpane.scrollLeft($scrollpane.scrollLeft() - dx);\r\n                $scrollpane.scrollTop($scrollpane.scrollTop() - dy);\r\n            })\r\n\r\n            jQuery(document).on('mouseup.diagram', () => {\r\n                jQuery(document).off('mousemove.diagram');\r\n                jQuery(document).off('mouseup.diagram');\r\n            });\r\n\r\n\r\n        });\r\n\r\n\r\n    }    \r\n\r\n    adjustCenterRectangle(){\r\n        this.$centerRectangle.attr({\r\n            x: this.marginCm + \"cm\",\r\n            y: this.marginCm + \"cm\",\r\n            width: (this.widthCm - 2*this.marginCm) + \"cm\",    \r\n            height: (this.heightCm - 2*this.marginCm) + \"cm\"\r\n        });\r\n    }\r\n\r\n    setSize(widthCm: number, heightCm: number){\r\n        if(widthCm < this.minWidthHeightCm) widthCm = this.minWidthHeightCm;\r\n        if(heightCm < this.minWidthHeightCm) heightCm = this.minWidthHeightCm;\r\n\r\n        this.$canvas.css({\r\n            width: widthCm + \"cm\",\r\n            height: heightCm + \"cm\"\r\n        })\r\n\r\n        this.widthCm = widthCm;\r\n        this.heightCm = heightCm;\r\n\r\n        this.adjustCenterRectangle();\r\n    }\r\n\r\n    adjustSizeAndElements(diagramElements: DiagramElement[]): {isAdjusted: boolean}{\r\n\r\n        let xMin = 100000;\r\n        let yMin = 100000;\r\n        let xMax = -100000;\r\n        let yMax = -100000;\r\n\r\n        for(let rr of diagramElements){\r\n            if(xMin > rr.leftCm) xMin = rr.leftCm;\r\n            if(xMax < rr.leftCm + rr.widthCm) xMax = rr.leftCm + rr.widthCm;\r\n            if(yMin > rr.topCm) yMin = rr.topCm;\r\n            if(yMax < rr.topCm + rr.heightCm) yMax = rr.topCm + rr.heightCm;\r\n        }\r\n\r\n        xMin -= this.marginCm;\r\n        xMax += this.marginCm;\r\n        yMin -= this.marginCm;\r\n        yMax += this.marginCm;\r\n\r\n        let isAdjusted: boolean = false;\r\n        let newWidthCm = this.widthCm;\r\n        let newHeightCm = this.heightCm;\r\n\r\n        if(xMin < 0 || xMax > this.widthCm || (xMax - xMin <= this.widthCm && this.widthCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newWidthCm = Math.max(this.minWidthHeightCm, xMax - xMin);\r\n\r\n            if(xMin < 0){\r\n                delta = -xMin;\r\n            }\r\n\r\n            if(xMin > 0 && xMax > newWidthCm){\r\n                delta = newWidthCm - xMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(delta, 0, true, true);\r\n            }\r\n\r\n        }\r\n\r\n        if(yMin < 0 || yMax > this.heightCm || (yMax - yMin <= this.heightCm && this.heightCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newHeightCm = Math.max(this.minWidthHeightCm, yMax - yMin);\r\n\r\n            if(yMin < 0){\r\n                delta = -yMin;\r\n            }\r\n\r\n            if(yMin > 0 && yMax > newHeightCm){\r\n                delta = newHeightCm - yMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(0, delta, true, true);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        this.setSize(newWidthCm, newHeightCm);\r\n        \r\n\r\n        return {isAdjusted: isAdjusted};\r\n\r\n    }\r\n\r\n    public insertStyleElement(styles: { [selector: string]: { [key: string]: string } } = null) {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n\r\n        if (this.style == null) {\r\n            this.defs = document.createElementNS(ns, 'defs');\r\n            this.style = document.createElementNS(ns, 'style');\r\n            this.defs.appendChild(this.style);\r\n            this.svgElement.appendChild(this.defs);\r\n        }\r\n\r\n        if (styles != null) {\r\n            this.inlineStyles = styles;\r\n            this.refreshInlineStyles();\r\n        }\r\n\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    private refreshInlineStyles() {\r\n\r\n        let s: string = \"\";\r\n\r\n        for (let selector in this.inlineStyles) {\r\n            let stylesForSelector = this.inlineStyles[selector];\r\n            if (stylesForSelector != null) {\r\n                s += selector + \"{\\n\";\r\n                for (let key in stylesForSelector) {\r\n                    s += \"   \" + key + \":\" + stylesForSelector[key] + \";\\n\";\r\n                }\r\n                s += \"}\\n\";\r\n            } else {\r\n                s += selector + \"\\n\";\r\n            }\r\n        }\r\n\r\n        this.style.textContent = s;\r\n\r\n    }\r\n\r\n    findFreeSpace(elements: DiagramElement[], width: number, height: number, minDistance: number): Point {\r\n\r\n        let radius = 0;\r\n        let fertig: boolean = false;\r\n        let xCm = 0;\r\n        let yCm = 0;\r\n        while(!fertig){\r\n\r\n            let y = radius;\r\n            let x = 0;\r\n            for(x = 0; x <= radius; x++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(fertig) break;\r\n            x--;\r\n            for(y = 0; y <= radius - 1; y++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            radius += 2;\r\n\r\n        }\r\n\r\n        return {x: xCm, y: yCm};\r\n\r\n    }\r\n\r\n    isFree(elements: DiagramElement[], widthCm: number, heightCm: number, leftCm: number, topCm: number, minDistance: number):boolean {\r\n\r\n        for(let element of elements){\r\n\r\n            let insideX = Math.abs(element.leftCm + element.widthCm/2 - leftCm - widthCm/2) \r\n                       <= (element.widthCm + widthCm)/2 + minDistance;\r\n\r\n            let insideY = Math.abs(element.topCm + element.heightCm/2 - topCm - heightCm/2) <= (element.heightCm + heightCm)/2 + minDistance;\r\n\r\n            if(insideX && insideY) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"./Diagram.js\"; \r\nimport { Rectangle } from \"./classdiagram/Router.js\";\r\n\r\nexport enum Alignment {\r\n    left, center, right\r\n}\r\n\r\nexport type TextLine = {\r\n    type: \"text\",\r\n    text: string,\r\n    tooltip?: string,\r\n    alignment?: Alignment,\r\n    bold?: boolean,\r\n    italics?: boolean,\r\n    textHeightCm?: number,\r\n    textWidthCm?: number,\r\n    yCm?: number\r\n    $element?: JQuery<SVGTextElement>,\r\n    onClick?: () => void\r\n}\r\n\r\nexport type HorizontalLine = {\r\n    type: \"line\",\r\n    $element?: JQuery<SVGLineElement>,\r\n    thicknessCm: number,\r\n    yCm?: number\r\n}\r\n\r\nexport abstract class DiagramElement {\r\n\r\n    public static cmPerPx: number = 2.54/96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    public leftCm: number = 0; // x-Koordinate in cm\r\n    public topCm: number = 0; // y-Koordinate in cm\r\n \r\n    public widthCm: number;\r\n    public heightCm: number; \r\n\r\n    protected lines: (TextLine | HorizontalLine)[] = [];\r\n\r\n    public backgroundColor: string = \"#ffffff\";\r\n\r\n    constructor(protected parent: Element) {\r\n\r\n    }\r\n\r\n    getRoutingRectangle(): Rectangle{\r\n        return {\r\n            left: Math.round(this.leftCm/DiagramUnitCm),\r\n            top: Math.round(this.topCm/DiagramUnitCm),\r\n            width: Math.round(this.widthCm/DiagramUnitCm),\r\n            height: Math.round(this.heightCm/DiagramUnitCm) \r\n        };\r\n    }\r\n\r\n    public show(){\r\n        if(this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide(){\r\n        if(this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if(this.$element == null) return;\r\n        this.$element.detach();        \r\n    }\r\n\r\n    remove() {\r\n        if(this.$element == null) return;\r\n        this.$element.remove();\r\n        this.$element = null;        \r\n    }\r\n\r\n    appendTo($element: JQuery<Element>){\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear(){\r\n        if(this.$element == null) return;\r\n        this.$element.empty();\r\n        this.lines = [];\r\n    }\r\n\r\n    public move(xCm: number, yCm: number, withRaster: boolean, adjustToRaster: boolean = false) {\r\n        this.leftCm += xCm;\r\n        this.topCm += yCm;\r\n\r\n        let x = this.leftCm;\r\n        let y = this.topCm;\r\n\r\n        if(withRaster){\r\n            x = Math.round(x/DiagramUnitCm)*DiagramUnitCm;\r\n            y = Math.round(y/DiagramUnitCm)*DiagramUnitCm;\r\n        }\r\n\r\n        if(adjustToRaster){\r\n            this.leftCm = x;\r\n            this.topCm = y;\r\n        }\r\n\r\n        jQuery(this.$element).css(\"transform\", \"translate(\" + x + \"cm,\" + y + \"cm)\");\r\n    }\r\n\r\n    public moveTo(xCm: number, yCm: number, withRaster: boolean) {\r\n        this.move(xCm - this.leftCm, yCm - this.topCm, withRaster);\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n            let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n                font: \"16px Roboto\",\r\n                \"font-family\": \"sans-serif\",\r\n                fill: \"#000\",\r\n                \"alignment-baseline\":\"hanging\",\r\n                \"dominant-baseline\":\"hanging\"\r\n            });\r\n\r\n            if(attributes != null) $element.attr(attributes);\r\n\r\n            $element.text(text);\r\n\r\n            return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>):{height: number, width: number}{\r\n        let bbox:DOMRect = textElement[0].getBBox();\r\n        \r\n        return {\r\n            height: bbox.height * DiagramElement.cmPerPx,\r\n            width: bbox.width * DiagramElement.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n    public addTextLine(line: TextLine | HorizontalLine){\r\n\r\n        this.lines.push(line);\r\n\r\n        if(line.type == \"text\"){\r\n            if(line.alignment == null) line.alignment = Alignment.left;\r\n            if(line.bold == null) line.bold = false;\r\n            if(line.italics == null) line.italics = false;\r\n        }\r\n\r\n    }\r\n\r\n    public render(){\r\n\r\n        let $group = this.$element;\r\n        if($group == null){\r\n            $group = this.createElement(\"g\", this.parent);\r\n            $group.addClass(\"svg_draggable\");\r\n            $group.addClass(\"svg_all_pointer_events\");\r\n            this.$element = $group;\r\n            jQuery(this.$element).css(\"transform\", \"translate(\" + this.leftCm + \"cm,\" + this.topCm + \"cm)\");\r\n        }\r\n\r\n        let $rect = this.createElement(\"rect\", $group[0]);\r\n\r\n        let textPosYCm: number = 0.1;\r\n        let maxWidthCm: number = 0;\r\n\r\n        let first: boolean = true;\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n                if(first) textPosYCm += 0.1;\r\n                first = false;\r\n                line.yCm = textPosYCm;\r\n                line.$element = <JQuery<SVGTextElement>>this.createTextElement(line.text, $group[0], {\r\n                    \"font-weight\" : line.bold?\"bold\":\"normal\",\r\n                    \"font-size\": \"12pt\",\r\n                    \"font-style\": line.italics?\"italic\":\"normal\",\r\n                    \"text-anchor\": line.alignment == Alignment.left ? \"start\" : line.alignment == Alignment.center ? \"middle\" : \"end\",\r\n                    \"cursor\": line.onClick == null ? \"\" : \"pointer\"\r\n                } );\r\n\r\n                line.$element.css(\"transform\", \"translate(0cm,0cm)\");\r\n                // line.$element.css(\"transform\", \"translate(0cm,\" + textPosYCm + \"cm)\");\r\n                // if(line.onClick != null){\r\n                //     line.$element.addClass(\"clickable\");\r\n                //     line.$element.on(\"mousedown\", (event) => {\r\n                //         //@ts-ignore\r\n                //         line.onClick();\r\n                //         event.stopPropagation();\r\n                //     })\r\n                // }\r\n                let metrics = this.getTextMetrics(line.$element);\r\n                line.textHeightCm = metrics.height;\r\n                line.textWidthCm = metrics.width;\r\n                maxWidthCm = Math.max(maxWidthCm, line.textWidthCm);\r\n                textPosYCm += line.textHeightCm;\r\n                if(line.tooltip != null){\r\n                    let $tooltip = this.createElement(\"title\", line.$element[0]);\r\n                    $tooltip.text(line.tooltip);\r\n                }\r\n            } else {\r\n                line.yCm = textPosYCm + line.thicknessCm/2;\r\n                textPosYCm += line.thicknessCm + 0.1;\r\n                first = true;\r\n            }\r\n        }\r\n\r\n        let width = 2 * 0.05 + 2*0.2 + maxWidthCm;\r\n        this.widthCm = (Math.trunc(width/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n        this.heightCm = (Math.trunc(textPosYCm/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n\r\n        let textLeft = 0.05 + 0.2;\r\n        let textCenter = width/2;\r\n        let textRight = width - textLeft;\r\n\r\n        $rect.css({\r\n            width: this.widthCm + \"cm\",\r\n            height: this.heightCm + \"cm\",\r\n            fill: this.backgroundColor,\r\n            stroke: \"#000\",\r\n            \"stroke-width\": \"0.05cm\"\r\n        });\r\n\r\n\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n\r\n                let x: number;\r\n                switch(line.alignment){\r\n                    case Alignment.center: x = textCenter; break;\r\n                    case Alignment.left: x = textLeft; break;\r\n                    case Alignment.right: x = textRight; break;\r\n                }\r\n\r\n                // Unfortunately we have to wrap Text-Elements in <g> due to a bug in safari,\r\n                // see \r\n                //@ts-ignore\r\n                let $g = this.createElement(\"g\", $group[0]);\r\n                $g.append(line.$element);\r\n                //@ts-ignore\r\n                line.$element = $g;\r\n\r\n                line.$element.css(\"transform\", \"translate(\" + x + \"cm,\"+line.yCm + \"cm)\");\r\n\r\n                if(line.onClick != null){\r\n                    line.$element.addClass(\"clickable\");\r\n                    line.$element.on(\"mousedown\", (event) => {\r\n                        //@ts-ignore\r\n                        line.onClick();\r\n                        event.stopPropagation();\r\n                    })\r\n                }\r\n\r\n\r\n            } else {\r\n                line.$element = <JQuery<SVGLineElement>>this.createElement(\"line\", $group[0], {\r\n                    x1: \"0\",\r\n                    y1: line.yCm + \"cm\",\r\n                    x2: this.widthCm + \"cm\",\r\n                    y2: line.yCm + \"cm\"\r\n                });\r\n\r\n                line.$element.css({\r\n                    stroke: \"#000\",\r\n                    \"stroke-width\": line.thicknessCm + \"cm\"        \r\n                });\r\n\r\n            }\r\n        }\r\n\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver } from \"./parser/TypeResolver.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { Klass, Interface } from \"./types/Class.js\";\r\nimport { SemicolonAngel } from \"./parser/SemicolonAngel.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        moduleStore.clearUsagePositions();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            m.colorInformation = lexed.colorInformation;\r\n            \r\n            if(m.file.name == this.main.getCurrentlyEditedModule()?.file?.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser(false);\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n\r\n        // 3rd pass: resolve types and populate typeStores; checks intermodular dependencies\r\n\r\n        let typeResolver: TypeResolver = new TypeResolver(this.main);\r\n\r\n        // Klass.count = 0;\r\n        // Interface.count = 0;\r\n        typeResolver.start(moduleStore);\r\n        // console.log(\"Klass-Klone: \" + Klass.count + \", Interface-Klone: \" + Interface.count);\r\n\r\n        // 4th pass: code generation\r\n\r\n        let codeGenerator = new CodeGenerator();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            codeGenerator.start(m, moduleStore);\r\n        }\r\n\r\n        let errorfree = true;\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.dependsOnModulesWithErrors = m.hasErrors();\r\n            if(m.dependsOnModulesWithErrors) errorfree = false;\r\n        }\r\n\r\n        let done = false;\r\n        while(!done){\r\n            done = true;\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if(!m.dependsOnModulesWithErrors)\r\n                for (let m1 of moduleStore.getModules(false)) {\r\n                    if(m.dependsOnModules.get(m1) && m1.dependsOnModulesWithErrors){\r\n                        m.dependsOnModulesWithErrors = true;\r\n                        done = false;\r\n                        break;\r\n                    }\r\n                }                            \r\n            }            \r\n        }\r\n        \r\n        this.atLeastOneModuleIsStartable = false;        \r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.isStartable = m.hasMainProgram() && !m.dependsOnModulesWithErrors;\r\n            if(m.isStartable){\r\n                this.atLeastOneModuleIsStartable = true;\r\n            }\r\n            if(!(this.main instanceof MainEmbedded) || this.main.config.withFileList){\r\n                m.renderStartButton();\r\n            } \r\n        }\r\n\r\n        if (this.atLeastOneModuleIsStartable) {\r\n\r\n            this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        } else {\r\n\r\n            this.compilerStatus = errorfree ? CompilerStatus.error : CompilerStatus.compiledButNothingToRun;\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { DiagramElement, Alignment } from \"../DiagramElement.js\";\r\nimport { Klass, Visibility, Interface } from \"../../../../compiler/types/Class.js\";\r\nimport { getDeclarationAsString, getTypeIdentifier } from \"../../../../compiler/types/DeclarationHelper.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { Point } from \"./Router.js\";\r\nimport { ClassDiagram } from \"./ClassDiagram.js\";\r\nimport { TextLine } from \"../DiagramElement.js\";\r\nimport { hash } from \"../../../../tools/StringTools.js\";\r\nimport { Method, Attribute } from \"../../../../compiler/types/Types.js\";\r\n\r\nexport type SerializedClassBox = {\r\n    className: string,\r\n    filename: string,\r\n    hashedSignature: number,\r\n    withMethods: boolean,\r\n    withAttributes: boolean,\r\n    leftCm: number,\r\n    topCm: number,\r\n    isSystemClass: boolean,\r\n    workspaceId?: number\r\n}\r\n\r\nexport class ClassBox extends DiagramElement {\r\n\r\n    className: string;\r\n    klass: Klass | Interface;\r\n    filename: string;\r\n    hashedSignature: number;\r\n    documentation: string;\r\n    active: boolean = true;\r\n    withMethods: boolean = true;\r\n    withAttributes: boolean = true;\r\n\r\n    inDebounce: any;\r\n\r\n    isSystemClass: boolean;\r\n\r\n    $dropdownTriangle: JQuery<Element>;\r\n\r\n    constructor(public diagram: Diagram, leftCm: number, topCm: number, klass: Klass | Interface) {\r\n        super(diagram.svgElement);\r\n\r\n        this.klass = klass;\r\n\r\n        if (klass != null) {\r\n            this.attachToClass(this.klass);\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.withAttributes = false; //!this.isSystemClass;\r\n            this.withMethods = false; // !this.isSystemClass;\r\n        }\r\n\r\n        this.moveTo(leftCm, topCm, true);\r\n\r\n    }\r\n\r\n    serialize(): SerializedClassBox {\r\n        return {\r\n            className: this.className,\r\n            filename: this.filename,\r\n            hashedSignature: this.hashedSignature,\r\n            withAttributes: this.withAttributes,\r\n            withMethods: this.withMethods,\r\n            isSystemClass: this.isSystemClass,\r\n            leftCm: this.leftCm,\r\n            topCm: this.topCm\r\n        }\r\n    }\r\n\r\n    static deserialize(diagram: Diagram, scb: SerializedClassBox): ClassBox {\r\n\r\n        let cb = new ClassBox(diagram, scb.leftCm, scb.topCm, null);\r\n        cb.hashedSignature = scb.hashedSignature;\r\n        cb.className = scb.className;\r\n        cb.filename = scb.filename;\r\n        cb.withAttributes = scb.withAttributes;\r\n        cb.withMethods = scb.withMethods;\r\n        cb.isSystemClass = scb.isSystemClass;\r\n\r\n        return cb;\r\n\r\n    }\r\n\r\n    attachToClass(klass: Klass | Interface) {\r\n\r\n        this.klass = klass;\r\n        let klassSignature: number = this.getSignature(klass);\r\n\r\n        if (this.className != klass.identifier || this.hashedSignature != klassSignature || this.widthCm < 0.7 || this.documentation != klass.documentation) {\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.renderLines();\r\n        } else {\r\n            this.addMouseEvents();\r\n        }\r\n\r\n        this.className = klass.identifier;\r\n        this.filename = klass.module.file.name;\r\n        this.hashedSignature = klassSignature;\r\n        this.documentation = klass.documentation;\r\n    }\r\n\r\n    jumpToDeclaration(element: Klass | Interface | Method | Attribute) {\r\n        this.diagram.main.jumpToDeclaration(this.klass.module, element.declaration);\r\n    }\r\n\r\n\r\n    renderLines() {\r\n\r\n        this.clear();\r\n\r\n        let parametersWithTypes = (<ClassDiagram>this.diagram).currentClassBoxes.parametersWithTypes;\r\n\r\n        this.addTextLine({\r\n            type: \"text\",\r\n            text: (this.klass instanceof Interface ? \"<<interface>> \" : ( this.klass.isAbstract ? \"<<abstract>> \" : \"\")) + this.klass.identifier,\r\n            tooltip: getDeclarationAsString(this.klass, \"\", true),\r\n            alignment: Alignment.center,\r\n            bold: true,\r\n            italics: this.klass instanceof Interface || this.klass.isAbstract,\r\n            onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(this.klass) }\r\n        });\r\n\r\n        if (this.klass instanceof Klass && this.withAttributes) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            for (let a of this.klass.attributes) {\r\n\r\n                let text: string = this.getVisibilityText(a.visibility) + getTypeIdentifier(a.type) + \" \" +  a.identifier;\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(a),\r\n                    alignment: Alignment.left,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(a) }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withMethods) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            this.klass.methods.filter(m => m.signature != \"toJson()\").forEach(m => {\r\n                let text: string = this.getVisibilityText(m.visibility) + m.identifier + \"()\";\r\n\r\n                if (parametersWithTypes) {\r\n                    let returnType: string = m.isConstructor ? \"\" :\r\n                        (m.returnType == null ? \"void \" : getTypeIdentifier(m.returnType) + \" \");\r\n                    text = this.getVisibilityText(m.visibility) + returnType + m.identifier + \"(\" +\r\n                        m.parameterlist.parameters.map((p) => { return getTypeIdentifier(p.type) + \" \" + p.identifier }).join(\", \") + \")\";\r\n                }\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(m),\r\n                    alignment: Alignment.left,\r\n                    italics: this.klass instanceof Interface || m.isAbstract,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(m) }\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n        this.backgroundColor = this.isSystemClass ? \"#aaaaaa\" : \"#ffffff\";\r\n        this.render();\r\n\r\n        this.$dropdownTriangle = this.createElement(\"path\", this.$element[0], {\r\n            d: this.getTrianglePath(),\r\n            class: \"dropdown-triangle\",\r\n            style: \"transform: \" + \"translate(\" + (this.widthCm - 0.35) + \"cm,0.05cm)\", // + (<TextLine>this.lines[0]).textHeightCm + \"cm)\"\r\n        })\r\n\r\n        this.addMouseEvents();\r\n    }\r\n\r\n    getTrianglePath() {\r\n        if (this.withMethods) {\r\n            return \"M 0 8 L 11 8 L 5.5 2 L 0 8\";\r\n        } else {\r\n            return \"M 0 2 L 11 2 L 5.5 8 L 0 2\";\r\n        }\r\n        // if (this.withMethods) {\r\n        //     return \"M 3 6 L 11 6 L 7 2 L 3 6\";\r\n        // } else {\r\n        //     return \"M 3 2 L 11 2 L 7 6 L 3 2\";\r\n        // }\r\n    }\r\n\r\n    detach() {\r\n        this.$element?.off('mousedown.diagramElement');\r\n        jQuery(document).off('mouseup.diagramElement');\r\n        jQuery(document).off('mousemove.diagramElement');\r\n        super.detach();\r\n    }\r\n\r\n    addMouseEvents() {\r\n        let that = this;\r\n\r\n        if (this.$dropdownTriangle != null) {\r\n            this.$dropdownTriangle.off(\"mouseup.dropdowntriangle\");\r\n            this.$dropdownTriangle.off(\"mousedown.dropdowntriangle\");\r\n        }\r\n\r\n        this.$dropdownTriangle.on(\"mousedown.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n        });\r\n        this.$dropdownTriangle.on(\"mouseup.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n            this.withMethods = !this.withMethods;\r\n            this.withAttributes = !this.withAttributes;\r\n            this.$dropdownTriangle.attr(\"d\", this.getTrianglePath());\r\n            this.renderLines();\r\n            (<ClassDiagram><any>this.diagram).adjustClassDiagramSize();\r\n            (<ClassDiagram><any>this.diagram).updateArrows();\r\n        });\r\n\r\n        this.$element.on('mousedown.diagramElement', (event: JQuery.MouseDownEvent) => {\r\n\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n\r\n            if (event.button != 0) return;\r\n\r\n            let x = event.screenX;\r\n            let y = event.screenY;\r\n\r\n            that.$element.find('rect').addClass('dragging');\r\n\r\n            jQuery(document).off('mouseup.diagramElement');\r\n            jQuery(document).off('mousemove.diagramElement');\r\n\r\n            jQuery(document).on('mousemove.diagramElement', (event: JQuery.MouseMoveEvent) => {\r\n                let cmPerPixel = 1 / 96 * 2.36 / this.diagram.zoomfactor;\r\n                let dx = (event.screenX - x) * cmPerPixel;\r\n                let dy = (event.screenY - y) * cmPerPixel;\r\n\r\n                x = event.screenX;\r\n                y = event.screenY;\r\n\r\n                that.move(dx, dy, true);\r\n\r\n\r\n                clearTimeout(that.inDebounce);\r\n                that.inDebounce = setTimeout(() => {\r\n                    let classDiagram = <ClassDiagram><any>that.diagram;\r\n                    classDiagram.updateArrows();\r\n                }, 200);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.diagramElement', () => {\r\n                that.move(0, 0, true, true);\r\n                let classDiagram = <ClassDiagram><any>that.diagram;\r\n                classDiagram.adjustClassDiagramSize();\r\n                classDiagram.updateArrows();\r\n                that.$element.find('rect').removeClass('dragging');\r\n                jQuery(document).off('mouseup.diagramElement');\r\n                jQuery(document).off('mousemove.diagramElement');\r\n                classDiagram.dirty = true;\r\n            });\r\n\r\n\r\n        })\r\n    }\r\n\r\n    getVisibilityText(visibility: Visibility) {\r\n        switch (visibility) {\r\n            case Visibility.private: return \"-\";\r\n            case Visibility.protected: return \"#\";\r\n            case Visibility.public: return \"+\";\r\n        }\r\n    }\r\n\r\n    getSignature(klass: Klass | Interface): number {\r\n\r\n        let s: string = \"\";\r\n\r\n        if (klass instanceof Klass && this.withAttributes && klass.attributes.length > 0) {\r\n            for (let a of klass.attributes) s += this.getVisibilityText(a.visibility) + a.type.identifier + \" \" + a.identifier;\r\n        }\r\n\r\n        if (this.withMethods && klass.methods.length > 0) {\r\n            for (let m of klass.methods) {\r\n                if (m.isConstructor) continue;\r\n                let rt: string = m.returnType == null ? \"void\" : m.returnType.identifier;\r\n                s += this.getVisibilityText(m.visibility) + rt + \" \" + m.identifier + \"(\" +\r\n                    m.parameterlist.parameters.map((p) => { return p.type.identifier + \" \" + p.identifier }).join(\", \") + \")\";\r\n            }\r\n        }\r\n\r\n        return hash(s);\r\n\r\n    }\r\n\r\n    hasSignatureAndFileOf(klass: Klass | Interface) {\r\n        return klass.module.file.name == this.filename &&\r\n            this.getSignature(klass) == this.hashedSignature;\r\n    }\r\n\r\n\r\n\r\n}","import { Point } from \"./Router.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { DiagramUnitCm } from \"../Diagram.js\";\r\n\r\ntype Step = {r: number, f: number};\r\ntype Arrow = {\r\n    steps: Step[],\r\n    stroke: string,\r\n    fill: string,\r\n    \"stroke-dasharray\": string\r\n}\r\n\r\nexport class ArrowHead {\r\n\r\n    static rauteAlpha = 60;\r\n    static arrows: {[type: string]: Arrow} = {\r\n        \"inheritance\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined //\"4\"\r\n        },\r\n        \"realization\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#8080ff\",\r\n            \"stroke-dasharray\": \"4\"\r\n        },\r\n        \"composition\": {\r\n            steps: [{r: 90 + ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3},\r\n                 {r: 2*ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined\r\n        },\r\n    }\r\n\r\n    static makeHead(position1Cm: Point, position2Cm: Point, type: string): {\r\n        path: string,\r\n        stroke: string,\r\n        fill: string,\r\n    } {\r\n\r\n        let dx = position2Cm.x - position1Cm.x;\r\n        let dy = position2Cm.y - position1Cm.y;\r\n\r\n        let d = Math.sqrt(dx*dx+dy*dy);\r\n        \r\n        if(d < 0.00001) return {path: \"\", stroke: \"none\", fill: \"none\"};\r\n\r\n        let ex = dx/d;\r\n        let ey = dy/d;\r\n\r\n        let path: string = \"M \" + position2Cm.x * DiagramUnitCm / DiagramArrow.cmPerPx \r\n            + \" \" + position2Cm.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n\r\n        let arrow = this.arrows[type];\r\n\r\n        for(let step of arrow.steps){\r\n            let angle = step.r / 180 * Math.PI;\r\n            let ex1 = ex * Math.cos(angle) - ey * Math.sin(angle);\r\n            let ey1 = ex * Math.sin(angle) + ey * Math.cos(angle);\r\n            path += \" l \" + ex1 * step.f / DiagramArrow.cmPerPx + \" \" + ey1 * step.f / DiagramArrow.cmPerPx;\r\n            ex = ex1;\r\n            ey = ey1;\r\n        }\r\n\r\n        return {\r\n            path: path,\r\n            fill: arrow.fill,\r\n            stroke: arrow.stroke\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"../Diagram.js\";\r\nimport { RoutingArrow, Point } from \"./Router.js\";\r\nimport { ArrowHead } from \"./ArrowHead.js\";\r\n\r\nexport class DiagramArrow {\r\n\r\n    public static cmPerPx: number = 2.54 / 96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    constructor(protected parent: Element, private routingArrow: RoutingArrow, private color: string) {\r\n\r\n    }\r\n\r\n    public show() {\r\n        if (this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide() {\r\n        if (this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if (this.$element == null) return;\r\n        this.$element.detach();\r\n    }\r\n\r\n    remove() {\r\n        if (this.$element == null) return;\r\n        this.$element.remove();\r\n    }\r\n\r\n    appendTo($element: JQuery<Element>) {\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear() {\r\n        if (this.$element == null) return;\r\n        this.$element.empty();\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        if (parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n            font: \"16px Roboto\",\r\n            \"font-family\": \"sans-serif\",\r\n            fill: \"#000\",\r\n            \"alignment-baseline\": \"hanging\"\r\n        });\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        $element.text(text);\r\n\r\n        return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>): { height: number, width: number } {\r\n        let bbox: DOMRect = textElement[0].getBBox();\r\n\r\n        return {\r\n            height: bbox.height * DiagramArrow.cmPerPx,\r\n            width: bbox.width * DiagramArrow.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public render() {\r\n\r\n        let $group = this.$element;\r\n        if ($group == null) {\r\n            $group = this.createElement(\"g\", this.parent);\r\n            this.$element = $group;\r\n            $group.css(\"stroke\", this.color);\r\n        } else {\r\n            $group.empty();\r\n        }\r\n\r\n        let points = this.routingArrow.minimalPoints;\r\n        if (points == null || points.length < 2) {\r\n            return;\r\n        }\r\n\r\n        let path = \"M \" + this.getPathCoordinates(points[0]);\r\n\r\n        for (let i = 1; i < points.length; i++) {\r\n            path += \" L \" + this.getPathCoordinates(points[i]);\r\n        }\r\n\r\n        let arrowData = ArrowHead.arrows[this.routingArrow.arrowType];\r\n        let $path = this.createElement(\"path\", $group[0], { d: path });\r\n        $path.css({\r\n            // stroke: \"#000000\",\r\n            \"stroke-width\": \"0.2 cm\",\r\n            \"fill\": \"none\",\r\n            \"stroke-dasharray\": arrowData[\"stroke-dasharray\"]\r\n        });\r\n\r\n        while (points.length > 1 && points[points.length - 1].x == points[points.length - 2].x &&\r\n            points[points.length - 1].y == points[points.length - 2].y) {\r\n            points.pop();\r\n        }\r\n\r\n        if (points.length > 1 && this.routingArrow.endsOnArrowWithIdentifier == null) {\r\n            let head = ArrowHead.makeHead(points[points.length - 2], points[points.length - 1],\r\n                this.routingArrow.arrowType);\r\n\r\n            let $head = this.createElement(\"path\", $group[0], { d: head.path });\r\n            $head.css({\r\n                stroke: this.color,\r\n                \"stroke-width\": \"0.2 cm\",\r\n                \"fill\": head.fill\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getPathCoordinates(point: Point): string {\r\n        let x = point.x * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        let y = point.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        return \"\" + x + \" \" + y;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Interface, Klass } from \"../../../../compiler/types/Class.js\";\r\nimport { Workspace } from \"../../../../workspace/Workspace.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram, DiagramUnitCm } from \"../Diagram.js\";\r\nimport { ClassBox, SerializedClassBox } from \"./ClassBox.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { RoutingInput, RoutingOutput } from \"./Router.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\nimport { openContextMenu } from \"../../../../tools/HtmlTools.js\";\r\nimport { TeachersWithClassesMI } from \"../../../../administration/TeachersWithClasses.js\";\r\n\r\ntype ClassBoxes = {\r\n    active: ClassBox[],\r\n    inactive: ClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n};\r\n\r\nexport type SerializedClassDiagram = {\r\n    classBoxes: SerializedClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n}\r\n\r\nexport class ClassDiagram extends Diagram {\r\n\r\n    classBoxesRepository: { [workspaceId: number]: ClassBoxes } = {};\r\n\r\n    arrows: DiagramArrow[] = [];\r\n\r\n    currentWorkspaceId: number = null;\r\n    currentWorkspace: Workspace;\r\n    currentClassBoxes: ClassBoxes;\r\n\r\n    version: number = 0;\r\n\r\n    straightArrowSectionAfterRectangle = 2;\r\n    distanceFromRectangles = 2;\r\n    slotDistance = 2;\r\n\r\n    dirty: boolean = false;\r\n    routingWorker: Worker;\r\n\r\n    constructor(private $htmlElement: JQuery<HTMLElement>, main: MainBase) {\r\n        super($htmlElement, main);\r\n\r\n        let that = this;\r\n        this.$menuButton.on('click', (ev) => {\r\n            ev.preventDefault();\r\n            let displaysSystemClasses = that.currentClassBoxes.displaySystemClasses == true;\r\n            let parametersWithTypes = that.currentClassBoxes.parametersWithTypes == true;\r\n            openContextMenu([\r\n                {\r\n                    caption: displaysSystemClasses ? \"Systemklassen ausblenden\" : \"Systemklassen einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.displaySystemClasses = !displaysSystemClasses;\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n                {\r\n                    caption: parametersWithTypes ? \"Parameter ausblenden\" : \"Parameter einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.parametersWithTypes = !parametersWithTypes;\r\n                        that.currentClassBoxes.active.forEach((cb) => {cb.hashedSignature = -1});\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n            ], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        });\r\n    }\r\n\r\n    clearAfterLogout() {\r\n        this.classBoxesRepository = {};\r\n        this.arrows.forEach((arrow) => { arrow.remove(); });\r\n        $(this.svgElement).empty();\r\n    }\r\n\r\n    serialize(): SerializedClassDiagram {\r\n\r\n        if(this.currentClassBoxes == null) return;\r\n\r\n        let scd: SerializedClassDiagram = {\r\n            classBoxes: [],\r\n            displaySystemClasses: this.currentClassBoxes.displaySystemClasses,\r\n            parametersWithTypes: this.currentClassBoxes.parametersWithTypes\r\n        }\r\n\r\n        for (let workspaceId in this.classBoxesRepository) {\r\n            let classBox = this.classBoxesRepository[workspaceId];\r\n            for (let cb of classBox.active) {\r\n                let cbs = cb.serialize();\r\n                cbs.workspaceId = Number.parseInt(workspaceId);\r\n                scd.classBoxes.push(cbs);\r\n            }\r\n        }\r\n\r\n        return scd;\r\n\r\n    }\r\n\r\n    deserialize(serializedClassDiagram: SerializedClassDiagram) {\r\n        for (let cb of serializedClassDiagram.classBoxes) {\r\n            let classBoxes: ClassBoxes = this.classBoxesRepository[cb.workspaceId];\r\n            if (classBoxes == null) {\r\n                classBoxes = {\r\n                    active: [],\r\n                    inactive: [],\r\n                    displaySystemClasses: false,\r\n                    parametersWithTypes: false\r\n                }\r\n                this.classBoxesRepository[cb.workspaceId] = classBoxes;\r\n            }\r\n            classBoxes.inactive.push(ClassBox.deserialize(this, cb));\r\n            classBoxes.displaySystemClasses = serializedClassDiagram.displaySystemClasses;\r\n            classBoxes.parametersWithTypes = serializedClassDiagram.parametersWithTypes;\r\n        }\r\n    }\r\n\r\n\r\n    adjustClassDiagramSize() {\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n        this.adjustSizeAndElements(classBoxes.active);\r\n    }\r\n\r\n    getClassBoxes(workspace: Workspace): ClassBoxes {\r\n        let cb: ClassBoxes = this.classBoxesRepository[workspace.id];\r\n        if (cb == null) {\r\n            cb = {\r\n                active: [],\r\n                inactive: [],\r\n                displaySystemClasses: false,\r\n                parametersWithTypes: false\r\n            }\r\n            this.classBoxesRepository[workspace.id] = cb;\r\n        }\r\n        return cb;\r\n    }\r\n\r\n    switchToWorkspace(workspace: Workspace): ClassBoxes {\r\n        let cbs1 = this.getClassBoxes(workspace);\r\n\r\n        if (this.currentWorkspaceId != workspace.id) {\r\n            if (this.currentWorkspaceId != null) {\r\n                let cbs = this.classBoxesRepository[this.currentWorkspaceId];\r\n                if (cbs != null) {\r\n                    for (let cb of cbs.active) {\r\n                        cb.detach();\r\n                    }\r\n                    for (let cb of cbs.inactive) {\r\n                        cb.detach();\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let cb of cbs1.active) {\r\n                this.svgElement.appendChild(cb.$element[0]);\r\n            }\r\n            for (let cb of cbs1.inactive) {\r\n                if (cb.$element != null) {\r\n                    this.svgElement.appendChild(cb.$element[0]);\r\n                }\r\n            }\r\n\r\n            this.adjustSizeAndElements(cbs1.active);\r\n        }\r\n\r\n        this.currentWorkspaceId = workspace.id;\r\n\r\n        return cbs1;\r\n\r\n    }\r\n\r\n    drawDiagram(workspace: Workspace, onlyUpdateIdentifiers: boolean) {\r\n\r\n        if (workspace == null) return;\r\n        this.currentWorkspace = workspace;\r\n        this.currentClassBoxes = this.switchToWorkspace(workspace);\r\n\r\n        let moduleStore = workspace.moduleStore;\r\n\r\n        let newClassBoxes: ClassBox[] = [];\r\n\r\n        let anyTypelistThere: boolean = false;\r\n        let newClassesToDraw: (Klass | Interface)[] = [];\r\n        let usedSystemClasses: (Klass | Interface)[] = [];\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let typeList = module?.typeStore?.typeList;\r\n            if (typeList == null) continue;\r\n            anyTypelistThere = true;\r\n\r\n\r\n            typeList.filter((type) => {\r\n                return type instanceof Klass ||\r\n                    type instanceof Interface\r\n            }).forEach((klass: Klass | Interface) => {\r\n                let cb: ClassBox = this.findAndEnableClass(klass, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n                if (klass instanceof Klass) {\r\n                    klass.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            });\r\n        }\r\n\r\n        // recursively register system classes that are used by other system classes\r\n        let uscList1: (Klass | Interface)[] = [];\r\n        while (uscList1.length < usedSystemClasses.length) {\r\n            uscList1 = usedSystemClasses.slice(0);\r\n            for (let usc of uscList1) {\r\n                if (usc instanceof Klass) {\r\n                    usc.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.currentClassBoxes.displaySystemClasses) {\r\n            for (let usc of usedSystemClasses) {\r\n                let cb: ClassBox = this.findAndEnableClass(usc, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n            }\r\n        }\r\n\r\n        this.dirty = this.dirty || newClassesToDraw.length > 0;\r\n\r\n        for (let klass of newClassesToDraw) {\r\n            let cb = new ClassBox(this, Math.random() * 10 * DiagramUnitCm, Math.random() * 10 * DiagramUnitCm, klass);\r\n\r\n            cb.renderLines();\r\n\r\n            let freePos = this.findFreeSpace(newClassBoxes, cb.widthCm, cb.heightCm, this.minDistance);\r\n\r\n            cb.moveTo(freePos.x, freePos.y, true);\r\n\r\n            newClassBoxes.push(cb);\r\n\r\n        }\r\n\r\n        if (newClassesToDraw.length > 0) {\r\n            this.adjustSizeAndElements(newClassBoxes);\r\n        }\r\n\r\n        if (!anyTypelistThere) return;\r\n\r\n        for (let cb of this.currentClassBoxes.active) {\r\n            cb.hide();\r\n            cb.active = false;\r\n            this.currentClassBoxes.inactive.push(cb);\r\n        }\r\n\r\n        this.currentClassBoxes.active = newClassBoxes;\r\n\r\n        if (!onlyUpdateIdentifiers) {\r\n            this.adjustClassDiagramSize();\r\n            this.updateArrows();\r\n        }\r\n\r\n    }\r\n\r\n    updateArrows() {\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n        // return;\r\n\r\n        let colors: string[] = [\"#0075dc\", \"#993f00\", \"#005c31\", \"#ff5005\", \"#2bce48\",\r\n            \"#0000ff\", \"#ffa405\", '#ffa8bb', '#740aff', '#990000', '#ff0000'];\r\n        let colorIndex = 0;\r\n\r\n        let routingInput = this.drawArrows();\r\n\r\n        this.version++;\r\n        routingInput.version = this.version;\r\n\r\n        if (this.routingWorker != null) {\r\n            this.routingWorker.terminate();\r\n        }\r\n\r\n        this.routingWorker = new Worker('js/main/gui/diagrams/classdiagram/Router.js');\r\n        let that = this;\r\n        this.routingWorker.onmessage = function (e) {\r\n            // when worker finished:\r\n            let ro: RoutingOutput = e.data;\r\n            if (ro.version == that.version) {\r\n                that.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n                that.arrows.forEach((arrow) => { arrow.remove(); });\r\n\r\n                let arrowIdentifierToColorMap: { [identifier: string]: string } = {};\r\n\r\n                let arrowsWithoutColor: number = ro.arrows.length + 1;\r\n                let arrowsWithoutColorLast: number;\r\n                do {\r\n                    arrowsWithoutColorLast = arrowsWithoutColor;\r\n                    arrowsWithoutColor = 0;\r\n                    ro.arrows.forEach((arrow) => {\r\n                        if (arrow.color == null) {\r\n                            arrowsWithoutColor++;\r\n                            if (arrow.endsOnArrowWithIdentifier == null) {\r\n                                arrow.color = colors[colorIndex];\r\n                                arrowIdentifierToColorMap[arrow.identifier] = arrow.color;\r\n                                colorIndex++;\r\n                                if (colorIndex > colors.length - 1) colorIndex = 0;\r\n                            } else {\r\n                                arrow.color = arrowIdentifierToColorMap[arrow.endsOnArrowWithIdentifier];\r\n                            }\r\n                        }\r\n                    });\r\n                } while (arrowsWithoutColor < arrowsWithoutColorLast);\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    if (arrow.color == null) {\r\n                        arrow.color = \"#ff0000\";\r\n                    }\r\n                });\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    let da: DiagramArrow = new DiagramArrow(that.svgElement, arrow, arrow.color);\r\n                    da.render();\r\n                    that.arrows.push(da);\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n\r\n        this.routingWorker.postMessage(routingInput); // start worker!\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').show();\r\n\r\n    }\r\n\r\n    drawArrows(): RoutingInput {\r\n\r\n        let routingInput: RoutingInput = {\r\n            rectangles: [],\r\n            arrows: [],\r\n            xMax: Math.ceil(this.widthCm / DiagramUnitCm),\r\n            yMax: Math.ceil(this.heightCm / DiagramUnitCm),\r\n            straightArrowSectionAfterRectangle: this.straightArrowSectionAfterRectangle,\r\n            distanceFromRectangles: this.distanceFromRectangles,\r\n            slotDistance: this.slotDistance\r\n        }\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n            routingInput.rectangles.push(cb.getRoutingRectangle());\r\n        });\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n\r\n            if (cb.klass instanceof Klass) {\r\n                if (cb.klass.baseClass != null) {\r\n                    let cb1 = this.findClassbox(cb.klass.baseClass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"inheritance\", routingInput);\r\n                    }\r\n                }\r\n                for (let intf of cb.klass.implements) {\r\n                    let cb1 = this.findClassbox(intf, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"realization\", routingInput);\r\n                    }\r\n                }\r\n                for (let cd of cb.klass.getCompositeData()) {\r\n                    let cb1 = this.findClassbox(cd.klass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb1, cb, \"composition\", routingInput);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return routingInput;\r\n\r\n    }\r\n\r\n    drawArrwow(cb1: ClassBox, cb2: ClassBox, arrowType: string, routingInput: RoutingInput) {\r\n\r\n        let rect1 = cb1.getRoutingRectangle();\r\n        let rect2 = cb2.getRoutingRectangle();\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        routingInput.arrows.push({\r\n            arrowType: arrowType,\r\n\r\n            destRectangleIndex: classBoxes.active.indexOf(cb2),\r\n\r\n            sourceRectangleIndex: classBoxes.active.indexOf(cb1),\r\n\r\n            destinationIdentifier: cb2.className,\r\n            identifier: cb1.className + \"(extends)\" + cb2.className\r\n        });\r\n\r\n    }\r\n\r\n    findClassbox(klass: Klass | Interface, classBoxes: ClassBox[]): ClassBox {\r\n\r\n        for (let cb of classBoxes) {\r\n            if (cb.klass == klass) return cb;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAndEnableClass(klass: Klass | Interface, classBoxes: ClassBoxes, newClassesToDraw: (Klass | Interface)[]): ClassBox {\r\n        let i = 0;\r\n        while (i < classBoxes.active.length) {\r\n            let k = classBoxes.active[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                k.attachToClass(klass);\r\n                classBoxes.active.splice(i, 1);\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        i = 0;\r\n        while (i < classBoxes.inactive.length) {\r\n            let k = classBoxes.inactive[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                classBoxes.inactive.splice(i, 1);\r\n                k.klass = klass;\r\n                k.renderLines();\r\n                k.show();\r\n                k.active = true;\r\n                this.dirty = true;\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        newClassesToDraw.push(klass);\r\n\r\n        return null;\r\n    }\r\n\r\n    clear() {\r\n\r\n        let cb = this.classBoxesRepository[this.currentWorkspaceId];\r\n        if (cb != null) {\r\n            for (let c of cb.active) {\r\n                c.detach();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Klass, Interface, Visibility } from \"../../../../compiler/types/Class.js\";\r\nimport { Variable, Value } from \"../../../../compiler/types/Types.js\";\r\nimport { ObjectClass } from \"../../../../compiler/types/ObjectClass.js\";\r\nimport { RuntimeObject } from \"../../../../interpreter/RuntimeObject.js\";\r\n\r\ntype Reference = {\r\n    sourceValue: RuntimeObject,\r\n    destValue: RuntimeObject,\r\n    attributeIdentifier: string\r\n}\r\n\r\nexport class ListDiagram extends ObjectDiagramVariant {\r\n\r\n    rootIdentifier: string;\r\n\r\n    $selectElement: JQuery<HTMLSelectElement>;\r\n\r\n    getSettingsElement(): JQuery<HTMLElement> {\r\n\r\n        let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n\r\n        let $element = jQuery('<span>Start der Liste:&nbsp;</span>');\r\n        this.$selectElement = jQuery('<select></select>');\r\n        $element.append(this.$selectElement);\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let childSymbolTables = module.mainSymbolTable?.childSymbolTables;\r\n            if (childSymbolTables == null || childSymbolTables.length == 0) continue;\r\n            let variableMap = childSymbolTables[0].variableMap;\r\n            if (variableMap == null || childSymbolTables[0].classContext != null) continue;\r\n            variableMap.forEach((variable, identifier) => {\r\n                let type = variable.type;\r\n                if (type != null && type instanceof Klass && type.module != null && !type.module.isSystemModule) {\r\n                    let selected: string = identifier == this.rootIdentifier ? \" selected\" : \"\";\r\n                    this.$selectElement.append('<option value=\"' + identifier + selected + '\">' + identifier +\r\n                        ' (Modul \"' + module.file.name + '\")</option>');\r\n                }\r\n            });\r\n        }\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    getName(): string { return \"Liste\" }\r\n\r\n    updateDiagram(): void {\r\n\r\n        let heap = this.main.getInterpreter().heap;\r\n        let rootValue = heap[this.rootIdentifier]?.value;\r\n        if (rootValue == null) {\r\n            this.objectDiagram.error(\"Konnte die Variable \" + this.rootIdentifier + \" nicht finden.\");\r\n            return;\r\n        }\r\n\r\n        if (rootValue.type == null || !(rootValue.type instanceof Klass)) {\r\n            this.objectDiagram.error(\"Die Variable \" + this.rootIdentifier + \" zeigt auf kein Objekt.\");\r\n        }\r\n\r\n        let klass: Klass = <Klass>rootValue.type;\r\n        let rto: RuntimeObject = rootValue.value;\r\n\r\n        // if rootValue is self of self referncing type then this array holds values:\r\n        let rootValueSelfReferenceType = this.analyzeSelfReference(klass);\r\n\r\n        // ... else find referenced class which is of self referencing type;\r\n        let attributesWithSelfReference: string[] = [];\r\n        let selfReferenceType: Klass | Interface;\r\n\r\n        if (rootValueSelfReferenceType == null) {\r\n\r\n            let k = klass;\r\n            while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n                for (let a of k.attributes) {\r\n                    let value = rto.attributes[a.index];\r\n                    if (!(value.type instanceof Klass)) continue;\r\n                    if (selfReferenceType != null && selfReferenceType == a.type) {\r\n                        attributesWithSelfReference.push(a.identifier);\r\n                    } else {\r\n                        let sr = this.analyzeSelfReference(value.type);\r\n                        if (sr != null) {\r\n                            selfReferenceType = sr;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                k = k.baseClass;\r\n            }\r\n\r\n        }\r\n\r\n        if (rootValueSelfReferenceType == null && selfReferenceType == null) {\r\n            this.objectDiagram.error(\"Konnte kein sich selbst referenzierendes Objekt finden.\");\r\n        } else {\r\n            this.drawDiagram(rootValue, rootValueSelfReferenceType, attributesWithSelfReference, selfReferenceType);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    drawDiagram(rootValue: Value, rootValueSelfReferenceType: Klass | Interface,\r\n        attributesWithSelfReference: string[], selfReferenceType: Klass | Interface) {\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n    analyzeSelfReference(klass: Klass): Klass | Interface {\r\n\r\n        let tImplements: Interface[] = [];\r\n        let tExtends: Klass[];\r\n\r\n        let k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n            if (k.implements.length > 0)\r\n                tImplements = tImplements.concat(k.implements);\r\n\r\n            if (k.baseClass != null && !(k.baseClass instanceof ObjectClass)) {\r\n                tExtends.push(k.baseClass);\r\n            }\r\n            k = k.baseClass;\r\n        }\r\n\r\n        k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n            for (let a of k.attributes) {\r\n                let type = a.type;\r\n                if (tImplements.indexOf(<Interface>type) >= 0 || tExtends.indexOf(<Klass>type) >= 0) {\r\n                    return <Klass | Interface>type;\r\n                }\r\n            }\r\n\r\n            k = k.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    clear(): void {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../../../Main.js\";\r\nimport { ObjectDiagram } from \"./ObjectDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\n\r\nexport abstract class ObjectDiagramVariant {\r\n\r\n    constructor(protected main: MainBase, protected objectDiagram: ObjectDiagram){\r\n\r\n    }\r\n\r\n    abstract getName(): string;\r\n\r\n    abstract getSettingsElement(): JQuery<HTMLElement>;\r\n    \r\n    abstract updateDiagram(): void;\r\n\r\n    abstract clear(): void;\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { ListDiagram } from \"./ListDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\nexport class ObjectDiagram extends Diagram {\r\n\r\n    variants: ObjectDiagramVariant[] = [];\r\n    currentVariant: ObjectDiagramVariant = null;\r\n\r\n    constructor(main: MainBase, private $objectDiagramDiv: JQuery<HTMLElement>) {\r\n        super($objectDiagramDiv.find('.jo_objectdiagram-canvas'), main);\r\n        this.variants.push(new ListDiagram(main, this));\r\n\r\n        let $typeOption = $objectDiagramDiv.find('.jo_objectdiagram-type');\r\n        $typeOption.empty();\r\n        $typeOption.append('<option value=\"none\" selected>Bitte auswählen...</option>');\r\n\r\n        let i = 0;\r\n        for (let variant of this.variants) {\r\n            $typeOption.append('<option value=\"' + i + '\">' + variant.getName() + '</option>');\r\n        }\r\n\r\n        let that = this;\r\n        $typeOption.on('change', (e) => {\r\n            //@ts-ignore\r\n            let value: string = e.currentTarget.value;\r\n            if(value == null){\r\n                if(that.currentVariant != null){\r\n                    that.$canvas.find('.jo_objectDiagramError').remove();\r\n                    that.currentVariant.clear();\r\n                }\r\n                that.currentVariant = null;\r\n            } else {\r\n                let intValue = Number.parseInt(value);\r\n                that.currentVariant = that.variants[intValue];\r\n            }\r\n            that.updateSettings();\r\n        });\r\n\r\n    }\r\n\r\n    error(error: string){\r\n        this.$canvas.append('<div class=\"jo_objectDiagramError\">' + error + '</div>')\r\n    }\r\n\r\n\r\n    updateSettings(){\r\n        let $settingsDiv = this.$objectDiagramDiv.find('.jo_objectdiagram-settings');\r\n        if(this.currentVariant != null){\r\n            $settingsDiv.empty();\r\n            $settingsDiv.append(this.currentVariant.getSettingsElement());\r\n        } else {\r\n            $settingsDiv.empty();\r\n        }\r\n    }\r\n    \r\n    updateDiagram(){\r\n        if(this.currentVariant != null){\r\n            this.currentVariant.updateDiagram();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { WorldHelper } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassDiagram } from \"./diagrams/classdiagram/ClassDiagram.js\";\r\nimport { ObjectDiagram } from \"./diagrams/objectdiagram/ObjectDiagram.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    classDiagram: ClassDiagram;\r\n    objectDiagram: ObjectDiagram;\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        if(withClassDiagram){\r\n            this.classDiagram = new ClassDiagram(this.$tabs.find('.jo_classdiagram'), main);\r\n            this.$headings.find('.jo_classDiagramTabHeading').on(\"click\", () => { that.main.drawClassDiagrams(false) });\r\n        }\r\n\r\n        if(withObjectDiagram){\r\n            this.objectDiagram = new ObjectDiagram(this.main, this.$tabs.find('.jo_objectdiagram'));\r\n            this.$headings.find('.jo_objectDiagramTabHeading').on(\"click\", () => { that.onObjectDiagramEnabled() });\r\n        }\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    adjustWidthToWorld() {\r\n        let worldHelper: WorldHelper = this.main.getInterpreter().worldHelper;\r\n        if (worldHelper != null && this.isWholePage) {\r\n            let screenHeight = window.innerHeight - this.$headings.height() - 6;\r\n            let screenWidthToHeight = window.innerWidth / (screenHeight);\r\n            let worldWidthToHeight = worldHelper.width / worldHelper.height;\r\n            if (worldWidthToHeight <= screenWidthToHeight) {\r\n                let newWidth = worldWidthToHeight * screenHeight;\r\n                this.$tabs.find('.jo_run').css('width', newWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', screenHeight + \"px\");\r\n            } else {\r\n                let newHeight = window.innerWidth / worldWidthToHeight;\r\n                this.$tabs.find('.jo_run').css('width', window.innerWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', newHeight + \"px\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n    isClassDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_classDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    isObjectDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_objectDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    updateObjectDiagramSettings() {\r\n        if (this.isObjectDiagramEnabled) {\r\n            this.objectDiagram.updateSettings();\r\n        }\r\n    }\r\n\r\n    onObjectDiagramEnabled() {\r\n        this.objectDiagram.updateSettings();\r\n        if (this.main.getInterpreter().state == InterpreterState.paused || this.main.getInterpreter().state == InterpreterState.running) {\r\n            this.objectDiagram.updateDiagram();\r\n        }\r\n    }\r\n\r\n\r\n}","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$sliderDiv.on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider\");\r\n                jQuery(document).off(mousePointer + \"up.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        if($fileListDiv != null){\r\n            let $filesDiv = $fileListDiv.parent();\r\n            let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n            $filesDiv.append($addButton);\r\n    \r\n            $addButton.on(\"click\", () => {\r\n    \r\n                let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"java\" });\r\n                let fileData = this.addModule(module);\r\n    \r\n                this.renameElement(fileData, () => {\r\n                    // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                    if (that.currentFile != fileData) {\r\n                        that.selectFile(fileData);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        if(this.$fileListDiv != null){\r\n            this.$fileListDiv.append($fileDiv);\r\n        }\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"java\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv,\r\n            isFolder: false,\r\n            path: []\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"java\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        if(this.$fileListDiv == null) return;\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(\"LearnJ\", 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStore = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n\r\n\r\n                objectStore.transaction.oncomplete = function(event) {\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File, ExportedWorkspace } from \"../compiler/parser/Module.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { downloadFile, makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { HitPolygonStore } from \"../runtimelibrary/graphics/PolygonStore.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withPCode?: boolean,\r\n    withConsole?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    speed?: number | \"max\",\r\n    id?: string,\r\n    hideStartPanel?: boolean,\r\n    hideEditor?: boolean,\r\n    libraries?: string[],\r\n    jsonFilename?: string\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    isEmbedded(): boolean { return true; }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) { };\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n    $runDiv: JQuery<HTMLElement>;\r\n\r\n    debugger: Debugger;\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $resetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.initGUI($div);\r\n\r\n        this.initScripts();\r\n\r\n        if (!this.config.hideStartPanel) {\r\n            this.indexedDB = new EmbeddedIndexedDB();\r\n            this.indexedDB.open(() => {\r\n\r\n                if (this.config.id != null) {\r\n                    this.readScripts();\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"java-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if (this.config.hideEditor == null) this.config.hideEditor = false;\r\n        if (this.config.hideStartPanel == null) this.config.hideStartPanel = false;\r\n\r\n        if (this.config.withBottomPanel == null) {\r\n            this.config.withBottomPanel = this.config.withConsole || this.config.withPCode || this.config.withFileList || this.config.withErrorList;\r\n        }\r\n\r\n        if (this.config.hideEditor) {\r\n            this.config.withBottomPanel = false;\r\n            this.config.withFileList = false;\r\n            this.config.withConsole = false;\r\n            this.config.withPCode = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n        if (this.config.withBottomPanel) {\r\n            if (this.config.withFileList == null) this.config.withFileList = true;\r\n            if (this.config.withPCode == null) this.config.withPCode = true;\r\n            if (this.config.withConsole == null) this.config.withConsole = true;\r\n            if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        }\r\n\r\n        if (this.config.speed == null) this.config.speed = 9;\r\n        if (this.config.libraries == null) this.config.libraries = [];\r\n        if(this.config.jsonFilename == null) this.config.jsonFilename = \"workspace.json\";\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if(module == null) return;\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n        module.renderBreakpointDecorators();\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            script = this.eraseDokuwikiSearchMarkup(script);\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"java\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$resetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n        this.currentWorkspace.settings.libraries = this.config.libraries;\r\n        this.currentWorkspace.alterAdditionalLibraries();\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"java\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            identical_to_repository_version: false,\r\n            file_type: 0\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n        let $resetModalWindow = this.makeCodeResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$resetButton = jQuery('<div class=\"joe_resetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$resetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        this.$resetButton.hide();\r\n\r\n        this.$resetButton.on(\"click\", () => { $resetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n        let $buttonOpen = jQuery('<label type=\"file\" class=\"img_open-file jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace aus Datei laden\"><input type=\"file\" style=\"display:none\"></label>');\r\n\r\n        let that = this;\r\n\r\n        $buttonOpen.find('input').on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            that.loadWorkspaceFromFile(files[0]);\r\n        })\r\n\r\n        let $buttonSave = jQuery('<div class=\"img_save-dark jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace in Datei speichern\"></div>');\r\n\r\n\r\n        $buttonSave.on('click', () => { that.saveWorkspaceToFile() });\r\n\r\n        $controlsDiv.append($buttonOpen, $buttonSave);\r\n\r\n\r\n\r\n        if (this.config.withBottomPanel) {\r\n            let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n            this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n            $bottomDiv.append($bottomDivInner);\r\n            if (this.config.withFileList) {\r\n                let $filesDiv = this.makeFilesDiv();\r\n                $bottomDiv.prepend($filesDiv);\r\n                new EmbeddedSlider($filesDiv, false, false, () => { });\r\n            }\r\n            makeTabs($bottomDivInner);\r\n\r\n\r\n            $centerDiv.append($editorDiv, $bottomDiv);\r\n            new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n        } else {\r\n            $centerDiv.prepend($editorDiv);\r\n        }\r\n\r\n\r\n\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            if (this.config.hideEditor) {\r\n                $rightDiv.prepend($controlsDiv);\r\n            } else {\r\n                $centerDiv.prepend($controlsDiv);\r\n                $controlsDiv.addClass('joe_controlPanel_top');\r\n                $editorDiv.css({\r\n                    'position': 'relative',\r\n                    'height': '1px'\r\n                });\r\n            }\r\n        }\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n        $div.append($centerDiv, $rightDiv);\r\n\r\n        if (!this.config.hideEditor) {\r\n            new EmbeddedSlider($rightDiv, true, false, () => {\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n                this.editor.editor.layout();\r\n            });\r\n        }\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\">');\r\n        let $coordinates = jQuery('<div class=\"jo_coordinates\">(0/0)</div>');\r\n        this.$rightDivInner.append($rightSideContainer);\r\n        $rightSideContainer.append($coordinates);\r\n\r\n        this.debugger = new Debugger(this, this.$debuggerDiv, null);\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons($controlsDiv, $editorDiv),\r\n            this.$runDiv);\r\n\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-left: 16px\"></div>');\r\n        $controlsDiv.append($infoButton);\r\n\r\n        $infoButton.on('mousedown', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über die Online-IDE ...\",\r\n                link: \"https://www.online-ide.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.interpreter.initGUI();\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.interpreter.controlButtons.speedControl.setSpeedInStepsPerSecond(this.config.speed);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n        if (this.config.hideEditor) {\r\n            $centerDiv.hide();\r\n            $rightDiv.css(\"flex\", \"1\");\r\n            if (!this.config.hideStartPanel) {\r\n                $div.find(\".joe_rightDivInner\").css('height', 'calc(100% - 24px)');\r\n                $div.find(\".joe_controlsDiv\").css('padding', '2px');\r\n                $div.find(\".jo_speedcontrol-outer\").css('z-index', '10');\r\n            } else {\r\n                $div.find(\".joe_controlsDiv\").hide();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        jQuery(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        jQuery(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$resetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            let fileData = this.fileExplorer.files.find((fileData) => fileData.module.file == file);\r\n            if (fileData == null) {\r\n                return;\r\n            }\r\n\r\n            if (fileData.module != this.getCurrentlyEditedModule()) {\r\n                this.setModuleActive(fileData.module);\r\n            }\r\n\r\n            this.programPointerModule = fileData.module;\r\n        } else {\r\n            this.programPointerModule = this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n        this.programPointerDecoration = this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealProgramPointer', isWholeLine: true }\r\n            },\r\n            {\r\n                range: range,\r\n                options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n            }\r\n        ]);\r\n\r\n\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Programmdateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n        // for (let index = 0; index < 20; index++) {            \r\n        //     let $file = jQuery('<div class=\"jo_file jo_java\"><div class=\"jo_fileimage\"></div><div class=\"jo_filename\"></div></div></div>');\r\n        //     $filesList.append($file);\r\n        // }\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                    bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                this.version++;\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    if (this.config.hideStartPanel) {\r\n                        this.actionManager.trigger('interpreter.start');\r\n                    }\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                // this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$resetButton.fadeIn(1000);\r\n        }\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        // clearTimeout(this.debounceDiagramDrawing);\r\n        // this.debounceDiagramDrawing = setTimeout(() => {\r\n        //     this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        // }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    saveWorkspaceToFile() {\r\n        let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", this.config.jsonFilename);\r\n        if (filename == null) {\r\n            alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n            return;\r\n        }\r\n        if (!filename.endsWith(\".json\")) filename = filename + \".json\";\r\n        let ws = this.currentWorkspace;\r\n        let name: string = ws.name.replace(/\\//g, \"_\");\r\n        downloadFile(ws.toExportedWorkspace(), filename)\r\n    }\r\n\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading\"></div>');\r\n\r\n        $thRightSide.append($buttonDiv);\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsoleClear = jQuery('<div class=\"img_clear-dark jo_button jo_active jo_console-clear\"' +\r\n                'style=\"display: none; margin-left: 8px;\" title=\"Console leeren\"></div>');\r\n            $thRightSide.append($thConsoleClear);\r\n        }\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsole = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_consoleTab\" style=\"line-height: 24px\">Console</div>');\r\n            $tabheadings.append($thConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading\" data-target=\"jo_pcodeTab\" style=\"line-height: 24px\">PCode</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withConsole) {\r\n            let $tabConsole = jQuery(\r\n                `\r\n        <div class=\"jo_editorFontSize jo_consoleTab\">\r\n        <div class=\"jo_console-inner\">\r\n            <div class=\"jo_scrollable jo_console-top\"></div>\r\n            <div class=\"jo_commandline\"></div>\r\n        </div>\r\n        </div>\r\n    `);\r\n\r\n            $tabs.append($tabConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $tabPCode = jQuery('<div class=\"jo_scrollable jo_pcodeTab\">PCode</div>');\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n    loadWorkspaceFromFile(file: globalThis.File) {\r\n        let that = this;\r\n        if (file == null) return;\r\n        var reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            let text: string = <string>event.target.result;\r\n            if (!text.startsWith(\"{\")) {\r\n                alert(`<div>Das Format der Datei ${file.name} passt nicht.</div>`);\r\n                return;\r\n            }\r\n\r\n            let ew: ExportedWorkspace = JSON.parse(text);\r\n\r\n            if (ew.modules == null || ew.name == null || ew.settings == null) {\r\n                alert(`<div>Das Format der Datei ${file.name} passt nicht.</div>`);\r\n                return;\r\n            }\r\n\r\n            let ws: Workspace = new Workspace(ew.name, this, 0);\r\n            ws.settings = ew.settings;\r\n            ws.alterAdditionalLibraries();\r\n\r\n            for (let mo of ew.modules) {\r\n                let f: File = {\r\n                    name: mo.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: mo.text,\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    is_copy_of_id: null,\r\n                    repository_file_version: null,\r\n                    identical_to_repository_version: null\r\n                };\r\n\r\n                let m = new Module(f, this);\r\n                ws.moduleStore.putModule(m);\r\n            }\r\n            that.currentWorkspace = ws;\r\n\r\n            if(that.fileExplorer != null){\r\n                that.fileExplorer.removeAllFiles();\r\n                ws.moduleStore.getModules(false).forEach(module => that.fileExplorer.addModule(module));\r\n                that.fileExplorer.setFirstFileActive();\r\n            } else {\r\n                this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n            }\r\n\r\n            that.saveScripts();\r\n\r\n        };\r\n        reader.readAsText(file);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n        this.$debuggerDiv = jQuery('<div class=\"joe_debuggerDiv\"></div>');\r\n        this.$runDiv = jQuery(\r\n            `\r\n            <div class=\"jo_tab jo_active jo_run\">\r\n            <div class=\"jo_run-programend\">Programm beendet</div>\r\n            <div class=\"jo_run-input\">\r\n            <div>\r\n            <div>\r\n        <div class=\"jo_run-input-message\" class=\"jo_rix\">Bitte geben Sie eine Zahl ein!</div>\r\n        <input class=\"jo_run-input-input\" type=\"text\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button-outer\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button\" class=\"jo_rix\">OK</div>\r\n        </div>\r\n        \r\n        <div class=\"jo_run-input-error\" class=\"jo_rix\"></div>\r\n    </div>\r\n    </div>\r\n    </div> \r\n    <div class=\"jo_run-inner\">\r\n    <div class=\"jo_graphics\"></div>\r\n    <div class=\"jo_output jo_scrollable\"></div>\r\n    </div>\r\n    \r\n    </div>\r\n    \r\n    `);\r\n\r\n\r\n        if (!this.config.hideEditor) {\r\n            let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n            $tabheadings.css('position', 'relative');\r\n            let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_run\" style=\"line-height: 24px\">Ausgabe</div>');\r\n            let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_variablesTab\" style=\"line-height: 24px\">Variablen</div>');\r\n            $tabheadings.append($thRun, $thVariables);\r\n            this.$rightDivInner.append($tabheadings);\r\n            let $vd = jQuery('<div class=\"jo_scrollable jo_editorFontSize jo_variablesTab\"></div>');\r\n\r\n            let $alternativeText = jQuery(`\r\n            <div class=\"jo_alternativeText jo_scrollable\">\r\n            <div style=\"font-weight: bold\">Tipp:</div>\r\n            Die Variablen sind nur dann sichtbar, wenn das Programm\r\n            <ul>\r\n            <li>im Einzelschrittmodus ausgeführt wird(Klick auf <span class=\"img_step-over-dark jo_inline-image\"></span>),</li>\r\n            <li>an einem Breakpoint hält (Setzen eines Breakpoints mit Mausklick links neben den Zeilennummern und anschließendes Starten des Programms mit \r\n                <span class=\"img_start-dark jo_inline-image\"></span>) oder </li>\r\n                <li>in sehr niedriger Geschwindigkeit ausgeführt wird (weniger als 10 Schritte/s).\r\n                </ul>\r\n                </div>\r\n                `);\r\n\r\n            $vd.append(this.$debuggerDiv, $alternativeText);\r\n            let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n            $tabs.append(this.$runDiv, $vd);\r\n            this.$rightDivInner.append($tabs);\r\n            makeTabs($rightDiv);\r\n        } else {\r\n            this.$rightDivInner.append(this.$runDiv);\r\n        }\r\n\r\n        return $rightDiv;\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData, serverURL: string) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Workspace importieren\",\r\n                                action: () => { new WorkspaceImporter(this.main).show(); }\r\n                            },\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); }},\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Repository\", subMenu: {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Eigene Repositories verwalten ...\",\r\n                                action: () => {this.main.repositoryUpdateManager.show(null)}\r\n                            },\r\n                            {\r\n                                identifier: \"Workspace mit Repository verbinden (checkout) ...\",\r\n                                action: () => {this.main.repositoryCheckoutManager.show(null)}\r\n                            },\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Hilfe\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Kurze Video-Tutorials zur Bedienung dieser IDE\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:ide_manual:start\"\r\n                            },\r\n                            {\r\n                                identifier: \"Interaktives Java-Tutorial mit vielen Beispielen\",\r\n                                link: \"https://www.learnj.de/doku.php\"\r\n                            },\r\n                            {\r\n                                identifier: \"Materialien für Lehrkräfte\",\r\n                                link: \"servlet/teachers/index.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"API-Dokumentation\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                // link: \"api_documentation.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"API-Verzeichnis\",\r\n                                //link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                link: serverURL + \"api_documentation.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Sprite-Bilderübersicht\",\r\n                                link: serverURL + \"spriteLibrary.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Tastaturkommandos (Shortcuts)\",\r\n                                link: serverURL + \"shortcuts.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Java-Online Changelog\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:changelog\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Roadmap\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:roadmap\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Befehlspalette (F1)\",\r\n                                action: () => {\r\n                                    setTimeout(() => {\r\n                                        that.main.getMonacoEditor().focus();\r\n                                        editor.getAction(\"editor.action.quickCommand\").run();\r\n                                    }, 500);\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Passwort ändern...\",\r\n                                action: () => {\r\n                                    let passwortChanger = new PasswordChanger(that.main);\r\n                                    passwortChanger.show();\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Über die Online-IDE...\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:ueber\"\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n                // ,\r\n                // {\r\n                //     identifier: \"Bearbeiten\", subMenu:\r\n                //     {\r\n                //         items: [\r\n                //             { identifier: \"Undo\" },\r\n                //             { identifier: \"Redo\" },\r\n                //             { identifier: \"Kopieren\" },\r\n                //             { identifier: \"Formatieren\"}\r\n                //         ]\r\n                //     }\r\n                // },\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin || user.is_schooladmin || user.is_teacher)) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Schulen/Klassen/Benutzer ...\",\r\n                            link: serverURL + \"administration_mc.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        if (user != null && (user.is_admin )) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Serverauslastung ...\",\r\n                            link: serverURL + \"statistics.html\"\r\n                        },{\r\n                            identifier:\"Shutdown server...\",\r\n                            action: () => {\r\n                                if(confirm(\"Server wirklich herunterfahren?\")){\r\n                                    ajax(\"shutdown\", {}, () => {\r\n                                        alert('Server erfolgreich heruntergefahren.');\r\n                                    }, (message) => {\r\n                                        alert(message);\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n            )\r\n        }\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { window.history.back(); });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.close();\r\n        });\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        window.history.back();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Workspace } from \"src/client/workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { CheckboxState, Dialog } from \"./Dialog.js\";\r\n\r\n\r\ntype Library = {\r\n    identifier: string,\r\n    description: string,\r\n    checkboxState?: CheckboxState\r\n}\r\n\r\nexport class WorkspaceSettingsDialog{\r\n\r\n    libraries: Library[] = [\r\n        {identifier: \"gng\", description: \"Graphics'n Games-Bibliothek zu den Informatikbüchern des Cornelsen-Verlages für das Land Bayern (Bemerkung: Die Klassen Turtle und Text heißen hier GTurtle und GText)\"}\r\n    ]\r\n\r\n    constructor(private workspace: Workspace, private main: Main){\r\n\r\n    }\r\n\r\n    open(){\r\n        let dialog = new Dialog();\r\n        dialog.init();\r\n        dialog.heading(\"Einstellungen zum Workspace \" + this.workspace.name);\r\n        dialog.subHeading(\"A. Verwendete Bibliotheken:\");\r\n\r\n        let currentLibraries = this.workspace.settings.libraries;\r\n\r\n        for(let library of this.libraries){\r\n            let cbs = dialog.addCheckbox(library.description, currentLibraries.indexOf(library.identifier) >= 0, library.identifier);\r\n            library.checkboxState = cbs;\r\n        }\r\n\r\n        dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    let changed: boolean = false;\r\n                    let newLibs: string[] = [];\r\n                    for(let lib of this.libraries){\r\n                        let used = lib.checkboxState();\r\n                        changed = changed || (used != (currentLibraries.indexOf(lib.identifier) >= 0));\r\n                        if(used) newLibs.push(lib.identifier);\r\n                    }\r\n\r\n                    if(changed){\r\n                        this.workspace.settings.libraries = newLibs;\r\n                        this.workspace.saved = false;\r\n                        this.workspace.alterAdditionalLibraries();\r\n                        this.main.networkManager.sendUpdates(null, true);\r\n                    }\r\n\r\n                    dialog.close();\r\n                }\r\n            },\r\n        ])\r\n \r\n\r\n    }\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { downloadFile, makeEditable, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { text } from \"express\";\r\nimport { WorkspaceData, Workspaces, ClassData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { WorkspaceSettingsDialog } from \"./WorkspaceSettingsDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n    $synchronizeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"3\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement,\r\n                    identical_to_repository_version: false\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n\r\n                    let module: Module = element.externalElement;\r\n\r\n                    let f: File = {\r\n                        name: module.file.name + \" - Kopie\",\r\n                        dirty: true,\r\n                        saved: false,\r\n                        text: module.file.text,\r\n                        text_before_revision: null,\r\n                        submitted_date: null,\r\n                        student_edited_after_revision: false,\r\n                        version: module.file.version,\r\n                        panelElement: null,\r\n                        identical_to_repository_version: false\r\n                    };\r\n\r\n                    let m = new Module(f, that.main);\r\n                    let workspace = that.main.currentWorkspace;\r\n                    let modulStore = workspace.moduleStore;\r\n                    modulStore.putModule(m);\r\n                    that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                        (error: string) => {\r\n                            if (error == null) {\r\n                                let element: AccordionElement = {\r\n                                    isFolder: false,\r\n                                    name: f.name,\r\n                                    path: [],\r\n                                    externalElement: m\r\n                                }\r\n                                f.panelElement = element;\r\n                                that.fileListPanel.addElement(element, true);\r\n                                that.fileListPanel.sortElements();\r\n                                that.setModuleActive(m);\r\n                                that.fileListPanel.renameElement(element);\r\n                            } else {\r\n                                alert('Der Server ist nicht erreichbar!');\r\n\r\n                            }\r\n                        });\r\n\r\n\r\n                }\r\n            });\r\n\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                if (file.submitted_date == null) {\r\n                    cmiList.push({\r\n                        caption: \"Als Hausaufgabe markieren\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = dateToString(new Date());\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n                        }\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Hausaufgabenmarkierung entfernen\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = null;\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n        this.$synchronizeAction = jQuery('<div class=\"img_open-change jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Workspace mit Repository synchronisieren\">');\r\n\r\n        \r\n\r\n        this.$synchronizeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            this.main.getCurrentWorkspace().synchronizeWithRepository();\r\n\r\n        })\r\n\r\n        this.fileListPanel.addAction(this.$synchronizeAction);\r\n        this.$synchronizeAction.hide();\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"WORKSPACES\", \"3\",\r\n            \"img_add-workspace-dark\", \"Neuer Workspace...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        this.workspaceListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                let owner_id: number = that.main.user.id;\r\n                if (that.main.workspacesOwnerId != null) {\r\n                    owner_id = that.main.workspacesOwnerId;\r\n                }\r\n\r\n                let w: Workspace = new Workspace(accordionElement.name, that.main, owner_id);\r\n                w.isFolder = false;\r\n                w.path = accordionElement.path.join(\"/\");\r\n                that.main.workspaceList.push(w);\r\n\r\n                that.main.networkManager.sendCreateWorkspace(w, that.main.workspacesOwnerId, (error: string) => {\r\n                    if (error == null) {\r\n                        that.fileListPanel.enableNewButton(true);\r\n                        successfulNetworkCommunicationCallback(w);\r\n                        that.setWorkspaceActive(w);\r\n                        w.renderSynchronizeButton(accordionElement);\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            };\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.clear();\r\n                        that.fileListPanel.setCaption('Bitte Workspace selektieren');\r\n                        this.$synchronizeAction.hide();\r\n                        that.fileListPanel.enableNewButton(false);\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if (workspace != null && !workspace.isFolder) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            that.main.networkManager.sendCreateWorkspace(folder, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    successCallback(folder);\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null,\r\n                identical_to_repository_version: false\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n        this.$homeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    this.main.networkManager.sendDuplicateWorkspace(element.externalElement,\r\n                        (error: string, workspaceData) => {\r\n                            if (error == null && workspaceData != null) {\r\n                                let newWorkspace: Workspace = Workspace.restoreFromData(workspaceData, this.main);\r\n                                this.main.workspaceList.push(newWorkspace);\r\n                                let path = workspaceData.path.split(\"/\");\r\n                                if (path.length == 1 && path[0] == \"\") path = [];\r\n                                newWorkspace.panelElement = {\r\n                                    name: newWorkspace.name,\r\n                                    externalElement: newWorkspace,\r\n                                    iconClass: newWorkspace.repository_id == null ? 'workspace' : 'repository',\r\n                                    isFolder: false,\r\n                                    path: path\r\n                                };\r\n\r\n                                this.workspaceListPanel.addElement(newWorkspace.panelElement, true);\r\n                                this.workspaceListPanel.sortElements();\r\n                            }\r\n                            if (error != null) {\r\n                                alert(error);\r\n                            }\r\n                        })\r\n                }\r\n            },\r\n            {\r\n                caption: \"Exportieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    let ws: Workspace = <Workspace>element.externalElement;\r\n                    let name: string = ws.name.replace(/\\//g, \"_\");\r\n                    downloadFile(ws.toExportedWorkspace(), name + \".json\")\r\n                }\r\n            } \r\n            );\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            if (this.main.repositoryOn && this.main.workspacesOwnerId == this.main.user.id) {\r\n                if (workspaceAccordionElement.externalElement.repository_id == null) {\r\n                    cmiList.push({\r\n                        caption: \"Repository anlegen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n\r\n                            that.main.repositoryCreateManager.show(workspace);\r\n                        },\r\n                        subMenu: null,\r\n                        // [{ n: 0, text: \"nur privat sichtbar\" }, { n: 1, text: \"sichtbar für die Klasse\" },\r\n                        // { n: 2, text: \"sichtbar für die Schule\" }].map((k) => {\r\n                        //     return {\r\n                        //         caption: k.text,\r\n                        //         callback: (element: AccordionElement) => {\r\n\r\n\r\n                        // this.main.networkManager.sendCreateRepository(workspace, k.n, (error: string, repository_id?: number) => {\r\n                        //     if (error == null) {\r\n                        //         this.workspaceListPanel.setElementClass(element, \"repository\");\r\n                        //         workspace.renderSynchronizeButton();\r\n                        //         this.showRepositoryButtonIfNeeded(workspace);\r\n                        //     } else {\r\n                        //         alert(error);\r\n                        //     }\r\n                        // });\r\n\r\n                        //         }\r\n                        //     }\r\n                        // })\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Mit Repository synchronisieren\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.synchronizeWithRepository();\r\n                        }\r\n                    });\r\n                    cmiList.push({\r\n                        caption: \"Vom Repository loslösen\",\r\n                        color: \"#ff8080\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.repository_id = null;\r\n                            workspace.saved = false;\r\n                            this.main.networkManager.sendUpdates(() => {\r\n                                that.workspaceListPanel.setElementClass(element, \"workspace\");\r\n                                workspace.renderSynchronizeButton(element);\r\n                            }, true);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            cmiList.push({\r\n                caption: \"Einstellungen...\",\r\n                callback: (element: AccordionElement) => {\r\n                    let workspace: Workspace = element.externalElement;\r\n                    new WorkspaceSettingsDialog(workspace, this.main).open();\r\n                }\r\n            })\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: w.repository_id == null ? 'workspace' : 'repository',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n\r\n            w.renderSynchronizeButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n        // setTimeout(() => {\r\n        //     this.workspaceListPanel.collapseAll();\r\n        // }, 500);\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    showRepositoryButtonIfNeeded(w: Workspace) {\r\n        if (w.repository_id != null && w.owner_id == this.main.user.id) {\r\n            this.$synchronizeAction.show();\r\n\r\n            if (!this.main.user.settings.helperHistory.repositoryButtonDone) {\r\n\r\n                Helper.showHelper(\"repositoryButton\", this.main, this.$synchronizeAction);\r\n\r\n            }\r\n\r\n\r\n\r\n        } else {\r\n            this.$synchronizeAction.hide();\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace, scrollIntoView: boolean = false) {\r\n\r\n        this.workspaceListPanel.select(w, false, scrollIntoView);\r\n\r\n        if (this.main.interpreter.state == InterpreterState.running) {\r\n            this.main.interpreter.stop();\r\n        }\r\n\r\n        this.main.currentWorkspace = w;\r\n        this.renderFiles(w);\r\n\r\n        if (w != null) {\r\n            let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n            if (w.currentlyOpenModule != null) {\r\n                this.setModuleActive(w.currentlyOpenModule);\r\n            } else if (nonSystemModules.length > 0) {\r\n                this.setModuleActive(nonSystemModules[0]);\r\n            } else {\r\n                this.setModuleActive(null);\r\n            }\r\n\r\n            for (let m of nonSystemModules) {\r\n                m.file.dirty = true;\r\n            }\r\n\r\n            if (nonSystemModules.length == 0 && !this.main.user.settings.helperHistory.newFileHelperDone) {\r\n\r\n                Helper.showHelper(\"newFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n            }\r\n\r\n            this.showRepositoryButtonIfNeeded(w);\r\n\r\n        } else {\r\n            this.setModuleActive(null);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.getBreakpointPositionsFromEditor();\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            this.fileListPanel.setCaption('Keine Datei vorhanden');\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        m.renderBreakpointDecorators();\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine WORKSPACES\";\r\n        } else {\r\n            caption = \"Schüler-WS\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ZoomControl } from \"./diagrams/ZoomControl.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 0\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces, false);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace, true);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return -1;\r\n            if (b.familienname > a.familienname) return 1;\r\n            if (a.rufname > b.rufname) return -1;\r\n            if (b.rufname > a.rufname) return 1;\r\n            return 0;\r\n        })\r\n\r\n        for(let i = 0; i < userDataList.length; i++){\r\n            let ud = userDataList[i];\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, TicketLoginRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { userInfo } from \"os\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI(isLoginWithTicket: boolean) {\r\n\r\n        let that = this;\r\n        if(!isLoginWithTicket){\r\n            jQuery('#login').css('display','flex');\r\n            jQuery('#bitteWarten').css('display','none');\r\n            this.startAnimations();\r\n        }\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n\r\n        jQuery('#jo_testuser-login-button').on('click', () => {\r\n            jQuery('#login-username').val('Testuser');\r\n            jQuery('#login-password').val('');\r\n            jQuery('#login-button').trigger('click');\r\n\r\n        })\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            SoundTools.init();\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            this.sendLoginRequest(null);\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            if(that.main.user.is_testuser){\r\n                that.showLoginForm();\r\n                return;\r\n            }\r\n\r\n            this.main.interpreter.closeAllWebsockets();\r\n\r\n            jQuery('#bitteWartenText').html('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n            jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                this.main.rightDiv.classDiagram.clearAfterLogout();\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n\r\n                    that.showLoginForm();\r\n\r\n                });\r\n            });\r\n\r\n            this.main.networkManager.notifierClient.disconnect();\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    sendLoginRequest(ticket: string){\r\n        let that = this;\r\n\r\n        let servlet = \"login\";\r\n\r\n        let loginRequest: LoginRequest|TicketLoginRequest = {\r\n            username: <string>jQuery('#login-username').val(),\r\n            password: <string>jQuery('#login-password').val(),\r\n            language: 0\r\n        }\r\n\r\n        if(ticket != null){\r\n            servlet = \"ticketLogin\";\r\n            loginRequest = {\r\n                ticket: ticket,\r\n                language: 0\r\n            }\r\n        }\r\n\r\n        ajax(servlet, loginRequest, (response: LoginResponse) => {\r\n\r\n            if (!response.success) {\r\n                jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                jQuery('#login-spinner>img').hide();\r\n            } else {\r\n\r\n                // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                // Alternatively we now set a long expiry interval for cookie.\r\n                // credentials.username = loginRequest.username;\r\n                // credentials.password = loginRequest.password;\r\n\r\n                jQuery('#login').hide();\r\n                jQuery('#main').css('visibility', 'visible');\r\n\r\n                jQuery('#bitteWartenText').html('Bitte warten ...');\r\n                jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n                let user: UserData = response.user;\r\n                user.is_testuser = response.isTestuser;\r\n\r\n                if (user.settings == null || user.settings.helperHistory == null) {\r\n                    user.settings = {\r\n                        helperHistory: {\r\n                            consoleHelperDone: false,\r\n                            newFileHelperDone: false,\r\n                            newWorkspaceHelperDone: false,\r\n                            speedControlHelperDone: false,\r\n                            homeButtonHelperDone: false,\r\n                            stepButtonHelperDone: false,\r\n                            repositoryButtonDone: false,\r\n                            folderButtonDone: false\r\n                        },\r\n                        viewModes: null,\r\n                        classDiagram: null\r\n                    }\r\n                }\r\n                \r\n                that.main.user = user;\r\n\r\n                this.main.waitForGUICallback = () => {\r\n                    \r\n                    that.main.mainMenu.initGUI(user, \"\");\r\n                    \r\n                    jQuery('#bitteWarten').hide();\r\n                    let $loginSpinner = jQuery('#login-spinner>img');\r\n                    $loginSpinner.hide();\r\n                    jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n                    \r\n                    new UserMenu(that.main).init();\r\n                    \r\n                    if (user.is_teacher) {\r\n                        that.main.initTeacherExplorer(response.classdata);\r\n                    }\r\n                    \r\n\r\n                    that.main.workspacesOwnerId = user.id;\r\n                    that.main.restoreWorkspaces(response.workspaces, true);\r\n\r\n                    that.main.networkManager.initializeTimer();\r\n\r\n                    that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                    that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                    that.main.rightDiv?.classDiagram?.clear();\r\n\r\n                    if (user.settings.classDiagram != null) {\r\n                        that.main.rightDiv?.classDiagram?.deserialize(user.settings.classDiagram);\r\n                    }\r\n\r\n                    that.main.viewModeController.initViewMode();\r\n                    that.main.bottomDiv.hideHomeworkTab();\r\n                    \r\n                    if (!this.main.user.settings.helperHistory.folderButtonDone && that.main.projectExplorer.workspaceListPanel.elements.length > 5) {\r\n                        \r\n                        Helper.showHelper(\"folderButton\", this.main, jQuery('.img_add-folder-dark'));\r\n        \r\n                    }\r\n        \r\n                    that.main.networkManager.initializeNotifierClient();\r\n\r\n                }\r\n\r\n                if (this.main.startupComplete == 0) {\r\n                    this.main.waitForGUICallback();\r\n                    this.main.waitForGUICallback = null;\r\n                }\r\n\r\n            }\r\n\r\n        }, (errorMessage: string) => {\r\n            jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n            jQuery('#login-spinner>img').hide();\r\n        }\r\n        );\r\n\r\n    }\r\n\r\n    loginWithTicket(ticket: string) {\r\n        jQuery('#login').hide();\r\n        jQuery('#main').css('visibility', 'visible');\r\n\r\n        jQuery('#bitteWartenText').html('Bitte warten ...');\r\n        jQuery('#bitteWarten').css('display', 'flex');\r\n        this.sendLoginRequest(ticket);\r\n\r\n    }\r\n\r\n\r\n    private showLoginForm(){\r\n        jQuery('#login').show();\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        jQuery('#bitteWarten').css('display', 'none');\r\n        jQuery('#login-message').empty();\r\n        this.main.interpreter.setState(InterpreterState.not_initialized);\r\n        this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n        this.main.projectExplorer.fileListPanel.clear();\r\n        this.main.projectExplorer.fileListPanel.setCaption('');\r\n        this.main.projectExplorer.workspaceListPanel.clear();\r\n        this.main.bottomDiv?.console?.clear();\r\n        this.main.interpreter.printManager.clear();\r\n\r\n        if (this.main.user.is_teacher) {\r\n            this.main.teacherExplorer.removePanels();\r\n            this.main.teacherExplorer = null;\r\n        }\r\n\r\n        this.main.currentWorkspace = null;\r\n        this.main.user = null;\r\n\r\n    }\r\n\r\n\r\n    startAnimations() {\r\n        // let $loginAnimationDiv = $('#jo_login_animations');\r\n        // $loginAnimationDiv.empty();\r\n\r\n\r\n        // let $gifAnimation = $('<img src=\"assets/startpage/code_1.gif\" class=\"jo_gif_animation\">');\r\n        // $loginAnimationDiv.append($gifAnimation);\r\n        \r\n        // let left = Math.trunc(Math.random()*(screen.width - 400)) + \"px\";\r\n        // let top = Math.trunc(Math.random()*(screen.height - 400)) + \"px\";\r\n\r\n        // $gifAnimation.css({\r\n        //     \"left\": left,\r\n        //     \"top\": top\r\n        // })\r\n    }\r\n\r\n\r\n}","import { ThemeManager } from \"./ThemeManager\";\r\nimport { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    rightDivWidth: number;\r\n    editorWidth: number;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 8px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').css('width', this.rightDivWidth + \"px\");\r\n            jQuery('#editor>.monaco-editor').css('width', this.editorWidth + 'px');\r\n\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            \r\n            this.rightDivWidth = Number.parseInt(jQuery('#rightdiv').css('width').replace('px', ''));\r\n            this.editorWidth = Number.parseInt(jQuery('#editor>.monaco-editor').css('width').replace('px', ''));\r\n\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n            this.main.getInterpreter().stop();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\n\r\nexport type WindowBackButtonListener = (event: PopStateEvent) => void;\r\n\r\nexport class WindowStateManager {\r\n\r\n    backButtonListener: WindowBackButtonListener;\r\n    oneTimeBackButtonListener: () => void;\r\n\r\n    constructor(private main: Main){\r\n        let that = this;\r\n        history.pushState(\"PreventLeavingSite\", \"\");\r\n        window.addEventListener('popstate', (event: PopStateEvent) => {\r\n            if(event.state == \"PreventLeavingSite\"){\r\n                history.pushState(\"PreventLeavingSite\", \"\");\r\n                that.main.editor.pushHistoryState(false, that.main.editor.getPositionForHistory());\r\n            } else if(this.oneTimeBackButtonListener == null){\r\n                this.backButtonListener(event);\r\n            }\r\n            if(this.oneTimeBackButtonListener != null){\r\n                this.oneTimeBackButtonListener();\r\n                this.oneTimeBackButtonListener = null;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    registerBackButtonListener(listener: WindowBackButtonListener){\r\n        this.backButtonListener = listener;\r\n    }\r\n\r\n    registerOneTimeBackButtonListener(oneTimeBackButtonListener: () => void){\r\n        this.oneTimeBackButtonListener = oneTimeBackButtonListener;\r\n        history.pushState({}, \"\");\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"./Workspace.js\";\r\n\r\nexport class InconsistencyFixer {\r\n    start(workspaceList: Workspace[], networkManager: NetworkManager, main: MainBase) {\r\n        let updateNeeded: boolean = false;\r\n\r\n        // is there a folder which contains files?\r\n        for (let ws of workspaceList) {\r\n            if (ws.isFolder && ws.moduleStore.getModules(false).length > 0) {\r\n\r\n                console.log(\"Folder \" + ws.path + \"/\" + ws.name + \" contains files. -> Make new folder and transforming existing one to workspace.\")\r\n\r\n                // create new Folder\r\n                let newFolder: Workspace = new Workspace(ws.name, main, ws.owner_id);\r\n                newFolder.isFolder = true;\r\n                newFolder.path = ws.path;\r\n                workspaceList.push(newFolder);\r\n\r\n                networkManager.sendCreateWorkspace(newFolder, newFolder.owner_id, (error: string) => {\r\n                    if(error == null || error == \"\"){\r\n                        console.log(\"Successfully created new Folder.\");\r\n                    } else {\r\n                        console.log(\"Error creating folder: \" + error);\r\n                    }\r\n                });\r\n\r\n                // transform old folder into real workspace\r\n                ws.isFolder = false;\r\n                ws.name += \" (ws)\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n\r\n            }\r\n        }\r\n\r\n        // Are there several folders with identical path and name?\r\n        let folderList = workspaceList.filter(ws => ws.isFolder);\r\n\r\n        for (let ws1 of folderList) {\r\n            let identicalFolders: Workspace[] = [];\r\n            for (let ws2 of folderList) {\r\n                if (ws2 != ws1 && ws2.path == ws1.path && ws2.name == ws1.name) {\r\n                    identicalFolders.push(ws2);\r\n                }\r\n            }\r\n            if (identicalFolders.length > 0) {\r\n                console.log(\"\" + (identicalFolders.length + 1) + \" folders with name \" + ws1.path + \"/\" + ws1.name + \"=> renaming them with suffixes (1), (2), ...\");\r\n                for (let i = 0; i < identicalFolders.length; i++) {\r\n                    identicalFolders[i].name += \" (\" + (i + 1) + \")\";\r\n                    identicalFolders[i].saved = false;\r\n                }\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n        // Is there a workspace which belongs to a folder that doesn't exist?\r\n        let folderPathAndNames: string[] = [];\r\n        for (let folder of folderList) {\r\n            let fnap = folder.path;\r\n            if (fnap != \"\" && !fnap.endsWith(\"/\")) fnap += \"/\";\r\n            fnap += folder.name;\r\n            folderPathAndNames.push(fnap);\r\n        }\r\n\r\n        for (let ws of workspaceList) {\r\n            if (!ws.isFolder && ws.path != \"\" && ws.path != null && folderPathAndNames.indexOf(ws.path) < 0) {\r\n                console.log(\"Found workspace (\" + ws.path + \"/\" + ws.name + \") with path not corresponding to any folder => Set path = ''.\");\r\n                ws.path = \"\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n\r\n        if(updateNeeded){ \r\n            networkManager.sendUpdates(()=> {}, true);\r\n        }\r\n\r\n    }\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, DoubleType, CharacterType, BooleanType, FloatType, longPrimitiveType, LongType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { MainBase } from \"./MainBase.js\"\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\nimport { WindowStateManager } from \"./gui/WindowStateManager.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { InconsistencyFixer } from \"../workspace/InconsistencyFixer.js\";\r\n\r\nexport class Main implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    repositoryOn: boolean = true;\r\n\r\n    isEmbedded(): boolean { return false; }\r\n\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n        this.projectExplorer.showProgramPointerPosition(file, position);\r\n    }\r\n    hideProgramPointerPosition() {\r\n        this.projectExplorer.hideProgramPointerPosition();\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) {\r\n        this.projectExplorer.setModuleActive(module);\r\n        this.editor.editor.revealLineInCenter(declaration.position.line);\r\n        this.editor.editor.setPosition({column: declaration.position.column, lineNumber: declaration.position.line});\r\n    }\r\n\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    synchronizationManager: SynchronizationManager;\r\n    repositoryCreateManager: RepositoryCreateManager;\r\n    repositoryUpdateManager: RepositorySettingsManager;\r\n    repositoryCheckoutManager: RepositoryCheckoutManager;\r\n\r\n    windowStateManager: WindowStateManager = new WindowStateManager(this);\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n\r\n    debugger: Debugger;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n        \r\n        this.login = new Login(this);\r\n        let hashIndex: number = window.location.href.indexOf('#');\r\n        if(hashIndex > 0){\r\n    \r\n            var ticket = window.location.href.substr(hashIndex + 1);\r\n            window.history.replaceState({}, \"Online-IDE\", window.location.href.substr(0, hashIndex));\r\n            this.login.initGUI(true);\r\n            this.login.loginWithTicket(ticket);\r\n    \r\n        } else {\r\n            this.login.initGUI(false);\r\n        }\r\n    \r\n\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.debugger = new Debugger(this, jQuery('#leftpanel>.jo_debugger'), jQuery('#leftpanel>.jo_projectexplorer'));\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons(jQuery('#controls'), jQuery('#editor')),\r\n            jQuery('#rightdiv-inner .jo_run'));\r\n        this.interpreter.initGUI();\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                // get the matrix values of the displayobject based on its transform properties..\r\n                // lt.a = this._cx * this.scale.x;\r\n                // lt.b = this._sx * this.scale.x;\r\n                // lt.c = this._cy * this.scale.y;\r\n                // lt.d = this._sy * this.scale.y;\r\n                // lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\r\n                // lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '150px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 150 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n//        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    // loadWorkspace() {\r\n    //     this.workspaceList.push(getMockupWorkspace(this));\r\n    //     this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n    //     this.projectExplorer.setWorkspaceActive(this.workspaceList[0]);\r\n    //     this.checkStartupComplete();\r\n\r\n    // }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        longPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        LongType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false, true);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n                that.interpreter.closeAllWebsockets();\r\n            }\r\n            \r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.projectExplorer.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        clearTimeout(this.debounceDiagramDrawing);\r\n        this.debounceDiagramDrawing = setTimeout(() => {\r\n            this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces, fixInconsistencies: boolean) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                this.currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Find inconsistencies and fix them\r\n         */\r\n        if(fixInconsistencies){\r\n            new InconsistencyFixer().start(this.workspaceList, this.networkManager, this);\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (this.currentWorkspace == null && this.workspaceList.length > 0) {\r\n            this.currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(this.currentWorkspace, true);\r\n        } else {\r\n            this.projectExplorer.setModuleActive(null);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newWorkspaceHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Repository } from \"../../communication/Data.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { HistoryElement } from \"./HistoryElement.js\";\r\nimport { RepositoryHistoryEntry, RepositoryFileEntry, CommitFilesResponse, CommitFilesRequest } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { SynchronizationManager } from \"./RepositorySynchronizationManager.js\";\r\n\r\n\r\nexport type SynchroFileState = \"original\" | \"changed\" | \"new\" | \"deleted\";\r\n\r\nexport type SynchroFile = {\r\n    idInsideRepository: number,\r\n    idInsideWorkspace?: number,\r\n    workspaceFile: File,\r\n    committedFromFile?: SynchroFile,\r\n    name: string,\r\n    repository_file_version: number,\r\n    identical_to_repository_version: boolean,\r\n    text: string,\r\n    synchroWorkspace: SynchroWorkspace,\r\n    \r\n    state: SynchroFileState,\r\n    markedAsMerged: boolean,\r\n\r\n    originalText?: string,\r\n    monacoModel?: monaco.editor.ITextModel,\r\n}\r\n\r\n\r\nexport class SynchroWorkspace {\r\n\r\n    files: SynchroFile[] = [];\r\n    copiedFromWorkspace: Workspace;\r\n    isCurrentRepositoryVersion: boolean = false;\r\n\r\n    name: string;\r\n\r\n    constructor(private manager: SynchronizationManager) {\r\n\r\n    }\r\n\r\n    hasChanges(): boolean {\r\n        for(let file of this.files){\r\n            if(file.state != \"original\") return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    isWritable(): boolean {\r\n        return this.copiedFromWorkspace != null || (this.isCurrentRepositoryVersion && this.manager.repositoryIsWritable );\r\n    }\r\n\r\n    copyFromWorkspace(workspace: Workspace):SynchroWorkspace {\r\n\r\n        this.files = [];\r\n        workspace.moduleStore.getModules(false).forEach(module => {\r\n            let file = module.file;\r\n\r\n            if (module.model != null) {\r\n                module.file.text = module.getProgramTextFromMonacoModel();\r\n            }\r\n\r\n            this.files.push({\r\n                name: file.name,\r\n                repository_file_version: file.repository_file_version,\r\n                identical_to_repository_version: file.identical_to_repository_version,\r\n                idInsideRepository: file.is_copy_of_id,\r\n                idInsideWorkspace: file.id,\r\n                workspaceFile: file,\r\n                text: file.text.replace(/\\r\\n/g, \"\\n\"),\r\n                synchroWorkspace: this,\r\n                \r\n                state: \"original\",\r\n                markedAsMerged: false,\r\n\r\n                originalText: file.text,\r\n                monacoModel: null\r\n            })\r\n        });\r\n\r\n        this.name = \"Workspace: \" + workspace.name;\r\n        this.copiedFromWorkspace = workspace;\r\n\r\n        return this;\r\n    }\r\n\r\n    copyFromRepository(repository: Repository, isCurrentRepositoryVersion: boolean): SynchroWorkspace {\r\n        this.isCurrentRepositoryVersion = isCurrentRepositoryVersion;\r\n        this.files = [];\r\n        repository.fileEntries.forEach((fileEntry) => {\r\n            this.files.push({\r\n                name: fileEntry.filename,\r\n                idInsideRepository: fileEntry.id,\r\n                idInsideWorkspace: null,\r\n                workspaceFile: null,\r\n                repository_file_version: fileEntry.version,\r\n                identical_to_repository_version: true,\r\n                text: fileEntry.text.replace(/\\r\\n/g, \"\\n\"),\r\n                synchroWorkspace: this,\r\n                \r\n                state: \"original\",\r\n                markedAsMerged: false,\r\n\r\n                monacoModel: null\r\n            })\r\n        })\r\n\r\n        this.name = \"Repository: \" + repository.name + \" (V \" + repository.version + \")\";\r\n\r\n        return this;\r\n    }\r\n\r\n    copyFromHistoryElement(historyElement: HistoryElement): SynchroWorkspace {\r\n        let repo = historyElement.getRepositoryState();\r\n        this.copyFromRepository(repo, false);\r\n        this.name = \"History-Version \" + repo.version;\r\n        return this;\r\n    }\r\n\r\n    commit(workspace: Workspace, oldRepository: Repository, comment: string, main: Main,\r\n        callback: (repository: Repository, errormessage: string) => void) {\r\n\r\n        let oldIdToFileMap: { [id: number]: RepositoryFileEntry } = {};\r\n        let newIdToFileMap: { [id: number]: SynchroFile } = {};\r\n\r\n        let newlyVersionedFileIds: number[] = [];\r\n\r\n        oldRepository.fileEntries.forEach(file => oldIdToFileMap[file.id] = file);\r\n        this.files.forEach(file => {\r\n            if (file.idInsideRepository != null) {\r\n                newIdToFileMap[file.idInsideRepository] = file;\r\n            }\r\n        });\r\n\r\n        let repositoryHistoryEntry: RepositoryHistoryEntry = {\r\n            comment: comment,\r\n            name: main.user.rufname + \" \" + main.user.familienname,\r\n            username: main.user.username,\r\n            isIntermediateEntry: false,\r\n            timestamp: new Date().toUTCString(),\r\n            userId: main.user.id,\r\n            version: oldRepository.version + 1,\r\n            historyFiles: []\r\n        }\r\n\r\n        for (let file of this.files) {\r\n            if(file.state == \"deleted\") continue;\r\n\r\n            let oldFile = oldIdToFileMap[file.idInsideRepository];\r\n            if (oldFile == null) {\r\n\r\n                // if file.committedFromFile.\r\n                if (file.idInsideRepository == null) {\r\n                    newlyVersionedFileIds.push(file.committedFromFile.idInsideWorkspace);\r\n                    file.committedFromFile.idInsideRepository = file.committedFromFile.idInsideWorkspace;\r\n                    file.committedFromFile.repository_file_version = 1;\r\n                    file.idInsideRepository = file.committedFromFile.idInsideWorkspace;\r\n                    file.committedFromFile.idInsideRepository = file.committedFromFile.idInsideWorkspace;\r\n                }\r\n\r\n                repositoryHistoryEntry.historyFiles.push({\r\n                    id: file.idInsideRepository,\r\n                    type: \"create\",\r\n                    version: 1,\r\n                    content: file.text,\r\n                    filename: file.name\r\n                });\r\n            } else if (oldFile.text != file.text) {\r\n                oldFile.version++;\r\n                let patch: string = this.getPatch(oldFile.text, file.text);\r\n                if (patch == null) {\r\n                    repositoryHistoryEntry.historyFiles.push({\r\n                        id: oldFile.id,\r\n                        type: \"intermediate\",\r\n                        version: oldFile.version,\r\n                        content: file.text,\r\n                        filename: file.name\r\n                    });\r\n                } else {\r\n                    repositoryHistoryEntry.historyFiles.push({\r\n                        id: oldFile.id,\r\n                        type: \"change\",\r\n                        version: oldFile.version,\r\n                        content: patch,\r\n                        filename: (oldFile.filename == file.name) ? undefined : file.name\r\n                    });\r\n                }\r\n\r\n                let cff = file.committedFromFile;\r\n                if(cff != null){\r\n                    cff.repository_file_version = oldFile.version;\r\n                    cff.workspaceFile.repository_file_version = oldFile.version;\r\n                    cff.workspaceFile.saved = false;                    \r\n                }\r\n\r\n            } else if (oldFile.filename != file.name) {\r\n                repositoryHistoryEntry.historyFiles.push({\r\n                    id: oldFile.id,\r\n                    type: \"intermediate\",\r\n                    version: oldFile.version,\r\n                    filename: file.name\r\n                });\r\n            }\r\n        }\r\n\r\n        for (let oldFile of oldRepository.fileEntries) {\r\n            if (newIdToFileMap[oldFile.id] == null || newIdToFileMap[oldFile.id].state == \"deleted\") {\r\n                repositoryHistoryEntry.historyFiles.push({\r\n                    id: oldFile.id,\r\n                    type: \"delete\",\r\n                    version: oldFile.version\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        let newFileEntries: RepositoryFileEntry[] = this.files.filter(file => file.state != \"deleted\").map((synchroFile) => {\r\n            return {\r\n                filename: synchroFile.name,\r\n                id: synchroFile.idInsideRepository,\r\n                text: synchroFile.text,\r\n                version: synchroFile.repository_file_version\r\n            }\r\n        })\r\n\r\n\r\n        let commitFilesRequest: CommitFilesRequest = {\r\n            files: newFileEntries,\r\n            repositoryVersionBeforeCommit: oldRepository.version,\r\n            repository_id: oldRepository.id,\r\n            workspace_id: workspace.id,\r\n            repositoryHistoryEntry: repositoryHistoryEntry,\r\n            newlyVersionedFileIds: newlyVersionedFileIds\r\n        }\r\n\r\n        let that = this;\r\n        ajax(\"commitFiles\", commitFilesRequest, (cfr: CommitFilesResponse) => {\r\n            workspace.moduleStore.getModules(false).map(m => m.file).forEach((file) => {\r\n                if (newlyVersionedFileIds.indexOf(file.id) >= 0) {\r\n                    file.is_copy_of_id = file.id;\r\n                    file.repository_file_version = 1;\r\n                    file.identical_to_repository_version = true;\r\n                    file.saved = false;\r\n                }\r\n            });\r\n            that.manager.currentUserSynchroWorkspace.files.forEach(synchroFile => {\r\n                let workspaceFile = synchroFile.workspaceFile;\r\n                if(workspaceFile != null){\r\n                    if(synchroFile.text == workspaceFile.text && \r\n                        (synchroFile.repository_file_version != workspaceFile.repository_file_version  || synchroFile.identical_to_repository_version != workspaceFile.identical_to_repository_version)){\r\n                            workspaceFile.identical_to_repository_version = synchroFile.identical_to_repository_version;\r\n                            workspaceFile.repository_file_version = synchroFile.repository_file_version;\r\n                            workspaceFile.saved = false;\r\n                    }\r\n                }\r\n                if(workspaceFile.is_copy_of_id != null){\r\n                    synchroFile.idInsideRepository = workspaceFile.is_copy_of_id;\r\n                }\r\n            });\r\n            that.manager.main.networkManager.sendUpdates(() => {\r\n                callback(cfr.repository, null);\r\n            }, true);\r\n        }, (error: string) => { callback( null, error) })\r\n\r\n    }\r\n\r\n    getPatch(contentOld: string, contentNew: string): string {\r\n        //@ts-ignore\r\n        let dmp: diff_match_patch = new diff_match_patch();\r\n        //@ts-ignore\r\n        let patchObject: patch_obj[] = dmp.patch_make(contentOld, contentNew);\r\n\r\n        let patch: string = JSON.stringify(patchObject);\r\n\r\n        // Test patch and only return it if it is valid!\r\n        let deSerializedPatchObject = JSON.parse(patch);\r\n\r\n        let result: [string, boolean[]] = dmp.patch_apply(deSerializedPatchObject, contentOld);\r\n\r\n        if (result == null || result[0] == null) return null;\r\n\r\n        if (result[0] == contentNew) {\r\n            return patch;\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n    writeChangesToWorkspace() {\r\n        let workspace = this.copiedFromWorkspace;\r\n        let oldIdToModuleMap: { [id: number]: Module } = {};\r\n        let newIdToFileMap: { [id: number]: SynchroFile } = {};\r\n\r\n        workspace.moduleStore.getModules(false).forEach(m => {\r\n            if (m.file.is_copy_of_id != null) oldIdToModuleMap[m.file.is_copy_of_id] = m;\r\n        });\r\n\r\n        this.files.forEach(file => {\r\n            if (file.idInsideWorkspace != null) newIdToFileMap[file.idInsideWorkspace] = file;\r\n        });\r\n\r\n        let main = this.manager.main;\r\n        for (let module of workspace.moduleStore.getModules(false)) {\r\n\r\n            let synchroFile = newIdToFileMap[module.file.id];\r\n            if (synchroFile != null && synchroFile.state != 'deleted') {\r\n                module.file.text = synchroFile.monacoModel.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n                synchroFile.text = module.file.text;\r\n                module.file.is_copy_of_id = synchroFile.idInsideRepository;\r\n                module.file.repository_file_version = synchroFile.repository_file_version;\r\n                module.model.setValue(synchroFile.text);\r\n                module.file.identical_to_repository_version = synchroFile.identical_to_repository_version;\r\n                module.file.saved = false;\r\n                module.file.dirty = true;\r\n                module.file.name = synchroFile.name;\r\n                if(module.file.panelElement != null){\r\n                    module.file.panelElement.$htmlFirstLine.find('.jo_filename');\r\n                }\r\n            } else {\r\n\r\n                main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n                    }\r\n                });\r\n\r\n                this.files.splice(this.files.indexOf(synchroFile), 1);\r\n                workspace.moduleStore.removeModule(module);\r\n                main.projectExplorer.fileListPanel.removeElement(module);\r\n                if (main.currentWorkspace == workspace && main.projectExplorer.getCurrentlyEditedModule() == module) {\r\n                    main.projectExplorer.setModuleActive(null);\r\n                }\r\n                \r\n            }\r\n\r\n        }\r\n\r\n        for (let synchroFile of this.files) {\r\n            if (synchroFile.idInsideRepository != null && oldIdToModuleMap[synchroFile.idInsideRepository] == null) {\r\n\r\n                let f: File = {\r\n                    name: synchroFile.name,\r\n                    dirty: true,\r\n                    saved: true,\r\n                    text: synchroFile.text,\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    is_copy_of_id: synchroFile.idInsideRepository,\r\n                    repository_file_version: synchroFile.repository_file_version,\r\n                    identical_to_repository_version: synchroFile.identical_to_repository_version\r\n                };\r\n                let m = new Module(f, main);\r\n                workspace.moduleStore.putModule(m);\r\n                main.networkManager.sendCreateFile(m, workspace, main.user.id,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            }\r\n        }\r\n\r\n        main.networkManager.sendUpdates(null, true);\r\n\r\n        if (main.currentWorkspace == workspace) {\r\n            let cem = main.getCurrentlyEditedModule();\r\n            main.projectExplorer.setWorkspaceActive(workspace, true);\r\n\r\n            // if module hadn't been deleted while synchronizing:\r\n            if(workspace.moduleStore.getModules(false).indexOf(cem) >= 0){\r\n                main.projectExplorer.setModuleActive(cem);\r\n                main.projectExplorer.fileListPanel.select(cem, false);\r\n            }\r\n\r\n        }\r\n\r\n        workspace.moduleStore.dirty = true;\r\n\r\n    }\r\n\r\n}","import { RepositoryHistoryEntry, Repository, RepositoryHistoryFileEntry, RepositoryFileEntry } from \"../../communication/Data.js\";\r\nimport { SynchronizationManager } from \"./RepositorySynchronizationManager.js\";\r\nimport { makeDiv, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { SynchroWorkspace } from \"./SynchroWorkspace.js\";\r\n\r\nexport class HistoryElement {\r\n\r\n    $historyElementDiv: JQuery<HTMLDivElement>;\r\n\r\n    static currentlyDragged: HistoryElement;\r\n\r\n    constructor(private manager: SynchronizationManager, private repository: Repository, private repositoryHistoryEntry: RepositoryHistoryEntry, private historyEntryIndex: number) {\r\n\r\n        this.$historyElementDiv = makeDiv(null, \"jo_synchro_historyElement\");\r\n        this.$historyElementDiv.attr(\"draggable\", \"true\");\r\n\r\n        let that = this;\r\n        this.$historyElementDiv.on('drag', () => {\r\n            HistoryElement.currentlyDragged = that;\r\n        });\r\n\r\n        let line1 = makeDiv(null, \"jo_synchro_historyElementLine1\");\r\n        line1.append(jQuery(`<div class=\"jo_synchro_he_version\">V ${repositoryHistoryEntry.version}</div>`));\r\n        line1.append(jQuery(`<div class=\"jo_synchro_he_name\">${repositoryHistoryEntry.name}</div>`));\r\n        this.$historyElementDiv.append(line1);\r\n\r\n        let line2 = makeDiv(null, \"jo_synchro_historyElementLine2\");\r\n        line2.append(jQuery(`<div class=\"jo_synchro_he_timestamp\">${repositoryHistoryEntry.timestamp}</div>`))\r\n        this.$historyElementDiv.append(line2);\r\n\r\n        let line3 = makeDiv(null, \"jo_synchro_historyElementLine3\");\r\n        line3.append(jQuery(`<div class=\"jo_synchro_he_comment\">${repositoryHistoryEntry.comment}</div>`))\r\n        this.$historyElementDiv.append(line3);\r\n\r\n        manager.$historyScrollDiv.prepend(this.$historyElementDiv);\r\n\r\n        this.$historyElementDiv.on(\"click contextmenu\", (ev) => {\r\n            ev.preventDefault();\r\n            openContextMenu([\r\n                {\r\n                    caption: \"Auf der linken Seite darstellen\",\r\n                    callback: () => {\r\n                        let sw = new SynchroWorkspace(this.manager).copyFromHistoryElement(this);\r\n                        this.manager.leftSynchroWorkspace = sw;\r\n                        this.manager.setupSynchronizationListElements();\r\n                    }\r\n                },\r\n                {\r\n                    caption: \"Auf der rechten Seite darstellen\",\r\n                    callback: () => {\r\n                        let sw = new SynchroWorkspace(this.manager).copyFromHistoryElement(this);\r\n                        this.manager.rightSynchroWorkspace = sw;\r\n                        this.manager.setupSynchronizationListElements();\r\n                    }\r\n                },\r\n            ],\r\n                ev.pageX + 2, ev.pageY + 2)\r\n        });\r\n\r\n    }\r\n\r\n    getRepositoryState(): Repository {\r\n\r\n        let entries = this.repository.historyEntries;\r\n\r\n        // get last intermediate state\r\n        let startIndex = this.historyEntryIndex;\r\n\r\n        while (startIndex > 0 && !(entries[startIndex].isIntermediateEntry)) {\r\n            startIndex--;\r\n        }\r\n\r\n        let files: RepositoryFileEntry[] = [];\r\n\r\n        for (let index = startIndex; index <= this.historyEntryIndex; index++) {\r\n\r\n            let entry = entries[index];\r\n            for (let fileEntry of entry.historyFiles) {\r\n\r\n                if (entry.isIntermediateEntry) {\r\n                    this.setIntermediateState(fileEntry, files);\r\n                } else {\r\n                    switch (fileEntry.type) {\r\n                        case \"create\":\r\n                            this.createFile(fileEntry, files);\r\n                            break;\r\n                        case \"delete\":\r\n                            this.deleteFile(fileEntry, files);\r\n                            break;\r\n                        case \"change\":\r\n                            this.changeFile(fileEntry, files);\r\n                            break;\r\n                        case \"intermediate\":\r\n                            this.setIntermediateState(fileEntry, files);\r\n                            break;\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let repository: Repository = Object.assign({}, this.repository);\r\n        repository.fileEntries = files;\r\n        repository.version = this.repositoryHistoryEntry.version;\r\n\r\n        return repository;\r\n\r\n    }\r\n\r\n    setIntermediateState(fileEntry: RepositoryHistoryFileEntry, files: RepositoryFileEntry[]) {\r\n        let file: RepositoryFileEntry = files.find(file => file.id == fileEntry.id);\r\n        if (file != null) {\r\n            file.text = fileEntry.content;\r\n            file.version = fileEntry.version;\r\n        }\r\n    }\r\n\r\n    changeFile(fileEntry: RepositoryHistoryFileEntry, files: RepositoryFileEntry[]) {\r\n        let file: RepositoryFileEntry = files.find(file => file.id == fileEntry.id);\r\n        if (file != null) {\r\n            if (fileEntry.content != null) {\r\n                //@ts-ignore\r\n                let patch: patch_obj[] = JSON.parse(fileEntry.content);\r\n                let oldText = file.text;\r\n                //@ts-ignore\r\n                let dmp: diff_match_patch = new diff_match_patch();\r\n                let newText: [string, boolean[]] = dmp.patch_apply(patch, oldText);\r\n                file.text = newText[0];\r\n                file.version = fileEntry.version;\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteFile(fileEntry: RepositoryHistoryFileEntry, files: RepositoryFileEntry[]) {\r\n        let index: number = files.findIndex(file => file.id == fileEntry.id);\r\n        if (index != null) {\r\n            files.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    createFile(fileEntry: RepositoryHistoryFileEntry, files: RepositoryFileEntry[]) {\r\n        let file: RepositoryFileEntry = {\r\n            id: fileEntry.id,\r\n            text: fileEntry.content,\r\n            filename: fileEntry.filename,\r\n            version: fileEntry.version\r\n        }\r\n        files.push(file);\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TeachersWithClassesMI } from \"../../administration/TeachersWithClasses.js\";\r\nimport { RepositoryFileEntry } from \"../../communication/Data.js\";\r\nimport { File } from \"../../compiler/parser/Module.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { SynchronizationManager } from \"./RepositorySynchronizationManager.js\";\r\nimport { SynchroFile, SynchroWorkspace } from \"./SynchroWorkspace.js\";\r\n\r\ntype ButtonKind = \"create\" | \"delete\" | \"update\" | \"commit\" | \"updateAll\" | \"commitAll\";\r\nexport type LeftRight = \"left\" | \"right\";\r\n\r\n\r\nexport class SynchronizationListElement {\r\n\r\n    $leftFileDiv: JQuery<HTMLDivElement>;\r\n    $rightFileDiv: JQuery<HTMLDivElement>;\r\n    $buttonLeftDiv: JQuery<HTMLDivElement>;\r\n    $buttonRightDiv: JQuery<HTMLDivElement>;\r\n\r\n    $markAsMergedButtonDiv: JQuery<HTMLDivElement>;\r\n    $mergedFlag: JQuery<HTMLDivElement>;\r\n\r\n    editorState: monaco.editor.IDiffEditorViewState;\r\n\r\n    $buttons: JQuery<HTMLDivElement>[] = [];\r\n\r\n    constructor(private manager: SynchronizationManager, public leftSynchroFile: SynchroFile, public rightSynchroFile: SynchroFile,\r\n        public leftSynchroWorkspace: SynchroWorkspace, public rightSynchroWorkspace: SynchroWorkspace) {\r\n\r\n        this.$leftFileDiv = makeDiv(null, \"jo_synchro_workspaceFileDiv jo_synchro_listDiv\");\r\n        this.$buttonLeftDiv = makeDiv(null, \"jo_synchro_buttonDiv jo_synchro_listDiv jo_synchro_buttonLeftDiv\");\r\n        this.$buttonRightDiv = makeDiv(null, \"jo_synchro_buttonDiv jo_synchro_listDiv jo_synchro_buttonRightDiv\");\r\n        this.$rightFileDiv = makeDiv(null, \"jo_synchro_repositoryFileDiv jo_synchro_listDiv\");\r\n        manager.$fileListDivs[0].append(this.$leftFileDiv);\r\n        manager.$fileListDivs[1].append(this.$buttonLeftDiv);\r\n        manager.$fileListDivs[2].append(this.$buttonRightDiv);\r\n        manager.$fileListDivs[3].append(this.$rightFileDiv);\r\n\r\n        if (leftSynchroFile != null && leftSynchroFile.state != \"original\") this.$leftFileDiv.addClass('jo_dirty');\r\n        if (rightSynchroFile != null && rightSynchroFile.state != \"original\") this.$rightFileDiv.addClass('jo_dirty');\r\n\r\n\r\n\r\n        let allDivs: JQuery<HTMLDivElement>[] = [this.$leftFileDiv, this.$buttonLeftDiv, this.$buttonRightDiv, this.$rightFileDiv];\r\n\r\n        let that = this;\r\n\r\n        for (let $div of allDivs) {\r\n            $div.on(\"mouseenter\", () => {\r\n                for (let $div of allDivs) $div.addClass('jo_synchro_hoverLine');\r\n            });\r\n            $div.on(\"mouseleave\", () => {\r\n                for (let $div of allDivs) $div.removeClass('jo_synchro_hoverLine').removeClass(\"jo_synchro_hoverActiveLine\");\r\n            });\r\n\r\n            $div.on(\"mousedown\", () => {\r\n                for (let $div of allDivs) $div.addClass('jo_synchro_hoverActiveLine')\r\n            });\r\n            $div.on(\"mouseup\", () => { for (let $div of allDivs) $div.removeClass('jo_synchro_hoverActiveLine') });\r\n\r\n            $div.on(\"click\", () => {\r\n                that.select();\r\n            })\r\n        }\r\n\r\n        this.createLeftFileModel();\r\n        this.createRightFileModel();\r\n\r\n    }\r\n\r\n\r\n    select() {\r\n        let allDivs: JQuery<HTMLDivElement>[] = [this.$leftFileDiv, this.$buttonLeftDiv, this.$buttonRightDiv, this.$rightFileDiv];\r\n        jQuery('#jo_synchro_fileListOuter').find('.jo_synchro_activeLine').removeClass('jo_synchro_activeLine');\r\n        for (let $div of allDivs) $div.addClass('jo_synchro_activeLine');\r\n\r\n        if (this.manager.lastShownSynchronizationElement != null) {\r\n            this.manager.lastShownSynchronizationElement.editorState = this.manager.diffEditor.saveViewState()\r\n        }\r\n\r\n        this.manager.lastShownSynchronizationElement = this;\r\n\r\n        this.setEditorModel();\r\n\r\n        if (this.editorState != null) {\r\n            this.manager.diffEditor.restoreViewState(this.editorState);\r\n        }\r\n\r\n        this.manager.diffEditor.updateOptions({\r\n            originalEditable: this.leftSynchroFile?.originalText != null\r\n        })\r\n\r\n    }\r\n\r\n    createRightFileModel() {\r\n        if (this.rightSynchroFile != null) {\r\n            this.rightSynchroFile.monacoModel = monaco.editor.createModel(this.rightSynchroFile.text, \"myJava\");\r\n        }\r\n    }\r\n\r\n    setEditorModel() {\r\n        if (this.manager.lastShownSynchronizationElement == this) {\r\n            this.manager.diffEditor.setModel({\r\n                original: this.leftSynchroFile == null ? this.getEmptyMonacoModel() : this.leftSynchroFile.monacoModel,\r\n                modified: this.rightSynchroFile == null ? this.getEmptyMonacoModel() : this.rightSynchroFile.monacoModel\r\n            });\r\n        }\r\n    }\r\n\r\n    getEmptyMonacoModel(): monaco.editor.ITextModel {\r\n        return monaco.editor.createModel(\"\", \"myJava\")\r\n    }\r\n\r\n    pending: boolean = false;\r\n    createLeftFileModel() {\r\n        if (this.leftSynchroFile != null) {\r\n            this.leftSynchroFile.monacoModel = monaco.editor.createModel(this.leftSynchroFile.text, \"myJava\");\r\n            this.leftSynchroFile.monacoModel.onDidChangeContent((event) => {\r\n\r\n                // throttle comparison to avoid editor-slowdown\r\n                if (!this.pending) {\r\n                    this.pending = true;\r\n                    setTimeout(() => {\r\n                        if (this.leftSynchroFile != null && this.leftSynchroFile?.state != \"deleted\") {\r\n\r\n                            let newText: string = this.leftSynchroFile.monacoModel.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n                            if (this.leftSynchroFile?.originalText != null &&\r\n                                newText == this.leftSynchroFile.originalText) {\r\n                                this.$leftFileDiv.removeClass(\"jo_dirty\");\r\n                                this.leftSynchroFile.state = \"original\";\r\n                            } else {\r\n                                this.$leftFileDiv.addClass(\"jo_dirty\");\r\n                                this.leftSynchroFile.state = \"changed\";\r\n                                this.leftSynchroFile.identical_to_repository_version = false;\r\n                            }\r\n                            this.manager.onContentChanged(\"left\");\r\n                            this.leftSynchroFile.text = newText;\r\n\r\n                            this.compareFilesAndAdaptGUI();\r\n                        }\r\n                        this.pending = false;\r\n                    }, 700);\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    onFileChanged(leftRight: LeftRight) {\r\n        if (leftRight == \"left\") {\r\n            this.createLeftFileModel();\r\n        } else {\r\n            this.createRightFileModel();\r\n        }\r\n        this.setEditorModel();\r\n        this.compareFilesAndAdaptGUI();\r\n        switch (leftRight) {\r\n            case \"left\":\r\n                if (this.leftSynchroFile != null && this.leftSynchroFile.state != \"original\") {\r\n                    this.$leftFileDiv.addClass(\"jo_dirty\");\r\n                } else {\r\n                    this.$leftFileDiv.removeClass(\"jo_dirty\");\r\n                }\r\n                break;\r\n            case \"right\":\r\n                if (this.rightSynchroFile != null && this.rightSynchroFile.state != \"original\") {\r\n                    this.$rightFileDiv.addClass(\"jo_dirty\");\r\n                } else {\r\n                    this.$rightFileDiv.removeClass(\"jo_dirty\");\r\n                }\r\n                break;\r\n        }\r\n        this.manager.onContentChanged(leftRight);\r\n    }\r\n\r\n    compareFilesAndAdaptGUI() {\r\n\r\n        this.emptyGUI();\r\n        let that = this;\r\n\r\n        let leftCaption: string = \"---\";\r\n        let leftVersionCaption: string = \"\";\r\n\r\n        let needsMerge = false;\r\n\r\n        if (this.leftSynchroFile != null) {\r\n            leftCaption = this.leftSynchroFile.name;\r\n            if (this.leftSynchroFile.repository_file_version == null) {\r\n                leftVersionCaption = \"(ohne Version)\";\r\n            } else {\r\n                leftVersionCaption = \"(V \" + this.leftSynchroFile.repository_file_version;\r\n                if (!(this.leftSynchroFile.identical_to_repository_version || this.leftSynchroFile?.text == this.rightSynchroFile?.text)) {\r\n                    leftVersionCaption += '<span class=\"jo_synchro_withChanges\"> mit Änderungen</span>';\r\n                }\r\n                if (this.rightSynchroFile != null && this.leftSynchroFile.synchroWorkspace.isWritable()) {\r\n                    if (this.rightSynchroFile.repository_file_version > this.leftSynchroFile.repository_file_version) {\r\n                        needsMerge = !this.leftSynchroFile.markedAsMerged;\r\n                    }\r\n                }\r\n\r\n                leftVersionCaption += \")\";\r\n            }\r\n\r\n            if (this.leftSynchroFile.state == \"deleted\") {\r\n                leftCaption += \" - GELÖSCHT\";\r\n                leftVersionCaption = \"\";\r\n            }\r\n        }\r\n\r\n        let rightCaption = this.rightSynchroFile == null ? \"---\" : this.rightSynchroFile.name;\r\n        let rightVersionCaption = this.rightSynchroFile == null ? \"\" : \"(V \" + this.rightSynchroFile.repository_file_version + \")\";\r\n        if (this.rightSynchroFile?.state == \"deleted\") {\r\n            rightCaption += \" - GELÖSCHT\";\r\n            rightVersionCaption = \"\";\r\n        }\r\n\r\n        let $spacer1 = makeDiv(\"\", \"jo_synchro_5px_spacer\");\r\n        let $spacer2 = makeDiv(\"\", \"jo_synchro_5px_spacer\");\r\n\r\n        this.$buttonRightDiv.append($spacer2);\r\n\r\n        if (this.leftSynchroFile == null) {\r\n            if (this.leftSynchroWorkspace.isWritable() && that.rightSynchroFile.state != \"deleted\") {\r\n                this.$buttonLeftDiv.append(SynchronizationListElement.makeButton(\"create\", \"left\", () => {\r\n                    that.leftSynchroFile = {\r\n                        name: that.rightSynchroFile.name,\r\n                        idInsideRepository: that.rightSynchroFile.idInsideRepository,\r\n                        repository_file_version: that.rightSynchroFile.repository_file_version,\r\n                        identical_to_repository_version: true,\r\n                        state: \"new\",\r\n                        markedAsMerged: false,\r\n                        text: this.rightSynchroFile.text,\r\n                        synchroWorkspace: that.leftSynchroWorkspace,\r\n                        idInsideWorkspace: null,\r\n                        workspaceFile: null,\r\n                        originalText: null,\r\n                        monacoModel: null\r\n                    };\r\n                    that.leftSynchroWorkspace.files.push(that.leftSynchroFile);\r\n                    that.onFileChanged(\"left\");\r\n                }, false));\r\n            }\r\n            if (that.rightSynchroWorkspace.isWritable() && that.rightSynchroFile.state != \"deleted\") {\r\n                this.$buttonRightDiv.append(SynchronizationListElement.makeButton(\"delete\", \"right\", () => {\r\n                    that.rightSynchroFile.state = \"deleted\";\r\n                    that.onFileChanged(\"right\");\r\n                }, false));\r\n            }\r\n        } else if (this.rightSynchroFile == null) {\r\n            if (this.rightSynchroWorkspace.isWritable() && that.leftSynchroFile.state != \"deleted\") {\r\n                this.$buttonRightDiv.append(SynchronizationListElement.makeButton(\"create\", \"right\", () => {\r\n                    that.rightSynchroFile = {\r\n                        name: that.leftSynchroFile.name,\r\n                        committedFromFile: that.leftSynchroWorkspace.isWritable() ? that.leftSynchroFile : null,\r\n                        idInsideRepository: that.leftSynchroFile.idInsideRepository,\r\n                        repository_file_version: that.leftSynchroFile.repository_file_version == null ? 1 : that.leftSynchroFile.repository_file_version,\r\n                        identical_to_repository_version: that.leftSynchroFile.identical_to_repository_version,\r\n                        state: \"new\",\r\n                        markedAsMerged: false,\r\n                        text: this.leftSynchroFile.text,\r\n                        synchroWorkspace: that.rightSynchroWorkspace,\r\n                        idInsideWorkspace: this.leftSynchroFile.idInsideWorkspace,\r\n                        workspaceFile: null,\r\n                        originalText: null,\r\n                        monacoModel: null\r\n                    }\r\n                    that.rightSynchroWorkspace.files.push(that.rightSynchroFile);\r\n                    that.leftSynchroFile.repository_file_version = that.rightSynchroFile.repository_file_version;\r\n                    that.leftSynchroFile.identical_to_repository_version = true;\r\n                    that.onFileChanged(\"right\");\r\n                }, false));\r\n            }\r\n            if (that.leftSynchroWorkspace.isWritable() && that.leftSynchroFile.state != \"deleted\") {\r\n                this.$buttonLeftDiv.append(SynchronizationListElement.makeButton(\"delete\", \"left\", () => {\r\n                    that.leftSynchroFile.state = \"deleted\";\r\n                    that.onFileChanged(\"left\");\r\n                },false));\r\n            }\r\n        } else {\r\n            // Both SynchroFiles != null\r\n            let isSynchronized: boolean = true;\r\n\r\n            let isRename: boolean = this.leftSynchroFile.name != this.rightSynchroFile.name;\r\n            let isUpdateOrCommit: boolean = this.leftSynchroFile.text != this.rightSynchroFile.text;\r\n            let onlyRename = isRename && !isUpdateOrCommit;\r\n\r\n            if (this.leftSynchroFile.repository_file_version == this.rightSynchroFile.repository_file_version) {\r\n                if (isUpdateOrCommit || isRename) {\r\n                    isSynchronized = false;\r\n                }\r\n            } else {\r\n                isSynchronized = false;\r\n            }\r\n\r\n            if (isSynchronized) {\r\n                this.$buttonLeftDiv.append(jQuery('<div>synchron - </div>'));\r\n                this.$buttonRightDiv.append(jQuery('<div> - synchron</div>'));\r\n            } else {\r\n                if (this.leftSynchroWorkspace.isWritable()) {\r\n                    this.$buttonLeftDiv.append(SynchronizationListElement.makeButton(\"update\", \"left\", () => {\r\n                        that.leftSynchroFile.text = that.rightSynchroFile.text;\r\n                        that.leftSynchroFile.repository_file_version = that.rightSynchroFile.repository_file_version;\r\n                        that.leftSynchroFile.identical_to_repository_version = true;\r\n                        that.leftSynchroFile.name = that.rightSynchroFile.name;\r\n                        that.leftSynchroFile.state = \"changed\";\r\n                        that.onFileChanged(\"left\");\r\n                    }, onlyRename));\r\n                }\r\n                if (this.rightSynchroWorkspace.isWritable() && !needsMerge) {\r\n                    this.$buttonRightDiv.append(SynchronizationListElement.makeButton(\"commit\", \"right\", () => {\r\n                        that.rightSynchroFile.text = that.leftSynchroFile.text;\r\n                        that.rightSynchroFile.name = that.leftSynchroFile.name;\r\n                        that.rightSynchroFile.repository_file_version++;\r\n                        if (that.leftSynchroWorkspace.isWritable()) that.rightSynchroFile.committedFromFile = that.leftSynchroFile;\r\n                        if (that.leftSynchroWorkspace.isWritable()) {\r\n                            that.leftSynchroFile.repository_file_version = that.rightSynchroFile.repository_file_version;\r\n                            this.leftSynchroFile.identical_to_repository_version = true;\r\n                        }\r\n                        that.rightSynchroFile.state = \"changed\";\r\n                        that.onFileChanged(\"right\");\r\n                    }, onlyRename));\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.$buttonLeftDiv.append($spacer1);\r\n\r\n\r\n        this.$leftFileDiv.append(jQuery(`<div class=\"jo_synchro_filename\">${leftCaption}<span class=\"jo_synchro_fileVersion\">${leftVersionCaption}</span></div>`));\r\n        this.$rightFileDiv.append(jQuery(`<div class=\"jo_synchro_filename\">${rightCaption}<span class=\"jo_synchro_fileVersion\">${rightVersionCaption}</span></div>`));\r\n\r\n        if (needsMerge) {\r\n            this.$markAsMergedButtonDiv = jQuery(`<div class=\"jo_synchro_button jo_synchro_markAsMergedButton\">Als \"merged\" markieren</div>`);\r\n            this.$leftFileDiv.append(this.$markAsMergedButtonDiv);\r\n            this.$markAsMergedButtonDiv.on(\"click\", (e) => {\r\n                e.stopPropagation();\r\n                this.leftSynchroFile.markedAsMerged = true;\r\n                this.compareFilesAndAdaptGUI();\r\n            });\r\n        }\r\n\r\n        if (this.leftSynchroFile != null && this.leftSynchroFile.markedAsMerged) {\r\n            this.showMergedDiv();\r\n        }\r\n\r\n        this.manager.updateCenterButtons();\r\n\r\n    }\r\n\r\n    showMergedDiv() {\r\n        let $mergedDiv = jQuery(`<div class=\"jo_synchro_mergedDiv\">merged</div><div class=\"img_errorfree\"></div>`);\r\n        this.$leftFileDiv.append($mergedDiv);\r\n    }\r\n\r\n    emptyGUI() {\r\n        this.$leftFileDiv.empty();\r\n        this.$rightFileDiv.empty();\r\n        this.$buttonLeftDiv.empty();\r\n        this.$buttonRightDiv.empty();\r\n    }\r\n\r\n    static makeButton(kind: ButtonKind, arrowDirection: LeftRight, callback: () => void, onlyRename: boolean): JQuery<HTMLDivElement> {\r\n\r\n        let caption = \"\";\r\n        let klass = \"\";\r\n\r\n        switch (kind) {\r\n            case \"commit\":\r\n                caption = onlyRename ? \"rename\" : \"commit\"; klass = \"jo_synchro_commitButton\"; break;\r\n            case \"commitAll\":\r\n                caption = \"commit all\"; klass = \"jo_synchro_commitButton\"; break;\r\n            case \"update\":\r\n                caption = onlyRename ? \"rename\" : \"update\"; klass = \"jo_synchro_updateButton\"; break;\r\n            case \"updateAll\":\r\n                caption = \"update all\"; klass = \"jo_synchro_updateButton\"; break;\r\n            case \"create\": caption = \"create\"; klass = \"jo_synchro_createButton\"; break;\r\n            case \"delete\": caption = \"delete\"; klass = \"jo_synchro_deleteButton\"; break;\r\n        }\r\n\r\n        switch (arrowDirection) {\r\n            case \"left\": klass += \" jo_synchro_arrowLeft\"; break;\r\n            case \"right\": klass += \" jo_synchro_arrowRight\"; break;\r\n        }\r\n\r\n        let div: JQuery<HTMLDivElement> = jQuery(`<div class=\"jo_synchro_button ${klass}\">${caption}</div>`);\r\n\r\n        div.on(\"click\", (e) => {\r\n            e.stopPropagation();\r\n            if (callback != null) callback();\r\n        });\r\n\r\n        div.on(\"mousedown\", (e) => { e.stopPropagation() })\r\n\r\n        return div;\r\n\r\n    }\r\n\r\n\r\n}","import { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { GetRepositoryRequest, GetRepositoryResponse, Repository, GainRepositoryLockRequest, GainRepositoryLockResponse, LeaseRepositoryLockRequest, LeaseRepositoryLockResponse } from \"../../communication/Data.js\";\r\nimport { EmbeddedSlider } from \"../../embedded/EmbeddedSlider.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { HistoryElement } from \"./HistoryElement.js\";\r\nimport { RepositoryTool } from \"./RepositoryTool.js\";\r\nimport { LeftRight, SynchronizationListElement } from \"./SynchronizationListElement.js\";\r\nimport { SynchroFile, SynchroWorkspace } from \"./SynchroWorkspace.js\";\r\nimport { Dialog } from \"../../main/gui/Dialog.js\";\r\n\r\n\r\ntype FileElement = {\r\n    id: number,\r\n    name: string,\r\n    leftSynchroFile: SynchroFile,\r\n    rightSynchroFile: SynchroFile\r\n}\r\n\r\nexport class SynchronizationManager {\r\n\r\n    $mainHeadingDiv: JQuery<HTMLDivElement>; // heading \"Java-Online: Synchronize repositories\"\r\n\r\n    $writeWorkspaceChangesButton: JQuery<HTMLDivElement>;\r\n    $writeRepositoryChangesButton: JQuery<HTMLDivElement>;\r\n\r\n    $backToWorkspaceButton: JQuery<HTMLDivElement>;\r\n    $backToCurrentRepositoryVersionButton: JQuery<HTMLDivElement>;\r\n\r\n    $exitButton: JQuery<HTMLDivElement>;\r\n\r\n    $belowMainHeadingDiv: JQuery<HTMLDivElement>; // contains all elements below main heading\r\n\r\n    $leftDiv: JQuery<HTMLDivElement>; // contains headings, file lists and editors\r\n    $historyOuterDiv: JQuery<HTMLDivElement>; // contains history\r\n    $historyScrollDiv: JQuery<HTMLDivElement>;\r\n\r\n    $leftUpperDiv: JQuery<HTMLDivElement>; // contains file list header, file list and file list footer\r\n\r\n    $fileListHeaderOuterDiv: JQuery<HTMLDivElement>;\r\n    $fileListHeaderDivs: JQuery<HTMLDivElement>[] = [];\r\n\r\n    $fileListHeaderContainerRight: JQuery<HTMLDivElement>;\r\n\r\n    $updateAllButton: JQuery<HTMLElement>;\r\n    $commitAllButton: JQuery<HTMLElement>;\r\n\r\n\r\n    $fileListOuterDiv: JQuery<HTMLDivElement>;\r\n    $fileListDivs: JQuery<HTMLDivElement>[] = [];\r\n\r\n    $fileListFooterDiv: JQuery<HTMLDivElement>;\r\n\r\n    $editorDiv: JQuery<HTMLDivElement>;\r\n\r\n    guiReady: boolean = false;\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    currentUserSynchroWorkspace: SynchroWorkspace;\r\n    currentRepositorySynchroWorkspace: SynchroWorkspace;\r\n    currentRepository: Repository;\r\n\r\n    leftSynchroWorkspace: SynchroWorkspace;\r\n    rightSynchroWorkspace: SynchroWorkspace;\r\n\r\n    lastShownSynchronizationElement: SynchronizationListElement;\r\n    synchronizationListElements: SynchronizationListElement[] = [];\r\n\r\n    lastShownHistoryElement: HistoryElement;\r\n    historyElements: HistoryElement[] = [];\r\n\r\n    timer: any;\r\n\r\n    repositoryIsWritable: boolean;\r\n\r\n    constructor(public main: Main) {\r\n    }\r\n\r\n    synchronizeWithWorkspace(workspace: Workspace) {\r\n\r\n        this.gainRepositoryLock(workspace.repository_id, (success) => {\r\n            if (success) {\r\n                this.repositoryIsWritable = true;\r\n                this.attachToWorkspaceAndRepository(workspace);\r\n                this.show();\r\n\r\n                this.timer = setInterval(() => {\r\n\r\n                    this.gainRepositoryLock(this.currentRepository.id, (success) => {\r\n                        if (!success) {\r\n                            alert('Der Server ist temporär nicht erreichbar.');\r\n                            window.history.back();\r\n                        }\r\n                    })\r\n\r\n                }, 10000)\r\n            } else {\r\n                // User has no write permission to repository => no lock needed.\r\n                this.attachToWorkspaceAndRepository(workspace);\r\n                this.repositoryIsWritable = false;\r\n                this.show();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    gainRepositoryLock(repository_id: number, callback: (success: boolean) => void) {\r\n        let request: GainRepositoryLockRequest = { repository_id: repository_id };\r\n        ajax('gainRepositoryLock', request, (response: GainRepositoryLockResponse) => {\r\n            callback(response.success);\r\n            // console.log(\"Lock for repository_id \" + repository_id + \" has been granted.\")\r\n        }, (message) => {\r\n            alert(message);\r\n            callback(false);\r\n        });\r\n    }\r\n\r\n    attachToWorkspaceAndRepository(workspace: Workspace) {\r\n\r\n        this.currentUserSynchroWorkspace = new SynchroWorkspace(this).copyFromWorkspace(workspace);\r\n        this.leftSynchroWorkspace = this.currentUserSynchroWorkspace;\r\n\r\n        let that = this;\r\n\r\n        let request: GetRepositoryRequest = { repository_id: workspace.repository_id, workspace_id: workspace.id };\r\n        ajax(\"getRepository\", request, (response: GetRepositoryResponse) => {\r\n\r\n            that.attachToRepository(response.repository);\r\n\r\n        }, (message: string) => {\r\n            alert(message);\r\n            window.history.back();\r\n        })\r\n\r\n    }\r\n\r\n    attachToRepository(repository: Repository) {\r\n        this.currentRepository = repository;\r\n        RepositoryTool.deserializeRepository(this.currentRepository);\r\n        this.currentRepositorySynchroWorkspace = new SynchroWorkspace(this).copyFromRepository(this.currentRepository, true);\r\n\r\n        this.rightSynchroWorkspace = this.currentRepositorySynchroWorkspace;\r\n        this.setupSynchronizationListElements();\r\n        this.setupHistoryElements();\r\n    }\r\n\r\n    setupHistoryElements() {\r\n        this.$historyScrollDiv.empty();\r\n        this.historyElements = [];\r\n        this.lastShownHistoryElement = null;\r\n\r\n        this.currentRepository.historyEntries.forEach((he, index) => {\r\n            this.historyElements.push(new HistoryElement(this, this.currentRepository, he, index));\r\n        });\r\n    }\r\n\r\n    setupSynchronizationListElements() {\r\n\r\n        let lastSynchroFileLeft = null;\r\n        let lastSynchroFileRight = null;\r\n        if (this.lastShownSynchronizationElement != null) {\r\n            lastSynchroFileLeft = this.lastShownSynchronizationElement.leftSynchroFile;\r\n            lastSynchroFileRight = this.lastShownSynchronizationElement.rightSynchroFile;\r\n        }\r\n\r\n        this.$fileListDivs.forEach($div => $div.empty());\r\n\r\n        this.synchronizationListElements.forEach(se => se.emptyGUI());\r\n        this.synchronizationListElements = [];\r\n        this.lastShownSynchronizationElement = null;\r\n\r\n        let fileElements: FileElement[] = [];\r\n        let synchroFileMap: { [id: string]: FileElement } = {};\r\n\r\n        this.leftSynchroWorkspace.files.forEach(sfile => {\r\n            let fileElement = {\r\n                id: sfile.idInsideRepository,\r\n                name: sfile.name,\r\n                leftSynchroFile: sfile,\r\n                rightSynchroFile: null\r\n            };\r\n\r\n            fileElements.push(fileElement);\r\n            if (sfile.idInsideRepository != null) {\r\n                synchroFileMap[\"r\" + sfile.idInsideRepository] = fileElement;\r\n            } else {\r\n                synchroFileMap[\"w\" + sfile.idInsideWorkspace] = fileElement;\r\n            }\r\n        });\r\n\r\n        this.rightSynchroWorkspace.files.forEach(sfile => {\r\n            let fileElement: FileElement = null;\r\n            if (sfile.idInsideRepository != null){\r\n                fileElement = synchroFileMap[\"r\" + sfile.idInsideRepository];\r\n            }  else {\r\n                fileElement = synchroFileMap[\"w\" + sfile.idInsideWorkspace];\r\n            }\r\n            if (fileElement == null) {\r\n                fileElement = {\r\n                    id: sfile.idInsideRepository,\r\n                    name: sfile.name,\r\n                    leftSynchroFile: null,\r\n                    rightSynchroFile: sfile\r\n                };\r\n                fileElements.push(fileElement);\r\n            } else {\r\n                fileElement.rightSynchroFile = sfile;\r\n            }\r\n        });\r\n\r\n        fileElements.sort((fe1, fe2) => fe1.name.localeCompare(fe2.name));\r\n\r\n        fileElements.forEach(fe => {\r\n\r\n            let synchroListElement = new SynchronizationListElement(this, fe.leftSynchroFile, fe.rightSynchroFile, this.leftSynchroWorkspace, this.rightSynchroWorkspace);\r\n            this.synchronizationListElements.push(synchroListElement);\r\n            synchroListElement.compareFilesAndAdaptGUI();\r\n\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: monaco.editor.createModel(\"Wählen Sie oben eine Datei aus!\", \"myJava\"),\r\n            modified: monaco.editor.createModel(\"Wählen Sie oben eine Datei aus!\", \"myJava\")\r\n        });\r\n\r\n        this.diffEditor.updateOptions({\r\n            originalEditable: false\r\n        })\r\n\r\n        if (this.leftSynchroWorkspace == this.currentUserSynchroWorkspace) {\r\n            this.setHeader(\"left\", \"Dein Workspace:\");\r\n            this.$backToWorkspaceButton.hide();\r\n        } else {\r\n            this.setHeader(\"left\", this.leftSynchroWorkspace.name + \":\");\r\n            this.$backToWorkspaceButton.show();\r\n            this.$writeWorkspaceChangesButton.hide();\r\n        }\r\n\r\n        if (this.rightSynchroWorkspace == this.currentRepositorySynchroWorkspace) {\r\n            let writable: string = this.repositoryIsWritable ? \", mit Schreibzugriff\" : \", ohne Schreibzugriff\";\r\n            this.setHeader(\"right\", \"Repository (aktuelle Version\" + writable + \"):\");\r\n            this.$backToCurrentRepositoryVersionButton.hide();\r\n        } else {\r\n            this.setHeader(\"right\", this.rightSynchroWorkspace.name + \":\");\r\n            this.$backToCurrentRepositoryVersionButton.show();\r\n            this.$writeRepositoryChangesButton.hide();\r\n        }\r\n\r\n        jQuery('#jo_synchro_main_heading_text').text(`Synchronisieren mit Repository \"${this.currentRepository.name}\"`);\r\n\r\n        let lastFileSelected: boolean = false;\r\n        if (lastSynchroFileLeft != null || lastSynchroFileRight != null) {\r\n            for (let sle of this.synchronizationListElements) {\r\n                if (\r\n                    sle.leftSynchroFile != null && sle.leftSynchroFile == lastSynchroFileLeft ||\r\n                    sle.rightSynchroFile != null && sle.rightSynchroFile == lastSynchroFileRight\r\n                ) {\r\n                    sle.select();\r\n                    lastFileSelected = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!lastFileSelected && this.synchronizationListElements.length > 0) {\r\n            this.synchronizationListElements[0].select();\r\n        }\r\n\r\n    }\r\n\r\n    show() {\r\n        if (!this.guiReady) {\r\n            this.initGUI();\r\n        }\r\n        let $synchroDiv = jQuery('#synchronize-div');\r\n        $synchroDiv.css('visibility', 'visible');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'hidden');\r\n\r\n        this.$writeWorkspaceChangesButton.hide();\r\n        this.$writeRepositoryChangesButton.hide();\r\n\r\n        let that = this;\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.hide();\r\n        });\r\n    }\r\n\r\n    hide() {\r\n        let $synchroDiv = jQuery('#synchronize-div');\r\n        $synchroDiv.css('visibility', 'hidden');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'visible');\r\n\r\n        clearInterval(this.timer);\r\n\r\n        if(this.currentRepository == null) return;   // Testuser...\r\n\r\n        let request: LeaseRepositoryLockRequest = { repository_id: this.currentRepository.id };\r\n        ajax('leaseRepositoryLock', request, (response: LeaseRepositoryLockResponse) => {\r\n            // console.log(\"Lock for repository_id \" + request.repository_id + \" has been released.\")\r\n        }, (message) => {\r\n        });\r\n    }\r\n\r\n    initGUI() {\r\n        this.guiReady = true;\r\n        let $synchroDiv = jQuery('#synchronize-div');\r\n        let that = this;\r\n\r\n        $synchroDiv.append(\r\n\r\n            this.$mainHeadingDiv = jQuery('<div id=\"jo_synchro_main_heading\"><span id=\"jo_synchro_main_heading_text\">Java-Online: Workspace mit Repository synchronisieren</span></div>'),\r\n\r\n            this.$belowMainHeadingDiv = makeDiv(\"jo_synchro_below_main_heading\"));\r\n\r\n        let $buttonsTopRightDiv = makeDiv(\"jo_synchro_buttonsTopRight\");\r\n        this.$mainHeadingDiv.append($buttonsTopRightDiv);\r\n\r\n        $buttonsTopRightDiv.append(this.$exitButton = jQuery('<div id=\"jo_synchro_exitButton\" class=\"jo_synchro_button\">Zurück zum Programmieren</div>'));\r\n\r\n        this.$exitButton.on('click', () => {\r\n            window.history.back();\r\n        });\r\n\r\n        this.$leftDiv = makeDiv(\"jo_synchro_leftDiv\");\r\n        this.$historyOuterDiv = makeDiv(\"jo_synchro_historyOuterDiv\");\r\n\r\n        this.$historyOuterDiv.append(jQuery('<div id=\"jo_synchro_historyHeader\"><div class=\"jo_synchro_tabHeading\">History:</div></div>)'));\r\n\r\n        this.$belowMainHeadingDiv.append(this.$leftDiv, this.$historyOuterDiv);\r\n\r\n        new EmbeddedSlider(this.$historyOuterDiv, true, false, () => { this.diffEditor.layout(); }).$sliderDiv.css('left', '-3px');\r\n        this.$historyOuterDiv.find('.joe_slider').css('position', 'absolute');\r\n\r\n        this.$historyScrollDiv = makeDiv(\"historyScrollDiv\", \"jo_scrollable\");\r\n        this.$historyOuterDiv.append(this.$historyScrollDiv);\r\n\r\n\r\n        this.$leftDiv.append(\r\n            this.$leftUpperDiv = makeDiv(\"jo_synchro_leftUpper\"),\r\n            this.$editorDiv = makeDiv(\"jo_synchro_editor\")\r\n        );\r\n\r\n        this.$leftUpperDiv.append(\r\n            this.$fileListHeaderOuterDiv = makeDiv(\"jo_synchro_fileListHeaderOuter\"),\r\n            this.$fileListOuterDiv = makeDiv(\"jo_synchro_fileListOuter\", \"jo_scrollable\"),\r\n            this.$fileListFooterDiv = makeDiv(\"jo_synchro_fileListFooter\")\r\n        )\r\n\r\n        this.$fileListHeaderContainerRight = makeDiv(null, \"jo_synchro_fileListHeaderContainerRight\");\r\n        let fileListHeaderRight = makeDiv(null, \"jo_synchro_fileListHeader\");\r\n        this.$fileListHeaderContainerRight.append(fileListHeaderRight);\r\n\r\n        let $fileListHeaderCenter = makeDiv(null, \"jo_synchro_fileListHeaderCenter\");\r\n        $fileListHeaderCenter.append(this.$updateAllButton = SynchronizationListElement.makeButton(\"updateAll\", \"left\", () => { that.updateAll() }, false));\r\n        $fileListHeaderCenter.append(this.$commitAllButton = SynchronizationListElement.makeButton(\"commitAll\", \"right\", () => { that.commitAll() }, false));\r\n\r\n        this.$fileListHeaderDivs.push(makeDiv(null, \"jo_synchro_fileListHeader\", \"\", { \"flex\": \"2 0\" }), $fileListHeaderCenter, this.$fileListHeaderContainerRight, makeDiv(null, \"jo_synchro_scrollbarPlaceholder\"));\r\n        this.$fileListDivs.push(makeDiv(null, \"jo_synchro_fileList\"), makeDiv(null, \"jo_synchro_fileListButtonsLeft\"), makeDiv(null, \"jo_synchro_fileListButtonsRight\"), makeDiv(null, \"jo_synchro_fileList\"));\r\n\r\n        this.$fileListHeaderOuterDiv.append(this.$fileListHeaderDivs);\r\n        this.$fileListOuterDiv.append(this.$fileListDivs);\r\n\r\n        this.$fileListHeaderDivs[0].append(\"<div class='jo_synchro_tabHeading'>Dein Workspace:</div>\");\r\n        fileListHeaderRight.append(\"<div class='jo_synchro_tabHeading'>Repository (aktuelle Version):</div>\");\r\n\r\n\r\n        this.$fileListHeaderDivs[0].append(this.$backToWorkspaceButton = jQuery('<div class=\"jo_synchro_button jo_synchro_backToButton\">Zeige eigenen Workspace</div>'));\r\n        this.$backToWorkspaceButton.on('click', () => {\r\n            that.backToWorkspace();\r\n        });\r\n        this.$backToWorkspaceButton.hide();\r\n\r\n\r\n\r\n\r\n        fileListHeaderRight.append(this.$backToCurrentRepositoryVersionButton = jQuery('<div class=\"jo_synchro_button jo_synchro_backToButton\">Zeige aktuelle Repository-Version</div>'));\r\n        this.$backToCurrentRepositoryVersionButton.on('click', () => {\r\n            that.backToCurrentRepositoryVersion();\r\n        });\r\n        this.$backToWorkspaceButton.hide();\r\n\r\n        this.$fileListHeaderDivs[0].append(this.$writeWorkspaceChangesButton = jQuery('<div id=\"jo_synchro_writeChangesButton\" class=\"jo_synchro_button\">Änderungen am Workspace (rot!) speichern</div>'));\r\n        this.$writeWorkspaceChangesButton.on('click', () => {\r\n            that.writeWorkspaceChanges();\r\n        });\r\n        this.$writeWorkspaceChangesButton.hide();\r\n\r\n        fileListHeaderRight.append(this.$writeRepositoryChangesButton = jQuery('<div id=\"jo_synchro_writeChangesButton\" class=\"jo_synchro_button\">Änderungen am Repository (rot!) speichern</div>'));\r\n        this.$writeRepositoryChangesButton.on('click', () => {\r\n            that.writeRepositoryChanges();\r\n        });\r\n        this.$writeRepositoryChangesButton.hide();\r\n\r\n\r\n\r\n\r\n        let horizontalSlider = new EmbeddedSlider(this.$editorDiv, true, true, () => { this.diffEditor.layout(); });\r\n        horizontalSlider.setColor('var(--slider)');\r\n\r\n        this.makeDroppable(\"left\", this.$fileListDivs[0]);\r\n        this.makeDroppable(\"right\", this.$fileListDivs[3]);\r\n\r\n        this.initEditor();\r\n    }\r\n\r\n    backToWorkspace() {\r\n        this.leftSynchroWorkspace = this.currentUserSynchroWorkspace;\r\n        this.setupSynchronizationListElements();\r\n        this.onContentChanged(\"left\");\r\n    }\r\n\r\n    backToCurrentRepositoryVersion() {\r\n        this.rightSynchroWorkspace = this.currentRepositorySynchroWorkspace;\r\n        this.setupSynchronizationListElements();\r\n        this.onContentChanged(\"right\");\r\n    }\r\n\r\n    makeDroppable(leftRight: LeftRight, $dropZoneDiv: JQuery<HTMLDivElement>) {\r\n        let that = this;\r\n        $dropZoneDiv.on(\"dragover\", (e) => {\r\n            $dropZoneDiv.addClass('jo_synchro_dragZone');\r\n            e.preventDefault();\r\n        });\r\n        $dropZoneDiv.on(\"dragleave\", () => {\r\n            $dropZoneDiv.removeClass('jo_synchro_dragZone');\r\n        });\r\n        $dropZoneDiv.on(\"drop\", (e) => {\r\n            let sw = new SynchroWorkspace(that).copyFromHistoryElement(HistoryElement.currentlyDragged);\r\n            switch (leftRight) {\r\n                case \"left\":\r\n                    that.leftSynchroWorkspace = sw;\r\n                    break;\r\n                case \"right\":\r\n                    that.rightSynchroWorkspace = sw;\r\n                    break;\r\n            }\r\n            that.setupSynchronizationListElements();\r\n            $dropZoneDiv.removeClass('jo_synchro_dragZone');\r\n        })\r\n\r\n    }\r\n\r\n    setHeader(leftRight: LeftRight, caption: string) {\r\n        let index: number = leftRight == \"left\" ? 0 : 2;\r\n        this.$fileListHeaderDivs[index].find('.jo_synchro_tabHeading').text(caption);\r\n    }\r\n\r\n    writeRepositoryChanges() {\r\n\r\n        let that = this;\r\n        this.$writeRepositoryChangesButton.hide();\r\n\r\n        let $dialogDiv = makeDiv(\"\", \"jo_synchro_commitDialogDiv\");\r\n        $dialogDiv.hide();\r\n        this.$fileListHeaderContainerRight.append($dialogDiv);\r\n\r\n        $dialogDiv.append(makeDiv(\"\", \"jo_synchro_commitDialogCaption\", \"Bitte beschreibe kurz die vorgenommenen Änderungen am Repository:\"));\r\n        let $dialogTextarea: JQuery<HTMLTextAreaElement> = jQuery('<textarea class=\"jo_synchro_commitDialogTextarea\"></textarea>');\r\n        $dialogDiv.append($dialogTextarea);\r\n\r\n        let $dialogButtonDiv = makeDiv(\"\", \"jo_synchro_commitDialogButtonDiv\");\r\n        $dialogDiv.append($dialogButtonDiv);\r\n\r\n        let $buttonCancel = makeDiv(\"\", \"jo_synchro_button\", \"Abbrechen\", { \"background-color\": \"var(--updateButtonBackground)\", \"color\": \"var(--updateButtonColor)\" })\r\n        $dialogButtonDiv.append($buttonCancel);\r\n\r\n        $buttonCancel.on(\"click\", () => {\r\n            $dialogDiv.remove();\r\n            that.$writeRepositoryChangesButton.show();\r\n        })\r\n\r\n        let $buttonOK = makeDiv(\"\", \"jo_synchro_button\", \"OK\", { \"background-color\": \"var(--createButtonBackground)\", \"color\": \"var(--createButtonColor)\" })\r\n        $dialogButtonDiv.append($buttonOK);\r\n\r\n        $dialogDiv.show(600);\r\n\r\n        $buttonOK.on(\"click\", () => {\r\n            let comment = <string>$dialogTextarea.val();\r\n            $dialogDiv.remove();\r\n\r\n            this.currentRepositorySynchroWorkspace.commit(this.currentUserSynchroWorkspace.copiedFromWorkspace, this.currentRepository, comment,\r\n                this.main, (repository: Repository, errorMessage: string) => {\r\n\r\n                    if (errorMessage != null) {\r\n                        alert(errorMessage);\r\n                        this.attachToWorkspaceAndRepository(this.currentRepositorySynchroWorkspace.copiedFromWorkspace);\r\n                    } else {\r\n                        this.attachToRepository(repository);\r\n                        this.$writeRepositoryChangesButton.hide();\r\n                    }\r\n\r\n                });\r\n\r\n        })\r\n\r\n        $dialogTextarea.focus();\r\n\r\n    }\r\n\r\n    writeWorkspaceChanges() {\r\n        this.currentUserSynchroWorkspace.writeChangesToWorkspace();\r\n        this.currentUserSynchroWorkspace = new SynchroWorkspace(this).copyFromWorkspace(this.currentUserSynchroWorkspace.copiedFromWorkspace);\r\n        this.leftSynchroWorkspace = this.currentUserSynchroWorkspace;\r\n        this.setupSynchronizationListElements();\r\n        this.$writeWorkspaceChangesButton.hide();\r\n    }\r\n\r\n    initEditor() {\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"jo_synchro_editor\"), {\r\n            originalEditable: true, // for left pane\r\n            readOnly: true,         // for right pane\r\n            automaticLayout: true\r\n        });\r\n    }\r\n\r\n    onContentChanged(leftRight: LeftRight) {\r\n        let $button: JQuery<HTMLDivElement> = leftRight == \"left\" ? this.$writeWorkspaceChangesButton : this.$writeRepositoryChangesButton\r\n        let synchroWorkspace: SynchroWorkspace = leftRight == \"left\" ? this.currentUserSynchroWorkspace : this.currentRepositorySynchroWorkspace;\r\n\r\n        if (synchroWorkspace.hasChanges()) {\r\n            $button.show();\r\n        } else {\r\n            $button.hide();\r\n        }\r\n\r\n    }\r\n\r\n    updateAll() {\r\n        let updateButtons = this.$fileListDivs[1].find('.jo_synchro_updateButton');\r\n        updateButtons.click();\r\n    }\r\n\r\n    commitAll() {\r\n        let commitButtons = this.$fileListDivs[2].find('.jo_synchro_commitButton');\r\n        commitButtons.click();\r\n    }\r\n\r\n\r\n    updateCenterButtons() {\r\n        let updateButtons = this.$fileListDivs[1].find('.jo_synchro_updateButton');\r\n        if (updateButtons.length > 0) {\r\n            this.$updateAllButton.css(\"visibility\", \"inherit\");\r\n        } else {\r\n            this.$updateAllButton.css(\"visibility\", \"hidden\");\r\n        }\r\n\r\n        let commitButtons = this.$fileListDivs[2].find('.jo_synchro_commitButton');\r\n        if (commitButtons.length > 0) {\r\n            this.$commitAllButton.css(\"visibility\", \"inherit\");\r\n        } else {\r\n            this.$commitAllButton.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n\r\n}","import { Repository } from \"../../communication/Data.js\";\r\n\r\nexport class RepositoryTool {\r\n\r\n    static deserializeRepository(repo: Repository) {\r\n\r\n        if (repo.files != null && repo.files.startsWith('[')) {\r\n            repo.fileEntries = JSON.parse(repo.files);\r\n        } else {\r\n            repo.fileEntries = [];\r\n        }\r\n\r\n        repo.fileEntries.forEach(fe => fe.text = fe.text.replace(/\\r\\n/g, \"\\n\"));\r\n\r\n        if (!repo.history.endsWith(\"]\")) repo.history += \"]\";\r\n        repo.historyEntries = JSON.parse(repo.history);\r\n\r\n    }\r\n\r\n    static copyRepository(repo: Repository, withHistoryElements: boolean): Repository {\r\n\r\n        let crepo: Repository = Object.assign({}, repo);\r\n\r\n        if (repo.fileEntries != null) {\r\n            crepo.fileEntries = [];\r\n            for (let fe of repo.fileEntries) {\r\n                crepo.fileEntries.push(Object.assign({}, fe));\r\n            }\r\n        }\r\n\r\n        if (repo.historyEntries != null && withHistoryElements) {\r\n            crepo.historyEntries = [];\r\n            for (let he of repo.historyEntries) {\r\n                let che = Object.assign({}, he);\r\n\r\n                if (he.historyFiles != null) {\r\n                    che.historyFiles = [];\r\n                    for (let hfe of he.historyFiles) {\r\n                        che.historyFiles.push(Object.assign({}, hfe));\r\n                    }\r\n                }\r\n\r\n                crepo.historyEntries.push(che);\r\n            }\r\n        }\r\n\r\n        return crepo;\r\n\r\n    }\r\n\r\n    \r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { makeDiv, SelectItem, getSelectedObject, setSelectItems } from \"../../tools/HtmlTools.js\";\r\nimport { RepositoryUser, GetRepositoryRequest, GetRepositoryResponse, GetRepositoryUserListRequest, GetRepositoryUserListResponse, UserData } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\n\r\n\r\n\r\nexport class RepositoryCreateManager {\r\n\r\n    guiReady: boolean = false;\r\n\r\n    $mainHeading: JQuery<HTMLDivElement>;\r\n    $settingsDiv: JQuery<HTMLElement>;\r\n\r\n    $repoName: JQuery<HTMLInputElement>;\r\n    $repoDescription: JQuery<HTMLTextAreaElement>;\r\n    $repoPublishedTo: JQuery<HTMLSelectElement>;\r\n\r\n    $cancelButton: JQuery<HTMLElement>;\r\n    $createButton: JQuery<HTMLElement>;\r\n\r\n\r\n    publishedToItems: SelectItem[] = [];\r\n\r\n    workspace: Workspace;\r\n\r\n    constructor(public main: Main) {\r\n    }\r\n\r\n    initGUI() {\r\n        this.guiReady = true;\r\n        let that = this;\r\n        let $updateDiv = jQuery('#createRepo-div');\r\n\r\n        $updateDiv.append(this.$mainHeading = makeDiv('', \"createUpdateRepo-mainHeading\"));\r\n\r\n        $updateDiv.append(this.$settingsDiv = makeDiv('', \"createUpdateRepo-settingsDiv\"));\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Name des Repositorys:</div>'));\r\n        this.$settingsDiv.append(this.$repoName = jQuery('<input type=\"text\" class=\"createUpdateRepo-inputcolumn\"></input>'));\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Beschreibung:</div>'));\r\n        this.$settingsDiv.append(this.$repoDescription = jQuery('<textarea class=\"createUpdateRepo-inputcolumn\" style=\"min-height: 4em\"></textarea>'));\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Veröffentlicht für:</div>'));\r\n        this.$settingsDiv.append(this.$repoPublishedTo = jQuery('<select class=\"createUpdateRepo-inputcolumn\"></select>'));\r\n\r\n        let $buttonDiv = makeDiv(\"createRepo-buttonDiv\");\r\n\r\n        $buttonDiv.append(this.$createButton = makeDiv(\"\", \"jo_synchro_button\", \"Repository erstellen\", { \"background-color\": \"var(--createButtonBackground)\", \"color\": \"var(--createButtonColor)\" }));\r\n        this.$createButton.on(\"click\", () => { that.createButtonClicked() })\r\n\r\n        $buttonDiv.append(this.$cancelButton = makeDiv(\"\", \"jo_synchro_button\", \"Abbrechen\", { \"background-color\": \"var(--cancelButtonBackground)\", \"color\": \"var(--cancelButtonColor)\" }));\r\n        this.$cancelButton.on(\"click\", () => { that.cancelButtonClicked() })\r\n\r\n        $updateDiv.append($buttonDiv);\r\n\r\n\r\n    }\r\n\r\n    show(workspace: Workspace) {\r\n\r\n        this.workspace = workspace;\r\n\r\n        if (!this.guiReady) {\r\n            this.initGUI();\r\n        }\r\n\r\n        let user = this.main.user;\r\n        let isStudent = !(user.is_admin || user.is_schooladmin || user.is_teacher);\r\n\r\n        this.publishedToItems =\r\n            [\r\n                { value: \"0\", object: 0, caption: \"Keine Veröffentlichung (privates Repository)\" },\r\n                { value: \"1\", object: 1, caption: isStudent ? \"Veröffentlicht für alle Schüler/innen der Klasse\" : \"Veröffentlicht für alle Schüler/innen der unterrichteten Klassen\" },\r\n                { value: \"2\", object: 2, caption: \"Veröffentlicht für alle Schüler/innen der Schule\" },\r\n            ];\r\n        setSelectItems(this.$repoPublishedTo, this.publishedToItems, \"0\");\r\n\r\n\r\n        let $synchroDiv = jQuery('#createRepo-div');\r\n        $synchroDiv.css('visibility', 'visible');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'hidden');\r\n\r\n\r\n        this.initCreateMode(workspace);\r\n\r\n        let that = this;\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.hide();\r\n        });\r\n\r\n    }\r\n\r\n    initCreateMode(workspace: Workspace) {\r\n        let user = this.main.user;\r\n\r\n        let userInfo: RepositoryUser = {\r\n            firstName: user.rufname,\r\n            lastName: user.familienname,\r\n            username: user.username,\r\n            user_id: user.id,\r\n            canWrite: true,\r\n            klasse: \"\"\r\n        }\r\n\r\n        this.$mainHeading.text(`Repository anlegen und mit Workspace \"${workspace.name}\" verknüpfen:`);\r\n        this.$createButton.show();\r\n        this.$repoName.val(workspace.name);\r\n    }\r\n\r\n    hide() {\r\n        let $synchroDiv = jQuery('#createRepo-div');\r\n        $synchroDiv.css('visibility', 'hidden');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'visible');\r\n    }\r\n\r\n    createButtonClicked() {\r\n\r\n        let publishedTo: number = getSelectedObject(this.$repoPublishedTo);\r\n        let repoName: string = <string>this.$repoName.val();\r\n        let repoDescription: string = <string>this.$repoDescription.val();\r\n\r\n        this.main.networkManager.sendCreateRepository(this.workspace, publishedTo, repoName, repoDescription, (error: string, repository_id?: number) => {\r\n            if (error == null) {\r\n                let projectExplorer = this.main.projectExplorer;\r\n                let element = projectExplorer.workspaceListPanel.findElement(this.workspace);\r\n                projectExplorer.workspaceListPanel.setElementClass(element, \"repository\");\r\n                this.workspace.renderSynchronizeButton(element);\r\n                projectExplorer.showRepositoryButtonIfNeeded(this.workspace);\r\n                window.history.back(); // close modal window\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    cancelButtonClicked() {\r\n        window.history.back(); // close modal window\r\n    }\r\n\r\n\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { makeDiv, SelectItem, setSelectItems, getSelectedObject, openContextMenu, copyTextToClipboard } from \"../../tools/HtmlTools.js\";\r\nimport { RepositoryUser, GetRepositoryRequest, GetRepositoryResponse, GetRepositoryUserListRequest, GetRepositoryUserListResponse, UserData, GetRepositoryListRequest, GetRepositoryListResponse, RepositoryInfo, UpdateRepositoryRequest, UpdateRepositoryResponse, RepositoryUserWriteAccessData, UpdateRepositoryUserWriteAccessRequest, UpdateRepositoryUserWriteAccessResponse, DeleteRepositoryRequest } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\n\r\nexport class RepositorySettingsManager {\r\n\r\n    guiReady: boolean = false;\r\n\r\n    $mainHeading: JQuery<HTMLDivElement>;\r\n\r\n    $settingsDiv: JQuery<HTMLElement>;\r\n    $repoName: JQuery<HTMLInputElement>;\r\n    $repoDescription: JQuery<HTMLTextAreaElement>;\r\n    $repoPublishedTo: JQuery<HTMLSelectElement>;\r\n    $repoOwner: JQuery<HTMLSelectElement>;\r\n\r\n    $repoListDiv: JQuery<HTMLElement>;\r\n\r\n    $userlistDiv: JQuery<HTMLElement>;\r\n\r\n    $exitButton: JQuery<HTMLElement>;\r\n    $saveButton: JQuery<HTMLElement>;\r\n    $deleteButton: JQuery<HTMLElement>;\r\n\r\n    $settingsSecretRead: JQuery<HTMLElement>;\r\n    $settingsSecretWrite: JQuery<HTMLElement>;\r\n\r\n    publishedToItems: SelectItem[] = [];\r\n\r\n    repositoryOwnerItems: SelectItem[] = [];\r\n\r\n    users: RepositoryUser[] = [];\r\n\r\n    workspace: Workspace;\r\n    repositoryInfo: RepositoryInfo;\r\n\r\n    constructor(public main: Main) {\r\n    }\r\n\r\n    initGUI() {\r\n        this.guiReady = true;\r\n        let that = this;\r\n        let $updateDiv = jQuery('#updateRepo-div');\r\n\r\n        $updateDiv.append(this.$mainHeading = makeDiv('updateRepo-mainHeading', \"createUpdateRepo-mainHeading\", \"\"));\r\n        this.$mainHeading.append(makeDiv(\"\", \"\", \"Repositories verwalten\"));\r\n        this.$mainHeading.append(this.$exitButton = makeDiv(\"\", \"jo_synchro_button\", \"Zurück zum Programmieren\", { \"background-color\": \"var(--speedcontrol-grip)\", \"color\": \"var(--fontColorLight)\", \"font-size\": \"10pt\" }));\r\n        this.$exitButton.on(\"click\", () => { that.exitButtonClicked() })\r\n\r\n\r\n        let $divBelow = makeDiv(\"updateRepo-divBelow\");\r\n        $updateDiv.append($divBelow);\r\n\r\n        let $divLeft = makeDiv(\"updateRepo-divLeft\");\r\n        $divBelow.append($divLeft);\r\n\r\n        $divLeft.append(makeDiv('', 'updateRepo-minorHeading', 'Repositories:'));\r\n\r\n        this.$repoListDiv = makeDiv(\"updateRepo-repoListDiv\");\r\n        $divLeft.append(this.$repoListDiv);\r\n\r\n        let $rightDiv = makeDiv(\"updateRepo-divRight\");\r\n        $divBelow.append($rightDiv);\r\n\r\n        this.$settingsDiv = makeDiv(\"\", \"createUpdateRepo-settingsDiv\");\r\n        $rightDiv.append(this.$settingsDiv);\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Name des Repositorys:</div>'));\r\n        this.$settingsDiv.append(this.$repoName = jQuery('<input type=\"text\" class=\"createUpdateRepo-inputcolumn\"></input>'));\r\n        this.$repoName.on(\"input\", () => { that.enableSaveButton() });\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Beschreibung:</div>'));\r\n        this.$settingsDiv.append(this.$repoDescription = jQuery('<textarea class=\"createUpdateRepo-inputcolumn\" style=\"min-height: 4em\"></textarea>'));\r\n        this.$repoDescription.on(\"input\", () => { that.enableSaveButton() });\r\n\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Veröffentlicht für:</div>'));\r\n        this.$settingsDiv.append(this.$repoPublishedTo = jQuery('<select class=\"createUpdateRepo-inputcolumn\"></select>'));\r\n        this.$repoPublishedTo.on(\"change\", () => { that.enableSaveButton() });\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Eigentümer:</div>'));\r\n        this.$settingsDiv.append(this.$repoOwner = jQuery('<select class=\"createUpdateRepo-inputcolumn\"></select>'));\r\n        this.$repoOwner.on(\"change\", () => { that.enableSaveButton() });\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Code zum lesenden Zugriff aufs Repository:</div>'));\r\n        let $setSecrDivRead = jQuery('<div class=\"createUpdateRepo-settingsSecret\"></div>');\r\n        this.$settingsDiv.append($setSecrDivRead);\r\n        this.$settingsSecretRead = jQuery('<div class=\"createUpdateRepo-settingsSecretSecret\">---</div>')\r\n        $setSecrDivRead.append(this.$settingsSecretRead);\r\n\r\n        let $setSecrReadCopyButton = jQuery('<button class=\"jo_button jo_copy_secret_button jo_active\">Kopieren</button>');\r\n        $setSecrDivRead.append($setSecrReadCopyButton);\r\n        $setSecrReadCopyButton.on(\"pointerdown\", () => {copyTextToClipboard(this.$settingsSecretRead.text())})\r\n\r\n        let $setSecrReadButton = jQuery('<button class=\"jo_button jo_set_secret_button jo_active\">Ändern</button>');\r\n        $setSecrDivRead.append($setSecrReadButton);\r\n        $setSecrReadButton.on(\"pointerdown\", () => {that.setSecret(true, false)})\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Code zum schreibenden Zugriff aufs Repository:</div>'));\r\n        let $setSecrDivWrite = jQuery('<div class=\"createUpdateRepo-settingsSecret\"></div>');\r\n        this.$settingsDiv.append($setSecrDivWrite);\r\n        this.$settingsSecretWrite = jQuery('<div class=\"createUpdateRepo-settingsSecretSecret\">---</div>')\r\n        $setSecrDivWrite.append(this.$settingsSecretWrite);\r\n\r\n        let $setSecrWriteCopyButton = jQuery('<button class=\"jo_button jo_copy_secret_button jo_active\">Kopieren</button>');\r\n        $setSecrDivWrite.append($setSecrWriteCopyButton);\r\n        $setSecrWriteCopyButton.on(\"pointerdown\", () => {copyTextToClipboard(this.$settingsSecretWrite.text())})\r\n\r\n        let $setSecrWriteButton = jQuery('<button class=\"jo_button jo_set_secret_button jo_active\">Ändern</button>');\r\n        $setSecrDivWrite.append($setSecrWriteButton);\r\n        $setSecrWriteButton.on(\"pointerdown\", () => {that.setSecret(false, true)})\r\n\r\n        $rightDiv.append(this.$userlistDiv = makeDiv(\"updateRepo-userlistDiv\"));\r\n\r\n        this.$userlistDiv.append(makeDiv(null, \"updateRepo-userlistheading\", \"Benutzer, die das Repository nutzen\", { \"grid-column\": 1 }))\r\n        this.$userlistDiv.append(makeDiv(null, \"updateRepo-userlistheading\", \"Schreibberechtigung\", { \"grid-column\": 2 }))\r\n\r\n        let $buttonDiv = makeDiv(\"updateRepo-buttonDiv\");\r\n\r\n        $buttonDiv.append(this.$saveButton = makeDiv(\"\", \"jo_synchro_button\", \"Änderungen speichern\", { \"background-color\": \"var(--updateButtonBackground)\", \"color\": \"var(--updateButtonColor)\" }));\r\n        this.$saveButton.on(\"click\", () => { that.saveButtonClicked() })\r\n        this.$saveButton.hide();\r\n\r\n        $rightDiv.append($buttonDiv);\r\n\r\n    }\r\n\r\n    setSecret(read: boolean, write: boolean){\r\n\r\n        this.main.networkManager.sendSetSecret(this.repositoryInfo.id, read, write, (response) => {\r\n            let praefix = this.repositoryInfo.id + \"T\";\r\n            this.$settingsSecretRead.text(praefix + response.secret_read);\r\n            this.$settingsSecretWrite.text(praefix + response.secret_write);\r\n        })\r\n\r\n    }\r\n\r\n    enableSaveButton() {\r\n        this.$saveButton.show();\r\n    }\r\n\r\n    show(repository_id: number) {\r\n\r\n        if (!this.guiReady) {\r\n            this.initGUI();\r\n        }\r\n\r\n        let $synchroDiv = jQuery('#updateRepo-div');\r\n        $synchroDiv.css('visibility', 'visible');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'hidden');\r\n\r\n        let user = this.main.user;\r\n        let is_student = !(user.is_teacher || user.is_admin || user.is_schooladmin);\r\n\r\n        this.publishedToItems = [\r\n            { value: 0, object: 0, caption: \"Keine Veröffentlichung (privates Repository)\" },\r\n            { value: 1, object: 1, caption: is_student ? \"Veröffentlicht für alle Schüler/innen der Klasse\" : \"Veröffentlicht für alle Schüler/innen der unterrichteten Klassen\" },\r\n            { value: 2, object: 2, caption: \"Veröffentlicht für alle Schüler/innen der Schule\" },\r\n        ];\r\n\r\n        setSelectItems(this.$repoPublishedTo, this.publishedToItems, 0);\r\n\r\n        this.$saveButton.show();\r\n\r\n        this.showRepositoryList();\r\n\r\n        let that = this;\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.hide();\r\n        });\r\n\r\n    }\r\n\r\n    deleteRepository(repInfo: RepositoryInfo) {\r\n\r\n        let that = this;\r\n        let request: DeleteRepositoryRequest = { repository_id: repInfo.id };\r\n        ajax('deleteRepository', request, () => {\r\n            that.showRepositoryList();\r\n            let workspaces = that.main.workspaceList.filter((ws) => {return ws.repository_id == repInfo.id});\r\n            for(let ws of workspaces){\r\n                ws.repository_id = null;\r\n                ws.panelElement.iconClass = \"workspace\";\r\n                ws.panelElement.$htmlFirstLine.removeClass(\"jo_repository\");\r\n                ws.panelElement.$htmlFirstLine.addClass(\"jo_workspace\");\r\n                ws.panelElement.$htmlFirstLine.find(\".jo_additionalButtonRepository\").empty();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    showRepositoryList() {\r\n        this.emptyRepositoryInfo();\r\n        let grlq: GetRepositoryListRequest = {\r\n            onlyOwnRepositories: true\r\n        }\r\n\r\n        this.$repoListDiv.empty();\r\n        let that = this;\r\n        ajax('getRepositoryList', grlq, (response: GetRepositoryListResponse) => {\r\n\r\n            let $firstDiv: JQuery<HTMLDivElement>;\r\n            let firstRepInfo: RepositoryInfo;\r\n\r\n            if(response.repositories.length == 0){\r\n                alert('Sie haben noch keine Repositories, und\\nkönnen daher keine verwalten.\\nTipp: Ein Repository können Sie durch Rechtsklick auf einen Workspace anlegen.');\r\n                that.exitButtonClicked();\r\n                return;\r\n            }\r\n\r\n            response.repositories.forEach(repInfo => {\r\n                let $div = makeDiv('', 'updateRepo-repoListItem');\r\n                let $namediv = makeDiv('', '', repInfo.name);\r\n                let $deleteDiv = jQuery('<div class=\"img_delete jo_button jo_active\" title=\"Repository löschen...\"></div>');\r\n                $div.append($namediv, $deleteDiv);\r\n                this.$repoListDiv.append($div);\r\n                $div.on('click', (e) => {\r\n                    that.selectRepository($div, repInfo);\r\n                })\r\n                $div.data('repoInfo', repInfo);\r\n                if (firstRepInfo == null) {\r\n                    firstRepInfo = repInfo;\r\n                    $firstDiv = $div;\r\n                }\r\n\r\n                $deleteDiv.on(\"click\", (ev) => {\r\n                    ev.preventDefault();\r\n                    openContextMenu([{\r\n                        caption: \"Abbrechen\",\r\n                        callback: () => { }\r\n                    }, {\r\n                        caption: \"Ich bin mir sicher: löschen!\",\r\n                        color: \"#ff6060\",\r\n                        callback: () => {\r\n                            that.deleteRepository(repInfo);\r\n                        }\r\n                    }], ev.pageX + 2, ev.pageY + 2);\r\n                    ev.stopPropagation();\r\n                });\r\n            });\r\n\r\n            if ($firstDiv != null) {\r\n                this.selectRepository($firstDiv, firstRepInfo);\r\n            }\r\n\r\n        }, (message) => {\r\n            console.log(message);\r\n            alert('Sie haben noch keine Repositories, und\\nkönnen daher keine verwalten.\\nTipp: Ein Repository können Sie durch Rechtsklick auf einen Workspace anlegen.');\r\n            that.exitButtonClicked();\r\n            return;\r\n        });\r\n    }\r\n\r\n    selectRepository($repoDiv: JQuery<HTMLDivElement>, repInfo: RepositoryInfo) {\r\n        this.repositoryInfo = repInfo;\r\n        \r\n        this.emptyRepositoryInfo();\r\n        if (this.$saveButton.is(\":visible\")) {\r\n            let selectedItem = this.$repoListDiv.find('.active').first();\r\n            let repoData: RepositoryInfo = <any>selectedItem.data('repoInfo');\r\n            if (repoData) {\r\n                alert(`Deine Änderungen am Repository \"${repoData.name}\" wurden nicht gespeichert.`);\r\n            }\r\n        }\r\n\r\n        this.$saveButton.hide();\r\n        this.$repoListDiv.find('.updateRepo-repoListItem').removeClass('active');\r\n        $repoDiv.addClass('active');\r\n        this.$repoName.val(repInfo.name);\r\n        this.$repoDescription.val(repInfo.description);\r\n        this.$repoPublishedTo.val(repInfo.published_to);\r\n        this.$settingsSecretRead.text(repInfo.secret_read == null ? \"--------\" : repInfo.id + \"T\" + repInfo.secret_read);\r\n        this.$settingsSecretWrite.text(repInfo.secret_write == null ? \"--------\" : repInfo.id + \"T\" + repInfo.secret_write);\r\n\r\n        this.$repoOwner.empty();\r\n        this.$userlistDiv.children().not('.updateRepo-userlistheading').remove();\r\n\r\n        let req: GetRepositoryUserListRequest = { repository_id: repInfo.id };\r\n        let that = this;\r\n\r\n        ajax('getRepositoryUserList', req, (response: GetRepositoryUserListResponse) => {\r\n\r\n            response.repositoryUserList.forEach(userData => {\r\n\r\n                let $userDiv = makeDiv(\"\", \"updateRepo-userDiv\", `${userData.firstName} ${userData.lastName} (${userData.username})`, { 'grid-column': 1 });\r\n\r\n                let $canWriteDiv = makeDiv(\"\", \"canWriteDiv\", \"\", { 'grid-column': 2 });\r\n                let $canWriteCheckBox = jQuery('<input type=\"checkbox\">');\r\n                $canWriteDiv.append($canWriteCheckBox);\r\n\r\n                //@ts-ignore\r\n                $canWriteCheckBox.attr('checked', userData.canWrite);\r\n                $canWriteCheckBox.data('user', userData);\r\n                $canWriteCheckBox.on(\"change\", () => { that.enableSaveButton() });\r\n\r\n                that.$userlistDiv.append($userDiv, $canWriteDiv);\r\n            });\r\n\r\n            that.$repoOwner.empty();\r\n            let selectedItems = response.repositoryUserList.map(userData => {\r\n                let se: SelectItem = {\r\n                    caption: `${userData.firstName} ${userData.lastName} (${userData.username})`,\r\n                    object: userData,\r\n                    value: userData.user_id + \"\"\r\n                }\r\n                return se;\r\n            });\r\n\r\n            if(!response.repositoryUserList.some(user => user.user_id == repInfo.owner_id)){\r\n                selectedItems.push({\r\n                    caption: `${repInfo.owner_name} (${repInfo.owner_username})`,\r\n                    object: {\r\n                        user_id: repInfo.owner_id,\r\n                        username: repInfo.owner_username,\r\n                        firstName: \"\",\r\n                        lastName: \"\",\r\n                        klasse: \"\",\r\n                        canWrite: true\r\n                    },\r\n                    value: repInfo.owner_id + \"\"\r\n                })\r\n            }\r\n\r\n            setSelectItems(that.$repoOwner, selectedItems, repInfo.owner_id + \"\")\r\n\r\n        });\r\n\r\n    }\r\n\r\n    emptyRepositoryInfo() {\r\n        this.$repoOwner.empty();\r\n        this.$repoName.val('');\r\n        this.$repoDescription.val('');\r\n        this.$userlistDiv.find('.updateRepo-userDiv').remove();\r\n        this.$userlistDiv.find('.canWriteDiv').remove();\r\n    }\r\n\r\n    hide() {\r\n        let $synchroDiv = jQuery('#updateRepo-div');\r\n        $synchroDiv.css('visibility', 'hidden');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'visible');\r\n    }\r\n\r\n    saveButtonClicked() {\r\n\r\n        let that = this;\r\n\r\n        let selectedItem = this.$repoListDiv.find('.active').first();\r\n        let repoData: RepositoryInfo = <any>selectedItem.data('repoInfo');\r\n\r\n        let name: string = <string>this.$repoName.val();\r\n        let owner: RepositoryUser = getSelectedObject(this.$repoOwner);\r\n        let published_to: number = getSelectedObject(this.$repoPublishedTo);\r\n\r\n        let updateRepositoryRequest: UpdateRepositoryRequest = {\r\n            owner_id: owner.user_id,\r\n            description: <string>this.$repoDescription.val(),\r\n            published_to: published_to,\r\n            repository_id: repoData.id,\r\n            name: name\r\n        };\r\n\r\n\r\n        // update user write access:\r\n\r\n        let writeAccessList: RepositoryUserWriteAccessData[] = [];\r\n\r\n        that.$userlistDiv.find('input').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            let user: RepositoryUser = <any>$element.data('user');\r\n            writeAccessList.push({\r\n                has_write_access: <any>jQuery(element).is(':checked'),\r\n                user_id: user.user_id\r\n            });\r\n        });\r\n\r\n        let request: UpdateRepositoryUserWriteAccessRequest = {\r\n            repository_id: repoData.id,\r\n            writeAccessList: writeAccessList\r\n        }\r\n\r\n        if (repoData.owner_id == owner.user_id || \r\n              confirm(\"Soll die Eigentümerschaft über das Repository \" + repoData.name + \" wirklich an \" + owner.firstName + \" \" + owner.lastName + \" übertragen werden?\")) {\r\n            ajax('updateRepositoryUserWriteAccess', request, (response: UpdateRepositoryUserWriteAccessResponse) => {\r\n\r\n\r\n                ajax(\"updateRepository\", updateRepositoryRequest, (response: UpdateRepositoryResponse) => {\r\n\r\n                    repoData.name = name;\r\n                    repoData.owner_id = owner.user_id;\r\n                    repoData.owner_name = owner.firstName + \" \" + owner.lastName;\r\n                    repoData.owner_username = owner.username;\r\n                    repoData.published_to = published_to;\r\n                    repoData.description = updateRepositoryRequest.description;\r\n\r\n                    alert('Die Änderungen wurden erfolgreich gespeichert.')\r\n                    that.$saveButton.hide();\r\n                    that.showRepositoryList();\r\n\r\n\r\n                }, (errorMessage: string) => {\r\n                    alert(\"Fehler: \" + errorMessage);\r\n                    that.exitButtonClicked();\r\n                });\r\n\r\n            }, (errorMessage: string) => {\r\n                alert(\"Fehler: \" + errorMessage);\r\n                that.exitButtonClicked();\r\n            }\r\n            );\r\n        } else {\r\n            alert(\"Der Speichervorgang wurde nicht durchgeführt.\");\r\n        }\r\n    }\r\n\r\n\r\n    exitButtonClicked() {\r\n        window.history.back();\r\n    }\r\n\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { makeDiv, SelectItem, setSelectItems, getSelectedObject } from \"../../tools/HtmlTools.js\";\r\nimport { RepositoryUser, GetRepositoryRequest, GetRepositoryResponse, GetRepositoryUserListRequest, GetRepositoryUserListResponse, UserData, GetRepositoryListRequest, GetRepositoryListResponse, RepositoryInfo, UpdateRepositoryRequest, UpdateRepositoryResponse, AttachWorkspaceToRepositoryRequest, WorkspaceData, AttachWorkspaceToRepositoryResponse } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { TeachersWithClassesMI } from \"../../administration/TeachersWithClasses.js\";\r\nimport { ProjectExplorer } from \"../../main/gui/ProjectExplorer.js\";\r\n\r\n\r\nexport class RepositoryCheckoutManager {\r\n\r\n    guiReady: boolean = false;\r\n\r\n    $mainHeading: JQuery<HTMLDivElement>;\r\n\r\n    $repoListDiv: JQuery<HTMLElement>;\r\n\r\n    $exitButton: JQuery<HTMLElement>;\r\n    $checkoutButton: JQuery<HTMLElement>;\r\n\r\n    $workspaceDropdown: JQuery<HTMLSelectElement>;\r\n    $filterButtonDiv: JQuery<HTMLElement>;\r\n    $filterInput: JQuery<HTMLInputElement>;\r\n\r\n    filterbuttonOptions = [\"alle\", \"private\", \"für die Klasse freigegebene\", \"für die Schule freigegebene\"];\r\n\r\n    workspace: Workspace;\r\n\r\n    repositories: RepositoryInfo[] = [];\r\n    $codeInput: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: Main) {\r\n    }\r\n\r\n    initGUI() {\r\n        this.guiReady = true;\r\n        let that = this;\r\n        let $checkoutDiv = jQuery('#checkoutRepo-div');\r\n\r\n        $checkoutDiv.append(this.$mainHeading = makeDiv('checkoutRepo-mainHeading', \"createUpdateRepo-mainHeading\", \"\"));\r\n        this.$mainHeading.append(makeDiv(\"\", \"\", \"Checkout Repository - Workspace mit Repository verbinden\"));\r\n        this.$mainHeading.append(this.$exitButton = makeDiv(\"\", \"jo_synchro_button\", \"Zurück zum Programmieren\", { \"background-color\": \"var(--speedcontrol-grip)\", \"color\": \"var(--fontColorLight)\", \"font-size\": \"10pt\" }));\r\n        this.$exitButton.on(\"click\", () => { that.exitButtonClicked() })\r\n\r\n\r\n        let $divBelow = makeDiv(\"checkoutRepo-divBelow\");\r\n        $checkoutDiv.append($divBelow);\r\n\r\n        let $chooseWorkspaceDiv = makeDiv(\"\", \"checkoutRepo-chooseDiv\");\r\n        $divBelow.append($chooseWorkspaceDiv);\r\n        $chooseWorkspaceDiv.append(makeDiv(\"\", \"checkoutRepo-minorHeading\", \"Diesen Worspace mit dem Repository verbinden:\"));\r\n        this.$workspaceDropdown = jQuery('<select></select>');\r\n        $chooseWorkspaceDiv.append(this.$workspaceDropdown);\r\n\r\n        let $codeDiv = makeDiv(\"\", \"checkoutRepo-chooseDiv\");\r\n        $divBelow.append($codeDiv);\r\n        $codeDiv.append(makeDiv(\"\", \"checkoutRepo-minorHeading\", \"Alternativ zur Auswahl unten Eingabe eines Repository-Codes:\"));\r\n        this.$codeInput = jQuery('<input type=\"text\"></input>');\r\n        $codeDiv.append(this.$codeInput);\r\n\r\n        this.$codeInput.on(\"input\", (e) => {\r\n            let text = that.$codeInput.val();\r\n            if(text == ''){\r\n                this.$repoListDiv.show();\r\n            } else {\r\n                this.$repoListDiv.hide();\r\n            }\r\n        });\r\n\r\n        let $publishedToFilterDiv = makeDiv(\"\", \"checkoutRepo-chooseDiv\");\r\n        $divBelow.append($publishedToFilterDiv);\r\n        $publishedToFilterDiv.append(makeDiv(\"\", \"checkoutRepo-minorHeading\", \"Diese Repositories anzeigen:\"));\r\n        this.$filterButtonDiv = jQuery('<fieldset></fieldset>');\r\n        $publishedToFilterDiv.append(this.$filterButtonDiv);\r\n\r\n        this.filterbuttonOptions.forEach((value, index) => {\r\n            let $radioButton = jQuery(`<input type=\"radio\" id=\"b${index}\" name=\"publishedFilter\" value=\"${index}\" ${index == 0 ? \"checked\" : \"\"}>`);\r\n            $radioButton.data('value', index);\r\n            $radioButton.on(\"change\", (e) => {\r\n                that.showRepositories();\r\n            })\r\n            this.$filterButtonDiv.append($radioButton);\r\n            this.$filterButtonDiv.append(jQuery(`<label for=\"b${index}\">${value}</label>`));\r\n        })\r\n\r\n        let $inputFilterDiv = makeDiv(\"\", \"checkoutRepo-chooseDiv\");\r\n        $divBelow.append($inputFilterDiv);\r\n        $inputFilterDiv.append(makeDiv(\"\", \"checkoutRepo-minorHeading\", \"Filter/Suche:\"));\r\n        this.$filterInput = jQuery('<input type=\"text\"></input>');\r\n        $inputFilterDiv.append(this.$filterInput);\r\n\r\n        this.$filterInput.on(\"input\", (e) => {\r\n            that.showRepositories();\r\n        });\r\n\r\n        $divBelow.append(makeDiv('', 'updateRepo-minorHeading', 'Repositories:', {'margin-bottom': '10px', 'margin-top': '20px'}));\r\n\r\n        this.$repoListDiv = makeDiv('checkoutRepo-repoListDiv', 'jo_scrollable');\r\n        $divBelow.append(this.$repoListDiv);\r\n\r\n        let $buttonDiv = makeDiv(\"updateRepo-buttonDiv\");\r\n\r\n        $buttonDiv.append(this.$checkoutButton = makeDiv(\"\", \"jo_synchro_button\", \"Checkout\", { \"background-color\": \"var(--updateButtonBackground)\", \"color\": \"var(--updateButtonColor)\" }));\r\n        this.$checkoutButton.on(\"click\", () => { that.checkoutButtonClicked() })\r\n\r\n        $divBelow.append($buttonDiv);\r\n\r\n    }\r\n\r\n    show(workspace: Workspace) {\r\n\r\n        if (!this.guiReady) {\r\n            this.initGUI();\r\n        }\r\n\r\n        let $checkoutDiv = jQuery('#checkoutRepo-div');\r\n        $checkoutDiv.css('visibility', 'visible');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'hidden');\r\n\r\n        let user = this.main.user;\r\n\r\n        let grlq: GetRepositoryListRequest = {\r\n            onlyOwnRepositories: false\r\n        }\r\n\r\n        this.$repoListDiv.empty();\r\n        let that = this;\r\n        ajax('getRepositoryList', grlq, (response: GetRepositoryListResponse) => {\r\n\r\n            this.repositories = response.repositories;\r\n\r\n            this.showRepositories();\r\n\r\n        });\r\n\r\n        // Init Workspace-Dropdown\r\n        this.$workspaceDropdown.empty();\r\n        setSelectItems(this.$workspaceDropdown, [{\r\n            caption: \"Neuen Workspace erstellen\",\r\n            object: null,\r\n            value: -1\r\n        }].concat(this.main.workspaceList.filter(ws => ws.repository_id == null && !ws.isFolder).map(ws => {\r\n            return {\r\n                caption: ws.name,\r\n                object: ws,\r\n                value: ws.id\r\n            }\r\n        }))\r\n        , -1);\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.hide();\r\n        });\r\n\r\n    }\r\n\r\n\r\n    showRepositories(){\r\n\r\n        let that = this;\r\n\r\n        this.$repoListDiv.find('.checkoutRepo-repoListItem').remove();\r\n\r\n        let published_to = this.$filterButtonDiv.find('input:checked').data('value') - 1;\r\n\r\n        let filteredRepositories: RepositoryInfo[] = published_to < 0 ? this.repositories :\r\n            this.repositories.filter(repoInfo => repoInfo.published_to == published_to);\r\n\r\n        let filterSearch: string = <string>this.$filterInput.val();\r\n        filterSearch = filterSearch.toLocaleLowerCase();\r\n\r\n        if(filterSearch != \"\"){\r\n            filteredRepositories = filteredRepositories.filter(\r\n                repInfo => [repInfo.owner_username , repInfo.owner_name , repInfo.name , repInfo.description].join(\" \").toLocaleLowerCase().indexOf(filterSearch) >= 0\r\n            )\r\n        }\r\n\r\n        filteredRepositories.forEach(repInfo => {\r\n            let $div = makeDiv('', 'checkoutRepo-repoListItem');\r\n            let $divLeft = makeDiv('', 'checkoutRepo-repoListItemLeft');\r\n            $div.append($divLeft);\r\n\r\n            $divLeft.append(makeDiv('', 'checkoutRepo-repoListName', repInfo.name));\r\n            $divLeft.append(makeDiv('', 'checkoutRepo-repoListOwner', repInfo.owner_name + \" (\" + repInfo.owner_username + \")\"));\r\n\r\n            let $divRight = makeDiv('', 'checkoutRepo-repoListItemRight', repInfo.description);\r\n            $div.append($divRight);\r\n\r\n            this.$repoListDiv.append($div);\r\n            $div.data('repoInfo', repInfo);\r\n            $div.on(\"click\", () => {\r\n                that.selectRepository($div, repInfo);\r\n            })\r\n        });\r\n\r\n        this.selectFirstRepository();\r\n\r\n    }\r\n\r\n    selectRepository($repoDiv: JQuery<HTMLDivElement>, repInfo: RepositoryInfo) {\r\n        this.$repoListDiv.find('.checkoutRepo-repoListItem').removeClass('active');\r\n        if($repoDiv != null){\r\n            $repoDiv.addClass('active');\r\n        }\r\n    }\r\n\r\n    selectFirstRepository(){\r\n        this.$repoListDiv.find('.checkoutRepo-repoListItem').removeClass('active');\r\n        this.$repoListDiv.find('.checkoutRepo-repoListItem').first().addClass('active');\r\n    }\r\n\r\n    hide() {\r\n        let $synchroDiv = jQuery('#checkoutRepo-div');\r\n        $synchroDiv.css('visibility', 'hidden');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'visible');\r\n    }\r\n\r\n    checkoutButtonClicked() {\r\n\r\n        let repositoryId: number = -1;\r\n        let secret: string = null;\r\n\r\n        let combinedSecret = <string>this.$codeInput.val();\r\n        if(combinedSecret != \"\"){\r\n            let tIndex = combinedSecret.indexOf('T');\r\n            if(tIndex < 0){\r\n                alert(\"Der Code muss den Buchstaben T enthalten.\");\r\n                return;\r\n            }\r\n            let number = Number.parseInt(combinedSecret.substring(0, tIndex));\r\n            if(number >= 0){\r\n                repositoryId = number;\r\n                secret = combinedSecret.substring(tIndex + 1);\r\n            } else {\r\n                alert (\"Im Code muss vor dem T eine Zahl stehen.\");\r\n                return;\r\n            }\r\n        } else {\r\n            let selectedItem = this.$repoListDiv.find('.active').first();\r\n            let repoData: RepositoryInfo = <any>selectedItem.data('repoInfo');\r\n            repositoryId = repoData.id;\r\n        }\r\n\r\n        let workspace: Workspace = getSelectedObject(this.$workspaceDropdown);\r\n\r\n        let request: AttachWorkspaceToRepositoryRequest = {\r\n            repository_id: repositoryId,\r\n            createNewWorkspace: workspace == null,\r\n            workspace_id: workspace == null ? null : workspace.id,\r\n            secret: secret\r\n        }\r\n\r\n        let that = this;\r\n        ajax('attachWorkspaceToRepository', request, (response: AttachWorkspaceToRepositoryResponse) => {\r\n\r\n            if(response.message != null){\r\n                alert(response.message);\r\n                return;\r\n            }\r\n\r\n            if(workspace == null && response.new_workspace != null){\r\n\r\n                let newWorkspace = that.main.networkManager.createNewWorkspaceFromWorkspaceData(response.new_workspace);\r\n                that.main.projectExplorer.workspaceListPanel.sortElements();\r\n                setTimeout(() => {\r\n                    that.main.projectExplorer.setWorkspaceActive(newWorkspace, true);                    \r\n                }, 400);\r\n\r\n                alert('Der neue Workspace ' + response.new_workspace.name + \" wurde erfolgreich angelegt.\");\r\n\r\n            } else {\r\n\r\n                workspace.repository_id = repositoryId;\r\n                let explorer = that.main.projectExplorer;\r\n                explorer.workspaceListPanel.setElementClass(workspace.panelElement, \"repository\");\r\n                alert(`Der Workspace ${workspace.name} wurde erfolgreich mit dem Repository verknüpft.`);\r\n\r\n            }\r\n\r\n            window.history.back();\r\n\r\n        });\r\n\r\n        // let updateRepositoryRequest: UpdateRepositoryRequest = {\r\n        //     owner_id: owner.user_id,\r\n        //     description: <string>this.$repoDescription.val(),\r\n        //     published_to: published_to,\r\n        //     repository_id: repoData.id\r\n        // };\r\n\r\n        // ajax(\"updateRepository\", updateRepositoryRequest, (response: UpdateRepositoryResponse) => {\r\n\r\n        //     //TODO: update user write access..\r\n\r\n\r\n        // });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    exitButtonClicked() {\r\n        this.hide();\r\n    }\r\n\r\n\r\n}","import { Main } from \"./Main.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\n\r\n\r\njQuery(function () {\r\n\r\n    let main = new Main();\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': 'lib/monaco-editor/dev/vs' } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        main.initEditor();\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.bottomDiv.initGUI();\r\n        main.checkStartupComplete();\r\n\r\n        if(main.repositoryOn){\r\n            main.synchronizationManager = new SynchronizationManager(main);\r\n            main.synchronizationManager.initGUI();\r\n            main.repositoryCreateManager = new RepositoryCreateManager(main);\r\n            main.repositoryCreateManager.initGUI();\r\n            main.repositoryUpdateManager = new RepositorySettingsManager(main);\r\n            main.repositoryUpdateManager.initGUI();\r\n            main.repositoryCheckoutManager = new RepositoryCheckoutManager(main);\r\n            main.repositoryCheckoutManager.initGUI();\r\n\r\n        }\r\n        // main.loadWorkspace();\r\n\r\n        \r\n    });\r\n    \r\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n    PIXI.Loader\r\n    .shared.add(\"spritesheet\", \"assets/graphics/spritesheet.json\")\r\n    .add(\"steve\", \"assets/graphics/robot/minecraft_steve/scene.gltf\")\r\n    .load(() => { });\r\n    \r\n    main.initGUI();\r\n\r\n});"],"names":["PerformanceCollector","static","url","startTime","pe","performanceData","find","count","sumTime","push","dt","Math","round","performance","now","performanceDataCount","lastTimeSent","request","data","ajax","successCallback","errorCallback","startsWith","showNetworkBusy","time","$","type","async","JSON","stringify","contentType","success","response","registerPerformanceEntry","error","message","indexOf","console","log","jqXHR","statusText","status","busy","jQuery","show","hide","NotifierClient","constructor","main","networkManager","unsentMessages","this","connect","state","window","location","protocol","host","connection","WebSocket","onerror","onError","onclose","event","onClose","onmessage","onMessage","onopen","command","token","sendIntern","setTimeout","forcedUpdateEvery","counterTillForcedUpdate","disconnect","send","exception","parse","undefined","sendUpdates","CacheManager","fetchTemplateFromCache","databaseId","callback","that","cacheAvailable","getCache","cache","match","databaseIdToCacheIdentifier","then","value","arrayBuffer","buffer","Uint8Array","catch","saveTemplateToCache","templateDump","put","Response","self","caches","open","NetworkManager","$updateTimerDiv","sqlIdeURL","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","forcedUpdatesInARow","secondsTillNextUpdate","errorHappened","initializeTimer","attr","interval","clearInterval","setInterval","user","doForceUpdate","$rect","css","sendDataToServer","initializeNotifierClient","notifierClient","sendIfNothingIsDirty","sendBeacon","is_testuser","projectExplorer","writeEditorTextToFile","classDiagram","rightDiv","userSettings","settings","dirty","userDataDirty","serialize","sendUpdateUserSettings","wdList","fdList","ws","workspaceList","saved","getWorkspaceData","m","moduleStore","getModules","file","text","getProgramTextFromMonacoModel","getFileData","workspacesWithoutFiles","files","owner_id","workspacesOwnerId","userId","id","language","currentWorkspaceId","currentWorkspace","getModifiedWorkspaces","length","navigator","workspaces","updateWorkspaces","filesToForceUpdate","updateFiles","sendCreateWorkspace","w","random","entity","sendCreateFile","sendDuplicateWorkspace","workspace_id","workspace","sendDistributeWorkspace","klasse","student_ids","class_id","sendSetSecret","repositoryId","read","write","repository_id","newSecretRead","newSecretWrite","alert","sendCreateRepository","publish_to","repoName","repoDescription","name","description","forEach","is_copy_of_id","repository_file_version","has_write_permission_to_repository","sendDeleteWorkspaceOrFile","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","Map","fileIdsSended","wd","set","newWorkspaceNames","remoteWorkspace","filter","createNewWorkspaceFromWorkspaceData","get","idToRemoteFileDataMap","fd","idToModuleMap","module","fileId","remoteFileData","fileListPanel","removeElement","removeModule","model","setValue","lastSavedVersionId","getAlternativeVersionId","version","remoteFile","createFile","join","workspaceListPanel","sortElements","filesFromServer","fileIdToLocalModuleMap","withSort","createNewWorkspace","path","isFolder","remoteWorkspaceSettings","setAdditionalLibraries","libraries","split","panelElement","externalElement","iconClass","addElement","renderSynchronizeButton","fileData","ae","f","identical_to_repository_version","getNewModule","putModule","fetchDatabaseAndToken","code","fetchDatabase","database","errormessage","cacheManager","based_on_template_id","pako","inflate","fetchTemplate","template","xhrFields","responseType","addDatabaseStatement","version_before","statements","statements_before","new_version","rollbackDatabaseStatement","current_version","TokenType","LexerState","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordClass","keywordThis","keywordSuper","keywordNew","keywordInterface","keywordEnum","keywordVoid","keywordAbstract","keywordPublic","keywordProtected","keywordPrivate","keywordTransient","keywordStatic","keywordExtends","keywordImplements","keywordWhile","keywordDo","keywordFor","keywordSwitch","keywordCase","keywordDefault","keywordIf","keywordThen","keywordElse","keywordReturn","keywordBreak","keywordContinue","keywordNull","keywordFinal","keywordInstanceof","keywordPrint","keywordPrintln","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","doubleMinus","doublePlus","lower","greater","lowerOrEqual","greaterOrEqual","equal","notEqual","assignment","plusAssignment","minusAssignment","multiplicationAssignment","divisionAssignment","moduloAssignment","ampersand","and","or","not","ANDAssigment","XORAssigment","ORAssigment","shiftLeftAssigment","shiftRightAssigment","shiftRightUnsignedAssigment","OR","XOR","tilde","shiftLeft","shiftRight","shiftRightUnsigned","ternaryOperator","semicolon","colon","ellipsis","comma","backslash","at","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","linefeed","keywordList","EscapeSequenceList","ColorLexer","hexColorRegExp","rgbColorRegExp","rgbaColorRegExp","getColorInfo","s","m1","Number","parseInt","red","green","blue","alpha","m2","parseFloat","m3","ColorHelper","color","toString","c","predefinedColors","substr","Visibility","booleanPrimitiveTypeCopy","endChar","Lexer","colorLexer","spaceTokens","correspondingBracket","lex","input","replace","tokenList","errorList","bracketError","bracketStack","pos","line","column","nonSpaceLastTokenType","colorInformation","colorIndices","tokens","errors","currentChar","charAt","nextChar","mainState","bracketOpen","pop","bracketClosed","setBracketError","processColorIndices","colorIndex","colorToken","previousToken","getLastNonSpaceToken","tt","nextTokens","getNextNonSpaceTokens","compareTokenTypes","range","startLineNumber","position","startColumn","endLineNumber","endColumn","colorIdentifier","colorValue","tokenTypeList","i","tokenIndex","d","foundToken","checkClosingBracket","openBracket","next","char","specialCharToken","pushToken","lexMultilineComment","lexEndofLineComment","isDigit","lexNumber","lexShiftLeft","lexShiftRight","lexCharacterConstant","lexTripleQuoteStringConstant","lexStringConstant","lexSpace","lexAnnotation","lexIdentifierOrKeyword","lexShiftRightUnsigned","t","pushError","errorLevel","level","a","base","charCode","charCodeAt","posStart","posEnd","substring","escapeChar","parseStringLiteralEscapeCharacter","StringLines","restOfLine","trim","currentStringLine","lastLine","indent","map","hex","String","fromCodePoint","lastCharWasNewline","sign","firstChar","radix","exponent","hasExponential","posExponentStart","exponentString","pow","isSpace","Type","onlyFirstPass","usagePositions","documentation","toTokenType","clearUsagePositions","PrimitiveType","initialValue","equals","getResultType","operation","secondOperandType","opTypeMap","operationTable","canCastTo","canCastToMap","getCastInformation","allowsNull","valueToString","Attribute","updateValue","isStatic","visibility","isFinal","parameterlist","returnType","invokeOrAST","isAbstract","isConstructor","super","isVirtual","reserveStackForLocalVariables","genericTypeMap","invoke","program","method","signature","p","parameters","hasGenericTypes","implements","myParameter","mParameter","hasEllipsis","isEllipsis","getParameterType","index","getParameter","getReturnType","getParameterCount","getParameterList","getSignatureWithReturnParameter","getCompletionLabel","label","getTypeIdentifier","arrayOfType","getCompletionSnippet","leftBracketAlreadyThere","snippet","isVoidReturnDelta","debugOutput","compute","firstOperand","secondOperand","castTo","computeId","tv","RuntimeObject","klass","intrinsicData","class","initializeAttributeValues","getValue","attributeIndex","av","attributes","Array","numberOfAttributesIncludingBaseClass","fill","att","v","object","baseClass","LabelManager","maxLabelIndex","labeledNodes","labelMap","jumpNodesToResolve","switchStatements","correctPositionsAfterInsert","insertPosition","insertedLength","ln","registerSwitchStatement","switchStatement","insertJumpNode","codeGenerator","labelIndex","statementList","node","stepFinished","pushStatements","registerJumpNode","markJumpDestination","offset","labeledNode","removeNode","n","newNode","registerJumpDestination","ntr","resolveNodes","noOp","jn","dest","destination","sw","dl","destinationLabels","destinationMap","constant","defaultDestination","typeVariables","isTypeVariable","typeVariablesReady","firstPassImplements","postConstructorCallbacks","methods","methodMap","attributeMap","public","staticClass","StaticClass","attributeInitializationProgram","labelManager","setupAttributeIndicesRecursive","numberOfAttributesInBaseClasses","getNonGenericClass","k","isGenericVariantFrom","getNonGenericIdentifier","implementsInterface","i1","getThisOrExtendedInterface","getImplementedInterface","i2","registerUsedSystemClasses","usedSystemClasses","isSystemModule","cd","getCompositeData","interf","cdMap","Interface","cda","multiples","ArrayType","getPostConstructorCallbacks","callbacks","concat","getCompletionItems","visibilityUpTo","identifierAndBracketAfterCursor","rangeToReplace","currentMethod","itemList","attribute","getAttributes","kind","monaco","languages","CompletionItemKind","Field","insertText","getMethods","pushSuperCompletionItem","filterText","title","arguments","Method","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","pushStaticInitializationPrograms","programStack","programPosition","textPosition","callbackAfterReturn","isCalledFromOutside","getMethodBySignature","setBaseClass","addMethod","addAttribute","nullType","firstOpClass","typeLeft","typeRight","Klass","upToVisibility","baseClassUptoVisibility","protected","found","upToVisibilityInBaseClass","a1","hasConstructor","hasParameterlessConstructor","hasConstructorWithParameters","getParameterlessConstructor","getConstructor","parameterTypes","classIdentifier","constructors","findSuitableMethods","getMethodsThatFitWithCasting","searchConstructor","methodList","staticMethods","getMethod","getAttribute","foundButInvisible","attributeNotFound","baseClassAttribute","min","shouldImplement","checkInheritance","dontInheritFrom","missingMethods","missingAbstractMethods","implementedMethods","missingInterfaceMethods","hierarchy","abstractMethods","isImplemented","hasAncestorOrIs","maxLength","private","clone","newKlass","Object","create","slice","classObject","detail","Color","visibilityUpToBaseClass","notFound","baseClassAttributeWithError","extends","if1","if2","newInterface","methodsWithSubInterfaces","visitedInterfaces","visitedMethods","todo","nonGenericCastable","type2","type1","suitableMethods","howManyCastingsMax","oneWithCorrectIdentifierFound","howManyCastings","suits","mParameterType","givenType","mParameterTypeEllispsis","j","typeString","getVisibilityUpTo","objectType","currentClassContext","UnboxableKlass","unboxableAs","includes","Error","ObjectClass","escapeHtml","unsafe","twoDez","z","formatAsJavadocComment","indentString","RegExp","stringWrap","nullToString","floatToString","val","isInteger","IntPrimitiveType","init","longPrimitiveType","intPrimitiveType","floatPrimitiveType","doublePrimitiveType","negation","booleanPrimitiveType","automatic","needsStatement","charPrimitiveType","fromCharCode","trunc","StringPrimitiveType","stringClass","declaration","localeCompare","caseFirst","sensitivity","toLowerCase","endsWith","toLocaleLowerCase","toLocaleUpperCase","lastIndexOf","pattern","regExp","strings","values","err","nullAllowedFor","typeAndNull","OperandIsNull","checkNotNull","voidPrimitiveType","longConstant","InterpreterState","convexhull","varType","IntegerType","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","v0","v1","LongType","FloatType","MAX_VALUE","MIN_VALUE","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","isNaN","Infinity","DoubleType","CharacterType","BooleanType","TokenTypeToDataTypeMap","lengthAttribute","referenceElement","array","destType","s1","SymbolTable","parentSymbolTable","positionFrom","positionTo","maxId","beginsNewStackframe","childSymbolTables","variableMap","classContext","parent","getImitation","imitation","st","maxStackPos","variable","stackPos","stackframeSize","getLocalVariableCompletionItems","completionItems","Snippet","Variable","findTableAtPosition","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","EnumRuntimeObject","en","enumValue","Enum","enumValueNodes","enumInfoList","identifierToInfoMap","indexToInfoMap","valueList","evn","ev","ordinal","ei","vi","getOrdinal","valueIdentifier","enumInfo","enumObject","CodeGenerator","initStackFrameNodes","startAdhocCompilation","symbolTable","heap","symbolTableStack","currentSymbolTable","oldStackframeSize","nextFreeRelativeStackPos","currentProgram","breakNodeStack","continueNodeStack","generateMain","start","lastToken","mainSymbolTable","generateClasses","lookForStaticVoidMain","mainProgram","classNode1","mainMethod","classNode","classDefinitionsAST","ct","resolvedType","pt","initCurrentProgram","callMainMethod","closeStackframe","generateClass","generateEnum","checkDoubleMethodDeclaration","enumNode","pushNewSymbolTable","scopeFrom","scopeTo","enumClass","initialization","initializeAttribute","lastStatement","copyReturnValueToStackframePos0","leaveThisObjectOnStack","methodNode","compileMethod","popSymbolTable","enumValueNode","constructorParameters","pushEnumValue","processEnumConstructorCall","commaPositions","rightBracketPosition","programEnd","constructorCallProgram","parameterNodes","typeNode","processNode","pushMethodCallPosition","isAssignable","srcType","castValue","newType","stackPosRelative","stackframeDelta","ellipsisParameterCount","makeEllipsisArray","parameterCount","arrayType","callMethod","isSuperCall","stackframeBegin","inheritanceError","getInheritanceQuickFix","annotation","cie","signatureMap","cieType","editsProvider","uri","resource","edit","getSuperconstructorCalls","nodes","superconstructorCallsFound","isFirstStatement","superConstructorCall","scopeNode","checkIfMethodIsVirtual","superconstructorCalls","superconstructorCallEnsured","quickFix","methodCall","severity","MarkerSeverity","baseClassConstructor","pushLocalVariableToStack","stackposOfVariable","actorClass","getType","returnIfDestroyed","generateStatements","withReturnStatement","rt","mo","typeStore","typeList","pushStaticAttribute","attributeIdentifier","pushAttribute","useThisObject","initializationType","ensureAutomaticCasting","attributeType","leaveValueOnStack","isAdhocCompilation","mainProgramAst","hasMainProgram","decreaseStackpointer","removeLastStatement","lastPosition","mainProgramEnd","pauseAfterProgramEnd","typeFrom","typeTo","nodeFrom","checkIfAssignmentInstedOfEqual","ensureAutomaticToString","codepos","textposition","automaticToString","toStringMethod","insertOrPushStatements","conditionType","binaryOp","operator","endPosition","processStatementsInsideBlock","lastNode","assign","popCount","insertStatements","isArray","splice","statement","deleteStepFinishedFlagOnStepBefore","jumpAlways","lst","beginNewStackframe","initStackFrameNode","initStackframe","reserveForLocalVariables","declarationError","usedBeforeInitialization","initStackframeNode","jumpIfTrue","jumpIfFalse","jumpIfFalseAndLeaveOnStack","jumpIfTrueAndLeaveOnStack","openBreakScope","openContinueScope","pushBreakNode","breakNode","pushContinueNode","continueNode","closeBreakScope","breakTargetLabel","lm","breakNodes","bn","closeContinueScope","continueTargetLabel","continueNodes","breakOccured","isLeftSideOfAssignment","processBinaryOp","unaryOp","processUnaryOp","pushConstant","stackType","resolveIdentifier","initialized","selectArrayElement","incrementDecrementBefore","incrementDecrementAfter","incrementDecrementBeforeOrAfter","constructorCall","superconstructorCall","pushThisOrSuper","newObject","processWhile","processDo","processFor","forLoopOverCollection","processForLoopOverCollection","processIf","processSwitch","processReturn","localVariableDeclaration","arrayInitialization","processArrayLiteral","newArray","processNewArray","processPrint","processManualCast","termInsideBrackets","pushTypePosition","typeFrom1","whatToCast","castToType","pushCastToStatement","checkCast","print","println","withColor","empty","dimension","ec","elementCount","pushEmptyArray","bes","beginArray","ain","sType","targetType","addToArray","numberOfElementsToAdd","dontWarnWhenNoInitialization","variableType","declareVariableOnHeap","pushUsagePosition","heapVariableDeclaration","pushOnTopOfStackForInitialization","initType","initializer","term","condition","isString","isEnum","switchType","endLabel","caseNodes","caseNode","caseTerm","info","ls","endOfIf","withReturnStatementElse","beginElse","withReturnStatementIf","statementsIfTrue","statementsIfFalse","statementsBefore","labelBeforeCondition","labelAfterForLoop","continueLabelIndex","statementsAfter","stackPosForCollection","collection","collectionElementType","collectionType","popAndStoreIntoVariable","noCastingNeeded","variableIdentifier","variablePosition","variableStackPos","stackPosOfCounterVariableOrIterator","extendedForLoopInit","stackPosOfCollection","stackPosOfElement","typeOfElement","stackPosOfCounter","lastStatementBeforeCasting","jumpNode","extendedForLoopCheckCounterAndGetElement","oldStatementCount","conditionBeginLabel","afterWhileStatementLabel","pc","insertNoOp","statementsBeginLabel","classType","newStatement","subsequentConstructorCall","positionsAfterParameterStatements","allStatements","constructorOperands","staticClassContext","castingStatements","processPostConstructorCallbacks","ot","attributeWithError","staticAttributeWithError","pushArrayLength","element","addIdentifierPosition","isSuper","methodContext","isSuperConstructorCall","superclassType","operands","errorInOperands","operand","incrementDecrementBy","indexType","positionList","findLocalVariable","pushFromHeapToStack","findAttribute","cc","scc","klassModule","pushStaticClassObject","staticAttribute","objectNode","thisClass","posBeforeParameterEvaluation","visible","isSystemMethod","callInputMethod","setPauseDuration","pause","constantType","dataType","isAssignment","assignmentOperators","processTernaryOperator","leftType","programPosAfterLeftOpoerand","lazyEvaluationDest","rightType","convertedLeftType","resultType","unboxableLeft","unboxableRight","leftTypes","rightTypes","lt","booleanOperators","betterOperators","opIndex","variantFalseLabel","firstType","secondType","Parser","isInConsoleMode","lookahead","endToken","tokensNotAfterCasting","typeNodes","initializeLookahead","astNodes","parseMain","mainProgramAST","classDefinitionAST","token1","lastComment","commentBefore","cct","nextToken","expect","skip","invokeSemicolonAngel","isOperatorOrDot","getSemicolonAngel","register","op","operatorPrecedence","isEnd","comesToken","getCurrentPosition","getEndOfCurrentToken","classDefinitions","oldPos","BeforeClassDefinitionTokens","parseClassDefinition","parseStatement","checkIfStatementHasNoEffekt","expectSemicolon","retStatements","ret","parseVariableDeclarationOrTerm","parseWhile","parseFor","parseDo","parseIf","parseReturn","parsePrint","parseSwitch","position1","parseTerm","semicolonPositions","parseForLoopOverCollection","parseType","variableIdentifierPosition","mcp","parseMethodCallParameters","paramenters","switchTerm","switchNode","defaultAlreadyThere","casePosition","isDefault","parseUnary","switchCaseNode","elseStatements","comesGenericType","vd","parseVariableDeclaration","parseTermBinary","precedence","left","parsePlusPlusMinusMinus","operators","first","right","opData","wrong","correctOp","position2","constantFolding","isConstant","pcLeft","pcRight","result","considerIntDivisionWarning","leftConstant","rightConstant","isIntegerType","floor","parseDotOrArrayChains","bracketOrCasting","tt1","pcTerm","typeTerm","parseNew","isStringConstant","identifier1","identifierPosition","genericParameterTypes","typenode","arrayDimension","parseArrayLiteral","newDimension","al","parameter","positionEnd","modifiers","collectModifiers","ClassTokens","typeParameters","parseTypeParameterDefinition","extendsImplements","parseExtendsImplements","parseEnum","methodsAndAttributes","parseClassBody","identifierMap","tp","typeParameter","parseTypeParameterBounds","im","parseEnumValues","className","parseMethodDeclarationParameters","methodDeclaration","isTransient","attributeDeclaration","parameterDeclaration","parameterType","isInterface","sextends","simplements","done","asError","TokenTypeToVisibilityMap","forwardToInsideClass","VisibilityTokens","JsonTool","primitiveTypes","toJson","objectToIndexMap","nextIndex","json","toJsonObj","rto","objectToJsonObj","serializedObject","serializedAttributes","fromJson","jsonString","interpreter","indexToObjectMap","valuesToResolve","obj","fromJsonObj","vtr","objectFromJsonObj","klass1","instantiateObjectImmediately","TypeResolver","moduleToTypeParameterListMap","genericTypes","genericTypesInClassDefinitions","typeParameterList","classes","interfaces","enums","unresolvedTypes","resolveTypesInModules","setupClassesAndInterfaces","unresolvedGenericTypesInClasses","resolveTypeVariables","resolveUnresolvedTypes","resolveGenericTypes","resolveExtendsImplements","unresolvedGenericTypes","setupMethodsAndAttributes","checkDoubleIdentifierDefinition","checkGenericTypesAgainsTypeGuards","setupAttributeIndices","cl","tn","ci","actualType","typeGuard","genericParameterType","ifList","tgInterface","adjustMethodsAndAttributesToTypeParameters","WATCHDOG","classOrInterface","watchdog","methodListAltered","newMethodList","newMethod","getAdjustedMethod","altered","newAttributes","newAttributeMap","attributesAltered","newAttribute","getAdjustedAttribute","ext","nt","getAdjustedType","nrt","parameterAltered","newParameters","pNew","adjustMethodsAndAttributesRecursive","newTypeVariables","newClassInterface","todoList","resolveGenericType","genericParameterTypesResolved","typeVariablesOldToNewMap","oldTypeVariable","newTypeVariable","newCi","propagateTypeParameterToBaseClassesAndImplementedInterfaces","newClass","tv1","baseKlass","impl","identifierModuleMap","otherModule","otherType","baseModule","getBaseModule","tpn","lastPass","dependsOnModules","ut","utNew","resolveType","addFromJsonMethod","getInterpreter","addToJsonMethod","classesOrEnums","cn","mn","setupMethod","ic","typesOK","par","definition","pl","typeModule","getArrayType","registerGenericType","tg","typKlasse","toUpperCase","iNode","iType","eType","cdn","addType","registerTypeVariables","e","ready","extType","resolveTypeVariable","typeParameterKlass","tp1","isInClassDefinition","ListIteratorImplClass","listHelper","IteratorHelper","typeE","tvE","iteratorInterface","hasNext","remove","nextPos","objectArray","throwException","valueArray","ArrayListClass","collectionInterface","typeA","tvA","listInterface","iteratorType","o","ah","ListHelper","getIterator","r","add","addAll","clear","contains","removeObject","isEmpty","size","to_String","runtimeObject","allElementsPrimitive","toStringParameters","methodWasInjected","runTimer","getIteratorMethod","iteratorWithError","execute","iterator","nextMethod","hasNextMethod","iteratorAsValue","objWithError","executeImmediatelyInNewStackframe","oldValue","peek","peek_last_or_null","peek_first_or_null","removeLast_or_error","addLast","addFirst","removeFirstOccurrence","peek_or_null","poll_or_null","removeFirst_or_error","CollectionClass","iterableInterface","IterableClass","IteratorClass","ListClass","StackClass","vectorType","VectorClass","SetClass","SetIteratorImplClass","MapHelper","SetIteratorHelper","SetHelper","key","adAll","addToSet","delete","HashSetClass","setInterface","mh","LinkedHashSetClass","QueueClass","DequeClass","QueueInterface","LinkedListClass","dequeInterface","ConsoleClass","getBottomDiv","$consoleTab","append","PrintManager","$runDiv","lastSpan","maxLines","$lines","newLines","printCommands","currentLinelength","beginOfLineState","$outputDiv","lastPrinting","doPrinting","scrollTop","scrollHeight","getGraphicsDiv","showProgramEnd","$programEndDiv","addClass","removeClass","nl","newLine","$lastSpan","$lastDiv","$input","inputManager","insertBefore","linesToDelete","$linesToDelete","$line","tList","InputManager","readInput","defaultValue","printManager","dvt","on","onSubmit","focus","valueAndError","detach","scrollIntoView","off","Helper","targetElement","direction","$helper","top","bottom","to","b","delta","width","height","html","$button","stopPropagation","close","fadeIn","fadeOut","mainBase","$element","Main","helperHistory","flag","controlButtons","speedControl","$grip","$buttonStepOver","bottomDiv","openHelper","KeyboardTool","pressedKeys","keyPressedCallbacks","keyUpCallbacks","keyDownCallbacks","registerListeners","unregisterListeners","kpc","isEmbedded","running","getMonacoEditor","hasTextFocus","preventDefault","shiftKey","ctrlKey","altKey","isPressed","unsubscribeAllListeners","GamepadTool","gamepads","addEventListener","gamepad","buttons","axes","isGamepadButtonPressed","gamepadIndex","buttonIndex","gp","getGamepads","button","pressed","getGamepadAxisValue","axisIndex","isGamepadConnected","Interpreter","debugger_","moduleStoreVersion","stepsPerSecond","maxStepsPerSecond","timerDelayMs","stack","stackframes","timerStopped","timerExtern","steps","timeNetto","timeWhenProgramStarted","stepOverNestingLevel","leaveLine","additionalStepFinishedFlag","showProgrampointerUptoStepsPerSecond","databaseConnectionHelpers","webSocketsToCloseAfterProgramHalt","actions","buttonActiveMatrix","timerEvents","lastStepTime","lastTimeBetweenEvents","lastPrintedModule","runningStates","paused","waitingForInput","keyboardTool","gamepadTool","debugger","setInterpreter","timerId","timerFunction","req","initGUI","am","getActionManager","startFunction","pauseFunction","registerAction","isActive","$buttonStart","$buttonPause","stop","$buttonStop","oneStep","$buttonStepInto","stepOut","$buttonStepOut","$buttonRestart","setState","not_initialized","getStartableModule","cem","getCurrentlyEditedModule","currentlyEditedModuleIsClassOnly","currentlyEditedModule","findModuleByFile","hasErrors","isStartable","mainModule","lastMainModule","getBreakpointPositionsFromEditor","clearExceptions","getCompiler","atLeastOneModuleIsStartable","copyExecutableModuleStoreToInterpreter","detachValues","newMainModule","currentProgramPosition","currentStackframe","initializeEnums","initializeClasses","popProgram","currentCallbackAfterReturn","currentIsCalledFromOutside","stackElementsToPushBeforeFirstExecuting","se","staticValueList","valueInitializationProgram","hasAttributeInitializationProgram","initializeEnumValue","clearErrors","callbackAfterExecution","pauseUntil","resetRuntime","hideProgrampointerPosition","getTimerClass","startTimer","getCurrentWorkspace","getModule","forceRun","maxWorkloadFactor","t0","timeBetweenSteps","n_stepsPerTimerGoal","nextStep","showProgramPointerAndVariables","comesStatement","$errorDiv","consolePresent","config","withBottomPanel","withConsole","positionString","currentStatement","showError","pushCurrentProgram","errorLine","writeConsoleEntry","showTab","hideProgramPointerPosition","worldHelper","destroyWorld","processingHelper","gngEreignisbehandlungHelper","detachEvents","restart","spriteAnimations","stopTimer","cacheAsBitmap","ch","showProgramPointerPosition","showData","programPrinter","printModuleToBottomDiv","showNode","stepInto","return","oldStepOverNestingLevel","executeNode","breakpoint","stackTop","relPos","casted","object1","value1","resultValue","parameterBegin2","ellipsisArray","parameterBegin","parameters1","returnValue","method1","parameterBegin1","pauseForInput","resumeAfterInput","aip","pcc","counter","list","list1","shapes","hasActors","hasAktionsEmpfaenger","timerEntries","showHelper","counts","makeEmptyArray","tvo","switchValue","shapeRuntimeObject","duration","oldState","popPriorValue","closeAllWebsockets","actionId","setActive","clearActorLists","disable","enable","socket","stackElements","isActor","evaluate","stacksizeBefore","oldInterpreterState","stepCount","valuesToPushBeforeExecuting","oldProgramPosition","numberOfStackframesBefore","registerDatabaseConnection","FilledShapeDefaults","defaultFillColor","defaultFillAlpha","defaultBorderColor","defaultBorderAlpha","defaultBorderWidth","defaultVisibility","parseColorToOpenGL","WorldClass","groupType","shapeType","mouseListenerType","colorType","breite","gh","getWorldHelper","setBackgroundColor","x","y","wh","matrix","PIXI","Matrix","copyFrom","stage","projectionTransform","identity","translate","prepend","computeCurrentWorldBounds","shapesNotAffectedByWorldTransforms","shape","move","frameWidth","xMin","xMax","yMin","yMax","shapeHelper","moveX","moveY","shapeX","getCenterX","shapeY","getCenterY","outsideRight","currentLeft","currentWidth","outsideLeft","outsideBottom","currentTop","currentHeight","outsideTop","angle","angleRad","PI","rotate","factor","scale","initialWidth","initialHeight","group","defaultGroup","getDefaultGroup","listener","addMouseListener","cursor","setCursor","worldObject","ratio","$containerOuter","getRightDiv","adjustWidthToWorld","WorldHelper","WorldContainer","Container","sourceFrame","destinationFrame","render","renderer","projection","projectionMatrix","transform","renderTexture","bind","current","batch","flush","world","actActors","keyPressedActors","keyUpActors","keyDownActors","actorHelpersToDestroy","mouseListenerShapes","mouseListeners","actorsFinished","summedDelta","scaledTextures","actorsNotFinished","ticks","deltaSum","SCALE_MODE","SCALE_MODES","NEAREST","TARGET_FPMS","globalScale","$graphicsDiv","$coordinateDiv","$rightDiv","$jo_tabs","parents","maxWidth","maxHeight","$containerInner","oncontextmenu","pixiApp","app","resize","backgroundColor","Application","antialias","tickerFunction","tick","Ticker","shared","elapsedMS","ticker","maxFPS","Rectangle","addChild","view","kpa","runActorWhenKeyEvent","listenerType","eventType","PointerEvent","offsetX","offsetY","Point","applyInverse","onMouseEvent","types","invokeMouseListener","gngEreignisbehandlung","handleMouseClickedEvent","mousePointer","p1","p2","abs","setAllHitpolygonsDirty","setHitPolygonDirty","spriteHelper","actorData","actorHelper","timerPaused","isDestroyed","runActor","actorList","displayObject","destroy","hasRobot","robotWorldHelper","scaleMin","sqrt","brt","BaseRenderTexture","scaleMode","LINEAR","RenderTexture","children","removeChildren","sprite","Sprite","localTransform","onChange","initDefaultValues","containsPoint","trackMouseMove","invokeShapeMouseListener","mouseLastSeenInsideObject","reactToMouseEventsWhenInvisible","findIndex","mls","listenerTypes","sd","Actor","methodSignatures","actorListIdentifier","ms","ActorHelper","isKeyDown","setTimerPaused","registerWorldType","testdestroyed","AlignmentClass","streckeSchneidetStrecke","p0","p3","schnittpunkt","a2","b1","b2","c1","c2","det","schneidet","abstand","dx","dy","punkte","punkt","abstandPunktZuStrecke","inside","vertexCount","schnittpunkteKreisStrecke","schnittpunkte","x1","y1","x2","y2","determiante","t1","t2","q","lambda","fx","fy","s2","abstandPunktZuGerade","l","punkte1","punkte2","istGeschlossen1","istGeschlossen2","endIndex1","endIndex2","minAbstand","minIndex","p1a","p1b","ShapeClass","directionType","vector2Class","helper","sh","angleInDeg","centerX","centerY","mirrorXY","isOutsideView","sh1","collidesWith","collidesWithAnyShape","keepColliding","moveBackFrom","directionRelativeTo","defineCenter","defineCenterRelative","angleDeg","setDefaultVisibility","setVisible","setStatic","tint","react","directionRad","distance","forward","getCopy","bringToFront","sendToBack","getHitPolygon","ShapeHelper","hitPolygonInitial","hitPolygonTransformed","hitPolygonDirty","scaleFactor","lastMoveDx","lastMoveDy","centerXInitial","centerYInitial","updateTransform","bringOnePlaneFurtherToFront","container","highestIndex","getChildIndex","setChildIndex","bringOnePlaneFurtherToBack","belongsToGroup","addToDefaultGroupAndSetDefaultVisibility","transformHitPolygon","bb","getBounds","bb1","dx1","dx2","dy1","dy2","enuminfo","pairs","max","lmdx","lmdy","parameterMax","currentParameter","newParameter","parameterMin","isColliding","np","worldTransform","apply","tx","ty","bounds","cos","sin","cX","cY","scaleX","scaleY","index1","getCollidingShapes","groupHelper","collidingShapes","ro","getParentGroup","BitmapClass","pointsX","pointsY","rh","BitmapHelperNew","getFarbeAsObject","setzeFarbe","istFarbe","fillAll","getCopyOrClone","anzahlX","anzahlY","bitmapToCopy","isBigEndian","uInt32","Uint32Array","uInt8","initGraphics","bh","u8Array","texture","bufferResource","BufferResource","bt","BaseTexture","Texture","uploadData","baseTexture","update","intColorToHexRGB","setzeFarbeRGBA","g","getFarbe","getAlpha","FilledShapeClass","fillColor","borderColor","borderWidth","setAlpha","fillAlpha","setDefaultBorder","setDefaultFillColor","setFillColor","setBorderColor","setBorderWidth","rgbaToHex","rgb","FilledShapeHelper","borderAlpha","fsh","CircleClass","mx","my","CircleHelper","setRadius","deltaAlpha","Graphics","beginFill","lineStyle","drawCircle","closePath","endFill","radius1","radius2","d1","d2","SectorClass","startAngle","endAngle","SectorHelper","drawRadii","ceil","startAngleRad","endAngleRad","moveTo","arc","lineTo","atan2","towPI","normalizedStartAngle","normalizedEndAngle","ArcClass","ri","ra","ArcHelper","beginHole","endHole","r2","ColorClass","colorName","intColor","intColorToRGB","cid","o1","h","hslToRgb","EllipseClass","rx","ry","EllipseHelper","setRadiusX","setRadiusY","drawEllipse","CollisionPairClass","GroupClass","collisionPairType","collisionPairArrayType","GroupHelper","getElement","removeElementAt","shapeArrayType","getCollidingObjects","group2","maxOneCollisionPerShape","groupHelper2","getCollidingObjects2","removeAllChidren","destroyChildren","doCache","oldIndex","groupHelperCopy","roCopy","hasCircularReference","inverse","invert","xSum","ySum","deregister","removeChild","inverseStageTransform","hasOverlappingBoundingBoxWith","collisionPairs","alreadyCollidedHelpers2","shape1","shapeHelper1","shape2","shapeHelper2","shapeToAdd","child","KeyClass","makeHull","points","newPoints","sort","POINT_COMPARATOR","makeHullPresorted","upperHull","lowerHull","PolygonClass","shapeClass","closeAndFill","pointsNumber","ph","PolygonHelper","extractPoints","addPoint","setPoints","insertPoint","movePointTo","isClosed","points1","setPoint","coordinates","setAllPointsUntransformed","RectangleClass","RectangleHelper","RepeatTypeClass","RoundedRectangleClass","radius","RoundedRectangleHelper","addCenterCircle","midx","midy","angleStart","dw","drawRoundedRect","ScaleModeClass","SoundTools","praefix","javaOnlineDir","isInitialized","sound","sounds","player","Howl","src","preload","soundMap","play","volumeDetectionRunning","getUserMedia","webkitGetUserMedia","mozGetUserMedia","audio","stream","audioContext","AudioContext","analyser","createAnalyser","microphone","createMediaStreamSource","smoothingTimeConstant","fftSize","getVolume","times","Float32Array","frequencyBinCount","getFloatTimeDomainData","volume","SoundKlass","startDetectingVolume","HitPolygonStore","polygon","polygonStore","getPolygon","pixels","plugins","extract","probes","addPointsOnLine","additionalPointsPerHalfBorder","mid","probe","end","isTransparent","SpriteClass","scaleModeClass","spriteLibraryEntry","SpriteHelper","setTexture","textureName","indexArray","repeatType","imagesPerSecond","indices","playAnimation","fromIndex","toIndex","stopAnimation","pauseAnimation","resumeAnimation","getWidth","getHeight","makeTiling","isTileSprite","TileHelper","copyFromOtherShape","animationIndices","animationRuns","imagesPerMillisecond","animationTime","animationPaused","copyBitmapFromShape","tileSprite","TilingSprite","mipmap","MIPMAP_MODES","OFF","setParent","setTileOffset","tilePosition","dob","sheet","Loader","resources","spritesheet","nameWithIndex","textures","dynamicTexture1","getPolygonForTexture","setInvisible","spriteHelperList","deltaTime","image","period2","numberOfPeriodsDone","timeIntoPeriod","period","TileClass","tileScale","SpriteLibraryClass","SpriteLibrary","sle","TextClass","fontsize","TextHelper","fontFamily","setFontsize","alignment","setAlignment","setText","isBold","isItalic","setStyle","textStyle","TextStyle","fontSize","fontStyle","fontWeight","stroke","strokeThickness","dropShadow","wordWrap","align","lineJoin","Text","anchor","style","tm","TextMetrics","measureText","InputClass","GamepadClass","MathClass","E","exp","log10","tan","asin","acos","atan","MathToolsClass","vectorArrayClass","xIndex","yIndex","returnArray","pVector","ps","SystemClass","deltaTimeMillis","printStream","Date","PrintStreamClass","SystemToolsClass","speed","setSpeedInStepsPerSecond","getSpeedInStepsPerSecond","KeyListener","Runnable","TimerClass","timerRunning","timerStarted","tl","timerEntry","timerListener","lastTimeFired","processTimerEntries","timerentry","runEntry","MapClass","typeK","tvK","typeV","tvV","keyArray","old","containsKey","containsValue","HashMapClass","TriangleClass","LocalDateTimeClass","dayOfWeekType","MonthType","date","year","month","dayOfMonth","hour","minute","second","days","oldDate","newDate","getTime","oldMs","newMs","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","td","dow","getDay","monthIndex","DayOfWeekEnum","MonthEnum","LineClass","Vector2Class","alphaDeg","oRet","MouseListenerInterface","MouseAdapterClass","WebSocketClientClass","messageType","setUserData","getUserData","getterList","getter","help","WebSocketClientHelper","webSocketHelper","rufname","familienname","username","nickname","keyValueStore","connected","sendToClient","WebSocketClass","webSocketClientType","systemClassType","WebSocketHelper","sessionCode","nickName","sendToAll","findClientsFromCount","nicknames","nnv","findClientsFromNicknames","clientList","client","idToClientMap","isOpen","onOpenMethod","onCloseMethod","onMessageMethod","onClientConnectedMethod","onClientDisconnectedMethod","onClientsFoundMethod","onOpen","runMethod","clientId","recipient_id","wtr","clientRuntimeObject","wch","user_id","clientHelper","from_client_id","clientHelper1","disconnecting_client_id","currentTimeMills","client_id","onClientsFound","own_index","otherClients","clients","otherClient","arrayValue","ProcessingClass","p5o","getProcessingHelper","loop","noLoop","createCanvas","addProcessingMethod","parameterNames","pList","processingObject","ProcessingHelper","loopStopped","onSizeChanged","$div","setupProcessing","drawMethodPending","p5","setup","P2D","afterFinishingBoth","draw","mousePressed","mouseReleased","mouseClicked","mouseDragged","mouseEntered","mouseExited","mouseMoved","keyPressed","keyReleased","methodIdentifier","TurtleClass","TurtleHelper","showTurtle","turn","penIsDown","setShowTurtle","xStart","yStart","lineElements","turtleAngleDeg","isFilled","initialHitPolygonDirty","turtleSize","lastLineWidth","lastColor","lastAlpha","lastTurtleAngleDeg","renderJobPresent","lineWidth","calculateCenter","lineGraphic","turtle","initTurtle","moveTurtleTo","lastLineElement","angleInDegrees","cx","cy","turtleAngleRad","newLineElement","newTurtleX","newTurtleY","newAngleDeg","vx","vy","vxp","vyp","lengthForward","lengthBackward","lengthBackwardP","firstPoint","le","setupInitialHitPolygon","steckenzugSchneidetStreckenzug","touchesAtLeastOneFigure","touchesColor","farbe","touchesShape","GNGEreignisbehandlung","getHelper","registerEvents","dauer","taktdauer","GNGEreignisbehandlungHelper","bindEvents","aktionsempfaengerTypes","methodSignatureList","methodToAktionsempfaengerTypeMap","keyToKeyCodeMap","aktionsempfaengerMap","remainingTime","unregisterEvents","onKeyDownMethod","invokeMethod","keyCode","unshift","liste","GNGZeichenfensterClass","aktionsempfaengerType","aktionsempfaenger","GNGRechteckClass","GNGFarben","GNGBaseFigurClass","moveAnchor","grad","winkel","sichtbarkeit","GNGAktionsempfaengerInterface","GNGDreieckClass","GNGKreisClass","GNGTurtleClass","farbeString","objectShapeHelper","GNGTextClass","GNGFigurClass","polygonClass","circleClass","ellipseClass","rectangleClass","FigurHelper","center","drawInitialTriangle","groesse","newFactor","part","partHelper","x3","y3","triangle","rectangleHelper","ellipseHelper","triangleClass","th","gngEreignisbehandlungsHelper","RandomClass","bound","from","DirectionClass","Patcher","modified","patch","patches","new","patchedText","KeyEvent","keys","Formatter","autoFormatTriggerCharacters","displayName","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","provideOnTypeFormattingEdits","options","edits","format","Promise","resolve","deleteOverlappingRanges","e1","provideDocumentFormattingEdits","editor","EndOfLinePreference","LF","tokenlist","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","deleteSpaces","replaceBetween","insertSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","nextNonSpaceToken","getNextNonSpaceToken","lastTokenIsOperator","nextTokenIsOperator","beginNextLine","token2","currentIndentation","il","correctIndentation","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","currentIndex","numberOfSpaces","Boxes3d","material","Pixi3d","StandardMaterial","Mesh3D","createCube3dMesh","MeshGeometry3D","positions","normals","uvs","tangents","createHalfheightCube3dMesh","repeatTextureU","repeatTextureV","createPlane3dMesh","getSpritesheetTexture","copy","wrapMode","WRAP_MODES","REPEAT","StandardMaterialTexture","smt","TextureTransform","frame","RobotMarker","geometry","RobotBrick","RobotCubeFactory","camera","farben","farbeToColorInfoMap","farbeToMarkerMaterialMap","farbeToBrickMaterialMap","planeMaterial","light1","Light","LightType","ambient","intensity","light2","directional","rotationQuaternion","setEulerAngles","lightingEnvironment","LightingEnvironment","lights","grassBrickMaterial","initMaterial","baseColorTexture","cloudMaterial","baseColor","groundPlaneMaterial","colorInfo","brickMaterial","getBrick","getGrassBrick","getGrassPlane","mesh","makePlane","widthX","widthZ","spriteOrColor","getPlaneMaterial","getMarker","marker","getSidePlanes","worldX","worldY","sideSprite","deep","planes","sideMaterial","mesh1","mesh2","mesh3","mesh4","getHorizontalPlanes","topSprite","topMaterial","mesh5","mesh6","mesh7","mesh8","makeClouds","originX","originZ","z1","createCube3d","scaleZ","dz","exposure","roughness","spriteKey","makeSprite3d","textureKey","alphaMode","StandardMaterialAlphaMode","mask","createPlane3d","RobotClass","robotWorldType","RobotHelper","startX","startY","initialeWelt","turnRight","adjustAngle","turnLeft","schritt","anzahl","hinlegen","markeSetzen","aufheben","istWand","istZiegel","istMarke","himmelsrichtungen","hr","hatSteine","maxSteine","RobotWorldClass","RobotWorldHelper","maximumHeight","addBrick","setMarker","markers","bricks","robots","fetchWorld","Camera","robotCubeFactory","container3D","Container3D","initFromString","initWorldArrays","renderOrnamentsAndInitCamera","adjustRobotPositions","robot","getBrickCount","markerColumn","brickColumn","northSprite","control","CameraOrbitControl","angles","target","oldHeight","brick","setToXY","adjustMarkerHeight","removeBrick","hasBrickColor","getMarkerColor","removeMarker","brickList","setDimensions","getNumberOfBricks","initString","lowerCaseCharToColor","upperCaseCharToColor","digits","rows","maxColumns","row","rowLength","brickColor","markerColor","gibtFarbe","Direction","names","deltas","getAngle","getDeltas","fetchRobotWorld","Model","gltf","meshes","sm","crop","rw","newX","newY","newHeight","param","marke","ResultSetClass","wasNull","typeIdFirstUppercase","columnIndex","rsh","columnCount","isAfterLast","columnLabel","getColumnIndex","ResultsetHelper","columns","DatabaseStatementClass","resultSetType","query","connectionHelper","showHideDbBusyIcon","executeQuery","rs","executeWriteStatement","WorkerSim","initsql","initSqlJs","locateFile","scriptDirectory","postMessageToClient","postMessage","db","SQL1","SQL","createDb","worker","terminate","buff","results","exec","each","finished","DatabaseTool","databaseDirectoryEntries","queryId","querySuccessCallbacksMap","queryErrorCallbackMap","initializeWorker","queries","callbackAfterInitializing","jo_doc","Worker","querySuccessCallback","queryErrorCallback","execQuery","shift","action","sql","params","executeWriteQueries","dump","sqliteMagicBytes","DatabaseLongPollingListener","onServerSentStatementsCallback","longPoll","listenerIdentifier","resp","firstNewStatementIndex","newStatements","rollbackToVersion","DatabasePreparedStatementClass","psh","checkQuery","getQueryWithParameterValuesFilledIn","PreparedStatementHelper","prepareStatement","insideQuotation","parameterPositions","parameterValues","queryParts","queryWithParameterValues","ConnectionClass","preparedStatementType","statementType","stmt","ConnectionHelper","skipNextServerSentStatement","dbData","databaseData","longPollingListener","onServerSentStatements","executeStatementsFromServer","firstStatementIndex","errorMessage","retrieveLastRowId","oldStatementIndex","DatabaseManagerClass","connectionType","connectionRuntimeObject","Module","oldErrorDecorations","breakpoints","breakpointDecorators","decoratorIdToBreakpointMap","identifierPositions","methodCallPositions","uriCounter","uriMap","Uri","scheme","createModel","updateOptions","tabSize","bracketColorizationOptions","enabled","formatter","applyEdits","onDidChangeContent","versionId","main1","text_before_revision","student_edited_after_revision","homeworkManager","showHomeWorkRevisionButton","renderHomeworkButton","toExportedModule","getMethodDeclarationAtPosition","methodAST","lineNumber","patched","f1","submitted_date","forceUpdate","file_type","possibleMethods","lines","cp","mcpList","toggleBreakpoint","rerender","getBreakpoint","setBreakpoint","renderBreakpointDecorators","attachToStatement","programList","getPrograms","nearestStatement","nearestDistance","decorations","isWholeLine","overviewRuler","OverviewRulerLane","Left","minimap","MinimapPosition","Inline","marginClassName","stickiness","TrackedRangeStickiness","NeverGrowsWhenTypingAtEdges","deltaDecorations","decoration","getModel","getAllDecorations","findSymbolTableAtPosition","getErrorCount","el","getTypeAtPosition","positionsOnLine","foundPosition","getElementAtPosition","bestFoundPosition","dependsOnModulesWithErrors","programs","TypeStore","getSortedAndFilteredErrors","e2","errorLevelCompare","level1","level2","renderStartButton","$buttonDiv","$htmlFirstLine","$startButtonDiv","setModuleActive","maxUriNumber","BaseModule","GNGModule","ModuleStore","withBaseModule","additionalLibraries","modules","moduleMap","lib","addLibraryModule","findModuleById","module_id","getFirstModule","isDirty","includeSystemModules","excludedModuleName","removeModuleWithFile","moduleName","getTypeCompletionItems","moduleContext","item","Struct","Class","generic","typeMap","DebuggerElement","caption","getLevel","getIndent","$debuggerElement","$deFirstLine","canOpen","onFirstOpening","toggleClass","renderValue","renderListElements","de","$childContainer","removeAllChildren","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","setSelectionRange","after","newValue","openContextMenu","items","$contextMenu","$openSubMenu","parentMenuItem","mi","link","$item","subMenu","document","$link","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","tabs","trigger","convertPxToNumber","pxString","makeDiv","div","setSelectItems","$selectElement","activeItemValue","selected","getSelectedObject","$selectDiv","selectedValue","jo_mouseDetected","animateToTransparent","cssProperty","startColorRgb","colorPraefix","animate","downloadFile","filename","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","createElement","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","copyTextToClipboard","clipboard","writeText","textArea","body","appendChild","select","execCommand","fallbackCopyTextToClipboard","AdhocCompiler","lexer","parser","compile","lexed","resolvedTypeAndModule","codeGeneratorErrors","Evaluator","programMap","compiler","expression","pmEntry","compilation","getDebugger","lastSymboltable","Workspace","evaluator","toExportedWorkspace","alterAdditionalLibraries","withFiles","currentFileId","currentlyOpenModule","sql_baseDatabase","sql_history","sql_manipulateDatabaseStatements","myMain","synchronizeWithRepository","synchronizationManager","synchronizeWithWorkspace","libaries","restoreFromData","getModuleByMonacoModel","Dialog","$dialog","$dialogMain","heading","addDiv","subHeading","placeholder","$buttonRow","waitMessage","$message","addCheckbox","ischecked","$checkbox","$description","prop","is","WorkspaceImporter","dialog","pathDescription","$fileInputButton","exportedWorkspaces","$workspacePreviewDiv","registerFiles","reader","FileReader","onload","ew","readAsText","originalEvent","$dropZone","evt","dataTransfer","dropEffect","firstWorkspace","wse","setWorkspaceActive","AccordionPanel","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","elements","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","addAction","$collapseAllAction","collapseAll","hasClass","slideUp","$captionElement","$listElement","setFixed","fixed","grow","enableNewButton","$buttonNew","getCurrentlySelectedPath","pathArray","selectedElement","getSelectedElement","compareWithPath","name1","path1","isFolder1","name2","path2","isFolder2","cmp","getElementIndex","insertElement","insertIndex","$elements","elementAtIndex","before","renderElement","renameElement","renderOuterHtmlElements","$accordionDiv","newElementCallback","$htmlSecondLine","insertAfter","selectCallback","$listOuter","$ce","$li","targetGrow","parts","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","aName","sortName","bName","setTextAfterFilename","cssClass","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","effectAllowed","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","contextMenuProvider","cmi","pageX","pageY","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","moveCallback","folder","pointPos","selection","newText","invokeCallback","ae1","findElement","pathString","elPath","getPathString","setElementClass","setCaption","Accordion","$html","panel","WatcherElement","accordionElement","$secondLine","$rightTextInFirstLine","setError","colorize","$result","Debugger","$debuggerDiv","$projectexplorerDiv","lastDebuggerElements","variablePanel","watchPanel","callbackIfSuccesful","addWatchExpression","watchExpression","deleteWatchExpression","newName","renameWatchExpression","stackframe","elementsToKeep","oldDebuggerElements","$variableList","thisString","visibleVariablesMap","oldDe","evaluateWatcherExpressions","watcherElement","$rightTextAfterFilename","we","ActionManager","$mainElement","keyEntries","executeKeyDownEvent","actionIdentifier","active","activeElement","tagName","actionEntries","actionEntry","ProgramPrinter","$bottomDiv","$pcodeTab","printProgram","$pcode","printModule","compilerMessage","labels","lastLabelNumber","number","printNode","format3","printVariable","ConsoleEntry","withBottomBorder","$consoleEntry","$firstLine","span","valueString","detachValue","MyConsole","history","historyPos","readyToExecute","consoleEntries","errorDecoration","$consoleTabHeading","initConsoleClearButton","$consoleClear","layout","$editorDiv","automaticLayout","renderLineHighlight","guides","bracketPairs","highlightActiveIndentation","indentation","overviewRulerLanes","lineNumbers","glyphMargin","folding","lineDecorationsWidth","lineNumbersMinChars","fixedOverflowWidgets","javaOnlineFont","roundedSelection","occurrencesHighlight","suggest","localityBonus","snippetsPreventQuickSuggestions","scrollbar","vertical","horizontal","theme","addCommand","KeyCode","Enter","compileIfDirty","UpArrow","nextHistoryPos","setPosition","DownArrow","lastVersionId","timerHandle","showErrors","setModelMarkers","executeRapidly","programHasMethodCalls","executeInStepMode","$entry","consoleTop","commandEntry","resultEntry","ce","dontDetectLastChange","revealRangeInCenter","ErrorManager","$mainDiv","oldDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","showParenthesisWarning","errorCountMap","$errorList","linesDecorationsClassName","borderLeftClass","lightBulbClass","onClickFunction","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$lineColumn","category","HomeworkManager","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","hideRevision","showRevision","hideHomeworkRevisionButton","originalModel","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","dispose","attachToWorkspaces","daysWithModules","dateString","stringToDate","dateWithoutTime","dateToStringWithoutTime","dwm","day","moduleWithWorkspace","BottomDiv","errorManager","printCurrentlyExecutedModule","showHomeworkTab","hideHomeworkTab","displayValue","MyCompletionItemProvider","triggerCharacters","provideCompletionItems","context","_contentWidgets","widget","_widget","toggleDetails","consoleModel","isConsole","isMainWindow","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","triggerCharacter","getCompletionItemsAfterNew","countLower","countGreater","getCompletionItemsAfterClass","ibMatch","dotMatch","getCompletionItemsAfterDot","varOrClassMatch","getCompletionItemsInsideIdentifier","posMin","posMax","watchDog","posOld","suggestions","insideGenericParameterDefinition","startsWithCurlyBrace","trimLeft","getOverridableMethodsCompletion","sortText","getKeywordCompletion","textAfterDot","dotColumn","tStatic","keywordCompletionItems","alreadyImplemented","getDeclarationAsString","short","implList","getTypeVariableDeclaration","getGenericParameterDefinition","decl","MySignatureHelpProvider","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","provideSignatureHelp","reject","provideSignatureHelpLater","methodCallPosition","rightMostPosition","getSignatureHelp","parameterIndex","signatureInformationList","makeIntrinsicSignatureInformation","makeSignatureInformation","activeParameter","activeSignature","signatures","parameterInformationList","posFrom","posTo","pi","MyHoverProvider","provideHover","getSelection","declarationAsString","contents","typeIdentifier","word","getWordUnderCursor","desc","keywordDescriptions","widenDeclaration","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","provideCodeActions","diagnostics","isPreferred","MyReferenceProvider","provideReferences","referencePositions","upInCurrentModule","up","MyColorProvider","provideDocumentColors","provideColorPresentations","oldColor","red256","green256","blue256","hex6Digits","toHex2Digits","rgbCommaSeparated","Editor","showMinimap","highlightCurrentMethod","cw","dontPushNextCursorMove","lastPushTime","lastTime","elementDecoration","extensions","conf","indentationRules","decreaseIndentPattern","increaseIndentPattern","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","symbols","escapes","octaldigits","binarydigits","hexdigits","tokenizer","root","cases","include","whitespace","javadoc","string","defineMyJava","defineTheme","inherit","rules","foreground","colors","lightbulb","peekWidgetDefaultFocus","quickSuggestions","quickSuggestionsDelay","selectOnLineNumbers","scrollBeyondLastLine","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","insertMode","parameterHints","cycle","mouseWheelZoom","detectIndentation","onKeyDown","mouseWheelListener","changeEditorFontSize","deltaY","_main","windowStateManager","registerBackButtonListener","historyEntry","revealPosition","pushHistoryState","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","currentModelId","source","getPositionForHistory","onEvaluateSelectedText","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerRenameProvider","registerColorProvider","registerDefinitionProvider","provideDefinition","cancellationToken","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","getPosition","replaceState","pushState","insertTextAndSetCursor","newColumn","prevLine","getLineContent","trimRight","getLineCount","spacesAtBeginningOfLine","isSelected","charBefore","charAfter","setFontSize","fontSizePx","editorfs","getOptions","viewModeController","saveFontSize","bottomDiv1","documentElement","setProperty","dynamic","newEditorFs","keybindings","KeyMod","CtrlCmd","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","US_COMMA","removeContentWidget","getId","getDomNode","preference","ContentWidgetPositionPreference","ABOVE","BELOW","addContentWidget","runningModule","darkColor","zIndex","resolveRenameLocation","rejectReason","provideRenameEdits","resourceEdits","usagePositionsInModule","SpeedControl","$container","gripWidth","overallWidth","$outer","$bar","$display","mousedownX","oldPosition","setSpeed","clientX","deltaX","intervalBorders","gripIntervalLength","gripPosition","setInterpreterSpeed","newPosition","intervalDelta","intervalIndex","intervalMin","speedString","ProgramControlButtons","$buttonsContainer","$editorContainer","ZoomControl","$parentElement","gripHeight","overallHeight","zoomMin","zoomMax","$zoomcontrolOuter","mousedownY","$zoomcontrolBar","$zoomcontrolDisplay","setZoom","clientY","preventFading","zoomfactor","zfs","Alignment","CompilerStatus","DiagramUnitCm","Diagram","$htmlElement","inlineStyles","marginCm","minDistance","minWidthHeightCm","widthCm","heightCm","$menuButton","$scrollpane","overflow","$canvas","zoomControl","svgElement","createElementNS","$centerRectangle","adjustCenterRectangle","ev1","screenX","screenY","scrollLeft","setSize","adjustSizeAndElements","diagramElements","rr","leftCm","topCm","isAdjusted","newWidthCm","newHeightCm","insertStyleElement","styles","ns","defs","refreshInlineStyles","selector","stylesForSelector","textContent","findFreeSpace","fertig","xCm","yCm","isFree","insideX","insideY","DiagramElement","getRoutingRectangle","appendTo","withRaster","adjustToRaster","createTextElement","font","getTextMetrics","textElement","bbox","getBBox","cmPerPx","addTextLine","bold","italics","$group","textPosYCm","maxWidthCm","onClick","metrics","textHeightCm","textWidthCm","tooltip","thicknessCm","textCenter","textRight","$g","ClassBox","diagram","withMethods","withAttributes","attachToClass","isSystemClass","hashedSignature","scb","cb","klassSignature","getSignature","renderLines","addMouseEvents","jumpToDeclaration","parametersWithTypes","currentClassBoxes","getVisibilityText","$dropdownTriangle","getTrianglePath","adjustClassDiagramSize","updateArrows","stopImmediatePropagation","cmPerPixel","inDebounce","chr","hash","hasSignatureAndFileOf","ArrowHead","position1Cm","position2Cm","ex","ey","DiagramArrow","arrow","arrows","step","ex1","ey1","rauteAlpha","routingArrow","minimalPoints","getPathCoordinates","arrowData","arrowType","endsOnArrowWithIdentifier","head","makeHead","point","ClassDiagram","classBoxesRepository","straightArrowSectionAfterRectangle","distanceFromRectangles","slotDistance","displaysSystemClasses","displaySystemClasses","drawDiagram","clearAfterLogout","scd","classBoxes","workspaceId","classBox","cbs","deserialize","serializedClassDiagram","inactive","getClassBoxes","switchToWorkspace","cbs1","onlyUpdateIdentifiers","newClassBoxes","anyTypelistThere","newClassesToDraw","findAndEnableClass","uscList1","usc","freePos","routingInput","drawArrows","routingWorker","arrowsWithoutColorLast","arrowIdentifierToColorMap","arrowsWithoutColor","da","rectangles","cb1","findClassbox","drawArrwow","intf","cb2","destRectangleIndex","sourceRectangleIndex","destinationIdentifier","ListDiagram","objectDiagram","getSettingsElement","rootIdentifier","getName","updateDiagram","rootValue","selfReferenceType","rootValueSelfReferenceType","analyzeSelfReference","attributesWithSelfReference","sr","tExtends","tImplements","ObjectDiagram","$objectDiagramDiv","variants","currentVariant","$typeOption","variant","currentTarget","intValue","updateSettings","$settingsDiv","RightDiv","isWholePage","$tabs","$headings","withClassDiagram","withObjectDiagram","drawClassDiagrams","onObjectDiagramEnabled","rightdiv_width","$wholeWindow","screenHeight","screenWidthToHeight","worldWidthToHeight","newWidth","isClassDiagramEnabled","isObjectDiagramEnabled","updateObjectDiagramSettings","EmbeddedSlider","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","md","mm","slide","setColor","otherHeight","newOtherHeight","otherWidth","newOtherWidth","EmbeddedFileExplorer","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeAllFiles","removeFile","addHint","script","$fileDiv","hint","onDelete","setFirstFileActive","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","code_inline","idx","env","content","md2","codeMap","uncoloredtext","markFile","EmbeddedIndexedDB","indexedDB","onsuccess","onupgradeneeded","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","writeScript","scriptId","objectStore","removeScript","getScript","SemicolonAngel","startRegistering","isThereAgain","oldEvidence","firstSeenMs","healSemicolons","cursorLine","isCurrentModule","editOperations","setSelection","MainEmbedded","scriptList","programPointerDecoration","programIsExecutable","compileRunsAfterCodeReset","readConfig","initScripts","hideStartPanel","readScripts","semicolonAngel","actionManager","withFileList","fileExplorer","initWorkspace","$filesListDiv","configJson","hideEditor","withPCode","withErrorList","jsonFilename","editorState","saveViewState","restoreViewState","eraseDokuwikiSearchMarkup","scriptListJSon","saveScripts","countDown","$resetButton","oneNotSaved","deleteScriptsInDB","considerShowingCodeResetButton","$centerDiv","$resetModalWindow","makeCodeResetModalWindow","makeRightDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","$buttonOpen","loadWorkspaceFromFile","$buttonSave","saveWorkspaceToFile","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$coordinates","$infoButton","Compiler","$parent","$window","programPointerModule","revealRangeInCenterIfOutsideViewport","beforeContentClassName","$filesHeader","compilerStatus","compiling","startable","prompt","$tabheadings","$thRightSide","$thConsoleClear","$thErrors","$thConsole","$thPCode","$tabError","$tabConsole","$tabPCode","$thRun","$thVariables","$vd","$alternativeText","compiledButNothingToRun","errorfree","readyToRun","UserMenu","$userSettingsButton","PasswordChanger","$oldPassword","$newPassword1","$newPassword2","waitDiv","oldPassword","newPassword","MainMenu","currentSubmenu","openSubmenusOnMousemove","serverURL","mainMenu","switchTheme","repositoryUpdateManager","repositoryCheckoutManager","is_admin","is_schooladmin","is_teacher","confirm","initMenu","setTheme","menu","initMenuitemCallbacks","opensubmenu","DistributeToStudentsDialog","studentCount","$studentList","student","students","$studentLine","$studentClass","$studentName","back","distributeWorkspace","registerOneTimeBackButtonListener","WorkspaceSettingsDialog","currentLibraries","library","checkboxState","changed","newLibs","used","ProjectExplorer","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","callbackIfSuccessful","cmiList","$synchronizeAction","$homeworkButtonDiv","removeWorkspace","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","workspaceAccordionElement","workspaceData","newWorkspace","teacherExplorer","classPanel","repositoryOn","repositoryCreateManager","restoreOwnWorkspaces","renderFiles","moduleList","renderWorkspaces","renderErrorCount","errorCount","errorCountS","showRepositoryButtonIfNeeded","repositoryButtonDone","nonSystemModules","newFileHelperDone","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","Center","setExplorerColor","Sliders","initSliders","moveLeftPanel","moveBottomDiv","moveRightDiv","sliderknobLeft","sliderknobRight","$editor","mewidth","meheight","$leftPanel","TeacherExplorer","classData","removePanels","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","ea","renderStudents","userDataList","ud","classDataList","ThemeManager","themes","initThemes","internalSwitchTheme","monacoTheme","cssColors","highlightColor","Login","isLoginWithTicket","startAnimations","$loginSpinner","loginHappened","sendLoginRequest","showLoginForm","ticket","servlet","loginRequest","password","isTestuser","consoleHelperDone","newWorkspaceHelperDone","speedControlHelperDone","homeButtonHelperDone","stepButtonHelperDone","folderButtonDone","viewModes","waitForGUICallback","initTeacherExplorer","classdata","initViewMode","startupComplete","loginWithTicket","ViewModeController","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","toggleEditorFullwidth","setMode","rightDivWidth","editorWidth","mode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","toggleHighContrast","monitor","presentation","WindowStateManager","oneTimeBackButtonListener","backButtonListener","InconsistencyFixer","updateNeeded","newFolder","folderList","ws1","identicalFolders","ws2","folderPathAndNames","fnap","revealLineInCenter","matchMedia","matches","login","hashIndex","initTypes","checkStartupComplete","correctPIXITransform","utils","skipHello","Transform","prototype","parentTransform","_localID","_currentLocalID","_parentID","_worldID","wt","initEditor","debounceDiagramDrawing","fixInconsistencies","currentWorkspace_id","SynchroWorkspace","manager","isCurrentRepositoryVersion","hasChanges","isWritable","copiedFromWorkspace","repositoryIsWritable","copyFromWorkspace","idInsideRepository","idInsideWorkspace","workspaceFile","synchroWorkspace","markedAsMerged","originalText","monacoModel","copyFromRepository","repository","fileEntries","fileEntry","copyFromHistoryElement","historyElement","repo","getRepositoryState","commit","oldRepository","oldIdToFileMap","newIdToFileMap","newlyVersionedFileIds","repositoryHistoryEntry","isIntermediateEntry","timestamp","toUTCString","historyFiles","oldFile","committedFromFile","getPatch","cff","commitFilesRequest","synchroFile","repositoryVersionBeforeCommit","cfr","currentUserSynchroWorkspace","contentOld","contentNew","dmp","diff_match_patch","patchObject","patch_make","deSerializedPatchObject","patch_apply","writeChangesToWorkspace","oldIdToModuleMap","HistoryElement","historyEntryIndex","$historyElementDiv","currentlyDragged","line1","line2","line3","$historyScrollDiv","leftSynchroWorkspace","setupSynchronizationListElements","rightSynchroWorkspace","entries","historyEntries","startIndex","entry","setIntermediateState","deleteFile","changeFile","oldText","SynchronizationListElement","leftSynchroFile","rightSynchroFile","$buttons","pending","$leftFileDiv","$buttonLeftDiv","$buttonRightDiv","$rightFileDiv","$fileListDivs","allDivs","createLeftFileModel","createRightFileModel","lastShownSynchronizationElement","setEditorModel","getEmptyMonacoModel","onContentChanged","compareFilesAndAdaptGUI","onFileChanged","emptyGUI","leftCaption","leftVersionCaption","needsMerge","rightCaption","rightVersionCaption","$spacer1","$spacer2","makeButton","isSynchronized","isRename","isUpdateOrCommit","onlyRename","$markAsMergedButtonDiv","showMergedDiv","updateCenterButtons","$mergedDiv","arrowDirection","SynchronizationManager","$fileListHeaderDivs","guiReady","synchronizationListElements","historyElements","gainRepositoryLock","attachToWorkspaceAndRepository","timer","currentRepository","attachToRepository","fe","withHistoryElements","crepo","he","che","hfe","deserializeRepository","currentRepositorySynchroWorkspace","setupHistoryElements","lastShownHistoryElement","lastSynchroFileLeft","lastSynchroFileRight","fileElements","synchroFileMap","sfile","fileElement","fe1","fe2","synchroListElement","setHeader","$backToWorkspaceButton","$writeWorkspaceChangesButton","writable","$backToCurrentRepositoryVersionButton","$writeRepositoryChangesButton","lastFileSelected","$synchroDiv","$mainHeadingDiv","$belowMainHeadingDiv","$buttonsTopRightDiv","$exitButton","$leftDiv","$historyOuterDiv","$leftUpperDiv","$fileListHeaderOuterDiv","$fileListOuterDiv","$fileListFooterDiv","$fileListHeaderContainerRight","fileListHeaderRight","$fileListHeaderCenter","$updateAllButton","updateAll","$commitAllButton","commitAll","backToWorkspace","backToCurrentRepositoryVersion","writeWorkspaceChanges","writeRepositoryChanges","makeDroppable","$dropZoneDiv","$dialogDiv","$dialogTextarea","$dialogButtonDiv","$buttonCancel","$buttonOK","click","RepositoryCreateManager","publishedToItems","$updateDiv","$mainHeading","$repoName","$repoDescription","$repoPublishedTo","$createButton","createButtonClicked","$cancelButton","cancelButtonClicked","isStudent","initCreateMode","publishedTo","RepositorySettingsManager","repositoryOwnerItems","users","exitButtonClicked","$divBelow","$divLeft","$repoListDiv","enableSaveButton","$repoOwner","$setSecrDivRead","$settingsSecretRead","$setSecrReadCopyButton","$setSecrReadButton","setSecret","$setSecrDivWrite","$settingsSecretWrite","$setSecrWriteCopyButton","$setSecrWriteButton","$userlistDiv","$saveButton","saveButtonClicked","repositoryInfo","secret_read","secret_write","is_student","showRepositoryList","deleteRepository","repInfo","emptyRepositoryInfo","onlyOwnRepositories","$firstDiv","firstRepInfo","repositories","$namediv","$deleteDiv","selectRepository","$repoDiv","repoData","published_to","repositoryUserList","userData","$userDiv","firstName","lastName","$canWriteDiv","$canWriteCheckBox","canWrite","selectedItems","some","owner_name","owner_username","owner","updateRepositoryRequest","writeAccessList","has_write_access","RepositoryCheckoutManager","filterbuttonOptions","$checkoutDiv","$chooseWorkspaceDiv","$workspaceDropdown","$codeDiv","$codeInput","$publishedToFilterDiv","$filterButtonDiv","$radioButton","showRepositories","$inputFilterDiv","$filterInput","$checkoutButton","checkoutButtonClicked","filteredRepositories","repoInfo","filterSearch","$divRight","selectFirstRepository","secret","combinedSecret","tIndex","new_workspace","require","paths","availableLanguages","ignoreDuplicateModules","load"],"sourceRoot":""}