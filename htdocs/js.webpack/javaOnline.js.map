{"version":3,"file":"javaOnline.js","mappings":"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ACA,gCACA,sCACA,kCACA,wCACA,8BACA,kCACA,kCACA,sCACA,oCACA,0CACA,kCACA,oCACA,8CAQA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kCAAa,gCAGb,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,sBAAO,0BAAS,oCAAc,wCAC9B,sBACA,4BACA,gCACA,wCACA,0CACA,4DACA,gDACA,4CACA,kBAAK,gBACL,8BAEA,oCACA,oCACA,kCACA,gDACA,kDACA,kEACA,gBACA,kBAEA,sBACA,gDACA,gCACA,8BAEA,0CACA,sBACA,4BAEA,kBAGA,8BAGA,sBAGA,8BAGA,gBAGA,sBAEA,kBAGA,0BAGA,4BAGA,wCAGA,0BAGA,4BACA,6CAEA,2CAGA,6BACA,2BACA,6DACA,2DACA,6DACA,2DACA,mDACA,uCACA,2CACA,qCACA,uDACA,mDACA,qEACA,+BACA,+BACA,iDACA,iCACA,yCACA,2EACA,2CACA,+CACA,qDACA,yCACA,2CACA,yEACA,yBACA,+BACA,mCACA,iCACA,iEACA,+DACA,iCACA,qBACA,6DACA,2DACA,iCACA,iCACA,iCACA,yCACA,uDAGA,qBACA,uCACA,qDACA,+CACA,qDACA,qDACA,2CACA,6BACA,mDACA,uBACA,2BACA,uCACA,mDACA,+BACA,+CACA,mDACA,6FACA,6CACA,uBAnMJ,CAAYA,IAAAA,EAAS,KAsMd,ICjMFC,EDiMMC,EAA4C,CACnD,CAACF,EAAUG,YAAa,iBAExB,CAACH,EAAUI,iBAAkB,yBAC7B,CAACJ,EAAUK,uBAAwB,4BACnC,CAACL,EAAUM,iBAAkB,2BAC7B,CAACN,EAAUO,gBAAiB,+BAC5B,CAACP,EAAUQ,cAAe,sBAC1B,CAACR,EAAUS,MAAO,OAClB,CAACT,EAAUU,OAAQ,QAEnB,CAACV,EAAUW,cAAe,QAC1B,CAACX,EAAUY,aAAc,OACzB,CAACZ,EAAUa,cAAe,QAC1B,CAACb,EAAUc,YAAa,MACxB,CAACd,EAAUe,kBAAmB,YAC9B,CAACf,EAAUgB,aAAc,OACzB,CAAChB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","sources":["webpack:///../src/client/communication/AjaxHelper.ts","webpack:///../src/client/communication/NotifierClient.ts","webpack:///../src/client/tools/database/CacheManager.ts","webpack:///../src/client/communication/NetworkManager.ts","webpack:///../src/client/compiler/lexer/Token.ts","webpack:///../src/client/compiler/lexer/Lexer.ts","webpack:///../src/client/compiler/lexer/ColorLexer.ts","webpack:///../src/client/runtimelibrary/graphics/ColorHelper.ts","webpack:///../src/client/compiler/types/Class.ts","webpack:///../src/client/compiler/types/Types.ts","webpack:///../src/client/interpreter/RuntimeObject.ts","webpack:///../src/client/compiler/parser/LabelManager.ts","webpack:///../src/client/compiler/types/ObjectClass.ts","webpack:///../src/client/tools/StringTools.ts","webpack:///../src/client/compiler/types/PrimitiveTypes.ts","webpack:///../src/client/interpreter/Interpreter.ts","webpack:///../src/client/tools/ConvexHull.ts","webpack:///../src/client/compiler/types/boxedTypes/IntegerClass.ts","webpack:///../src/client/compiler/types/boxedTypes/LongClass.ts","webpack:///../src/client/compiler/types/boxedTypes/FloatClass.ts","webpack:///../src/client/compiler/types/boxedTypes/DoubleClass.ts","webpack:///../src/client/compiler/types/boxedTypes/CharacterClass.ts","webpack:///../src/client/compiler/types/boxedTypes/BooleanClass.ts","webpack:///../src/client/compiler/types/Array.ts","webpack:///../src/client/compiler/parser/SymbolTable.ts","webpack:///../src/client/compiler/types/Enum.ts","webpack:///../src/client/compiler/parser/CodeGenerator.ts","webpack:///../src/client/compiler/parser/Parser.ts","webpack:///../src/client/compiler/types/TypeTools.ts","webpack:///../src/client/compiler/parser/TypeResolver.ts","webpack:///../src/client/runtimelibrary/collections/ListIteratorImpl.ts","webpack:///../src/client/runtimelibrary/collections/ArrayList.ts","webpack:///../src/client/compiler/types/TypeHelper.ts","webpack:///../src/client/runtimelibrary/collections/Collection.ts","webpack:///../src/client/runtimelibrary/collections/Iterable.ts","webpack:///../src/client/runtimelibrary/collections/Iterator.ts","webpack:///../src/client/runtimelibrary/collections/List.ts","webpack:///../src/client/runtimelibrary/collections/Stack.ts","webpack:///../src/client/runtimelibrary/collections/Vector.ts","webpack:///../src/client/runtimelibrary/collections/Set.ts","webpack:///../src/client/runtimelibrary/collections/SetIteratorImpl.ts","webpack:///../src/client/runtimelibrary/collections/SetHelper.ts","webpack:///../src/client/runtimelibrary/collections/HashSet.ts","webpack:///../src/client/runtimelibrary/collections/LinkedHashSet.ts","webpack:///../src/client/runtimelibrary/collections/Queue.ts","webpack:///../src/client/runtimelibrary/collections/Deque.ts","webpack:///../src/client/runtimelibrary/collections/LinkedList.ts","webpack:///../src/client/runtimelibrary/Console.ts","webpack:///../src/client/main/gui/PrintManager.ts","webpack:///../src/client/interpreter/InputManager.ts","webpack:///../src/client/main/gui/Helper.ts","webpack:///../src/client/tools/KeyboardTool.ts","webpack:///../src/client/tools/GamepadTool.ts","webpack:///../src/client/runtimelibrary/graphics/FilledShapeDefaults.ts","webpack:///../src/client/runtimelibrary/graphics/World.ts","webpack:///../src/client/runtimelibrary/graphics/Actor.ts","webpack:///../src/client/runtimelibrary/graphics/Alignment.ts","webpack:///../src/client/tools/MatheTools.ts","webpack:///../src/client/runtimelibrary/graphics/Shape.ts","webpack:///../src/client/runtimelibrary/graphics/Bitmap.ts","webpack:///../src/client/runtimelibrary/graphics/FilledShape.ts","webpack:///../src/client/runtimelibrary/graphics/Circle.ts","webpack:///../src/client/runtimelibrary/graphics/Sector.ts","webpack:///../src/client/runtimelibrary/graphics/Arc.ts","webpack:///../src/client/runtimelibrary/graphics/Color.ts","webpack:///../src/client/runtimelibrary/graphics/Ellipse.ts","webpack:///../src/client/runtimelibrary/graphics/Group.ts","webpack:///../src/client/runtimelibrary/graphics/Key.ts","webpack:///../src/client/runtimelibrary/graphics/Polygon.ts","webpack:///../src/client/runtimelibrary/graphics/Rectangle.ts","webpack:///../src/client/runtimelibrary/graphics/RepeatType.ts","webpack:///../src/client/runtimelibrary/graphics/RoundedRectangle.ts","webpack:///../src/client/runtimelibrary/graphics/ScaleMode.ts","webpack:///../src/client/tools/SoundTools.ts","webpack:///../src/client/runtimelibrary/graphics/Sound.ts","webpack:///../src/client/runtimelibrary/graphics/PolygonStore.ts","webpack:///../src/client/runtimelibrary/graphics/Sprite.ts","webpack:///../src/client/runtimelibrary/graphics/SpriteLibraryEnum.ts","webpack:///../src/client/runtimelibrary/graphics/Text.ts","webpack:///../src/client/runtimelibrary/Input.ts","webpack:///../src/client/runtimelibrary/Gamepad.ts","webpack:///../src/client/runtimelibrary/Math.ts","webpack:///../src/client/runtimelibrary/MathToolsClass.ts","webpack:///../src/client/runtimelibrary/System.ts","webpack:///../src/client/runtimelibrary/SystemTools.ts","webpack:///../src/client/runtimelibrary/Timer.ts","webpack:///../src/client/runtimelibrary/collections/Map.ts","webpack:///../src/client/runtimelibrary/collections/MapHelper.ts","webpack:///../src/client/runtimelibrary/collections/HashMap.ts","webpack:///../src/client/runtimelibrary/graphics/Triangle.ts","webpack:///../src/client/runtimelibrary/graphics/LocalDateTime.ts","webpack:///../src/client/runtimelibrary/graphics/Line.ts","webpack:///../src/client/runtimelibrary/Vector2.ts","webpack:///../src/client/runtimelibrary/graphics/MouseListener.ts","webpack:///../src/client/runtimelibrary/network/WebSocketClient.ts","webpack:///../src/client/runtimelibrary/network/WebSocket.ts","webpack:///../src/client/runtimelibrary/graphics/Processing.ts","webpack:///../src/client/runtimelibrary/graphics/Turtle.ts","webpack:///../src/client/runtimelibrary/gng/GNGEreignisbehandlung.ts","webpack:///../src/client/runtimelibrary/gng/GNGZeichenfenster.ts","webpack:///../src/client/runtimelibrary/gng/GNGRechteck.ts","webpack:///../src/client/runtimelibrary/gng/GNGFarben.ts","webpack:///../src/client/runtimelibrary/gng/GNGBaseFigur.ts","webpack:///../src/client/runtimelibrary/gng/GNGAktionsempfaenger.ts","webpack:///../src/client/runtimelibrary/gng/GNGDreieck.ts","webpack:///../src/client/runtimelibrary/gng/GNGKreis.ts","webpack:///../src/client/runtimelibrary/gng/GNGTurtle.ts","webpack:///../src/client/runtimelibrary/gng/GNGText.ts","webpack:///../src/client/runtimelibrary/gng/GNGFigur.ts","webpack:///../src/client/runtimelibrary/Random.ts","webpack:///../src/client/runtimelibrary/graphics/Direction.ts","webpack:///../src/client/compiler/parser/Patcher.ts","webpack:///../src/client/runtimelibrary/graphics/KeyEvent.ts","webpack:///../src/client/main/gui/Formatter.ts","webpack:///../src/client/runtimelibrary/graphics/3d/Boxes3d.ts","webpack:///../src/client/runtimelibrary/graphics/3d/RobotCubeFactory.ts","webpack:///../src/client/runtimelibrary/graphics/3d/Robot.ts","webpack:///../src/client/runtimelibrary/database/ResultSet.ts","webpack:///../src/client/runtimelibrary/database/DatabaseStatement.ts","webpack:///../src/client/tools/database/sqljsWorkerSim.ts","webpack:///../src/client/tools/database/DatabaseTool.ts","webpack:///../src/client/tools/database/DatabaseLongPollingListener.ts","webpack:///../src/client/runtimelibrary/database/DatabasePreparedStatement.ts","webpack:///../src/client/runtimelibrary/database/Connection.ts","webpack:///../src/client/runtimelibrary/database/DatabaseManager.ts","webpack:///../src/client/compiler/parser/Module.ts","webpack:///../src/client/interpreter/DebuggerElement.ts","webpack:///../src/client/tools/HtmlTools.ts","webpack:///../src/client/compiler/AdhocCompiler.ts","webpack:///../src/client/interpreter/Evaluator.ts","webpack:///../src/client/workspace/Workspace.ts","webpack:///../src/client/main/gui/Dialog.ts","webpack:///../src/client/main/gui/WorkspaceImporter.ts","webpack:///../src/client/main/gui/Accordion.ts","webpack:///../src/client/interpreter/WatcherElement.ts","webpack:///../src/client/interpreter/Debugger.ts","webpack:///../src/client/main/gui/ActionManager.ts","webpack:///../src/client/compiler/parser/ProgramPrinter.ts","webpack:///../src/client/main/gui/console/ConsoleEntry.ts","webpack:///../src/client/main/gui/console/MyConsole.ts","webpack:///../src/client/main/gui/ErrorManager.ts","webpack:///../src/client/main/gui/HomeworkManager.ts","webpack:///../src/client/main/gui/BottomDiv.ts","webpack:///../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../src/client/compiler/types/DeclarationHelper.ts","webpack:///../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../src/client/main/gui/MyHoverProvider.ts","webpack:///../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../src/client/main/gui/MyReferenceProvider.ts","webpack:///../src/client/main/gui/MyColorProvider.ts","webpack:///../src/client/main/gui/Editor.ts","webpack:///../src/client/main/gui/MyJava.ts","webpack:///../src/client/main/gui/SpeedControl.ts","webpack:///../src/client/main/gui/ProgramControlButtons.ts","webpack:///../src/client/main/gui/diagrams/ZoomControl.ts","webpack:///../src/client/main/gui/diagrams/Diagram.ts","webpack:///../src/client/main/gui/diagrams/DiagramElement.ts","webpack:///../src/client/compiler/Compiler.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/ClassBox.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/ArrowHead.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/DiagramArrow.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/ClassDiagram.ts","webpack:///../src/client/main/gui/diagrams/objectdiagram/ListDiagram.ts","webpack:///../src/client/main/gui/diagrams/objectdiagram/ObjectDiagramVariant.ts","webpack:///../src/client/main/gui/diagrams/objectdiagram/ObjectDiagram.ts","webpack:///../src/client/main/gui/RightDiv.ts","webpack:///../src/client/embedded/EmbeddedSlider.ts","webpack:///../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../src/client/embedded/MainEmbedded.ts","webpack:///../src/client/main/gui/UserMenu.ts","webpack:///../src/client/main/gui/MainMenu.ts","webpack:///../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../src/client/main/gui/WorkspaceSettingsDialog.ts","webpack:///../src/client/main/gui/ProjectExplorer.ts","webpack:///../src/client/main/gui/Sliders.ts","webpack:///../src/client/main/gui/TeacherExplorer.ts","webpack:///../src/client/main/gui/ThemeManager.ts","webpack:///../src/client/main/Login.ts","webpack:///../src/client/main/gui/ViewModeController.ts","webpack:///../src/client/main/gui/WindowStateManager.ts","webpack:///../src/client/workspace/InconsistencyFixer.ts","webpack:///../src/client/main/Main.ts","webpack:///../src/client/repository/synchronize/SynchroWorkspace.ts","webpack:///../src/client/repository/synchronize/HistoryElement.ts","webpack:///../src/client/repository/synchronize/SynchronizationListElement.ts","webpack:///../src/client/repository/synchronize/RepositorySynchronizationManager.ts","webpack:///../src/client/repository/synchronize/RepositoryTool.ts","webpack:///../src/client/repository/update/RepositoryCreateManager.ts","webpack:///../src/client/repository/update/RepositorySettingsManager.ts","webpack:///../src/client/repository/update/RepositoryCheckoutManager.ts","webpack:///../src/client/main/IDEStarter.ts"],"sourcesContent":["import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++; //Test\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n        if(!url.startsWith(\"http\")){\r\n            url = \"servlet/\" + url;\r\n        }\r\n   \r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n                if (response.error != null) error = response.error;\r\n\r\n                if (error.indexOf(\"Not logged in\") >= 0) {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n                \r\n                console.log(\"Netzwerkfehler: \" + error);\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').show();\r\n    } else {\r\n        jQuery('.jo_network-busy').hide();\r\n    }\r\n}\r\n\r\n\r\n\r\n// export function newLogin(url: string, request: any, successCallback: (response: any) => void,\r\n//     errorCallback?: (message: string) => void) {\r\n\r\n//     if (credentials.username == null) return;\r\n//     let loginRequest: LoginRequest = {username: credentials.username, password: credentials.password};\r\n\r\n//     $.ajax({\r\n//         type: 'POST',\r\n//         data: JSON.stringify(loginRequest),\r\n//         contentType: 'application/json',\r\n//         url: \"login\",\r\n//         success: function (response: any) {\r\n//             if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n//             } else {\r\n//                 ajax(url, request, successCallback, errorCallback);\r\n//             }\r\n//             return;\r\n//         },\r\n//         error: function (jqXHR, message) {\r\n// //            ajax(url, request, successCallback, errorCallback);\r\n//         }\r\n//     });\r\n// }\r\n","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetWebSocketTokenResponse } from \"./Data.js\";\r\nimport { NetworkManager } from \"./NetworkManager.js\";\r\n\r\ntype SubscriptionMessageFromClient = {\r\n    command: number,  // 1 == \"subscribe\", 2 == \"disconnect\"\r\n    // 3 == \"keepalive request\"\r\n    token?: string   // when \"subscribe\"\r\n}\r\n\r\ntype SubscriptionMessageFromServer = {\r\n    command: number // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\r\n}\r\n\r\ntype NotifierState = \"connecting\" | \"connected\" | \"subscribed\" | \"disconnected\";\r\n\r\nexport class NotifierClient {\r\n\r\n    connection: WebSocket;\r\n    state: NotifierState;\r\n\r\n    constructor(private main: Main, private networkManager: NetworkManager){\r\n        this.connect();\r\n    }\r\n\r\n    connect() {\r\n        this.state = \"connecting\";\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/subscriptionwebsocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: SubscriptionMessageFromClient = {\r\n                    command: 1,   // \"subscribe\"\r\n                    token: response.token\r\n                }\r\n\r\n                this.state = \"connected\";\r\n                this.sendIntern(JSON.stringify(request));\r\n\r\n            }\r\n\r\n            let that = this;\r\n            setTimeout(() => {\r\n                if(this.state != \"subscribed\"){\r\n                    this.networkManager.forcedUpdateEvery = 1;\r\n                    this.networkManager.counterTillForcedUpdate = 1;\r\n                }\r\n            }, 7000);\r\n\r\n        });\r\n    }\r\n\r\n    disconnect(){\r\n        let request: SubscriptionMessageFromClient = {\r\n            command: 2   // \"disconnect\"\r\n        }\r\n\r\n        this.state = \"connected\";\r\n        this.sendIntern(JSON.stringify(request));\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (this.state != \"disconnected\") {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.state = \"disconnected\";\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: SubscriptionMessageFromClient = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\r\n        switch (response.command) {\r\n            case 1: // Acknoledge Connection\r\n                this.state = \"subscribed\";\r\n                break;\r\n            case 2: // Notify\r\n                this.networkManager.sendUpdates(() => {}, true);\r\n                break;\r\n            case 3: // disconnect\r\n                this.state = \"disconnected\";\r\n                break;\r\n            case 4: // keep alive response\r\n                break;\r\n        }\r\n    }\r\n\r\n    onError(error: Event) {\r\n        console.log(\"Fehler beim Notifier-Websocket\");\r\n    }\r\n\r\n}","export class CacheManager {\r\n    \r\n    fetchTemplateFromCache(databaseId: number, callback: (templateDump: Uint8Array) => void) {\r\n        if(databaseId == null){callback(null); return;}\r\n        let that = this;\r\n        if(!this.cacheAvailable()) callback(null);\r\n        this.getCache((cache) => {\r\n            cache.match(that.databaseIdToCacheIdentifier(databaseId)).then(\r\n                (value)=>{\r\n                    value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\r\n                })\r\n                .catch(() => callback(null));\r\n        })        \r\n    }\r\n\r\n    saveTemplateToCache(databaseId: number, templateDump: Uint8Array) {\r\n        if(!this.cacheAvailable()) return;\r\n        let that = this;\r\n        this.getCache((cache) => {\r\n            cache.put(that.databaseIdToCacheIdentifier(databaseId), new Response(templateDump));\r\n        })        \r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n    getCache(callback: (cache: Cache) => void) {\r\n        caches.open('my-cache').then(callback);\r\n    }\r\n\r\n    databaseIdToCacheIdentifier(databaseId: number): string {\r\n        return \"/onlineIdeTemplateDb\" + databaseId;\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax, PerformanceCollector } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, CollectPerformanceDataRequest, SetRepositorySecretRequest, SetRepositorySecretResponse, GetDatabaseRequest, getDatabaseResponse, DatabaseData, GetTemplateRequest, ObtainSqlTokenRequest, ObtainSqlTokenResponse, JAddStatementRequest, JAddStatementResponse, JRollbackStatementRequest, JRollbackStatementResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement, AccordionPanel } from \"../main/gui/Accordion.js\";\r\nimport {WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { NotifierClient } from \"./NotifierClient.js\";\r\nimport { CacheManager } from \"../tools/database/CacheManager.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    // sqlIdeURL = \"http://localhost:6500/servlet/\";\r\n    sqlIdeURL = \"https://www.sql-ide.de/servlet/\";\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 25;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 25;\r\n    forcedUpdateEvery: number = 25;\r\n    forcedUpdatesInARow: number = 0;\r\n\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    counterTillForcedUpdate: number;\r\n\r\n    notifierClient: NotifierClient;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                that.counterTillForcedUpdate--;\r\n                let doForceUpdate = that.counterTillForcedUpdate == 0;\r\n                if (doForceUpdate) {\r\n                    this.forcedUpdatesInARow++;\r\n                    that.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                    if (this.forcedUpdatesInARow > 50) {\r\n                        that.counterTillForcedUpdate = this.forcedUpdateEvery * 10;\r\n                    }\r\n                }\r\n\r\n\r\n                that.sendUpdates(() => { }, doForceUpdate, false);\r\n\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n            PerformanceCollector.sendDataToServer();\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    initializeNotifierClient(){\r\n        this.notifierClient = new NotifierClient(this.main, this);\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user == null || this.main.user.is_testuser) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let classDiagram = this.main.rightDiv?.classDiagram;\r\n        let userSettings = this.main.user.settings;\r\n\r\n        if (classDiagram?.dirty || this.main.userDataDirty) {\r\n\r\n            this.main.userDataDirty = false;\r\n            userSettings.classDiagram = classDiagram?.serialize();\r\n            this.sendUpdateUserSettings(() => { }, sendBeacon);\r\n            this.forcedUpdatesInARow = 0;\r\n        }\r\n\r\n        classDiagram.dirty = false;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n                this.forcedUpdatesInARow = 0;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    this.forcedUpdatesInARow = 0;\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 0,\r\n            currentWorkspaceId: this.main.currentWorkspace?.id,\r\n            getModifiedWorkspaces: sendIfNothingIsDirty\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty || this.errorHappened) {\r\n\r\n            if (sendBeacon) {\r\n                navigator.sendBeacon(\"sendUpdates\", JSON.stringify(request));\r\n            } else {\r\n\r\n                ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                    that.errorHappened = !response.success;\r\n                    if (!that.errorHappened) {\r\n\r\n                        // if (this.main.workspacesOwnerId == this.main.user.id) {\r\n                            if (response.workspaces != null) {\r\n                                that.updateWorkspaces(request, response);\r\n                            }\r\n                            if (response.filesToForceUpdate != null) {\r\n                                that.updateFiles(response.filesToForceUpdate);\r\n                            }\r\n\r\n                            if (callback != null) {\r\n                                callback();\r\n                                return;\r\n                            }\r\n                        // }\r\n                    } else {\r\n                        let message: string = \"Fehler beim Senden der Daten: \";\r\n                        if(response[\"message\"]) message += response[\"message\"];\r\n                        console.log(message);\r\n                    }\r\n                }, (message: string) => {\r\n                    that.errorHappened = true;\r\n                    console.log(\"Fehler beim Ajax-call: \" + message)\r\n                });\r\n\r\n            }\r\n\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(w: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            w.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let wd: WorkspaceData = w.getWorkspaceData(false);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            w.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            m.file.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\", null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 0\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 0\r\n            }\r\n\r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n\r\n        }, false);\r\n\r\n    }\r\n\r\n    sendSetSecret(repositoryId: number, read: boolean, write: boolean, callback: (response: SetRepositorySecretResponse) => void){\r\n        let request: SetRepositorySecretRequest = {repository_id: repositoryId, newSecretRead: read, newSecretWrite: write};\r\n\r\n        ajax(\"setRepositorySecret\", request, (response: SetRepositorySecretResponse) => {\r\n            callback(response)\r\n        }, (message) => {alert(message)});\r\n\r\n    }\r\n\r\n    sendCreateRepository(ws: Workspace, publish_to: number, repoName: string, repoDescription: string, callback: (error: string, repository_id?: number) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request = {\r\n                workspace_id: ws.id,\r\n                publish_to: publish_to,\r\n                name: repoName,\r\n                description: repoDescription\r\n            }\r\n\r\n            ajax(\"createRepository\", request, (response: { success: boolean, message?: string, repository_id?: number }) => {\r\n                ws.moduleStore.getModules(false).forEach(m => {\r\n                    m.file.is_copy_of_id = m.file.id;\r\n                    m.file.repository_file_version = 1;\r\n                })\r\n                ws.repository_id = response.repository_id;\r\n                ws.has_write_permission_to_repository = true;\r\n                callback(response.message, response.repository_id)\r\n            }, callback);\r\n\r\n        }, true);\r\n\r\n\r\n    }\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        if (sendBeacon) {\r\n            navigator.sendBeacon(\"updateUserSettings\", JSON.stringify(request));\r\n        } else {\r\n            ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n                if (response.success) {\r\n                    callback(null);\r\n                } else {\r\n                    callback(\"Netzwerkfehler!\");\r\n                }\r\n            }, callback);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    private updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (fileIdsSended.indexOf(fileId) < 0 && module.file.text != remoteFileData.text) {\r\n                        module.file.text = remoteFileData.text;\r\n                        module.model.setValue(remoteFileData.text);\r\n\r\n                        module.file.saved = true;\r\n                        module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                    }\r\n                    module.file.version = remoteFileData.version;\r\n                }\r\n\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    private updateFiles(filesFromServer: FileData[]) {\r\n        let fileIdToLocalModuleMap: Map<number, Module> = new Map();\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            for (let module of workspace.moduleStore.getModules(false)) {\r\n                fileIdToLocalModuleMap[module.file.id] = module;\r\n            }\r\n        }\r\n\r\n        for (let remoteFile of filesFromServer) {\r\n            let module = fileIdToLocalModuleMap[remoteFile.id];\r\n            if (module != null && module.file.text != remoteFile.text) {\r\n                module.file.text = remoteFile.text;\r\n                module.model.setValue(remoteFile.text);\r\n                module.file.saved = true;\r\n                module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                module.file.version = remoteFile.version;\r\n            }\r\n        }\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false): Workspace {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.repository_id = remoteWorkspace.repository_id;\r\n        w.has_write_permission_to_repository = remoteWorkspace.has_write_permission_to_repository;\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n        w.moduleStore.dirty = true;\r\n\r\n        if(remoteWorkspace.settings != null && remoteWorkspace.settings.startsWith(\"{\")){\r\n            let remoteWorkspaceSettings:WorkspaceSettings = JSON.parse(remoteWorkspace.settings);\r\n            w.settings = remoteWorkspaceSettings;\r\n            w.moduleStore.setAdditionalLibraries(remoteWorkspaceSettings.libraries);\r\n        }\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n        \r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: remoteWorkspace.repository_id == null ? \"workspace\" : \"repository\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        if(w.repository_id != null){\r\n            w.renderSynchronizeButton(panelElement);\r\n        }\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n        return w;\r\n    }\r\n\r\n    private createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: true,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            is_copy_of_id: remoteFile.is_copy_of_id,\r\n            repository_file_version: remoteFile.repository_file_version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n    fetchDatabaseAndToken(code: string, callback:(database: DatabaseData, token: string, error: string) => void){\r\n        let request: ObtainSqlTokenRequest = {code: code};\r\n\r\n        ajax(\"obtainSqlToken\", request, (response: ObtainSqlTokenResponse) => {\r\n            if (response.success) {\r\n                this.fetchDatabase(response.token, (database, error) => {\r\n                    callback(database, response.token, error);\r\n                })                \r\n            } else {\r\n                callback(null, null, response.message);\r\n            }\r\n        }, (errormessage) => {\r\n            callback(null, null, errormessage);\r\n        })\r\n    }\r\n\r\n    private fetchDatabase(token: string, callback: (database: DatabaseData, error: string) => void) {\r\n\r\n        let cacheManager: CacheManager = new CacheManager();\r\n\r\n        let request: GetDatabaseRequest = {\r\n            token: token\r\n        }\r\n\r\n        ajax(this.sqlIdeURL +  \"jGetDatabase\", request, (response: getDatabaseResponse) => {\r\n            if (response.success) {\r\n\r\n                let database = response.database;\r\n                \r\n                cacheManager.fetchTemplateFromCache(database.based_on_template_id, (templateDump: Uint8Array) => {\r\n\r\n                    if (templateDump != null) {\r\n                        //@ts-ignore\r\n                        database.templateDump = pako.inflate(templateDump);\r\n                        callback(database, null);\r\n                        return;\r\n                    } else {\r\n                        if (database.based_on_template_id == null) {\r\n                            callback(database, null);\r\n                            return\r\n                        }\r\n                        this.fetchTemplate(token, (template) => {\r\n                            if (template != null) {\r\n                                cacheManager.saveTemplateToCache(database.based_on_template_id, template);\r\n                                // @ts-ignore\r\n                                database.templateDump = pako.inflate(template);\r\n                                callback(database, null);\r\n                                return;\r\n                            } else {\r\n                                callback(null, \"Konnte das Template nicht laden.\");\r\n                                return;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                callback(null, \"Netzwerkfehler!\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    private fetchTemplate(token: string, callback: (template: Uint8Array) => void) {\r\n        let request: GetTemplateRequest = {\r\n            token: token\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: this.sqlIdeURL + \"jGetTemplate\",\r\n            xhrFields: { responseType: 'arraybuffer' },\r\n            success: function (response: any) {\r\n                callback(new Uint8Array(response));\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert(\"Konnte das Template nicht laden.\");\r\n                callback(null);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public addDatabaseStatement(token: string, version_before: number, statements: string[], \r\n        callback: (statementsBefore: string[], new_version: number, message: string) => void){\r\n\r\n        let request: JAddStatementRequest = {\r\n            token: token,\r\n            version_before: version_before,\r\n            statements: statements\r\n        }\r\n\r\n        ajax(this.sqlIdeURL +  \"jAddDatabaseStatement\", request, (response: JAddStatementResponse) => {\r\n            callback(response.statements_before, response.new_version, response.message);\r\n        }, (message) => {callback([], 0, message)})\r\n\r\n\r\n    }\r\n    \r\n    public rollbackDatabaseStatement(token: string, current_version: number, \r\n        callback: (message: string) => void){\r\n\r\n        let request: JRollbackStatementRequest = {\r\n            token: token,\r\n            current_version: current_version\r\n        }\r\n\r\n        ajax(this.sqlIdeURL +  \"jRollbackDatabaseStatement\", request, (response: JRollbackStatementResponse) => {\r\n            callback(response.message);\r\n        })\r\n\r\n\r\n    }\r\n    \r\n\r\n\r\n}","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    longConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordPrint,\r\n    keywordPrintln,\r\n    keywordClass,\r\n    keywordThis,\r\n    keywordSuper,\r\n    keywordNew,\r\n    keywordInterface,\r\n    keywordEnum,\r\n    keywordVoid,\r\n    keywordAbstract,\r\n    keywordPublic,\r\n    keywordProtected,\r\n    keywordPrivate,\r\n    keywordTransient,\r\n    keywordStatic,\r\n    keywordExtends,\r\n    keywordImplements,\r\n    keywordWhile,\r\n    keywordDo,\r\n    keywordFor,\r\n    keywordSwitch,\r\n    keywordCase,\r\n    keywordDefault,\r\n    keywordIf,\r\n    keywordThen,\r\n    keywordElse,\r\n    keywordReturn,\r\n    keywordBreak,\r\n    keywordContinue,\r\n    keywordNull,\r\n    keywordFinal,\r\n    keywordInstanceof,\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // operators\r\n    doubleMinus, doublePlus,\r\n\r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    equal, // ==\r\n    notEqual, // !=\r\n    assignment, // =\r\n    plusAssignment, // +=\r\n    minusAssignment, // -=\r\n    multiplicationAssignment, // *=\r\n    divisionAssignment, // /=\r\n    moduloAssignment, // /%=\r\n    and, or,   // &&, ||\r\n    ampersand, // &\r\n\r\n    ANDAssigment,\r\n    XORAssigment,\r\n    ORAssigment,\r\n    shiftLeftAssigment,\r\n    shiftRightAssigment,\r\n    shiftRightUnsignedAssigment,\r\n    OR, // |\r\n    XOR, // ^\r\n    // AND, // & see TokenType.ampersand above\r\n    tilde, // ~\r\n    shiftRightUnsigned, // >>>\r\n    shiftRight, // >>\r\n    shiftLeft, // <<\r\n\r\n    ternaryOperator,\r\n    colon, //:\r\n    ellipsis, // ...\r\n\r\n    not,    // !\r\n    \r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    // used by parser\r\n    negation, \r\n    referenceElement, // for arrays\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    binaryOp, // +, -, *, <=, ...\r\n    unaryOp, // ! and - \r\n    localVariableDeclaration,\r\n    heapVariableDeclaration,\r\n    pushLocalVariableToStack, // push value of a local variable to stack\r\n    popAndStoreIntoVariable,\r\n    pushFromHeapToStack, // push value from heap to stack\r\n    pushAttribute, // value of a attribute to stack\r\n    pushArrayLength, \r\n    pushConstant, // literal\r\n    pushStaticClassObject, // push class-Object to stack (which holds static attributes)\r\n    pushStaticAttribute, // push static attribute to stack\r\n    pushStaticAttributeIntrinsic, // push static attribute to stack\r\n    checkCast, // check if object may get casted to class or interface\r\n    castValue, // cast value on top of stack to other type\r\n    selectArrayElement, // select Element from Array (e.g. a[20])\r\n    callMethod,\r\n    callMainMethod,\r\n    processPostConstructorCallbacks, \r\n    callInputMethod, // Methods of Input class\r\n    makeEllipsisArray,\r\n    decreaseStackpointer, // decrease stack-pointer, nothing else\r\n    initStackframe,\r\n    closeStackframe,\r\n    increaseSpaceForLocalVariables,\r\n    return,\r\n    newObject,\r\n    jumpIfFalse,\r\n    jumpIfTrue,\r\n    jumpIfFalseAndLeaveOnStack,\r\n    jumpIfTrueAndLeaveOnStack,\r\n    jumpAlways,\r\n    noOp, // acts as jump destination\r\n    incrementDecrementBefore, // ++i, --i\r\n    incrementDecrementAfter, // i++, i--\r\n    programEnd,\r\n    beginArray, // push empty array to stack\r\n    addToArray, // pop element form stack and add it to array (on second stack position)\r\n    pushEmptyArray, // push multidimensional empty array to stack\r\n    forLoopOverCollection,\r\n\r\n    // additional AST node types\r\n    type, // e.g. int[][]\r\n    typeParameter, // e.g. <E extends String implements Comparable<E>>\r\n    attributeDeclaration,\r\n    methodDeclaration,\r\n    parameterDeclaration,\r\n    superConstructorCall,\r\n    constructorCall,       // call constructor with this() inside another constructor\r\n    newArray,\r\n    arrayInitialization,\r\n    print,\r\n    println, \r\n    pushEnumValue,\r\n    initializeEnumValue, \r\n    scopeNode,\r\n    returnIfDestroyed,\r\n    extendedForLoopInit,\r\n    extendedForLoopCheckCounterAndGetElement,\r\n    setPauseDuration,\r\n    pause\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordClass]: \"class\",\r\n    [TokenType.keywordThis]: \"this\",\r\n    [TokenType.keywordSuper]: \"super\",\r\n    [TokenType.keywordNew]: \"new\",\r\n    [TokenType.keywordInterface]: \"interface\",\r\n    [TokenType.keywordEnum]: \"enum\",\r\n    [TokenType.keywordVoid]: \"void\",\r\n    [TokenType.keywordAbstract]: \"abstract\",\r\n    [TokenType.keywordPublic]: \"public\",\r\n    [TokenType.keywordProtected]: \"protected\",\r\n    [TokenType.keywordPrivate]: \"private\",\r\n    [TokenType.keywordTransient]: \"transient\",\r\n    [TokenType.keywordStatic]: \"static\",\r\n    [TokenType.keywordExtends]: \"extends\",\r\n    [TokenType.keywordImplements]: \"implements\",\r\n    [TokenType.keywordWhile]: \"while\",\r\n    [TokenType.keywordDo]: \"do\",\r\n    [TokenType.keywordFor]: \"for\",\r\n    [TokenType.keywordSwitch]: \"switch\",\r\n    [TokenType.keywordCase]: \"case\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordThen]: \"then\",\r\n    [TokenType.keywordElse]: \"else\",\r\n    [TokenType.keywordReturn]: \"return\",\r\n    [TokenType.keywordBreak]: \"break\",\r\n    [TokenType.keywordContinue]: \"continue\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordFinal]: \"final\",\r\n    [TokenType.keywordInstanceof]: \"instanceof\",\r\n    [TokenType.keywordPrint]: \"print\",\r\n    [TokenType.keywordPrintln]: \"println\",\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.doubleMinus]: \"--\", \r\n    [TokenType.doublePlus]: \"++\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.equal]: \"==\", // ==\r\n    [TokenType.notEqual]: \"!=\", // !=\r\n    [TokenType.assignment]: \"=\", // =\r\n    [TokenType.plusAssignment]: \"+=\", // +=\r\n    [TokenType.minusAssignment]: \"-=\", // -=\r\n    [TokenType.multiplicationAssignment]: \"*=\", // *=\r\n    [TokenType.divisionAssignment]: \"/=\", // /=\r\n    [TokenType.moduloAssignment]: \"%=\",\r\n    [TokenType.ampersand]: \"&\", \r\n    [TokenType.and]: \"&&\", \r\n    [TokenType.or]: \"||\", \r\n    [TokenType.not]: \"!\", \r\n\r\n    [TokenType.ANDAssigment]: \"&=\",\r\n    [TokenType.XORAssigment]: \"^=\",\r\n    [TokenType.ORAssigment]: \"|=\",\r\n    [TokenType.shiftLeftAssigment]: \"<<=\",\r\n    [TokenType.shiftRightAssigment]: \">>=\",\r\n    [TokenType.shiftRightUnsignedAssigment]: \">>>=\",\r\n    // [TokenType.AND]: \"&\", \r\n    [TokenType.OR]: \"|\",\r\n    [TokenType.XOR]: \"^\",\r\n    [TokenType.tilde]: \"~\",\r\n    [TokenType.shiftLeft]: \"<<\",\r\n    [TokenType.shiftRight]: \">>\",\r\n    [TokenType.shiftRightUnsigned]: \">>>\",\r\n\r\n\r\n    [TokenType.ternaryOperator]: \"?\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n\r\n    [TokenType.colon]: \":\", // ;\r\n    [TokenType.ellipsis]: \"...\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.assignment,\r\n    \"&\": TokenType.and,\r\n    \"|\": TokenType.or,\r\n    \"!\": TokenType.not,\r\n    \"?\": TokenType.ternaryOperator,\r\n\r\n    \"^\": TokenType.XOR,\r\n    \"~\": TokenType.tilde,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    '...': TokenType.ellipsis,\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"class\": TokenType.keywordClass,\r\n    \"this\": TokenType.keywordThis,\r\n    \"super\": TokenType.keywordSuper,\r\n    \"new\": TokenType.keywordNew,\r\n    \"interface\": TokenType.keywordInterface,\r\n    \"enum\": TokenType.keywordEnum,\r\n    \"void\": TokenType.keywordVoid,\r\n    \"abstract\": TokenType.keywordAbstract,\r\n    \"public\": TokenType.keywordPublic,\r\n    \"protected\": TokenType.keywordProtected,\r\n    \"private\": TokenType.keywordPrivate,\r\n    \"transient\": TokenType.keywordTransient,\r\n    \"static\": TokenType.keywordStatic,\r\n    \"extends\": TokenType.keywordExtends,\r\n    \"implements\": TokenType.keywordImplements,\r\n    \"while\": TokenType.keywordWhile,\r\n    \"do\": TokenType.keywordDo,\r\n    \"for\": TokenType.keywordFor,\r\n    \"switch\": TokenType.keywordSwitch,\r\n    \"case\": TokenType.keywordCase,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"if\": TokenType.keywordIf,\r\n    \"then\": TokenType.keywordThen,\r\n    \"else\": TokenType.keywordElse,\r\n    \"return\": TokenType.keywordReturn,\r\n    \"break\": TokenType.keywordBreak,\r\n    \"continue\": TokenType.keywordContinue,\r\n    \"null\": TokenType.keywordNull,\r\n    \"final\": TokenType.keywordFinal,\r\n    \"instanceof\": TokenType.keywordInstanceof,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"print\": TokenType.keywordPrint,\r\n    \"println\": TokenType.keywordPrintln,\r\n    // \"int\": TokenType.keywordInt,\r\n    // \"boolean\": TokenType.keywordBoolean,\r\n    // \"String\": TokenType.keywordString,\r\n    // \"float\": TokenType.keywordFloat,\r\n    // \"char\": TokenType.keywordChar\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\nimport { text } from \"express\";\r\nimport { ColorLexer } from \"./ColorLexer.js\";\r\nimport { ColorHelper } from \"../../runtimelibrary/graphics/ColorHelper.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n\r\n    errorList: Error[];\r\n    colorInformation: monaco.languages.IColorInformation[];\r\n    colorLexer: ColorLexer = new ColorLexer();\r\n\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n    colorIndices: number[];\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string, colorInformation: monaco.languages.IColorInformation[] } {\r\n\r\n        this.input = input.replace(\"\\uc2a0\", \" \");\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.colorInformation = [];\r\n        this.colorIndices = []; // indices of identifier 'Color' inside tokenList\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null, colorInformation: [] };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        this.processColorIndices();\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError,\r\n            colorInformation: this.colorInformation\r\n        };\r\n\r\n    }\r\n\r\n    processColorIndices() {\r\n\r\n        for (let colorIndex of this.colorIndices) {\r\n\r\n            // new Color(100, 100, 100, 0.1)\r\n            // new Color(100, 100, 100)\r\n            // Color.red\r\n\r\n            let colorToken = this.tokenList[colorIndex];\r\n            let previousToken = this.getLastNonSpaceToken(colorIndex)\r\n\r\n            if (previousToken?.tt == TokenType.keywordNew) {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 7);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.leftBracket, TokenType.integerConstant, TokenType.comma,\r\n                TokenType.integerConstant, TokenType.comma, TokenType.integerConstant,\r\n                TokenType.rightBracket])) {\r\n                    this.colorInformation.push({\r\n                        color: {\r\n                            red: <number>nextTokens[1].value / 255,\r\n                            green: <number>nextTokens[3].value / 255,\r\n                            blue: <number>nextTokens[5].value / 255,\r\n                            alpha: 1\r\n                        },\r\n                        range: {\r\n                            startLineNumber: previousToken.position.line, startColumn: previousToken.position.column,\r\n                            endLineNumber: nextTokens[6].position.line, endColumn: nextTokens[6].position.column + 1\r\n                        }\r\n                    })\r\n                }\r\n            } else {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 2);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.dot, TokenType.identifier])) {\r\n                    let colorIdentifier = <string>nextTokens[1].value;\r\n                    let colorValue = ColorHelper.predefinedColors[colorIdentifier];\r\n                    if (colorValue != null) {\r\n                        this.colorInformation.push({\r\n                            color: {\r\n                                red: (colorValue >> 16) / 255,\r\n                                green: ((colorValue >> 8) & 0xff) / 255,\r\n                                blue: (colorValue & 0xff) / 255,\r\n                                alpha: 1\r\n                            }, range: {\r\n                                startLineNumber: colorToken.position.line, startColumn: colorToken.position.column,\r\n                                endLineNumber: nextTokens[1].position.line, endColumn: nextTokens[1].position.column + colorIdentifier.length\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    compareTokenTypes(tokenList: Token[], tokenTypeList: TokenType[]) {\r\n        if (tokenList.length != tokenTypeList.length) return false;\r\n        for (let i = 0; i < tokenList.length; i++) {\r\n            if (tokenList[i].tt != tokenTypeList[i]) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getNextNonSpaceTokens(tokenIndex: number, count: number): Token[] {\r\n        let tokens: Token[] = [];\r\n        let d = tokenIndex;\r\n        while (tokens.length < count && d + 1 < this.tokenList.length) {\r\n            let foundToken = this.tokenList[d + 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                tokens.push(foundToken);\r\n            }\r\n            d++;\r\n        }\r\n\r\n        return tokens;\r\n\r\n    }\r\n\r\n    getLastNonSpaceToken(tokenIndex: number) {\r\n        let d = tokenIndex;\r\n        while (d - 1 > 0) {\r\n            let foundToken = this.tokenList[d - 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                return foundToken;\r\n            }\r\n            d--;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.and:\r\n                    if (this.nextChar == \"&\") {\r\n                        this.pushToken(TokenType.and, \"&&\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ANDAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.ampersand, \"&\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.or:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ORAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.OR, \"|\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.XOR:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.XORAssigment, \"^=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.XOR, \"^\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.multiplication:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.multiplicationAssignment, \"*=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.multiplication, \"*\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.not:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.notEqual, \"!=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.not, \"!\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.divisionAssignment, \"/=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    } else if (this.nextChar == '/') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.modulo:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.moduloAssignment, \"%=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.modulo, \"/\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.plus:\r\n                    if (this.nextChar == '+') {\r\n                        this.pushToken(TokenType.doublePlus, '++');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.plusAssignment, '+=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.plus, '+');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '<') {\r\n                        this.lexShiftLeft();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '>') {\r\n                        this.lexShiftRight();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.dot:\r\n                    if (this.nextChar == '.' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == \".\") {\r\n                        this.pushToken(TokenType.ellipsis, '...');\r\n                        this.next();\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.dot, '.');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n\r\n                case TokenType.assignment:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.equal, '==');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.assignment, '=');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.minus:\r\n                    if (this.nextChar == '-') {\r\n                        this.pushToken(TokenType.doubleMinus, '--');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    }\r\n                    else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.minusAssignment, '-=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexCharacterConstant();\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    // triple double quote?\r\n                    if (this.nextChar == \"\\\"\" && this.pos + 3 < this.input.length && this.input[this.pos + 2] == \"\\\"\") {\r\n                        this.lexTripleQuoteStringConstant();\r\n                    } else {\r\n                        this.lexStringConstant();\r\n                    }\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n    lexShiftRight() {\r\n        this.next(); // Consume first > of >>\r\n\r\n        if (this.nextChar == \">\") {\r\n            this.lexShiftRightUnsigned();\r\n        } else if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightAssigment, \">>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRight, \">>\");\r\n            this.next(); // Consume second >\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftRightUnsigned() {\r\n        this.next(); // Consume second > of >>>\r\n\r\n        if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightUnsignedAssigment, \">>>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRightUnsigned, \">>>\");\r\n            this.next(); // Consume next\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftLeft() {\r\n        this.next(); // Consume first < of <<\r\n\r\n        if (this.nextChar == '=') {\r\n            this.pushToken(TokenType.shiftLeftAssigment, \"<<=\")\r\n            this.next(); // Consume second <\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftLeft, \"<<\")\r\n            this.next(); // Consume second <\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                char = this.parseStringLiteralEscapeCharacter();   \r\n                text += char;\r\n                continue;             \r\n            } else if (char == '\"') {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n\r\n        let color = this.colorLexer.getColorInfo(text);\r\n\r\n        if (color != null) {\r\n            this.colorInformation.push({\r\n                color: color,\r\n                range: { startLineNumber: line, endLineNumber: line, startColumn: column + 1, endColumn: this.column - 1 }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    lexTripleQuoteStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let StringLines: string[] = [];\r\n\r\n        // skip \"\"\" and all characters in same line\r\n\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n\r\n        let restOfLine: string = \"\";\r\n        while ([\"\\n\", \"\\r\"].indexOf(this.currentChar) < 0 && this.currentChar != endChar) {\r\n            restOfLine += this.currentChar;\r\n            this.next();\r\n        }\r\n\r\n        restOfLine = restOfLine.trim();\r\n        if(restOfLine.length > 0 && !restOfLine.startsWith(\"//\") && !restOfLine.startsWith(\"/*\")){\r\n            this.pushError('Eine Java-Multiline-Stringkonstante beginnt immer mit \"\"\" und einem nachfolgenden Zeilenumbruch. Alle nach \"\"\" folgenden Zeichen werden überlesen!', restOfLine.length + 3);\r\n        }\r\n\r\n        if(this.currentChar == '\\r'){\r\n            this.next();\r\n        }\r\n\r\n        if(this.currentChar == '\\n'){\r\n            this.next();\r\n            this.line++;\r\n            this.column = 1;\r\n        }\r\n\r\n        let currentStringLine: string = \"\";\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                currentStringLine += this.parseStringLiteralEscapeCharacter();\r\n            } else if (char == '\"' && this.nextChar == '\"' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == '\"') {\r\n                this.next();\r\n                this.next();\r\n                this.next();\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else if (char == endChar) {\r\n                let length = 0;\r\n                for(let s of StringLines) length += s.length;\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Textende erreicht.',length, \"error\", line, column);\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else \r\n            if(char == \"\\r\"){\r\n                this.next();\r\n            } else\r\n            if (char == \"\\n\"){\r\n                StringLines.push(currentStringLine);\r\n                currentStringLine = \"\";\r\n                this.line++;\r\n                this.column = 1;\r\n                this.next();\r\n                continue;\r\n            } else {\r\n                currentStringLine += char;\r\n            }\r\n            this.next();\r\n        }\r\n\r\n        if(StringLines.length == 0) return;\r\n        let lastLine = StringLines.pop();\r\n        let indent = 0;\r\n        while(lastLine.length > indent && lastLine.charAt(indent) == \" \"){\r\n            indent++;\r\n        }\r\n\r\n        let text: string = \"\"; \r\n        text = StringLines.map(s => s.substring(indent)).join(\"\\n\");\r\n\r\n        this.pushToken(TokenType.stringConstant, text, this.line, this.column, text.length + 2);\r\n\r\n    }\r\n\r\n    parseStringLiteralEscapeCharacter(): string {\r\n        this.next(); // skip \\\r\n        if(this.currentChar == \"u\"){\r\n            let hex: string = \"\";\r\n            this.next();\r\n            while(\"abcdef0123456789\".indexOf(this.currentChar) >= 0 && hex.length < 4){\r\n                hex += this.currentChar;\r\n                this.next();\r\n            }\r\n            if(hex.length < 4){\r\n                this.pushError('Die Escape-Sequenz \\\\u' + hex + ' gibt es nicht.', 1 + hex.length);\r\n                return \"\";\r\n            } else {\r\n                return String.fromCodePoint(parseInt(hex,16));\r\n            }\r\n        } else if(EscapeSequenceList[this.currentChar] != null){\r\n            let c = EscapeSequenceList[this.currentChar];\r\n            this.next();\r\n            return c;\r\n        } else {\r\n            this.pushError('Die Escape-Sequenz \\\\' + this.currentChar + ' gibt es nicht.', 2);\r\n            this.next();\r\n            return \"\";\r\n        }\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"//\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        } else if (this.currentChar == '+') {\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt = TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n        if (radix == 16 && this.column - column == 8) {\r\n            this.colorInformation.push({\r\n                color: {\r\n                    red: (value >> 16) / 255,\r\n                    green: ((value >> 8) & 0xff) / 255,\r\n                    blue: (value & 0xff) / 255,\r\n                    alpha: 1\r\n                },\r\n                range: {\r\n                    startLineNumber: line, endLineNumber: line, startColumn: column, endColumn: this.column\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n\r\n        this.next(); // consume @\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                case TokenType.keywordPrint:\r\n                case TokenType.keywordPrintln:\r\n                    if (this.nonSpaceLastTokenType == TokenType.dot) {\r\n                        this.pushToken(TokenType.identifier, text, line, column);\r\n                    } else {\r\n                        this.pushToken(tt, text, line, column);\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (text == 'Color') {\r\n            this.colorIndices.push(this.tokenList.length);\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","export class ColorLexer {\r\n    hexColorRegExp = /^#([a-fA-F0-9]{6})$/;\r\n    rgbColorRegExp = /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/;\r\n    rgbaColorRegExp = /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d*(?:\\.\\d+)?)\\)$/;\r\n\r\n    getColorInfo(s: string): monaco.languages.IColor {\r\n\r\n        if(s.startsWith('#')){\r\n            let m1 = s.match(this.hexColorRegExp);\r\n            if(m1 == null) return null;\r\n\r\n            let value = Number.parseInt(m1[1], 16);\r\n            return {\r\n                red: (value >> 16)/255,\r\n                green: ((value >> 8) & 0xff) / 255,\r\n                blue: (value & 0xff)/255,\r\n                alpha: 1\r\n            }\r\n\r\n        } else if(s.startsWith('rgb')){\r\n\r\n            if(s.startsWith('rgba')){\r\n                let m2 = s.match(this.rgbaColorRegExp);\r\n                if(m2 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m2[1])/255,\r\n                    green: Number.parseInt(m2[2]) / 255,\r\n                    blue: Number.parseInt(m2[3])/255,\r\n                    alpha: Number.parseFloat(m2[4])\r\n                }\r\n            } else {\r\n                let m3 = s.match(this.rgbColorRegExp);\r\n                if(m3 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m3[1])/255,\r\n                    green: Number.parseInt(m3[2]) / 255,\r\n                    blue: Number.parseInt(m3[3])/255,\r\n                    alpha: 1\r\n                }\r\n    \r\n\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n}","export class ColorHelper {\r\n\r\n    static predefinedColors = {\r\n        \"aliceblue\": 0xF0F8FF,\r\n        \"antiquewhite\": 0xFAEBD7,\r\n        \"aqua\": 0x00FFFF,\r\n        \"aquamarine\": 0x7FFFD4,\r\n        \"azure\": 0xF0FFFF,\r\n        \"beige\": 0xF5F5DC,\r\n        \"bisque\": 0xFFE4C4,\r\n        \"black\": 0x000000,\r\n        \"blanchedAlmond\": 0xFFEBCD,\r\n        \"blue\": 0x0000FF,\r\n        \"blueviolet\": 0x8A2BE2,\r\n        \"brown\": 0xA52A2A,\r\n        \"burlywood\": 0xDEB887,\r\n        \"cadetblue\": 0x5F9EA0,\r\n        \"chartreuse\": 0x7FFF00,\r\n        \"chocolate\": 0xD2691E,\r\n        \"coral\": 0xFF7F50,\r\n        \"cornflowerblue\": 0x6495ED,\r\n        \"cornsilk\": 0xFFF8DC,\r\n        \"crimson\": 0xDC143C,\r\n        \"cyan\": 0x00FFFF,\r\n        \"darkblue\": 0x00008B,\r\n        \"darkcyan\": 0x008B8B,\r\n        \"darkgoldenrod\": 0xB8860B,\r\n        \"darkgray\": 0xA9A9A9,\r\n        \"darkgrey\": 0xA9A9A9,\r\n        \"darkgreen\": 0x006400,\r\n        \"darkkhaki\": 0xBDB76B,\r\n        \"darkmagenta\": 0x8B008B,\r\n        \"darkolivegreen\": 0x556B2F,\r\n        \"darkorange\": 0xFF8C00,\r\n        \"darkorchid\": 0x9932CC,\r\n        \"darkred\": 0x8B0000,\r\n        \"darksalmon\": 0xE9967A,\r\n        \"darkseagreen\": 0x8FBC8F,\r\n        \"darkslateblue\": 0x483D8B,\r\n        \"darkslategray\": 0x2F4F4F,\r\n        \"darkslategrey\": 0x2F4F4F,\r\n        \"darkturquoise\": 0x00CED1,\r\n        \"darkviolet\": 0x9400D3,\r\n        \"deeppink\": 0xFF1493,\r\n        \"deepskyblue\": 0x00BFFF,\r\n        \"dimgray\": 0x696969,\r\n        \"dimgrey\": 0x696969,\r\n        \"dodgerblue\": 0x1E90FF,\r\n        \"firebrick\": 0xB22222,\r\n        \"floralwhite\": 0xFFFAF0,\r\n        \"forestgreen\": 0x228B22,\r\n        \"fuchsia\": 0xFF00FF,\r\n        \"gainsboro\": 0xDCDCDC,\r\n        \"ghostwhite\": 0xF8F8FF,\r\n        \"gold\": 0xFFD700,\r\n        \"goldenrod\": 0xDAA520,\r\n        \"gray\": 0x808080,\r\n        \"grau\": 0x808080,\r\n        \"green\": 0x008000,\r\n        \"greenyellow\": 0xADFF2F,\r\n        \"honeydew\": 0xF0FFF0,\r\n        \"hotpink\": 0xFF69B4,\r\n        \"indianred\": 0xCD5C5C,\r\n        \"indigo\": 0x4B0082,\r\n        \"ivory\": 0xFFFFF0,\r\n        \"khaki\": 0xF0E68C,\r\n        \"lavender\": 0xE6E6FA,\r\n        \"lavenderblush\": 0xFFF0F5,\r\n        \"lawngreen\": 0x7CFC00,\r\n        \"lemonchiffon\": 0xFFFACD,\r\n        \"lightblue\": 0xADD8E6,\r\n        \"lightcoral\": 0xF08080,\r\n        \"lightcyan\": 0xE0FFFF,\r\n        \"lightgoldenrodyellow\": 0xFAFAD2,\r\n        \"lightgray\": 0xD3D3D3,\r\n        \"lightgrey\": 0xD3D3D3,\r\n        \"lightgreen\": 0x90EE90,\r\n        \"lightpink\": 0xFFB6C1,\r\n        \"lightsalmon\": 0xFFA07A,\r\n        \"lightseagreen\": 0x20B2AA,\r\n        \"lightskyblue\": 0x87CEFA,\r\n        \"lightslategray\": 0x778899,\r\n        \"lightslategrey\": 0x778899,\r\n        \"lightsteelblue\": 0xB0C4DE,\r\n        \"lightyellow\": 0xFFFFE0,\r\n        \"lime\": 0x00FF00,\r\n        \"limegreen\": 0x32CD32,\r\n        \"linen\": 0xFAF0E6,\r\n        \"magenta\": 0xFF00FF,\r\n        \"maroon\": 0x800000,\r\n        \"mediumaquamarine\": 0x66CDAA,\r\n        \"mediumblue\": 0x0000CD,\r\n        \"mediumorchid\": 0xBA55D3,\r\n        \"mediumpurple\": 0x9370DB,\r\n        \"mediumseagreen\": 0x3CB371,\r\n        \"mediumslateblue\": 0x7B68EE,\r\n        \"mediumspringgreen\": 0x00FA9A,\r\n        \"mediumturquoise\": 0x48D1CC,\r\n        \"mediumvioletred\": 0xC71585,\r\n        \"midnightblue\": 0x191970,\r\n        \"mintcream\": 0xF5FFFA,\r\n        \"mistyrose\": 0xFFE4E1,\r\n        \"moccasin\": 0xFFE4B5,\r\n        \"navajowhite\": 0xFFDEAD,\r\n        \"navy\": 0x000080,\r\n        \"oldLace\": 0xFDF5E6,\r\n        \"olive\": 0x808000,\r\n        \"olivedrab\": 0x6B8E23,\r\n        \"orange\": 0xFFA500,\r\n        \"orangered\": 0xFF4500,\r\n        \"orchid\": 0xDA70D6,\r\n        \"palegoldenrod\": 0xEEE8AA,\r\n        \"palegreen\": 0x98FB98,\r\n        \"paleturquoise\": 0xAFEEEE,\r\n        \"palevioletred\": 0xDB7093,\r\n        \"papayawhip\": 0xFFEFD5,\r\n        \"peachpuff\": 0xFFDAB9,\r\n        \"peru\": 0xCD853F,\r\n        \"pink\": 0xFFC0CB,\r\n        \"plum\": 0xDDA0DD,\r\n        \"powderblue\": 0xB0E0E6,\r\n        \"purple\": 0x800080,\r\n        \"rebeccapurple\": 0x663399,\r\n        \"red\": 0xFF0000,\r\n        \"rosybrown\": 0xBC8F8F,\r\n        \"royalblue\": 0x4169E1,\r\n        \"saddlebrown\": 0x8B4513,\r\n        \"salmon\": 0xFA8072,\r\n        \"sandybrown\": 0xF4A460,\r\n        \"sand\": 0xF4A460,\r\n        \"seagreen\": 0x2E8B57,\r\n        \"seashell\": 0xFFF5EE,\r\n        \"sienna\": 0xA0522D,\r\n        \"silver\": 0xC0C0C0,\r\n        \"skyblue\": 0x87CEEB,\r\n        \"slateblue\": 0x6A5ACD,\r\n        \"slategray\": 0x708090,\r\n        \"slategrey\": 0x708090,\r\n        \"snow\": 0xFFFAFA,\r\n        \"springgreen\": 0x00FF7F,\r\n        \"steelblue\": 0x4682B4,\r\n        \"tan\": 0xD2B48C,\r\n        \"teal\": 0x008080,\r\n        \"thistle\": 0xD8BFD8,\r\n        \"tomato\": 0xFF6347,\r\n        \"turquoise\": 0x40E0D0,\r\n        \"violet\": 0xEE82EE,\r\n        \"wheat\": 0xF5DEB3,\r\n        \"white\": 0xFFFFFF,\r\n        \"whitesmoke\": 0xF5F5F5,\r\n        \"yellow\": 0xFFFF00,\r\n        \"yellowgreen\": 0x9ACD32,\r\n    };\r\n\r\n    static intColorToHexRGB(color: number) {\r\n        if(color == null){\r\n            return \"---\";\r\n        } else {\r\n            let s: string = color.toString(16);\r\n            while (s.length < 6) s = \"0\" + s;\r\n            return \"#\" + s;\r\n        }\r\n    }\r\n\r\n    static intColorToRGB(color: number) {\r\n        if(color == null) {return \"---\";} else\r\n        {return \"rgb(\" + ((color & 0xff0000) >> 16) + \", \" + ((color & 0xff00) >> 8) + \", \" + (color & 0xff) + \")\";}\r\n    }\r\n\r\n    static parseColorToOpenGL(color: string): { color: number, alpha: number } {\r\n\r\n        if(color == null){\r\n            return {\r\n                color: null,\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        let c = this.predefinedColors[color];\r\n        if (c != null) return { color: c, alpha: 1 };\r\n\r\n        // see https://stackoverflow.com/questions/11068240/what-is-the-most-efficient-way-to-parse-a-css-color-in-javascript\r\n\r\n        let m2 = color.match(/^#([0-9a-f]{6})$/i);\r\n        if (m2 && m2.length > 1) {\r\n            let m = m2[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: 1\r\n                };\r\n            }\r\n        }\r\n\r\n        let m3 = color.match(/^#([0-9a-f]{8})$/i);\r\n        if (m3 && m3.length > 1){\r\n            let m = m3[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: parseInt(m.substr(6, 2), 16) / 0xff\r\n                };\r\n            }\r\n        }\r\n\r\n        let m1 = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        m1 = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+\\.?\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: parseFloat(m1[4]) \r\n            };\r\n        }\r\n\r\n        return { color: 0xff0000, alpha: 1 };\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { ProgramStackElement } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { LabelManager } from \"../parser/LabelManager.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { SymbolTable } from \"../parser/SymbolTable.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { nullType, stringPrimitiveType, voidPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\n\r\nexport enum Visibility { public, protected, private };\r\n\r\nvar booleanPrimitiveTypeCopy: any;\r\nexport function setBooleanPrimitiveTypeCopy(bpt: Type) {\r\n    booleanPrimitiveTypeCopy = bpt;\r\n}\r\n\r\n// Used for class diagrams:\r\nexport type CompostionData = { klass: Klass | Interface, multiples: boolean, identifier: string };\r\n\r\n/**\r\n * For Generic types\r\n */\r\nexport type TypeVariable = {\r\n    identifier: string;\r\n    type: Klass;\r\n    scopeFrom: TextPosition;\r\n    scopeTo: TextPosition;\r\n}\r\n\r\n\r\nexport class Klass extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Klass;\r\n    isTypeVariable: boolean = false;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    private static dontInheritFrom: string[] = [\"Integer\", \"Float\", \"Double\", \"Boolean\", \"Character\", \"String\", \"Shape\", \"FilledShape\"];\r\n\r\n    baseClass: Klass;\r\n    firstPassBaseClass: string;\r\n\r\n    staticClass: StaticClass;\r\n\r\n    module: Module;\r\n\r\n    visibility: Visibility;\r\n\r\n    implements: Interface[] = [];\r\n    firstPassImplements: string[] = [];\r\n\r\n    isAbstract: boolean = false;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    postConstructorCallbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    public symbolTable: SymbolTable;\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n\r\n        this.documentation = documentation;\r\n\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n        this.visibility = Visibility.public;\r\n\r\n        this.staticClass = new StaticClass(this);\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    getNonGenericClass(): Klass {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    implementsInterface(i: Interface): boolean {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                if (i1.getThisOrExtendedInterface(i.getNonGenericIdentifier()) != null) return true;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getImplementedInterface(identifier: string): Interface {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                let i2: Interface = i1.getThisOrExtendedInterface(identifier);\r\n                if (i2 != null) return i2;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    registerUsedSystemClasses(usedSystemClasses: (Klass | Interface)[]) {\r\n        if (this.baseClass != null && this.baseClass.module != null && this.baseClass.module.isSystemModule &&\r\n            usedSystemClasses.indexOf(this.baseClass) < 0) {\r\n            usedSystemClasses.push(this.baseClass);\r\n        }\r\n        for (let cd of this.getCompositeData()) {\r\n            if (cd.klass != null && cd.klass.module != null && cd.klass.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(cd.klass) < 0) {\r\n                usedSystemClasses.push(cd.klass);\r\n            }\r\n        }\r\n        for (let interf of this.implements) {\r\n            if (interf != null && interf.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(interf) < 0) {\r\n                usedSystemClasses.push(interf);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCompositeData(): CompostionData[] {\r\n\r\n        let cd: CompostionData[] = [];\r\n        let cdMap: Map<Klass | Interface, CompostionData> = new Map();\r\n\r\n        for (let a of this.attributes) {\r\n            if (a.type instanceof Klass || a.type instanceof Interface) {\r\n                let cda = cdMap.get(a.type);\r\n                if (cda == null) {\r\n                    cda = {\r\n                        klass: a.type,\r\n                        multiples: false,\r\n                        identifier: a.identifier\r\n                    };\r\n                    cdMap.set(a.type, cda);\r\n                    cd.push(cda);\r\n                } else {\r\n                    cda.identifier += \", \" + a.identifier;\r\n                }\r\n            } else {\r\n                let type: Type = a.type;\r\n                while (type instanceof ArrayType) {\r\n                    type = type.arrayOfType;\r\n                }\r\n                if (type instanceof Klass || type instanceof Interface) {\r\n                    let cda = cdMap.get(type);\r\n                    if (cda == null) {\r\n                        cda = {\r\n                            klass: type,\r\n                            multiples: true,\r\n                            identifier: a.identifier\r\n                        };\r\n                        cdMap.set(type, cda);\r\n                        cd.push(cda);\r\n                    } else {\r\n                        cda.identifier += \", \" + a.identifier;\r\n                        cda.multiples = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return cd;\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n        if (this.staticClass != null) {\r\n            this.staticClass.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getPostConstructorCallbacks(): ((r: RuntimeObject) => void)[] {\r\n        let c: Klass = this;\r\n        let callbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n        while (c != null) {\r\n            if (c.postConstructorCallbacks != null) {\r\n                if (callbacks == null) { callbacks = c.postConstructorCallbacks; }\r\n                else {\r\n                    callbacks = callbacks.concat(c.postConstructorCallbacks);\r\n                }\r\n            }\r\n            c = c.baseClass;\r\n        }\r\n        return callbacks;\r\n    }\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange, currentMethod?: Method): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier + \"\",\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            if (method.isConstructor) {\r\n                if (currentMethod?.isConstructor && currentMethod != method && this.baseClass.methods.indexOf(method) >= 0) {\r\n                    this.pushSuperCompletionItem(itemList, method, leftBracketAlreadyThere, rangeToReplace);\r\n                    continue;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        itemList = itemList.concat(this.staticClass.getCompletionItems(visibilityUpTo,\r\n            leftBracketAlreadyThere, identifierAndBracketAfterCursor,\r\n            rangeToReplace));\r\n\r\n        return itemList;\r\n    }\r\n\r\n    pushSuperCompletionItem(itemList: monaco.languages.CompletionItem[], method: Method, leftBracketAlreadyThere: boolean,\r\n        rangeToReplace: monaco.IRange) {\r\n        itemList.push({\r\n            label: method.getCompletionLabel().replace(method.identifier, \"super\"),\r\n            filterText: \"super\",\r\n            command: {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            },\r\n            kind: monaco.languages.CompletionItemKind.Method,\r\n            insertText: method.getCompletionSnippet(leftBracketAlreadyThere).replace(method.identifier, \"super\"),\r\n            range: rangeToReplace,\r\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n            documentation: method.documentation == null ? undefined : {\r\n                value: method.documentation\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    pushStaticInitializationPrograms(programStack: ProgramStackElement[]) {\r\n\r\n        if (this.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            programStack.push({\r\n                program: this.staticClass.attributeInitializationProgram,\r\n                programPosition: 0,\r\n                textPosition: { line: 1, column: 1, length: 0 },\r\n                method: \"Initialisierung statischer Variablen der Klasse \" + this.staticClass.identifier,\r\n                callbackAfterReturn: null,\r\n                isCalledFromOutside: \"Initialisierung statischer Attribute\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getMethodBySignature(signature: string): Method {\r\n\r\n        let c: Klass = this;\r\n        while (c != null) {\r\n            let method = c.methodMap.get(signature);\r\n            if (method != null) return method;\r\n            c = c.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    setBaseClass(baseClass: Klass) {\r\n        this.baseClass = baseClass;\r\n        this.staticClass.baseClass = baseClass.staticClass;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        if (method.isConstructor) {\r\n            method.returnType = null;\r\n        }\r\n        if (method.isStatic) {\r\n            this.staticClass.addMethod(method);\r\n        } else {\r\n            this.methods.push(method);\r\n            this.methodMap.set(method.signature, method);\r\n        }\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        if (attribute.isStatic) {\r\n            this.staticClass.addAttribute(attribute);\r\n        } else {\r\n            this.attributes.push(attribute);\r\n            this.attributeMap.set(attribute.identifier, attribute);\r\n        }\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            if (secondOperandType instanceof Klass || secondOperandType == nullType) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            let firstOpClass = firstOperand?.value?.class;\r\n            if (firstOpClass == null) return false;\r\n            let typeLeft: Klass = <Klass>firstOpClass;\r\n            let typeRight = secondOperand.type;\r\n            if (typeRight instanceof StaticClass) {\r\n\r\n                while (typeLeft != null) {\r\n                    if (typeLeft === typeRight.Klass) return true;\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n                return false;\r\n            }\r\n            if (typeRight instanceof Interface) {\r\n                while (typeLeft != null) {\r\n                    for (let i of typeLeft.implements) {\r\n                        if (i === typeRight) return true;\r\n                    }\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * returns all visible methods of this class and all of its base classes\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || method.identifier == identifier);\r\n        });\r\n\r\n        if (this.baseClass != null && (identifier == null || identifier != this.identifier || methods.length == 0)) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier == this.identifier ? this.baseClass.identifier : identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all visible attributes of this class and all of its base classes\r\n     */\r\n    public getAttributes(upToVisibility: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = [];\r\n        for (let a of this.attributes) {\r\n            if (a.visibility <= upToVisibility) {\r\n                attributes.push(a);\r\n            }\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(upToVisibilityInBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                if (a.visibility > upToVisibilityInBaseClass) continue;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public hasConstructor() {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) return true;\r\n        }\r\n\r\n        if (this.baseClass != null) return this.baseClass.hasConstructor();\r\n\r\n        return false;\r\n    }\r\n\r\n    public hasParameterlessConstructor() {\r\n        let hasConstructorWithParameters: boolean = false;\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) {\r\n                if (m.parameterlist.parameters.length == 0) {\r\n                    return true;\r\n                } else {\r\n                    hasConstructorWithParameters = true;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasConstructorWithParameters && this.baseClass != null) {\r\n            return this.baseClass.hasParameterlessConstructor();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public getParameterlessConstructor(): Method {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor && m.parameterlist.parameters.length == 0) return m;\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n            return this.baseClass.getParameterlessConstructor();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    public getConstructor(parameterTypes: Type[], upToVisibility: Visibility, classIdentifier: string = this.identifier): { error: string, methodList: Method[] } {\r\n\r\n        let constructors: Method[] = this.methods.filter((m) => {\r\n            return m.isConstructor;\r\n        });\r\n\r\n        if (constructors.length == 0 && this.baseClass != null) {\r\n            return this.baseClass.getConstructor(parameterTypes, upToVisibility, classIdentifier);\r\n        } else {\r\n            return findSuitableMethods(constructors, this.identifier, parameterTypes, classIdentifier, true);\r\n        }\r\n\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        let allMethods = this.getMethods(upToVisibility);\r\n\r\n        let methods = findSuitableMethods(allMethods, identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n        if (methods.methodList.length == 0 && !searchConstructor) {\r\n            let staticMethods = this.staticClass.getMethodsThatFitWithCasting(identifier, parameterTypes, false, upToVisibility);\r\n            if (staticMethods.error == null) {\r\n                return staticMethods;\r\n            }\r\n\r\n            return methods;\r\n        }\r\n\r\n        return methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean } {\r\n\r\n        let error = null;\r\n        let foundButInvisible: boolean = false;\r\n\r\n        let attribute = this.attributeMap.get(identifier);\r\n        let attributeNotFound = attribute == null;\r\n\r\n        if (attribute == null) {\r\n            error = \"Das Attribut \" + identifier + \" kann nicht gefunden werden.\";\r\n        } else\r\n            if (attribute.visibility > upToVisibility) {\r\n                error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist daher hier nicht sichtbar.\";\r\n                attribute = null;\r\n                foundButInvisible = true;\r\n            }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttribute = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (baseClassAttribute.attribute != null || attributeNotFound) {\r\n                return baseClassAttribute;\r\n            }\r\n\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: foundButInvisible };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        // casting something to a String by calling toString() doesn't make sense in my opinion\r\n\r\n        if (type instanceof Klass) {\r\n            let baseClass: Klass = this;\r\n\r\n            while (baseClass != null) {\r\n                if (type.getNonGenericIdentifier() == baseClass.getNonGenericIdentifier()) {\r\n                    if (type.typeVariables.length > 0) {\r\n                        let n: number = Math.min(type.typeVariables.length, baseClass.typeVariables.length);\r\n                        for (let i = 0; i < n; i++) {\r\n                            if (!baseClass.typeVariables[i].type.canCastTo(type.typeVariables[i].type)) return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return true;\r\n                }\r\n                baseClass = baseClass.baseClass;\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n\r\n            let klass: Klass = this;\r\n            while (klass != null) {\r\n                for (let i of klass.implements) {\r\n                    let shouldImplement = type.getNonGenericIdentifier();\r\n                    // look recursively into interface inheritance chain:                    \r\n                    if (i.getThisOrExtendedInterface(shouldImplement) != null) {\r\n                        return true;\r\n                    }\r\n                }\r\n                klass = klass.baseClass;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n    checkInheritance(): { message: string, missingMethods: Method[] } {\r\n\r\n        if (this.baseClass != null && Klass.dontInheritFrom.indexOf(this.baseClass.identifier) >= 0) {\r\n            return { message: \"Aus Performancegründen ist es leider nicht möglich, Unterklassen der Klassen String, Boolean, Character, Integer, Float und Double zu bilden.\", missingMethods: [] };\r\n        }\r\n\r\n        let message = \"\";\r\n        let missingAbstractMethods: Method[] = [];\r\n        let implementedMethods: Method[] = [];\r\n\r\n        let missingInterfaceMethods: Method[] = [];\r\n\r\n        let klass: Klass = this;\r\n        let hierarchy: string[] = [klass.identifier];\r\n        while (klass.baseClass != null) {\r\n            klass = klass.baseClass;\r\n            if (hierarchy.indexOf(klass.identifier) >= 0) {\r\n                klass.baseClass = null;  // This is necessary to avoid infinite loops in further compilation\r\n                hierarchy = [klass.identifier].concat(hierarchy);\r\n                message = \"Die Klasse \" + klass.identifier + \" erbt von sich selbst: \";\r\n                message += \"(\" + hierarchy.join(\" extends \") + \")\";\r\n                break;\r\n            }\r\n            hierarchy = [klass.identifier].concat(hierarchy);\r\n        }\r\n\r\n        if (message == \"\") {\r\n\r\n            if (this.baseClass != null) {\r\n\r\n                let abstractMethods: Method[] = [];\r\n\r\n                let klass: Klass = this;\r\n\r\n                // collect abstract Methods\r\n                while (klass != null) {\r\n                    for (let m of klass.methods) {\r\n                        if (m.isAbstract) {\r\n                            abstractMethods.push(m);\r\n                            let isImplemented: boolean = false;\r\n                            for (let m1 of implementedMethods) {\r\n                                if (m1.implements(m)) {\r\n                                    isImplemented = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (!isImplemented) {\r\n                                missingAbstractMethods.push(m);\r\n                            }\r\n                        } else {\r\n                            implementedMethods.push(m);\r\n                        }\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n            }\r\n\r\n            if (missingAbstractMethods.length > 0 && !this.isAbstract) {\r\n                message = \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden ihrer abstrakten Basisklassen implementieren: \";\r\n\r\n                message += missingAbstractMethods.map((m) => m.getSignatureWithReturnParameter()).join(\", \");\r\n\r\n            }\r\n\r\n            for (let i of this.implements) {\r\n                for (let m of i.getMethods()) {\r\n                    let isImplemented: boolean = false;\r\n                    for (let m1 of implementedMethods) {\r\n                        if (m1.implements(m)) {\r\n                            isImplemented = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!isImplemented) {\r\n                        missingInterfaceMethods.push(m);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (missingInterfaceMethods.length > 0) {\r\n\r\n                if (message != \"\") message += \"\\n\";\r\n\r\n                message += \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden der von ihr implementierten Interfaces implementieren: \";\r\n\r\n                message += missingInterfaceMethods.map((m) => m.signature).join(\", \");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return { message: message, missingMethods: missingAbstractMethods.concat(missingInterfaceMethods) };\r\n\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        let id = a.identifier;\r\n        if (a instanceof Klass) id = a.getNonGenericIdentifier();\r\n\r\n        while (c != null) {\r\n            if (c.getNonGenericIdentifier() == id) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = <RuntimeObject>value.value;\r\n\r\n        if (object == null) {\r\n            return \"null\";\r\n        }\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            let v = object.getValue(attribute.index);\r\n            if (attribute.type instanceof PrimitiveType) {\r\n                s += attribute.identifier + \":&nbsp;\" + attribute.type.debugOutput(v, maxLength / 2);\r\n            } else {\r\n                s += attribute.identifier + \":&nbsp; {...}\";\r\n            }\r\n            if (i < attributes.length - 1) {\r\n                s += \",&nbsp;\";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Klass {\r\n        // Klass.count++;\r\n\r\n        let newKlass: Klass = Object.create(this);\r\n\r\n        newKlass.implements = this.implements.slice(0);\r\n        newKlass.usagePositions = new Map();\r\n        newKlass.isGenericVariantFrom = this;\r\n\r\n        return newKlass;\r\n    }\r\n\r\n}\r\n\r\nexport class StaticClass extends Type {\r\n\r\n    baseClass: StaticClass;\r\n    Klass: Klass;\r\n    // TODO: Initialize\r\n    classObject: RuntimeObject;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    constructor(klass: Klass) {\r\n        super();\r\n\r\n        this.Klass = klass;\r\n        this.identifier = klass.identifier;\r\n\r\n        if (klass.baseClass != null) {\r\n            this.baseClass = klass.baseClass.staticClass;\r\n        }\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.Klass.module,\r\n            statements: [],\r\n            labelManager: null\r\n        }\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = this.classObject;\r\n\r\n        if (attributes == null) return \"{}\";\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            s += attribute.identifier + \": \" + object == null ? '---' : attribute.type?.debugOutput(object.getValue(attribute.index), maxLength / 2);\r\n            if (i < attributes.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n\r\n            itemList.push({\r\n                label: attribute.identifier,\r\n                //@ts-ignore\r\n                detail: attribute.color ? attribute.color : undefined,\r\n                //@ts-ignore\r\n                kind: attribute.color ? monaco.languages.CompletionItemKind.Color : monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        this.attributes.push(attribute);\r\n        this.attributeMap.set(attribute.identifier, attribute);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        return null;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(upToVisibility), identifier, parameterTypes,\r\n            this.Klass.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this class and all of its base classes\r\n     * @param isStatic returns only static methods if true\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.slice().filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || identifier == method.identifier);\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? Visibility.public : Visibility.protected;\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all attributes of this class and all of its base classes\r\n     * @param isStatic return only static attributes if true\r\n     */\r\n    public getAttributes(visibilityUpTo: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = this.attributes.filter((attribute) => {\r\n            return attribute.visibility <= visibilityUpTo;\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let visibilityUpToBaseClass = visibilityUpTo == Visibility.public ? visibilityUpTo : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(visibilityUpToBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass } {\r\n\r\n        let error = \"\";\r\n        let notFound = false;\r\n        let attribute = this.attributeMap.get(identifier);\r\n\r\n        if (attribute == null) {\r\n            notFound = true;\r\n            error = \"Das Attribut \" + identifier + \" konnte nicht gefunden werden.\";\r\n        } else if (attribute.visibility > upToVisibility) {\r\n            error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist hier daher nicht sichtbar.\";\r\n            attribute = null;\r\n        }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttributeWithError = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (notFound) {\r\n                return baseClassAttributeWithError;\r\n            }\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: !notFound, staticClass: this };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        while (c != null) {\r\n            if (c == a) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport class Interface extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Interface;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    public module: Module;\r\n\r\n    public extends: Interface[] = [];\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Interface = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    getThisOrExtendedInterface(identifier: String): Interface {\r\n        if (this.getNonGenericIdentifier() == identifier) return this;\r\n        for (let if1 of this.extends) {\r\n            let if2 = if1.getThisOrExtendedInterface(identifier);\r\n            if (if2 != null) return if2;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Interface {\r\n        // Interface.count++;\r\n        let newInterface: Interface = Object.create(this);\r\n\r\n        newInterface.usagePositions = new Map();\r\n        newInterface.isGenericVariantFrom = this;\r\n\r\n        return newInterface;\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCompletionItems(leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let method of this.getMethods()) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        if (value.value == null) {\r\n            return \"null\";\r\n        } else {\r\n            if (value.value instanceof RuntimeObject) {\r\n                return value.value.class.debugOutput(value);\r\n            } else {\r\n                return \"{...}\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        method.isAbstract = true;\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            return booleanPrimitiveTypeCopy;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    methodsWithSubInterfaces: Method[];\r\n\r\n    /**\r\n     * returns all methods of this interface\r\n     * @param isStatic is not used in interfaces\r\n     */\r\n    public getMethods(): Method[] {\r\n\r\n        if (this.extends.length == 0) return this.methods;\r\n\r\n        if (this.methodsWithSubInterfaces != null) return this.methodsWithSubInterfaces;\r\n\r\n        let visitedInterfaces: { [key: string]: boolean } = {};\r\n        let visitedMethods: { [signature: string]: boolean } = {};\r\n\r\n        this.methodsWithSubInterfaces = this.methods.slice(0);\r\n        for (let m of this.methods) visitedMethods[m.signature] = true;\r\n        visitedInterfaces[this.identifier] = true;\r\n\r\n        let todo: Interface[] = this.extends.slice(0);\r\n\r\n        while (todo.length > 0) {\r\n            let interf = todo.pop();\r\n            for (let m of interf.methods) {\r\n                if (!visitedMethods[m.signature]) {\r\n                    this.methodsWithSubInterfaces.push(m);\r\n                    visitedMethods[m.signature] = true;\r\n                }\r\n            }\r\n            for (let i of interf.extends) {\r\n                if (!visitedInterfaces[i.identifier]) {\r\n                    todo.push(i);\r\n                    visitedInterfaces[i.identifier] = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.methodsWithSubInterfaces;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        return this.methodMap.get(identifier + parameterlist.id);\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type instanceof Interface) {\r\n            let nonGenericCastable = false;\r\n            if (type.getNonGenericIdentifier() == this.getNonGenericIdentifier()) {\r\n                nonGenericCastable = true;\r\n                if (this.typeVariables.length == 0) return true;\r\n                let type2 = <Interface>type;\r\n                if (this.typeVariables.length != type2.typeVariables.length) return false;\r\n                for (let i = 0; i < this.typeVariables.length; i++) {\r\n                    let tv = this.typeVariables[i];\r\n                    let tvOther = type2.typeVariables[i];\r\n                    if (!tvOther.type.canCastTo(tv.type)) return false;\r\n                }\r\n                return false;\r\n            } else {\r\n                for (let type1 of this.extends) {\r\n                    if (type1.canCastTo(type)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        } else {\r\n            if (type instanceof Klass && type.getNonGenericIdentifier() == \"Object\") {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // return (type instanceof Klass) || (type instanceof Interface);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[], searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(), identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction findSuitableMethods(methodList: Method[], identifier: string, parameterTypes: Type[],\r\n    classIdentifier: string,\r\n    searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n    let suitableMethods: Method[] = [];\r\n    let howManyCastingsMax: number = 10000;\r\n    let error = null;\r\n\r\n    let oneWithCorrectIdentifierFound = false;\r\n\r\n    for (let m of methodList) {\r\n\r\n        let howManyCastings = 0;\r\n        if (m.identifier == identifier || m.isConstructor && searchConstructor) {\r\n\r\n            oneWithCorrectIdentifierFound = true;\r\n\r\n            let isEllipsis = m.hasEllipsis();\r\n            if (m.getParameterCount() == parameterTypes.length || (isEllipsis && m.getParameterCount() <= parameterTypes.length)) {\r\n\r\n                let suits = true;\r\n\r\n                let i = 0;\r\n\r\n                for (i = 0; i < m.getParameterCount() - (isEllipsis ? 1 : 0); i++) {\r\n                    let mParameterType = m.getParameterType(i);\r\n                    let givenType = parameterTypes[i];\r\n\r\n                    if (givenType == null) {\r\n                        suits = false; break;\r\n                    }\r\n\r\n                    if (mParameterType == givenType) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (givenType.canCastTo(mParameterType)) {\r\n                        howManyCastings++;\r\n                        /**\r\n                         * Rechteck r; \r\n                         * GNGFigur f;\r\n                         * Bei f.berührt(r) gibt es eine Variante mit Parametertyp String (schlecht!) und\r\n                         * eine mit Parametertyp Object. Letztere soll genommen werden, also:\r\n                         */\r\n                        if (mParameterType == stringPrimitiveType) howManyCastings += 0.5;\r\n                        continue;\r\n                    }\r\n\r\n                    suits = false;\r\n                    break;\r\n                }\r\n\r\n                // Ellipsis!\r\n                if (suits && isEllipsis) {\r\n                    let mParameterEllipsis = m.getParameter(i);\r\n                    let mParameterTypeEllispsis = (<ArrayType>mParameterEllipsis.type).arrayOfType;\r\n\r\n\r\n                    for (let j = i; j < parameterTypes.length; j++) {\r\n                        let givenType = parameterTypes[i];\r\n\r\n                        if (givenType == null) {\r\n                            suits = false; break;\r\n                        }\r\n\r\n                        if (mParameterTypeEllispsis == givenType) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (givenType.canCastTo(mParameterTypeEllispsis)) {\r\n                            howManyCastings++;\r\n                            /**\r\n                             * Rechteck r; \r\n                             * GNGFigur f;\r\n                             * Bei f.berührt(r) gibt es eine Variante mit Parametertyp String (schlecht!) und\r\n                             * eine mit Parametertyp Object. Letztere soll genommen werden, also:\r\n                             */\r\n                            if (mParameterTypeEllispsis == stringPrimitiveType) howManyCastings += 0.5;\r\n                            continue;\r\n                        }\r\n\r\n                        suits = false;\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n                if (suits && howManyCastings <= howManyCastingsMax) {\r\n                    if (howManyCastings < howManyCastingsMax) {\r\n                        suitableMethods = [];\r\n                    }\r\n                    suitableMethods.push(m);\r\n                    howManyCastingsMax = howManyCastings;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length == 0) {\r\n\r\n        if (oneWithCorrectIdentifierFound) {\r\n            if (parameterTypes.length == 0) {\r\n                error = searchConstructor ? \"Es gibt keinen parameterlosen Konstruktor der Klasse \" + classIdentifier : \"Die vorhandenen Methoden mit dem Bezeichner \" + identifier + \" haben alle mindestens einen Parameter. Hier wird aber kein Parameterwert übergeben.\";\r\n            } else {\r\n                let typeString = parameterTypes.map(type => type?.identifier).join(\", \");\r\n                error = searchConstructor ? `Die Parametertypen (${typeString}) passen zu keinem Konstruktor der Klasse ${classIdentifier}` : `Die Parametertypen (${typeString}) passen zu keiner der vorhandenen Methoden mit dem Bezeichner ${identifier}.`;\r\n            }\r\n        } else {\r\n            error = \"Der Typ \" + classIdentifier + \" besitzt keine Methode mit dem Bezeichner \" + identifier + \".\";\r\n            if (identifier == 'setCenter') {\r\n                error += ' Tipp: Die Methode setCenter der Klasse Shape wurde umbenannt in \"moveTo\".'\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length > 1) {\r\n        suitableMethods = suitableMethods.slice(0, 1);\r\n        // error = \"Zu den gegebenen Parametern hat der Typ \" + classIdentifier + \" mehrere passende Methoden.\";\r\n    }\r\n\r\n    return {\r\n        error: error,\r\n        methodList: suitableMethods\r\n    };\r\n\r\n}\r\n\r\nexport function getVisibilityUpTo(objectType: Klass | StaticClass, currentClassContext: Klass | StaticClass): Visibility {\r\n\r\n    if (currentClassContext == null) {\r\n        return Visibility.public;\r\n    }\r\n\r\n    if (objectType instanceof StaticClass) objectType = objectType.Klass;\r\n    if (currentClassContext instanceof StaticClass) currentClassContext = currentClassContext.Klass;\r\n\r\n    if (objectType == currentClassContext) {\r\n        return Visibility.private;\r\n    }\r\n\r\n    if (currentClassContext.hasAncestorOrIs(objectType)) {\r\n        return Visibility.protected;\r\n    }\r\n\r\n    return Visibility.public;\r\n\r\n}\r\n\r\n\r\nexport class UnboxableKlass extends Klass {\r\n\r\n    public unboxableAs: Type[] = [];\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        if (! (type instanceof PrimitiveType)) return null;\r\n        if (this.unboxableAs.includes(type)) {\r\n            if (value.value == null && ! type.allowsNull()) throw Error(\"null kann nicht in einen primitiven \" + type.identifier + \" umgewandelt werden.\");\r\n            else return {\r\n                value: value.value,\r\n                type: type\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Visibility, TypeVariable } from \"./Class.js\";\r\nimport { stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\n\r\nexport type UsagePositions = Map<Module, TextPosition[]>;\r\n\r\nexport type TextPositionWithModule = {\r\n    module: Module,\r\n    position: TextPosition,\r\n    monacoModel?: monaco.editor.ITextModel\r\n}\r\n\r\nexport type CastInformation = {\r\n    automatic: boolean,\r\n    needsStatement: boolean\r\n}\r\n\r\nexport abstract class Type {\r\n\r\n    public onlyFirstPass = false;\r\n\r\n    public usagePositions: UsagePositions = new Map();\r\n    public declaration: TextPositionWithModule;\r\n\r\n    public identifier: string;\r\n    public documentation: string = \"\";\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public abstract getResultType(operation: TokenType, secondOperandType?: Type): Type;\r\n\r\n    public abstract compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any;\r\n\r\n    public abstract canCastTo(type: Type): boolean;\r\n\r\n    public abstract castTo(value: Value, type: Type): Value;\r\n\r\n    public abstract equals(type: Type): boolean;\r\n\r\n    public toTokenType(): TokenType {\r\n        return null;\r\n    };\r\n\r\n    public abstract debugOutput(value: Value, maxLength?: number): string;\r\n\r\n    clearUsagePositions() {\r\n        this.usagePositions = new Map();\r\n    }\r\n\r\n}\r\n\r\nexport abstract class PrimitiveType extends Type {\r\n\r\n    public initialValue: any = null;\r\n\r\n    public description: string = \"\";\r\n\r\n    protected operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    protected canCastToMap: { [type: string]: CastInformation };\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return this.canCastToMap[type.identifier] != null;\r\n    }\r\n\r\n    public getCastInformation(type: Type): CastInformation {\r\n        return this.canCastToMap[type.identifier];\r\n    }\r\n\r\n    public allowsNull(): boolean { return false; }\r\n\r\n    public valueToString(value: Value): string {\r\n        return  \"\" + value.value;\r\n    }\r\n\r\n    // public unboxFrom(value: Value, type: Type): Value {\r\n    //     if ((type[\"unboxableAs\"] || []).includes(this)){\r\n    //         if (value.value != null) return {\r\n    //             value: value.value,\r\n    //             type: value.type\r\n    //         };\r\n    //         else {\r\n    //             throw Error(\"null kann nicht in einen primitiven \" + this.identifier + \" umgewandelt werden.\");\r\n    //         }\r\n    //     }\r\n    //     return null;\r\n    // }\r\n\r\n}\r\n\r\nexport class Attribute {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    identifier: string;\r\n\r\n    index: number;\r\n\r\n    type: Type;\r\n    isStatic: boolean;\r\n    isFinal: boolean;\r\n    isTransient: boolean;\r\n    visibility: Visibility;\r\n    updateValue: (value: Value) => void;\r\n    usagePositions: UsagePositions;\r\n    declaration: TextPositionWithModule;\r\n    documentation: string;\r\n    annotation?: string;\r\n\r\n    constructor(name: string, type: Type, updateValue: (value: Value) => void,\r\n        isStatic: boolean, visibility: Visibility, isFinal: boolean, documentation?: string) {\r\n        this.identifier = name;\r\n        this.type = type;\r\n        this.updateValue = updateValue;\r\n        this.isStatic = isStatic;\r\n        this.visibility = visibility;\r\n        this.isFinal = isFinal;\r\n        this.usagePositions = new Map();\r\n        this.documentation = documentation;\r\n    }\r\n}\r\n\r\nexport class Method extends Type {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    visibility: Visibility;\r\n\r\n    isAbstract: boolean;\r\n    isStatic: boolean;\r\n    isConstructor: boolean = false;\r\n    isVirtual: boolean = false; // true, if child class has method with same signature\r\n\r\n    parameterlist: Parameterlist;\r\n    returnType: Type;\r\n    annotation?: string;\r\n\r\n    invoke?: (parameters: Value[]) => any;  // only for system functions\r\n    program?: Program;\r\n\r\n    reserveStackForLocalVariables: number = 0;\r\n\r\n    hasGenericTypes: boolean;\r\n\r\n    genericTypeMap: { [identifier: string]: Type } = null;\r\n\r\n    public signature: string;\r\n\r\n    implements(m: Method): boolean {\r\n        if(this.identifier != m.identifier) return false;\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            if(m.returnType != null && m.returnType.identifier != \"void\") return false;\r\n        } else {\r\n\r\n            if(m.returnType instanceof PrimitiveType){\r\n                if(m.returnType != this.returnType) {\r\n                    return false;\r\n                }\r\n            } else if(!this.returnType.canCastTo(m.returnType)){\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if(this.parameterlist.parameters.length != m.parameterlist.parameters.length) return false;\r\n\r\n        for(let i = 0; i < this.parameterlist.parameters.length; i++){\r\n            let myParameter = this.parameterlist.parameters[i];\r\n            let mParameter = m.parameterlist.parameters[i];\r\n\r\n            if(mParameter.type instanceof PrimitiveType){\r\n                if(mParameter.type != myParameter.type){\r\n                    return false;\r\n                }\r\n            } else if(!mParameter.type.canCastTo(myParameter.type)) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasEllipsis(): boolean {\r\n        if(this.parameterlist.parameters.length == 0) return false;\r\n        return this.parameterlist.parameters[this.parameterlist.parameters.length - 1].isEllipsis;\r\n    }\r\n\r\n\r\n    getParameterType(index: number): Type {\r\n        return this.parameterlist.parameters[index].type;\r\n    }\r\n\r\n    getParameter(index: number): Variable {\r\n        return this.parameterlist.parameters[index];\r\n    }\r\n\r\n    getReturnType(): Type {\r\n        return this.returnType;\r\n    }\r\n\r\n    getParameterCount() {\r\n        return this.parameterlist.parameters.length;\r\n    }\r\n\r\n    getParameterList(): Parameterlist {\r\n        return this.parameterlist;\r\n    }\r\n\r\n\r\n\r\n    constructor(name: string, parameterlist: Parameterlist, returnType: Type,\r\n        invokeOrAST: ((parameters: Value[]) => any) | Program,\r\n        isAbstract: boolean, isStatic: boolean, documentation?: string, isConstructor: boolean = false) {\r\n        super();\r\n        this.identifier = name;\r\n        this.parameterlist = parameterlist;\r\n        this.returnType = returnType;\r\n        this.isAbstract = isAbstract;\r\n        this.isStatic = isStatic;\r\n        this.visibility = 0;\r\n        this.documentation = documentation;\r\n        this.isConstructor = isConstructor;\r\n\r\n        if (invokeOrAST != null) {\r\n            if (typeof invokeOrAST == \"function\") {\r\n                this.invoke = invokeOrAST;\r\n            } else {\r\n                this.program = invokeOrAST;\r\n                invokeOrAST.method = this;\r\n            }\r\n        }\r\n\r\n        this.signature = name + parameterlist.id;\r\n\r\n        for (let p of parameterlist.parameters) {\r\n            if (p[\"isTypeVariable\"] == true) {\r\n                this.hasGenericTypes = true; break;\r\n            }\r\n        }\r\n\r\n        this.hasGenericTypes = this.hasGenericTypes || (this.returnType != null && this.returnType[\"isTypeVariable\"] == true);\r\n    }\r\n\r\n    getSignatureWithReturnParameter(){\r\n        if(this.returnType != null){\r\n            return this.returnType.identifier + \" \" + this.signature;\r\n        } else {\r\n            return \"void \" + this.signature;\r\n        }\r\n    }\r\n\r\n    getCompletionLabel() {\r\n\r\n        let label = \"\";\r\n\r\n        if (this.returnType != null && this.returnType.identifier != \"void\") {\r\n            label += getTypeIdentifier(this.returnType) + \" \";\r\n        }\r\n\r\n        label += this.identifier + \"(\";\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            if(p.isEllipsis){\r\n                let arrayType: ArrayType = <any>p.type;\r\n                label += getTypeIdentifier(arrayType.arrayOfType) + \"... \" + p.identifier;\r\n            } else {\r\n                label += getTypeIdentifier(p.type) + \" \" + p.identifier;\r\n            }\r\n\r\n            if (i < parameters.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        label += \")\";\r\n\r\n        return label;\r\n    }\r\n\r\n\r\n    getCompletionSnippet(leftBracketAlreadyThere: boolean) {\r\n\r\n        if (leftBracketAlreadyThere) return this.identifier + \"($0\";\r\n\r\n        let snippet = \"\";\r\n\r\n        snippet += this.identifier + \"(\";\r\n\r\n        let isVoidReturn = this.returnType == null || this.returnType.identifier == \"void\";\r\n        let isVoidReturnDelta = isVoidReturn ? 1 : 0;\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            snippet += \"${\" + ((i + 1) % (parameters.length + isVoidReturnDelta)) + \":\" + p.identifier + \"}\";\r\n\r\n            if (i < parameters.length - 1) {\r\n                snippet += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        snippet += \")\";\r\n\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            snippet += \";$0\";\r\n        }\r\n\r\n        return snippet;\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\";\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        return null;\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return false;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value { return value }\r\n\r\n\r\n}\r\n\r\nexport class Parameterlist {\r\n\r\n    id: string;\r\n\r\n    parameters: Variable[];\r\n\r\n    constructor(parameters: Variable[]) {\r\n        this.parameters = parameters;\r\n        this.computeId();\r\n    }\r\n\r\n    computeId() {\r\n        this.id = \"(\";\r\n        let i = 0;\r\n        while (i < this.parameters.length) {\r\n            this.id += this.parameters[i].type.identifier;\r\n            if (i < this.parameters.length - 1) {\r\n                this.id += \", \";\r\n            }\r\n            i++;\r\n        }\r\n        this.id += \")\";\r\n    }\r\n}\r\n\r\nexport type Variable = {\r\n    identifier: string,\r\n    type: Type,\r\n    stackPos?: number;\r\n    usagePositions: UsagePositions,\r\n    declaration: TextPositionWithModule,\r\n    isFinal: boolean,\r\n    isEllipsis?: boolean,\r\n    value?: Value // only for variables on heap,\r\n    declarationError?: any,     // if v.declarationError != null then variable has been used before initialization.\r\n    usedBeforeInitialization?: boolean,\r\n    initialized?: boolean\r\n}\r\n\r\nexport type Heap = { [identifier: string]: Variable };\r\n\r\nexport type Value = {\r\n    type: Type;\r\n    value: any;\r\n    updateValue?: (value: Value) => void;\r\n    object?: RuntimeObject;\r\n}\r\n\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if(type[\"typeVariables\"]){\r\n        if(type[\"typeVariables\"].length > 0){\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier) \r\n            + \"<\";\r\n               s += type[\"typeVariables\"].map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n","import { Klass, StaticClass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { PrimitiveType, Value } from \"../compiler/types/Types.js\";\r\n\r\n\r\n\r\nexport class RuntimeObject {\r\n\r\n    class: Klass | StaticClass;\r\n\r\n    intrinsicData: {[classIdentifier: string]: any} = {};  // for intrinsic (= builtin) classes to store data\r\n\r\n    // Attributes of class and base-classes\r\n    // Map class-identifier to Map <attribute-identifier, attribute-value>\r\n    // attributeValues: Map<string, Map<string, Value>> = new Map();\r\n    attributes: Value[];\r\n\r\n    constructor(klass: Klass | StaticClass ) {\r\n\r\n        this.class = klass;\r\n\r\n        this.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    getValue(attributeIndex: number):Value{\r\n\r\n        let av: Value = this.attributes[attributeIndex];\r\n        if(av?.updateValue != null){\r\n            av.updateValue(av);\r\n        }\r\n        return av;\r\n\r\n    }\r\n\r\n    private initializeAttributeValues(){\r\n\r\n        this.attributes = Array(this.class.numberOfAttributesIncludingBaseClass).fill(null);\r\n\r\n        let klass = this.class;\r\n        while(klass != null){\r\n\r\n            for(let att of klass.attributes){\r\n                \r\n                let value:any = null;\r\n                if(att.type instanceof PrimitiveType){\r\n                    value = att.type.initialValue;\r\n                }\r\n\r\n                let v: Value = {\r\n                    type: att.type,\r\n                    value: value\r\n                };\r\n\r\n                if(att.updateValue != null){\r\n                    v.updateValue = att.updateValue;\r\n                    v.object = this;\r\n                } \r\n                \r\n                this.attributes[att.index] = v;\r\n\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function deepCopy(obj: any): any {\r\n\r\n    var copy: any;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(obj.getTime());\r\n        return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n        copy = [];\r\n        for (var i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = deepCopy(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n        copy = {};\r\n        for (var attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) copy[attr] = deepCopy(obj[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n\r\n}\r\n\r\n","import { Statement, JumpNode, Program, JumpOnSwitchStatement } from \"./Program.js\";\r\nimport { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { CodeGenerator } from \"./CodeGenerator.js\";\r\n\r\ntype nodeToResolve = {\r\n    node: JumpNode,\r\n    labelIndex: number\r\n}\r\n\r\ntype LabeledNode = {\r\n    node?: Statement,\r\n    labelIndex: number,\r\n    position?: number\r\n}\r\n\r\n\r\nexport class LabelManager {\r\n\r\n    maxLabelIndex: number = 0;\r\n\r\n    labeledNodes: LabeledNode[] = [];\r\n    \r\n    labelMap: Map<number, LabeledNode> = new Map();\r\n    jumpNodesToResolve: nodeToResolve[] = [];\r\n\r\n    switchStatements: JumpOnSwitchStatement[] = [];\r\n\r\n    program: Program;\r\n\r\n    constructor(program: Program){\r\n        this.program = program;\r\n    }\r\n\r\n    correctPositionsAfterInsert(insertPosition: number, insertedLength: number) {\r\n        for(let ln of this.labeledNodes){\r\n            if(ln.position != null && ln.position >= insertPosition){\r\n                ln.position += insertedLength;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    registerSwitchStatement(switchStatement: JumpOnSwitchStatement) {\r\n        this.switchStatements.push(switchStatement);\r\n    }\r\n\r\n    insertJumpNode(type: TokenType.jumpIfTrue|TokenType.jumpIfFalse|TokenType.jumpAlways|\r\n        TokenType.jumpIfFalseAndLeaveOnStack|TokenType.jumpIfTrueAndLeaveOnStack,\r\n         position: TextPosition, codeGenerator: CodeGenerator, labelIndex?: number): number {\r\n        \r\n        let statementList = this.program.statements;\r\n\r\n        if(position == null){\r\n            if(statementList.length > 0){\r\n                position = statementList[statementList.length - 1].position;\r\n            }\r\n        }\r\n\r\n        let node: JumpNode = {\r\n            type: type,\r\n            position: position,\r\n            stepFinished: true\r\n        };\r\n\r\n        codeGenerator.pushStatements(node);\r\n\r\n        return this.registerJumpNode(node, labelIndex);\r\n\r\n    }\r\n\r\n    markJumpDestination(offset: number, labelIndex?:number): number {\r\n        \r\n        let position = this.program.statements.length - 1 + offset;\r\n        \r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let labeledNode = {\r\n            position: position,\r\n            labelIndex: labelIndex\r\n        };\r\n\r\n        this.labeledNodes.push(labeledNode);\r\n\r\n        this.labelMap.set(labelIndex, labeledNode);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    removeNode(node: Statement){\r\n        for(let i = 0; i < this.labeledNodes.length; i++){\r\n            let n = this.labeledNodes[i];\r\n            if(n.node == node){\r\n\r\n                let index = this.program.statements.indexOf(node);\r\n               \r\n                if(index < this.program.statements.length - 1){\r\n                    let newNode = this.program.statements[index + 1];\r\n                    n.node = newNode;\r\n                }\r\n\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerJumpDestination(node: Statement, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let label: LabeledNode = {\r\n            node: node,\r\n            labelIndex: labelIndex\r\n        }\r\n\r\n        this.labeledNodes.push(label);\r\n        this.labelMap.set(labelIndex, label);\r\n\r\n        return labelIndex;\r\n    }\r\n\r\n    public registerJumpNode(node: JumpNode, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let ntr: nodeToResolve = {\r\n            labelIndex: labelIndex,\r\n            node: node\r\n        }\r\n\r\n        this.jumpNodesToResolve.push(ntr);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    resolveNodes(){\r\n        for(let ln of this.labeledNodes){\r\n\r\n            if(ln.position == null){\r\n                ln.position = this.program.statements.indexOf(ln.node);\r\n            } else {\r\n                while(ln.position > this.program.statements.length - 1){\r\n                    this.program.statements.push({\r\n                        type: TokenType.noOp,\r\n                        position: null\r\n                    });\r\n                }\r\n                ln.node = this.program.statements[ln.position];\r\n            }\r\n\r\n        }\r\n\r\n        for(let jn of this.jumpNodesToResolve){\r\n            let dest = this.labelMap.get(jn.labelIndex);\r\n            if(dest != null){\r\n                jn.node.destination = dest.position;\r\n            }\r\n        }\r\n\r\n        for(let sw of this.switchStatements){\r\n            for(let dl of sw.destinationLabels){\r\n                sw.destinationMap[dl.constant] = this.labelMap.get(dl.label).position;\r\n            }\r\n            sw.destinationLabels = null;\r\n            if(sw.defaultDestination != null){\r\n                sw.defaultDestination = this.labelMap.get(sw.defaultDestination).position;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Method, Parameterlist, Value } from \"./Types.js\";\r\nimport { stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\n// neu:\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { type } from \"jquery\";\r\nimport { json } from \"express\";\r\nimport { ArrayType } from \"./Array.js\";\r\n\r\n\r\n/**\r\n * Base class for all classes\r\n */\r\n\r\nexport class ObjectClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Object\", module, \"Basisklasse aller Klassen\");\r\n\r\n        // stringPrimitiveType is used here before it is initialized. This problem is solved\r\n        // in the constructor of StringprimitiveType.\r\n        let m = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n        (parameters) => {\r\n            if(parameters[0].value instanceof RuntimeObject){\r\n                return \"(\" + (<RuntimeObject><unknown>parameters[0].value).class.identifier + \")\";\r\n            } else {\r\n                return parameters[0].value;\r\n            }\r\n\r\n\r\n        }, false, false);\r\n        m.isVirtual = true;\r\n        \r\n        this.addMethod(m);\r\n\r\n\r\n        // // Add default parameterless constructor\r\n        // let m = new Method(\"Object\", new Parameterlist([]), null,\r\n        // (parameters) => {\r\n\r\n        // }, false, false);\r\n        \r\n        // m.isConstructor = true;\r\n\r\n        // this.addMethod(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]) - 1, Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}\r\n\r\nexport function nullToString(s: string) {\r\n  return s == null ? \"null\" : s;\r\n}\r\n\r\nexport function floatToString(val: number){\r\n  return val + (Number.isInteger(val)? \".0\": \"\");\r\n}","import { TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass, setBooleanPrimitiveTypeCopy } from \"./Class.js\";\r\nimport { ObjectClass } from \"./ObjectClass.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\nimport { IntegerClass } from \"./boxedTypes/IntegerClass.js\";\r\nimport { LongClass } from \"./boxedTypes/LongClass.js\";\r\nimport { FloatClass } from \"./boxedTypes/FloatClass.js\";\r\nimport { CharacterClass } from \"./boxedTypes/CharacterClass.js\";\r\nimport { BooleanClass } from \"./boxedTypes/BooleanClass.js\";\r\nimport { DoubleClass } from \"./boxedTypes/DoubleClass.js\";\r\nimport { createSemanticDiagnosticsBuilderProgram } from \"typescript\";\r\nimport { floatToString, nullToString } from \"../../tools/StringTools.js\";\r\n\r\nexport class NullType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"null\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface || type instanceof ArrayType);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return {\r\n            value: value.value,\r\n            type: type\r\n        };\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"null\";\r\n    }\r\n}\r\n\r\nexport class VarType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"var\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"var\";\r\n    }\r\n}\r\n\r\nexport class IntPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"int\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.modulo]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.division]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.tilde]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n\r\n            // binary ops\r\n            [TokenType.OR]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.XOR]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.ampersand]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftLeft]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRight]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRightUnsigned]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: true, needsStatement: false },\r\n            \"long\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: true },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.integerConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == charPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: String.fromCharCode(<number>value.value)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value / <number>(secondOperand.value));\r\n                }\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.modulo:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value % <number>(secondOperand.value));\r\n                }\r\n                return 1;\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.tilde:\r\n                return ~value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n            case TokenType.OR:\r\n                return value | <number>(secondOperand.value);\r\n\r\n            case TokenType.XOR:\r\n                return value ^ <number>(secondOperand.value);\r\n\r\n            case TokenType.ampersand:\r\n                return value & <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftLeft:\r\n                return value << <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRight:\r\n                return value >> <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRightUnsigned:\r\n                return value >>> <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class LongPrimitiveType extends IntPrimitiveType {\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"long\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.modulo]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.division]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.tilde]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n\r\n            // binary ops\r\n            [TokenType.OR]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.XOR]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.ampersand]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.shiftLeft]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.shiftRight]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.shiftRightUnsigned]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: false, needsStatement: false },\r\n            \"long\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n            \"Long\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.longConstant;\r\n    }\r\n}\r\n\r\n\r\nexport class FloatPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"float\";\r\n\r\n        this.description = \"Fließkommazahl mit einfacher Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.minus]: { \"none\": floatPrimitiveType, \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.negation]: { \"none\": floatPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, doublePrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: true },\r\n            \"Double\": { automatic: true, needsStatement: true },\r\n        }\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        // if (type == doublePrimitiveType || type == DoubleType || type == FloatType) {\r\n        //     return {\r\n        //         type: type,\r\n        //         value: value.value\r\n        //     }\r\n        // }\r\n\r\n    }\r\n\r\n    public valueToString(value: Value): string {\r\n        return floatToString(value.value);\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class DoublePrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"double\";\r\n\r\n        this.description = \"Fließkommazahl mit doppelter Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.minus]: { \"none\": doublePrimitiveType, \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.negation]: { \"none\": doublePrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, floatPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"Float\": { automatic: true, needsStatement: true },\r\n            \"Double\": { automatic: true, needsStatement: true },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        // let unboxed = this.unboxFrom(value, type);\r\n        // if (unboxed != null) return unboxed;\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        // if (type == floatPrimitiveType || type == FloatType || type == DoubleType) {\r\n        //     return {\r\n        //         type: type,\r\n        //         value: value.value\r\n        //     }\r\n        // }\r\n\r\n    }\r\n\r\n    public valueToString(value: Value): string {\r\n        return floatToString(value.value);\r\n    }\r\n\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BooleanPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"boolean\";\r\n\r\n        this.description = \"boolescher Wert (true oder false)\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: {},\r\n            [TokenType.and]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.or]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.not]: { \"none\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"boolean\": booleanPrimitiveType },\r\n        };\r\n\r\n        this.canCastToMap = {\r\n            \"boolean\": { automatic: true, needsStatement: false },\r\n            \"Boolean\": { automatic: true, needsStatement: true },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.booleanConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return undefined;\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <boolean>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + nullToString(<string>(secondOperand.value));\r\n\r\n            case TokenType.equal:\r\n                return value == <boolean>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <boolean>(secondOperand.value);\r\n\r\n            case TokenType.and:\r\n                return value && <boolean>(secondOperand.value);\r\n\r\n            case TokenType.or:\r\n                return value || <boolean>(secondOperand.value);\r\n\r\n            case TokenType.not:\r\n                return !value;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <boolean>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class VoidPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"void\";\r\n\r\n        this.description = \"leerer Rückgabewert\"\r\n\r\n        this.operationTable = {\r\n        };\r\n\r\n        this.canCastToMap = {};\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.keywordVoid;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"void\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class StringPrimitiveType extends Klass {\r\n\r\n    private operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.stringConstant;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            return super.getResultType(operation, secondOperandType);\r\n        }\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"String\", null, \"Ein Objekt der Klasse String speichert eine Zeichenkette.\");\r\n        this.baseClass = baseClass;\r\n        let stringClass = this;\r\n        baseClass.methods.filter(m => m.identifier == \"toString\").forEach(m => m.returnType = stringClass);\r\n    }\r\n\r\n    init() {\r\n        this.operationTable = {\r\n            [TokenType.plus]: {\r\n                \"String\": stringPrimitiveType //, \"int\": stringPrimitiveType,\r\n                // \"float\": stringPrimitiveType, \"double\": stringPrimitiveType,\r\n                // \"boolean\": stringPrimitiveType, \"char\": stringPrimitiveType\r\n            },\r\n            [TokenType.equal]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"String\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n\r\n        this.addMethod(new Method(\"length\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).length; }, false, false, \"Länge der Zeichenkette, d.h. Anzahl der Zeichen in der Zeichenkette.\"));\r\n        this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return <string>parameters[0].value == <string>(parameters[1].value); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (unter Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { caseFirst: 'upper' }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"compareToIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { sensitivity: \"accent\" }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"equalsIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLowerCase() == (<string>(parameters[1].value).toLowerCase()); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (**ohne** Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"endsWith\", new Parameterlist([{ identifier: \"suffix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).endsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = suffix) endet. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"startsWith\", new Parameterlist([{ identifier: \"präfix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).startsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = präfix) beginnt. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleLowerCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Großbuchstaben durch den entsprechenden Kleinbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleUpperCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Kleinbuchstaben durch den entsprechenden Großbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value)); }, false, false, \"Gibt das hintere Ende der Zeichenkette ab **beginIndex** zurück. **beginIndex** == 1 bedeutet, dass die Zeichenkette ab dem 2.(!) Zeichen zurückgegeben wird. \"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        { identifier: \"endIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die Teil-Zeichenkette von **beginIndex** bis **endIndex** zurück.\\n**Vorsicht: ** beginIndex und endIndex sind nullbasiert, d.h. beginIndex == 0 bedeutet die Position vor dem ersten Zeichen.\"));\r\n        this.addMethod(new Method(\"trim\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).trim(); }, false, false, \"Gibt die Zeichenkette zurück, die entsteht, wenn man am Anfang und Ende der Zeichenkette alle Leerzeichen, Tabs und Zeilenumbrüche entfernt.\"));\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)) == \"\"; }, false, false, \"Gibt genau dann wahr zurück, wenn die Zeichenkette leer ist.\\n**Warnung: ** Die Methode darf nicht mit dem '''null'''-Objekt aufgerufen werden!\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex mit der Suche begonnen.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex - von rechts her beginnend - gesucht.\"));\r\n        this.addMethod(new Method(\"replace\", new Parameterlist([\r\n            { identifier: \"target\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).replace(<string>(parameters[1].value), <string>(parameters[2].value)); }, false, false, \"Ersetzt alle Vorkommen von **target** durch **replacement** und gibt die entstandene Zeichenkette zurück. Die Zeichenkette selbst wird nicht verändert.\"));\r\n        this.addMethod(new Method(\"replaceAll\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **alle** Fundstellen durch **replacement**.\"));\r\n        this.addMethod(new Method(\"matches\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return <string>(parameters[0].value).match(regExp) != null;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert der Zeichenkette dem regulären Ausdruck (regex) entspricht.\"));\r\n        this.addMethod(new Method(\"replaceFirst\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **die erste** Fundstelle durch **replacement**.\"));\r\n        this.addMethod(new Method(\"split\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), new ArrayType(stringPrimitiveType),\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                let strings = (<string>(parameters[0].value)).split(regExp);\r\n                let values: Value[] = [];\r\n                for (let s of strings) {\r\n                    values.push({ type: stringPrimitiveType, value: s });\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, \"Teilt die Zeichenkette an den Stellen, die durch den regulären Ausdruck (regex) definiert sind, in Teile auf. Die Fundstellen des regex werden dabei weggelassen. Gibt die Teile als String-Array zurück.\"));\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        let err: Error = checkNotNull(operation, this, firstOperand, secondOperand, [TokenType.plus, TokenType.keywordInstanceof])\r\n        if (err != null) return err;\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType || secondOperand.type == charPrimitiveType) {\r\n                    return nullToString(value) + <string>(secondOperand.value); // because null + null = 0 in javascript\r\n                } else if (secondOperand.type == booleanPrimitiveType) {\r\n                    return nullToString(value) + <boolean>(secondOperand.value);\r\n                } else {\r\n                    return nullToString(value) + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.lower:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) < 0;\r\n            // return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) > 0;\r\n            // return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) <= 0;\r\n            // return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) >= 0;\r\n            // return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n            case TokenType.keywordInstanceof:\r\n                return super.compute(operation, firstOperand, secondOperand);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public allowsNull(): boolean { return true; }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return '\"' + <string>value.value + '\"';\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class CharPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = \"\\u0000\";\r\n\r\n        this.identifier = \"char\";\r\n\r\n        this.description = \"ein Zeichen\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"char\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: true, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: true },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: false },\r\n            \"Character\": { automatic: true, needsStatement: true },\r\n        }\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.charConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        // let unboxed = this.unboxFrom(value, type);\r\n        // if (unboxed != null) return unboxed;\r\n\r\n        // if (type == stringPrimitiveType || type == CharacterType) {\r\n        //     return {\r\n        //         type: type,\r\n        //         value: value\r\n        //     }\r\n        // }\r\n\r\n        if (type == intPrimitiveType || type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: (<string>value.value).charCodeAt(0)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"'\" + <string>value.value + \"'\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport var voidPrimitiveType = new VoidPrimitiveType();\r\nexport var intPrimitiveType = new IntPrimitiveType();\r\nexport var longPrimitiveType = new LongPrimitiveType();\r\nexport var floatPrimitiveType = new FloatPrimitiveType();\r\nexport var doublePrimitiveType = new DoublePrimitiveType();\r\nexport var booleanPrimitiveType = new BooleanPrimitiveType();\r\nsetBooleanPrimitiveTypeCopy(booleanPrimitiveType);\r\nexport var objectType = new ObjectClass(null);\r\nexport var stringPrimitiveType = new StringPrimitiveType(objectType);\r\nexport var charPrimitiveType = new CharPrimitiveType();\r\nexport var nullType = new NullType();\r\nexport var varType = new VarType();\r\n\r\nexport var IntegerType = new IntegerClass(objectType);\r\nexport var LongType = new LongClass(objectType);\r\nexport var FloatType = new FloatClass(objectType);\r\nexport var DoubleType = new DoubleClass(objectType);\r\nexport var CharacterType = new CharacterClass(objectType);\r\nexport var BooleanType = new BooleanClass(objectType);\r\n\r\nexport var TokenTypeToDataTypeMap: { [tt: number]: Type } = {\r\n    [TokenType.integerConstant]: intPrimitiveType,\r\n    [TokenType.longConstant]: longPrimitiveType,\r\n    [TokenType.floatingPointConstant]: floatPrimitiveType,\r\n    [TokenType.booleanConstant]: booleanPrimitiveType,\r\n    [TokenType.stringConstant]: stringPrimitiveType,\r\n    [TokenType.charConstant]: charPrimitiveType,\r\n    [TokenType.keywordNull]: nullType\r\n}\r\n\r\n\r\nfunction checkNotNull(operation: TokenType, type: Type, firstOperand: Value, secondOperand?: Value, nullAllowedFor: TokenType[] = []): Error {\r\n    if ((firstOperand.value == null || secondOperand.value == null) && !nullAllowedFor.concat([TokenType.equal, TokenType.notEqual]).includes(operation)) {\r\n        let typeAndNull: (v: Value) => string = (v: Value) => v.value == null ? \"(\" + type.identifier + \")\" + \" null\" : type.identifier;\r\n        return new OperandIsNull(\"Unerlaubte Rechnung mit null: \" + typeAndNull(firstOperand) + \" \" + TokenTypeReadable[operation] + \" \" + typeAndNull(secondOperand));\r\n    }\r\n    return null;\r\n}\r\n\r\nexport class OperandIsNull extends Error {\r\n    constructor(message?: string) {\r\n        super(message);\r\n        this.name = \"OperandIsNullError\";\r\n    }\r\n}","import { TextPosition, TokenType, TokenTypeReadable } from \"../compiler/lexer/Token.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Program, Statement, ReturnStatement } from \"../compiler/parser/Program.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { PrimitiveType, Type, Value, Heap, Method } from \"../compiler/types/Types.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Debugger } from \"./Debugger.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { intPrimitiveType, nullType, OperandIsNull, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { InputManager } from \"./InputManager.js\";\r\nimport { WorldHelper } from \"../runtimelibrary/graphics/World.js\";\r\nimport { Helper } from \"../main/gui/Helper.js\";\r\nimport { TimerClass } from \"../runtimelibrary/Timer.js\";\r\nimport { KeyboardTool } from \"../tools/KeyboardTool.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\nimport { GroupHelper } from \"../runtimelibrary/graphics/Group.js\";\r\nimport { WebSocketRequestKeepAlive } from \"../communication/Data.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { ProcessingHelper } from \"../runtimelibrary/graphics/Processing.js\";\r\nimport { GNGEreignisbehandlungHelper } from \"../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GamepadTool } from \"../tools/GamepadTool.js\";\r\nimport { ConnectionHelper } from \"../runtimelibrary/database/Connection.js\";\r\n\r\nexport enum InterpreterState {\r\n    not_initialized, running, paused, error, done, waitingForInput, waitingForTimersToEnd\r\n}\r\n\r\nexport type ProgramStackElement = {\r\n    program: Program,\r\n    programPosition: number,  // next position to execute after return\r\n    textPosition: TextPosition, // textposition of method call\r\n    method: Method | string,\r\n    callbackAfterReturn: (interpreter: Interpreter) => void,\r\n    isCalledFromOutside: string,\r\n    stackElementsToPushBeforeFirstExecuting?: Value[]\r\n};\r\n\r\nexport class Interpreter {\r\n\r\n    debugger: Debugger;\r\n\r\n    mainModule: Module;\r\n    moduleStore: ModuleStore;\r\n    moduleStoreVersion: number = -100;\r\n\r\n    printManager: PrintManager;\r\n    inputManager: InputManager;\r\n\r\n    stepsPerSecond = 2;\r\n    maxStepsPerSecond = 1000000;\r\n    timerDelayMs = 10;\r\n\r\n    timerId: any;\r\n    state: InterpreterState;\r\n\r\n    currentProgram: Program;\r\n    currentProgramPosition: number;\r\n    currentMethod: Method | string;\r\n    currentCallbackAfterReturn: (interpreter: Interpreter) => void;\r\n    currentIsCalledFromOutside: string\r\n\r\n    programStack: ProgramStackElement[] = [];\r\n\r\n    stack: Value[] = [];\r\n    stackframes: number[] = [];\r\n    currentStackframe: number;\r\n\r\n    heap: Heap = {};\r\n\r\n    timerStopped: boolean = true;\r\n    timerExtern: boolean = false;\r\n\r\n    steps: number = 0;\r\n    timeNetto: number = 0;\r\n    timeWhenProgramStarted: number = 0;\r\n\r\n    stepOverNestingLevel: number = 0;\r\n    leaveLine: number = -1;\r\n    additionalStepFinishedFlag: boolean = false;\r\n\r\n    isFirstStatement: boolean = true;\r\n\r\n    showProgrampointerUptoStepsPerSecond = 15;\r\n\r\n    worldHelper: WorldHelper;\r\n    gngEreignisbehandlungHelper: GNGEreignisbehandlungHelper;\r\n    processingHelper: ProcessingHelper;\r\n    databaseConnectionHelpers: ConnectionHelper[] = [];\r\n\r\n    keyboardTool: KeyboardTool;\r\n    gamepadTool: GamepadTool;\r\n\r\n    webSocketsToCloseAfterProgramHalt: WebSocket[] = [];\r\n\r\n    pauseUntil?: number;\r\n\r\n    actions: string[] = [\"start\", \"pause\", \"stop\", \"stepOver\",\r\n        \"stepInto\", \"stepOut\", \"restart\"];\r\n\r\n    // buttonActiveMatrix[button][i] tells if button is active at \r\n    // InterpreterState i\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n    callbackAfterExecution: () => void;\r\n\r\n    constructor(public main: MainBase, public debugger_: Debugger, public controlButtons: ProgramControlButtons,\r\n        $runDiv: JQuery<HTMLElement>) {\r\n        this.printManager = new PrintManager($runDiv, this.main);\r\n        this.inputManager = new InputManager($runDiv, this.main);\r\n        if (main.isEmbedded()) {\r\n            this.keyboardTool = new KeyboardTool(jQuery('html'), main);\r\n        } else {\r\n            this.keyboardTool = new KeyboardTool(jQuery(window), main);\r\n        }\r\n\r\n        this.gamepadTool = new GamepadTool();\r\n\r\n        this.debugger = debugger_;\r\n\r\n        controlButtons.setInterpreter(this);\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.steps = 0;\r\n        this.timeNetto = 0;\r\n        this.timerEvents = 0;\r\n\r\n        this.timerDelayMs = 7;\r\n\r\n        let that = this;\r\n\r\n        let periodicFunction = () => {\r\n\r\n            if (!that.timerExtern) {\r\n                that.timerFunction(that.timerDelayMs, false, 0.7);\r\n            }\r\n\r\n        }\r\n\r\n        this.timerId = setInterval(periodicFunction, this.timerDelayMs);\r\n\r\n        let keepAliveRequest: WebSocketRequestKeepAlive = { command: 5 };\r\n        let req = JSON.stringify(keepAliveRequest);\r\n        setInterval(() => {\r\n            that.webSocketsToCloseAfterProgramHalt.forEach(ws => ws.send(req));\r\n        }, 30000);\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        let startFunction = () => {\r\n            that.stepOverNestingLevel = 1000000;\r\n            that.start();\r\n        };\r\n\r\n        let pauseFunction = () => {\r\n            that.pause();\r\n        };\r\n\r\n        am.registerAction(\"interpreter.start\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Programm starten\", this.controlButtons.$buttonStart);\r\n\r\n        am.registerAction(\"interpreter.pause\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Pause\", this.controlButtons.$buttonPause);\r\n\r\n        am.registerAction(\"interpreter.stop\", [],\r\n            () => {\r\n                that.stop(false);\r\n                that.steps = 0;\r\n            }, \"Programm anhalten\", this.controlButtons.$buttonStop);\r\n\r\n        // this.controlButtons.$buttonEdit.on('click', (e) => {\r\n        //     e.stopPropagation();\r\n        //     am.trigger('interpreter.stop');\r\n        // });\r\n\r\n        am.registerAction(\"interpreter.stepOver\", ['F6'],\r\n            () => {\r\n                this.oneStep(false);\r\n            }, \"Einzelschritt (Step over)\", this.controlButtons.$buttonStepOver);\r\n\r\n        am.registerAction(\"interpreter.stepInto\", ['F7'],\r\n            () => {\r\n                this.oneStep(true);\r\n            }, \"Einzelschritt (Step into)\", this.controlButtons.$buttonStepInto);\r\n\r\n        am.registerAction(\"interpreter.stepOut\", [],\r\n            () => {\r\n                this.stepOut();\r\n            }, \"Step out\", this.controlButtons.$buttonStepOut);\r\n\r\n        am.registerAction(\"interpreter.restart\", [],\r\n            () => {\r\n                that.stop(true);\r\n            }, \"Neu starten\", this.controlButtons.$buttonRestart);\r\n\r\n        this.setState(InterpreterState.not_initialized);\r\n\r\n    }\r\n\r\n    getStartableModule(moduleStore: ModuleStore): Module {\r\n\r\n        let cem: Module;\r\n        cem = this.main.getCurrentlyEditedModule();\r\n\r\n        let currentlyEditedModuleIsClassOnly = false;\r\n\r\n        // decide which module to start\r\n\r\n        // first attempt: is currently edited Module startable?\r\n        if (cem != null) {\r\n            let currentlyEditedModule = moduleStore.findModuleByFile(cem.file);\r\n            if (currentlyEditedModule != null) {\r\n                currentlyEditedModuleIsClassOnly = !cem.hasErrors()\r\n                    && !currentlyEditedModule.isStartable;\r\n                if (currentlyEditedModule.isStartable) {\r\n                    return currentlyEditedModule;\r\n                }\r\n            }\r\n        }\r\n\r\n        // second attempt: which module has been started last time?\r\n        if (this.mainModule != null && currentlyEditedModuleIsClassOnly) {\r\n            let lastMainModule = moduleStore.findModuleByFile(this.mainModule.file);\r\n            if (lastMainModule != null && lastMainModule.isStartable) {\r\n                return lastMainModule;\r\n            }\r\n        }\r\n\r\n        // third attempt: pick first startable module of current workspace\r\n        if (currentlyEditedModuleIsClassOnly) {\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if (m.isStartable) {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n        After user clicks start button (or stepover/stepInto-Button when no program is running) this\r\n        method ist called.\r\n    */\r\n    init() {\r\n\r\n        this.timerStopped = true;\r\n\r\n        let cem = this.main.getCurrentlyEditedModule();\r\n\r\n        cem.getBreakpointPositionsFromEditor();\r\n\r\n        this.main.getBottomDiv()?.console?.clearExceptions();\r\n\r\n        /*\r\n            As long as there is no startable new Version of current workspace we keep current compiled modules so\r\n            that variables and objects defined/instantiated via console can be kept, too. \r\n        */\r\n        if (this.moduleStoreVersion != this.main.version && this.main.getCompiler().atLeastOneModuleIsStartable) {\r\n            this.main.copyExecutableModuleStoreToInterpreter();\r\n            this.heap = {}; // clear variables/objects defined via console\r\n            this.main.getBottomDiv()?.console?.detachValues();  // detach values from console entries\r\n        }\r\n\r\n        let newMainModule = this.getStartableModule(this.moduleStore);\r\n\r\n        if (newMainModule == null) {\r\n            this.setState(InterpreterState.not_initialized);\r\n            return;\r\n        }\r\n\r\n        this.mainModule = newMainModule;\r\n\r\n        this.currentProgramPosition = 0;\r\n\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n        this.currentStackframe = 0;\r\n\r\n        this.setState(InterpreterState.done);\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.stepOverNestingLevel = 1000000;\r\n\r\n\r\n        // Instantiate enum value-objects; initialize static attributes; call static constructors\r\n\r\n        this.programStack.push({\r\n            program: this.mainModule.mainProgram,\r\n            programPosition: 0,\r\n            textPosition: { line: 1, column: 1, length: 0 },\r\n            method: \"Hauptprogramm\",\r\n            callbackAfterReturn: null,\r\n            isCalledFromOutside: \"Hauptprogramm\"\r\n\r\n        })\r\n\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            this.initializeEnums(m);\r\n            this.initializeClasses(m);\r\n        }\r\n\r\n        this.popProgram();\r\n\r\n    }\r\n\r\n    popProgram() {\r\n        let p = this.programStack.pop();\r\n        this.currentProgram = p.program;\r\n        this.currentProgramPosition = p.programPosition;\r\n        this.currentMethod = p.method;\r\n        this.currentCallbackAfterReturn = p.callbackAfterReturn;\r\n        this.currentIsCalledFromOutside = p.isCalledFromOutside;\r\n        if (p.stackElementsToPushBeforeFirstExecuting != null) {\r\n\r\n            this.stackframes.push(this.currentStackframe == null ? 0 : this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n\r\n            for (let se of p.stackElementsToPushBeforeFirstExecuting) this.stack.push(se);\r\n            p.stackElementsToPushBeforeFirstExecuting = null;\r\n        }\r\n    }\r\n\r\n    initializeClasses(m: Module) {\r\n\r\n        for (let klass of m.typeStore.typeList) {\r\n            if (klass instanceof Klass) {\r\n                klass.staticClass.classObject = new RuntimeObject(klass.staticClass);\r\n                klass.pushStaticInitializationPrograms(this.programStack);\r\n            }\r\n\r\n            if (klass instanceof Enum) {\r\n                // let staticValueMap = klass.staticClass.classObject.attributeValues.get(klass.identifier);\r\n                let staticValueList = klass.staticClass.classObject.attributes;\r\n                for (let enumInfo of klass.enumInfoList) {\r\n                    // staticValueMap.get(enumInfo.identifier).value = enumInfo.object;\r\n                    staticValueList[enumInfo.ordinal].value = enumInfo.object;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    initializeEnums(m: Module) {\r\n\r\n        for (let enumClass of m.typeStore.typeList) {\r\n            if (enumClass instanceof Enum) {\r\n\r\n                enumClass.pushStaticInitializationPrograms(this.programStack);\r\n\r\n                let valueList: Value[] = [];\r\n\r\n                let valueInitializationProgram: Program = {\r\n                    module: enumClass.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                };\r\n\r\n                let hasAttributeInitializationProgram = enumClass.attributeInitializationProgram.statements.length > 0;\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    this.programStack.push({\r\n                        program: valueInitializationProgram,\r\n                        programPosition: 0,\r\n                        textPosition: { line: 1, column: 1, length: 0 },\r\n                        method: \"Attribut-Initialisierung der Klasse \" + enumClass.identifier,\r\n                        callbackAfterReturn: null,\r\n                        isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                    });\r\n\r\n                }\r\n\r\n\r\n                for (let enumInfo of enumClass.enumInfoList) {\r\n                    enumInfo.object = new EnumRuntimeObject(enumClass, enumInfo);\r\n\r\n                    valueList.push({\r\n                        type: enumClass,\r\n                        value: enumInfo.object\r\n                    });\r\n\r\n                    if (enumInfo.constructorCallProgram != null) {\r\n                        this.programStack.push({\r\n                            program: enumInfo.constructorCallProgram,\r\n                            programPosition: 0,\r\n                            textPosition: { line: 1, column: 1, length: 0 },\r\n                            method: \"Konstruktor von \" + enumClass.identifier,\r\n                            callbackAfterReturn: null,\r\n                            isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                        });\r\n\r\n                    }\r\n\r\n                    if (hasAttributeInitializationProgram) {\r\n                        valueInitializationProgram.statements.push({\r\n                            type: TokenType.initializeEnumValue,\r\n                            position: enumInfo.position,\r\n                            enumClass: enumClass,\r\n                            valueIdentifier: enumInfo.identifier\r\n                        })\r\n                    }\r\n\r\n                }\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    valueInitializationProgram.statements.push({\r\n                        type: TokenType.programEnd,\r\n                        position: { line: 0, column: 0, length: 1 }\r\n                    })\r\n                }\r\n\r\n                enumClass.valueList = {\r\n                    type: new ArrayType(enumClass),\r\n                    value: valueList\r\n                };\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    timerEvents: number = 0;\r\n    start(callback?: () => void) {\r\n\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n\r\n        this.callbackAfterExecution = callback;\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.pauseUntil = null;\r\n\r\n        if (this.state == InterpreterState.error || this.state == InterpreterState.done) {\r\n            this.init();\r\n            this.resetRuntime();\r\n        }\r\n\r\n        this.setState(InterpreterState.running);\r\n\r\n        this.hideProgrampointerPosition();\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.timerStopped = false;\r\n\r\n        this.getTimerClass().startTimer();\r\n\r\n    }\r\n\r\n    getTimerClass(): TimerClass {\r\n        let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n        return <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n    }\r\n\r\n    lastStepTime: number = 0;\r\n    lastTimeBetweenEvents: number = 0;\r\n\r\n    timerFunction(timerDelayMs: number, forceRun: boolean, maxWorkloadFactor: number) {\r\n\r\n        let t0 = performance.now();\r\n\r\n        if (!forceRun) {\r\n            let timeBetweenSteps = 1000 / this.stepsPerSecond;\r\n            if (this.timerStopped || t0 - this.lastStepTime < timeBetweenSteps) return;\r\n            this.lastStepTime = t0;\r\n        }\r\n\r\n        this.lastTimeBetweenEvents = t0 - this.lastStepTime;\r\n\r\n        let n_stepsPerTimerGoal = forceRun ? Number.MAX_SAFE_INTEGER : this.stepsPerSecond * this.timerDelayMs / 1000;\r\n\r\n        this.timerEvents++;\r\n\r\n        let exception: string;\r\n        let i = 0;\r\n\r\n        while (i < n_stepsPerTimerGoal && !this.timerStopped && exception == null &&\r\n            (performance.now() - t0) / timerDelayMs < maxWorkloadFactor\r\n        ) {\r\n            exception = this.nextStep();\r\n            if (exception != null) {\r\n                break;\r\n            }\r\n\r\n            if (this.stepsPerSecond <= this.showProgrampointerUptoStepsPerSecond && !forceRun) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n\r\n            if (this.state == InterpreterState.error ||\r\n                this.state == InterpreterState.done) {\r\n                this.timerStopped = true;\r\n            }\r\n\r\n\r\n            if (this.stepOverNestingLevel < 0 && !this.timerStopped) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n                let position = node.position;\r\n                if (position == null || position.line != this.leaveLine) {\r\n                    this.timerStopped = true;\r\n                    this.setState(InterpreterState.paused);\r\n\r\n                    if (this.comesStatement(TokenType.closeStackframe)) {\r\n                        exception = this.nextStep();\r\n                        if (exception == null && this.comesStatement(TokenType.programEnd)) {\r\n                            exception = this.nextStep();\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n        }\r\n\r\n        if (this.timerStopped) {\r\n            if (this.state == InterpreterState.paused || this.state == InterpreterState.waitingForInput) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n            if (this.callbackAfterExecution != null) {\r\n                this.callbackAfterExecution();\r\n                this.callbackAfterExecution = null;\r\n            }\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        this.timeNetto += dt;\r\n\r\n        // if (\r\n        //     this.timerEvents % 300 == 0) {\r\n        //     console.log(\"Last time between Events: \" + this.lastTimeBetweenEvents);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    throwException(exception: string) {\r\n        this.timerStopped = true;\r\n        this.setState(InterpreterState.error);\r\n\r\n        let $errorDiv = jQuery('<div class=\"jo_exception\"></div>');\r\n\r\n        let consolePresent: boolean = true;\r\n        if (this.main.isEmbedded()) {\r\n            let mainEmbedded: MainEmbedded = <MainEmbedded>this.main;\r\n            let config = mainEmbedded.config;\r\n            if (config.withBottomPanel != true && config.withConsole != true) {\r\n                consolePresent = false;\r\n                let positionString = \"\";\r\n                let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n                if (currentStatement != null) {\r\n                    let textPosition = currentStatement?.position;\r\n                    positionString = \" in Zeile \" + textPosition.line + \", Spalte \" + textPosition.column;\r\n\r\n                    this.main.getBottomDiv()?.console?.showError(this.currentProgram.module, textPosition);\r\n                }\r\n\r\n                alert(\"Fehler\" + positionString + \": \" + exception);\r\n\r\n            }\r\n        }\r\n\r\n        if (consolePresent) {\r\n            $errorDiv.append(jQuery(\"<span class='jo_error-caption'>Fehler:</span>&nbsp;\" + exception + \"<br>\"));\r\n            this.pushCurrentProgram();\r\n\r\n            let first = true;\r\n            for (let i = this.programStack.length - 1; i >= 0; i--) {\r\n\r\n                let p = this.programStack[i];\r\n                let m = (p.method instanceof Method) ? p.method.identifier : p.method;\r\n                let s: string = \"<span class='jo_error-caption'>\" + (first ? \"Ort\" : \"aufgerufen von\") + \": </span>\" + m;\r\n                if (p.textPosition != null) s += \" <span class='jo_runtimeErrorPosition'>(Z \" + p.textPosition.line + \", S \" + p.textPosition.column + \")</span>\";\r\n                s += \"<br>\";\r\n                let errorLine = jQuery(s);\r\n                if (p.textPosition != null) {\r\n                    let that = this;\r\n                    jQuery(errorLine[2]).on('mousedown', () => {\r\n                        that.main.getBottomDiv()?.console?.showError(p.program.module, p.textPosition);\r\n                    });\r\n                }\r\n                $errorDiv.append(errorLine);\r\n\r\n                first = false;\r\n                if (p.isCalledFromOutside != null) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let console = this.main.getBottomDiv()?.console;\r\n\r\n            if (console != null) {\r\n                console.writeConsoleEntry($errorDiv, null, 'rgba(255, 0, 0, 0.4');\r\n                console.showTab();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    hideProgrampointerPosition() {\r\n\r\n        if (this.state == InterpreterState.running) {\r\n\r\n            if (this.stepsPerSecond > this.showProgrampointerUptoStepsPerSecond) {\r\n                this.main.hideProgramPointerPosition();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    comesStatement(statement: TokenType) {\r\n        if (this.currentProgram == null) return false;\r\n        if (this.currentProgramPosition > this.currentProgram.statements.length - 1) return false;\r\n        return this.currentProgram.statements[this.currentProgramPosition].type == statement;\r\n    }\r\n\r\n    resetRuntime() {\r\n        this.printManager.clear();\r\n        this.worldHelper?.destroyWorld();\r\n        this.processingHelper?.destroyWorld();\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n    }\r\n\r\n    stop(restart: boolean = false) {\r\n        this.inputManager.hide();\r\n        this.setState(InterpreterState.paused);\r\n        this.timerStopped = true;\r\n\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.spriteAnimations = [];\r\n        }\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n        this.main.hideProgramPointerPosition();\r\n\r\n        this.getTimerClass().stopTimer();\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.cacheAsBitmap();\r\n        }\r\n\r\n        this.databaseConnectionHelpers.forEach((ch) => ch.close());\r\n        this.databaseConnectionHelpers = [];\r\n\r\n        this.heap = {};\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n\r\n\r\n        setTimeout(() => {\r\n            this.setState(InterpreterState.done);\r\n            this.main.hideProgramPointerPosition();\r\n            if (restart) {\r\n                this.start();\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    pause() {\r\n        this.setState(InterpreterState.paused);\r\n        this.showProgramPointerAndVariables();\r\n        this.timerStopped = true;\r\n    }\r\n\r\n    lastPrintedModule: Module = null;\r\n    showProgramPointerAndVariables() {\r\n        if (this.currentProgram == null) return;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (node == null) return;\r\n        let position = node.position;\r\n        if (position != null) {\r\n            this.main.showProgramPointerPosition(this.currentProgram.module.file, position);\r\n            this.debugger.showData(this.currentProgram, position, this.stack, this.currentStackframe, this.heap);\r\n            let bottomDiv = this.main.getBottomDiv();\r\n            if (bottomDiv.programPrinter != null) {\r\n                if (this.currentProgram.module != this.lastPrintedModule) {\r\n                    this.main.getBottomDiv().printModuleToBottomDiv(null, this.currentProgram.module);\r\n                    this.lastPrintedModule = this.currentProgram.module;\r\n                }\r\n                this.main.getBottomDiv().programPrinter.showNode(node);\r\n            }\r\n        }\r\n    }\r\n\r\n    stepOut() {\r\n        this.stepOverNestingLevel = 0;\r\n        this.start();\r\n    }\r\n\r\n    oneStep(stepInto: boolean) {\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n        this.isFirstStatement = true;\r\n        if (this.state != InterpreterState.paused) {\r\n            this.init();\r\n            if (this.state == InterpreterState.not_initialized) {\r\n                return;\r\n            }\r\n            this.resetRuntime();\r\n            this.showProgramPointerAndVariables();\r\n            this.setState(InterpreterState.paused);\r\n            // Are there static Variables to initialize?\r\n            if (this.currentMethod == \"Hauptprogramm\") {\r\n                // No static variable initializers\r\n                this.return;\r\n            }\r\n        }\r\n        this.stepOverNestingLevel = 10000;\r\n        let oldStepOverNestingLevel = this.stepOverNestingLevel;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        let position = node.position;\r\n        let exception = this.nextStep();\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n            return;\r\n        }\r\n\r\n        if (!stepInto && this.stepOverNestingLevel > oldStepOverNestingLevel) {\r\n            this.stepOverNestingLevel = 0;\r\n            if (position != null) {\r\n                this.leaveLine = position.line;\r\n            } else {\r\n                this.leaveLine = -1;\r\n            }\r\n            this.start();\r\n        } else\r\n            //@ts-ignore\r\n            if (this.state == InterpreterState.done) {\r\n                this.main.hideProgramPointerPosition();\r\n            } else {\r\n                this.showProgramPointerAndVariables();\r\n                //@ts-ignore\r\n                if (this.state != InterpreterState.waitingForInput) {\r\n                    this.setState(InterpreterState.paused);\r\n                }\r\n            }\r\n\r\n    }\r\n\r\n    stepFinished: boolean = false;\r\n\r\n    nextStep(): string {\r\n\r\n        this.stepFinished = false;\r\n\r\n        let node: Statement;\r\n\r\n        let exception: string;\r\n\r\n        while (!this.stepFinished && !this.additionalStepFinishedFlag && exception == null) {\r\n\r\n\r\n            if (typeof this.currentProgram == \"undefined\") {\r\n                debugger;\r\n            }\r\n\r\n            if (this.currentProgramPosition > this.currentProgram.statements.length - 1) {\r\n                this.setState(InterpreterState.done);\r\n                break;\r\n            }\r\n\r\n            node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n            if (node.stepFinished != null) {\r\n                this.stepFinished = node.stepFinished;\r\n            }\r\n\r\n            exception = this.executeNode(node);\r\n\r\n        }\r\n\r\n        this.additionalStepFinishedFlag = false;\r\n\r\n        this.steps++;\r\n\r\n        return exception;\r\n    }\r\n\r\n    executeNode(node: Statement): string {\r\n\r\n        if (node.breakpoint != null && !this.isFirstStatement) {\r\n            this.additionalStepFinishedFlag = true;\r\n            this.pause();\r\n            return;\r\n        }\r\n\r\n        this.isFirstStatement = false;\r\n        let stackTop = this.stack.length - 1;\r\n        let stackframeBegin = this.currentStackframe;\r\n        let stack = this.stack;\r\n        let value: Value;\r\n\r\n        switch (node.type) {\r\n            case TokenType.castValue:\r\n                let relPos = node.stackPosRelative == null ? 0 : node.stackPosRelative;\r\n                value = stack[stackTop + relPos];\r\n                try {\r\n                    let casted = value.type.castTo(value, node.newType);\r\n                    if (casted == undefined) casted = {\r\n                        value: value.value,\r\n                        type: node.newType\r\n                    }\r\n                    stack[stackTop + relPos] = casted;\r\n                } catch (err) {\r\n                    if (err.message) return err.message;\r\n                    else return \"Bei dem Casten von \" + value.type.identifier + \" zu \" + node.newType.identifier + \" trat ein Fehler auf: \" + err.name + \".\";\r\n                }\r\n                break;\r\n            case TokenType.checkCast:\r\n                value = stack[stackTop];\r\n                if (value.value == null) break;\r\n                let rto = <RuntimeObject>value.value;\r\n                if (node.newType instanceof Klass) {\r\n                    if (typeof rto == \"object\") {\r\n                        if (!rto.class.hasAncestorOrIs(node.newType)) {\r\n                            return (\"Das Objekt der Klasse \" + rto.class.identifier + \" kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    } else {\r\n                        if (typeof rto == \"number\" && [\"Integer\", \"Double\", \"Float\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zahl kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"string\" && [\"String\", \"Character\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zeichenkette kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"boolean\" && node.newType.identifier != \"Boolean\") {\r\n                            return (\"Ein boolescher Wert kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    }\r\n                } else if (node.newType instanceof Interface) {\r\n                    if (!(<Klass>rto.class).implementsInterface(node.newType)) {\r\n                        return (\"Das Objekt der Klasse \" + rto.class.identifier + \" implementiert nicht das Interface \" + node.newType.identifier + \".\");\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.localVariableDeclaration:\r\n                let variable = node.variable;\r\n                let type = variable.type;\r\n                value = {\r\n                    type: type,\r\n                    value: null\r\n                };\r\n                if (type instanceof PrimitiveType) {\r\n                    value.value = type.initialValue;\r\n                }\r\n                stack[variable.stackPos + stackframeBegin] = value;\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    stack.push(value);\r\n                }\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                stack.push(stack[node.stackposOfVariable + stackframeBegin]);\r\n                break;\r\n            case TokenType.popAndStoreIntoVariable:\r\n                stack[node.stackposOfVariable + stackframeBegin] = stack.pop();\r\n                break;\r\n            case TokenType.pushAttribute:\r\n                let object1 = node.useThisObject ? stack[stackframeBegin].value : stack.pop().value;\r\n                if (object1 == null) return \"Zugriff auf ein Attribut (\" + node.attributeIdentifier + \") des null-Objekts\";\r\n                let value1 = (<RuntimeObject>object1).getValue(node.attributeIndex);\r\n                if (value1?.updateValue != null) {\r\n                    value1.updateValue(value1);\r\n                }\r\n                stack.push(value1);\r\n                break;\r\n            case TokenType.pushArrayLength:\r\n                let a = stack.pop().value;\r\n                if (a == null) return \"Zugriff auf das length-Attribut des null-Objekts\";\r\n                stack.push({ type: intPrimitiveType, value: (<any[]>a).length });\r\n                break;\r\n            case TokenType.assignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value = value.value;\r\n                if (!(stack[stackTop - 1].type instanceof PrimitiveType)) {\r\n                    stack[stackTop - 1].type = value.type;\r\n                }\r\n                if (!node.leaveValueOnStack) {\r\n                    stack.pop();\r\n                }\r\n                break;\r\n            case TokenType.plusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value += value.value;\r\n                break;\r\n            case TokenType.minusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value -= value.value;\r\n                break;\r\n            case TokenType.multiplicationAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value *= value.value;\r\n                break;\r\n            case TokenType.divisionAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value /= value.value;\r\n                break;\r\n            case TokenType.moduloAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value %= value.value;\r\n                break;\r\n            case TokenType.ANDAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value &= value.value;\r\n                break;\r\n            case TokenType.ORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value |= value.value;\r\n                break;\r\n            case TokenType.XORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value ^= value.value;\r\n                break;\r\n            case TokenType.shiftLeftAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value <<= value.value;\r\n                break;\r\n            case TokenType.shiftRightAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>= value.value;\r\n                break;\r\n            case TokenType.shiftRightUnsignedAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>>= value.value;\r\n                break;\r\n            case TokenType.binaryOp:\r\n                let secondOperand = stack.pop();\r\n                let resultValue =\r\n                    node.leftType.compute(node.operator, stack[stackTop - 1], secondOperand);\r\n                if (resultValue instanceof Error) {\r\n                    if (resultValue.message) return resultValue.message;\r\n                    else \"Bei der Berechnung von \" + stack[stackTop - 1].type.identifier + \" \" +\r\n                        TokenTypeReadable[node.operator] + \" \" + secondOperand.type.identifier +\r\n                        \" trat ein Fehler (\" + resultValue.name + \") auf.\"\r\n\r\n                }\r\n                let resultType = node.leftType.getResultType(node.operator, secondOperand.type);\r\n                stack[stackTop - 1] = {\r\n                    type: resultType,\r\n                    value: resultValue\r\n                };\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let oldValue = stack.pop();\r\n                if (node.operator == TokenType.minus) {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: -oldValue.value\r\n                    })\r\n                } else {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: !oldValue.value\r\n                    })\r\n                }\r\n                break;\r\n            case TokenType.pushConstant:\r\n                stack.push({\r\n                    value: node.value,\r\n                    type: node.dataType\r\n                });\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                if (node.klass instanceof Klass) {\r\n                    stack.push({\r\n                        type: node.klass.staticClass,\r\n                        value: node.klass.staticClass.classObject\r\n                    });\r\n                } else {\r\n                    // This is to enable instanceof operator with interfaces\r\n                    stack.push({\r\n                        type: node.klass,\r\n                        value: node.klass\r\n                    });\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                value = node.klass.classObject.getValue(node.attributeIndex);\r\n                if (value.updateValue != null) {\r\n                    value.updateValue(value);\r\n                }\r\n                stack.push(value);\r\n                break;\r\n            // case TokenType.pushStaticAttributeIntrinsic:\r\n            //     value = node.\r\n            //     stack.push({ type: node.attribute.type, value: node.attribute.updateValue(null) });\r\n            //     break;\r\n            case TokenType.selectArrayElement:\r\n                let index = stack.pop();\r\n                let array = stack.pop();\r\n\r\n                if (array.value == null) return \"Zugriff auf ein Element eines null-Feldes\";\r\n\r\n                if (index.value >= array.value.length || index.value < 0) {\r\n                    return \"Zugriff auf das Element mit Index \" + index.value + \" eines Feldes der Länge \" + array.value.length;\r\n                }\r\n                stack.push(array.value[index.value]);\r\n                break;\r\n\r\n            case TokenType.callMainMethod:\r\n                this.stack.push({ value: node.staticClass.classObject, type: node.staticClass });\r\n\r\n                let parameter: Value = {\r\n                    value: [{ value: \"Test\", type: stringPrimitiveType }],\r\n                    type: new ArrayType(stringPrimitiveType)\r\n                };\r\n                let parameterBegin2 = stackTop + 2; // 1 parameter\r\n\r\n                this.stack.push(parameter);\r\n\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.programStack.push({\r\n                    program: this.currentProgram,\r\n                    programPosition: this.currentProgramPosition + 1,\r\n                    textPosition: node.position,\r\n                    method: this.currentMethod,\r\n                    callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                    isCalledFromOutside: null\r\n                });\r\n\r\n                this.currentCallbackAfterReturn = null;\r\n                this.currentStackframe = parameterBegin2;\r\n\r\n                this.currentProgram = node.method.program;\r\n                this.currentMethod = node.method;\r\n                this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                for (let i = 0; i < node.method.reserveStackForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n\r\n                // this.stepOverNestingLevel++;\r\n\r\n                break;\r\n            case TokenType.makeEllipsisArray:\r\n                let ellipsisArray: Value[] = stack.splice(stack.length - node.parameterCount, node.parameterCount);\r\n\r\n                stack.push({\r\n                    value: ellipsisArray,\r\n                    type: node.arrayType\r\n                })\r\n\r\n                break;\r\n            case TokenType.callMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method = node.method;\r\n\r\n                let parameterBegin = stackTop + 1 + node.stackframeBegin;\r\n                let parameters1 = method.parameterlist.parameters;\r\n                for (let i = parameterBegin + 1; i <= stackTop; i++) {\r\n                    if (this.stack[i] != null && this.stack[i].type instanceof PrimitiveType) {\r\n                        stack[i] = {\r\n                            type: parameters1[i - parameterBegin - 1].type,  // cast to parameter type...\r\n                            value: stack[i].value\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (stack[parameterBegin].value == null && !method.isStatic) {\r\n                    return \"Aufruf der Methode \" + method.identifier + \" des null-Objekts\";\r\n                }\r\n\r\n                if (method.isAbstract || method.isVirtual && !node.isSuperCall) {\r\n                    let object = stack[parameterBegin];\r\n                    if (object.value instanceof RuntimeObject) {\r\n                        method = (<Klass>(<RuntimeObject>object.value).class).getMethodBySignature(method.signature);\r\n                    } else {\r\n                        method = (<Klass>object.type).getMethodBySignature(method.signature);\r\n                    }\r\n                }\r\n\r\n                if (method == null) {\r\n                    // TODO: raise runtime error\r\n                    break;\r\n                }\r\n\r\n                if (method.invoke != null) {\r\n                    let rt = method.getReturnType();\r\n                    let parameters = stack.splice(parameterBegin);\r\n                    let returnValue = method.invoke(parameters);\r\n                    // if (rt != null && rt.identifier != 'void' && (! (rt instanceof PrimitiveType)) && returnValue == null) rt = nullType;\r\n                    if (rt != null && rt.identifier != 'void') {\r\n                        stack.push({\r\n                            value: returnValue,\r\n                            type: rt\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.stackframes.push(this.currentStackframe);\r\n                    this.programStack.push({\r\n                        program: this.currentProgram,\r\n                        programPosition: this.currentProgramPosition + 1,\r\n                        textPosition: node.position,\r\n                        method: this.currentMethod,\r\n                        callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                        isCalledFromOutside: null\r\n                    });\r\n\r\n                    this.currentCallbackAfterReturn = null;\r\n                    this.currentStackframe = parameterBegin;\r\n\r\n                    this.currentProgram = method.program;\r\n                    this.currentMethod = method;\r\n                    this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                    for (let i = 0; i < method.reserveStackForLocalVariables; i++) {\r\n                        stack.push(null);\r\n                    }\r\n\r\n                    this.stepOverNestingLevel++;\r\n                    this.additionalStepFinishedFlag = true;\r\n                }\r\n                break;\r\n            case TokenType.callInputMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method1 = node.method;\r\n                let parameterBegin1 = stackTop + 1 + node.stackframeBegin;\r\n                let parameters = stack.splice(parameterBegin1);\r\n\r\n                this.pauseForInput();\r\n\r\n                let that = this;\r\n                this.inputManager.readInput(method1, parameters, (value: Value) => {\r\n                    that.resumeAfterInput(value);\r\n                });\r\n                break;\r\n\r\n            case TokenType.return:\r\n                this.return(node, stack);\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                stack.splice(stackTop + 1 - node.popCount);\r\n                break;\r\n            case TokenType.initStackframe:\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.currentStackframe = stackTop + 1;\r\n                for (let i = 0; i < node.reserveForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n                break;\r\n            case TokenType.closeStackframe:\r\n                stack.splice(stackframeBegin);\r\n                this.currentStackframe = this.stackframes.pop();\r\n                break;\r\n            case TokenType.newObject:\r\n                let object = new RuntimeObject(node.class);\r\n\r\n                value = {\r\n                    value: object,\r\n                    type: node.class\r\n                };\r\n\r\n                stack.push(value);\r\n                if (node.subsequentConstructorCall) {\r\n                    stack.push(value);\r\n                    stackTop++;\r\n                }\r\n\r\n                let klass: Klass = node.class;\r\n\r\n                while (klass != null) {\r\n                    let aip = klass.attributeInitializationProgram;\r\n                    if (aip.statements.length > 0) {\r\n\r\n                        this.stackframes.push(this.currentStackframe);\r\n                        this.programStack.push({\r\n                            program: this.currentProgram,\r\n                            programPosition: this.currentProgramPosition + 1,\r\n                            textPosition: node.position,\r\n                            method: this.currentMethod,\r\n                            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                            isCalledFromOutside: null\r\n                        });\r\n\r\n                        this.currentCallbackAfterReturn = null;\r\n                        this.currentStackframe = stackTop + 1;\r\n\r\n                        this.currentProgram = aip;\r\n                        this.currentProgramPosition = -1;\r\n                        this.currentMethod = \"Konstruktor von \" + klass.identifier;\r\n                        this.stepOverNestingLevel++;\r\n\r\n                        this.additionalStepFinishedFlag = true;\r\n\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                // N.B.: constructor call is next statement\r\n\r\n                break;\r\n            case TokenType.processPostConstructorCallbacks:\r\n                value = stack[stackTop];\r\n                let classType = <Klass>value.type;\r\n                for (let pcc of classType.getPostConstructorCallbacks()) {\r\n                    pcc(value.value);\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopInit:\r\n                stack[node.stackPosOfCounter + stackframeBegin] = {\r\n                    type: intPrimitiveType,\r\n                    value: 0\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n                let counter: number = stack[node.stackPosOfCounter + stackframeBegin].value++;\r\n                let collection = stack[node.stackPosOfCollection + stackframeBegin].value;\r\n\r\n                switch (node.kind) {\r\n                    case \"array\":\r\n                        if (counter < (<any[]>collection).length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = (<any[]>collection)[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = (<any[]>collection)[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"internalList\":\r\n                        let list: any[] = (<ListHelper>(<RuntimeObject>collection).intrinsicData[\"ListHelper\"]).valueArray;\r\n                        if (counter < list.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        let list1: any[] = (<GroupHelper>(<RuntimeObject>collection).intrinsicData[\"Actor\"]).shapes;\r\n                        if (counter < list1.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list1[counter];\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list1[counter].klass;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n                value = stack[stackTop];\r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.incrementDecrementAfter:\r\n                value = stack[stackTop];\r\n                // replace value by copy:\r\n                stack[stackTop] = {\r\n                    value: value.value,\r\n                    type: value.type\r\n                };\r\n                // increment value which is not involved in subsequent \r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.jumpAlways:\r\n                this.currentProgramPosition = node.destination - 1;\r\n                break;\r\n            case TokenType.jumpIfTrue:\r\n                value = stack.pop();\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalse:\r\n                value = stack.pop();\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.noOp:\r\n                break;\r\n            case TokenType.programEnd:\r\n\r\n                if (this.programStack.length > 0) {\r\n                    this.popProgram();\r\n                    this.currentProgramPosition--; // gets increased later on after switch ends\r\n                    this.additionalStepFinishedFlag = true;\r\n                    this.leaveLine = -1;\r\n\r\n                    if (node.pauseAfterProgramEnd) {\r\n                        this.stepOverNestingLevel = -1;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                if ((this.worldHelper != null && this.worldHelper.hasActors()) || this.processingHelper != null\r\n                    || (this.gngEreignisbehandlungHelper != null && this.gngEreignisbehandlungHelper.hasAktionsEmpfaenger())) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n                let timerClass: TimerClass = <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n                if (timerClass.timerEntries.length > 0) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                // this.setState(InterpreterState.done);\r\n                this.currentProgram = null;\r\n                this.currentProgramPosition = -1;\r\n                this.additionalStepFinishedFlag = true;\r\n\r\n                Helper.showHelper(\"speedControlHelper\", this.main);\r\n\r\n                this.printManager.showProgramEnd();\r\n\r\n                if (this.steps > 0) {\r\n                    let dt = performance.now() - this.timeWhenProgramStarted;\r\n                    let message = 'Executed ' + this.steps + ' steps in ' + this.round(dt)\r\n                        + ' ms (' + this.round(this.steps / dt * 1000) + ' steps/s)';\r\n                    this.main.getBottomDiv()?.console?.writeConsoleEntry(message, null);\r\n                    // console.log(this.timerEvents + \" TimeEvents in \" + dt + \" ms ergibt ein Event alle \" + dt/this.timerEvents + \" ms.\");\r\n                    // console.log(\"Vorgegebene Timerfrequenz: Alle \" + this.timerDelayMs + \" ms\");\r\n                    this.steps = -1;\r\n                }\r\n\r\n                // if (this.worldHelper != null) {\r\n                //     this.worldHelper.spriteAnimations = [];\r\n                // }\r\n                // this.gngEreignisbehandlungHelper?.detachEvents();\r\n                // this.gngEreignisbehandlungHelper = null;\r\n\r\n                // this.main.hideProgramPointerPosition();\r\n\r\n                // if(this.worldHelper != null){\r\n                //     this.worldHelper.cacheAsBitmap();\r\n                // }\r\n\r\n                this.currentProgramPosition--;\r\n                this.stop();\r\n                break;\r\n            case TokenType.print:\r\n            case TokenType.println:\r\n                let text = null;\r\n                let color = null;\r\n                if (node.withColor) color = <string | number>stack.pop().value;\r\n                if (!node.empty) {\r\n                    text = <string>stack.pop().value;\r\n                    if (text == null) text = \"null\";\r\n                }\r\n                if (node.type == TokenType.println) {\r\n                    this.printManager.println(text, color);\r\n                } else {\r\n                    this.printManager.print(text, color);\r\n                }\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                let counts: number[] = [];\r\n                for (let i = 0; i < node.dimension; i++) {\r\n                    counts.push(<number>stack.pop().value);\r\n                }\r\n                stack.push(this.makeEmptyArray(counts, node.arrayType));\r\n                break;\r\n            case TokenType.beginArray:\r\n                stack.push({\r\n                    type: node.arrayType,\r\n                    value: []\r\n                });\r\n                break;\r\n            case TokenType.addToArray:\r\n                stackTop -= node.numberOfElementsToAdd;\r\n                // let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd);\r\n                let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd).map(tvo => ({ type: tvo.type, value: tvo.value }));\r\n                stack[stackTop].value = (<any[]>stack[stackTop].value).concat(values);\r\n                break;\r\n            case TokenType.pushEnumValue:\r\n                let enumInfo = node.enumClass.identifierToInfoMap[node.valueIdentifier];\r\n                stack.push(node.enumClass.valueList.value[enumInfo.ordinal]);\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                let switchValue = stack.pop().value;\r\n                let destination = node.destinationMap[switchValue];\r\n                if (destination != null) {\r\n                    this.currentProgramPosition = destination - 1; // it will be increased after this switch-statement!\r\n                } else {\r\n                    if (node.defaultDestination != null) {\r\n                        this.currentProgramPosition = node.defaultDestination - 1;\r\n                    }\r\n                    // there's a jumpnode after this node which jumps right after last switch case,\r\n                    // so there's nothing more to do here.\r\n                }\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n\r\n                let v = node.variable;\r\n                this.heap[v.identifier] = v;\r\n                v.value = {\r\n                    type: v.type,\r\n                    value: (v.type instanceof PrimitiveType) ? v.type.initialValue : null\r\n                }\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    this.stack.push(v.value);\r\n                }\r\n\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                let v1 = this.heap[node.identifier];\r\n                if (v1 != null) {\r\n                    this.stack.push(v1.value);\r\n                } else {\r\n                    return \"Die Variable \" + node.identifier + \" ist nicht bekannt.\";\r\n                }\r\n                break;\r\n            case TokenType.returnIfDestroyed:\r\n                let shapeRuntimeObject: RuntimeObject = this.stack[stackframeBegin].value;\r\n                if (shapeRuntimeObject != null) {\r\n                    let shape = shapeRuntimeObject.intrinsicData[\"Actor\"];\r\n                    if (shape[\"isDestroyed\"] == true) {\r\n                        this.return(null, stack);\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.setPauseDuration:\r\n                let duration = this.stack.pop().value;\r\n                if (this.pauseUntil == null) {\r\n                    this.pauseUntil = performance.now() + duration;\r\n                }\r\n                break;\r\n            case TokenType.pause:\r\n                node.stepFinished = true;\r\n                if (this.pauseUntil != null && performance.now() < this.pauseUntil) {\r\n                    this.currentProgramPosition--;\r\n                } else {\r\n                    this.pauseUntil = null;\r\n                }\r\n                break;\r\n\r\n        }\r\n\r\n\r\n        this.currentProgramPosition++;\r\n\r\n    }\r\n\r\n    oldState: InterpreterState;\r\n    pauseForInput() {\r\n        this.timerStopped = true;\r\n        this.additionalStepFinishedFlag = true;\r\n        this.oldState = this.state;\r\n        this.setState(InterpreterState.waitingForInput);\r\n        this.showProgramPointerAndVariables();\r\n    }\r\n\r\n    resumeAfterInput(value: Value, popPriorValue: boolean = false) {\r\n        if (popPriorValue) this.stack.pop();\r\n        if (value != null) this.stack.push(value);\r\n        this.main.hideProgramPointerPosition();\r\n        this.setState(InterpreterState.paused);\r\n        if (this.oldState == InterpreterState.running) {\r\n            this.start();\r\n        } else {\r\n            this.showProgramPointerAndVariables();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return(node: ReturnStatement | null, stack: Value[]) {\r\n\r\n        let currentCallbackAfterReturn = this.currentCallbackAfterReturn;\r\n\r\n        if (node != null && node.copyReturnValueToStackframePos0) {\r\n            let returnValue: Value = stack.pop();\r\n            stack[this.currentStackframe] = returnValue;\r\n            stack.splice(this.currentStackframe + 1);\r\n        } else {\r\n            stack.splice(this.currentStackframe + ((node != null && node.leaveThisObjectOnStack) ? 1 : 0));\r\n        }\r\n\r\n        this.currentStackframe = this.stackframes.pop();\r\n\r\n        this.popProgram();\r\n        if (node != null && node.methodWasInjected == true) this.currentProgramPosition++;\r\n        this.currentProgramPosition--;  // position gets increased by one at the end of this switch-statement, so ... - 1\r\n        this.stepOverNestingLevel--;\r\n\r\n        if (currentCallbackAfterReturn != null) {\r\n            currentCallbackAfterReturn(this);\r\n        }\r\n\r\n        if (this.stepOverNestingLevel < 0 && this.currentProgram.statements[this.currentProgramPosition + 1].type == TokenType.jumpAlways) {\r\n            this.stepFinished = false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeEmptyArray(counts: number[], type: Type): Value {\r\n        let type1 = (<ArrayType>type).arrayOfType;\r\n        if (counts.length == 1) {\r\n            let array: Value[] = [];\r\n            for (let i = 0; i < counts[0]; i++) {\r\n                let v = {\r\n                    type: type1,\r\n                    value: null\r\n                };\r\n\r\n                if (type1 instanceof PrimitiveType) {\r\n                    v.value = type1.initialValue;\r\n                }\r\n\r\n                array.push(v);\r\n\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        } else {\r\n            let array: Value[] = [];\r\n            let n = counts.pop();\r\n            for (let i = 0; i < n; i++) {\r\n                array.push(this.makeEmptyArray(counts, type1));\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    round(n: number): string {\r\n        return \"\" + Math.round(n * 10000) / 10000;\r\n    }\r\n\r\n    runningStates: InterpreterState[] = [InterpreterState.paused, InterpreterState.running, InterpreterState.waitingForInput];\r\n\r\n    setState(state: InterpreterState) {\r\n\r\n        // console.log(\"Set state \" + InterpreterState[state]);\r\n\r\n        let oldState = this.state;\r\n        this.state = state;\r\n\r\n        if (state == InterpreterState.error || state == InterpreterState.done) {\r\n            this.closeAllWebsockets();\r\n        }\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        for (let actionId of this.actions) {\r\n            am.setActive(\"interpreter.\" + actionId, this.buttonActiveMatrix[actionId][state]);\r\n        }\r\n\r\n        let buttonStartActive = this.buttonActiveMatrix['start'][state];\r\n\r\n        if (buttonStartActive) {\r\n            this.controlButtons.$buttonStart.show();\r\n            this.controlButtons.$buttonPause.hide();\r\n        } else {\r\n            this.controlButtons.$buttonStart.hide();\r\n            this.controlButtons.$buttonPause.show();\r\n        }\r\n\r\n        let buttonStopActive = this.buttonActiveMatrix['stop'][state];\r\n        if (buttonStopActive) {\r\n            // this.controlButtons.$buttonEdit.show();\r\n        } else {\r\n            // this.controlButtons.$buttonEdit.hide();\r\n            if (this.worldHelper != null) {\r\n                this.worldHelper.clearActorLists();\r\n            }\r\n            this.gngEreignisbehandlungHelper?.detachEvents();\r\n            this.gngEreignisbehandlungHelper = null;\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) >= 0 && this.runningStates.indexOf(state) < 0) {\r\n            this.debugger.disable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.keyboardTool.unsubscribeAllListeners();\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) < 0 && this.runningStates.indexOf(state) >= 0) {\r\n            this.debugger.enable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        }\r\n\r\n    }\r\n\r\n    closeAllWebsockets() {\r\n        this.webSocketsToCloseAfterProgramHalt.forEach(socket => socket.close());\r\n        this.webSocketsToCloseAfterProgramHalt = [];\r\n    }\r\n\r\n\r\n    pushCurrentProgram() {\r\n\r\n        if (this.currentProgram == null) return;\r\n\r\n        let textPosition: TextPosition;\r\n        let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (currentStatement != null) {\r\n            textPosition = currentStatement.position;\r\n        }\r\n\r\n        this.programStack.push({\r\n            program: this.currentProgram,\r\n            programPosition: this.currentProgramPosition,\r\n            textPosition: textPosition,\r\n            method: this.currentMethod,\r\n            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n            isCalledFromOutside: this.currentIsCalledFromOutside\r\n        })\r\n\r\n        this.currentCallbackAfterReturn = null;\r\n        this.currentIsCalledFromOutside = null;\r\n\r\n    }\r\n\r\n    // runTimer(method: Method, stackElements: Value[],\r\n    //     callbackAfterReturn: (interpreter: Interpreter) => void) {\r\n\r\n    //     if(this.state != InterpreterState.running){\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.pushCurrentProgram();\r\n\r\n    //     this.currentProgram = method.program;\r\n    //     this.currentMethod = method;\r\n    //     this.currentProgramPosition = 0;\r\n    //     this.currentCallbackAfterReturn = callbackAfterReturn;\r\n    //     this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n    //     this.stackframes.push(this.currentStackframe);\r\n    //     this.currentStackframe = this.stack.length;\r\n    //     for (let se of stackElements) this.stack.push(se);\r\n    //     let statements = method.program.statements;\r\n\r\n    //     // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n    //     // beforehand to compensate this effect.\r\n    //     if(statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n    // }\r\n\r\n    runTimer(method: Method, stackElements: Value[],\r\n        callbackAfterReturn: (interpreter: Interpreter) => void, isActor: boolean) {\r\n\r\n        if (this.state != InterpreterState.running) {\r\n            return;\r\n        }\r\n\r\n        let statements = method.program.statements;\r\n\r\n        if (isActor || this.programStack.length == 0) {\r\n            // Main Program is running => Timer has higher precedence\r\n            this.pushCurrentProgram();\r\n\r\n            this.currentProgram = method.program;\r\n            this.currentMethod = method;\r\n            this.currentProgramPosition = 0;\r\n            this.currentCallbackAfterReturn = callbackAfterReturn;\r\n            this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n            this.stackframes.push(this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n            this.stack = this.stack.concat(stackElements);\r\n            // for (let se of stackElements) this.stack.push(se);\r\n\r\n            // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n            // beforehand to compensate this effect.\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n        } else {\r\n            // another Timer is running => queue up\r\n            // position 0 in program stack is main program\r\n            // => insert timer in position 1\r\n\r\n            this.programStack.splice(1, 0, {\r\n                program: method.program,\r\n                programPosition: 0,\r\n                textPosition: { line: 0, column: 0, length: 0 },\r\n                method: method,\r\n                callbackAfterReturn: callbackAfterReturn,\r\n                isCalledFromOutside: \"Timer\",\r\n                stackElementsToPushBeforeFirstExecuting: stackElements\r\n            });\r\n\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    evaluate(program: Program): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = this.stack.length;\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n        let oldStackframe = this.currentStackframe;\r\n\r\n        let error: string;\r\n        let stepCount = 0;\r\n\r\n        try {\r\n            while (error == null &&\r\n                (this.currentProgram != program || this.currentProgramPosition <\r\n                    this.currentProgram.statements.length)\r\n                && stepCount < 100000\r\n                // && this.currentProgram == program\r\n            ) {\r\n                error = this.nextStep();\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (this.currentProgram == program && this.programStack.length > 0) {\r\n            this.popProgram();\r\n        }\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    executeImmediatelyInNewStackframe(program: Program, valuesToPushBeforeExecuting: Value[]): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        let oldProgramPosition = this.currentProgramPosition;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let numberOfStackframesBefore = this.stackframes.length;\r\n        this.stackframes.push(this.currentStackframe);\r\n        let stacksizeBefore = this.stack.length;\r\n        this.currentStackframe = stacksizeBefore;\r\n\r\n        for (let v of valuesToPushBeforeExecuting) this.stack.push(v);\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n\r\n        let stepCount = 0;\r\n        let error = null;\r\n\r\n        try {\r\n            while (this.stackframes.length > numberOfStackframesBefore\r\n                && stepCount < 100000 && error == null\r\n            ) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n                error = this.executeNode(node);\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (stepCount == 100000) this.throwException(\"Die Ausführung des Konstruktors dauerte zu lange.\");\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        // this.currentProgramPosition++;\r\n\r\n        this.currentProgramPosition = oldProgramPosition;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    instantiateObjectImmediately(klass: Klass): RuntimeObject {\r\n        let object = new RuntimeObject(klass);\r\n\r\n        let value = {\r\n            value: object,\r\n            type: klass\r\n        };\r\n\r\n        let klass1 = klass;\r\n\r\n        while (klass1 != null) {\r\n            let aip = klass1.attributeInitializationProgram;\r\n            if (aip.statements.length > 0) {\r\n\r\n                this.executeImmediatelyInNewStackframe(aip, [value]);\r\n\r\n            }\r\n            klass1 = klass1.baseClass;\r\n        }\r\n\r\n        let constructor = klass.getMethodBySignature(klass.identifier + \"()\");\r\n        if (constructor != null && constructor.program != null) {\r\n            // let programWithoutReturnStatement: Program = {\r\n            //     labelManager: null,\r\n            //     module: constructor.program.module,\r\n            //     statements: constructor.program.statements.slice(0, constructor.program.statements.length - 1)\r\n            // };\r\n            this.executeImmediatelyInNewStackframe(constructor.program, [value]);\r\n        }\r\n\r\n        return object;\r\n\r\n    }\r\n\r\n    registerDatabaseConnection(ch: ConnectionHelper) {\r\n        this.databaseConnectionHelpers.push(ch);\r\n    }\r\n\r\n\r\n}","/* \r\n * Convex hull algorithm - Library (TypeScript)\r\n * \r\n * Copyright (c) 2020 Project Nayuki\r\n * https://www.nayuki.io/page/convex-hull-algorithm\r\n * \r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with this program (see COPYING.txt and COPYING.LESSER.txt).\r\n * If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\n\r\n\r\n\r\nexport namespace convexhull {\r\n    \r\n    export interface Point {\r\n        x: number;\r\n        y: number;\r\n    }\r\n\t// Returns a new array of points representing the convex hull of\r\n\t// the given set of points. The convex hull excludes collinear points.\r\n\t// This algorithm runs in O(n log n) time.\r\n\texport function makeHull<P extends Point>(points: Array<P>): Array<P> {\r\n\t\tlet newPoints: Array<P> = points.slice();\r\n\t\tnewPoints.sort(convexhull.POINT_COMPARATOR);\r\n\t\treturn convexhull.makeHullPresorted(newPoints);\r\n\t}\r\n\t\r\n\t\r\n\t// Returns the convex hull, assuming that each points[i] <= points[i + 1]. Runs in O(n) time.\r\n\texport function makeHullPresorted<P extends Point>(points: Array<P>): Array<P> {\r\n\t\tif (points.length <= 1)\r\n\t\t\treturn points.slice();\r\n\t\t\r\n\t\t// Andrew's monotone chain algorithm. Positive y coordinates correspond to \"up\"\r\n\t\t// as per the mathematical convention, instead of \"down\" as per the computer\r\n\t\t// graphics convention. This doesn't affect the correctness of the result.\r\n\t\t\r\n\t\tlet upperHull: Array<P> = [];\r\n\t\tfor (let i = 0; i < points.length; i++) {\r\n\t\t\tconst p: P = points[i];\r\n\t\t\twhile (upperHull.length >= 2) {\r\n\t\t\t\tconst q: P = upperHull[upperHull.length - 1];\r\n\t\t\t\tconst r: P = upperHull[upperHull.length - 2];\r\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\r\n\t\t\t\t\tupperHull.pop();\r\n\t\t\t\telse\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tupperHull.push(p);\r\n\t\t}\r\n\t\tupperHull.pop();\r\n\t\t\r\n\t\tlet lowerHull: Array<P> = [];\r\n\t\tfor (let i = points.length - 1; i >= 0; i--) {\r\n\t\t\tconst p: P = points[i];\r\n\t\t\twhile (lowerHull.length >= 2) {\r\n\t\t\t\tconst q: P = lowerHull[lowerHull.length - 1];\r\n\t\t\t\tconst r: P = lowerHull[lowerHull.length - 2];\r\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\r\n\t\t\t\t\tlowerHull.pop();\r\n\t\t\t\telse\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tlowerHull.push(p);\r\n\t\t}\r\n\t\tlowerHull.pop();\r\n\t\t\r\n\t\tif (upperHull.length == 1 && lowerHull.length == 1 && upperHull[0].x == lowerHull[0].x && upperHull[0].y == lowerHull[0].y)\r\n\t\t\treturn upperHull;\r\n\t\telse\r\n\t\t\treturn upperHull.concat(lowerHull);\r\n\t}\r\n\t\r\n\t\r\n\texport function POINT_COMPARATOR(a: Point, b: Point): number {\r\n\t\tif (a.x < b.x)\r\n\t\t\treturn -1;\r\n\t\telse if (a.x > b.x)\r\n\t\t\treturn +1;\r\n\t\telse if (a.y < b.y)\r\n\t\t\treturn -1;\r\n\t\telse if (a.y > b.y)\r\n\t\t\treturn +1;\r\n\t\telse\r\n\t\t\treturn 0;\r\n\t}\r\n\t\r\n}","import { Klass, UnboxableKlass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class IntegerClass extends UnboxableKlass {\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Integer\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", intPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ int annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", intPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ int annehmen kann\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean{\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"int-wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen int-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[2].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, UnboxableKlass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { longPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class LongClass extends UnboxableKlass {\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Long\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", longPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ long annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", longPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ long annehmen kann\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean{\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, longPrimitiveType, floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Long\", new Parameterlist([\r\n            { identifier: \"long-wert\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Long-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Long\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Long-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen int-Wert um\"));\r\n        this.addMethod(new Method(\"longValue\", new Parameterlist([]), longPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen long-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherLong\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), longPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherLong\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), longPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseLong\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), longPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen long-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseLong\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), longPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen long-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), longPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[2].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Long-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Long-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Long-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, UnboxableKlass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { floatToString } from \"../../../tools/StringTools.js\";\r\n\r\n\r\nexport class FloatClass extends UnboxableKlass {\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Float\", null, \"Wrapper-Klasse, um float-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ float\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt, indem die übergebene Zeichenkette in einen float-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Float-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return floatToString(parameters[0].value);\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseFloat\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen float-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, UnboxableKlass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, floatPrimitiveType, doublePrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { floatToString } from \"../../../tools/StringTools.js\";\r\n\r\n\r\nexport class DoubleClass extends UnboxableKlass {\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Double\", null, \"Wrapper-Klasse, um double-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ double\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt, indem die übergebene Zeichenkette in einen double-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Double-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return floatToString(parameters[0].value);\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseDouble\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen double-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass, UnboxableKlass } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value } from \"../Types.js\";\r\n\r\n\r\nexport class CharacterClass extends UnboxableKlass {\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Character\", null, \"Wrapper-Klasse, um char-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [charPrimitiveType, stringPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Character\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Character-Objekt\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([]), charPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Character-Objekt in einen char-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[0].value).charCodeAt(0);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den char-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"digit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Gibt den numerischen Wert des Zeichens zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"forDigit\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value).toString(parameters[2].value).charAt(0);\r\n            }, false, true, \"Gibt den übergebenen Wert als Ziffer im Zahlensystem zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"getNumericValue\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).charCodeAt(0);\r\n            }, false, true, \"Wandelt das Zeichen in einen numerischen Wert (Unicode-Wert) um.\"));\r\n\r\n        this.addMethod(new Method(\"isLetter\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen ist.\"));\r\n\r\n        this.addMethod(new Method(\"isLetterOrDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen oder eine Ziffer ist.\"));\r\n\r\n        this.addMethod(new Method(\"isDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen eine Ziffer ist.\"));\r\n\r\n            this.addMethod(new Method(\"isWhitespace\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[ \\r\\n\\t]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein Leerzeichen, Tabulatorzeichen oder Zeilenumbruch ist.\"));\r\n\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleUpperCase();\r\n            }, false, true, \"Wandelt das Zeichen in Großschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleLowerCase();\r\n            }, false, true, \"Wandelt das Zeichen in Kleinschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den char-Wert in ein Character-Objekt um.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass, UnboxableKlass, Visibility } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Attribute } from \"../Types.js\";\r\n\r\n\r\nexport class BooleanClass extends UnboxableKlass {\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Boolean\", null, \"Wrapper-Klasse, um boolean-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"TRUE\", this, (value) => { value.value = true }, true, Visibility.public, true, \"das Boolean-Objekt, das TRUE repräsentiert\"));\r\n        this.addAttribute(new Attribute(\"FALSE\", this, (value) => { value.value = false }, true, Visibility.public, true, \"das Boolean-Objekt, das FALSE repräsentiert\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [booleanPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1] != null && parameters[1].value.toLowerCase() == \"true\";\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt: Es nimmt genau dann den Wert true an, wenn die übergebene Zeichenkette ohne Berücksichtigung von Klein-/Großschreibung den Wert \\\"true\\\" hat.\", true));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Boolean-Objekt in einen boolean-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                return v0 == v1 ? 0 : 1;\r\n            }, false, false, \"Gibt genau dann 0 zurück, wenn der Wert des Objekts gleich dem übergebenen Wert ist, ansonsten 1.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<boolean>parameters[0].value) ? 0 : 1;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den boolean-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den boolean-Wert in ein Boolean-Objekt um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n        this.addMethod(new Method(\"parseBoolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Method, Attribute, Value, Type, Parameterlist, PrimitiveType } from \"./Types.js\";\r\nimport { TokenType } from \"../lexer/Token.js\";\r\nimport { intPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Visibility } from \"./Class.js\";\r\n\r\nexport class ArrayType extends Type {\r\n\r\n    public arrayOfType: Type;\r\n    private lengthAttribute: Attribute;\r\n\r\n    constructor(arrayOfType: Type){\r\n        super();\r\n        this.arrayOfType = arrayOfType;\r\n        this.identifier = \"Array\";\r\n\r\n        if(arrayOfType != null){\r\n            this.identifier = arrayOfType.identifier + \"[]\";\r\n        }\r\n\r\n        this.lengthAttribute = new Attribute(\"length\", intPrimitiveType, (object: Value) => {\r\n            return (<any[]>object.value).length;\r\n        }, false, Visibility.public, true);\r\n    }   \r\n\r\n    public equals(type:Type): boolean{\r\n        return (type instanceof ArrayType) && type.arrayOfType.equals(this.arrayOfType);\r\n    }\r\n\r\n    public get id():string{\r\n        return this.arrayOfType.identifier + \"[]\";\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        if(operation == TokenType.referenceElement){\r\n            return this.arrayOfType;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        if(operation == TokenType.referenceElement){\r\n            return <any[]>firstOperand.value[<number>secondOperand.value];\r\n        }\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, signature: Parameterlist): Method{\r\n        return null;\r\n    }\r\n\r\n    public getAttribute(identifier: string): Attribute{\r\n        if(identifier == \"length\"){\r\n            return this.lengthAttribute;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean{\r\n\r\n        if(!(type instanceof ArrayType)){\r\n            return false;\r\n        }\r\n\r\n        return this.arrayOfType.canCastTo(type.arrayOfType);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        let array = (<Value[]>value.value).slice();\r\n        let destType = (<ArrayType><unknown>type).arrayOfType;\r\n\r\n        for(let a of array){\r\n            this.arrayOfType.castTo(a, destType);\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            value: array\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40):string {\r\n\r\n        let length: number = 0;\r\n\r\n        if(value.value != null){\r\n\r\n            let s: string = \"[\";\r\n\r\n                let a: Value[] = <Value[]>value.value;\r\n\r\n                for(let i = 0; i < a.length; i++){\r\n\r\n                    let v = a[i];\r\n\r\n                    let s1 = v.type.debugOutput(v, maxLength/2);\r\n\r\n                    s += s1;\r\n                    if(i < a.length - 1) s += \",&nbsp;\";\r\n                    length += s1.length;\r\n\r\n                    if(length > maxLength) break;\r\n\r\n                }\r\n\r\n            return s + \"]\"\r\n\r\n        } else return \"null\";\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { TextPosition } from \"../lexer/Token.js\";\r\nimport { Type, Variable, Method } from \"../types/Types.js\";\r\nimport { Klass, StaticClass } from \"../types/Class.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\n\r\n\r\nexport class SymbolTable {\r\n\r\n    static maxId: number = 0;\r\n\r\n    public id = SymbolTable.maxId++;\r\n\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    beginsNewStackframe: boolean = false;\r\n    stackframeSize: number;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    variableMap: Map<string, Variable> = new Map();\r\n\r\n    classContext: Klass | StaticClass = null;\r\n    method: Method = null;\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n        this.classContext = parentSymbolTable == null ? null : parentSymbolTable.classContext;\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n            this.method = this.parent.method;\r\n        }\r\n    }\r\n\r\n    getImitation(): SymbolTable {\r\n        let imitation = new SymbolTable(null, { line: 1, column: 1, length: 0 }, { line: 1, column: 10000, length: 0 });\r\n\r\n        imitation.beginsNewStackframe = true;\r\n        let st: SymbolTable = this;\r\n\r\n        let maxStackPos = -1;\r\n\r\n        while (st != null) {\r\n            if (st.classContext != null) {\r\n                imitation.classContext = st.classContext;\r\n            }\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                if (imitation.variableMap.get(identifier) == null) {\r\n                    imitation.variableMap.set(identifier, variable);\r\n                }\r\n\r\n                if (variable.stackPos > maxStackPos) {\r\n                    maxStackPos = variable.stackPos;\r\n                }\r\n\r\n            });\r\n\r\n            st = st.parent;\r\n\r\n        }\r\n\r\n        imitation.stackframeSize = maxStackPos + 1;\r\n\r\n        return imitation;\r\n    }\r\n\r\n\r\n\r\n    getLocalVariableCompletionItems(rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        this.variableMap.forEach((variable, identifier) => {\r\n\r\n            //@ts-ignore\r\n            if(identifier == 0) return;\r\n\r\n            // TODO: Zu einem Objekt mit identifier == 0 kommt es, wenn man ArrayList<In tippt und dann <Strg + Leertaste>.\r\n\r\n            if (variable != null && variable.type != null && variable.type instanceof ArrayType) {\r\n                completionItems.push({\r\n                    label: identifier + \"[]\",\r\n                    insertText: identifier + \"[$0]\",\r\n                    documentation: \"Element des Arrays\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: rangeToReplace\r\n                });\r\n\r\n            }\r\n            \r\n            completionItems.push({\r\n                label: identifier,\r\n                insertText: identifier,\r\n                kind: monaco.languages.CompletionItemKind.Variable,\r\n                range: rangeToReplace\r\n            });\r\n\r\n\r\n        });\r\n\r\n        if (this.parent != null && this.parent.classContext == this.classContext) {\r\n            completionItems = completionItems.concat(this.parent.getLocalVariableCompletionItems(rangeToReplace));\r\n        }\r\n\r\n        return completionItems;\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line) return column >= this.positionFrom.column;\r\n        if (line == this.positionTo.line) return column <= this.positionTo.column;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Program } from \"../parser/Program.js\";\r\nimport { Klass, Visibility } from \"./Class.js\";\r\nimport { Value, Attribute, Method, Parameterlist, Type } from \"./Types.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { EnumValueNode } from \"../parser/AST.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, objectType } from \"./PrimitiveTypes.js\";\r\n\r\nexport class EnumRuntimeObject extends RuntimeObject {\r\n\r\n    enumValue: EnumInfo;\r\n\r\n    constructor(en: Enum, enumValue: EnumInfo) {\r\n        super(en);\r\n        this.enumValue = enumValue;\r\n    }\r\n\r\n}\r\n\r\nexport type EnumInfo = {\r\n    identifier: string,\r\n    ordinal: number,\r\n    position?: TextPosition,\r\n    object?: EnumRuntimeObject,\r\n    constructorCallProgram?: Program\r\n}\r\n\r\n\r\nexport class Enum extends Klass {\r\n\r\n    enumInfoList: EnumInfo[] = [];\r\n    identifierToInfoMap: { [identifier: string]: EnumInfo } = {};\r\n    indexToInfoMap: { [index: number]: EnumInfo } = {};\r\n\r\n    valueList: Value = null;\r\n\r\n    getOrdinal(valueIdentifier: string): number {\r\n\r\n        let enumInfo: EnumInfo = this.identifierToInfoMap[valueIdentifier];\r\n        if (enumInfo == null) return -1;\r\n        return enumInfo.ordinal;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        let enumObject = <EnumRuntimeObject>value.value;\r\n        return this.identifier + \".\" + enumObject.enumValue.identifier;\r\n    }\r\n\r\n    constructor(identifier: string, module: Module, enumValueNodes: EnumValueNode[]) {\r\n\r\n        super(identifier, module);\r\n        this.baseClass = objectType;\r\n\r\n        let i: number = 0;\r\n\r\n        for (let evn of enumValueNodes) {\r\n\r\n            let attribute: Attribute = new Attribute(evn.identifier, this, null, true, Visibility.public, true);\r\n\r\n            if (evn.position != null) {\r\n                attribute.declaration = {\r\n                    module: module,\r\n                    position: evn.position\r\n                }\r\n\r\n                attribute.usagePositions.set(module, [evn.position]);\r\n            }\r\n\r\n            this.staticClass.addAttribute(\r\n                attribute\r\n            );\r\n\r\n\r\n            let ev: EnumInfo = {\r\n                identifier: evn.identifier,\r\n                ordinal: i++\r\n            }\r\n\r\n            this.enumInfoList.push(ev);\r\n            this.identifierToInfoMap[evn.identifier] = ev;\r\n            this.indexToInfoMap[ev.ordinal] = ev;\r\n\r\n        }\r\n\r\n        if(module.isSystemModule){\r\n            this.valueList = {\r\n                type: new ArrayType(this),\r\n                value: []\r\n            };\r\n            for(let ei of this.enumInfoList){\r\n\r\n                ei.object = new EnumRuntimeObject(this, ei);\r\n\r\n                this.valueList.value.push({\r\n                    type: this,\r\n                    value: ei.object\r\n                })\r\n            }\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.staticClass.addMethod(new Method(\"getValues\",\r\n            new Parameterlist([]), new ArrayType(this), (parameters: Value[]) => {\r\n\r\n                if (this.valueList == null) {\r\n\r\n                    let values = [];\r\n                    for (let vi of this.enumInfoList) {\r\n\r\n                        values.push({\r\n                            type: that,\r\n                            value: vi.object\r\n                        });\r\n\r\n                    }\r\n\r\n                    this.valueList = {\r\n                        type: new ArrayType(that),\r\n                        value: values\r\n                    }\r\n\r\n                }\r\n\r\n                return this.valueList.value;\r\n\r\n            }, false, true)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toString\",\r\n            new Parameterlist([]), stringPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.identifier;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toOrdinal\",\r\n            new Parameterlist([]), intPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.ordinal;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        return super.canCastTo(type);\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            let en = <EnumRuntimeObject>value.value;\r\n            return {\r\n                type: intPrimitiveType,\r\n                value: en.enumValue.ordinal\r\n            };\r\n        }\r\n\r\n        return super.castTo(value, type);\r\n    }\r\n\r\n\r\n}\r\n","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, StaticClass, Visibility, getVisibilityUpTo, UnboxableKlass } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, nullType, voidPrimitiveType, varType, doublePrimitiveType, NullType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Type, Variable, Value, PrimitiveType, UsagePositions, Method, Heap, getTypeIdentifier, Parameterlist } from \"../types/Types.js\";\r\nimport { ASTNode, AttributeDeclarationNode, BinaryOpNode, ClassDeclarationNode, ConstantNode, DoWhileNode, ForNode, IdentifierNode, IfNode, IncrementDecrementNode, MethodcallNode, MethodDeclarationNode, NewObjectNode, ReturnNode, SelectArrayElementNode, SelectArributeNode, SuperconstructorCallNode, SuperNode, ThisNode, UnaryOpNode, WhileNode, LocalVariableDeclarationNode, ArrayInitializationNode, NewArrayNode, PrintNode, CastManuallyNode, EnumDeclarationNode, TermNode, SwitchNode, ScopeNode, ParameterNode, ForNodeOverCollecion, ConstructorCallNode } from \"./AST.js\";\r\nimport { LabelManager } from \"./LabelManager.js\";\r\nimport { Module, ModuleStore, MethodCallPosition } from \"./Module.js\";\r\nimport { AssignmentStatement, InitStackframeStatement, JumpAlwaysStatement, Program, Statement, BeginArrayStatement, NewObjectStatement, JumpOnSwitchStatement, Breakpoint, ExtendedForLoopCheckCounterAndGetElement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Enum, EnumInfo } from \"../types/Enum.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\n\r\ntype StackType = {\r\n    type: Type,\r\n    isAssignable: boolean,\r\n    isSuper?: boolean, // used for method calls with super.\r\n    withReturnStatement?: boolean\r\n};\r\n\r\nexport class CodeGenerator {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment,\r\n    TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.ANDAssigment, TokenType.ORAssigment,\r\n    TokenType.XORAssigment, TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    moduleStore: ModuleStore;\r\n    module: Module;\r\n\r\n    symbolTableStack: SymbolTable[];\r\n    currentSymbolTable: SymbolTable;\r\n\r\n    heap: Heap;\r\n\r\n    currentProgram: Program;\r\n\r\n    errorList: Error[];\r\n\r\n    nextFreeRelativeStackPos: number;\r\n\r\n    breakNodeStack: JumpAlwaysStatement[][];\r\n    continueNodeStack: JumpAlwaysStatement[][];\r\n\r\n    startAdhocCompilation(module: Module, moduleStore: ModuleStore, symbolTable: SymbolTable, heap: Heap): Error[] {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.symbolTableStack.push(symbolTable);\r\n        this.currentSymbolTable = symbolTable;\r\n\r\n        this.heap = heap;\r\n\r\n        let oldStackframeSize = symbolTable.stackframeSize;\r\n        this.nextFreeRelativeStackPos = oldStackframeSize;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain(true);\r\n\r\n        return this.errorList;\r\n\r\n    }\r\n\r\n    start(module: Module, moduleStore: ModuleStore) {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.currentSymbolTable = null;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.nextFreeRelativeStackPos = 0;\r\n\r\n        if (this.module.tokenList.length > 0) {\r\n            let lastToken = this.module.tokenList[this.module.tokenList.length - 1];\r\n            this.module.mainSymbolTable.positionTo = { line: lastToken.position.line, column: lastToken.position.column + 1, length: 1 };\r\n        }\r\n\r\n        this.symbolTableStack.push(this.module.mainSymbolTable);\r\n        this.currentSymbolTable = this.module.mainSymbolTable;\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain();\r\n\r\n        this.generateClasses();\r\n\r\n        this.lookForStaticVoidMain();\r\n\r\n        this.module.errors[3] = this.errorList;\r\n\r\n    }\r\n\r\n    lookForStaticVoidMain() {\r\n\r\n        let mainProgram = this.module.mainProgram;\r\n\r\n        if (mainProgram != null && mainProgram.statements.length > 2) return;\r\n\r\n        let mainMethod: Method = null;\r\n        let staticClass: StaticClass = null;\r\n        let classNode1: ASTNode;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n\r\n                let ct = classNode.resolvedType;\r\n\r\n                for (let m of ct.staticClass.methods) {\r\n                    if (m.identifier == \"main\" && m.parameterlist.parameters.length == 1) {\r\n                        let pt = m.parameterlist.parameters[0];\r\n                        if (pt.type instanceof ArrayType && pt.type.arrayOfType == stringPrimitiveType) {\r\n                            if (mainMethod != null) {\r\n                                this.pushError(\"Es existieren mehrere Klassen mit statischen main-Methoden.\", classNode.position);\r\n                            } else {\r\n                                mainMethod = m;\r\n                                staticClass = ct.staticClass;\r\n                                classNode1 = classNode;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (mainMethod != null) {\r\n\r\n            let position: TextPosition = mainMethod.usagePositions[0];\r\n            if (mainMethod.program != null && mainMethod.program.statements.length > 0) {\r\n                position = mainMethod.program.statements[0].position;\r\n            }\r\n\r\n            this.initCurrentProgram();\r\n\r\n            this.module.mainProgram = this.currentProgram;\r\n\r\n            this.pushStatements([{\r\n                type: TokenType.callMainMethod,\r\n                position: position,\r\n                stepFinished: false,\r\n                method: mainMethod,\r\n                staticClass: staticClass\r\n            }, {\r\n                type: TokenType.closeStackframe,\r\n                position: mainMethod.usagePositions.get(this.module)[0]\r\n            }\r\n            ], false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    generateClasses() {\r\n        if (this.module.classDefinitionsAST == null) return;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n                this.generateClass(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordEnum) {\r\n                this.generateEnum(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordInterface) {\r\n                let interf = classNode.resolvedType;\r\n                if (interf != null) {\r\n                    this.checkDoubleMethodDeclaration(interf);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    generateEnum(enumNode: EnumDeclarationNode) {\r\n\r\n        if (enumNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        let enumClass = <Enum>enumNode.resolvedType;\r\n\r\n        // this.pushUsagePosition(enumNode.position, enumClass);\r\n\r\n        this.currentSymbolTable.classContext = enumClass;\r\n        this.currentProgram = enumClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (enumClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // constructor calls\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        for (let enumValueNode of enumNode.values) {\r\n\r\n            if (enumValueNode.constructorParameters != null) {\r\n\r\n                let p: Program = {\r\n                    module: this.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                }\r\n\r\n                this.currentProgram = p;\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: enumValueNode.position,\r\n                    enumClass: enumClass,\r\n                    valueIdentifier: enumValueNode.identifier\r\n                });\r\n\r\n                this.processEnumConstructorCall(enumClass, enumValueNode.constructorParameters,\r\n                    enumValueNode.position, enumValueNode.commaPositions, enumValueNode.rightBracketPosition);\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.programEnd,\r\n                    position: enumValueNode.position,\r\n                    stepFinished: true\r\n                });\r\n\r\n                let enumInfo: EnumInfo = enumClass.identifierToInfoMap[enumValueNode.identifier];\r\n                enumInfo.constructorCallProgram = p;\r\n                enumInfo.position = enumValueNode.position;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = enumClass.staticClass;\r\n        this.currentProgram = enumClass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n        this.checkDoubleMethodDeclaration(enumClass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    processEnumConstructorCall(enumClass: Enum, parameterNodes: TermNode[],\r\n        position: TextPosition, commaPositions: TextPosition[], rightBracketPosition: TextPosition) {\r\n        let parameterTypes: Type[] = [];\r\n\r\n        for (let p of parameterNodes) {\r\n            let typeNode = this.processNode(p);\r\n            if (typeNode == null) continue;\r\n            parameterTypes.push(typeNode.type);\r\n        }\r\n\r\n        let methods = enumClass.getMethodsThatFitWithCasting(enumClass.identifier,\r\n            parameterTypes, true, Visibility.private);\r\n\r\n        this.module.pushMethodCallPosition(position, commaPositions, enumClass.getMethods(Visibility.private, enumClass.identifier), rightBracketPosition);\r\n\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            let srcType = parameterTypes[i];\r\n            if (!srcType.equals(destType)) {\r\n\r\n                if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n                    if (srcType.getCastInformation(destType).needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: null,\r\n                            newType: destType,\r\n                            stackPosRelative: -parameterTypes.length + 1 + i\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: parameterNodes[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            position: position,\r\n            stepFinished: true,\r\n            isSuperCall: false,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n    }\r\n\r\n    generateClass(classNode: ClassDeclarationNode) {\r\n\r\n        if (classNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        let klass = <Klass>classNode.resolvedType;\r\n\r\n        //this.pushUsagePosition(classNode.position, klass);\r\n\r\n        let inheritanceError = klass.checkInheritance();\r\n\r\n        if (inheritanceError.message != \"\") {\r\n            this.pushError(inheritanceError.message, classNode.position, \"error\", this.getInheritanceQuickFix(classNode.scopeTo, inheritanceError));\r\n        }\r\n\r\n        let baseClass = klass.baseClass;\r\n        if (baseClass != null && baseClass.module != klass.module && baseClass.visibility == Visibility.private) {\r\n            this.pushError(\"Die Basisklasse \" + baseClass.identifier + \" der Klasse \" + klass.identifier + \" ist hier nicht sichtbar.\", classNode.position);\r\n        }\r\n\r\n        this.currentSymbolTable.classContext = klass;\r\n        this.currentProgram = klass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n                let m: Method = methodNode.resolvedType;\r\n                if (m != null && m.annotation == \"@Override\") {\r\n                    if (klass.baseClass != null) {\r\n                        if (klass.baseClass.getMethodBySignature(m.signature) == null) {\r\n                            this.pushError(\"Die Methode \" + m.signature + \" ist mit @Override annotiert, überschreibt aber keine Methode gleicher Signatur einer Oberklasse.\", methodNode.position, \"warning\");\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.checkDoubleMethodDeclaration(klass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = klass.staticClass;\r\n        this.currentProgram = klass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    checkDoubleMethodDeclaration(cie: Klass | Interface) {  // N.B.: Enum extends Klass\r\n\r\n        let signatureMap: { [key: string]: Method } = {};\r\n\r\n        for (let m of cie.methods) {\r\n\r\n            let signature = m.getSignatureWithReturnParameter();\r\n            if (signatureMap[signature] != null) {\r\n\r\n                let cieType: String = \"In der Klasse \";\r\n                if (cie instanceof Interface) cieType = \"Im Interface \";\r\n                if (cie instanceof Enum) cieType = \"Im Enum \";\r\n\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, m.usagePositions.get(this.module)[0], \"error\");\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, signatureMap[signature].usagePositions.get(this.module)[0], \"error\");\r\n\r\n            } else {\r\n                signatureMap[signature] = m;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getInheritanceQuickFix(position: TextPosition, inheritanceError: { message: string; missingMethods: Method[]; }): QuickFix {\r\n\r\n        let s: string = \"\";\r\n        for (let m of inheritanceError.missingMethods) {\r\n            s += \"\\tpublic \" + (m.returnType == null ? \" void\" : getTypeIdentifier(m.returnType)) + \" \" + m.identifier + \"(\";\r\n            s += m.parameterlist.parameters.map(p => getTypeIdentifier(p.type) + \" \" + p.identifier).join(\", \");\r\n            s += \") {\\n\\t\\t//TODO: Methode füllen\\n\\t}\\n\\n\";\r\n        }\r\n\r\n        return {\r\n            title: \"Fehlende Methoden einfügen\",\r\n            editsProvider: (uri) => {\r\n                return [\r\n                    {\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: { startLineNumber: position.line, startColumn: position.column - 1, endLineNumber: position.line, endColumn: position.column - 1 },\r\n                            text: s\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getSuperconstructorCalls(nodes: ASTNode[], superconstructorCallsFound: ASTNode[], isFirstStatement: boolean): boolean {\r\n        for (let node of nodes) {\r\n            if (node == null) continue;\r\n            if (node.type == TokenType.superConstructorCall) {\r\n\r\n                if (!isFirstStatement) {\r\n                    if (superconstructorCallsFound.length > 0) {\r\n                        this.pushError(\"Ein Konstruktor darf nur einen einzigen Aufruf des Superkonstruktors enthalten.\", node.position, \"error\");\r\n                    } else {\r\n                        this.pushError(\"Vor dem Aufruf des Superkonstruktors darf keine andere Anweisung stehen.\", node.position, \"error\");\r\n                    }\r\n                }\r\n\r\n                superconstructorCallsFound.push(node);\r\n                isFirstStatement = false;\r\n            } else if (node.type == TokenType.scopeNode && node.statements != null) {\r\n                isFirstStatement = isFirstStatement && this.getSuperconstructorCalls(node.statements, superconstructorCallsFound, isFirstStatement);\r\n            } else {\r\n                isFirstStatement = false;\r\n            }\r\n        }\r\n        return isFirstStatement;\r\n    }\r\n\r\n\r\n    compileMethod(methodNode: MethodDeclarationNode) {\r\n        // Assumption: methodNode != null\r\n        let method = methodNode.resolvedType;\r\n\r\n        this.checkIfMethodIsVirtual(method);\r\n\r\n        if (method == null) return;\r\n\r\n        // this.pushUsagePosition(methodNode.position, method);\r\n\r\n        this.initCurrentProgram();\r\n        method.program = this.currentProgram;\r\n\r\n        this.pushNewSymbolTable(false, methodNode.scopeFrom, methodNode.scopeTo);\r\n        this.currentSymbolTable.method = method;\r\n\r\n        let stackPos: number = 1;\r\n\r\n        for (let v of method.getParameterList().parameters) {\r\n            v.stackPos = stackPos++;\r\n\r\n            this.currentSymbolTable.variableMap.set(v.identifier, v);\r\n        }\r\n\r\n        // \" + 1\" is for \"this\"-object\r\n        this.nextFreeRelativeStackPos = methodNode.parameters.length + 1;\r\n\r\n        if (method.isConstructor && this.currentSymbolTable.classContext instanceof Klass && methodNode.statements != null) {\r\n            let c: Klass = this.currentSymbolTable.classContext;\r\n\r\n            let superconstructorCalls: ASTNode[] = [];\r\n            this.getSuperconstructorCalls(methodNode.statements, superconstructorCalls, true);\r\n\r\n            let superconstructorCallEnsured: boolean = superconstructorCalls.length > 0;\r\n\r\n            // if (methodNode.statements.length > 0 && methodNode.statements[0].type == TokenType.scopeNode) {\r\n            //     let stm = methodNode.statements[0].statements;\r\n            //     if (stm.length > 0 && [TokenType.superConstructorCall, TokenType.constructorCall].indexOf(stm[0].type) >= 0) {\r\n            //         superconstructorCallEnsured = true;\r\n            //     }\r\n            // } else if ([TokenType.superConstructorCall, TokenType.constructorCall].indexOf(methodNode.statements[0].type) >= 0) {\r\n            //     superconstructorCallEnsured = true;\r\n            // }\r\n\r\n            if (c != null && c.baseClass?.hasConstructor() && !c.baseClass?.hasParameterlessConstructor()) {\r\n                let error: boolean = false;\r\n                if (methodNode.statements == null || methodNode.statements.length == 0) error = true;\r\n                if (!error) {\r\n                    error = !superconstructorCallEnsured;\r\n                }\r\n                if (error) {\r\n                    let quickFix: QuickFix = null;\r\n                    let constructors = c.baseClass.methods.filter(m => m.isConstructor);\r\n                    if (constructors.length == 1) {\r\n                        let methodCall = \"super(\" + constructors[0].parameterlist.parameters.map(p => p.identifier).join(\", \") + \");\";\r\n                        let position = methodNode.position;\r\n                        quickFix = {\r\n                            title: 'Aufruf des Konstruktors der Basisklasse einfügen',\r\n                            //06.06.2020\r\n                            editsProvider: (uri) => {\r\n                                return [{\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: {\r\n                                            startLineNumber: position.line + 1, startColumn: 0, endLineNumber: position.line + 1, endColumn: 0,\r\n                                            message: \"\",\r\n                                            severity: monaco.MarkerSeverity.Error\r\n                                        },\r\n                                        text: \"\\t\\t\" + methodCall + \"\\n\"\r\n                                    }\r\n                                }\r\n                                ];\r\n                            }\r\n                        }\r\n                    }\r\n                    this.pushError(\"Die Basisklasse der Klasse \" + c.identifier + \" besitzt keinen parameterlosen Konstruktor, daher muss diese Konstruktordefinition mit einem Aufruf eines Konstruktors der Basisklasse (super(...)) beginnen.\",\r\n                        methodNode.position, \"error\", quickFix);\r\n                }\r\n            } else if (!superconstructorCallEnsured && c.baseClass?.hasParameterlessConstructor()) {\r\n                // invoke parameterless constructor\r\n                let baseClassConstructor = c.baseClass.getParameterlessConstructor();\r\n                this.pushStatements([\r\n                    // Push this-object to stack:\r\n                    {\r\n                        type: TokenType.pushLocalVariableToStack,\r\n                        position: methodNode.position,\r\n                        stackposOfVariable: 0\r\n                    },\r\n                    {\r\n                        type: TokenType.callMethod,\r\n                        method: baseClassConstructor,\r\n                        isSuperCall: true,\r\n                        position: methodNode.position,\r\n                        stackframeBegin: -1 // this-object followed by parameters\r\n                    }\r\n\r\n                ])\r\n            }\r\n        }\r\n\r\n        let actorClass = <Klass>this.moduleStore.getType(\"Actor\").type;\r\n        let methodIdentifiers = [\"act\", \"onKeyTyped\", \"onKeyDown\", \"onKeyUp\",\r\n            \"onMouseDown\", \"onMouseUp\", \"onMouseMove\", \"onMouseEnter\", \"onMouseLeave\"];\r\n        if (methodIdentifiers.indexOf(method.identifier) >= 0 && this.currentSymbolTable.classContext.hasAncestorOrIs(actorClass)) {\r\n            this.pushStatements([\r\n\r\n                {\r\n                    type: TokenType.returnIfDestroyed,\r\n                    position: methodNode.position\r\n                },\r\n            ]);\r\n        }\r\n\r\n        let withReturnStatement = this.generateStatements(methodNode.statements).withReturnStatement;\r\n\r\n        if (!withReturnStatement) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: methodNode.scopeTo,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: true,\r\n                leaveThisObjectOnStack: false\r\n            });\r\n\r\n            let rt = method.getReturnType();\r\n            if (!method.isConstructor && rt != null && rt != voidPrimitiveType) {\r\n                this.pushError(\"Die Deklaration der Methode verlangt die Rückgabe eines Wertes vom Typ \" + rt.identifier + \". Es fehlt (mindestens) eine entsprechende return-Anweisung.\", methodNode.position);\r\n            }\r\n        }\r\n\r\n        method.reserveStackForLocalVariables = this.nextFreeRelativeStackPos\r\n            - methodNode.parameters.length - 1;\r\n\r\n        this.popSymbolTable();\r\n        this.currentProgram.labelManager.resolveNodes();\r\n    }\r\n\r\n\r\n    /**\r\n     * checks if child classes have method with same signature\r\n     */\r\n    checkIfMethodIsVirtual(method: Method) {\r\n\r\n        let klass = this.currentSymbolTable.classContext;\r\n        if (klass != null) {\r\n\r\n            for (let mo of this.moduleStore.getModules(false)) {\r\n                for (let c of mo.typeStore.typeList) {\r\n                    if (c instanceof Klass && c != klass && c.hasAncestorOrIs(klass)) {\r\n                        for (let m of c.methods) {\r\n                            if (m != null && method != null && m.signature == method.signature) {\r\n                                method.isVirtual = true;\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initializeAttribute(attribute: AttributeDeclarationNode) {\r\n\r\n        if (attribute == null) return;\r\n\r\n        // assumption: attribute != null\r\n        if (attribute.identifier == null || attribute.initialization == null || attribute.resolvedType == null) return;\r\n\r\n        if (attribute.isStatic) {\r\n            this.pushStatements({\r\n                type: TokenType.pushStaticAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.resolvedType.identifier,\r\n                position: attribute.initialization.position,\r\n                klass: <StaticClass>(this.currentSymbolTable.classContext)\r\n            });\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.identifier,\r\n                position: attribute.initialization.position,\r\n                useThisObject: true\r\n            });\r\n        }\r\n\r\n\r\n        let initializationType = this.processNode(attribute.initialization);\r\n\r\n        if (initializationType != null && initializationType.type != null) {\r\n            if (!this.ensureAutomaticCasting(initializationType.type, attribute.attributeType.resolvedType)) {\r\n\r\n                if (attribute.attributeType.resolvedType == null) {\r\n                    this.pushError(\"Der Datentyp von \" + attribute.identifier + \" konnte nicht ermittelt werden. \", attribute.position);\r\n                } else {\r\n                    this.pushError(\"Der Wert des Term vom Datentyp \" + initializationType.type + \" kann dem Attribut \" + attribute.identifier + \" vom Typ \" + attribute.attributeType.resolvedType.identifier + \" nicht zugewiesen werden.\", attribute.initialization.position);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.assignment,\r\n                position: attribute.initialization.position,\r\n                stepFinished: false,\r\n                leaveValueOnStack: false\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    initCurrentProgram() {\r\n\r\n        this.currentProgram = {\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.currentProgram.labelManager = new LabelManager(this.currentProgram);\r\n\r\n        this.lastStatement = null;\r\n\r\n    }\r\n\r\n    generateMain(isAdhocCompilation: boolean = false) {\r\n\r\n        this.initCurrentProgram();\r\n\r\n        let position: TextPosition = { line: 1, column: 1, length: 0 };\r\n\r\n        let mainProgramAst = this.module.mainProgramAst;\r\n        if (mainProgramAst != null && mainProgramAst.length > 0 && mainProgramAst[0] != null) {\r\n            position = this.module.mainProgramAst[0].position;\r\n        }\r\n\r\n        if (!isAdhocCompilation) {\r\n            this.pushNewSymbolTable(true, position, { line: 100000, column: 1, length: 0 }, this.currentProgram);\r\n            this.heap = {};\r\n        }\r\n\r\n        this.module.mainProgram = this.currentProgram;\r\n\r\n        let hasMainProgram: boolean = false;\r\n\r\n        if (this.module.mainProgramAst != null && this.module.mainProgramAst.length > 0) {\r\n\r\n            hasMainProgram = true;\r\n            this.generateStatements(this.module.mainProgramAst);\r\n\r\n            if (isAdhocCompilation && this.lastStatement != null && this.lastStatement.type == TokenType.decreaseStackpointer) {\r\n                this.removeLastStatement();\r\n            }\r\n\r\n            this.lastPosition = this.module.mainProgramEnd;\r\n            if (this.lastPosition == null) this.lastPosition = { line: 100000, column: 0, length: 0 };\r\n            // if(this.lastPosition == null) this.lastPosition = {line: 100000, column: 0, length: 0};\r\n\r\n            this.currentSymbolTable.positionTo = this.lastPosition;\r\n            if (!isAdhocCompilation) this.popSymbolTable(this.currentProgram, true);\r\n            this.heap = null;\r\n\r\n            this.pushStatements({\r\n                type: TokenType.programEnd,\r\n                position: this.lastPosition,\r\n                stepFinished: true,\r\n                pauseAfterProgramEnd: true\r\n            }, true);\r\n\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        if (!isAdhocCompilation && !hasMainProgram) {\r\n            this.popSymbolTable(this.currentProgram);\r\n            this.heap = null;\r\n        }\r\n\r\n    }\r\n\r\n    ensureAutomaticCasting(typeFrom: Type, typeTo: Type, position?: TextPosition, nodeFrom?: ASTNode, nullTypeForbidden: boolean = false): boolean {\r\n\r\n        if (typeFrom == null || typeTo == null) return false;\r\n\r\n        if (!(typeFrom == nullType && nullTypeForbidden)) {\r\n\r\n            if (typeFrom.equals(typeTo)) {\r\n                return true;\r\n            }\r\n\r\n            if (!typeFrom.canCastTo(typeTo)) {\r\n\r\n                if (typeTo == booleanPrimitiveType && nodeFrom != null) {\r\n\r\n                    this.checkIfAssignmentInstedOfEqual(nodeFrom);\r\n\r\n                }\r\n\r\n\r\n                return false;\r\n            }\r\n\r\n            if (typeFrom[\"unboxableAs\"] != null && typeFrom[\"unboxableAs\"].indexOf(typeTo) >= 0) {\r\n                this.pushStatements({\r\n                    type: TokenType.castValue,\r\n                    position: position,\r\n                    newType: typeTo\r\n                });\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (typeFrom instanceof PrimitiveType && (typeTo instanceof PrimitiveType || typeTo == stringPrimitiveType)) {\r\n            let castInfo = typeFrom.getCastInformation(typeTo);\r\n            if (!castInfo.automatic) {\r\n                return false;\r\n            }\r\n            // if (castInfo.needsStatement) {\r\n            this.pushStatements({\r\n                type: TokenType.castValue,\r\n                newType: typeTo,\r\n                position: position\r\n            });\r\n            // }\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    ensureAutomaticToString(typeFrom: Type, codepos: number = undefined, textposition?: TextPosition): boolean {\r\n        if (typeFrom == stringPrimitiveType) return true;\r\n        if (typeFrom == voidPrimitiveType) return false;\r\n        let automaticToString: Method;\r\n        \r\n        if (typeFrom instanceof PrimitiveType) {\r\n            automaticToString = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, (parameters: Value[]) => {\r\n                let value = parameters[0];\r\n                return ((<PrimitiveType>value.type).valueToString(value));\r\n            }, false, true);\r\n\r\n        }\r\n        if ((typeFrom instanceof Klass) || (typeFrom == nullType)) {\r\n\r\n            let toStringMethod: Method;\r\n            if (typeFrom == nullType) {\r\n                toStringMethod = objectType.getMethodBySignature(\"toString()\");\r\n            }\r\n            else {\r\n                toStringMethod = (<Klass>typeFrom).getMethodBySignature(\"toString()\");\r\n            }\r\n            if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n                automaticToString = new Method(toStringMethod.identifier, toStringMethod.parameterlist, stringPrimitiveType, (parameters: Value[]) => {\r\n                    let value = parameters[0].value;\r\n                    if (value == null) return \"null\";\r\n                    return toStringMethod.invoke(parameters);\r\n                }, toStringMethod.isAbstract, true, toStringMethod.documentation, toStringMethod.isConstructor);\r\n\r\n            }\r\n\r\n        }\r\n        if (automaticToString != undefined) {\r\n            this.insertOrPushStatements({\r\n                type: TokenType.callMethod,\r\n                position: textposition,\r\n                method: automaticToString,\r\n                isSuperCall: false,\r\n                stackframeBegin: -1,\r\n                stepFinished: false\r\n            }, codepos);\r\n            return true;\r\n        }\r\n        return false;\r\n\r\n    }\r\n\r\n    // getToStringStatement(type: Klass | NullType, position: TextPosition, nullToString: boolean = true): Statement {\r\n\r\n    // }\r\n\r\n    checkIfAssignmentInstedOfEqual(nodeFrom: ASTNode, conditionType?: Type) {\r\n        if (nodeFrom == null) return;\r\n\r\n        if (nodeFrom.type == TokenType.binaryOp && nodeFrom.operator == TokenType.assignment) {\r\n            let pos = nodeFrom.position;\r\n            this.pushError(\"= ist der Zuweisungsoperator. Du willst sicher zwei Werte vergleichen. Dazu benötigst Du den Vergleichsoperator ==.\",\r\n                pos, conditionType == booleanPrimitiveType ? \"warning\" : \"error\", {\r\n                title: '= durch == ersetzen',\r\n                editsProvider: (uri) => {\r\n                    return [{\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: {\r\n                                startLineNumber: pos.line, startColumn: pos.column, endLineNumber: pos.line, endColumn: pos.column + 1,\r\n                                message: \"\",\r\n                                severity: monaco.MarkerSeverity.Error\r\n                            },\r\n                            text: \"==\"\r\n                        }\r\n                    }\r\n                    ];\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    generateStatements(nodes: ASTNode[]): { withReturnStatement: boolean, endPosition?: TextPosition } {\r\n\r\n\r\n        if (nodes == null || nodes.length == 0 || nodes[0] == null) return { withReturnStatement: false };\r\n\r\n        let withReturnStatement: boolean = this.processStatementsInsideBlock(nodes);\r\n\r\n        let lastNode = nodes[nodes.length - 1];\r\n        let endPosition: TextPosition;\r\n        if (lastNode != null) {\r\n            if (lastNode.type == TokenType.scopeNode) {\r\n                endPosition = lastNode.positionTo;\r\n            } else {\r\n                endPosition = Object.assign({}, lastNode.position);\r\n                if (endPosition != null) {\r\n                    endPosition.column += endPosition.length;\r\n                    endPosition.length = 1;\r\n                }\r\n            }\r\n            this.lastPosition = endPosition;\r\n        } else {\r\n            endPosition = this.lastPosition;\r\n        }\r\n\r\n        return { withReturnStatement: withReturnStatement, endPosition: endPosition };\r\n\r\n    }\r\n\r\n    processStatementsInsideBlock(nodes: ASTNode[]) {\r\n        let withReturnStatement = false;\r\n\r\n        for (let node of nodes) {\r\n\r\n            if (node == null) continue;\r\n\r\n            let type = this.processNode(node);\r\n\r\n            if (type != null && type.withReturnStatement != null && type.withReturnStatement) {\r\n                withReturnStatement = true;\r\n            }\r\n\r\n            // If last Statement has value which is not used further then pop this value from stack.\r\n            // e.g. statement 12 + 17 -7;\r\n            // Parser issues a warning in this case, see Parser.checkIfStatementHasNoEffekt\r\n            if (type != null && type.type != null && type.type != voidPrimitiveType) {\r\n\r\n                if (this.lastStatement != null &&\r\n                    this.lastStatement.type == TokenType.assignment && this.lastStatement.leaveValueOnStack) {\r\n                    this.lastStatement.leaveValueOnStack = false;\r\n                } else {\r\n                    this.pushStatements({\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: null,\r\n                        popCount: 1,\r\n                        stepFinished: true\r\n                    }, true)\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return withReturnStatement;\r\n    }\r\n\r\n\r\n    lastPosition: TextPosition;\r\n    lastStatement: Statement;\r\n\r\n    insertStatements(pos: number, statements: Statement | Statement[]) {\r\n        if (statements == null) return;\r\n        if (!Array.isArray(statements)) statements = [statements];\r\n        for (let st of statements) {\r\n            this.currentProgram.statements.splice(pos++, 0, st);\r\n        }\r\n    }\r\n\r\n    pushStatements(statement: Statement | Statement[], deleteStepFinishedFlagOnStepBefore: boolean = false) {\r\n\r\n        if (statement == null) return;\r\n\r\n        if (deleteStepFinishedFlagOnStepBefore && this.currentProgram.statements.length > 0) {\r\n            let stepBefore: Statement = this.currentProgram.statements[this.currentProgram.statements.length - 1];\r\n            stepBefore.stepFinished = false;\r\n        }\r\n\r\n        if (Array.isArray(statement)) {\r\n            for (let st of statement) {\r\n                this.currentProgram.statements.push(st);\r\n                if (st.type == TokenType.return || st.type == TokenType.jumpAlways) {\r\n                    if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n                }\r\n                if (st.position != null) {\r\n                    this.lastPosition = st.position;\r\n                } else {\r\n                    st.position = this.lastPosition;\r\n                }\r\n                this.lastStatement = st;\r\n            }\r\n        } else {\r\n            this.currentProgram.statements.push(statement);\r\n            if (statement.type == TokenType.return || statement.type == TokenType.jumpAlways) {\r\n                if (this.lastStatement != null && this.lastStatement.type != TokenType.noOp) this.lastStatement.stepFinished = false;\r\n            }\r\n            if (statement.position != null) {\r\n                this.lastPosition = statement.position;\r\n            } else {\r\n                statement.position = this.lastPosition;\r\n            }\r\n\r\n            this.lastStatement = statement;\r\n        }\r\n    }\r\n\r\n    insertOrPushStatements(statements: Statement | Statement[], pos?: number) {\r\n        if (pos == null && pos == undefined) this.pushStatements(statements);\r\n        else this.insertStatements(pos, statements);\r\n    }\r\n\r\n    removeLastStatement() {\r\n        let lst = this.currentProgram.statements.pop();\r\n        if (this.currentProgram.labelManager != null) {\r\n            this.currentProgram.labelManager.removeNode(lst);\r\n        }\r\n    }\r\n\r\n    initStackFrameNodes: InitStackframeStatement[] = [];\r\n\r\n\r\n    pushNewSymbolTable(beginNewStackframe: boolean, positionFrom: TextPosition, positionTo: TextPosition,\r\n        program?: Program): SymbolTable {\r\n\r\n        let st = new SymbolTable(this.currentSymbolTable, positionFrom, positionTo);\r\n\r\n        this.symbolTableStack.push(this.currentSymbolTable);\r\n\r\n        if (beginNewStackframe) {\r\n            st.beginsNewStackframe = true;\r\n            this.currentSymbolTable.stackframeSize = this.nextFreeRelativeStackPos;\r\n            this.nextFreeRelativeStackPos = 0;\r\n\r\n            if (program != null) {\r\n                let initStackFrameNode: InitStackframeStatement = {\r\n                    type: TokenType.initStackframe,\r\n                    position: positionFrom,\r\n                    reserveForLocalVariables: 0\r\n                }\r\n\r\n                program.statements.push(initStackFrameNode);\r\n                this.initStackFrameNodes.push(initStackFrameNode);\r\n            }\r\n\r\n        }\r\n\r\n        this.currentSymbolTable = st;\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    popSymbolTable(program?: Program, deleteStepFinishedFlagOnStepBefore: boolean = false): void {\r\n\r\n        let st = this.currentSymbolTable;\r\n        this.currentSymbolTable = this.symbolTableStack.pop();\r\n\r\n        // if v.declarationError != null then variable has been used before initialization.\r\n        st.variableMap.forEach(v => {\r\n            if (v.declarationError != null && v.usedBeforeInitialization) {\r\n                this.errorList.push(v.declarationError);\r\n                v.declarationError = null;\r\n            }\r\n        });\r\n\r\n        // if (!st.beginsNewStackframe && st.variableMap.size == 0 && removeI) {\r\n        //     // empty symbol table => remove it!\r\n        //     if (st.parent != null) {\r\n        //         st.parent.childSymbolTables.pop();\r\n        //     }\r\n        // } else \r\n        {\r\n            // TODO: add length of token\r\n\r\n            if (st.beginsNewStackframe) {\r\n\r\n                st.stackframeSize = this.nextFreeRelativeStackPos;\r\n                this.nextFreeRelativeStackPos = this.currentSymbolTable.stackframeSize;\r\n\r\n                if (program != null) {\r\n                    let initStackframeNode = this.initStackFrameNodes.pop();\r\n                    if (initStackframeNode != null) initStackframeNode.reserveForLocalVariables = st.stackframeSize;\r\n\r\n                    if (program.statements.length > 0 && deleteStepFinishedFlagOnStepBefore) {\r\n                        let statement = program.statements[program.statements.length - 1];\r\n\r\n                        // don't set stepFinished = false in jump-statements\r\n                        // as this could lead to infinity-loop is user sets \"while(true);\" just before program end\r\n                        if ([TokenType.jumpAlways, TokenType.jumpIfTrue, TokenType.jumpIfFalse, TokenType.jumpIfFalseAndLeaveOnStack, TokenType.jumpIfTrueAndLeaveOnStack].indexOf(statement.type) == -1) {\r\n                            program.statements[program.statements.length - 1].stepFinished = false;\r\n                        }\r\n                    }\r\n\r\n                    program.statements.push({\r\n                        type: TokenType.closeStackframe,\r\n                        position: st.positionTo\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushError(text: string, position: TextPosition, errorLevel: ErrorLevel = \"error\", quickFix?: QuickFix) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    openBreakScope() {\r\n        this.breakNodeStack.push([]);\r\n    }\r\n\r\n    openContinueScope() {\r\n        this.continueNodeStack.push([]);\r\n    }\r\n\r\n    pushBreakNode(breakNode: JumpAlwaysStatement) {\r\n        if (this.breakNodeStack.length == 0) {\r\n            this.pushError(\"Eine break-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", breakNode.position);\r\n        } else {\r\n            this.breakNodeStack[this.breakNodeStack.length - 1].push(breakNode);\r\n            this.pushStatements(breakNode);\r\n        }\r\n    }\r\n\r\n    pushContinueNode(continueNode: JumpAlwaysStatement) {\r\n        if (this.continueNodeStack.length == 0) {\r\n            this.pushError(\"Eine continue-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", continueNode.position);\r\n        } else {\r\n            this.continueNodeStack[this.continueNodeStack.length - 1].push(continueNode);\r\n            this.pushStatements(continueNode);\r\n        }\r\n    }\r\n\r\n    closeBreakScope(breakTargetLabel: number, lm: LabelManager) {\r\n        let breakNodes = this.breakNodeStack.pop();\r\n        for (let bn of breakNodes) {\r\n            lm.registerJumpNode(bn, breakTargetLabel);\r\n        }\r\n    }\r\n\r\n    closeContinueScope(continueTargetLabel: number, lm: LabelManager) {\r\n        let continueNodes = this.continueNodeStack.pop();\r\n        for (let bn of continueNodes) {\r\n            lm.registerJumpNode(bn, continueTargetLabel);\r\n        }\r\n    }\r\n\r\n    breakOccured(): boolean {\r\n        return this.breakNodeStack.length > 0 && this.breakNodeStack[this.breakNodeStack.length - 1].length > 0;\r\n    }\r\n\r\n    processNode(node: ASTNode, isLeftSideOfAssignment: boolean = false): StackType {\r\n\r\n        if (node == null) return;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                return this.processBinaryOp(node);\r\n            case TokenType.unaryOp:\r\n                return this.processUnaryOp(node);\r\n            case TokenType.pushConstant:\r\n                return this.pushConstant(node);\r\n            case TokenType.callMethod:\r\n                return this.callMethod(node);\r\n            case TokenType.identifier:\r\n                {\r\n                    let stackType = this.resolveIdentifier(node);\r\n                    let v = node.variable;\r\n                    if (v != null) {\r\n                        if (isLeftSideOfAssignment) {\r\n                            v.initialized = true;\r\n                            if (!v.usedBeforeInitialization) {\r\n                                v.declarationError = null;\r\n                            }\r\n                        } else {\r\n                            if (v.initialized != null && !v.initialized) {\r\n                                v.usedBeforeInitialization = true;\r\n                                this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                            }\r\n                        }\r\n                    }\r\n                    return stackType;\r\n                }\r\n            case TokenType.selectArrayElement:\r\n                return this.selectArrayElement(node);\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                return this.incrementDecrementBeforeOrAfter(node);\r\n            case TokenType.superConstructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.constructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.keywordThis:\r\n                return this.pushThisOrSuper(node, false);\r\n            case TokenType.keywordSuper:\r\n                return this.pushThisOrSuper(node, true);\r\n            case TokenType.pushAttribute:\r\n                return this.pushAttribute(node);\r\n            case TokenType.newObject:\r\n                return this.newObject(node);\r\n            case TokenType.keywordWhile:\r\n                return this.processWhile(node);\r\n            case TokenType.keywordDo:\r\n                return this.processDo(node);\r\n            case TokenType.keywordFor:\r\n                return this.processFor(node);\r\n            case TokenType.forLoopOverCollection:\r\n                return this.processForLoopOverCollection(node);\r\n            case TokenType.keywordIf:\r\n                return this.processIf(node);\r\n            case TokenType.keywordSwitch:\r\n                return this.processSwitch(node);\r\n            case TokenType.keywordReturn:\r\n                return this.processReturn(node);\r\n            case TokenType.localVariableDeclaration:\r\n                return this.localVariableDeclaration(node);\r\n            case TokenType.arrayInitialization:\r\n                return this.processArrayLiteral(node);\r\n            case TokenType.newArray:\r\n                return this.processNewArray(node);\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                return this.processPrint(node);\r\n            case TokenType.castValue:\r\n                return this.processManualCast(node);\r\n            case TokenType.keywordBreak:\r\n                this.pushBreakNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.keywordContinue:\r\n                this.pushContinueNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.rightBracket:\r\n                let type = this.processNode(node.termInsideBrackets);\r\n                if (type != null && type.type instanceof Klass) this.pushTypePosition(node.position, type.type);\r\n                return type;\r\n            case TokenType.scopeNode:\r\n                this.pushNewSymbolTable(false, node.position, node.positionTo);\r\n\r\n                let withReturnStatement = this.processStatementsInsideBlock(node.statements);\r\n\r\n                this.popSymbolTable();\r\n\r\n                return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processManualCast(node: CastManuallyNode): StackType {\r\n\r\n        let typeFrom1 = this.processNode(node.whatToCast);\r\n\r\n        if (typeFrom1 == null || typeFrom1.type == null) return;\r\n        let typeFrom: Type = typeFrom1.type;\r\n\r\n        if (typeFrom != null && node.castToType != null && node.castToType.resolvedType != null) {\r\n\r\n            let typeTo = node.castToType.resolvedType;\r\n\r\n            if (typeFrom.canCastTo(typeTo)) {\r\n\r\n                this.pushCastToStatement(typeFrom, typeTo, node);\r\n\r\n                // if ((typeFrom instanceof PrimitiveType) && typeTo instanceof PrimitiveType) {\r\n                //     let castInfo = typeFrom.getCastInformation(typeTo);\r\n                //     if (castInfo.needsStatement) {\r\n                //         this.pushStatements({\r\n                //             type: TokenType.castValue,\r\n                //             position: node.position,\r\n                //             newType: typeTo\r\n                //         });\r\n                // }\r\n                // } else if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n                //     let toStringStatement = this.getToStringStatement(typeFrom, node.position, false);\r\n                //     if (toStringStatement != null) {\r\n                //         this.pushStatements(this.getToStringStatement(typeFrom, node.position, false));\r\n                //     } else {\r\n                //         this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n                //         this.pushStatements({ type: TokenType.castValue, position: node.position, newType: typeTo });\r\n                //     }\r\n                // }\r\n\r\n                // else if ((typeFrom[\"unboxableAs\"] || []).includes(typeTo)) {\r\n                //     this.pushStatements({\r\n                //         type: TokenType.castValue,\r\n                //         position: node.position,\r\n                //         newType: typeTo\r\n                //     });\r\n                // }\r\n\r\n                // else if (typeFrom instanceof NullType) {\r\n                //     this.pushStatements({\r\n                //         type: TokenType.castValue,\r\n                //         position: node.position,\r\n                //         newType: typeTo\r\n                //     });\r\n                // }\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n\r\n            }\r\n\r\n            if (typeFrom instanceof UnboxableKlass) {\r\n                for (let unboxableAs of typeFrom.unboxableAs) {\r\n                    if (unboxableAs.canCastTo(typeTo)) {\r\n                        this.pushCastToStatement(typeFrom, unboxableAs, node);\r\n                        this.pushCastToStatement(unboxableAs, typeTo, node);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if ((typeFrom instanceof Klass || typeFrom instanceof Interface) && (typeTo instanceof Klass || typeTo instanceof Interface))\r\n\r\n            // if (typeFrom instanceof Klass &&\r\n            //     (typeTo instanceof Klass && !typeFrom.hasAncestorOrIs(typeTo) && typeTo.hasAncestorOrIs(typeFrom)) ||\r\n            //     (typeTo instanceof Interface && !(<Klass>typeFrom).implementsInterface(typeTo))) \r\n            {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.checkCast,\r\n                    position: node.position,\r\n                    newType: typeTo,\r\n                    stepFinished: false\r\n                });\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n            }\r\n            else {\r\n                this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushCastToStatement(typeFrom: Type, typeTo: Type, node: CastManuallyNode) {\r\n        let needsStatement: boolean = typeFrom != typeTo;\r\n\r\n        // if ((typeFrom instanceof PrimitiveType) && typeTo instanceof PrimitiveType) {\r\n        //     let castInfo = typeFrom.getCastInformation(typeTo);\r\n        //     if (!castInfo.needsStatement) needsStatement = false;\r\n        // }\r\n\r\n        if (needsStatement) this.pushStatements({\r\n            type: TokenType.castValue,\r\n            position: node.position,\r\n            newType: typeTo\r\n        });\r\n\r\n    }\r\n\r\n    processPrint(node: PrintNode): StackType {\r\n\r\n        let type = node.type == TokenType.keywordPrint ? TokenType.print : TokenType.println;\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, TokenTypeReadable[node.type], node.rightBracketPosition);\r\n\r\n        if (node.text != null) {\r\n\r\n            let type = this.processNode(node.text);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticToString(type.type)) {\r\n                    this.pushError(\"Die Methoden print und println erwarten einen Parameter vom Typ String. Gefunden wurde ein Wert vom Typ \" + type.type?.identifier + \".\", node.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        let withColor: boolean = false;\r\n\r\n        if (node.color != null) {\r\n\r\n            let type = this.processNode(node.color);\r\n\r\n            if (type != null) {\r\n                if (type.type != stringPrimitiveType && type.type != intPrimitiveType) {\r\n                    if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                        this.pushError(\"Die Methoden print und println erwarten als Farbe einen Parameter vom Typ String oder int. Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                    }\r\n                }\r\n            }\r\n\r\n            withColor = true;\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: type,\r\n            position: node.position,\r\n            empty: (node.text == null),\r\n            stepFinished: true,\r\n            withColor: withColor\r\n        });\r\n\r\n\r\n        return null;\r\n    }\r\n\r\n    processNewArray(node: NewArrayNode): StackType {\r\n\r\n        if (node.initialization != null) {\r\n            return this.processArrayLiteral(node.initialization);\r\n        }\r\n\r\n        // int[7][2][] are 7 arrays each with arrays of length 2 which are empty\r\n\r\n        let dimension = 0;\r\n        for (let ec of node.elementCount) {\r\n            if (ec != null) {\r\n                this.processNode(ec); // push number of elements for this dimension on stack\r\n                dimension++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // for the array above: arrayType is array of array of int; dimension is 2; stack: 7 2\r\n        this.pushStatements({\r\n            type: TokenType.pushEmptyArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType,\r\n            dimension: dimension\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n\r\n    processArrayLiteral(node: ArrayInitializationNode): StackType {\r\n\r\n        let bes: BeginArrayStatement = {\r\n            type: TokenType.beginArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType\r\n        };\r\n\r\n        this.pushStatements(bes);\r\n\r\n        for (let ain of node.nodes) {\r\n\r\n            // Did an error occur when parsing a constant?\r\n            if (ain == null) {\r\n                continue;\r\n            }\r\n\r\n            if (ain.type == TokenType.arrayInitialization) {\r\n                this.processArrayLiteral(ain);\r\n            } else {\r\n                let sType = this.processNode(ain);\r\n                if (sType == null) {\r\n                    return;\r\n                }\r\n                let targetType = (<ArrayType>node.arrayType.resolvedType).arrayOfType;\r\n                if (!this.ensureAutomaticCasting(sType.type, targetType, ain.position)) {\r\n                    this.pushError(\"Der Datentyp des Terms (\" + sType.type?.identifier + \") kann nicht in den Datentyp \" + targetType?.identifier + \" konvertiert werden.\", ain.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.addToArray,\r\n            position: node.position,\r\n            numberOfElementsToAdd: node.nodes.length\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n    localVariableDeclaration(node: LocalVariableDeclarationNode, dontWarnWhenNoInitialization: boolean = false): StackType {\r\n\r\n        if (node.variableType.resolvedType == null) {\r\n            node.variableType.resolvedType = nullType; // Make the best out of it...\r\n        }\r\n\r\n        let declareVariableOnHeap = (this.heap != null && this.symbolTableStack.length <= 2);\r\n\r\n        let variable: Variable = {\r\n            identifier: node.identifier,\r\n            stackPos: declareVariableOnHeap ? null : this.nextFreeRelativeStackPos++,\r\n            type: node.variableType.resolvedType,\r\n            usagePositions: new Map(),\r\n            declaration: { module: this.module, position: node.position },\r\n            isFinal: node.isFinal\r\n        };\r\n\r\n        this.pushUsagePosition(node.position, variable);\r\n\r\n        if (declareVariableOnHeap) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.heapVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            });\r\n\r\n            if (this.heap[variable.identifier]) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.heap[variable.identifier] = variable;\r\n            // only for code completion:\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n        } else {\r\n\r\n            if (this.currentSymbolTable.variableMap.get(node.identifier)) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n            this.pushStatements({\r\n                type: TokenType.localVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            })\r\n\r\n        }\r\n\r\n        if (node.initialization != null) {\r\n            let initType = this.processNode(node.initialization);\r\n\r\n            if (initType != null) {\r\n\r\n                if (variable.type == varType) {\r\n                    variable.type = initType.type;\r\n                } else if (initType.type == null) {\r\n                    this.pushError(\"Der Typ des Terms auf der rechten Seite des Zuweisungsoperators (=) konnte nicht bestimmt werden.\", node.initialization.position);\r\n                } else\r\n                    if (!this.ensureAutomaticCasting(initType.type, variable.type)) {\r\n                        this.pushError(\"Der Term vom Typ \" + initType.type.identifier + \" kann der Variable vom Typ \" + variable.type.identifier + \" nicht zugeordnet werden.\", node.initialization.position);\r\n                    };\r\n                this.pushStatements({\r\n                    type: TokenType.assignment,\r\n                    position: node.initialization.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                });\r\n            }\r\n\r\n        } else {\r\n            if (variable.type == varType) {\r\n                this.pushError(\"Die Verwendung von var ist nur dann zulässig, wenn eine lokale Variable in einer Anweisung deklariert und initialisiert wird, also z.B. var i = 12;\", node.variableType.position);\r\n            } else {\r\n                let initializer: string = \" = null\";\r\n                if (variable.type == intPrimitiveType) initializer = \" = 0\";\r\n                if (variable.type == doublePrimitiveType) initializer = \" = 0.0\";\r\n                if (variable.type == booleanPrimitiveType) initializer = \" = false\";\r\n                if (variable.type == charPrimitiveType) initializer = \" = ' '\";\r\n                if (variable.type == stringPrimitiveType) initializer = ' = \"\"';\r\n\r\n                variable.declarationError = {\r\n                    text: \"Jede lokale Variable sollte vor ihrer ersten Verwendung initialisiert werden.\",\r\n                    position: node.position,\r\n                    quickFix:\r\n                    {\r\n                        title: initializer + \" ergänzen\",\r\n                        editsProvider: (uri) => {\r\n                            let pos = node.position;\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: pos.line, startColumn: pos.column + pos.length, endLineNumber: pos.line, endColumn: pos.column + pos.length },\r\n                                        text: initializer\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    level: \"info\"\r\n                }\r\n\r\n                variable.usedBeforeInitialization = false;\r\n                variable.initialized = dontWarnWhenNoInitialization;\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    processReturn(node: ReturnNode): StackType {\r\n\r\n        let method = this.currentSymbolTable.method;\r\n\r\n        if (method == null) {\r\n            this.pushError(\"Eine return-Anweisung ist nur im Kontext einer Methode erlaubt.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (node.term != null) {\r\n\r\n            if (method.getReturnType() == null) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet keinen Rückgabewert.\", node.position);\r\n                return null;\r\n            }\r\n\r\n            let type = this.processNode(node.term);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, method.getReturnType(), null, node)) {\r\n                    this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \". Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            if (method.getReturnType() != null && method.getReturnType() != voidPrimitiveType) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \", daher ist die leere Return-Anweisung (return;) nicht ausreichend.\", node.position);\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.return,\r\n            position: node.position,\r\n            copyReturnValueToStackframePos0: node.term != null,\r\n            stepFinished: true,\r\n            leaveThisObjectOnStack: false\r\n        });\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: true };\r\n\r\n    }\r\n\r\n    processSwitch(node: SwitchNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let ct = this.processNode(node.condition);\r\n        if (ct == null || ct.type == null) return;\r\n\r\n        let conditionType = ct.type;\r\n\r\n        let isString = conditionType == stringPrimitiveType || conditionType == charPrimitiveType;\r\n        let isInteger = conditionType == intPrimitiveType;\r\n        let isEnum = conditionType instanceof Enum;\r\n\r\n        if (!(isString || isInteger || isEnum)) {\r\n            this.pushError(\"Der Unterscheidungsterms einer switch-Anweisung muss den Datentyp String, char, int oder enum besitzen. Dieser hier ist vom Typ \" + conditionType.identifier, node.condition.position);\r\n        }\r\n\r\n        if (isEnum) {\r\n            this.pushStatements({\r\n                type: TokenType.castValue,\r\n                position: node.condition.position,\r\n                newType: intPrimitiveType\r\n            });\r\n        }\r\n\r\n        let switchStatement: JumpOnSwitchStatement = {\r\n            type: TokenType.keywordSwitch,\r\n            position: node.position,\r\n            defaultDestination: null,\r\n            switchType: isString ? \"string\" : \"number\",\r\n            destinationLabels: [],\r\n            destinationMap: {}\r\n        }\r\n\r\n        this.pushStatements(switchStatement);\r\n\r\n        // if value not included in case-statement and no default-statement present:\r\n        let endLabel = lm.insertJumpNode(TokenType.jumpAlways, node.position, this);\r\n\r\n        switchStatement.stepFinished = true;\r\n\r\n        lm.registerSwitchStatement(switchStatement);\r\n\r\n        this.openBreakScope();\r\n\r\n        let withReturnStatement = node.caseNodes.length > 0;\r\n\r\n        for (let caseNode of node.caseNodes) {\r\n\r\n            let isDefault = caseNode.caseTerm == null;\r\n\r\n            if (!isDefault) {\r\n\r\n                let constant: string | number = null;\r\n\r\n                if (isEnum && caseNode.caseTerm.type == TokenType.identifier) {\r\n                    let en: Enum = <Enum>conditionType;\r\n                    let info = en.identifierToInfoMap[caseNode.caseTerm.identifier];\r\n                    if (info == null) {\r\n                        this.pushError(\"Die Enum-Klasse \" + conditionType.identifier + \" hat kein Element mit dem Bezeichner \" + caseNode.caseTerm.identifier, caseNode.position, \"error\");\r\n                    } else {\r\n                        constant = info.ordinal;\r\n                    }\r\n                } else {\r\n                    let caseTerm = this.processNode(caseNode.caseTerm);\r\n\r\n                    let ls = this.lastStatement;\r\n\r\n                    if (ls.type == TokenType.pushConstant) {\r\n                        constant = ls.value;\r\n                    }\r\n\r\n                    if (ls.type == TokenType.pushEnumValue) {\r\n                        constant = ls.enumClass.getOrdinal(ls.valueIdentifier);\r\n                    }\r\n\r\n                    this.removeLastStatement();\r\n                }\r\n\r\n                if (constant == null) {\r\n                    this.pushError(\"Der Term bei case muss konstant sein.\", caseNode.caseTerm.position);\r\n                }\r\n\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n\r\n                switchStatement.destinationLabels.push({\r\n                    constant: constant,\r\n                    label: label\r\n                });\r\n            } else {\r\n                // default case\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n                switchStatement.defaultDestination = label;\r\n            }\r\n\r\n        }\r\n\r\n        if (switchStatement.defaultDestination == null) {\r\n            withReturnStatement = false;\r\n        }\r\n\r\n        lm.markJumpDestination(1, endLabel);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n    }\r\n\r\n    processIf(node: IfNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        this.checkIfAssignmentInstedOfEqual(node.condition, conditionType?.type);\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'if' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let beginElse = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        let withReturnStatementIf = this.generateStatements(node.statementsIfTrue).withReturnStatement;\r\n\r\n        let endOfIf: number;\r\n        if (node.statementsIfFalse != null) {\r\n            endOfIf = lm.insertJumpNode(TokenType.jumpAlways, null, this);\r\n        }\r\n\r\n        lm.markJumpDestination(1, beginElse);\r\n\r\n        let withReturnStatementElse: boolean;\r\n        if (node.statementsIfFalse == null || node.statementsIfFalse.length == 0) {\r\n            withReturnStatementElse = false;\r\n        } else {\r\n            withReturnStatementElse = this.generateStatements(node.statementsIfFalse).withReturnStatement;\r\n        }\r\n\r\n        if (endOfIf != null) {\r\n            lm.markJumpDestination(1, endOfIf);\r\n        }\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatementIf && withReturnStatementElse };\r\n\r\n    }\r\n\r\n\r\n    processFor(node: ForNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        this.generateStatements(node.statementsBefore);\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert der Bedingung muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n        this.generateStatements(node.statementsAfter);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processForLoopOverCollection(node: ForNodeOverCollecion): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        // reserve position on stack for collection\r\n        let stackPosForCollection = this.nextFreeRelativeStackPos++;\r\n\r\n        // assign value of collection term to collection\r\n        let ct = this.processNode(node.collection);\r\n        if (ct == null) return;\r\n        let collectionType = ct.type;\r\n\r\n        this.pushStatements({\r\n            type: TokenType.popAndStoreIntoVariable,\r\n            position: node.collection.position,\r\n            stackposOfVariable: stackPosForCollection,\r\n            stepFinished: false\r\n        })\r\n\r\n        let collectionElementType: Type;\r\n\r\n        let kind: \"array\" | \"internalList\" | \"group\" | \"userDefinedIterable\" = null;\r\n\r\n        if (collectionType instanceof ArrayType) {\r\n            collectionElementType = collectionType.arrayOfType;\r\n            kind = \"array\";\r\n        } else if (collectionType instanceof Klass && collectionType.getImplementedInterface(\"Iterable\") != null) {\r\n            if (collectionType.module.isSystemModule) {\r\n                kind = \"internalList\";\r\n            } else {\r\n                kind = \"userDefinedIterable\";\r\n            }\r\n            let iterableInterface = collectionType.getImplementedInterface(\"Iterable\");\r\n            if (collectionType.typeVariables.length == 0) {\r\n                collectionElementType = objectType;\r\n            } else {\r\n                collectionElementType = collectionType.typeVariables[0].type;\r\n            }\r\n        } else if (collectionType instanceof Klass && collectionType.identifier == \"Group\") {\r\n            kind = \"group\";\r\n            collectionElementType = this.moduleStore.getType(\"Shape\").type;\r\n        }\r\n        else {\r\n            this.pushError(\"Mit der vereinfachten for-Schleife (for identifier : collectionOrArray) kann man nur über Arrays oder Klassen, die das Interface Iterable implementieren, iterieren.\", node.collection.position);\r\n            return null;\r\n        }\r\n\r\n        let variableType = node.variableType.resolvedType;\r\n        if (variableType == null) return null;\r\n\r\n        let noCastingNeeded = variableType == varType;\r\n        if (noCastingNeeded) {\r\n            variableType = collectionElementType;\r\n            node.variableType.resolvedType = collectionElementType\r\n        } else {\r\n            if (!collectionElementType.canCastTo(variableType)) {\r\n                this.pushError(\"Der ElementTyp \" + collectionElementType.identifier + \" der Collection kann nicht in den Typ \" + variableType.identifier + \" der Iterationsvariable \" + node.variableIdentifier + \" konvertiert werden.\", node.position);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        this.localVariableDeclaration({\r\n            type: TokenType.localVariableDeclaration,\r\n            identifier: node.variableIdentifier,\r\n            initialization: null,\r\n            isFinal: false,\r\n            position: node.variablePosition,\r\n            variableType: node.variableType\r\n        }, true)\r\n\r\n        let variableStackPos = this.nextFreeRelativeStackPos - 1;\r\n        let stackPosOfCounterVariableOrIterator = this.nextFreeRelativeStackPos++;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            this.pushStatements([{\r\n                type: TokenType.extendedForLoopInit,\r\n                position: node.position,\r\n                stepFinished: false,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                typeOfElement: variableType,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator\r\n            }], true);\r\n        } else {\r\n            // get Iterator from collection\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosOfCounterVariableOrIterator,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"iterator\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }], true);\r\n        }\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n        let labelAfterForLoop: number;\r\n        let lastStatementBeforeCasting: Statement;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            let jumpNode: ExtendedForLoopCheckCounterAndGetElement = {\r\n                type: TokenType.extendedForLoopCheckCounterAndGetElement,\r\n                kind: kind,\r\n                position: node.variablePosition,\r\n                stepFinished: true,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator,\r\n                destination: 0 // gets filled in later,\r\n            };\r\n            lastStatementBeforeCasting = jumpNode;\r\n            labelAfterForLoop = lm.registerJumpNode(jumpNode);\r\n\r\n            this.pushStatements(\r\n                jumpNode\r\n            );\r\n\r\n        } else {\r\n            // call collection.hasNext()\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.variablePosition,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"hasNext\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n            ]);\r\n            labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n            // call collection.next() and assign to loop variable\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: variableStackPos,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"next\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }]);\r\n        }\r\n\r\n        if (!noCastingNeeded) {\r\n            let oldStatementCount = this.currentProgram.statements.length;\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variableStackPos,\r\n                stepFinished: false\r\n            });\r\n            this.ensureAutomaticCasting(collectionElementType, variableType);\r\n            if (this.currentProgram.statements.length < oldStatementCount + 2) {\r\n                // casting needed no statement, so delete pushLocalVariabletoStack-Statement\r\n                this.currentProgram.statements.pop();\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.popAndStoreIntoVariable,\r\n                    stackposOfVariable: variableStackPos,\r\n                    position: node.position,\r\n                    stepFinished: true\r\n                });\r\n                lastStatementBeforeCasting.stepFinished = false;\r\n            }\r\n        }\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processWhile(node: WhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let conditionBeginLabel = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let position = node.position;\r\n\r\n        if (node.condition != null) {\r\n            position = node.condition.position;\r\n        }\r\n\r\n        let afterWhileStatementLabel = lm.insertJumpNode(TokenType.jumpIfFalse, position, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let pc = this.currentProgram.statements.length;\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        if (this.currentProgram.statements.length == pc) {\r\n            this.insertNoOp(node.scopeTo, false);\r\n        }\r\n\r\n        this.closeContinueScope(conditionBeginLabel, lm);\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, conditionBeginLabel);\r\n\r\n        lm.markJumpDestination(1, afterWhileStatementLabel);\r\n\r\n        this.closeBreakScope(afterWhileStatementLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    insertNoOp(position: TextPosition, stepFinished: boolean) {\r\n        this.pushStatements({\r\n            type: TokenType.noOp,\r\n            position: position,\r\n            stepFinished: stepFinished\r\n        })\r\n    }\r\n\r\n    processDo(node: DoWhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let statementsBeginLabel = lm.markJumpDestination(1);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let pc = this.currentProgram.statements.length;\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        if (this.currentProgram.statements.length == pc) {\r\n            this.insertNoOp(node.scopeTo, false);\r\n        }\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        lm.insertJumpNode(TokenType.jumpIfTrue, statements.endPosition, this, statementsBeginLabel);\r\n\r\n        let endLabel = lm.markJumpDestination(1);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    newObject(node: NewObjectNode): StackType {\r\n\r\n        if (node.classType == null || node.classType.resolvedType == null) return null;\r\n\r\n        let resolvedType: Klass = <Klass>node.classType.resolvedType;\r\n        if (!(resolvedType instanceof Klass)) {\r\n            this.pushError(node.classType.identifier + \" ist keine Klasse, daher kann davon mit 'new' kein Objekt erzeugt werden.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (resolvedType.isAbstract) {\r\n            this.pushError(`${node.classType.identifier} ist eine abstrakte Klasse, daher kann von ihr mit 'new' kein Objekt instanziert werden. Falls ${node.classType.identifier} nicht-abstrakte Kindklassen besitzt, könntest Du von DENEN mit new Objekte instanzieren...`, node.position);\r\n            return null;\r\n        }\r\n\r\n        //this.pushTypePosition(node.rightBracketPosition, classType);\r\n\r\n        if (resolvedType.module != this.module && resolvedType.visibility != Visibility.public) {\r\n            this.pushError(\"Die Klasse \" + resolvedType.identifier + \" ist hier nicht sichtbar.\", node.position);\r\n        }\r\n\r\n        let newStatement: NewObjectStatement = {\r\n            type: TokenType.newObject,\r\n            position: node.position,\r\n            class: resolvedType,\r\n            subsequentConstructorCall: false,\r\n            stepFinished: true\r\n        };\r\n\r\n        this.pushStatements(newStatement);\r\n        this.pushTypePosition(node.rightBracketPosition, resolvedType); // to enable code completion when typing a point after the closing bracket\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n        let allStatements = this.currentProgram.statements;\r\n\r\n        if (node.constructorOperands?.length > 0) {\r\n            // for (let p of node.constructorOperands) {\r\n            for (let j = 0; j < node.constructorOperands.length; j++) {\r\n                let p = node.constructorOperands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n        let upToVisibility = getVisibilityUpTo(resolvedType, this.currentSymbolTable.classContext);\r\n\r\n        // let methods = resolvedType.getMethodsThatFitWithCasting(resolvedType.identifier,\r\n        //     parameterTypes, true, upToVisibility);\r\n\r\n        let methods = resolvedType.getConstructor(parameterTypes, upToVisibility);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, resolvedType.getMethods(Visibility.public, resolvedType.identifier), node.rightBracketPosition);\r\n\r\n        // if there's no parameterless constructor then return without error:\r\n        if (parameterTypes.length > 0 || resolvedType.hasConstructor()) {\r\n\r\n            if (methods.error != null) {\r\n                this.pushError(methods.error, node.position);\r\n                return { type: resolvedType, isAssignable: false }; // try to continue...\r\n            }\r\n\r\n            let method = methods.methodList[0];\r\n            this.pushUsagePosition(node.position, method);\r\n\r\n            let staticClassContext = null;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext != null && classContext instanceof Klass) {\r\n                staticClassContext = classContext.staticClass;\r\n            }\r\n\r\n            if (method.visibility == Visibility.private && resolvedType != classContext && resolvedType != staticClassContext) {\r\n                let ok = (resolvedType == classContext || resolvedType != staticClassContext || (classContext instanceof StaticClass && resolvedType == classContext.Klass));\r\n                if (!ok) {\r\n                    this.pushError(\"Die Konstruktormethode ist private und daher hier nicht sichtbar.\", node.position);\r\n                }\r\n            }\r\n\r\n            let destType: Type = null;\r\n            for (let i = 0; i < parameterTypes.length; i++) {\r\n                if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                    destType = method.getParameterType(i);\r\n                    if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                        destType = (<ArrayType>destType).arrayOfType;\r\n                    }\r\n                }\r\n\r\n                let srcType = parameterTypes[i];\r\n                // for (let st of parameterStatements[i]) {\r\n                //     this.currentProgram.statements.push(st);\r\n                // }\r\n                let programPosition = allStatements.length;\r\n                if (!this.ensureAutomaticCasting(srcType, destType, node.constructorOperands[i].position, node.constructorOperands[i])) {\r\n                    this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.constructorOperands[i].position);\r\n                }\r\n\r\n                if (allStatements.length > programPosition) {\r\n                    let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                    allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                    this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n                }\r\n\r\n            }\r\n\r\n            let stackframeDelta = 0;\r\n            if (method.hasEllipsis()) {\r\n                let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n                stackframeDelta = - (ellipsisParameterCount - 1);\r\n                this.pushStatements({\r\n                    type: TokenType.makeEllipsisArray,\r\n                    position: node.constructorOperands[method.getParameterCount() - 1].position,\r\n                    parameterCount: ellipsisParameterCount,\r\n                    stepFinished: false,\r\n                    arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n                })\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: false,\r\n                stepFinished: resolvedType.getPostConstructorCallbacks() == null,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            }, true);\r\n\r\n            newStatement.subsequentConstructorCall = true;\r\n            newStatement.stepFinished = false;\r\n\r\n        }\r\n\r\n        if (resolvedType.getPostConstructorCallbacks() != null) {\r\n            this.pushStatements({\r\n                type: TokenType.processPostConstructorCallbacks,\r\n                position: node.position,\r\n                stepFinished: true\r\n            }, true);\r\n        }\r\n\r\n        return { type: resolvedType, isAssignable: false };\r\n\r\n    }\r\n\r\n    pushAttribute(node: SelectArributeNode): StackType {\r\n\r\n        if (node.object == null || node.identifier == null) return null;\r\n\r\n        let ot = this.processNode(node.object);\r\n        if (ot == null) {\r\n            this.pushError('Links vom Punkt steht kein Objekt.', node.position);\r\n            return null;\r\n        }\r\n\r\n        if (!(ot.type instanceof Klass || ot.type instanceof StaticClass || ot.type instanceof ArrayType)) {\r\n            if (ot.type == null) {\r\n                this.pushError('Der Ausdruck links vom Punkt hat kein Attribut ' + node.identifier + \".\", node.position);\r\n            } else {\r\n                this.pushError('Links vom Punkt steht ein Ausdruck vom Datentyp ' + ot.type.identifier + \". Dieser hat kein Attribut \" + node.identifier + \".\", node.position);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | ArrayType = ot.type;\r\n\r\n        if (objectType instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            let attributeWithError = objectType.getAttribute(node.identifier, visibilityUpTo);\r\n\r\n            let staticAttributeWithError: { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass }\r\n                = null;\r\n            if (attributeWithError.attribute == null) {\r\n                staticAttributeWithError = objectType.staticClass.getAttribute(node.identifier, visibilityUpTo);\r\n            }\r\n\r\n            if (attributeWithError.attribute == null && staticAttributeWithError.attribute == null) {\r\n                if (attributeWithError.foundButInvisible || !staticAttributeWithError.foundButInvisible) {\r\n                    this.pushError(attributeWithError.error, node.position);\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                }\r\n                return {\r\n                    type: objectType,\r\n                    isAssignable: false\r\n                }\r\n            } else {\r\n                let attribute: Attribute;\r\n                if (attributeWithError.attribute != null) {\r\n                    this.pushStatements({\r\n                        type: TokenType.pushAttribute,\r\n                        position: node.position,\r\n                        attributeIndex: attributeWithError.attribute.index,\r\n                        attributeIdentifier: attributeWithError.attribute.identifier,\r\n                        useThisObject: false\r\n                    });\r\n                    attribute = attributeWithError.attribute;\r\n                } else {\r\n                    this.pushStatements([{\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: node.position,\r\n                        popCount: 1\r\n                    }, {\r\n                        type: TokenType.pushStaticAttribute,\r\n                        position: node.position,\r\n                        // klass: (<Klass>objectType).staticClass,\r\n                        klass: staticAttributeWithError.staticClass,\r\n                        attributeIndex: staticAttributeWithError.attribute.index,\r\n                        attributeIdentifier: staticAttributeWithError.attribute.identifier\r\n                    }]);\r\n                    attribute = staticAttributeWithError.attribute;\r\n                }\r\n\r\n                this.pushUsagePosition(node.position, attribute);\r\n\r\n                return {\r\n                    type: attribute.type,\r\n                    isAssignable: !attribute.isFinal\r\n                }\r\n            }\r\n\r\n        } else if (objectType instanceof StaticClass) {\r\n            // Static class\r\n            if (objectType.Klass instanceof Enum) {\r\n                this.removeLastStatement(); // remove push static enum class to stack\r\n\r\n                let enumInfo = objectType.Klass.enumInfoList.find(ei => ei.identifier == node.identifier);\r\n\r\n                if (enumInfo == null) {\r\n                    this.pushError(\"Die enum-Klasse \" + objectType.identifier + \" hat keinen enum-Wert mit dem Bezeichner \" + node.identifier, node.position);\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: node.position,\r\n                    enumClass: objectType.Klass,\r\n                    valueIdentifier: node.identifier\r\n                });\r\n\r\n                return {\r\n                    type: objectType.Klass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n                let staticAttributeWithError = objectType.getAttribute(node.identifier, upToVisibility);\r\n                if (staticAttributeWithError.attribute != null) {\r\n                    // if (staticAttributeWithError.attribute.updateValue != undefined) {\r\n                    //     this.removeLastStatement();\r\n                    //     this.pushStatements({\r\n                    //         type: TokenType.pushStaticAttributeIntrinsic,\r\n                    //         position: node.position,\r\n                    //         attribute: staticAttributeWithError.attribute\r\n                    //     });\r\n                    // } else \r\n                    {\r\n                        this.removeLastStatement();\r\n                        this.pushStatements({\r\n                            type: TokenType.pushStaticAttribute,\r\n                            position: node.position,\r\n                            attributeIndex: staticAttributeWithError.attribute.index,\r\n                            attributeIdentifier: staticAttributeWithError.attribute.identifier,\r\n                            klass: staticAttributeWithError.staticClass\r\n                        });\r\n                        this.pushUsagePosition(node.position, staticAttributeWithError.attribute);\r\n\r\n                    }\r\n                    return {\r\n                        type: staticAttributeWithError.attribute.type,\r\n                        isAssignable: !staticAttributeWithError.attribute.isFinal\r\n                    }\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                    return {\r\n                        type: objectType,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            if (node.identifier != \"length\") {\r\n                this.pushError('Der Wert vom Datentyp ' + ot.type.identifier + \" hat kein Attribut \" + node.identifier, node.position);\r\n                return null;\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.pushArrayLength,\r\n                position: node.position\r\n            });\r\n\r\n            let element: Attribute = new Attribute(\"length\", intPrimitiveType, null, true, Visibility.public, true, \"Länge des Arrays\");\r\n\r\n            this.module.addIdentifierPosition(node.position, element);\r\n\r\n            return {\r\n                type: intPrimitiveType,\r\n                isAssignable: false\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushThisOrSuper(node: ThisNode | SuperNode, isSuper: boolean): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (isSuper && classContext != null) {\r\n            classContext = classContext.baseClass;\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null) {\r\n            this.pushError(\"Das Objekt \" + (isSuper ? \"super\" : \"this\") + \" existiert nur innerhalb einer Methodendeklaration.\", node.position);\r\n            return null;\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: 0\r\n            })\r\n\r\n            this.pushTypePosition(node.position, classContext);\r\n            return { type: classContext, isAssignable: false, isSuper: isSuper };\r\n        }\r\n\r\n    }\r\n\r\n    superconstructorCall(node: SuperconstructorCallNode | ConstructorCallNode): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        let isSuperConstructorCall: boolean = node.type == TokenType.superConstructorCall;\r\n\r\n        if (isSuperConstructorCall) {\r\n            if (classContext?.baseClass == null || classContext.baseClass.identifier == \"Object\") {\r\n                this.pushError(\"Die Klasse ist nur Kindklasse der Klasse Object, daher ist der Aufruf des Superkonstruktors nicht möglich.\", node.position);\r\n            }\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null || !methodContext.isConstructor) {\r\n            this.pushError(\"Ein Aufruf des Konstruktors oder des Superkonstructors ist nur innerhalb des Konstruktors einer Klasse möglich.\", node.position);\r\n            return null;\r\n        }\r\n\r\n\r\n        let superclassType: Klass | StaticClass;\r\n\r\n        if (isSuperConstructorCall) {\r\n            superclassType = <Klass>classContext.baseClass;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine super-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n            if (superclassType == null) superclassType = <Klass>this.moduleStore.getType(\"Object\").type;\r\n        } else {\r\n            superclassType = <Klass>classContext;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine this-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n        }\r\n\r\n        // Push this-object to stack:\r\n        this.pushStatements({\r\n            type: TokenType.pushLocalVariableToStack,\r\n            position: node.position,\r\n            stackposOfVariable: 0\r\n        });\r\n\r\n        let parameterTypes: Type[] = [];\r\n\r\n        if (node.operands != null) {\r\n            let errorInOperands: boolean = false;\r\n            for (let p of node.operands) {\r\n                let pt = this.processNode(p);\r\n                if (pt != null) {\r\n                    parameterTypes.push(pt.type);\r\n                } else {\r\n                    errorInOperands = true;\r\n                }\r\n            }\r\n            if (errorInOperands) {\r\n                return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n            }\r\n        }\r\n\r\n        let methods = superclassType.getConstructor(parameterTypes, Visibility.protected);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, superclassType.getMethods(Visibility.protected, superclassType.identifier),\r\n            node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            isSuperCall: isSuperConstructorCall,\r\n            position: node.position,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n        // Pabst, 21.10.2020:\r\n        // super method is constructor => returns nothing even if method.getReturnType() is class object\r\n        // return { type: method.getReturnType(), isAssignable: false };\r\n        return { type: null, isAssignable: false };\r\n\r\n    }\r\n\r\n    incrementDecrementBeforeOrAfter(node: IncrementDecrementNode): StackType {\r\n        let type = this.processNode(node.operand);\r\n\r\n        if (type == null) return;\r\n\r\n        if (!type.isAssignable) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Variablen angewendet werden, nicht auf konstante Werte oder Rückgabewerte von Methoden.\", node.position);\r\n            return type;\r\n        }\r\n\r\n        if (!type.type.canCastTo(floatPrimitiveType)) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Zahlen angewendet werden, nicht auf Werte des Datentyps \" + type.type.identifier, node.position);\r\n            return type;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: node.type,\r\n            position: node.position,\r\n            incrementDecrementBy: node.operator == TokenType.doubleMinus ? - 1 : 1\r\n\r\n        });\r\n\r\n        return type;\r\n\r\n    }\r\n\r\n    selectArrayElement(node: SelectArrayElementNode): StackType {\r\n\r\n        let arrayType = this.processNode(node.object); // push array-object \r\n        let indexType = this.processNode(node.index); // push index\r\n\r\n        if (arrayType == null || indexType == null) return;\r\n\r\n        if (!(arrayType.type instanceof ArrayType)) {\r\n            this.pushError(\"Der Typ der Variablen ist kein Array, daher ist [] nicht zulässig. \", node.object.position);\r\n            return null;\r\n        }\r\n\r\n        this.module.addIdentifierPosition({\r\n            line: node.position.line,\r\n            column: node.position.column + node.position.length,\r\n            length: 0  // Module.getTypeAtPosition needs length == 0 here to know that this type-position is not in static context for code completion\r\n        }, arrayType.type.arrayOfType);\r\n\r\n        if (!this.ensureAutomaticCasting(indexType.type, intPrimitiveType)) {\r\n            this.pushError(\"Als Index eines Arrays wird ein ganzzahliger Wert erwartet. Gefunden wurde ein Wert vom Typ \" + indexType.type.identifier + \".\", node.index.position);\r\n            return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: TokenType.selectArrayElement,\r\n            position: node.position\r\n        })\r\n\r\n        return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n\r\n    }\r\n\r\n    pushTypePosition(position: TextPosition, type: Type) {\r\n        if (position == null) return;\r\n        if (position.length > 0) {\r\n            position = {\r\n                line: position.line,\r\n                column: position.column + position.length,\r\n                length: 0\r\n            }\r\n        }\r\n        this.module.addIdentifierPosition(position, type);\r\n    }\r\n\r\n\r\n\r\n    pushUsagePosition(position: TextPosition, element: Klass | Interface | Method | Attribute | Variable) {\r\n\r\n        this.module.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(this.module);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(this.module, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): StackType {\r\n\r\n        if (node.identifier == null) return null;\r\n\r\n        let variable = this.findLocalVariable(node.identifier);\r\n        if (variable != null) {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variable.stackPos\r\n            })\r\n\r\n            this.pushUsagePosition(node.position, variable);\r\n            node.variable = variable;\r\n\r\n            return { type: variable.type, isAssignable: !variable.isFinal };\r\n        }\r\n\r\n        if (this.heap != null) {\r\n            let variable = this.heap[node.identifier];\r\n            if (variable != null) {\r\n                this.pushStatements({\r\n                    type: TokenType.pushFromHeapToStack,\r\n                    position: node.position,\r\n                    identifier: node.identifier\r\n                })\r\n\r\n                this.pushUsagePosition(node.position, variable);\r\n                node.variable = variable;\r\n\r\n\r\n                return { type: variable.type, isAssignable: !variable.isFinal };\r\n            }\r\n\r\n        }\r\n\r\n        let attribute = this.findAttribute(node.identifier, node.position);\r\n        if (attribute != null) {\r\n\r\n            if (attribute.isStatic) {\r\n                let cc = this.currentSymbolTable.classContext;\r\n                let scc = (cc instanceof StaticClass) ? cc : cc.staticClass;\r\n\r\n                while (scc != null && scc.attributes.indexOf(attribute) == -1) {\r\n                    scc = scc.baseClass;\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticAttribute,\r\n                    position: node.position,\r\n                    klass: scc,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier\r\n                });\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushAttribute,\r\n                    position: node.position,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier,\r\n                    useThisObject: true\r\n                });\r\n                node.attribute = attribute;\r\n            }\r\n\r\n\r\n            this.pushUsagePosition(node.position, attribute);\r\n\r\n            return { type: attribute.type, isAssignable: !attribute.isFinal };\r\n        }\r\n\r\n        let klassModule = this.moduleStore.getType(node.identifier);\r\n        if (klassModule != null) {\r\n            let klass = klassModule.type;\r\n            if (!(klass instanceof Klass || klass instanceof Interface)) {\r\n                this.pushError(\"Der Typ \" + klass.identifier + \" hat keine statischen Attribute/Methoden.\", node.position);\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticClassObject,\r\n                    position: node.position,\r\n                    klass: klass\r\n                });\r\n\r\n                this.pushUsagePosition(node.position, klass);\r\n\r\n                return {\r\n                    type: klass instanceof Klass ? klass.staticClass : klass,\r\n                    isAssignable: false\r\n                }\r\n            }\r\n\r\n            return {\r\n                type: klass,\r\n                isAssignable: false\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Der Bezeichner \" + node.identifier + \" ist hier nicht bekannt.\", node.position);\r\n\r\n    }\r\n\r\n    findLocalVariable(identifier: string): Variable {\r\n        let st = this.currentSymbolTable;\r\n\r\n        while (st != null) {\r\n\r\n            let variable = st.variableMap.get(identifier);\r\n\r\n            if (variable != null && variable.stackPos != null) {\r\n                return variable;\r\n            }\r\n\r\n            st = st.parent;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAttribute(identifier: string, position: TextPosition): Attribute {\r\n        let classContext = this.currentSymbolTable.classContext;\r\n        if (classContext == null) {\r\n            return null;\r\n        }\r\n\r\n        let attribute = classContext.getAttribute(identifier, Visibility.private);\r\n        if (attribute.attribute != null) return attribute.attribute;\r\n\r\n        if (classContext instanceof Klass) {\r\n            let staticAttribute = classContext.staticClass.getAttribute(identifier, Visibility.private);\r\n            if (staticAttribute.attribute != null) return staticAttribute.attribute;\r\n        }\r\n\r\n        // this.pushError(attribute.error, position);\r\n\r\n        return null;\r\n    }\r\n\r\n    callMethod(node: MethodcallNode): StackType {\r\n\r\n        let objectNode: StackType = null;\r\n\r\n        if (node.object == null) {\r\n\r\n            // call method of this-class?\r\n\r\n            let thisClass = this.currentSymbolTable.classContext;\r\n            if (thisClass != null) {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: 0\r\n                });\r\n\r\n                objectNode = {\r\n                    type: thisClass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                this.pushError(\"Ein Methodenaufruf (hier: \" + node.identifier +\r\n                    \") ohne Punktschreibweise ist nur innerhalb anderer Methoden möglich.\", node.position);\r\n                return null;\r\n            }\r\n\r\n        } else {\r\n            objectNode = this.processNode(node.object);\r\n        }\r\n\r\n        if (objectNode == null) return null;\r\n\r\n        if (!(\r\n            (objectNode.type instanceof Klass) || (objectNode.type instanceof StaticClass) ||\r\n            (objectNode.type instanceof Interface && (node.object[\"variable\"] != null || node.object[\"attribute\"] != null || node.object[\"termInsideBrackets\"] != null)) || (objectNode.type instanceof Enum))) {\r\n\r\n            if (objectNode.type == null) {\r\n                this.pushError(\"Werte dieses Datentyps besitzen keine Methoden.\", node.position);\r\n            } else {\r\n                if (objectNode.type instanceof Interface) {\r\n                    this.pushError('Methodendefinitionen eines Interfaces können nicht statisch aufgerufen werden.', node.position);\r\n                } else {\r\n                    this.pushError('Werte des Datentyps ' + objectNode.type.identifier + \" besitzen keine Methoden.\", node.position);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | Interface = <any>objectNode.type;\r\n\r\n        let posBeforeParameterEvaluation = this.currentProgram.statements.length;\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n\r\n        let allStatements = this.currentProgram.statements;\r\n        if (node.operands != null) {\r\n            // for (let p of node.operands) {\r\n            for (let j = 0; j < node.operands.length; j++) {\r\n                let p = node.operands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let methods: { error: string, methodList: Method[] };\r\n        if (objectType instanceof Interface) {\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false);\r\n        } else {\r\n            let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false, upToVisibility);\r\n\r\n        }\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, objectType.getMethods(Visibility.private, node.identifier), node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        // You CAN call a static method on a object..., so:\r\n        if (method.isStatic && objectType instanceof Klass && objectType.identifier != \"PrintStream\") {\r\n            this.pushError(\"Es ist kein guter Programmierstil, statische Methoden einer Klasse mithilfe eines Objekts aufzurufen. Besser wäre hier \" + objectType.identifier + \".\" + method.identifier + \"(...).\", node.position, \"info\");\r\n            this.insertStatements(posBeforeParameterEvaluation, [{\r\n                type: TokenType.decreaseStackpointer,\r\n                position: node.position,\r\n                popCount: 1\r\n            },\r\n            {\r\n                type: TokenType.pushStaticClassObject,\r\n                position: node.position,\r\n                klass: objectType\r\n            }\r\n            ]);\r\n        }\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            // Marker 1\r\n            let srcType = parameterTypes[i];\r\n            // for (let st of parameterStatements[i]) {\r\n            //     this.currentProgram.statements.push(st);\r\n            // }\r\n            let programPosition = allStatements.length;\r\n\r\n            if (!this.ensureAutomaticCasting(srcType, destType, node.operands[i].position, node.operands[i])) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.operands[i].position);\r\n            }\r\n\r\n            if (allStatements.length > programPosition) {\r\n                let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n            }\r\n\r\n\r\n            // if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n            //     if (srcType.getCastInformation(destType).needsStatement) {\r\n            //         this.pushStatements({\r\n            //             type: TokenType.castValue,\r\n            //             position: null,\r\n            //             newType: destType,\r\n            //             stackPosRelative: -parameterTypes.length + 1 + i\r\n            //         });\r\n            //     }\r\n            // }\r\n\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        if (method.visibility != Visibility.public) {\r\n\r\n            let visible = true;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext == null) {\r\n                visible = false;\r\n            } else {\r\n                if (classContext != objectType &&\r\n                    !(classContext instanceof Klass && classContext.implements.indexOf(<Interface>objectType) > 0)) {\r\n                    if (method.visibility == Visibility.private) {\r\n                        visible = false;\r\n                    } else {\r\n                        visible = classContext.hasAncestorOrIs(<Klass | StaticClass>objectType);\r\n                    }\r\n                }\r\n            }\r\n            if (!visible) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" ist an dieser Stelle des Programms nicht sichtbar.\", node.position);\r\n            }\r\n        }\r\n\r\n        let isSystemMethod: boolean = false;\r\n        if (method.isStatic && objectNode.type != null &&\r\n            (objectNode.type instanceof StaticClass)) {\r\n            let classIdentifier = objectNode.type.Klass.identifier;\r\n\r\n            switch (classIdentifier) {\r\n                case \"Input\":\r\n                    this.pushStatements({\r\n                        type: TokenType.callInputMethod,\r\n                        method: method,\r\n                        position: node.position,\r\n                        stepFinished: true,\r\n                        stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n                    });\r\n                    isSystemMethod = true;\r\n                    break;\r\n                case \"SystemTools\":\r\n                case \"Robot\":\r\n                    if ([\"pause\", \"warten\"].indexOf(method.identifier) >= 0) {\r\n                        this.pushStatements([{\r\n                            type: TokenType.setPauseDuration,\r\n                            position: node.position,\r\n                            stepFinished: true\r\n                        }, {\r\n                            type: TokenType.pause,\r\n                            position: node.position,\r\n                            stepFinished: true\r\n                        }\r\n                        ]);\r\n                        isSystemMethod = true;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        if (!isSystemMethod) {\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: objectNode.isSuper == null ? false : objectNode.isSuper,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.pushTypePosition(node.rightBracketPosition, method.getReturnType());\r\n\r\n        return { type: method.getReturnType(), isAssignable: false };\r\n\r\n    }\r\n\r\n    pushConstant(node: ConstantNode): StackType {\r\n\r\n        let type: Type;\r\n\r\n        switch (node.constantType) {\r\n            case TokenType.integerConstant:\r\n                type = intPrimitiveType;\r\n                break;\r\n            case TokenType.booleanConstant:\r\n                type = booleanPrimitiveType;\r\n                break;\r\n            case TokenType.floatingPointConstant:\r\n                type = floatPrimitiveType;\r\n                break;\r\n            case TokenType.stringConstant:\r\n                type = stringPrimitiveType;\r\n                this.pushTypePosition(node.position, type);\r\n                break;\r\n            case TokenType.charConstant:\r\n                type = charPrimitiveType;\r\n                break;\r\n            case TokenType.keywordNull:\r\n                type = nullType\r\n                break;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.pushConstant,\r\n            dataType: type,\r\n            position: node.position,\r\n            value: node.constant\r\n        })\r\n\r\n        return { type: type, isAssignable: false };\r\n\r\n    }\r\n\r\n    processBinaryOp(node: BinaryOpNode): StackType {\r\n\r\n        let isAssignment = CodeGenerator.assignmentOperators.indexOf(node.operator) >= 0;\r\n\r\n        if (node.operator == TokenType.ternaryOperator) {\r\n            return this.processTernaryOperator(node);\r\n        }\r\n\r\n        let leftType = this.processNode(node.firstOperand, isAssignment);\r\n\r\n        let programPosAfterLeftOpoerand = this.currentProgram.statements.length;\r\n\r\n        let lazyEvaluationDest = null;\r\n        if (node.operator == TokenType.and) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfFalseAndLeaveOnStack, node.firstOperand.position, this);\r\n        } else if (node.operator == TokenType.or) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfTrueAndLeaveOnStack, node.firstOperand.position, this);\r\n        }\r\n\r\n        let rightType = this.processNode(node.secondOperand);\r\n\r\n        if (leftType == null || leftType.type == null || rightType == null || rightType.type == null) return null;\r\n\r\n        let convertedLeftType = leftType.type;\r\n\r\n        if (isAssignment) {\r\n            if (!this.ensureAutomaticCasting(rightType.type, leftType.type, node.position, node.firstOperand, true)) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + rightType.type.identifier + \" auf der rechten Seite kann der Variablen auf der linken Seite (Datentyp \" + leftType.type.identifier + \") nicht zugewiesen werden.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n            if (!leftType.isAssignable) {\r\n                this.pushError(\"Dem Term/der Variablen auf der linken Seite des Zuweisungsoperators (=) kann kein Wert zugewiesen werden.\", node.position);\r\n            }\r\n\r\n            let statement: AssignmentStatement = {\r\n                //@ts-ignore\r\n                type: node.operator,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: true\r\n            };\r\n\r\n            this.pushStatements(statement);\r\n\r\n\r\n            return leftType;\r\n\r\n        } else {\r\n\r\n            if (node.firstOperand.type == TokenType.identifier && node.firstOperand.variable != null) {\r\n                let v = node.firstOperand.variable;\r\n                if (v.initialized != null && !v.initialized) {\r\n                    v.usedBeforeInitialization = true;\r\n                    this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                }\r\n            }\r\n\r\n            let resultType = leftType.type.getResultType(node.operator, rightType.type);\r\n\r\n            let unboxableLeft = leftType.type[\"unboxableAs\"];\r\n            let unboxableRight = rightType.type[\"unboxableAs\"];\r\n\r\n\r\n            if (resultType == null && node.operator == TokenType.plus) {\r\n                if (rightType.type == stringPrimitiveType) {\r\n                    if (this.ensureAutomaticToString(leftType.type, programPosAfterLeftOpoerand, node.firstOperand.position)) {\r\n                        resultType = stringPrimitiveType;\r\n                        convertedLeftType = stringPrimitiveType;\r\n                    }\r\n                } else if (leftType.type == stringPrimitiveType) {\r\n                    if (this.ensureAutomaticToString(rightType.type, undefined, node.firstOperand.position)) {\r\n                        resultType = stringPrimitiveType;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (resultType == null && (unboxableLeft != null || unboxableRight != null)) {\r\n                let leftTypes: Type[] = unboxableLeft == null ? [leftType.type] : unboxableLeft;\r\n                let rightTypes: Type[] = unboxableRight == null ? [rightType.type] : unboxableRight;\r\n\r\n                for (let lt of leftTypes) {\r\n                    for (let rt of rightTypes) {\r\n                        resultType = lt.getResultType(node.operator, rt);\r\n                        if (resultType != null) {\r\n                            this.insertStatements(programPosAfterLeftOpoerand, {\r\n                                type: TokenType.castValue,\r\n                                position: node.firstOperand.position,\r\n                                newType: lt\r\n                            });\r\n                            this.pushStatements({\r\n                                type: TokenType.castValue,\r\n                                position: node.secondOperand.position,\r\n                                newType: rt\r\n                            });\r\n                            convertedLeftType = lt;\r\n                            // rightType.type = rt;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (resultType != null) break;\r\n                }\r\n            }\r\n\r\n\r\n            if (node.operator in [TokenType.and, TokenType.or]) {\r\n                this.checkIfAssignmentInstedOfEqual(node.firstOperand);\r\n                this.checkIfAssignmentInstedOfEqual(node.secondOperand);\r\n            }\r\n\r\n            if (resultType == null) {\r\n                let bitOperators = [TokenType.ampersand, TokenType.OR];\r\n                let booleanOperators = [\"&& (boolescher UND-Operator)\", \"|| (boolescher ODER-Operator)\"];\r\n                let betterOperators = [\"& &\", \"||\"];\r\n                let opIndex = bitOperators.indexOf(node.operator);\r\n                if (opIndex >= 0 && leftType.type == booleanPrimitiveType && rightType.type == booleanPrimitiveType) {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert. Du meintest wahrscheinlich den Operator \" + booleanOperators[opIndex] + \".\", node.position, \"error\",\r\n                        {\r\n                            title: \"Operator \" + betterOperators[opIndex] + \" verwenden statt \" + TokenTypeReadable[node.operator],\r\n                            editsProvider: (uri) => {\r\n                                return [\r\n                                    {\r\n                                        resource: uri,\r\n                                        edit: {\r\n                                            range: { startLineNumber: node.position.line, startColumn: node.position.column, endLineNumber: node.position.line, endColumn: node.position.column },\r\n                                            text: TokenTypeReadable[node.operator]\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n\r\n                        });\r\n                } else {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert.\", node.position);\r\n                }\r\n                return leftType;\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.binaryOp,\r\n                leftType: convertedLeftType,\r\n                operator: node.operator,\r\n                position: node.position\r\n            });\r\n\r\n            if (lazyEvaluationDest != null) {\r\n                this.currentProgram.labelManager.markJumpDestination(1, lazyEvaluationDest);\r\n            }\r\n\r\n            return { type: resultType, isAssignable: false };\r\n        }\r\n\r\n\r\n    }\r\n\r\n    processTernaryOperator(node: BinaryOpNode): StackType {\r\n\r\n        let leftType = this.processNode(node.firstOperand);\r\n\r\n        if (leftType == null) return;\r\n\r\n        if (this.ensureAutomaticCasting(leftType.type, booleanPrimitiveType, null, node.firstOperand, true)) {\r\n\r\n            let secondOperand = node.secondOperand;\r\n            if (secondOperand != null) {\r\n                if (secondOperand.type != TokenType.binaryOp || secondOperand.operator != TokenType.colon) {\r\n                    this.pushError(\"Auf den Fragezeichenoperator müssen - mit Doppelpunkt getrennt - zwei Alternativterme folgen.\", node.position);\r\n                } else {\r\n                    let lm = this.currentProgram.labelManager;\r\n                    let variantFalseLabel = lm.insertJumpNode(TokenType.jumpIfFalse, node.position, this);\r\n                    let firstType = this.processNode(secondOperand.firstOperand);\r\n\r\n                    let endLabel = lm.insertJumpNode(TokenType.jumpAlways, secondOperand.firstOperand.position, this);\r\n                    lm.markJumpDestination(1, variantFalseLabel);\r\n                    let secondType = this.processNode(secondOperand.secondOperand);\r\n                    lm.markJumpDestination(1, endLabel);\r\n\r\n                    let type = firstType.type;\r\n                    if (secondType != null && type != secondType.type && type.canCastTo(secondType.type)) {\r\n                        type = secondType.type;\r\n                    }\r\n\r\n                    return {\r\n                        type: type,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processUnaryOp(node: UnaryOpNode): StackType {\r\n        let leftType = this.processNode(node.operand);\r\n\r\n        if (leftType == null || leftType.type == null) return;\r\n\r\n        if (node.operator == TokenType.minus) {\r\n            if (!leftType.type.canCastTo(floatPrimitiveType)) {\r\n                this.pushError(\"Der Operator - ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        if (node.operator == TokenType.not) {\r\n            if (!(leftType.type == booleanPrimitiveType)) {\r\n                this.checkIfAssignmentInstedOfEqual(node.operand);\r\n                this.pushError(\"Der Operator ! ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.unaryOp,\r\n            operator: node.operator,\r\n            position: node.position\r\n        });\r\n\r\n        return leftType;\r\n    }\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Visibility, Klass } from \"../types/Class.js\";\r\nimport { ArrayInitializationNode, ASTNode, AttributeDeclarationNode, MethodDeclarationNode, NewArrayNode, ParameterNode, TermNode, TypeNode, EnumValueNode, SwitchNode, SwitchCaseNode, ConstantNode, BracketsNode, ScopeNode, TypeParameterNode, LocalVariableDeclarationNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, charPrimitiveType, TokenTypeToDataTypeMap, voidPrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { PrimitiveType, Type } from \"../types/Types.js\";\r\n\r\ntype ASTNodes = ASTNode[];\r\n\r\nexport class Parser {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, \r\n        TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.moduloAssignment, \r\n        TokenType.ANDAssigment, TokenType.XORAssigment, TokenType.ORAssigment, \r\n        TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    static operatorPrecedence: TokenType[][] = [Parser.assignmentOperators,\r\n    [TokenType.ternaryOperator], [TokenType.colon],\r\n\r\n    [TokenType.or], [TokenType.and], [TokenType.OR], [TokenType.XOR], [TokenType.ampersand],\r\n    [TokenType.equal, TokenType.notEqual],\r\n    [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual],\r\n    [TokenType.shiftLeft, TokenType.shiftRight, TokenType.shiftRightUnsigned],\r\n\r\n    // [TokenType.or], [TokenType.and],\r\n    // [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual],\r\n    \r\n    [TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo]\r\n    ];\r\n\r\n    static TokenTypeToVisibilityMap = {\r\n        [TokenType.keywordPublic]: Visibility.public,\r\n        [TokenType.keywordPrivate]: Visibility.private,\r\n        [TokenType.keywordProtected]: Visibility.protected\r\n    };\r\n\r\n    static forwardToInsideClass = [TokenType.keywordPublic, TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordVoid,\r\n    TokenType.identifier, TokenType.rightCurlyBracket, TokenType.keywordStatic, TokenType.keywordAbstract,\r\n    TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n    typeNodes: TypeNode[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n\r\n    constructor(private isInConsoleMode: boolean){\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.mainProgramAst = [];\r\n            this.module.classDefinitionsAST = [];\r\n            this.module.typeNodes = [];\r\n            this.module.errors[1] = this.errorList;\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n        this.typeNodes = [];\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        let astNodes = this.parseMain();\r\n        this.module.mainProgramAst = astNodes.mainProgramAST;\r\n        this.module.classDefinitionsAST = astNodes.classDefinitionAST;\r\n        this.module.mainProgramEnd = astNodes.mainProgramEnd;\r\n        this.module.typeNodes = this.typeNodes;\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if(token1.tt == TokenType.comment){\r\n                    this.lastComment = token1;\r\n                } \r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if(this.lastComment != null){\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if(token.tt == TokenType.comment){\r\n                this.lastComment = token;\r\n            } \r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    expect(tt: TokenType, skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt) \r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel && this.errorList.length < 3) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n\r\n            this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[]): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            return this.tt == token;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    static ClassTokens: TokenType[] = [TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n    static VisibilityTokens: TokenType[] = [TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordPublic];\r\n    static BeforeClassDefinitionTokens: TokenType[] = Parser.ClassTokens.concat(Parser.VisibilityTokens).concat(TokenType.keywordAbstract).concat(Parser.ClassTokens);\r\n\r\n    parseMain(): { mainProgramAST: ASTNodes, mainProgramEnd: TextPosition, classDefinitionAST: ASTNodes } {\r\n\r\n        let mainProgram: ASTNodes = [];\r\n        let classDefinitions: ASTNodes = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            if (this.comesToken(Parser.BeforeClassDefinitionTokens)) {\r\n                let cd = this.parseClassDefinition();\r\n                if (cd != null) classDefinitions = classDefinitions.concat(cd);\r\n            } else {\r\n                let st = this.parseStatement();\r\n\r\n                if (st != null) {\r\n                    mainProgram = mainProgram.concat(st);\r\n                }\r\n                mainProgramEnd = this.getCurrentPosition();\r\n            }\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                this.pos++;\r\n                this.initializeLookahead();\r\n            }\r\n\r\n        }\r\n\r\n        return {\r\n            mainProgramAST: mainProgram,\r\n            classDefinitionAST: classDefinitions,\r\n            mainProgramEnd: mainProgramEnd\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkIfStatementHasNoEffekt(st: ASTNode) {\r\n        \r\n        if(this.isInConsoleMode) return;\r\n\r\n        if ((st.type == TokenType.binaryOp && Parser.assignmentOperators.indexOf(st.operator) < 0)) {\r\n            let s = \"dieses Terms\";\r\n            switch (st.operator) {\r\n                case TokenType.plus: s = \"dieser Summe\"; break;\r\n                case TokenType.minus: s = \"dieser Differenz\"; break;\r\n                case TokenType.multiplication: s = \"dieses Produkts\"; break;\r\n                case TokenType.division: s = \"dieses Quotienten\"; break;\r\n            }\r\n            s += \" (Operator \" + TokenTypeReadable[st.operator] + \")\"\r\n            this.pushError(`Der Wert ${s} wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?`,\r\n                \"info\", st.position);\r\n        } else if (\r\n            [TokenType.unaryOp, TokenType.pushConstant,\r\n            TokenType.identifier, TokenType.selectArrayElement].indexOf(st.type) >= 0) {\r\n            this.pushError(\"Der Wert dieses Terms wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?\",\r\n                \"info\", st.position);\r\n        }\r\n    }\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode[] {\r\n\r\n        let retStatements: ASTNode[] = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n            case TokenType.identifier:\r\n            case TokenType.keywordThis:\r\n            case TokenType.keywordSuper:\r\n            case TokenType.keywordFinal:\r\n            case TokenType.charConstant:\r\n            case TokenType.integerConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.keywordNew:\r\n                let ret = this.parseVariableDeclarationOrTerm();\r\n                if (expectSemicolon) this.expect(TokenType.semicolon, true, true);\r\n                retStatements = ret;\r\n                break;\r\n            case TokenType.leftCurlyBracket:\r\n                let statements: ASTNode[] = [];\r\n                let positionFrom = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && Parser.BeforeClassDefinitionTokens.indexOf(this.tt) < 0) {\r\n                    statements = statements.concat(this.parseStatement());\r\n                }\r\n                let positionTo = this.getCurrentPosition();\r\n                positionTo.column = positionTo.column + positionTo.length;\r\n                positionTo.length = 0;\r\n                this.expect(TokenType.rightCurlyBracket);\r\n\r\n                retStatements = [{\r\n                    type: TokenType.scopeNode,\r\n                    position: positionFrom,\r\n                    positionTo: positionTo,\r\n                    statements: statements\r\n                }];\r\n                break;\r\n\r\n            case TokenType.keywordWhile:\r\n                retStatements = this.parseWhile();\r\n                break;\r\n            case TokenType.keywordFor:\r\n                retStatements = this.parseFor();\r\n                break;\r\n            case TokenType.keywordDo:\r\n                retStatements = this.parseDo();\r\n                break;\r\n            case TokenType.keywordIf:\r\n                retStatements = this.parseIf();\r\n                break;\r\n            case TokenType.keywordReturn:\r\n                retStatements = this.parseReturn();\r\n                break;\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                retStatements = this.parsePrint();\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                retStatements = this.parseSwitch();\r\n                break;\r\n            case TokenType.keywordBreak:\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordBreak,\r\n                    position: position\r\n                }];\r\n                break;\r\n            case TokenType.keywordContinue:\r\n                let position1 = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordContinue,\r\n                    position: position1\r\n                }];\r\n                break;\r\n            case TokenType.semicolon:\r\n                break;\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n\r\n                let dontSkip = Parser.BeforeClassDefinitionTokens.indexOf(this.tt) >= 0;\r\n                if (!dontSkip) {\r\n                    this.nextToken();\r\n                }\r\n                break;\r\n        }\r\n\r\n        if(retStatements == null){\r\n            // skip additional semicolons if present...\r\n            while (this.tt == TokenType.semicolon && expectSemicolon) {\r\n                this.nextToken();\r\n            }\r\n        }\r\n\r\n        if(retStatements != null && retStatements.length > 0){\r\n            let retStmt = retStatements[retStatements.length - 1];\r\n            if(retStmt != null){\r\n                this.checkIfStatementHasNoEffekt(retStatements[retStatements.length - 1]);\r\n            } else {\r\n                retStatements = null;\r\n            }\r\n        }\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseReturn(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        let term: TermNode;\r\n\r\n        if (!(this.tt == TokenType.semicolon)) {\r\n            term = this.parseTerm();\r\n            this.expect(TokenType.semicolon, true, true);\r\n        }\r\n\r\n        return [{\r\n            type: TokenType.keywordReturn,\r\n            position: position,\r\n            term: term\r\n        }];\r\n\r\n    }\r\n\r\n    parseWhile(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume while\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition  = this.getCurrentPosition();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"while\", rightBracketPosition);\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese while-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordWhile,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseFor(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let semicolonPositions: TextPosition[] = [];\r\n\r\n        this.nextToken(); // consume for\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            if (this.ct[2].tt == TokenType.colon) {\r\n                return this.parseForLoopOverCollection(position, scopeFrom);\r\n            }\r\n\r\n            let statementsBefore = this.parseStatement(false);\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon);\r\n            let condition = this.parseTerm();\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon, true);\r\n            let statementsAfter = this.parseStatement(false);\r\n\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            this.module.pushMethodCallPosition(position, semicolonPositions, \"for\", rightBracketPosition);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            if (condition == null) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordFor,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statementsBefore: statementsBefore,\r\n                    statementsAfter: statementsAfter,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseForLoopOverCollection(position: TextPosition, scopeFrom: TextPosition): ASTNode[] {\r\n\r\n        let variableType = this.parseType();\r\n\r\n        let variableIdentifier = <string>this.cct.value;\r\n        let variableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        this.expect(TokenType.colon, true);\r\n\r\n        let collection = this.parseTerm();\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n        }\r\n\r\n        let statements = this.parseStatement();\r\n        let scopeTo = this.getCurrentPosition();\r\n        scopeTo.length = 0;\r\n\r\n        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n            scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n        }\r\n\r\n        if (collection == null || variableType == null || statements == null) return [];\r\n\r\n        return [\r\n            {\r\n                type: TokenType.forLoopOverCollection,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                variableIdentifier: variableIdentifier,\r\n                variableType: variableType,\r\n                variablePosition: variableIdentifierPosition,\r\n                collection: collection,\r\n                statements: statements\r\n            }\r\n        ];\r\n\r\n    }\r\n\r\n    parsePrint(): ASTNode[] {\r\n\r\n        let tt = this.tt;\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.leftBracket, false)) {\r\n            let mcp = this.parseMethodCallParameters();\r\n            let paramenters = mcp.nodes;\r\n            if (paramenters.length > 2) {\r\n                this.pushError(\"Die Methoden print und println haben maximal zwei Parameter.\", \"error\", position);\r\n            }\r\n\r\n            this.expect(TokenType.semicolon, true, true);\r\n\r\n            return [{\r\n                //@ts-ignore\r\n                type: tt,\r\n                position: position,\r\n                text: paramenters.length == 0 ? null : paramenters[0],\r\n                color: paramenters.length <= 1 ? null : paramenters[1],\r\n                commaPositions: mcp.commaPositions,\r\n                rightBracketPosition: mcp.rightBracketPosition\r\n            }];\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseSwitch(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            let switchTerm = this.parseTerm();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"switch\", this.getCurrentPosition());\r\n\r\n            this.expect(TokenType.rightBracket);\r\n            let scopeFrom = this.getCurrentPosition();\r\n\r\n            this.expect(TokenType.leftCurlyBracket, true);\r\n\r\n            let switchNode: SwitchNode = {\r\n                type: TokenType.keywordSwitch,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: null,\r\n                condition: switchTerm,\r\n                caseNodes: []\r\n            }\r\n\r\n            let defaultAlreadyThere = false;\r\n\r\n            while (this.tt == TokenType.keywordCase || this.tt == TokenType.keywordDefault) {\r\n                let casePosition = this.getCurrentPosition();\r\n\r\n                let isDefault = this.tt == TokenType.keywordDefault;\r\n                if (isDefault) {\r\n                    if (defaultAlreadyThere) {\r\n                        this.pushError(\"Eine switch-Anweisung darf nur maximal einen default-Zweig haben.\", \"error\", casePosition);\r\n                    } else {\r\n                        defaultAlreadyThere = true;\r\n                    }\r\n                }\r\n\r\n                this.nextToken();\r\n\r\n                let caseTerm = null;\r\n                if (!isDefault) {\r\n                    caseTerm = this.parseUnary();\r\n                }\r\n\r\n                this.expect(TokenType.colon, true);\r\n\r\n                let statements: ASTNode[] = [];\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && this.tt != TokenType.keywordCase && this.tt != TokenType.keywordDefault\r\n                ) {\r\n                    let oldPos = this.pos;\r\n                    let statement = this.parseStatement();\r\n                    if (statement != null) {\r\n                        statements = statements.concat(statement);\r\n                    }\r\n                    if(oldPos == this.pos){\r\n                        this.pushError(this.cct.value + \" wird hier nicht erwartet.\");\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                let switchCaseNode: SwitchCaseNode = {\r\n                    type: TokenType.keywordCase,\r\n                    position: casePosition,\r\n                    caseTerm: caseTerm,\r\n                    statements: statements\r\n                }\r\n\r\n                switchNode.caseNodes.push(switchCaseNode);\r\n\r\n            }\r\n\r\n            switchNode.scopeTo = this.getEndOfCurrentToken();\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n            return [switchNode];\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseIf(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume if\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.module.pushMethodCallPosition(position, [], \"if\", rightBracketPosition);\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Falls die Bedingung zutrifft, wird nur der Strichpunkt ausgeführt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n            let statements = this.parseStatement();\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let elseStatements: ASTNode[] = null;\r\n\r\n            if (this.comesToken(TokenType.keywordElse)) {\r\n                this.nextToken();\r\n                elseStatements = this.parseStatement();\r\n            }\r\n\r\n            if (condition == null && this.errorList.length == 0) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordIf,\r\n                    position: position,\r\n                    condition: condition,\r\n                    statementsIfTrue: statements,\r\n                    statementsIfFalse: elseStatements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseDo(): ASTNode[] {\r\n\r\n        // let i = 10;\r\n        // do {\r\n        //     i = i +7;\r\n        // } while (i < 100);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        this.nextToken(); // consume do\r\n        let statements = this.parseStatement();\r\n\r\n        if (this.expect(TokenType.keywordWhile, true)) {\r\n            if (this.expect(TokenType.leftBracket, true)) {\r\n                let condition = this.parseTerm();\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n\r\n                this.expect(TokenType.rightBracket, true);\r\n\r\n                return [\r\n                    {\r\n                        type: TokenType.keywordDo,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        condition: condition,\r\n                        statements: statements\r\n                    }\r\n                ];\r\n\r\n            }\r\n        }\r\n        return [];\r\n\r\n    }\r\n\r\n    comesGenericType(): boolean {\r\n        if (this.ct[1].tt != TokenType.lower) return false;\r\n        if (this.ct[2].tt != TokenType.identifier) return false;\r\n        return this.ct[3].tt == TokenType.greater || this.ct[3].tt == TokenType.comma;\r\n\r\n    }\r\n\r\n    parseVariableDeclarationOrTerm(): ASTNode[] {\r\n\r\n        // Two identifiers in a row or identifier[]\r\n        if (\r\n            (this.tt == TokenType.identifier || this.tt == TokenType.keywordFinal) &&\r\n            (this.ct[1].tt == TokenType.identifier\r\n                || this.ct[1].tt == TokenType.leftRightSquareBracket ||\r\n                this.comesGenericType() \r\n            )\r\n        ) {\r\n            let ret: ASTNode[] = [];\r\n            let type: TypeNode = null;\r\n            do {\r\n                if (type != null) this.expect(TokenType.comma, true);\r\n                let vd = this.parseVariableDeclaration(type);\r\n                ret.push(vd);\r\n                type = vd?.variableType;\r\n                //@ts-ignore\r\n            } while (this.tt == TokenType.comma);\r\n\r\n            return ret;\r\n        } else {\r\n            return [this.parseTerm()];\r\n        }\r\n\r\n    }\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parsePlusPlusMinusMinus();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        // 28.05.2021: This broke evalation of ternery operator, so i commented it out.\r\n        // Don't know why it was there in the first place, so i expect some havoc to come...\r\n        // 15 Minutes later:\r\n        // This if-clause was here to make terms aber case possible, e.g. switch(a){ case 7 + 2: println(\"Here!\")}\r\n        // -> Bad idea. I changed this to only parse unary Terms left of the colon so i can comment out this if-clause here\r\n        // and fix the ternary operator.\r\n        //\r\n        // if (this.tt == TokenType.colon) {\r\n        //     return left;\r\n        // }\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n\r\n            for (let opData of [{ op: TokenType.lower, wrong: \"=<\", right: \"<=\", correctOp: TokenType.lowerOrEqual }, \r\n                                { op: TokenType.greater, wrong: \"=>\", right: \">=\", correctOp: TokenType.greaterOrEqual }]) {\r\n                if (operator == TokenType.assignment && this.tt == opData.op) {\r\n                    let position2 = this.getCurrentPosition();\r\n                    this.pushError(`Den Operator ${opData.wrong} gibt es nicht. Du meintest sicher: ${opData.right}`, \"error\",\r\n                        Object.assign({}, position, { length: 2 }), {\r\n                        title: `${opData.wrong} durch ${opData.right} ersetzen`,\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position2.column + position2.length },\r\n                                        text: opData.right\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    });\r\n                    this.nextToken();\r\n                    operator = opData.correctOp;\r\n                }\r\n            }\r\n\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parsePlusPlusMinusMinus();\r\n            }\r\n\r\n            if (right != null) {\r\n\r\n                let constantFolding = false;\r\n                if (this.isConstant(left) && this.isConstant(right)) {\r\n                    let pcLeft = <ConstantNode>left;\r\n                    let pcRight = <ConstantNode>right;\r\n                    let typeLeft = TokenTypeToDataTypeMap[pcLeft.constantType];\r\n                    let typeRight = TokenTypeToDataTypeMap[pcRight.constantType];\r\n                    let resultType = typeLeft.getResultType(operator, typeRight);\r\n                    if (resultType != null) {\r\n                        constantFolding = true;\r\n                        let result = typeLeft.compute(operator, { type: typeLeft, value: pcLeft.constant },\r\n                            { type: typeRight, value: pcRight.constant });\r\n\r\n                        this.considerIntDivisionWarning(operator, typeLeft, pcLeft.constant, typeRight, pcRight.constant, position);\r\n\r\n                        pcLeft.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcLeft.constant = result;\r\n                        pcLeft.position.length = pcRight.position.column + pcRight.position.length - pcLeft.position.column;\r\n                    }\r\n                }\r\n\r\n                if (!constantFolding)\r\n                    left = {\r\n                        type: TokenType.binaryOp,\r\n                        position: position,\r\n                        operator: operator,\r\n                        firstOperand: left,\r\n                        secondOperand: right\r\n                    };\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n    considerIntDivisionWarning(operator: TokenType, typeLeft: Type, leftConstant: any, typeRight: Type, rightConstant: any, position: TextPosition) {\r\n    \r\n        if(operator == TokenType.division){\r\n            if(this.isIntegerType(typeLeft) && this.isIntegerType(typeRight)){\r\n                if(rightConstant != 0 && leftConstant/rightConstant != Math.floor(leftConstant/rightConstant)){\r\n                    this.pushError(\"Da \" + leftConstant + \" und \" + rightConstant + \" ganzzahlige Werte sind, wird diese Division als Ganzzahldivision ausgeführt und ergibt den Wert \" + Math.floor(leftConstant/rightConstant) + \". Falls das nicht gewünscht ist, hänge '.0' an einen der Operanden.\", \"info\", position);\r\n                }\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n    isIntegerType(type: Type): boolean {\r\n        return type == intPrimitiveType;\r\n    }\r\n\r\n    isConstant(node: TermNode) {\r\n\r\n        return (node != null && node.type == TokenType.pushConstant);\r\n\r\n    }\r\n\r\n    parsePlusPlusMinusMinus(): TermNode {\r\n\r\n        let incrementDecrementBefore: TokenType = null;\r\n        let position = null;\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            incrementDecrementBefore = this.tt;\r\n            position = this.getCurrentPosition();\r\n            this.nextToken();\r\n        }\r\n\r\n        let t: TermNode = this.parseUnary();\r\n\r\n        if (incrementDecrementBefore != null) {\r\n            t = {\r\n                type: TokenType.incrementDecrementBefore,\r\n                position: position,\r\n                operator: incrementDecrementBefore,\r\n                operand: t\r\n            }\r\n        }\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            t = {\r\n                type: TokenType.incrementDecrementAfter,\r\n                position: this.getCurrentPosition(),\r\n                operator: this.tt,\r\n                operand: t\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return t;\r\n\r\n    }\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseDotOrArrayChains(this.bracketOrCasting());\r\n            case TokenType.minus:\r\n            case TokenType.not:\r\n            case TokenType.tilde:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                if (this.isConstant(term)) {\r\n                    let pcTerm = <ConstantNode>term;\r\n                    let typeTerm = TokenTypeToDataTypeMap[pcTerm.constantType];\r\n                    let resultType = typeTerm.getResultType(tt1);\r\n                    if (resultType != null) {\r\n                        let result = typeTerm.compute(tt1, { type: typeTerm, value: pcTerm.constant });\r\n                        pcTerm.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcTerm.constant = result;\r\n                        position.length = pcTerm.position.column - position.column + 1;\r\n                        return pcTerm;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n            case TokenType.keywordSuper:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.superConstructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordSuper,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordThis:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.constructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordThis,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordNew:\r\n                return this.parseDotOrArrayChains(this.parseNew());\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.keywordNull:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.keywordNull,\r\n                    constant: null\r\n                };\r\n                this.nextToken();\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                }\r\n\r\n                return this.parseDotOrArrayChains(term);\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder this oder super. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    tokensNotAfterCasting: TokenType[] = [TokenType.multiplication, TokenType.division, TokenType.plus,\r\n    TokenType.minus, TokenType.dot, TokenType.modulo, TokenType.semicolon, TokenType.rightBracket];\r\n\r\n    bracketOrCasting(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.identifier && this.ct[1].tt == TokenType.rightBracket &&\r\n            this.tokensNotAfterCasting.indexOf(this.ct[2].tt) < 0) {\r\n\r\n            let castToType = this.parseType();\r\n            let position1 = this.getCurrentPosition(); // Position of )\r\n            position.length = position1.column - position.column + 1;\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let whatToCast = this.parsePlusPlusMinusMinus();\r\n\r\n            return {\r\n                type: TokenType.castValue,\r\n                position: position,\r\n                castToType: castToType,\r\n                whatToCast: whatToCast\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.isConstant(term)) {\r\n                return term;\r\n            }\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseNew(): TermNode {\r\n\r\n        this.nextToken();\r\n        let position = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            let identifier = <string>this.cct.value;\r\n            let identifierPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n\r\n            let genericParameterTypes: TypeNode[] = null;\r\n\r\n            if (this.tt == TokenType.lower) {\r\n\r\n                genericParameterTypes = [];\r\n                let first: boolean = true;\r\n                this.nextToken();\r\n\r\n                //@ts-ignore\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                    if (!first) this.nextToken(); // consume comma\r\n\r\n                    first = false;\r\n\r\n                    genericParameterTypes.push(this.parseType());\r\n\r\n                }\r\n\r\n                this.expect(TokenType.greater);\r\n                if (genericParameterTypes.length == 0) genericParameterTypes = null;\r\n            }\r\n\r\n            if (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n\r\n                let typenode: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: position,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n                this.typeNodes.push(typenode);\r\n\r\n                let elementCount: TermNode[] = [];\r\n\r\n                while (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n                    typenode.arrayDimension++;\r\n\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.leftRightSquareBracket) {\r\n                        elementCount.push(null);\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.nextToken();\r\n                        elementCount.push(this.parseTerm());\r\n                        this.expect(TokenType.rightSquareBracket, true);\r\n                    }\r\n\r\n                }\r\n\r\n                let initialization = null;\r\n\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    initialization = this.parseArrayLiteral(typenode);\r\n                }\r\n\r\n                let newArrayNode: NewArrayNode = {\r\n                    type: TokenType.newArray,\r\n                    position: position,\r\n                    arrayType: typenode,\r\n                    elementCount: elementCount,\r\n                    initialization: initialization\r\n                }\r\n\r\n                return newArrayNode;\r\n\r\n\r\n            } else if (this.tt == TokenType.leftBracket) {\r\n                let parameters = this.parseMethodCallParameters();\r\n\r\n                let classType: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: identifierPosition,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n\r\n                this.typeNodes.push(classType);\r\n\r\n                return {\r\n                    type: TokenType.newObject,\r\n                    position: position,\r\n                    classType: classType,\r\n                    constructorOperands: parameters.nodes,\r\n                    rightBracketPosition: parameters.rightBracketPosition,\r\n                    commaPositions: parameters.commaPositions\r\n                }\r\n            } else {\r\n                this.pushError(\"Konstruktoraufruf (also runde Klammer auf) oder Array-Intanzierung (eckige Klammer auf) erwartet.\", \"error\", this.getCurrentPosition());\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseArrayLiteral(arrayType: TypeNode): ArrayInitializationNode {\r\n        // expects { as next token\r\n\r\n        let nodes: (ArrayInitializationNode | TermNode)[] = [];\r\n        let position = this.getCurrentPosition();\r\n        let dimension = null;\r\n\r\n        this.expect(TokenType.leftCurlyBracket, true);\r\n        if (this.tt != TokenType.rightCurlyBracket) {\r\n\r\n            let first = true;\r\n            while (first || this.tt == TokenType.comma) {\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                let newDimension: number;\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    let newType: TypeNode = {\r\n                        type: TokenType.type,\r\n                        position: this.getCurrentPosition(),\r\n                        arrayDimension: arrayType.arrayDimension - 1,\r\n                        identifier: arrayType.identifier\r\n                    }\r\n                    this.typeNodes.push(newType);\r\n                    let al = this.parseArrayLiteral(newType);\r\n                    newDimension = al.dimension + 1;\r\n                    nodes.push(al);\r\n                } else {\r\n                    nodes.push(this.parseTerm());\r\n                    newDimension = 1;\r\n                }\r\n\r\n                if (dimension != null) {\r\n                    if (dimension != newDimension) {\r\n                        this.pushError(\"Die Dimension dieses Array-Literals (\" + (newDimension - 1) + \" ist ungleich derjenigen der vorangegangenen Array-Literale (\" + (dimension - 1) + \").\", \"error\", position1);\r\n                    }\r\n                }\r\n                dimension = newDimension;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n        let ain: ArrayInitializationNode = {\r\n            type: TokenType.arrayInitialization,\r\n            position: position,\r\n            arrayType: arrayType,\r\n            dimension: dimension,\r\n            nodes: nodes\r\n        }\r\n\r\n        return ain;\r\n\r\n    }\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            let parameter = this.parseTerm();\r\n            if (parameter != null) {\r\n                parameters.push(parameter);\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.pushAttribute,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        object: term\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // let position = this.getCurrentPosition();\r\n                let position = term.position;\r\n                this.nextToken();\r\n                let index = this.parseTerm();\r\n                let positionEnd = this.getCurrentPosition();\r\n                let position1: TextPosition = Object.assign({}, position);\r\n                this.expect(TokenType.rightSquareBracket, true);\r\n                if (positionEnd.line == position.line) {\r\n                    position1.length = positionEnd.column + positionEnd.length - position1.column;\r\n                } else {\r\n                    position1 = positionEnd;\r\n                }\r\n                term = {\r\n                    type: TokenType.selectArrayElement,\r\n                    position: position1,\r\n                    index: index,\r\n                    object: term\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n    parseVariableDeclaration(type: TypeNode): LocalVariableDeclarationNode {\r\n\r\n        let isFinal = false;\r\n        if (this.tt == TokenType.keywordFinal) {\r\n            isFinal = true;\r\n            this.nextToken();\r\n        }\r\n\r\n        if (type == null) {\r\n            type = this.parseType();\r\n        }\r\n\r\n        if(this.tt != TokenType.identifier){\r\n            this.pushError(\"Hier wird ein Bezeichner (Name) einer Variable erwartet.\", \"error\", this.getCurrentPosition());\r\n            return null;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let initialization: TermNode = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.assignment) {\r\n            this.nextToken();\r\n            //@ts-ignore\r\n            if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                initialization = this.parseArrayLiteral(type);\r\n            } else {\r\n                initialization = this.parseTerm();\r\n            }\r\n        }\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.endofSourcecode && type == null && identifier == null) return null;\r\n\r\n        return {\r\n            type: TokenType.localVariableDeclaration,\r\n            position: position,\r\n            identifier: identifier,\r\n            variableType: type,\r\n            initialization: initialization,\r\n            isFinal: isFinal\r\n        }\r\n\r\n    }\r\n\r\n    parseType(): TypeNode {\r\n\r\n        /**\r\n         * e.g. int, int[][], Integer, ArrayList<Integer> ,HashMap<Integer, ArrayList<String>>[][]\r\n         */\r\n\r\n\r\n        if(this.tt != TokenType.identifier && this.tt != TokenType.keywordVoid){\r\n            this.pushError(\"Erwartet wird ein Datentyp. Dieser muss mit einem Bezeichner beginnen. Gefunden wurde: \" + this.cct.value, \"error\", this.getCurrentPosition());\r\n                this.nextToken();\r\n            return {\r\n                type: TokenType.type,\r\n                position: this.getCurrentPosition(),\r\n                arrayDimension: 0,\r\n                identifier: \"int\",\r\n                genericParameterTypes: []\r\n            };\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let genericParameterTypes: TypeNode[] = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.lower) {\r\n\r\n            genericParameterTypes = [];\r\n            let first: boolean = true;\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                if (!first) this.nextToken(); // consume comma\r\n\r\n                first = false;\r\n\r\n                genericParameterTypes.push(this.parseType());\r\n\r\n            }\r\n\r\n            this.expect(TokenType.greater);\r\n\r\n        }\r\n\r\n        let arrayDimension = 0;\r\n        //@ts-ignore\r\n        while (this.tt == TokenType.leftRightSquareBracket) {\r\n            arrayDimension++;\r\n            position.length += 2;\r\n            this.nextToken();\r\n        }\r\n\r\n        let typenode: TypeNode = {\r\n            type: TokenType.type,\r\n            position: position,\r\n            arrayDimension: arrayDimension,\r\n            identifier: identifier,\r\n            genericParameterTypes: genericParameterTypes\r\n        }\r\n\r\n        this.typeNodes.push(typenode);\r\n\r\n        return typenode;\r\n\r\n    }\r\n\r\n\r\n    parseClassDefinition(): ASTNode {\r\n\r\n        let commentBefore = this.cct.commentBefore;\r\n        let modifiers = this.collectModifiers();\r\n\r\n        if (!this.comesToken(Parser.ClassTokens)) {\r\n            this.pushError(\"Erwartet wird class, interface oder enum. Gefunden wurde: \" + this.cct.value);\r\n            return null;\r\n        }\r\n\r\n        let classType = this.tt;\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n\r\n            let identifier = <string>this.cct.value;\r\n            let position = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n            let typeParameters: TypeParameterNode[] = [];\r\n            // For Generics: parse expression like <E, F extends Test implements Comparable<Test>>\r\n            if (this.tt == TokenType.lower) {\r\n                typeParameters = this.parseTypeParameterDefinition();\r\n            }\r\n\r\n            let extendsImplements = this.parseExtendsImplements(classType == TokenType.keywordInterface);\r\n\r\n            if (classType == TokenType.keywordEnum) {\r\n                return this.parseEnum(identifier, extendsImplements, position, modifiers.visibility, commentBefore);\r\n            }\r\n\r\n            let scopeFrom = this.getCurrentPosition();\r\n            if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n                let methodsAndAttributes = this.parseClassBody(classType, identifier);\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n                this.expect(TokenType.rightCurlyBracket, true);\r\n                switch (classType) {\r\n\r\n                    case TokenType.keywordClass: return {\r\n                        type: TokenType.keywordClass,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        identifier: identifier,\r\n                        attributes: methodsAndAttributes.attributes,\r\n                        methods: methodsAndAttributes.methods,\r\n                        isAbstract: modifiers.isAbstract,\r\n                        visibility: modifiers.visibility,\r\n                        extends: extendsImplements.extends,\r\n                        implements: extendsImplements.implements,\r\n                        typeParameters: typeParameters,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                    case TokenType.keywordInterface: return {\r\n                        type: TokenType.keywordInterface,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        methods: methodsAndAttributes.methods,\r\n                        typeParameters: typeParameters,\r\n                        extends: extendsImplements.implements,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseTypeParameterDefinition(): TypeParameterNode[] {\r\n\r\n        let typeParameters: TypeParameterNode[] = [];\r\n\r\n        let identifierMap = {};\r\n\r\n        this.expect(TokenType.lower, true);\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n            if (!first) this.expect(TokenType.comma, true);\r\n\r\n            let tp: TypeParameterNode = {\r\n                type: TokenType.typeParameter,\r\n                position: this.getCurrentPosition(),\r\n                identifier: <string>this.cct.value,\r\n                extends: null,\r\n                implements: null\r\n            };\r\n\r\n            if (identifierMap[tp.identifier] != null) {\r\n                this.pushError(\"Zwei Typparameter dürfe nicht denselben Bezeichner tragen.\");\r\n            }\r\n\r\n            identifierMap[tp.identifier] = true;\r\n\r\n            this.nextToken();\r\n\r\n            let extendsImplements = this.parseTypeParameterBounds();\r\n\r\n            tp.extends = extendsImplements.extends;\r\n\r\n            if (tp.extends != null && tp.extends.arrayDimension > 0) {\r\n                this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n            }\r\n\r\n            tp.implements = extendsImplements.implements;\r\n\r\n            tp.implements.forEach((im) => {\r\n                if (im.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n                }\r\n            });\r\n\r\n            first = false;\r\n\r\n            typeParameters.push(tp);\r\n\r\n        }\r\n\r\n        this.expect(TokenType.greater, true);\r\n\r\n        return typeParameters;\r\n    }\r\n\r\n    parseEnum(identifier: string, extendsImplements: {\r\n        extends: TypeNode;\r\n        implements: TypeNode[];\r\n    }, position: TextPosition, visibility: Visibility, commentBefore: Token): ASTNode {\r\n\r\n        if (extendsImplements.extends != null) {\r\n            this.pushError(\"Ein enum kann nicht mit extends erweitert werden.\");\r\n        }\r\n        if (extendsImplements.implements.length > 0) {\r\n            this.pushError(\"Ein enum kann kein Interface implementieren.\");\r\n        }\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n            let values: EnumValueNode[] = this.parseEnumValues();\r\n\r\n            let methodsAndAttributes = this.parseClassBody(TokenType.keywordEnum, identifier);\r\n\r\n            let scopeTo = this.getEndOfCurrentToken();\r\n\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n\r\n            return {\r\n                type: TokenType.keywordEnum,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                attributes: methodsAndAttributes.attributes,\r\n                methods: methodsAndAttributes.methods,\r\n                identifier: identifier,\r\n                values: values,\r\n                visibility: visibility,\r\n                commentBefore: commentBefore\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseEnumValues(): EnumValueNode[] {\r\n\r\n        let values: EnumValueNode[] = [];\r\n\r\n        let pos: number = 0;\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || this.tt == TokenType.comma) {\r\n            pos = this.pos;\r\n            if (!first) this.nextToken(); // skip comma\r\n            first = false;\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                let constructorParameters: TermNode[] = null;\r\n\r\n                let commaPositions: TextPosition[] = [];\r\n                let rightBracketPosition: TextPosition = null;\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let mcp = this.parseMethodCallParameters();\r\n                    constructorParameters = mcp.nodes;\r\n                    commaPositions = mcp.commaPositions;\r\n                    rightBracketPosition = mcp.rightBracketPosition;\r\n                }\r\n\r\n                values.push({\r\n                    type: TokenType.pushEnumValue,\r\n                    constructorParameters: constructorParameters,\r\n                    identifier: identifier,\r\n                    position: position,\r\n                    commaPositions: commaPositions,\r\n                    rightBracketPosition: rightBracketPosition\r\n                });\r\n\r\n            };\r\n\r\n            if (this.pos == pos) {\r\n                this.nextToken(); // in case of parsing-emergency\r\n            }\r\n        }\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return values;\r\n\r\n    }\r\n\r\n    parseClassBody(classType: TokenType, className: string): { methods: MethodDeclarationNode[], attributes: AttributeDeclarationNode[] } {\r\n\r\n        // Assumption: { is already consumed\r\n\r\n        let methods: MethodDeclarationNode[] = [];\r\n        let attributes: AttributeDeclarationNode[] = [];\r\n\r\n        while (true) {\r\n\r\n            if (this.tt == TokenType.rightCurlyBracket || this.tt == TokenType.endofSourcecode) {\r\n                break;\r\n            }\r\n\r\n            let commentBefore: Token = this.cct.commentBefore;\r\n\r\n            let annotation = null;\r\n            if(this.tt == TokenType.at){\r\n                annotation = this.cct.value;\r\n                this.nextToken();\r\n            }\r\n            let modifiers = this.collectModifiers();\r\n\r\n            let isConstructor = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            if (this.tt == TokenType.identifier && <string>this.cct.value == className && this.ct[1].tt == TokenType.leftBracket) {\r\n                isConstructor = true;\r\n            }\r\n\r\n            let type = this.parseType();\r\n\r\n            if(isConstructor) {\r\n                type = {\r\n                    identifier: \"void\",\r\n                    arrayDimension: 0,\r\n                    position: type.position,\r\n                    type: TokenType.type\r\n                }\r\n            }\r\n\r\n            if (isConstructor || this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = className;\r\n\r\n                if (!isConstructor) {\r\n                    position = this.getCurrentPosition();\r\n\r\n                    identifier = <string>this.cct.value;\r\n                    this.nextToken();\r\n                }\r\n\r\n                if (this.tt == TokenType.leftBracket) {\r\n\r\n                    if (isConstructor && classType == TokenType.keywordEnum && modifiers.visibility != Visibility.private) {\r\n                        this.pushError(\"Konstruktoren in enums müssen private sein.\", \"error\", position);\r\n                    }\r\n\r\n                    let parameters: ParameterNode[] = this.parseMethodDeclarationParameters();\r\n\r\n                    let statements: ASTNode[];\r\n                    let scopeFrom: TextPosition = this.getCurrentPosition();\r\n                    let scopeTo: TextPosition = scopeFrom;\r\n\r\n                    if (modifiers.isAbstract) {\r\n                        this.expect(TokenType.semicolon, true);\r\n                        if (isConstructor) {\r\n                            this.pushError(\"Ein Konstruktor kann nicht abstrakt sein.\", \"error\", position);\r\n                        }\r\n                        statements = [];\r\n                    } else {\r\n                        scopeFrom = this.getCurrentPosition();\r\n                        statements = this.parseStatement();\r\n                        scopeTo = this.getEndOfCurrentToken();\r\n                        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                            let scopeNode = <ScopeNode>statements[0];\r\n                            scopeFrom = scopeNode.position;\r\n                            scopeTo = scopeNode.positionTo;\r\n                        }\r\n\r\n                    }\r\n\r\n                    methods.push({\r\n                        type: TokenType.methodDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        parameters: parameters,\r\n                        statements: statements,\r\n                        visibility: modifiers.visibility,\r\n                        isAbstract: modifiers.isAbstract || classType == TokenType.keywordInterface,\r\n                        isStatic: modifiers.isStatic,\r\n                        isConstructor: isConstructor,\r\n                        returnType: type,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                } else {\r\n\r\n                    if (identifier == className) {\r\n                        this.pushError(\"Das Attribut \" + className + \" darf nicht denselben Bezeichner haben wie die Klasse.\", \"error\", position);\r\n                    }\r\n\r\n                    let initialization: TermNode = null;\r\n\r\n                    if (this.tt == TokenType.assignment) {\r\n                        this.nextToken();\r\n                        //@ts-ignore\r\n                        if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                            initialization = this.parseArrayLiteral(type);\r\n                        } else {\r\n                            initialization = this.parseTerm();\r\n                        }\r\n                    }\r\n\r\n                    this.expect(TokenType.semicolon);\r\n\r\n                    attributes.push({\r\n                        type: TokenType.attributeDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        attributeType: type,\r\n                        isStatic: modifiers.isStatic,\r\n                        isFinal: modifiers.isFinal,\r\n                        visibility: modifiers.visibility,\r\n                        initialization: initialization,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                    if (classType == TokenType.keywordInterface) {\r\n                        this.pushError(\"Interfaces dürfen keine Attribute enthalten.\", \"error\", position);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        return { methods: methods, attributes: attributes }\r\n\r\n    }\r\n\r\n    parseMethodDeclarationParameters(): ParameterNode[] {\r\n\r\n        // Assumption: next token is (\r\n        let parameters: ParameterNode[] = [];\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.rightBracket) {\r\n            this.nextToken();\r\n            return [];\r\n        }\r\n\r\n        let ellipsis = false;\r\n\r\n        while (true) {\r\n            if (ellipsis) {\r\n                this.pushError(\"Nur der letzte Parameter darf als Ellipsis (...) definiert werden.\");\r\n            }\r\n            let isFinal = this.tt == TokenType.keywordFinal;\r\n\r\n            if (isFinal) this.nextToken();\r\n\r\n            let type: TypeNode = this.parseType();\r\n\r\n            ellipsis = this.tt == TokenType.ellipsis;\r\n            if (ellipsis) {\r\n                this.nextToken();\r\n                type.arrayDimension++;\r\n            }\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n                let identifier = <string>this.cct.value;\r\n                parameters.push({\r\n                    type: TokenType.parameterDeclaration,\r\n                    position: this.getCurrentPosition(),\r\n                    identifier: identifier,\r\n                    parameterType: type,\r\n                    isFinal: isFinal,\r\n                    isEllipsis: ellipsis\r\n                });\r\n                this.nextToken();\r\n            }\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken(); // consume comma\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return parameters;\r\n\r\n    }\r\n\r\n    parseExtendsImplements(isInterface: boolean): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        while(this.comesToken([TokenType.keywordExtends, TokenType.keywordImplements])){\r\n            if (this.comesToken(TokenType.keywordExtends) && !isInterface) {\r\n                if(sextends != null){\r\n                    this.pushError(\"Eine Klasse kann nicht Unterklasse von zwei anderen Klassen sein, es darf also hier nur ein Mal 'extends...' stehen.\", \"error\", sextends.position);\r\n                }\r\n                this.nextToken(); // skip extends\r\n                sextends = this.parseType();\r\n                if (sextends != null && sextends.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp der Basisklasse darf kein Array sein.\", \"error\", sextends.position);\r\n                }\r\n            }\r\n    \r\n            if ((!isInterface && this.comesToken(TokenType.keywordImplements)) || (isInterface && this.comesToken(TokenType.keywordExtends))) {\r\n                if(simplements.length > 0){\r\n                    this.pushError(\"Es darf hier nur ein Mal 'implements' stehen, hinter 'implements' ist aber eine kommaseparierte Liste von Interfaces erlaubt.\", \"warning\");\r\n                }\r\n                this.nextToken(); // Skip implements/extends\r\n                let first = true;\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n                    if (!first) this.nextToken(); // skip comma\r\n                    first = false;\r\n                    simplements.push(this.parseType());\r\n                }\r\n            }\r\n        }\r\n\r\n        simplements.forEach((im) => {\r\n            if (im.arrayDimension > 0) {\r\n                this.pushError(im.identifier + \"[] ist kein Interface, sondern ein Array. Array-Datentypen sind hier nicht erlaubt.\");\r\n            }\r\n        });\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n    }\r\n\r\n    parseTypeParameterBounds(): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        if (this.comesToken(TokenType.keywordExtends)) {\r\n            this.nextToken(); // skip extends\r\n            sextends = this.parseType();\r\n        }\r\n\r\n        while (this.comesToken(TokenType.ampersand)) {\r\n            this.nextToken(); // Skip ampersand\r\n            simplements.push(this.parseType());\r\n        }\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n\r\n    }\r\n\r\n    collectModifiers(): { isAbstract: boolean, isStatic: boolean, visibility: Visibility, isFinal: boolean, isTransient: boolean } {\r\n\r\n        let visibility = Visibility.public;\r\n        let isAbstract = false;\r\n        let isStatic = false;\r\n        let isFinal = false;\r\n        let isTransient = false;\r\n\r\n        let done = false;\r\n        let asError: boolean = false;\r\n\r\n        while (!done) {\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPublic:\r\n                    visibility = Visibility.public;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordPrivate:\r\n                    visibility = Visibility.private;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordProtected:\r\n                    visibility = Visibility.protected;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordStatic:\r\n                    isStatic = true;\r\n                    if(isAbstract && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordAbstract:\r\n                    isAbstract = true;\r\n                    if(isStatic && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordFinal:\r\n                    isFinal = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordTransient:\r\n                    isTransient = true;\r\n                    this.nextToken();\r\n                    break;\r\n                default: done = true;\r\n            }\r\n\r\n        }\r\n\r\n\r\n        return { isAbstract: isAbstract, isStatic: isStatic, visibility: visibility, isFinal: isFinal, isTransient: isTransient };\r\n\r\n    }\r\n\r\n\r\n}","import { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ModuleStore } from \"../parser/Module.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\ntype SerializedObject = {\r\n    \"!k\"?: string, // Class identifier or object index\r\n    \"!i\": number  // index\r\n}\r\n\r\nexport class JsonTool {\r\n    // to deserialize:\r\n    indexToObjectMap: { [index: number]: Value };\r\n    valuesToResolve: { v: Value, i: number }[];\r\n\r\n    // to serialize:\r\n    objectToIndexMap: Map<RuntimeObject, number>;\r\n    nextIndex: number;\r\n\r\n    primitiveTypes: String[] = [\"String\", \"Integer\", \"Double\", \"Boolean\", \"Float\", \"Character\"];\r\n\r\n    toJson(value: Value): string {\r\n        this.objectToIndexMap = new Map();\r\n        this.nextIndex = 0;\r\n        let json = JSON.stringify(this.toJsonObj(value));\r\n        this.objectToIndexMap = null; // free memory\r\n        return json;\r\n    }\r\n\r\n    toJsonObj(value: Value): any {\r\n        let type = value.type;\r\n        let v = value.value;\r\n        if (v == null) return null;\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                let enumObj = <EnumRuntimeObject>v;\r\n                return enumObj.enumValue.ordinal;\r\n            }\r\n\r\n            let rto = <RuntimeObject>v;\r\n            return this.objectToJsonObj(rto);\r\n        } else if (type instanceof ArrayType) {\r\n            let arrayValues: Value[] = v;\r\n            return arrayValues.map(value => this.toJsonObj(value));\r\n        } else {\r\n            // primitive Type\r\n            return value.value;\r\n        }\r\n    }\r\n\r\n    objectToJsonObj(rto: RuntimeObject): SerializedObject {\r\n        // We solve circular object references by serializing an index when the same object occurs more than once.\r\n        let index = this.objectToIndexMap.get(rto);\r\n        if (index != null) {\r\n            return { \"!i\": index };\r\n        }\r\n\r\n        index = this.nextIndex++;\r\n        this.objectToIndexMap.set(rto, index);\r\n        let klass: Klass = <Klass>rto.class;\r\n\r\n        let serializedObject: SerializedObject = { \"!k\": klass.identifier, \"!i\": index };\r\n        // Don't serialize system classes unless they are explicitely serializable\r\n        if (klass.module.isSystemModule) {\r\n            return null;\r\n        }\r\n\r\n        while (klass != null) {\r\n            let first: boolean = true;\r\n            let serializedAttributes: any;\r\n            for (let attribute of klass.attributes) {\r\n                if (!attribute.isStatic && !attribute.isTransient) {\r\n                    if (first) {\r\n                        first = false;\r\n                        serializedAttributes = {};\r\n                        serializedObject[klass.identifier] = serializedAttributes;\r\n                    }\r\n                    serializedAttributes[attribute.identifier] = this.toJsonObj(rto.attributes[attribute.index]);\r\n                }\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return serializedObject;\r\n    }\r\n\r\n    fromJson(jsonString: string, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): any {\r\n        this.indexToObjectMap = {};\r\n        this.valuesToResolve = [];\r\n\r\n        let obj: any = JSON.parse(jsonString);\r\n        let ret = this.fromJsonObj(obj, type, moduleStore, interpreter);\r\n\r\n        for (let vtr of this.valuesToResolve) {\r\n            let value = this.indexToObjectMap[vtr.i];\r\n            if (value != null) {\r\n                vtr.v.type = value.type;\r\n                vtr.v.value = value.value;\r\n            }\r\n        }\r\n\r\n        this.indexToObjectMap = null; // free memory\r\n        this.valuesToResolve = null;\r\n        return ret.value;\r\n    }\r\n\r\n    fromJsonObj(obj: any, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): Value {\r\n        if (obj == null) return { type: type, value: null };\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                return {\r\n                    type: type,\r\n                    value: type.indexToInfoMap[obj].object\r\n                }\r\n            }\r\n\r\n            let serializedObject = <SerializedObject>obj;\r\n            return this.objectFromJsonObj(serializedObject, type, moduleStore, interpreter);\r\n\r\n        } else if (type instanceof ArrayType) {\r\n            let jsonArray: any[] = obj;\r\n            return {\r\n                type: type,\r\n                value: jsonArray.map(v => this.fromJsonObj(v, type.arrayOfType, moduleStore, interpreter))\r\n            }\r\n        } else {\r\n            // primitive Type\r\n            return { type: type, value: obj }\r\n        }\r\n\r\n    }\r\n\r\n    objectFromJsonObj(serializedObject: SerializedObject, type: Klass | Interface, moduleStore: ModuleStore,\r\n        interpreter: Interpreter): Value {\r\n\r\n        let identifier: string = serializedObject[\"!k\"];\r\n        let index = serializedObject[\"!i\"];\r\n        if (identifier != null) {\r\n\r\n            let klass1: Klass = <Klass>moduleStore.getType(identifier).type;\r\n            let klass = klass1;\r\n\r\n            let rto: RuntimeObject = interpreter.instantiateObjectImmediately(klass);\r\n\r\n            while (klass != null) {\r\n                let attributes = rto.attributes;\r\n                let serializedAttributes = serializedObject[klass.identifier];\r\n                if (attributes != null && serializedObject != null) {\r\n                    for (let attribute of klass.attributes) {\r\n                        if (!attribute.isStatic && !attribute.isTransient) {\r\n                            attributes[attribute.index] = this.fromJsonObj(serializedAttributes[attribute.identifier], attribute.type, moduleStore, interpreter);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                klass = klass.baseClass;\r\n            }\r\n\r\n            let value: Value = { type: klass1, value: rto };\r\n            this.indexToObjectMap[index] = value;\r\n            return value;\r\n\r\n        } else {\r\n            let index = serializedObject[\"!i\"];\r\n            let value = this.indexToObjectMap[index];\r\n            if (value == null) {\r\n                value = { type: type, value: null };\r\n                this.valuesToResolve.push({ v: value, i: index });\r\n                return value;\r\n            } else {\r\n                return { type: value.type, value: value.value }; // return copy\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, TypeVariable } from \"../types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Type, Variable, PrimitiveType } from \"../types/Types.js\";\r\nimport { ClassDeclarationNode, InterfaceDeclarationNode, MethodDeclarationNode, TypeNode, EnumDeclarationNode, TypeParameterNode } from \"./AST.js\";\r\nimport { Module, ModuleStore } from \"./Module.js\";\r\nimport { nullType, intPrimitiveType, booleanPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType, objectType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { JsonTool } from \"../types/TypeTools.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype GenericTypeList = { typeNode: TypeNode, module: Module }[];\r\n\r\ntype TypeParameterInfo = {\r\n    tpn: TypeParameterNode;\r\n    tp: TypeVariable;\r\n    ci: Klass | Interface;\r\n    cdn: ClassDeclarationNode | InterfaceDeclarationNode;\r\n    index: number\r\n};\r\n\r\n// TODO: find cyclic references in extends ...\r\nexport class TypeResolver {\r\n\r\n    static WATCHDOG: number = 5;\r\n    moduleStore: ModuleStore;\r\n\r\n    classes: ClassDeclarationNode[];\r\n    interfaces: InterfaceDeclarationNode[];\r\n    enums: EnumDeclarationNode[];\r\n\r\n    moduleToTypeParameterListMap: Map<Module, TypeVariable[]> = new Map();\r\n\r\n    unresolvedTypes: Map<Module, TypeNode[]>;\r\n\r\n    genericTypes: GenericTypeList = [];\r\n    genericTypesInClassDefinitions: GenericTypeList = [];\r\n\r\n    typeParameterList: TypeParameterInfo[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    start(moduleStore: ModuleStore) {\r\n\r\n        this.classes = [];\r\n        this.interfaces = [];\r\n        this.enums = [];\r\n        this.unresolvedTypes = new Map();\r\n\r\n        this.moduleStore = moduleStore;\r\n\r\n        this.resolveTypesInModules();\r\n\r\n        this.setupClassesAndInterfaces();\r\n\r\n        let unresolvedGenericTypesInClasses = this.resolveTypeVariables();\r\n\r\n        this.resolveUnresolvedTypes(false);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypesInClasses);\r\n\r\n        this.resolveExtendsImplements();\r\n\r\n        let unresolvedGenericTypes = this.resolveGenericTypes(this.genericTypes);\r\n\r\n        this.resolveUnresolvedTypes(true);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n        this.setupMethodsAndAttributes();\r\n\r\n        this.checkDoubleIdentifierDefinition();\r\n\r\n        this.checkGenericTypesAgainsTypeGuards();\r\n\r\n        this.setupAttributeIndices();\r\n\r\n    }\r\n    \r\n    setupAttributeIndices() {\r\n        for(let cl of this.classes){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n        for(let cl of this.enums){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkGenericTypesAgainsTypeGuards() {\r\n\r\n        for (let tn of this.genericTypes) {\r\n            if (tn.typeNode.genericParameterTypes == null) continue; // Error in resolveGenericType => nothing to do.\r\n\r\n            let ci: Klass | Interface = <any>tn.typeNode.resolvedType;\r\n\r\n            if (ci.isGenericVariantFrom == null) continue;\r\n\r\n            if (ci.typeVariables.length != ci.isGenericVariantFrom.typeVariables.length) {\r\n                tn.module.errors[2].push({\r\n                    position: tn.typeNode.position,\r\n                    text: \"Der Generische Typ \" + ci.isGenericVariantFrom.identifier + \" hat \" + ci.isGenericVariantFrom.typeVariables.length + \" Typparameter. Hier wurden aber \" + ci.typeVariables.length + \" angegeben.\",\r\n                    level: \"error\"\r\n                });\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < ci.typeVariables.length; i++) {\r\n\r\n                let error: string = null;\r\n\r\n                let actualType = ci.typeVariables[i];\r\n                let typeGuard = ci.isGenericVariantFrom.typeVariables[i];\r\n                let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n                actualType.scopeFrom = typeGuard.scopeFrom;\r\n                actualType.scopeTo = typeGuard.scopeTo;\r\n                actualType.identifier = typeGuard.identifier;\r\n\r\n                error = \"\";\r\n                if (!actualType.type.hasAncestorOrIs(typeGuard.type)) {\r\n                    error += \"Die Klasse \" + actualType.type.identifier + \" ist keine Unterklasse von \" + typeGuard.type.identifier + \" und pass damit nicht zum Typparamter \" + typeGuard.identifier + \" der Klasse \" + ci.isGenericVariantFrom.identifier + \". \";\r\n                }\r\n\r\n                let ifList: string[] = [];\r\n                for (let tgInterface of typeGuard.type.implements) {\r\n                    if (!actualType.type.implementsInterface(tgInterface)) {\r\n                        ifList.push(tgInterface.identifier);\r\n                    }\r\n                }\r\n\r\n                if (ifList.length > 0) {\r\n                    error += \"Die Klasse \" + actualType.identifier + \" implementiert nicht die Interfaces \" + ifList.join(\", \");\r\n                }\r\n\r\n                if (error != \"\") {\r\n                    tn.module.errors[2].push({\r\n                        position: genericParameterType.position,\r\n                        text: \"Der angegebene Wert des Typparameters passt nicht zur Definition: \" + error,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            this.adjustMethodsAndAttributesToTypeParameters(ci, TypeResolver.WATCHDOG);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    adjustMethodsAndAttributesToTypeParameters(classOrInterface: Klass | Interface, watchdog: number) {\r\n\r\n        if(watchdog <= 0) return;\r\n\r\n        if (classOrInterface != null && classOrInterface.isGenericVariantFrom != null && classOrInterface.typeVariables.length != 0) {\r\n\r\n            let methodListAltered: boolean = false;\r\n            let newMethodList: Method[] = [];\r\n            for (let m of classOrInterface.methods) {\r\n                let newMethod = this.getAdjustedMethod(m, classOrInterface.typeVariables, watchdog - 1);\r\n                methodListAltered = methodListAltered || newMethod.altered;\r\n                newMethodList.push(newMethod.newMethod);\r\n            }\r\n\r\n            if (methodListAltered) classOrInterface.methods = newMethodList;\r\n\r\n            if (classOrInterface instanceof Klass) {\r\n\r\n                let newAttributes: Attribute[] = [];\r\n                let newAttributeMap: Map<string, Attribute> = new Map();\r\n                let attributesAltered: boolean = false;\r\n\r\n                for (let attribute of classOrInterface.attributes) {\r\n                    let newAttribute = this.getAdjustedAttribute(attribute, classOrInterface.typeVariables, watchdog - 1);\r\n                    attributesAltered = attributesAltered || newAttribute.altered;\r\n                    newAttributes.push(newAttribute.newAttribute);\r\n                    newAttributeMap.set(attribute.identifier, newAttribute.newAttribute);\r\n                }\r\n\r\n                if (attributesAltered) {\r\n                    classOrInterface.attributes = newAttributes;\r\n                    classOrInterface.attributeMap = newAttributeMap;\r\n                }\r\n\r\n                this.adjustMethodsAndAttributesToTypeParameters(classOrInterface.baseClass, watchdog - 1);\r\n\r\n                // for (let impl of classOrInterface.implements) {\r\n                //     this.adjustMethodsAndAttributesToTypeParameters(impl);\r\n                // }\r\n            } else {\r\n                for (let ext of classOrInterface.extends) {\r\n                    this.adjustMethodsAndAttributesToTypeParameters(ext, watchdog - 1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedAttribute(attribute: Attribute, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newAttribute: Attribute } {\r\n\r\n        let nt = this.getAdjustedType(attribute.type, typeVariables, true, watchdog - 1);\r\n        if (nt.altered) {\r\n            let a: Attribute = Object.create(attribute);\r\n            a.type = nt.newType;\r\n            return { altered: true, newAttribute: a }\r\n        } else {\r\n            return { altered: false, newAttribute: attribute }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedMethod(method: Method, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newMethod: Method } {\r\n\r\n        let nrt = this.getAdjustedType(method.returnType, typeVariables, true, watchdog - 1);\r\n\r\n        let parameterAltered: boolean = false;\r\n        let newParameters: Variable[] = [];\r\n        for (let p of method.parameterlist.parameters) {\r\n            let nt = this.getAdjustedType(p.type, typeVariables, false, watchdog - 1);\r\n            if (nt.altered) {\r\n                parameterAltered = true;\r\n                let pNew: Variable = Object.create(p);\r\n                pNew.type = nt.newType;\r\n                newParameters.push(pNew);\r\n            } else {\r\n                newParameters.push(p);\r\n            }\r\n        }\r\n\r\n        if (nrt.altered || parameterAltered) {\r\n            let newMethod: Method = Object.create(method);\r\n            if (nrt.altered) newMethod.returnType = nrt.newType;\r\n            if (parameterAltered) {\r\n                newMethod.parameterlist = new Parameterlist(newParameters);\r\n            }\r\n            return { altered: true, newMethod: newMethod }\r\n        } else {\r\n            return { altered: false, newMethod: method };\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedType(type: Type, typeVariables: TypeVariable[], adjustMethodsAndAttributesRecursive: boolean, watchdog: number): { altered: boolean, newType: Type } {\r\n\r\n        if (type == null) return { altered: false, newType: type };\r\n\r\n        if (type[\"isTypeVariable\"] == true) {\r\n            for (let tv of typeVariables) {\r\n                if (tv.identifier == type.identifier) {\r\n                    return { altered: true, newType: tv.type };\r\n                }\r\n            }\r\n            return { altered: false, newType: type };\r\n        }\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0) {\r\n            let newTypeVariables: TypeVariable[] = [];\r\n            let altered: boolean = false;\r\n            for (let tv of type.typeVariables) {\r\n                let nt = this.getAdjustedType(tv.type, typeVariables, false, watchdog - 1);\r\n                if (nt.altered) {\r\n                    newTypeVariables.push({\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: <Klass>nt.newType\r\n                    })\r\n                    altered = true;\r\n                } else {\r\n                    newTypeVariables.push(tv);\r\n                }\r\n            }\r\n            if (altered) {\r\n                let newClassInterface = type.clone();\r\n                newClassInterface.typeVariables = newTypeVariables;\r\n                if (adjustMethodsAndAttributesRecursive) this.adjustMethodsAndAttributesToTypeParameters(newClassInterface, watchdog - 1);\r\n                return { altered: true, newType: newClassInterface }\r\n            } else {\r\n                return { altered: false, newType: type }\r\n            }\r\n        }\r\n\r\n        if(type instanceof ArrayType){\r\n            let nt = this.getAdjustedType(type.arrayOfType, typeVariables, adjustMethodsAndAttributesRecursive, watchdog - 1);\r\n            return {\r\n                altered: nt.altered,\r\n                newType: nt.altered ? new ArrayType(nt.newType) : type\r\n            }\r\n        }\r\n\r\n        return { altered: false, newType: type };\r\n    }\r\n\r\n    resolveGenericTypes(genericTypes: GenericTypeList): GenericTypeList {\r\n        let done: boolean = false;\r\n        let todoList: GenericTypeList = genericTypes.slice(0);\r\n        while (!done) {\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tn = todoList[i];\r\n\r\n                if (this.resolveGenericType(tn)) {\r\n                    done = false;\r\n                }\r\n                if (tn.typeNode.genericParameterTypes == null || tn.typeNode.genericParameterTypesResolved != null) {\r\n                    todoList.splice(todoList.indexOf(tn), 1);\r\n                    i--;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return todoList;\r\n    }\r\n\r\n    // returns true if something new could be resolved\r\n    resolveGenericType(tn: { typeNode: TypeNode, module: Module }): boolean {\r\n\r\n        if (tn.typeNode.genericParameterTypesResolved != null) return false;\r\n        if (tn.typeNode.genericParameterTypes == null) return true;\r\n\r\n        /**\r\n         * e.g. Map<Integer, String> test = new Map<>();\r\n         * Subsequent Code processes the type Map<Integer, String>\r\n         */\r\n\r\n        let ci: Klass | Interface = <any>tn.typeNode.resolvedType; // in example: Map\r\n        if (ci == null || !(ci instanceof Interface || ci instanceof Klass)) { // There had been an error... (in example: Map has not been resolved)\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return false; // => exit gracefully\r\n        }\r\n\r\n        if (!ci.typeVariablesReady) return false;\r\n\r\n        let parameterTypes: (Klass | Interface)[] = [];\r\n        for (let i = 0; i < tn.typeNode.genericParameterTypes.length; i++) {\r\n            let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n            let resolvedType = genericParameterType.resolvedType;\r\n\r\n            if (resolvedType == null) {\r\n                return false;\r\n            }\r\n\r\n            if (genericParameterType.genericParameterTypes != null && genericParameterType.genericParameterTypesResolved == null) {\r\n                return false; // first resolve this type!\r\n            }\r\n\r\n            if (!(resolvedType instanceof Interface || resolvedType instanceof Klass)) {\r\n                tn.module.errors[2].push({\r\n                    position: genericParameterType.position,\r\n                    text: \"Hier wird ein Interface- oder Klassentyp erwartet. Der Typ \" + genericParameterType.identifier + \" ist aber keiner.\",\r\n                    level: \"error\"\r\n                });\r\n                tn.typeNode.genericParameterTypes = null;\r\n                return true; // => exit gracefully\r\n            }\r\n\r\n            parameterTypes.push(<any>genericParameterType.resolvedType);\r\n\r\n        }\r\n\r\n        let typeVariablesOldToNewMap: Map<Klass, Klass> = new Map();\r\n\r\n        if (ci.typeVariables.length != parameterTypes.length) {\r\n            tn.module.errors[2].push({\r\n                position: tn.typeNode.position,\r\n                text: (ci instanceof Klass ? \"Die Klasse \" : \"Das Interface \") + ci.identifier + \" hat \" + ci.typeVariables.length + \" Typparameter, hier sind aber \" + parameterTypes.length + \" angegeben.\",\r\n                level: \"error\"\r\n            });\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return true; // => exit gracefully\r\n        }\r\n\r\n        let i = 0;\r\n        for (let type of parameterTypes) {\r\n\r\n            let oldTypeVariable = ci.typeVariables[i];\r\n\r\n            if (type instanceof Interface) {\r\n                let type1 = objectType.clone();\r\n                type1.implements.push(type);\r\n                type = type1;\r\n            }\r\n\r\n            let newTypeVariable = {\r\n                identifier: oldTypeVariable.identifier,\r\n                scopeFrom: oldTypeVariable.scopeFrom,\r\n                scopeTo: oldTypeVariable.scopeTo,\r\n                type: type\r\n            };\r\n\r\n            typeVariablesOldToNewMap.set(ci.typeVariables[i].type, newTypeVariable.type)\r\n            i++;\r\n        }\r\n\r\n        let newCi =\r\n            this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(ci, typeVariablesOldToNewMap);\r\n\r\n        tn.typeNode.resolvedType = newCi;\r\n        tn.typeNode.genericParameterTypesResolved = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    propagateTypeParameterToBaseClassesAndImplementedInterfaces(classOrInterface: Klass | Interface,\r\n        typeVariablesOldToNewMap: Map<Klass, Klass>): Klass | Interface {\r\n\r\n        if (classOrInterface instanceof Klass) {\r\n            let newClass: Klass = classOrInterface.clone();\r\n\r\n            newClass.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newClass.typeVariables.push(tv1);\r\n            }\r\n\r\n            let baseKlass = classOrInterface.baseClass;\r\n            if (baseKlass != null && baseKlass.isGenericVariantFrom != null) {\r\n\r\n                newClass.setBaseClass(<Klass>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(baseKlass, typeVariablesOldToNewMap));\r\n\r\n            }\r\n\r\n            newClass.implements = [];\r\n            for (let impl of classOrInterface.implements) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newClass.implements.push(impl);\r\n                } else {\r\n                    newClass.implements.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newClass;\r\n\r\n        } else {\r\n            let newInterface: Interface = classOrInterface.clone();\r\n\r\n            newInterface.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newInterface.typeVariables.push(tv1);\r\n            }\r\n\r\n            newInterface.extends = [];\r\n            for (let impl of classOrInterface.extends) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newInterface.extends.push(impl);\r\n                } else {\r\n                    newInterface.extends.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newInterface;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkDoubleIdentifierDefinition() {\r\n        let identifierModuleMap: Map<string, Module> = new Map();\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            for (let type of module.typeStore.typeList) {\r\n                let otherModule = identifierModuleMap.get(type.identifier);\r\n                if (otherModule != null) {\r\n                    module.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                        position: type.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                    let otherType = otherModule.typeStore.getType(type.identifier);\r\n                    if (otherType != null) {\r\n                        otherModule.errors[1].push({\r\n                            text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                                otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                            position: otherType.declaration.position,\r\n                            level: \"error\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    identifierModuleMap.set(type.identifier, module);\r\n                }\r\n            }\r\n        }\r\n\r\n        let baseModule = this.moduleStore.getBaseModule();\r\n\r\n        for (let tp of this.typeParameterList) {\r\n            let module = tp.ci.module;\r\n            let otherModule = identifierModuleMap.get(tp.tpn.identifier);\r\n            if (otherModule == null) {\r\n                let systemType = baseModule.typeStore.getType(tp.tpn.identifier);\r\n                if (systemType != null) otherModule = baseModule;\r\n            }\r\n            if (otherModule != null) {\r\n                module.errors[1].push({\r\n                    text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                        module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                    position: tp.tpn.position,\r\n                    level: \"error\"\r\n                });\r\n                let otherType = otherModule.typeStore.getType(tp.tpn.identifier);\r\n                if (otherType != null && otherModule != baseModule) {\r\n                    otherModule.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                        position: otherType.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveUnresolvedTypes(lastPass: boolean) {\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            module.dependsOnModules = new Map();\r\n        }\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            let ut = this.unresolvedTypes.get(module);\r\n            let utNew: TypeNode[] = [];\r\n            for (let type of ut) {\r\n                if (!this.resolveType(type, module, lastPass)) {\r\n                    utNew.push(type);\r\n                }\r\n            }\r\n            this.unresolvedTypes.set(module, utNew);\r\n        }\r\n    }\r\n\r\n    addFromJsonMethod(klass: Klass) {\r\n        let interpreter = this.main.getInterpreter();\r\n        klass.addMethod(new Method(\"fromJson\", new Parameterlist([\r\n            { identifier: \"jsonString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), klass,\r\n            (parameters) => {\r\n                let json: string = parameters[1].value;\r\n                return new JsonTool().fromJson(json, klass, this.moduleStore, interpreter);\r\n            }, false, true, `Konvertiert eine Json-Zeichenkette in ein ${klass.identifier}-Objekt (\"deserialisieren\"). Vor dem Deserialisieren eines Objekts werden die Attributinitialisierer angewandt und - falls vorhanden - ein parameterloser Konstruktor ausgeführt. Der Algorithmus kommt auch mit zyklischen Objektreferenzen zurecht.`, false));\r\n\r\n    }\r\n\r\n    addToJsonMethod(klass: Klass) {\r\n        klass.addMethod(new Method(\"toJson\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return new JsonTool().toJson(parameters[0]);\r\n            }, false, false, `Konvertiert ein Objekt (rekursiv mitsamt referenzierter Objekte) in eine Json-Zeichenkette. Nicht konvertiert werden Systemklassen (außer: ArrayList) sowie mit dem Schlüsselwort transient ausgezeichnete Attribute.`));\r\n\r\n    }\r\n\r\n\r\n    setupMethodsAndAttributes() {\r\n\r\n        let classesOrEnums: (ClassDeclarationNode | EnumDeclarationNode)[] = [];\r\n        classesOrEnums = classesOrEnums.concat(this.classes);\r\n        classesOrEnums = classesOrEnums.concat(this.enums);\r\n\r\n        for (let cn of classesOrEnums) {\r\n            for (let mn of cn.methods) {\r\n                let m: Method = this.setupMethod(mn, cn.resolvedType.module, cn.resolvedType);\r\n                if (m != null) {\r\n                    if(mn.commentBefore != null) m.documentation = \"\" + mn.commentBefore.value;\r\n                    cn.resolvedType.addMethod(m);\r\n                }\r\n            }\r\n\r\n            this.addFromJsonMethod(cn.resolvedType);\r\n            this.addToJsonMethod(cn.resolvedType);\r\n\r\n            for (let att of cn.attributes) {\r\n\r\n                this.resolveType(att.attributeType, cn.resolvedType.module, true);\r\n                let type = att.attributeType.resolvedType;\r\n                if (type == null) {\r\n                    continue;\r\n                }\r\n\r\n                let attribute: Attribute = new Attribute(att.identifier, type, null, att.isStatic, att.visibility, att.isFinal);\r\n                att.resolvedType = attribute;\r\n                if(att.commentBefore != null) attribute.documentation = \"\" + att.commentBefore.value;\r\n                attribute.annotation = att.annotation;\r\n                attribute.isTransient = att.isTransient;\r\n                if (cn.resolvedType.attributeMap.get(attribute.identifier) != null) {\r\n                    cn.resolvedType.module.errors[2].push({\r\n                        text: \"Es darf nicht mehrere Attribute mit demselben Bezeichner '\" + attribute.identifier + \"' in derselben Klassse geben.\",\r\n                        position: att.position, level: \"error\"\r\n                    });\r\n                }\r\n                cn.resolvedType.addAttribute(attribute);\r\n\r\n                this.pushUsagePosition(cn.resolvedType.module, att.position, attribute);\r\n                attribute.declaration = { module: cn.resolvedType.module, position: att.position };\r\n\r\n            }\r\n        }\r\n\r\n        for (let ic of this.interfaces) {\r\n            for (let mn of ic.methods) {\r\n                let m1: Method = this.setupMethod(mn, ic.resolvedType.module, ic.resolvedType);\r\n                if (m1 != null) {\r\n                    ic.resolvedType.addMethod(m1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setupMethod(mn: MethodDeclarationNode, m: Module, c: Klass | Interface): Method {\r\n\r\n        let typesOK = true;\r\n\r\n        typesOK = typesOK && this.resolveType(mn.returnType, m, true);\r\n\r\n        let parameters: Variable[] = [];\r\n        for (let par of mn.parameters) {\r\n            typesOK = typesOK && this.resolveType(par.parameterType, m, true);\r\n            if (typesOK) {\r\n                let parameter = {\r\n                    definition: par.position,\r\n                    identifier: par.identifier,\r\n                    usagePositions: new Map(),\r\n                    type: par.parameterType.resolvedType,\r\n                    declaration: { module: m, position: par.position },\r\n                    isFinal: par.isFinal,\r\n                    isEllipsis: par.isEllipsis\r\n                };\r\n                parameters.push(parameter);\r\n                this.pushUsagePosition(m, par.position, parameter);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let pl: Parameterlist = new Parameterlist(parameters);\r\n\r\n        if (typesOK) {\r\n            let method = new Method(mn.identifier, pl, mn.returnType.resolvedType, null, mn.isAbstract, mn.isStatic);\r\n            method.isConstructor = mn.identifier == c.identifier;\r\n            method.visibility = mn.visibility;\r\n            method.isConstructor = mn.isConstructor;\r\n            mn.resolvedType = method;\r\n            method.annotation = mn.annotation;\r\n\r\n            this.pushUsagePosition(m, mn.position, method);\r\n            method.declaration = {\r\n                module: m,\r\n                position: mn.position\r\n            }\r\n\r\n            return method;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    pushUsagePosition(m: Module, position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n\r\n        m.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(m);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(m, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveType(tn: TypeNode, m: Module, lastPass: boolean): boolean {\r\n        if (tn.resolvedType == null) {\r\n            let typeModule = this.moduleStore.getType(tn.identifier);\r\n            if (typeModule != null) {\r\n                let type = typeModule.type;\r\n                m.dependsOnModules.set(typeModule.module, true);\r\n                this.pushUsagePosition(m, tn.position, type);\r\n                type = getArrayType(type, tn.arrayDimension);\r\n                this.registerGenericType(tn, m, false);\r\n                tn.resolvedType = type;\r\n                return true;\r\n            }\r\n\r\n            let typeParameterList = this.moduleToTypeParameterListMap.get(m);\r\n            if (typeParameterList != null) {\r\n                for (let tg of typeParameterList) {\r\n                    if (tg.identifier == tn.identifier) {\r\n                        let position = tn.position;\r\n                        if (position.line > tg.scopeFrom.line || position.line == tg.scopeFrom.line && position.column >= tg.scopeFrom.column) {\r\n                            if (position.line < tg.scopeTo.line || position.line == tg.scopeTo.line && position.column <= tg.scopeTo.column) {\r\n                                this.pushUsagePosition(m, tn.position, tg.type);\r\n                                tn.resolvedType = tg.type;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (lastPass) {\r\n\r\n                let typKlasse = (tn.identifier.length > 0 && tn.identifier[0].toUpperCase() == tn.identifier[0]) ? \"Die Klasse\" : \"Der Typ\";\r\n\r\n                m.errors[2].push({\r\n                    position: tn.position,\r\n                    text: typKlasse + \" \" + tn.identifier + \" konnte nicht gefunden werden.\" +\r\n                        (tn.identifier == \"string\" ? \" Meinten Sie String (großgeschrieben)?\" : \"\"),\r\n                    level: \"error\",\r\n                    quickFix: (tn.identifier == \"string\") ? {\r\n                        title: \"String groß schreiben\",\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: tn.position.line, startColumn: tn.position.column - 1, endLineNumber: tn.position.line, endColumn: tn.position.column + 6 },\r\n                                        text: \"String\"\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n\r\n                    } : null\r\n                });\r\n            }\r\n            tn.resolvedType = null;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    resolveExtendsImplements() {\r\n        for (let cn of this.classes) {\r\n\r\n            let c = cn.resolvedType;\r\n            for (let iNode of cn.implements) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei implements... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.implements.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n            if (cn.extends != null) {\r\n                this.resolveType(cn.extends, c.module, true);\r\n                let eType = cn.extends.resolvedType;\r\n                if (eType == null || !(eType instanceof Klass)) {\r\n                    c.module.errors[2].push({\r\n                        position: cn.extends.position,\r\n                        text: \"Der Typ \" + cn.extends.identifier + \" ist keine Klasse, darf also nicht hinter extends stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n\r\n                c.setBaseClass(<Klass>eType);\r\n                cn.extends.resolvedType = eType;\r\n            } else {\r\n                c.setBaseClass(<Klass>this.moduleStore.getType(\"Object\").type)\r\n            }\r\n\r\n        }\r\n        for (let interf of this.interfaces) {\r\n\r\n            let c = interf.resolvedType;\r\n            for (let iNode of interf.extends) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei extends... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.extends.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    setupClassesAndInterfaces() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            if (m.classDefinitionsAST != null) {\r\n                for (let cdn of m.classDefinitionsAST) {\r\n                    switch (cdn.type) {\r\n                        case TokenType.keywordClass:\r\n                            this.classes.push(cdn);\r\n                            let c = new Klass(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) c.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = c;\r\n                            c.visibility = cdn.visibility;\r\n                            c.isAbstract = cdn.isAbstract;\r\n                            m.typeStore.addType(c);\r\n                            this.pushUsagePosition(m, cdn.position, c);\r\n                            c.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, c);\r\n                            if (cdn.extends != null) this.registerGenericType(cdn.extends, m, true);\r\n                            if (cdn.implements != null) {\r\n                                for (let im of cdn.implements) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n                        case TokenType.keywordEnum:\r\n                            this.enums.push(cdn);\r\n                            let e = new Enum(cdn.identifier, m, cdn.values);\r\n                            if(cdn.commentBefore != null) e.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = e;\r\n                            e.visibility = cdn.visibility;\r\n                            m.typeStore.addType(e);\r\n                            this.pushUsagePosition(m, cdn.position, e);\r\n                            e.declaration = { module: m, position: cdn.position };\r\n                            break;\r\n                        case TokenType.keywordInterface:\r\n                            this.interfaces.push(cdn);\r\n                            let i = new Interface(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) i.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = i;\r\n                            m.typeStore.addType(i);\r\n                            this.pushUsagePosition(m, cdn.position, i);\r\n                            i.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, i);\r\n                            if (cdn.extends != null) {\r\n                                for (let im of cdn.extends) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveTypeVariables(): GenericTypeList {\r\n\r\n        let todoList = this.typeParameterList.slice(0);\r\n        let done = false;\r\n\r\n        let unresolvedGenericTypes: GenericTypeList = this.genericTypesInClassDefinitions.slice(0);\r\n\r\n        while (!done) {\r\n            this.resolveUnresolvedTypes(false);\r\n            unresolvedGenericTypes = this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tv = todoList[i];\r\n                let ready: boolean = true;\r\n                let ext: TypeNode[] = tv.tpn.extends == null ? [] : [tv.tpn.extends];\r\n                if (tv.tpn.implements != null) ext = ext.concat(tv.tpn.implements);\r\n                for (let extType of ext) {\r\n                    if (extType.genericParameterTypes != null && !(extType.genericParameterTypesResolved == true)) {\r\n                        ready = false;\r\n                    }\r\n                }\r\n\r\n                if (ready) {\r\n                    this.resolveTypeVariable(tv);\r\n                    todoList.splice(todoList.indexOf(tv), 1);\r\n                    i--;\r\n                    done = false;\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return unresolvedGenericTypes;\r\n    }\r\n\r\n\r\n    resolveTypeVariable(tp: TypeParameterInfo) {\r\n\r\n\r\n        let typeParameterKlass: Klass;\r\n        if (tp.tpn.extends != null && tp.tpn.extends.resolvedType != null) {\r\n            typeParameterKlass = (<Klass>tp.tpn.extends.resolvedType).clone();\r\n        } else {\r\n            typeParameterKlass = objectType.clone();\r\n        }\r\n\r\n        typeParameterKlass.identifier = tp.tpn.identifier;\r\n        typeParameterKlass.isTypeVariable = true;\r\n\r\n        typeParameterKlass.declaration = {\r\n            module: tp.ci.module,\r\n            position: tp.tpn.position\r\n        };\r\n\r\n\r\n        if (tp.tpn.implements != null) {\r\n            for (let impl of tp.tpn.implements) {\r\n                if (typeParameterKlass.implements.indexOf(<Interface>impl.resolvedType) < 0) {\r\n                    typeParameterKlass.implements.push(<Interface>impl.resolvedType);\r\n                }\r\n            }\r\n        }\r\n\r\n        let tp1: TypeVariable = {\r\n            identifier: tp.tpn.identifier,\r\n            type: typeParameterKlass,\r\n            scopeFrom: tp.cdn.position,\r\n            scopeTo: tp.cdn.scopeTo\r\n        };\r\n\r\n        tp.ci.typeVariables[tp.index] = tp1;\r\n        tp.ci.typeVariablesReady = true;\r\n        for (let tv of tp.ci.typeVariables) if (tv == null) tp.ci.typeVariablesReady = false;\r\n\r\n        let typeParameterList = this.moduleToTypeParameterListMap.get(tp.ci.module);\r\n        if (typeParameterList == null) {\r\n            typeParameterList = [];\r\n            this.moduleToTypeParameterListMap.set(tp.ci.module, typeParameterList);\r\n        }\r\n\r\n        typeParameterList.push(tp1);\r\n\r\n        this.pushUsagePosition(tp.ci.module, tp.tpn.position, typeParameterKlass);\r\n\r\n    }\r\n\r\n    registerTypeVariables(cdn: ClassDeclarationNode | InterfaceDeclarationNode, classOrInterface: Klass | Interface) {\r\n        let index = 0;\r\n        for (let typeParameter of cdn.typeParameters) {\r\n            if (typeParameter.extends != null) this.registerGenericType(typeParameter.extends, classOrInterface.module, true);\r\n            if (typeParameter.implements != null) {\r\n                for (let im of typeParameter.implements) {\r\n                    this.registerGenericType(im, classOrInterface.module, true);\r\n                }\r\n            }\r\n\r\n            classOrInterface.typeVariablesReady = false;\r\n            classOrInterface.typeVariables.push(null); // leave room\r\n\r\n            this.typeParameterList.push({\r\n                tpn: typeParameter, tp: {\r\n                    identifier: typeParameter.identifier,\r\n                    type: null,\r\n                    scopeFrom: cdn.position,\r\n                    scopeTo: cdn.scopeTo\r\n                }, ci: classOrInterface, cdn: cdn,\r\n                index: index++\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTypesInModules() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            let ut: TypeNode[] = [];\r\n            this.unresolvedTypes.set(m, ut);\r\n            for (let tn of m.typeNodes) {\r\n                if (tn.resolvedType == null) {\r\n                    let typeModule = this.moduleStore.getType(tn.identifier);\r\n                    if (typeModule != null) {\r\n                        let type = typeModule.type;\r\n                        this.pushUsagePosition(m, tn.position, type);\r\n                        tn.resolvedType = getArrayType(type, tn.arrayDimension);\r\n                        this.registerGenericType(tn, m, false);\r\n                    } else {\r\n                        ut.push(tn);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    registerGenericType(typeNode: TypeNode, module: Module, isInClassDefinition: boolean) {\r\n        if (typeNode.genericParameterTypes != null) {\r\n            if (isInClassDefinition) {\r\n                this.genericTypesInClassDefinitions.push({ typeNode: typeNode, module: module });\r\n            } else {\r\n                this.genericTypes.push({ typeNode: typeNode, module: module });\r\n            }\r\n        } else {\r\n            // new ArrayList<>() (without type Parameters!) should be castable to ANY other type with same name regarldess of it's type variable types (Java 7-style!)\r\n            let type = typeNode.resolvedType;\r\n            if (type != null && type instanceof Klass && type.typeVariables.length > 0) {\r\n                let type1 = <Klass>type.clone();\r\n                type1.typeVariables = []; // now this type can cast to ANY other type with same name regardless of it's type variable types!\r\n                typeNode.resolvedType = type1;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getArrayType(type: Type, arrayDimension: number) {\r\n    while (arrayDimension > 0) {\r\n        type = new ArrayType(type);\r\n        arrayDimension--;\r\n    }\r\n    return type;\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class ListIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(listHelper: ListHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"ListIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"IteratorHelper\"] = new IteratorHelper(listHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ListIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass IteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private listHelper: ListHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = listHelper.objectArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos - 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos - 1, 1);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos + 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos + 1, 1);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos++].value;\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos--].value;\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.listHelper.objectArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType, DoubleType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType, getTypeIdentifier } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { getTypeFromValue } from \"../../compiler/types/TypeHelper.js\";\r\n\r\nexport class ArrayListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ArrayList\", module, \"Liste mit Zugriff auf das n-te Objekt in konstanter Zeit, Einfügen in konstanter Zeit und Suchen in linearer Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\"));\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"ArrayList\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue ArrayList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let r: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r, index);\r\n\r\n            }, false, false, \"Fügt das Element an der Position index der Liste ein. Tipp: Das erste Element der Liste hat index == 0.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n                \r\n                return ah.get(index)?.value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index);\r\n\r\n                return null;\r\n\r\n            }, true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ListHelper {\r\n\r\n    valueArray: Value[] = [];\r\n    objectArray: any[] = []; // wird mitgeführt, um schnelle indexOf-Operationen zu ermöglichen\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n                break;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.objectArray.map(o => \"\" + o).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => {}, true);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    addAll(object: RuntimeObject): boolean {\r\n\r\n        if(object.intrinsicData[\"ListHelper\"] instanceof ListHelper){\r\n            let ah: ListHelper = object.intrinsicData[\"ListHelper\"];\r\n            if (ah != null) {\r\n                this.valueArray = this.valueArray.concat(ah.valueArray.map(v => {return {type: v.type, value: v.value}}));\r\n                this.objectArray = this.objectArray.concat(ah.objectArray);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        let getIteratorMethod = object.class.getMethod(\"iterator\", new Parameterlist([]));\r\n        if(getIteratorMethod == null){\r\n            this.interpreter.throwException(\"Der an die Methode addAll übergebene Paramter besitzt keine Methode iterator().\");\r\n            return false;\r\n        }\r\n\r\n        if(getIteratorMethod.invoke){\r\n\r\n            let iterator: RuntimeObject = getIteratorMethod.invoke([{value: object, type: object.class}]);\r\n            let nextMethod = iterator.class.getMethod(\"next\", new Parameterlist([]));\r\n            let hasNextMethod = iterator.class.getMethod(\"hasNext\", new Parameterlist([]));\r\n            let type = nextMethod.returnType;\r\n\r\n            let iteratorAsValue: Value = {value: iterator, type: iterator.class};\r\n\r\n            while(hasNextMethod.invoke([iteratorAsValue])){\r\n                let obj: any = nextMethod.invoke([iteratorAsValue]);\r\n                this.objectArray.push(obj);\r\n                this.valueArray.push({\r\n                    value: obj,\r\n                    type: getTypeFromValue(obj)\r\n                })\r\n            }\r\n\r\n            return;\r\n        } else {\r\n            let iteratorWithError = this.execute(getIteratorMethod, [{value: object, type: object.class}]);            \r\n            if(iteratorWithError.error != null){this.interpreter.throwException(\"Fehler beim holen des Iterators.\"); return false;}\r\n            let iterator = iteratorWithError.value.value;\r\n\r\n            let nextMethod = iterator.class.getMethod(\"next\", new Parameterlist([]));\r\n            let hasNextMethod = iterator.class.getMethod(\"hasNext\", new Parameterlist([]));\r\n            let type = nextMethod.returnType;\r\n            let iteratorAsValue: Value = {value: iterator, type: iterator.class};\r\n\r\n            while(true){\r\n                let hasNext = this.execute(hasNextMethod, [iteratorAsValue]);\r\n                if(hasNext.error != null){this.interpreter.throwException(\"Fehler beim Ausführen der hasNext-Methode\"); return false;}\r\n                if(hasNext.value.value != true) break;\r\n                let objWithError = this.execute(nextMethod, [iteratorAsValue]);\r\n                if(objWithError.error != null){this.interpreter.throwException(\"Fehler beim Ausführen der next-Methode\"); return false;}\r\n                let obj = objWithError.value.value;\r\n                this.objectArray.push(obj);\r\n                this.valueArray.push({value: obj, type: type});\r\n            }\r\n\r\n            return true;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    execute(method: Method, parameters: Value[]): {error: string, value: Value} {\r\n        if(method.invoke){\r\n            return {value: {value: method.invoke([]), type: method.returnType}, error: null};\r\n        } else {\r\n            return this.interpreter.executeImmediatelyInNewStackframe(method.program, parameters);\r\n        }\r\n    }\r\n\r\n    get(index: number): Value {\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            return this.valueArray[index];\r\n        }\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        return null;\r\n    }\r\n\r\n    remove(index: number): Value {\r\n\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return null;\r\n        }\r\n\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n\r\n        return null;\r\n    }\r\n\r\n    add(r: Value, index?): boolean {\r\n        if(index == null){\r\n            this.valueArray.push({type: r.type, value: r.value});\r\n            this.objectArray.push(r.value);\r\n        } else {\r\n            if(index <= this.objectArray.length && index >= 0){\r\n                this.valueArray.splice(index, 0, {type: r.type, value: r.value});\r\n                this.objectArray.splice(index, 0, r.value);\r\n            } else {\r\n                this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    pop(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    peek(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    indexOf(o: Value): number {\r\n        return this.objectArray.indexOf(o.value);\r\n    }\r\n\r\n    size(): number {\r\n        return this.objectArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.objectArray.splice(index, 1);\r\n            this.valueArray.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.objectArray.indexOf(object.value) >= 0;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.objectArray = [];\r\n    }\r\n\r\n    peek_last_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n    peek_first_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[0];\r\n        }\r\n    }\r\n    \r\n    removeLast_or_error(){\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    };\r\n\r\n    addLast(object: Value) {\r\n        this.valueArray.push({type: object.type, value: object.value});\r\n        this.objectArray.push(object.value);\r\n        return true;\r\n    }\r\n    addFirst(object: Value): any {\r\n        this.valueArray.splice(0, 0, {type: object.type, value: object.value});\r\n        this.objectArray.splice(0, 0, object.value);\r\n        return true;\r\n    }\r\n    removeFirstOccurrence(object: Value): boolean {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if(index >= 0){\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    peek_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    poll_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    removeFirst_or_error(): any {\r\n        if(this.objectArray.length == 0){\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        } else {\r\n            let object = this.objectArray[0];\r\n            this.objectArray.splice(0, 1);\r\n            this.valueArray.splice(0, 1);\r\n            return object;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\n\r\nexport function getTypeFromValue(value: any){\r\n    if(typeof value == \"string\"){\r\n        return stringPrimitiveType;\r\n    } else if(typeof value == \"number\"){\r\n        if(Number.isInteger(value)) return intPrimitiveType;\r\n        return floatPrimitiveType;\r\n    } else if(typeof value == \"boolean\"){\r\n        return booleanPrimitiveType;\r\n    } else if(value instanceof RuntimeObject){\r\n        return value.class;\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class CollectionClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Collection\", module, \"Interface für Listen, Maps, Sets usw. mit Methoden zum Einfügen von Objekten, Zugriff auf Objekte und zur Ermittlung der Anzahl der Objekte\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iterableInterface = (<Interface>module.typeStore.getType(\"Iterable\")).clone();\r\n        iterableInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(iterableInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt der Collection ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Collection dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        // TODO: Implement\r\n        // this.addMethod(new Method(\"removeAll\", new Parameterlist([\r\n        //     { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), booleanPrimitiveType,\r\n        //     null,  // no implementation!\r\n        //     true, false, \"Löscht alle Elemente aus dieser Collection, die in c enthalten sind.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n    \r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IterableClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterable\", module, \"Interface mit Funktionalität zum iterieren (d.h. Durchlaufen aller Elemente)\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IteratorClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterator\", module);\r\n\r\n        let typeA: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeA.identifier = \"E\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ListClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"List\", module, \"Interface mit Methoden einer Liste (d.h. Anfügen von Elementen nur am Ende)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element der Liste an der Stelle index zurück. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n            this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class StackClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Stack\", module, \"Stack (Stapelspeicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n        let vectorType = <Klass>module.typeStore.getType(\"Vector\");\r\n\r\n        this.setBaseClass(vectorType);\r\n        this.typeVariables = vectorType.typeVariables;\r\n        let typeE = this.typeVariables[0].type;\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.add(r);\r\n\r\n                return r.value;\r\n\r\n            }, false, false, \"Pushed ein Element oben auf den Stack. Gibt das gerade gepushte Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            }, false, false, \"Nimmt das oberste Element vom Stack und gibt es zurück.\"));\r\n\r\n            this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek();\r\n\r\n            }, false, false, \"Gibt das oberste Element des Stacks zurück, nimmt es aber nicht vom Stack herunter.\"));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"search\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                let index = ah.indexOf(r);\r\n                return index == -1 ? index : ah.objectArray.length - index;\r\n\r\n            },\r\n            true, false, \"Gibt die Position des Objekts auf dem Stack zurück. Dabei hat das oberste Element den Index 1, das nächstunterste den Index 2 usw. . Falls sich das Objekt nicht auf dem Stack befindet, wird -1 zurückgegeben.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, TypeVariable, Interface } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\n\r\nexport class VectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector\", module, \"Liste mit Zugriff auf das n-te Element in konstanter Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"Vector\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert ein neues Vector-Objekt', true));\r\n\r\n            this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n            ]), iteratorType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n    \r\n                    return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n    \r\n                }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n    \r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index).value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index).value;\r\n\r\n                return null;\r\n\r\n            }, false, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, false, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class SetClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Set\", module, \"Interface mit Methoden eines Set, d.h. einer Menge, die jedes Element maximal einmal enthält\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set das Objekt o enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set alle Elemente der übergebenen Collection enthält.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class SetIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(MapHelper: SetHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"SetIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"SetIteratorHelper\"] = new SetIteratorHelper(MapHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"SetIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass SetIteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private MapHelper: SetHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = MapHelper.valueArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos - 1].value);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos + 1].value);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos++].value;\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos--].value;\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.MapHelper.valueArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class SetHelper {\r\n\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, boolean> = new Map(); // Maps key objects to index in keyArray/valueArray\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.valueArray.map(o => \"\" + o.value).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.valueArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    // Only for Set\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ret: boolean = false;\r\n        let ah: SetHelper | ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            for (let value of ah.valueArray) {\r\n                ret = ret || this.addToSet(value);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    addToSet(r: Value): boolean {\r\n        if (this.contains(r)) return false;\r\n\r\n        this.valueArray.push(r);\r\n        this.map.set(r.value, true);\r\n        return true;\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n\r\n        if(this.map.get(object.value) == null) return false;\r\n\r\n        for(let i = 0; i < this.valueArray.length; i++){\r\n            if(this.valueArray[i].value == object.value){\r\n                this.valueArray.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        this.map.delete(object.value);\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.map.get(object.value) != null;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class HashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashSet\", module, \"Set mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"HashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues HashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class LinkedHashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedHashSet\", module, \"Ein LinkedHashSet speichert jedes Element nur genau ein Mal.\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"LinkedHashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues LinkedHashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class QueueClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Queue\", module);\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class DequeClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Deque\", module, \"Interface für Liste mit zweiseitigem Zugriff (insbesondere Anfügen an beiden Enden)\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let QueueInterface = (<Interface>module.typeStore.getType(\"Queue\")).clone();\r\n        QueueInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(QueueInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge (Ende -> Anfang) durchläuft.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class LinkedListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedList\", module, \"Verkettete Liste\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let dequeInterface = (<Interface>module.typeStore.getType(\"Deque\")).clone();\r\n        dequeInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(dequeInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"LinkedList\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue LinkedList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"descending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge durchläuft (Ende -> Anfang).\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste am Ende ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.poll_or_null();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addFirst(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addLast(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeLast_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_first_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_last_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class ConsoleClass extends Klass {\r\n\r\n    constructor(module: Module){\r\n        super(\"Console\", module, \"Klasse zur Textausgabe in der Konsole.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod( new Method(\"log\", new Parameterlist([{identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false}]), null, \r\n                (parameters) => { \r\n                    // console.log(<string>(parameters[0].value)); \r\n                    module.main.getBottomDiv()?.console.$consoleTab.find('.jo_console-top').append(\"<div>\" + <string>(parameters[1].value) + \"</div>\"); \r\n                }, false, true));\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\n\r\ntype PrintCommand = {\r\n    text: string;\r\n    color: string;\r\n    newLine: boolean;\r\n}\r\n\r\nexport class PrintManager {\r\n\r\n    color: string = \"\";\r\n    lastSpan: string = \"\";\r\n    $lastSpan: JQuery<HTMLElement>;\r\n\r\n    $lastDiv: JQuery<HTMLElement>;\r\n    $outputDiv: JQuery<HTMLElement>;\r\n\r\n    maxLines: number = 2000;\r\n    $lines: JQuery<HTMLElement>[] = [];\r\n\r\n    newLines: number = 0;\r\n\r\n    printCommands: PrintCommand[] = [];\r\n\r\n    currentLinelength: number = 0;\r\n    beginOfLineState: boolean = true; // Spaces at begin of line are converted to &nbsp;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase) {\r\n        jQuery(() => {\r\n            this.$outputDiv = $runDiv.find('.jo_output');\r\n            this.clear();\r\n\r\n            let that = this;\r\n\r\n            let n: number = 0;\r\n\r\n            let dirty = false;\r\n            let lastPrinting = performance.now();\r\n\r\n            setInterval(() => {\r\n                if (that.printCommands.length > 0) {\r\n                    that.doPrinting();\r\n                    if (performance.now() - lastPrinting > 200) {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                    } else {\r\n                        dirty = true;\r\n                    }\r\n                    lastPrinting = performance.now();\r\n                }\r\n\r\n                if (n++ % 20 == 0 && dirty) {\r\n                    setTimeout(() => {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                        dirty = false;\r\n                    }, 200);\r\n                }\r\n\r\n            }, 50);\r\n\r\n\r\n        });\r\n    }\r\n\r\n    getGraphicsDiv():JQuery<HTMLElement> {\r\n        return this.$runDiv.find('.jo_graphics');\r\n    }\r\n\r\n    showProgramEnd() {\r\n        let $programEndDiv = this.$runDiv.find('.jo_run-programend');\r\n        $programEndDiv.show();\r\n        $programEndDiv.addClass('jo_programendkf');\r\n        setTimeout(() => {\r\n            $programEndDiv.removeClass('jo_programendkf');\r\n            $programEndDiv.hide();\r\n        }, 3000);\r\n    }\r\n\r\n    doPrinting() {\r\n\r\n        // If there are more than maxLines in next output batch: \r\n        // Delete surplus lines before printing them and empty output-div\r\n        if (this.newLines >= this.maxLines) {\r\n\r\n            this.$outputDiv.empty();\r\n\r\n            let i = this.printCommands.length - 1;\r\n            let nl = 0;\r\n\r\n            while (i >= 0) {\r\n\r\n                if (this.printCommands[i].newLine) {\r\n                    nl++;\r\n                    if (nl >= this.maxLines) {\r\n                        this.printCommands.splice(0, i + 1);\r\n                        break;\r\n                    }\r\n                }\r\n                i--;\r\n            }\r\n\r\n        }\r\n\r\n        this.newLines = 0;\r\n\r\n        // reopen last printed span-element\r\n        if(this.$lastSpan != null){\r\n            this.$lastSpan.remove();\r\n            if(this.lastSpan.endsWith(\"</span>\")) this.lastSpan = this.lastSpan.substring(0, this.lastSpan.length - 7);\r\n        }\r\n\r\n\r\n        for (let pc of this.printCommands) {\r\n\r\n            // replace spaces with &nbsp;'s\r\n            // pc.text = pc.text.replace(/ /g, \"&nbsp;\");\r\n\r\n\r\n            if (this.beginOfLineState && pc.text.startsWith(\" \")) {\r\n                let match = pc.text.match(/^( *)(.*)$/);\r\n                if (match[2].length > 0) this.beginOfLineState = false;\r\n            } else {\r\n                if (pc.text.length > 0) this.beginOfLineState = false;\r\n            }\r\n\r\n            pc.text = pc.text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n\r\n            if (pc.color == null) pc.color = \"var(--defaultOutputColor)\";\r\n\r\n            if (this.lastSpan == \"\" || this.color != pc.color) {\r\n                if (this.lastSpan != \"\") this.lastSpan += \"</span>\";      // new color => close old span\r\n                this.lastSpan += '<span style=\"color: ' + pc.color + '\">';\r\n                if(pc.newLine && pc.text == \"\") this.lastSpan += \"\\u200b\"; // makes empty lines possible; \\u200b is a space with 0 width but full height.\r\n                this.color = pc.color;\r\n            }\r\n\r\n            if (this.currentLinelength <= 10000) {\r\n                this.lastSpan += pc.text;\r\n                this.currentLinelength += pc.text.length;\r\n            }\r\n\r\n\r\n            if (pc.newLine) {\r\n                this.beginOfLineState = true;\r\n                if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n                this.$lastSpan = jQuery(this.lastSpan);\r\n                this.$lastDiv.append(this.$lastSpan);\r\n                \r\n                this.lastSpan = \"\";\r\n                this.$lastSpan = null;\r\n\r\n                this.$lastDiv = jQuery('<div></div>');\r\n\r\n                let $input = this.main.getInterpreter().inputManager.$input;\r\n                if($input != null){\r\n                    this.$lastDiv.insertBefore($input);\r\n                } else {\r\n                    this.$outputDiv.append(this.$lastDiv);\r\n                }\r\n\r\n                this.$lines.push(this.$lastDiv);\r\n                this.currentLinelength = 0;\r\n            }\r\n\r\n        }\r\n\r\n        if (this.lastSpan != \"\") {\r\n            if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n            this.$lastSpan = jQuery(this.lastSpan);\r\n            this.$lastDiv.append(this.$lastSpan);\r\n        }\r\n\r\n        if (this.$lines.length > this.maxLines * 1.5) {\r\n            let that = this;\r\n            let linesToDelete = that.$lines.length - that.maxLines;\r\n\r\n            let $linesToDelete = that.$lines.splice(0, linesToDelete);\r\n\r\n            for (let $line of $linesToDelete) {\r\n                $line.remove();\r\n            }\r\n\r\n        }\r\n\r\n        this.printCommands = [];\r\n    }\r\n\r\n    clear() {\r\n        this.$outputDiv.empty();\r\n        this.$lastDiv = jQuery('<div></div>');\r\n        this.$lines.push(this.$lastDiv);\r\n        this.$outputDiv.append(this.$lastDiv);\r\n        this.currentLinelength = 0;\r\n        this.color = \"\";\r\n        this.lastSpan = \"\";\r\n        this.printCommands = [];\r\n    }\r\n\r\n    print(text: string | null, color?: string|number) {\r\n        if (text == null) return;\r\n\r\n        if(typeof color == \"number\"){\r\n            color = color.toString(16);\r\n            while(color.length < 6) color = \"0\" + color;\r\n            color = \"#\" + color;\r\n        }\r\n\r\n        text = text.toString();\r\n        if (text.indexOf(\"\\n\") >= 0) {\r\n            let tList = text.split(\"\\n\");\r\n            for (let i = 0; i < tList.length; i++) {\r\n                let t = tList[i];\r\n                let newLine = i < tList.length - 1;\r\n                if (t == \"\" && i == tList.length - 1) continue;\r\n                this.printCommands.push({\r\n                    text: t,\r\n                    color: color,\r\n                    newLine: newLine\r\n                });\r\n                if (newLine) this.newLines++;\r\n            }\r\n        } else {\r\n            this.printCommands.push({\r\n                text: text,\r\n                color: color,\r\n                newLine: false\r\n            });\r\n        }\r\n    }\r\n\r\n    println(text: string | null, color?: string|number) {\r\n        if (text == null) text = \"\";\r\n        this.print(text + \"\\n\", color);\r\n    }\r\n\r\n}","import { Type, Method, Value } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType, charPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputManager {\r\n\r\n    $input: JQuery<HTMLInputElement>;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public readInput(method: Method, parameters: Value[], callback: (value: Value) => void){\r\n\r\n        let returnType = method.getReturnType();\r\n        let message = parameters[1].value;\r\n        let defaultValue = parameters.length == 3 ? parameters[2].value : null;\r\n\r\n        let printManager: PrintManager = this.main.getInterpreter().printManager;\r\n        if(message != null && message != \"\"){\r\n            printManager.beginOfLineState = true;\r\n            printManager.println(\"\\n\" + message);\r\n            printManager.doPrinting();\r\n        }\r\n\r\n        this.$input = jQuery('<input class=\"jo_newInput\" type=\"text\"/>');\r\n\r\n        let $od = printManager.$outputDiv;\r\n        $od.append(this.$input);\r\n\r\n        let dvt = defaultValue == null ? \"\" : defaultValue;\r\n        this.$input.val(dvt);\r\n\r\n        let that = this;\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').on('mousedown', (e)=>{\r\n        //     e.preventDefault();\r\n        //     that.onSubmit(returnType, callback);\r\n        // });\r\n        \r\n        this.$input.on('keydown', (e) => {\r\n            if(e.key == \"Enter\"){\r\n                that.onSubmit(returnType, callback);\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            that.$input.focus();\r\n        }, 200);\r\n\r\n        printManager.$outputDiv.on('mousedown.inputmanager', (e) => {\r\n            setTimeout(() => {\r\n                that.$input?.focus();\r\n            }, 200);\r\n        })\r\n\r\n    }\r\n\r\n    onSubmit(type: Type, callback: (value: Value) => void){\r\n        let v: string = <string>(this.$input.val());\r\n        let printManager = this.main.getInterpreter().printManager;\r\n\r\n        let valueAndError = this.parse(v, type);\r\n\r\n        if(valueAndError.error != null){\r\n            // jQuery('<div style=\"color: red\">' + valueAndError.error + '</div>').insertBefore(this.$input);\r\n            this.$input.detach();\r\n            printManager.println(valueAndError.error, \"#ff0000\");\r\n            printManager.doPrinting();\r\n            printManager.$outputDiv.append(this.$input);\r\n            this.$input[0].scrollIntoView();\r\n            this.$input.focus();\r\n            return;\r\n        }\r\n        \r\n        printManager.$outputDiv.off('mousedown.inputmanager');\r\n        printManager.println(v);\r\n        this.$input.off('keydown');\r\n        this.hide();\r\n\r\n        callback(valueAndError.value);\r\n\r\n    }\r\n\r\n    parse(v: string, type: Type):{value: Value, error: string} {\r\n\r\n        if(type == stringPrimitiveType){\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v.length == 0) return {error: \"Leere Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            if(v.length > 1) return {error: \"Zu lange Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v != \"true\" && v != \"false\") return {error: \"Erwartet wird true oder false.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v == \"true\", type: type}\r\n            }\r\n        }\r\n\r\n        v = v.replace(\",\", \".\");\r\n\r\n        let n = Number(v);\r\n\r\n        if(n == null){\r\n            return {error: \"Erwartet wird eine Zahl.\", value: null};\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(n != Math.round(n)) return {error: \"Erwartet wird eine ganze Zahl.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: Math.round(n), type: type}\r\n            }\r\n        }\r\n\r\n        return {\r\n            error: null,\r\n            value: {value: n, type: type}\r\n        }\r\n\r\n    }\r\n\r\n\r\n    hide(){\r\n\r\n        if(this.$input != null){\r\n            this.$input.remove();\r\n            this.$input = null;\r\n        }\r\n\r\n        // this.$runDiv.find('.jo_run-input').css('display', 'none');\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').off('mousedown');\r\n        \r\n        // this.$runDiv.find('.jo_run-input-input').off('keydown');\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box'); \r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: MainBase, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        if (id == \"speedControlHelper\" && helperHistory[\"speedControlHelperDone\"]) {\r\n            id = \"stepButtonHelper\";\r\n        }\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"folderButton\":\r\n                    text = `Mit diesem Button können Sie in der Liste der Workspaces Ordner anlegen. \r\n                    <ul>\r\n                    <li>Bestehende Workspaces lassen sich mit der Maus in Ordner ziehen.</li>\r\n                    <li>Wollen Sie einen Workspace in die oberste Ordnerebene bringen, so ziehen Sie ihn einfach auf den \"Workspaces\"-Balken.</li>\r\n                    <li>Über das Kontextmenü der Ordner lassen sich Workspaces und Unterordner anlegen.</li>\r\n                    </ul>`,\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"repositoryButton\":\r\n                    text = `Wenn der aktuelle Workspace mit einem Repository verknüft ist, erscheint hier der \"Synchronisieren-Button\". Ein Klick darauf öffnet einen Dialog, in dem die Dateien des Workspace mit denen des Repositorys abgeglichen werden können.`;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"speedControlHelper\":\r\n                    text = `Mit dem Geschwindigkeitsregler können  \r\n                            Sie einstellen, wie schnell das Programm abläuft. \r\n                            Bei Geschwindigkeiten bis 10 Steps/s wird \r\n                            während des Programmablaufs der Programzeiger gezeigt\r\n                            und die Anzeige der Variablen auf der linken \r\n                            Seite stets aktualisiert.`;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.speedControl.$grip;\r\n                    break;\r\n                case \"newFileHelper\":\r\n                    text = `Es gibt noch keine Programmdatei im Workspace. <br> Nutzen Sie den Button \r\n                        <span class='img_add-file-dark jo_inline-image'></span> um eine Programmdatei anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"newWorkspaceHelper\":\r\n                    text = `Es gibt noch keinen Workspace. <br> Nutzen Sie den Button\r\n                        <span class='img_add-workspace-dark jo_inline-image'></span> um einen Workspace anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"stepButtonHelper\":\r\n                    text = `Mit den Buttons \"Step over\"\r\n                        (<span class='img_step-over-dark jo_inline-image'></span>, Taste F8), \r\n                        \"Step into\" \r\n                        (<span class='img_step-into-dark jo_inline-image'></span>, Taste F7) und \r\n                        \"Step out\" \r\n                        (<span class='img_step-out-dark jo_inline-image'></span>, Taste F9)  \r\n                        können Sie das Programm schrittweise ausführen und sich nach jedem Schritt die Belegung der Variablen ansehen. <br>\r\n                        <ul><li><span class='img_step-over-dark jo_inline-image'></span> Step over führt den nächsten Schritt aus, insbesondere werden Methodenaufrufe in einem Schritt durchgeführt.</li>\r\n                        <li><span class='img_step-into-dark jo_inline-image'></span> Step into führt auch den nächsten Schritt aus, geht bei Methodenaufrufen aber in die Methode hinein und führt auch die Anweisungen innerhalb der Methode schrittweise aus.</li>\r\n                        <li><span class='img_step-out-dark jo_inline-image'></span> Befindet sich die Programmausführung innerhalb einer Methode, so bewirkt ein Klick auf Step out, dass der Rest der Methode ausgeführt wird und die Programmausführung erst nach der Aufrufstelle der Methode anhält.</li>\r\n                        </ul>\r\n                        `;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.$buttonStepOver;\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n                    $element = main.bottomDiv.console.$consoleTab.find('.jo_monaco-editor');\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class KeyboardTool {\r\n    \r\n    element: JQuery<any>;\r\n\r\n    pressedKeys: {[key: string]: boolean} = {};\r\n\r\n    keyPressedCallbacks: ((key: string) => void)[] = [];\r\n    keyUpCallbacks: ((key: string) => void)[] = [];\r\n    keyDownCallbacks: ((key: string) => void)[] = [];\r\n\r\n    constructor(element: JQuery<any>, private main: MainBase){\r\n        this.registerListeners(element);\r\n    }\r\n\r\n    unregisterListeners(){\r\n        this.element.off(\"keydown\");\r\n        this.element.off(\"keyup\");\r\n        this.element.off(\"keypressed\");\r\n    }\r\n\r\n    private registerListeners(element: JQuery<any>){\r\n        this.element = element;\r\n        let that = this;\r\n        element.on(\"keydown\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = true;\r\n\r\n            for(let kpc of that.keyDownCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // prevent <html>-Element from scrolling in embedded mode\r\n            if(this.main.isEmbedded() && this.main.getInterpreter().state == InterpreterState.running && !this.main.getMonacoEditor().hasTextFocus()){\r\n                if([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.key) >= 0)\r\n                e.preventDefault();\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        element.on(\"keyup\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(typeof key == \"undefined\") return;\r\n\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = false;\r\n\r\n            for(let kpc of that.keyUpCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // in ActionManager.init there is a \r\n            // if(that.main.isEmbedded && key == \" \"){\r\n            //     for(let kpc of that.keyPressedCallbacks){\r\n            //         kpc(key);\r\n            //     }    \r\n            // }\r\n\r\n            return true;\r\n        });\r\n        element.on(\"keyup\", (e) => {\r\n            let k = e.key;\r\n            if(e.shiftKey && k.length > 1){\r\n                k = \"[shift]+\" + k;\r\n            }\r\n            if(e.ctrlKey && k.length > 1){\r\n                k = \"[ctrl]+\" + k;\r\n            }\r\n            if(e.altKey && k.length > 1){\r\n                k = \"[alt]+\" + k;\r\n            }\r\n            for(let kpc of that.keyPressedCallbacks){\r\n                kpc(k);\r\n            }\r\n            return true;\r\n        });\r\n\r\n    }\r\n\r\n    isPressed(key: string){\r\n        if(key == null) return null;\r\n        return this.pressedKeys[key.toLowerCase()] == true;\r\n    }\r\n\r\n    unsubscribeAllListeners() {\r\n        this.keyPressedCallbacks = [];\r\n    }\r\n\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\n\r\nexport class GamepadTool {\r\n\r\n    gamepads: Gamepad[] = [];\r\n\r\n    constructor(){\r\n        let that = this;\r\n        window.addEventListener(\"gamepadconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad connected at index %d: %s. %d buttons, %d axes.\",\r\n              e.gamepad.index, e.gamepad.id,\r\n              e.gamepad.buttons.length, e.gamepad.axes.length);\r\n              if(that.gamepads.indexOf(e.gamepad) < 0){\r\n                  that.gamepads.push(e.gamepad);\r\n              }\r\n          });\r\n\r\n          window.addEventListener(\"gamepaddisconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad disconnected from index %d: %s\",\r\n              e.gamepad.index, e.gamepad.id);\r\n              let i = that.gamepads.indexOf(e.gamepad);\r\n              if(i >= 0){\r\n                that.gamepads.splice(i, 1);\r\n            }\r\n        });\r\n    }\r\n\r\n    isGamepadButtonPressed(gamepadIndex: number, buttonIndex: number): boolean{\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return false;\r\n        let button = gp.buttons[buttonIndex];\r\n        if(button){\r\n            // return typeof(button) == \"object\" ? button.pressed : (button == 1.0);\r\n            return button.pressed;\r\n        } else {return false;}\r\n    }\r\n\r\n    getGamepadAxisValue(gamepadIndex: number, axisIndex: number): number {\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return 0;\r\n        return gp.axes[axisIndex];\r\n    }\r\n\r\n    isGamepadConnected(gamepadIndex: number){\r\n        return navigator.getGamepads()[gamepadIndex] != null;\r\n    }\r\n\r\n}","import { ColorHelper } from \"./ColorHelper.js\";\r\n\r\nexport class FilledShapeDefaults {\r\n    static defaultFillColor: number = 0x8080ff;\r\n    static defaultFillAlpha: number = 1.0;\r\n\r\n    static defaultBorderColor: number = null;\r\n    static defaultBorderAlpha: number = 1.0;\r\n    static defaultBorderWidth: number = 10;\r\n\r\n    static defaultVisibility: boolean = true;\r\n\r\n    static initDefaultValues(){\r\n        FilledShapeDefaults.defaultFillColor = 0x8080ff;\r\n        FilledShapeDefaults.defaultFillAlpha = 1.0;\r\n    \r\n        FilledShapeDefaults.defaultBorderColor = null;\r\n        FilledShapeDefaults.defaultBorderAlpha = 1.0;\r\n        FilledShapeDefaults.defaultBorderWidth = 10;\r\n\r\n        FilledShapeDefaults.defaultVisibility = true;\r\n    }\r\n\r\n    static setDefaultVisibility(visibility: boolean) {\r\n        FilledShapeDefaults.defaultVisibility = visibility;\r\n    }\r\n\r\n    static setDefaultBorder(width: number, color: string | number, alpha?: number) {\r\n\r\n        FilledShapeDefaults.defaultBorderWidth = width;\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            FilledShapeDefaults.defaultBorderColor = c.color;\r\n            FilledShapeDefaults.defaultBorderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            FilledShapeDefaults.defaultBorderColor = color;\r\n            if (alpha != null) FilledShapeDefaults.defaultBorderAlpha = alpha;\r\n        }\r\n\r\n    }\r\n\r\n    static setDefaultFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            FilledShapeDefaults.defaultFillColor = c.color;\r\n            FilledShapeDefaults.defaultFillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            FilledShapeDefaults.defaultFillColor = color;\r\n            if (alpha != null) FilledShapeDefaults.defaultFillAlpha = alpha;\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\nimport { GroupClass, GroupHelper } from \"./Group.js\";\r\nimport { MouseListenerInterface } from \"./MouseListener.js\";\r\nimport { ShapeClass, ShapeHelper } from \"./Shape.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class WorldClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"World\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let groupType = <GroupClass>module.typeStore.getType(\"Group\");\r\n        let shapeType = <ShapeClass>module.typeStore.getType(\"Shape\");\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o, breite, höhe);  //new WorldHelper(breite, höhe, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an\", true));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o); // new WorldHelper(800, 600, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an. Das Koordinatensystem geht von 0 bis 800 in x-Richtung und von 0 - 600 in y-Richtung.\", true));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe wird als integer-Zahl erwartet. Am besten schreibt man sie als Hexadezimalzahl, also z.B. setBackgroundColor(0xff8080).\"', false));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe ist entweder eine vordefinierte Farbe (\"schwarz\", \"rot\", ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-x, -y));\r\n\r\n            }, false, false, 'Verschiebt alle Objekte der Welt um x nach rechts und y nach unten.', false));\r\n\r\n        this.addMethod(new Method(\"follow\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"margin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let frameWidth: number = parameters[2].value;\r\n                let xMin: number = parameters[3].value;\r\n                let xMax: number = parameters[4].value;\r\n                let yMin: number = parameters[5].value;\r\n                let yMax: number = parameters[6].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                let moveX: number = 0;\r\n                let moveY: number = 0;\r\n\r\n                let shapeX: number = shapeHelper.getCenterX();\r\n                let shapeY: number = shapeHelper.getCenterY();\r\n\r\n                let outsideRight = shapeX - (wh.currentLeft + wh.currentWidth - frameWidth);\r\n                if (outsideRight > 0 && wh.currentLeft + wh.currentWidth < xMax) {\r\n                    moveX = -outsideRight;\r\n                }\r\n\r\n                let outsideLeft = (wh.currentLeft + frameWidth) - shapeX;\r\n                if (outsideLeft > 0 && wh.currentLeft > xMin) {\r\n                    moveX = outsideLeft;\r\n                }\r\n\r\n                let outsideBottom = shapeY - (wh.currentTop + wh.currentHeight - frameWidth);\r\n                if (outsideBottom > 0 && wh.currentTop + wh.currentHeight <= yMax) {\r\n                    moveY = -outsideBottom;\r\n                }\r\n\r\n                let outsideTop = (wh.currentTop + frameWidth) - shapeY;\r\n                if (outsideTop > 0 && wh.currentTop >= yMin) {\r\n                    moveY = outsideTop;\r\n                }\r\n\r\n                if (moveX != 0 || moveY != 0) {\r\n                    let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                    wh.stage.projectionTransform.identity();\r\n                    wh.stage.projectionTransform.translate(moveX, moveY);\r\n                    wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                    wh.computeCurrentWorldBounds();\r\n                    wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-moveX, -moveY));\r\n                }\r\n\r\n\r\n            }, false, false, 'Verschiebt die Welt so, dass das übergebene graphische Objekt (shape) sichtbar wird. Verschoben wird nur, wenn das Objekt weniger als frameWidth vom Rand entfernt ist und die Welt nicht über die gegebenen Koordinaten xMin, xMax, yMin und yMax hinausragt.', false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n\r\n                let angleRad = -angle / 180 * Math.PI;\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.rotate(angleRad);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach(\r\n                    (shape) => {\r\n                        shape.rotate(-angle, x, y);\r\n                    });\r\n\r\n            }, false, false, 'Rotiert die Welt um den angegebenen Winkel im Urzeigersinn. Drehpunkt ist der Punkt (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.scale(factor, factor);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.scale(1 / factor, x, y));\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"setCoordinateSystem\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                wh.stage.projectionTransform.identity();     // coordinate system (0/0) to (initialWidth/initialHeight)\r\n                wh.stage.projectionTransform.translate(-left, -top);\r\n                wh.stage.projectionTransform.scale(wh.initialWidth / width, wh.initialHeight / height);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => {\r\n                    shape.scale(width / wh.initialWidth, left, top);\r\n                    shape.move(left, top);\r\n                });\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setDefaultGroup\", new Parameterlist([\r\n            { identifier: \"group\", type: groupType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.defaultGroup = group == null ? null : group.intrinsicData[\"Actor\"];\r\n\r\n            }, false, false, 'Legt eine Gruppe fest, zu der ab jetzt alle neuen Objekte automatisch hinzugefügt werden. Falls null angegeben wird, werden neue Objekte zu keiner Gruppe automatisch hinzugefügt.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getDefaultGroup\", new Parameterlist([\r\n        ]), groupType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return wh.getDefaultGroup();\r\n\r\n            }, false, false, 'Gibt die Gruppe zurück, zu der aktuell alle neuen Objekte automatisch hinzugefügt werden. Falls gerade keine defaultGroup festgelegt ist, wird null zurückgegeben.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"addMouseListener\", new Parameterlist([\r\n            { identifier: \"listener\", type: mouseListenerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let listener: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.addMouseListener(listener);\r\n\r\n            }, false, false, 'Fügt einen neuen MouseListener hinzu, dessen Methoden bei Mausereignissen aufgerufen werden.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentWidth);\r\n\r\n            }, false, false, 'Gibt die \"Breite\" des Grafikbereichs zurück, genauer: die x-Koordinate am rechten Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentHeight);\r\n\r\n            }, false, false, 'Gibt die \"Höhe\" des Grafikbereichs zurück, genauer: die y-Koordinate am unteren Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getTop\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentTop);\r\n\r\n            }, false, false, 'Gibt die y-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLeft\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentLeft);\r\n\r\n            }, false, false, 'Gibt die x-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setCursor\", new Parameterlist([\r\n            { identifier: \"cursor\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n                let cursor: string = parameters[1].value;\r\n\r\n                wh.setCursor(cursor);\r\n\r\n            }, false, false, 'Ändert die Form des Mauscursors im gesamten Grafikbereich. Mögiche Werte: siehe https://developer.mozilla.org/de/docs/Web/CSS/cursor.', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(worldObject: RuntimeObject, breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n\r\n        if (wh != null) {\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.projectionTransform.scale(wh.width / breite, wh.width / höhe);\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n\r\n            return new WorldHelper(breite, höhe, this.module, worldObject);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport type MouseListenerShapeData = {\r\n    shapeHelper: ShapeHelper,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type MouseListenerData = {\r\n    listener: RuntimeObject,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type ActorData = {\r\n    actorHelper: ActorHelper,\r\n    method: Method\r\n}\r\n\r\n/**\r\n * @see https://javascript.plainenglish.io/inside-pixijs-projection-system-897872a3dc17\r\n */\r\nclass WorldContainer extends PIXI.Container {\r\n\r\n    projectionTransform: PIXI.Matrix;\r\n\r\n    constructor(public sourceFrame: PIXI.Rectangle, public destinationFrame: PIXI.Rectangle) {\r\n        super();\r\n        this.projectionTransform = new PIXI.Matrix();\r\n    }\r\n\r\n    render(renderer: PIXI.Renderer) {\r\n\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = this.projectionTransform;\r\n        renderer.renderTexture.bind(\r\n            renderer.renderTexture.current,\r\n            this.sourceFrame,\r\n            this.destinationFrame,\r\n        );\r\n        super.render(renderer);\r\n        renderer.batch.flush();\r\n\r\n        renderer.batch.flush();\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = null;\r\n        renderer.renderTexture.bind(null);\r\n    }\r\n}\r\n\r\n\r\nexport class WorldHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n    app: PIXI.Application;\r\n    stage: WorldContainer;\r\n\r\n    actActors: ActorData[] = [];\r\n    keyPressedActors: ActorData[] = [];\r\n    keyUpActors: ActorData[] = [];\r\n    keyDownActors: ActorData[] = [];\r\n    actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n    mouseListenerShapes: MouseListenerShapeData[] = [];\r\n    mouseListeners: MouseListenerData[] = [];\r\n\r\n    interpreter: Interpreter;\r\n    actorsFinished: boolean = true;\r\n    summedDelta: number = 0;\r\n\r\n    defaultGroup: GroupHelper;\r\n\r\n    initialWidth: number;\r\n    initialHeight: number;\r\n\r\n    $coordinateDiv: JQuery<HTMLElement>;\r\n\r\n    public scaledTextures: { [name: string]: PIXI.Texture } = {};\r\n\r\n\r\n    shapes: ShapeHelper[] = [];     // all shapes incl. groups that aren't part of a group\r\n\r\n    currentLeft: number;\r\n    currentTop: number;\r\n    currentWidth: number;\r\n    currentHeight: number;\r\n\r\n    shapesNotAffectedByWorldTransforms: ShapeHelper[] = [];\r\n\r\n    globalScale: number;\r\n\r\n    robotWorldHelper: any;\r\n\r\n    tickerFunction: (t: number) => void;\r\n\r\n    clearActorLists() {\r\n        this.actActors = [];\r\n        this.keyPressedActors = [];\r\n        this.keyUpActors = [];\r\n        this.keyDownActors = [];\r\n    }\r\n\r\n    constructor(public width: number, public height: number, private module: Module, public world: RuntimeObject) {\r\n\r\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n        PIXI.settings.TARGET_FPMS = 30.0 / 1000.0;\r\n\r\n        this.globalScale = 1;\r\n\r\n        while (height > 1000 || width > 2000) {\r\n            this.globalScale *= 2;\r\n            height /= 2;\r\n            width /= 2;\r\n        }\r\n\r\n        this.initialHeight = this.height;\r\n        this.initialWidth = this.width;\r\n\r\n        this.currentLeft = 0;\r\n        this.currentTop = 0;\r\n        this.currentWidth = this.width;\r\n        this.currentHeight = this.height;\r\n\r\n        this.interpreter = this.module?.main?.getInterpreter();\r\n\r\n        if (this.interpreter.processingHelper != null) {\r\n            this.interpreter.throwException(\"Die herkömmliche Grafikausgabe kann nicht zusammen mit Processing genutzt werden.\");\r\n        }\r\n\r\n        if (this.interpreter.worldHelper != null) {\r\n            this.interpreter.throwException(\"Es darf nur ein World-Objekt instanziert werden.\");\r\n        }\r\n\r\n        this.interpreter.worldHelper = this;\r\n\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n        this.$coordinateDiv = this.module.main.getRightDiv().$rightDiv.find(\".jo_coordinates\");\r\n\r\n        let f = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            if ($jo_tabs.length == 0) {\r\n                $jo_tabs = $graphicsDiv.parents(\".joe_rightDivInner\");\r\n            }\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n\r\n            if (height / width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': width / height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': height / width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', f);\r\n\r\n        f();\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        if (this.module.main.pixiApp) {\r\n            this.app = this.module.main.pixiApp;\r\n            this.app.renderer.resize(width, height);\r\n            this.app.renderer.backgroundColor = 0x0;\r\n        } else {\r\n            this.app = new PIXI.Application({\r\n                antialias: true,\r\n                width: width, height: height,\r\n                //resizeTo: $containerInner[0]\r\n            });\r\n            this.module.main.pixiApp = this.app;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.tickerFunction = (delta) => {\r\n            that.tick(PIXI.Ticker.shared.elapsedMS);\r\n        };\r\n\r\n        this.app.ticker.add(this.tickerFunction);\r\n        this.app.ticker.maxFPS = 30;\r\n\r\n        this.interpreter.timerExtern = true;\r\n\r\n        let sourceFrame = new PIXI.Rectangle(0, 0, this.width, this.height);\r\n        let destinationFrame = new PIXI.Rectangle(0, 0, width, height);\r\n        this.stage = new WorldContainer(sourceFrame, destinationFrame);\r\n        this.stage.projectionTransform = new PIXI.Matrix();\r\n\r\n        this.app.stage.addChild(this.stage);\r\n\r\n        this.$containerInner.append(this.app.view);\r\n\r\n        this.interpreter.keyboardTool.keyPressedCallbacks.push((key) => {\r\n            for (let kpa of that.keyPressedActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyUpCallbacks.push((key) => {\r\n            for (let kpa of that.keyUpActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyDownCallbacks.push((key) => {\r\n            for (let kpa of that.keyDownActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n\r\n            let eventType = listenerType;\r\n            if (window.PointerEvent) {\r\n                eventType = eventType.replace('mouse', 'pointer');\r\n            }\r\n\r\n            this.$containerInner.on(eventType, (e) => {\r\n                let x = width * e.offsetX / this.$containerInner.width();\r\n                let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n                let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n                this.stage.projectionTransform.applyInverse(p, p);\r\n                x = p.x;\r\n                y = p.y;\r\n\r\n                that.onMouseEvent(listenerType, x, y, e.button);\r\n\r\n                for (let listener of this.mouseListeners) {\r\n                    if (listener.types[listenerType] != null) {\r\n                        this.invokeMouseListener(listener, listenerType, x, y, e.button);\r\n                    }\r\n                }\r\n\r\n                if (listenerType == \"mousedown\") {\r\n                    let gngEreignisbehandlung = this.interpreter.gngEreignisbehandlungHelper;\r\n                    if (gngEreignisbehandlung != null) {\r\n                        gngEreignisbehandlung.handleMouseClickedEvent(x, y);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        let $coordinateDiv = this.$coordinateDiv;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$containerInner.on(mousePointer + \"move\", (e) => {\r\n            let x = width * e.offsetX / this.$containerInner.width();\r\n            let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n            let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n            this.stage.projectionTransform.applyInverse(p, p);\r\n            x = Math.round(p.x);\r\n            y = Math.round(p.y);\r\n            $coordinateDiv.text(`(${x}/${y})`);\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"enter\", (e) => {\r\n            $coordinateDiv.show();\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"leave\", (e) => {\r\n            $coordinateDiv.hide();\r\n        });\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    computeCurrentWorldBounds() {\r\n\r\n        let p1: PIXI.Point = new PIXI.Point(0, 0);\r\n        this.stage.projectionTransform.applyInverse(p1, p1);\r\n\r\n        let p2: PIXI.Point = new PIXI.Point(this.initialWidth, this.initialHeight);\r\n        this.stage.projectionTransform.applyInverse(p2, p2);\r\n\r\n        this.currentLeft = p1.x;\r\n        this.currentTop = p1.y;\r\n        this.currentWidth = Math.abs(p2.x - p1.x);\r\n        this.currentHeight = Math.abs(p2.y - p1.y);\r\n    }\r\n\r\n\r\n    hasActors(): boolean {\r\n        return this.actActors.length > 0 || this.keyPressedActors.length > 0 || this.keyUpActors.length > 0\r\n            || this.keyDownActors.length > 0 || this.mouseListeners.length > 0 || this.mouseListenerShapes.length > 0;\r\n    }\r\n\r\n    setAllHitpolygonsDirty() {\r\n        for (let shape of this.shapes) {\r\n            shape.setHitPolygonDirty(true);\r\n        }\r\n    }\r\n\r\n    setCursor(cursor: string) {\r\n        this.$containerInner.css('cursor', cursor);\r\n    }\r\n\r\n\r\n    actorsNotFinished: number = 0;\r\n    ticks: number = 0;\r\n    deltaSum: number = 0;\r\n\r\n    spriteAnimations: SpriteHelper[] = [];\r\n\r\n    tick(delta: any) {\r\n\r\n        if (this.interpreter != null) {\r\n            switch (this.interpreter.state) {\r\n                case InterpreterState.running:\r\n                    this.summedDelta += delta;\r\n                    for (let spriteHelper of this.spriteAnimations) {\r\n                        spriteHelper.tick(delta);\r\n                    }\r\n\r\n                    if (!this.actorsFinished) {\r\n                        this.actorsNotFinished++;\r\n                        break;\r\n                    }\r\n\r\n                    if (this.interpreter.pauseUntil != null) {\r\n                        break;\r\n                    }\r\n\r\n                    let first: boolean = true;\r\n\r\n                    for (let actorData of this.actActors) {\r\n\r\n                        let actorHelper = actorData.actorHelper;\r\n                        if (actorHelper.timerPaused || actorHelper.isDestroyed) continue;\r\n\r\n                        let program = actorData.method?.program;\r\n                        this.runActor(first, actorData, this.summedDelta);\r\n                        if (program != null && !actorData.actorHelper.isDestroyed) {\r\n                            first = false;\r\n                            this.actorsFinished = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case InterpreterState.done:\r\n                case InterpreterState.error:\r\n                case InterpreterState.not_initialized:\r\n                    this.clearActorLists();\r\n                    break;\r\n            }\r\n\r\n\r\n            this.summedDelta = 0;\r\n\r\n            if (this.interpreter.state == InterpreterState.running) {\r\n                if (this.actActors.length > 0) {\r\n                    this.interpreter.timerFunction(33.33, true, 0.5);\r\n                    //@ts-ignore\r\n                    if (this.interpreter.state == InterpreterState.running) {\r\n                        this.interpreter.timerStopped = false;\r\n                        this.interpreter.timerFunction(33.33, false, 0.08);\r\n                    }\r\n                } else {\r\n                    this.interpreter.timerFunction(33.33, false, 0.7);\r\n                }\r\n            }\r\n        }\r\n\r\n        while (this.actorHelpersToDestroy.length > 0) {\r\n\r\n            let actorHelper = this.actorHelpersToDestroy.pop();\r\n\r\n            for (let actorList of [this.keyPressedActors, this.keyUpActors, this.keyDownActors]) {\r\n                for (let i = 0; i < actorList.length; i++) {\r\n                    if (actorList[i].actorHelper === actorHelper) {\r\n                        actorList.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            for (let i = 0; i < this.mouseListenerShapes.length; i++) {\r\n                if (this.mouseListenerShapes[i].shapeHelper === actorHelper) {\r\n                    this.mouseListenerShapes.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.actActors.length; i++) {\r\n                if (this.actActors[i].actorHelper === actorHelper) {\r\n                    this.actActors.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            let displayObject = (<ShapeHelper>actorHelper).displayObject;\r\n            if (displayObject != null) {\r\n                displayObject.destroy();\r\n                (<ShapeHelper>actorHelper).displayObject = null;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setBackgroundColor(color: string | number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.app.renderer.backgroundColor = c.color;\r\n        } else {\r\n            this.app.renderer.backgroundColor = color;\r\n        }\r\n\r\n    }\r\n\r\n    runActorWhenKeyEvent(actorData: ActorData, key: string) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: stringPrimitiveType,\r\n                value: key\r\n            }\r\n        ];\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, null, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    runActor(first: boolean, actorData: ActorData, delta: number) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n        ];\r\n\r\n        if (actorData.method.getParameterCount() > 0) {\r\n            stackElements.push(\r\n                {\r\n                    type: doublePrimitiveType,\r\n                    value: delta\r\n                }\r\n\r\n            );\r\n        }\r\n\r\n        let that = this;\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, first ? (interpreter) => {\r\n                that.actorsFinished = true;\r\n                interpreter.timerStopped = true;\r\n            } : null, true);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n    cacheAsBitmap() {\r\n\r\n        let hasRobot = this.robotWorldHelper != null;\r\n\r\n        this.mouseListenerShapes = [];\r\n\r\n        let scaleMin = 1.0;\r\n        if (this.currentWidth * this.currentHeight > 2500000) scaleMin = Math.sqrt(2500000 / (this.currentWidth * this.currentHeight));\r\n        if (this.currentWidth * this.currentHeight < 1024 * 1024) scaleMin = Math.sqrt(1024 * 1024 / (this.currentWidth * this.currentHeight));\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: PIXI.SCALE_MODES.LINEAR,\r\n                width: Math.round(this.currentWidth * scaleMin),\r\n                height: Math.round(this.currentHeight * scaleMin)\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let transform = new PIXI.Matrix().scale(scaleMin, scaleMin);\r\n\r\n        setTimeout(() => {\r\n            if (!hasRobot) {\r\n                this.app.renderer.render(this.stage, {\r\n                    renderTexture: rt,\r\n                    transform: transform\r\n                });\r\n\r\n                setTimeout(() => {\r\n                    this.stage.children.forEach(c => c.destroy());\r\n                    this.stage.removeChildren();\r\n\r\n                    let sprite = new PIXI.Sprite(rt);\r\n                    sprite.localTransform.scale(this.globalScale, this.globalScale);\r\n                    // debugger;\r\n                    // sprite.localTransform.translate(0, rt.height);\r\n                    //@ts-ignore\r\n                    sprite.transform.onChange();\r\n                    // this.stage.projectionTransform = new PIXI.Matrix().scale(1, -1).translate(0, this.currentHeight);\r\n                    this.stage.projectionTransform = new PIXI.Matrix();\r\n                    this.stage.addChild(sprite);\r\n\r\n                }, 300);\r\n            }\r\n        }, 150);   // necessary to await Turtle's deferred rendering\r\n\r\n    }\r\n\r\n    destroyWorld() {\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.off(listenerType);\r\n        }\r\n        this.spriteAnimations = [];\r\n        this.app.ticker.remove(this.tickerFunction);\r\n\r\n        this.app.stage.children.forEach(c => c.destroy());\r\n        this.app.stage.removeChildren();\r\n\r\n        if (this.robotWorldHelper != null) {\r\n            this.robotWorldHelper.destroy();\r\n            this.robotWorldHelper = null;\r\n        }\r\n\r\n        jQuery(this.app.view).detach();\r\n\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.worldHelper = null;\r\n        this.$coordinateDiv.hide();\r\n\r\n        FilledShapeDefaults.initDefaultValues();\r\n    }\r\n\r\n    onMouseEvent(listenerType: string, x: number, y: number, button: number) {\r\n\r\n        switch (listenerType) {\r\n            case \"mousedown\":\r\n            case \"mouseup\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && (shapeHelper.containsPoint(x, y) || shapeHelper.trackMouseMove)) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button);\r\n                    }\r\n\r\n                }\r\n\r\n                break;\r\n            case \"mouseenter\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.containsPoint(x, y) && !shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = true;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mouseleave\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = false;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mousemove\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[\"mousemove\"] != null ||\r\n                        (listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) ||\r\n                        (listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject)\r\n                    ) {\r\n                        let containsPoint = shapeHelper.containsPoint(x, y);\r\n                        if ((shapeHelper.trackMouseMove || containsPoint) && listener.types[\"mousemove\"] != null) {\r\n                            this.invokeShapeMouseListener(listener, \"mousemove\", x, y, button);\r\n                        }\r\n                        if (containsPoint && listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseenter\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = true;\r\n                            });\r\n                        }\r\n                        if (!containsPoint && listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseleave\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = false;\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    invokeShapeMouseListener(listener: MouseListenerShapeData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        if (!listener.shapeHelper.reactToMouseEventsWhenInvisible &&\r\n            !listener.shapeHelper.displayObject.visible) return;\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.shapeHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    addMouseListener(listener: RuntimeObject) {\r\n\r\n        /*\r\n            If a shape is registered as MouseListener of the world-object, it gets all mouse-events twice. \r\n            => Deregister shape as mouseListenerShape and register it as mouse listener for the world object.\r\n        */\r\n        let index: number = this.mouseListenerShapes.findIndex((mls) => { return mls.shapeHelper.runtimeObject == listener });\r\n        if (index >= 0) {\r\n            this.mouseListenerShapes.splice(index, 1);\r\n        }\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>listener.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null && method.program.statements.length > 2 || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        listener: listener,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.mouseListeners.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    invokeMouseListener(listener: MouseListenerData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.listener;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    getDefaultGroup(): RuntimeObject {\r\n        return this.defaultGroup?.runtimeObject;\r\n    }\r\n\r\n}","import { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType, doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class Actor extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Actor\", module, \"Abstrakte Klasse mit überschreibbaren Methoden act (zur Implementierung eines Timers) und onKeyTyped, onKeyUp usw. zur Entgegennahme von Tastaturereignissen\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.isAbstract = true;\r\n\r\n        let methodSignatures: { signature: string, actorListIdentifier: string }[] = [\r\n            { signature: \"onKeyTyped(String)\", actorListIdentifier: \"keyPressedActors\" },\r\n            { signature: \"onKeyUp(String)\", actorListIdentifier: \"keyUpActors\" },\r\n            { signature: \"onKeyDown(String)\", actorListIdentifier: \"keyDownActors\" },\r\n            { signature: \"act()\", actorListIdentifier: \"actActors\" },\r\n            { signature: \"act(double)\", actorListIdentifier: \"actActors\" },\r\n        ];\r\n\r\n        this.postConstructorCallbacks = [\r\n            (r: RuntimeObject) => {\r\n\r\n                for (let ms of methodSignatures) {\r\n                    let method: Method = (<Klass>r.class).getMethodBySignature(ms.signature);\r\n\r\n                    if (method?.program != null \r\n                        // || method?.invoke != null\r\n                        ) {\r\n                        let ah: ActorHelper = <ActorHelper>r.intrinsicData['Actor'];\r\n                        ah.worldHelper[ms.actorListIdentifier].push({\r\n                            actorHelper: ah,\r\n                            method: method\r\n                        })\r\n                    }\r\n                }\r\n\r\n            }\r\n        ];\r\n\r\n        this.addMethod(new Method(\"Actor\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), this,\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let actorHelper = new ActorHelper(module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"Actor\"] = actorHelper;\r\n\r\n                // return o;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Der Konstruktor registriert den Actor beim Grafikfenster\", true));\r\n\r\n        this.addMethod(new Method(\"destroy\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Vernichtet das Grafikobjekt. Falls es in einem Group-Objekt enthalten ist, wird es vor dem Vernichten automatisch aus diesem entfernt.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade NICHT drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadButtonDown\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let buttonIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadConnected\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\r\n\r\n        this.addMethod(new Method(\"getGamepadAxisValue\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let axisIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\r\n\r\n            }, false, false, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"isDestroyed\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isDestroyed;\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Objekt bereits durch die Methode destroy() zerstört wurde.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWorld\", new Parameterlist([\r\n        ]), module.typeStore.getType(\"World\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let worldHelper = interpreter.worldHelper;\r\n                if (worldHelper == null) {\r\n                    let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n                    worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n                }        \r\n                return worldHelper.world;\r\n\r\n            }, false, false, \"Gibt das Welt-Objekt zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"stopActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // ah.timerPaused = true;\r\n                ah.setTimerPaused(true);\r\n\r\n                return;\r\n\r\n            }, false, false, \"Stoppt den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt.\", false));\r\n\r\n            this.addMethod(new Method(\"restartActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // sh.timerPaused = false;\r\n                sh.setTimerPaused(false);\r\n\r\n            }, false, false, \"Startet den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt erneut.\", false));\r\n\r\n            this.addMethod(new Method(\"isActing\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.timerPaused;\r\n\r\n            }, false, false, \"Gibt true zurück, wenn der periodische Aufruf der Methode act weiterhin erfolgt.\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n            { identifier: \"deltaTime\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null,\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt und wieder losgelassen hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste losgelassen hat.\", false));\r\n\r\n\r\n    }\r\n\r\n    registerWorldType() {\r\n        this.methods.filter(m => m.identifier == \"getWorld\")[0].returnType = this.module.typeStore.getType(\"World\");\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ActorHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n    isDestroyed: boolean = false;\r\n\r\n    timerPaused: boolean = false;\r\n\r\n    constructor(interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            // worldHelper = new WorldHelper(800, 600, interpreter.main.currentWorkspace.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            if(runtimeObject.intrinsicData[\"isGNG\"]){\r\n                worldHelper.setBackgroundColor(\"#e6e6e6\");\r\n            }\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n    }\r\n\r\n\r\n    isKeyDown(key: string): boolean {\r\n        return this.worldHelper.interpreter.keyboardTool.isPressed(key);\r\n    }\r\n\r\n    destroy() {\r\n        this.isDestroyed = true;\r\n        console.log(\"destroying\", this);\r\n        this.worldHelper.actorHelpersToDestroy.push(this);\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        if (this.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Es wurde die Methode \" + method + \" eines bereits mit destroy() zerstörten Grafikobjekts aufgerufen.\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class AlignmentClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Alignment\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"center\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Mögliche Ausrichtungen\"\r\n    }\r\n\r\n}","\r\nexport type Punkt = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport function gleich(a: number, b: number) {\r\n\r\n    return Math.abs(a - b) < 0.000000001;\r\n\r\n}\r\n\r\nexport function drehenUm(drehpunkt: Punkt, punkt: Punkt, winkelInGrad: number): Punkt {\r\n\r\n    let w = winkelInGrad / 180 * Math.PI;\r\n    let s = Math.sin(w);\r\n    let c = Math.cos(w);\r\n\r\n    let dx = punkt.x - drehpunkt.x;\r\n    let dy = punkt.y - drehpunkt.y;\r\n\r\n    let dxNeu = dx * c - dy * s;\r\n    let dyNeu = dx * s + dy * c;\r\n\r\n    return { x: drehpunkt.x + dxNeu, y: drehpunkt.y + dyNeu };\r\n\r\n}\r\n\r\n/**\r\n * Gibt true zurück, wenn die Strecke von (x0, y0) nach (x1, y1) die Strecke von\r\n * (x2, y2) nach (x3, y3) berührt.\r\n *\r\n * @param x0\r\n * @param y0\r\n * @param x1\r\n * @param y1\r\n * @param x2\r\n * @param y2\r\n * @param x3\r\n * @param y3\r\n * @return\r\n */\r\nexport function streckeSchneidetStrecke(p0: Punkt, p1: Punkt, p2: Punkt, p3: Punkt, schnittpunkt?:Punkt) {\r\n\r\n    let a1 = p1.x - p0.x;\r\n    let a2 = p1.y - p0.y;\r\n    let b1 = p2.x - p3.x;\r\n    let b2 = p2.y - p3.y;\r\n    let c1 = p2.x - p0.x;\r\n    let c2 = p2.y - p0.y;\r\n\r\n    let det = a1 * b2 - a2 * b1;\r\n\r\n    if (det * det < 0.000001) {\r\n        return false; // die Strecken sind so gut wie parallel\r\n    }\r\n\r\n    let det1 = c1 * b2 - c2 * b1;\r\n    let det2 = a1 * c2 - a2 * c1;\r\n\r\n    let s = det1 / det;\r\n    let t = det2 / det;\r\n\r\n    // liegt der Schnittpunkt innerhalb von beiden Strecken?\r\n    let schneidet = s >= 0 && s <= 1 && t >= 0 && t <= 1;\r\n\r\n    if(schneidet && schnittpunkt != null){\r\n        schnittpunkt.x = p0.x + s*(p1.x - p0.x);\r\n        schnittpunkt.y = p0.y + s*(p1.y - p0.y)\r\n        }\r\n\r\n    return schneidet;\r\n\r\n}\r\n\r\nexport function abstand(p1: Punkt, p2: Punkt) {\r\n\r\n    let dx = p2.x - p1.x;\r\n    let dy = p2.y - p1.y;\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n\r\n}\r\n\r\nexport function winkelGradZwischenPunkten(p1: Punkt, p2: Punkt): number {\r\n    let d = {\r\n        x: p2.x - p1.x,\r\n        y: p2.y - p1.y\r\n    }\r\n\r\n    return Math.atan2(d.y, d.x)/Math.PI*180;\r\n}\r\n\r\nexport function streckenzugEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n    for(let i = 0; i < punkte.length - 1; i++){\r\n        if(abstandPunktZuStrecke(punkte[i], punkte[i+1], punkt) < 0.000001){\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function polygonEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n\r\n    let inside = false;\r\n    let vertexCount = punkte.length;\r\n\r\n    for (let index = 0; index <= vertexCount - 1; index++) {\r\n\r\n        let i = index % vertexCount;\r\n        let j = (index - 1) % vertexCount;\r\n        if (j < 0) {\r\n            j += vertexCount;\r\n        }\r\n\r\n        if (((punkte[i].y > punkt.y) != (punkte[j].y > punkt.y)) &&\r\n            (punkt.x < (punkte[j].x - punkte[i].x) * (punkt.y - punkte[i].y) / (punkte[j].y - punkte[i].y) + punkte[i].x))\r\n            inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n\r\n}\r\n\r\nexport function kreisSchneidetStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt): boolean {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return false; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function schnittpunkteKreisStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt, schnittpunkte: Punkt[]): void {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t1 * (x2 - x1), y: y1 + t1 * (y2 - y1) });\r\n    }\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t2 * (x2 - x1), y: y1 + t2 * (y2 - y1) });\r\n    }\r\n\r\n    return;\r\n\r\n}\r\n\r\nexport function KreisBerührtPolygon(m: Punkt, r: number, punkte: Punkt[]) {\r\n\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        if (abstand(punkte[i], m) <= r) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    // Der Kreis enthält keinen Punkt des Vielecks. Enthält es den Mittelpunkt des Kreises?\r\n    if (polygonEnthältPunkt(punkte, m)) {\r\n        return true;\r\n    }\r\n\r\n    // schneidet die Kreislinie eine der Vielecksstrecken?\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        let p2 = punkte[(i + 1) % punkte.length];\r\n        if (kreisSchneidetStrecke(m, r, punkte[i], p2)) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport function polygonBerührtPolygon(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    // Nicht-exakte Lösung: prüfe, ob eines der Vielecke einen Eckpunkt des anderen enthält.\r\n    // Jede Kollision beginnt damit, dass ein Eckpunkt eines Polygons eine Seite des anderen schneidet.\r\n    // Falls oft genug geprüft wird, bleiben Kollisionen also nicht unerkannt.\r\n    for (let i = 0; i < punkte1.length; i++) {\r\n        if (polygonEnthältPunkt(punkte2, punkte1[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < punkte2.length; i++) {\r\n        if (polygonEnthältPunkt(punkte1, punkte2[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function steckenzugSchneidetStreckenzug(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    for(let i = 0; i < punkte1.length - 1; i++){\r\n        for(let j = 0; j < punkte2.length - 1; j++){\r\n            if(streckeSchneidetStrecke(punkte1[i], punkte1[i+1], punkte2[j], punkte2[j+1])){\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n\r\nexport function abstandPunktZuStrecke(a: Punkt, b: Punkt, p: Punkt){\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let q = dx*dx+dy*dy;\r\n\r\n    let lambda = ((-a.x+p.x)*dx + (-a.y+p.y)*dy)/q;\r\n\r\n    if(lambda < 0){\r\n        return abstand(a, p);\r\n    }\r\n\r\n    if(lambda > 1){\r\n        return abstand(b, p);\r\n    }\r\n\r\n    let fx = a.x + lambda * (b.x - a.x);\r\n    let fy = a.y + lambda * (b.y - a.y);\r\n\r\n    let s1 = p.x - fx;\r\n    let s2 = p.y - fy;\r\n\r\n    return Math.sqrt(s1*s1 + s2*s2);\r\n    \r\n}\r\n\r\nexport function abstandPunktZuGerade(a: Punkt, b: Punkt, p: Punkt) {\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let l = Math.sqrt(dy * dy + dx * dx);\r\n\r\n    if (l < 0.000000001) {\r\n        return abstand(a, p);\r\n    }\r\n\r\n    return Math.abs(dy * p.x - dx * p.y + b.x * a.y - b.y * a.x) / l;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygonExakt(punkte1: Punkt[], punkte2: Punkt[], istGeschlossen1: boolean = false,\r\n    istGeschlossen2: boolean = false, normaleDerBerührtenGerade1: Punkt = null) {\r\n\r\n    if(punkte1.length == 0 || punkte2.length == 0) return false;\r\n\r\n    let endIndex1 = punkte1.length + (istGeschlossen1 ? 0 : -1);\r\n    let endIndex2 = punkte2.length + (istGeschlossen2 ? 0 : -1);\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte1, punkte2[0])) {\r\n\r\n        if (normaleDerBerührtenGerade1 != null) {\r\n\r\n            let minAbstand = 100000;\r\n            let minIndex = 0;\r\n\r\n            for (let i = 0; i < punkte1.length - 1; i++) {\r\n                let j = (i + 1) % punkte1.length;\r\n\r\n                let d = abstandPunktZuStrecke(punkte1[i], punkte1[j], punkte2[0]);\r\n                if (d < minAbstand) {\r\n                    minAbstand = d;\r\n                    minIndex = 0;\r\n                }\r\n\r\n            }\r\n            let i2 = (minIndex + 1) % punkte1.length;\r\n            normaleDerBerührtenGerade1.y = punkte1[i2].x - punkte1[minIndex].x;\r\n            normaleDerBerührtenGerade1.x = -(punkte1[i2].y - punkte1[minIndex].y);\r\n\r\n        }\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte2, punkte1[0])) {\r\n        return true;\r\n    }\r\n\r\n    for (let i = 0; i < endIndex1; i++) {\r\n        let p1a = punkte1[i];\r\n        let p1b = punkte1[(i + 1) % punkte1.length];\r\n        for (let j = 0; j < endIndex2; j++) {\r\n            let p2a = punkte2[j];\r\n            let p2b = punkte2[(j + 1) % punkte2.length];\r\n\r\n            if (streckeSchneidetStrecke(p1a, p1b, p2a, p2b)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function länge(vektor: Punkt): number {\r\n    return Math.sqrt(vektor.x * vektor.x + vektor.y * vektor.y);\r\n}\r\n\r\nexport function einheitsVektor(vektor: Punkt): Punkt {\r\n    let l = länge(vektor);\r\n    return { x: vektor.x / l, y: vektor.y / l };\r\n}\r\n\r\n// export function normalenvektorBeiImpactEinesKreises(punkte: Punkt[], isMove: boolean[], k: Kreis): Punkt {\r\n\r\n//     let minAbstand = 100000;\r\n//     let minIndex = 0;\r\n//     let m = k.getMitte();\r\n\r\n//     for (let i = 0; i < punkte.length - 1; i++) {\r\n//         if (isMove != null && !isMove[i]) {\r\n//             let j = (i + 1) % punkte.length;\r\n\r\n//             let d = abstandPunktZuStrecke(punkte[i], punkte[j], m);\r\n//             if (d < minAbstand) {\r\n//                 minAbstand = d;\r\n//                 minIndex = i;\r\n//             }\r\n\r\n//             // console.log(\"\" + i + \": (\" + punkte[i].x + \",\" + punkte[i].y + \")->(\" + punkte[j].x + \",\" + punkte[j].y + \"): \" + d);\r\n//         }\r\n//     }\r\n//     let i2 = (minIndex + 1) % punkte.length;\r\n\r\n//     // let v = {x: punkte[i2].x - punkte[minIndex].x, y: punkte[i2].y - punkte[minIndex].y};\r\n//     let am = { x: m.x - punkte[minIndex].x, y: m.y - punkte[minIndex].y };\r\n\r\n//     let n = {\r\n//         y: punkte[i2].x - punkte[minIndex].x,\r\n//         x: -(punkte[i2].y - punkte[minIndex].y)\r\n//     };\r\n\r\n//     let sp = skalarprodukt(n, am);\r\n//     if (sp > 0) {\r\n//         return n;\r\n//     } else {\r\n//         return { x: -n.x, y: -n.y };\r\n//     }\r\n\r\n// }\r\n\r\n// export function normalenvektorBeiImpactAufKreis(punkte: Punkt[], k: Kreis): Punkt {\r\n\r\n//     let schnittpunkte = [];\r\n//     let m = k.getMitte();\r\n//     let r = k.getRadius();\r\n\r\n//     for (let i = 0; i < punkte.length; i++) {\r\n//         let j = (i + 1) % punkte.length;\r\n//         schnittpunkteKreisStrecke(m, r, punkte[i], punkte[j], schnittpunkte);\r\n//     }\r\n\r\n//     if (schnittpunkte.length == 0) {\r\n//         return {\r\n//             x: punkte[0].x - m.x, y: punkte[0].y - m.y\r\n//         }\r\n//     }\r\n\r\n//     let schwerpunkt = { x: 0, y: 0 };\r\n//     for (let p of schnittpunkte) {\r\n//         schwerpunkt.x += p.x;\r\n//         schwerpunkt.y += p.y;\r\n//     }\r\n//     schwerpunkt.x /= punkte.length;\r\n//     schwerpunkt.y /= punkte.length;\r\n\r\n//     return {\r\n//         x: schwerpunkt.x - m.x,\r\n//         y: schwerpunkt.y - m.y\r\n//     }\r\n\r\n// }\r\n\r\nexport function skalarprodukt(v1: Punkt, v2: Punkt) {\r\n    return v1.x * v2.x + v1.y * v2.y;\r\n}\r\n\r\n\r\nexport function zufall(von: number, bis: number){\r\n    return Math.random()*(bis - von) + von;\r\n}\r\n\r\nexport function intZufall(von: number, bis: number){\r\n    return Math.trunc(Math.random()*(bis - von + 1 - 0.00000001) + von);\r\n}\r\n\r\nexport function vektorVonPolarkoordinaten(winkelGrad: number, länge: number){\r\n    let winkel = winkelGrad/180*Math.PI;\r\n    return {\r\n        x: länge * Math.cos(winkel),\r\n        y: länge * Math.sin(winkel)\r\n    }\r\n}\r\n\r\nexport function farbeAusRGB(rot: number, grün: number, blau: number):number{\r\n    return blau + 256 * (rot + 256 * grün);\r\n}","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, booleanPrimitiveType, DoublePrimitiveType, stringPrimitiveType, nullType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { WorldHelper, MouseListenerShapeData } from \"./World.js\";\r\nimport { Punkt, polygonEnthältPunkt, polygonBerührtPolygon, polygonBerührtPolygonExakt } from \"../../tools/MatheTools.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { GroupHelper, GroupClass } from \"./Group.js\";\r\nimport { CircleHelper } from \"./Circle.js\";\r\nimport { TurtleHelper } from \"./Turtle.js\";\r\nimport { Enum, EnumInfo } from \"../../compiler/types/Enum.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class ShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Shape\", module, \"Basisklasse für alle graphischen Objekte die verschoben, skaliert und gedreht werden können\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Actor\"));\r\n        this.isAbstract = true;\r\n\r\n        // let matrixType = new ArrayType(doublePrimitiveType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n        let directionType = <Enum>(<any>module.typeStore.getType(\"Direction\"));\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n\r\n        this.addAttribute(new Attribute(\"angle\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.angle;\r\n\r\n            }, false, Visibility.protected, true, \"Richtung\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerX\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterX();\r\n\r\n            }, false, Visibility.protected, true, \"X-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerY\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterY();\r\n\r\n            }, false, Visibility.protected, true, \"Y-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        // this.addAttribute(new Attribute(\"transformation\", matrixType,\r\n        //     (value) => {\r\n\r\n        //         let rto: RuntimeObject = value.object;\r\n        //         let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n        //         if (helper == null || helper.isDestroyed || helper.displayObject.transform == null) {\r\n        //             value.value = null;\r\n        //             return;\r\n        //         }\r\n\r\n        //         let matrix = helper.displayObject.localTransform.toArray(false);\r\n\r\n        //         if (value.value == null) {\r\n        //             value.value = [];\r\n\r\n        //             for (let n of matrix) {\r\n        //                 value.value.push({\r\n        //                     type: doublePrimitiveType,\r\n        //                     value: n\r\n        //                 });\r\n        //             }\r\n        //         } else {\r\n        //             let i: number = 0;\r\n        //             for (let n of matrix) {\r\n        //                 value.value[i++].value = n;\r\n        //             }\r\n        //         }\r\n\r\n        //     }, false, Visibility.protected, true, \"Transformationsmatrix\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg, centerX, centerY);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist (centerX, centerY).\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist der 'Mittelpunkt' des Objekts\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, centerX, centerY);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der Punkt (centerX, centerY)\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"isOutsideView\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"isOutsideView\")) return;\r\n\r\n                return sh.isOutsideView();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn sich die Bounding Box des Objekts außerhalb des sichtbaren Bereichs befindet. \", false));\r\n\r\n        this.addMethod(new Method(\"getCenterX\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterX\")) return;\r\n\r\n                return sh.getCenterX();\r\n\r\n            }, false, false, \"Gibt die x-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getCenterY\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterY\")) return;\r\n\r\n                return sh.getCenterY();\r\n\r\n            }, false, false, \"Gibt die y-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAngle\")) return;\r\n\r\n                return sh.angle;\r\n\r\n            }, false, false, \"Gibt den Winkel des Grafikobjekts in Grad zurück. Winkel == 0 bedeutet: dieselbe Richtung wie zum Zeipunkt der Instanzierung des Objekts. Positive Winkelzunahme bedeutet Rechtsdrehung.\", false));\r\n\r\n        this.addMethod(new Method(\"containsPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"containsPoint\")) return;\r\n\r\n                return sh.containsPoint(x, y);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt den Punkt (x, y) enthält.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWith\", new Parameterlist([\r\n            { identifier: \"object\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der Parameter der Methode collidesWith darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWith\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode collidesWith als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.collidesWith(sh1);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt und das andere Grafikobjekt kollidieren.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWithAnyShape\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWithAnyShape\")) return;\r\n\r\n                return sh.collidesWithAnyShape();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt mit irgendeinem anderen Grafikobjekt kollidiert.\", false));\r\n\r\n        this.addMethod(new Method(\"moveBackFrom\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"keepColliding\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let keepColliding: boolean = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode moveBackFrom darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"moveBackFrom\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode moveBackFrom als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                sh.moveBackFrom(sh1, keepColliding);\r\n\r\n            }, false, false, \"Rückt das Objekt entlang der letzten durch move vorgegebenen Richtung zurück, bis es das übergebene Objekt gerade noch (keepColliding == true) bzw. gerade nicht mehr (keepColliding == false) berührt.\", false));\r\n\r\n        this.addMethod(new Method(\"directionRelativeTo\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), directionType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode directionRelativeTo darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"directionRelativeTo\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode directionRelativeTo als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.directionRelativeTo(sh1, directionType);\r\n\r\n            }, false, false, \"Gibt die Richtung (top, right, bottom oder left) zurück, in der das graphische Objekt relativ zum übergebenen graphischen Objekt steht.\", false));\r\n\r\n        this.addMethod(new Method(\"moveTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"moveTo\")) return;\r\n\r\n                sh.move(x - sh.getCenterX(), y - sh.getCenterY());\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt so, dass sich sein 'Mittelpunkt' an den angegebenen Koordinaten befindet.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenter\")) return;\r\n\r\n                sh.defineCenter(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenterRelative\", new Parameterlist([\r\n            { identifier: \"xRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenterRelative\")) return;\r\n\r\n                sh.defineCenterRelative(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dabei bedeutet (XRel/YRel) = (0/0) die linke obere Ecke der Bounding Box des Objekts, (XRel/YRel) = (1/1) die rechte untere Ecke. Defaultwert ist (XRel/YRel) = (0.5/0.5), also der Diagonalenschnittpunkt der Bounding Box. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\\n\\nVORSICHT: Diese Methode arbeitet nicht mehr korrekt, wenn das Objekt schon gedreht wurde!\", false));\r\n\r\n        this.addMethod(new Method(\"setAngle\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let angleDeg: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setAngle\")) return;\r\n\r\n                sh.rotate(angleDeg - sh.angle);\r\n\r\n            }, false, false, \"Dreht das Objekt zur angegebenen Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"setDefaultVisibility\", new Parameterlist([\r\n            { identifier: \"visibility\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let visibility: boolean = parameters[1].value;\r\n\r\n                FilledShapeDefaults.setDefaultVisibility(visibility);\r\n\r\n            }, false, true, 'Setzt den Standardwert für das Attribut \"visible\". Dieser wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt instanziert wird.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setVisible\", new Parameterlist([\r\n            { identifier: \"visible\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let visible: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setVisible\")) return;\r\n\r\n                sh.setVisible(visible);\r\n\r\n            }, false, false, \"Macht das Grafikobjekt sichtbar (visible == true) bzw. unsichtbar (visible == false).\", false));\r\n\r\n        this.addMethod(new Method(\"setStatic\", new Parameterlist([\r\n            { identifier: \"isStatic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let isStatic: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setStatic\")) return;\r\n\r\n                sh.setStatic(isStatic);\r\n\r\n            }, false, false, \"setStatic(true) hat zur Folge, dass die Ansicht des Objekts durch Transformationen des World-Objekts nicht verändert wird.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste nach unten drückt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste loslässt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und bewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht. Die Farbe wird als int-Wert angegeben, praktischerweise hexadezimal, also z.B. tint(0x303030).', false));\r\n\r\n        this.addMethod(new Method(\"startTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = true;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt JEDE Bewegung des Mauszeigers (auch wenn sich dieser außerhalb des Objekts befindet) ein MouseMove-Ereignis für dieses Objekt auslöst. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"stopTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = false;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt nur noch dann Bewegungen des Mauszeigers ein MouseMove-Ereignis für dieses Objekt auslösen, wenn sich der Mauszeiger über dem Objekt befindet. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"reactToMouseEventsWhenInvisible\", new Parameterlist([\r\n            { identifier: \"react\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let react: boolean = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.reactToMouseEventsWhenInvisible = react;\r\n\r\n            }, false, false, 'Legt fest, ob das Objekt auf Mausevents (buttondown, mouse move, ...) reagiert, wenn es unsichtbar ist.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"defineDirection\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let direction: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"defineDirection\")) return;\r\n\r\n                sh.directionRad = direction / 180 * Math.PI;\r\n\r\n            }, false, false, 'Setzt die Blickrichtung des graphischen Objekts. Dies ist die Richtung, in die es durch Aufruf der Methode forward bewegt wird. \\nBemerkung: die Methode rotate ändert auch die Blickrichtung!', false));\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"distance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let distance: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(distance);\r\n\r\n            }, false, false, 'Bewegt das Objekt um die angegebene Länge in Richtung seiner Blickrichtung.\\nBemerkung: Die Blickrichtung kann mit defineDirection gesetzt werden.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, true, false, 'Erstellt eine Kopie des Grafikobjekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"bringToFront\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"bringToFront\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"sendToBack\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"sendToBack\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"getHitPolygon\", new Parameterlist([\r\n        ]), new ArrayType(vector2Class),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHitPolygon\")) return;\r\n\r\n                return sh.getHitPolygon(vector2Class);\r\n\r\n            }, false, false, \"Gibt ein Array zurück, das die vier Eckpunkte des Hit-Polygons in Form von Vector2-Ortsvektoren enthält. Bei den Klassen Rectangle, Triangle und Polygon sind dies die Eckpunkte.\", false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class ShapeHelper extends ActorHelper {\r\n\r\n    displayObject: PIXI.DisplayObject;\r\n\r\n    belongsToGroup: GroupHelper;\r\n\r\n    centerXInitial: number;\r\n    centerYInitial: number;\r\n\r\n    angle: number = 0;\r\n\r\n    hitPolygonInitial: Punkt[] = null;\r\n    hitPolygonTransformed: Punkt[] = null;\r\n    hitPolygonDirty = true;\r\n\r\n    reactToMouseEventsWhenInvisible: boolean = false;\r\n\r\n    mouseLastSeenInsideObject: boolean = false;\r\n\r\n    trackMouseMove: boolean = false;\r\n\r\n    scaleFactor: number = 1.0;\r\n\r\n    directionRad: number = 0;\r\n\r\n    lastMoveDx: number = 0;\r\n    lastMoveDy: number = 0;\r\n\r\n    copyFrom(shapeHelper: ShapeHelper) {\r\n\r\n        this.centerXInitial = shapeHelper.centerXInitial;\r\n        this.centerYInitial = shapeHelper.centerYInitial;\r\n\r\n        if (shapeHelper.hitPolygonInitial != null) {\r\n            this.hitPolygonInitial = [];\r\n            for (let p of shapeHelper.hitPolygonInitial) this.hitPolygonInitial.push(Object.assign({}, p));\r\n        }\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.hitPolygonDirty = shapeHelper.hitPolygonDirty;\r\n        this.reactToMouseEventsWhenInvisible = shapeHelper.reactToMouseEventsWhenInvisible;\r\n        this.mouseLastSeenInsideObject = shapeHelper.mouseLastSeenInsideObject;\r\n\r\n        this.displayObject.localTransform.copyFrom(shapeHelper.displayObject.transform.localTransform);\r\n        this.displayObject.updateTransform();\r\n\r\n    }\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n\r\n        super(interpreter, runtimeObject);\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerShapeData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>runtimeObject.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        shapeHelper: this,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.worldHelper.mouseListenerShapes.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n        if (this.worldHelper.defaultGroup == null) {\r\n            this.worldHelper.shapes.push(this);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        this.hitPolygonDirty = dirty;\r\n    }\r\n\r\n    bringOnePlaneFurtherToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index < highestIndex) {\r\n            container.setChildIndex(this.displayObject, index + 1);\r\n        }\r\n    }\r\n\r\n    bringOnePlaneFurtherToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index > 0) {\r\n            container.setChildIndex(this.displayObject, index - 1);\r\n        }\r\n    }\r\n\r\n    bringToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.setChildIndex(this, highestIndex);\r\n        } else {\r\n            container.setChildIndex(this.displayObject, highestIndex);\r\n        }\r\n    }\r\n\r\n    sendToBack() {\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.setChildIndex(this, 0);\r\n        } else {\r\n            let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n            container.setChildIndex(this.displayObject, 0);\r\n        }\r\n    }\r\n\r\n    addToDefaultGroupAndSetDefaultVisibility() {\r\n\r\n        this.displayObject.visible = FilledShapeDefaults.defaultVisibility;\r\n\r\n        if (this.worldHelper.defaultGroup != null) {\r\n            this.runtimeObject.intrinsicData[\"Actor\"] = this;\r\n            let groupHelper = <GroupHelper>this.worldHelper.defaultGroup;\r\n            groupHelper.add(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    tint(color: string | number) {\r\n        let c: number;\r\n        if (typeof color == 'string') {\r\n            c = ColorHelper.parseColorToOpenGL(color).color;\r\n        } else {\r\n            c = color;\r\n        }\r\n        //@ts-ignore\r\n        if (this.displayObject.tint) {\r\n            //@ts-ignore\r\n            this.displayObject.tint = c;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n\r\n        this.displayObject.visible = visible;\r\n    }\r\n\r\n    collidesWithAnyShape(): boolean {\r\n        this.displayObject.updateTransform();\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        for (let shapeHelper of this.worldHelper.shapes) {\r\n            if (this == shapeHelper) continue;\r\n\r\n            if (shapeHelper[\"shapes\"] || shapeHelper[\"turtle\"]) {\r\n                if (shapeHelper.collidesWith(this)) {\r\n                    return true;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (this[\"turtle\"]) {\r\n                if (this.collidesWith(shapeHelper)) {\r\n                    return true;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            let bb = this.displayObject.getBounds();\r\n            let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n            if (bb.left > bb1.right || bb1.left > bb.right) continue;\r\n\r\n            if (bb.top > bb1.bottom || bb1.top > bb.bottom) continue;\r\n\r\n            // boundig boxes collide, so check further:\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n            // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n            if (polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n\r\n        // if(!(this instanceof TurtleHelper) && (shapeHelper instanceof TurtleHelper)){\r\n        if (this[\"lineElements\"] == null && (shapeHelper[\"lineElements\"] != null)) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.displayObject == null || shapeHelper.displayObject == null) return;\r\n\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        return polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true);\r\n\r\n    }\r\n\r\n    directionRelativeTo(shapeHelper: ShapeHelper, directionType: Enum) {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        let dx1 = bb1.left - bb.right;  // positive if left\r\n        let dx2 = bb.left - bb1.right;  // positive if right\r\n\r\n        let dy1 = bb1.top - bb.bottom;  // positive if top\r\n        let dy2 = bb.top - bb1.bottom;  // positive if bottom\r\n\r\n        let enuminfo = directionType.enumInfoList;\r\n        let pairs: { distance: number, ei: EnumInfo }[] = [];\r\n\r\n        if (this.lastMoveDx > 0) {\r\n            pairs.push({ distance: dx1, ei: enuminfo[3] });\r\n        } else if (this.lastMoveDx < 0) {\r\n            pairs.push({ distance: dx2, ei: enuminfo[1] });\r\n        }\r\n\r\n        if (this.lastMoveDy > 0) {\r\n            pairs.push({ distance: dy1, ei: enuminfo[0] });\r\n        } else if (this.lastMoveDy < 0) {\r\n            pairs.push({ distance: dy2, ei: enuminfo[2] });\r\n        }\r\n\r\n        if (pairs.length == 0) {\r\n            pairs = [\r\n                { distance: dx1, ei: enuminfo[3] },\r\n                { distance: dx2, ei: enuminfo[1] },\r\n                { distance: dy1, ei: enuminfo[0] },\r\n                { distance: dy2, ei: enuminfo[2] }\r\n            ]\r\n        }\r\n\r\n\r\n        let max = pairs[0].distance;\r\n        let ei = pairs[0].ei;\r\n        for (let i = 1; i < pairs.length; i++) {\r\n            if (pairs[i].distance > max) {\r\n                max = pairs[i].distance;\r\n                ei = pairs[i].ei;\r\n            }\r\n        }\r\n\r\n        return ei.object;\r\n    }\r\n\r\n\r\n    moveBackFrom(sh1: ShapeHelper, keepColliding: boolean) {\r\n\r\n        // subsequent calls to move destroy values in this.lastMoveDx and this.lastMoveDy, so:\r\n        let lmdx = this.lastMoveDx;\r\n        let lmdy = this.lastMoveDy;\r\n\r\n        let length = Math.sqrt(lmdx * lmdx + lmdy * lmdy);\r\n        if (length < 0.001) return;\r\n\r\n        if (!this.collidesWith(sh1)) return;\r\n\r\n        let parameterMax = 0;       // collision with this parameter\r\n        this.move(-lmdx, -lmdy);\r\n\r\n        let currentParameter = -1;  // move to parameterMin\r\n\r\n        while (this.collidesWith(sh1)) {\r\n            parameterMax = currentParameter;    // collision at this parameter\r\n            let newParameter = currentParameter * 2;\r\n            this.move(lmdx * (newParameter - currentParameter), lmdy * (newParameter - currentParameter));\r\n            currentParameter = newParameter;\r\n            if ((currentParameter + 1) * length < -100) {\r\n                this.move(lmdx * (-1 - currentParameter), lmdy * (-1 - currentParameter));\r\n                return;\r\n            }\r\n        }\r\n        let parameterMin = currentParameter;\r\n\r\n        let isColliding: boolean = false;\r\n        // Situation now: no collision at parameterMin == currentParameter, collision at parameterMax\r\n        while ((parameterMax - parameterMin) * length > 1) {\r\n            let np = (parameterMax + parameterMin) / 2;\r\n            this.move(lmdx * (np - currentParameter), lmdy * (np - currentParameter));\r\n            if (isColliding = this.collidesWith(sh1)) {\r\n                parameterMax = np;\r\n            } else {\r\n                parameterMin = np;\r\n            }\r\n            currentParameter = np;\r\n        }\r\n\r\n        if (keepColliding && !isColliding) {\r\n            this.move(lmdx * (parameterMax - currentParameter), lmdy * (parameterMax - currentParameter));\r\n        } else if (isColliding && !keepColliding) {\r\n            this.move(lmdx * (parameterMin - currentParameter), lmdy * (parameterMin - currentParameter));\r\n        }\r\n\r\n        this.lastMoveDx = lmdx;\r\n        this.lastMoveDy = lmdy;\r\n    }\r\n\r\n\r\n\r\n    containsPoint(x: number, y: number) {\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n    }\r\n\r\n    transformHitPolygon() {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n\r\n        this.hitPolygonTransformed = [];\r\n        let m = this.displayObject.transform.worldTransform;\r\n        for (let p of this.hitPolygonInitial) {\r\n            this.hitPolygonTransformed.push({\r\n                x: (m.a * p.x) + (m.c * p.y) + m.tx,\r\n                y: (m.b * p.x) + (m.d * p.y) + m.ty\r\n            });\r\n        }\r\n        this.setHitPolygonDirty(false);\r\n\r\n    }\r\n\r\n    isOutsideView() {\r\n        let bounds = this.displayObject.getBounds(true);\r\n        let wh = this.worldHelper;\r\n        return bounds.right < wh.currentLeft || bounds.left > wh.currentLeft + wh.currentWidth\r\n            || bounds.bottom < wh.currentTop || bounds.top > wh.currentTop + wh.currentHeight;\r\n    }\r\n\r\n    defineCenter(x: number, y: number) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n    }\r\n\r\n    defineCenterRelative(x: number, y: number) {\r\n        let bounds = this.displayObject.getBounds(false);\r\n        this.defineCenter(bounds.left + bounds.width * x, bounds.top + bounds.height * y);\r\n    }\r\n\r\n    move(dx: number, dy: number) {\r\n\r\n        if (dx != 0 || dy != 0) {\r\n            this.lastMoveDx = dx;\r\n            this.lastMoveDy = dy;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(dx, dy);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n    }\r\n\r\n    forward(distance: number) {\r\n        let dx = distance * Math.cos(this.directionRad);\r\n        let dy = -distance * Math.sin(this.directionRad);\r\n        this.move(dx, dy);\r\n    }\r\n\r\n    rotate(angleInDeg: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.updateTransform();       // necessary if world coordinate system is scaled\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.rotate(-angleInDeg / 180 * Math.PI);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.angle += angleInDeg;\r\n        this.directionRad += angleInDeg / 180 * Math.PI;\r\n    }\r\n\r\n    mirrorXY(scaleX: number, scaleY: number) {\r\n        let cX: number, cY: number;\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.localTransform.apply(p, p);\r\n        cX = p.x;\r\n        cY = p.y;\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(scaleX, scaleY);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n\r\n    scale(factor: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(factor, factor);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.scaleFactor *= factor;\r\n\r\n    }\r\n\r\n    public getCenterX(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        // this.displayObject.localTransform.apply(p, p);\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.x;\r\n    }\r\n\r\n    public getCenterY(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.y;\r\n    }\r\n\r\n    public abstract render(): void;\r\n\r\n    public destroy(): void {\r\n        super.destroy();\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.remove(this.runtimeObject);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(this);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        let index1 = this.worldHelper.shapesNotAffectedByWorldTransforms.indexOf(this);\r\n        if (index1 >= 0) {\r\n            this.worldHelper.shapesNotAffectedByWorldTransforms.splice(index1, 1);\r\n        }\r\n\r\n    }\r\n\r\n    getCollidingShapes(groupHelper: GroupHelper, shapeType: Type): any {\r\n        let collidingShapes: Value[] = [];\r\n        for (let shape of groupHelper.shapes) {\r\n            let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (shapeHelper.collidesWith(this)) {\r\n                collidingShapes.push({\r\n                    type: shapeType,\r\n                    value: shape\r\n                });\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n    }\r\n\r\n    abstract getCopy(klass: Klass): RuntimeObject;\r\n\r\n    getHitPolygon(vector2Class: Klass): Value[] {\r\n\r\n        if (this.hitPolygonDirty) {\r\n            this.transformHitPolygon();\r\n        }\r\n\r\n        let ret: Value[] = [];\r\n        for (let p of this.hitPolygonTransformed) {\r\n            let ro = new RuntimeObject(vector2Class);\r\n            ro.attributes = [{ type: doublePrimitiveType, value: p.x }, { type: doublePrimitiveType, value: p.y }];\r\n            ret.push({ type: vector2Class, value: ro });\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    setStatic(isStatic: boolean) {\r\n        let list = this.worldHelper.shapesNotAffectedByWorldTransforms;\r\n        if (isStatic) {\r\n            list.push(this);\r\n        } else {\r\n            let index = list.indexOf(this);\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    getParentGroup(): RuntimeObject {\r\n        return this.belongsToGroup?.runtimeObject || null\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { isPrefixUnaryExpression } from \"typescript\";\r\nimport { BufferResource } from \"@pixi/core\";\r\nimport { FORMATS } from \"@pixi/constants\";\r\n\r\nexport class BitmapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Bitmap\", module, \"Rechteckige Bitmap mit beliebiger Auflösung und Positionierung in der Grafikausgabe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"Bitmap\", new Parameterlist([\r\n            { identifier: \"pointsX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"pointsY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayWidth\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayHeight\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let pointsX: number = parameters[1].value;\r\n                let pointsY: number = parameters[2].value;\r\n                let left: number = parameters[3].value;\r\n                let top: number = parameters[4].value;\r\n                let width: number = parameters[5].value;\r\n                let height: number = parameters[6].value;\r\n\r\n                let rh = new BitmapHelperNew(pointsX, pointsY, left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Bitmap. pointsX bzw. pointsY bezeichnet Anzahl der Bildpunkte in x bzw. y-Richtung, (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(x, y, colorType);\r\n\r\n            }, false, false, 'Gibt die Farbe des Punkts (x, y) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\". 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color, 1);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color, alpha);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Bitmap-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clone\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clone\")) return;\r\n\r\n                return sh.getCopyOrClone(<Klass>o.class, true);\r\n\r\n            }, false, false, 'Erstellt ein weiteres Bitmap-Objekt, das auf dieselben Pixeldaten zurückgreift.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class BitmapHelperNew extends ShapeHelper {\r\n\r\n    texture: PIXI.Texture;\r\n    data: Uint32Array;\r\n\r\n    isBigEndian: boolean = true;\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        return this.getCopyOrClone(klass, false)\r\n    }\r\n\r\n    getCopyOrClone(klass: Klass, clone: boolean = false): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let bh: BitmapHelperNew = new BitmapHelperNew(this.anzahlX, this.anzahlY, this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro, this, clone);\r\n\r\n        ro.intrinsicData[\"Actor\"] = bh;\r\n\r\n        bh.copyFrom(this);\r\n        bh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    constructor(public anzahlX, public anzahlY, public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        let uInt32 = new Uint32Array([0x11223344]);\r\n        let uInt8 = new Uint8Array(uInt32.buffer);\r\n     \r\n        if(uInt8[0] === 0x44) {\r\n            this.isBigEndian = false;\r\n        } else if (uInt8[0] === 0x11) {\r\n            this.isBigEndian = true;\r\n        }\r\n\r\n        // TODO: Little Endian...\r\n\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: left, y: top + height }, { x: left + width, y: top + height }, { x: left + width, y: top }\r\n        ];\r\n\r\n        this.initGraphics(bitmapToCopy, clone);\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        sprite.localTransform.scale(width/anzahlX, height/anzahlY);\r\n        sprite.localTransform.translate(left, top);\r\n        //@ts-ignore\r\n        sprite.transform.onChange();\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        sprite.localTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    protected initGraphics(bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n\r\n        if(bitmapToCopy == null){\r\n            this.data = new Uint32Array(this.anzahlX * this.anzahlY);\r\n        } else {\r\n            if(clone){\r\n                this.data = bitmapToCopy.data;\r\n            } else {\r\n                this.data = new Uint32Array(bitmapToCopy.data);\r\n            }\r\n        }\r\n        \r\n        let u8Array = new Uint8Array(this.data.buffer);\r\n\r\n        if(!clone){\r\n            let bufferResource = new PIXI.BufferResource(u8Array, {width: this.anzahlX, height: this.anzahlY});\r\n            let bt = new PIXI.BaseTexture(bufferResource, {\r\n                scaleMode: PIXI.SCALE_MODES.NEAREST \r\n            });\r\n            this.texture = new PIXI.Texture(bt);\r\n        } else {\r\n            this.texture = bitmapToCopy.texture;\r\n        }\r\n\r\n        this.displayObject = new PIXI.Sprite(this.texture);\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n    }\r\n\r\n    uploadData(){\r\n        this.texture.baseTexture.update();\r\n    }\r\n\r\n    public getFarbeAsObject(x: number, y: number, colorType: Klass): RuntimeObject {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        // let a = this.data[i + 3];\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let c = this.data[i];\r\n\r\n        let red = c & 0xff;\r\n        let green = (c & 0xff00) >> 8;\r\n        let blue = (c & 0xff0000) >> 16;\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            hex: ColorHelper.intColorToHexRGB(c >> 8)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n    public istFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        let c1 = this.data[i];\r\n        let red = c1 & 0xff;\r\n        let green = (c1 & 0xff00) >> 8;\r\n        let blue = (c1 & 0xff0000) >> 16;\r\n\r\n\r\n        return c == red*0x10000 + green * 0x100 + blue;\r\n\r\n    }\r\n\r\n    public setzeFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            if (alpha == null) alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n            if (alpha == null) alpha = 1.0;\r\n        }\r\n\r\n        this.data[i] = Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16);\r\n        \r\n        this.uploadData();\r\n    }\r\n\r\n    public fillAll(color: string | number, alpha?: number) {\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        this.data.fill(Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16));\r\n        // this.data.fill(0xffff0000);\r\n        \r\n        this.uploadData();\r\n    }\r\n    \r\n    public setzeFarbeRGBA(x: number, y: number, r: number, g: number, b: number, alpha: number) {\r\n        let c = alpha * 0xff000000 + b*0x10000 + g * 0x100 + r;\r\n        let i = (x + y * (this.anzahlX));\r\n        this.data[i] = c;\r\n        this.uploadData();\r\n    }\r\n\r\n    public getFarbe(x: number, y: number): number {\r\n        let c = this.data[x + y * this.anzahlX] & 0xffffff;\r\n        return (c & 0xff) << 16 + (c & 0xff00) + (c & 0xff0000) >> 16;\r\n    }\r\n\r\n    public getAlpha(x: number, y: number): number {\r\n        return (this.data[x + y * this.anzahlX] & 0xff000000) >> 24 / 255;\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType, voidPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class FilledShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"FilledShape\", module, \"Basisklasse für grafische Objekte mit Füllfarbe und Randfarbe, beide wahlweise auch transparent\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n        this.isAbstract = true;\r\n\r\n        let that = this;\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"getFillColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.fillColor, sh.fillColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Füllfarbe des Objekts zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getBorderColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.borderColor, sh.borderColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Randfarbe des Objekts zurück.', false));\r\n\r\n        this.addAttribute(new Attribute(\"borderWidth\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: FilledShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null) {\r\n                    value.value = Number.NaN;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.borderWidth;\r\n\r\n            }, false, Visibility.protected, true, \"Randbreite in Pixeln\"));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"getAlpha\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAlpha\")) return;\r\n\r\n                return sh.fillAlpha;\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultBorder\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let width: number = parameters[1].value;\r\n                let color: string = parameters[2].value;\r\n\r\n                FilledShapeDefaults.setDefaultBorder(width, color);\r\n\r\n            }, false, true, 'Setzt Default-Eigenschaften des Randes. Sie werden nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultBorder\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let width: number = parameters[1].value;\r\n                let color: number = parameters[2].value;\r\n                let alpha: number = parameters[3].value;\r\n\r\n                FilledShapeDefaults.setDefaultBorder(width, color, alpha);\r\n\r\n            }, false, true, 'Setzt Default-Eigenschaften des Randes. Sie werden nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n\r\n                FilledShapeDefaults.setDefaultFillColor(color, alpha);\r\n\r\n            }, false, true, 'Setzt die Default-Füllfarbe. Sie wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let color: string = parameters[1].value;\r\n\r\n                FilledShapeDefaults.setDefaultFillColor(color);\r\n\r\n            }, false, true, 'Setzt die Default-Füllfarbe. Sie wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderWidth\", new Parameterlist([\r\n            { identifier: \"widthInPixel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderWidth\")) return;\r\n\r\n                sh.setBorderWidth(width);\r\n\r\n            }, false, false, 'Setzt die Linienbreite des Randes (Einheit: Pixel)\"', false));\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    rgbaToHex(rgb: number, alpha: number): string {\r\n        let s = rgb == null ? \"---\" : rgb.toString(16);\r\n        while (s.length < 6) s = \"0\" + s;\r\n\r\n        let a = Math.round(alpha * 255).toString(16);\r\n        if (a.length < 2) a = \"0\" + a;\r\n\r\n        return \"#\" + s + a;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class FilledShapeHelper extends ShapeHelper {\r\n\r\n    fillColor: number;\r\n    fillAlpha: number;\r\n\r\n    borderColor: number;\r\n    borderAlpha: number;\r\n    borderWidth: number;\r\n\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.borderColor = FilledShapeDefaults.defaultBorderColor;\r\n        this.borderAlpha = FilledShapeDefaults.defaultBorderAlpha;\r\n        this.borderWidth = FilledShapeDefaults.defaultBorderWidth;\r\n\r\n        this.fillColor = FilledShapeDefaults.defaultFillColor;\r\n        this.fillAlpha = FilledShapeDefaults.defaultFillAlpha;\r\n    }\r\n\r\n    copyFrom(fsh: FilledShapeHelper) {\r\n        super.copyFrom(fsh);\r\n        this.fillColor = fsh.fillColor;\r\n        this.fillAlpha = fsh.fillAlpha;\r\n\r\n        this.borderColor = fsh.borderColor;\r\n        this.borderAlpha = fsh.borderAlpha;\r\n        this.borderWidth = fsh.borderWidth;\r\n    }\r\n\r\n    setAlpha(alpha: number) {\r\n\r\n        this.fillAlpha = alpha;\r\n        this.borderAlpha = alpha;\r\n        this.render();\r\n    }\r\n\r\n    setBorderColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.borderColor = c.color;\r\n            this.borderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.borderColor = color;\r\n            this.borderAlpha = alpha;\r\n        }\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.fillColor = c.color;\r\n            this.fillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.fillColor = color;\r\n            if (alpha != null) this.fillAlpha = alpha;\r\n        }\r\n\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setBorderWidth(width: number) {\r\n        this.borderWidth = width;\r\n        this.render();\r\n    }\r\n\r\n    public getFarbeAsObject(color: number, alpha: number, colorType: Klass): RuntimeObject {\r\n\r\n        if (color == null) return null;\r\n\r\n        let r = (color & 0xff0000) >> 16;\r\n        let g = (color & 0xff00) >> 8;\r\n        let b = color & 0xff;\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: r,\r\n            green: g,\r\n            blue: b,\r\n            hex: ColorHelper.intColorToHexRGB(color)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class CircleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Circle\", module, \"Kreis\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Circle\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n\r\n                let rh = new CircleHelper(mx, my, r, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreis. (mx, my) ist der Mittelpunt, r sein Radius.', true));\r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreises.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Circle-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class CircleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: CircleHelper = new CircleHelper(this.mx, this.my, this.r, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI / 8;\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawCircle(this.mx, this.my, this.r);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx * dx + dy * dy <= this.r * this.r;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (shapeHelper instanceof CircleHelper) {\r\n\r\n            let p1 = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.updateTransform();\r\n            this.displayObject.transform.worldTransform.apply(p1, p1);\r\n\r\n            let radius1 = this.r * this.displayObject.scale.x\r\n            \r\n            let p2 = new PIXI.Point(shapeHelper.centerXInitial, shapeHelper.centerYInitial);\r\n            shapeHelper.displayObject.updateTransform();\r\n            shapeHelper.displayObject.transform.worldTransform.apply(p2, p2);\r\n            \r\n            let radius2 = shapeHelper.r * shapeHelper.displayObject.scale.x\r\n\r\n            let d1 = p1.x - p2.x;\r\n            let d2 = p1.y - p2.y;\r\n\r\n            return d1*d1 + d2*d2 <= (radius1 + radius2) * (radius1 + radius2);\r\n\r\n\r\n        } else {\r\n            return super.collidesWith(shapeHelper);\r\n        }\r\n    }\r\n\r\n    destroy(){\r\n        super.destroy(); // for debugging\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class SectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sector\", module, \"Kreisbogen/Kreissektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Sector\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n                let startAngle: number = parameters[4].value;\r\n                let endAngle: number = parameters[5].value;\r\n\r\n                let rh = new SectorHelper(mx, my, r, startAngle/180*Math.PI, endAngle/180*Math.PI, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreisbogen bzw. (falls die Füllfarbe nicht null ist) Kreissektor. (mx, my) ist der Mittelpunt, r sein Radius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\r\n\r\n            this.addMethod(new Method(\"drawRadii\", new Parameterlist([\r\n                { identifier: \"radiiZeichnen\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: boolean = parameters[1].value;\r\n                    let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"drawRadii\")) return;\r\n    \r\n                    sh.drawRadii = r;\r\n                    sh.render();\r\n    \r\n                }, false, false, 'Legt fest, ob beim Zeichnen des Umrisses auch die beiden Radii ( = Strecken vom Mittelpunkt zur Kreislinie) mitgezeichnet werden sollen.', false));\r\n    \r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\r\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setStartAngle\")) return;\r\n\r\n                if(angle < 0){\r\n                    angle += Math.ceil(-angle/360) * 360;\r\n                }\r\n\r\n                if(angle > 360){\r\n                    angle -= Math.trunc(angle/360) * 360;\r\n                }\r\n\r\n                sh.startAngleRad = angle/180*Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n            this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\r\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setEndAngle\")) return;\r\n\r\n                if(angle < 0){\r\n                    angle += Math.ceil(-angle/360) * 360;\r\n                }\r\n\r\n                if(angle > 360){\r\n                    angle -= Math.trunc(angle/360) * 360;\r\n                }\r\n\r\n                sh.endAngleRad = angle/180*Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getStartAngle\")) return;\r\n\r\n                return sh.startAngleRad/Math.PI*180;\r\n\r\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getEndAngle\")) return;\r\n\r\n                return sh.endAngleRad/Math.PI*180;\r\n\r\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sector-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SectorHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        public startAngleRad: number, public endAngleRad: number,\r\n        public drawRadii: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SectorHelper = new SectorHelper(this.mx, this.my, this.r, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\r\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = this.startAngleRad + deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if(Math.abs(this.startAngleRad - this.endAngleRad) < 0.00000001){\r\n            g.drawCircle(this.mx, this.my, this.r);\r\n        } else {\r\n            if(this.drawRadii){\r\n                g.moveTo(this.mx, this.my);\r\n            }\r\n            g.arc(this.mx, this.my, this.r, -this.startAngleRad, -this.endAngleRad, true);\r\n            if(this.drawRadii){\r\n                g.lineTo(this.mx, this.my);\r\n            }\r\n        }\r\n        if(this.drawRadii){\r\n            g.closePath();\r\n        }\r\n\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        let angle = Math.atan2(-dy, dx);\r\n\r\n        if (dx * dx + dy * dy <= this.r * this.r) {\r\n            let towPI = 2*Math.PI;\r\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\r\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\r\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\r\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\r\n            if(normalizedStartAngle <= normalizedEndAngle){\r\n                return ret;\r\n            } else {\r\n                return !ret;\r\n            }  \r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class ArcClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Arc\", module, \"Kreisbogenumriss (wahlweise gefüllt)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Arc\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let ri: number = parameters[3].value;\r\n                let ra: number = parameters[4].value;\r\n                let startAngle: number = parameters[5].value;\r\n                let endAngle: number = parameters[6].value;\r\n\r\n                let rh = new ArcHelper(mx, my, ri, ra, startAngle / 180 * Math.PI, endAngle / 180 * Math.PI, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreisbogen. (mx, my) ist der Mittelpunt, ri sein Innenradius, ra sein Außenradius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\r\n\r\n        this.addMethod(new Method(\"setInnerRadius\", new Parameterlist([\r\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n                sh.ri = r;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den inneren Radius des Kreisbogens\"', false));\r\n\r\n        this.addMethod(new Method(\"setOuterRadius\", new Parameterlist([\r\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n                sh.ra = r;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den äußeren Radius des Kreisbogens\"', false));\r\n\r\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\r\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setStartAngle\")) return;\r\n\r\n                if (angle < 0) {\r\n                    angle += Math.ceil(-angle / 360) * 360;\r\n                }\r\n\r\n                if (angle > 360) {\r\n                    angle -= Math.trunc(angle / 360) * 360;\r\n                }\r\n\r\n                sh.startAngleRad = angle / 180 * Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\r\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setEndAngle\")) return;\r\n\r\n                if (angle < 0) {\r\n                    angle += Math.ceil(-angle / 360) * 360;\r\n                }\r\n\r\n                if (angle > 360) {\r\n                    angle -= Math.trunc(angle / 360) * 360;\r\n                }\r\n\r\n                sh.endAngleRad = angle / 180 * Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"getInnerRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.ri * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den inneren Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getOuterRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getOuterRadius\")) return;\r\n\r\n                return sh.ra * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den äußeren Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getStartAngle\")) return;\r\n\r\n                return sh.startAngleRad / Math.PI * 180;\r\n\r\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getEndAngle\")) return;\r\n\r\n                return sh.endAngleRad / Math.PI * 180;\r\n\r\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Arc-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ArcHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public ri: number,\r\n        public ra: number,\r\n        public startAngleRad: number, public endAngleRad: number,\r\n        public drawRadii: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: ArcHelper = new ArcHelper(this.mx, this.my, this.ri, this.ra, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = this.startAngleRad + deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.ra * Math.cos(alpha),\r\n                y: this.my + this.ra * Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = this.endAngleRad - deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.ri * Math.cos(alpha),\r\n                y: this.my + this.ri * Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n\r\n        if (this.startAngleRad === void 0) { this.startAngleRad = 0; }\r\n        if (this.endAngleRad === void 0) { this.endAngleRad = Math.PI * 2; }\r\n        if (Math.abs(this.endAngleRad - this.startAngleRad) >= Math.PI * 2) {\r\n            g.drawCircle(this.mx, this.my, this.ra)\r\n                .beginHole()\r\n                .drawCircle(this.mx, this.my, this.ri)\r\n                .endHole();\r\n        } else {\r\n            g.moveTo(this.mx + this.ra * Math.cos(this.startAngleRad), this.my - this.ra * Math.sin(this.startAngleRad));\r\n            g.lineTo(this.mx + this.ri * Math.cos(this.startAngleRad), this.my - this.ri * Math.sin(this.startAngleRad));\r\n            g.arc(this.mx, this.my, this.ri, -this.startAngleRad, -this.endAngleRad, true)\r\n                .arc(this.mx, this.my, this.ra, -this.endAngleRad, -this.startAngleRad, false)\r\n        }\r\n\r\n        g.closePath();\r\n\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    \r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        let angle = Math.atan2(-dy, dx);\r\n\r\n        let r2 = dx * dx + dy * dy;\r\n\r\n        if ( r2 <= this.ra * this.ra && r2 >= this.ri * this.ri) {\r\n            let towPI = 2 * Math.PI;\r\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\r\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\r\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\r\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\r\n            if (normalizedStartAngle <= normalizedEndAngle) {\r\n                return ret;\r\n            } else {\r\n                return !ret;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport type ColorClassIntrinsicData = {\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    hex: string\r\n}\r\n\r\nexport class ColorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Color\", module, \"Farbe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for (let colorName in ColorHelper.predefinedColors) {\r\n\r\n            let intColor = ColorHelper.predefinedColors[colorName];\r\n\r\n            let r: RuntimeObject = new RuntimeObject(this);\r\n\r\n            let red = (intColor & 0xff0000) >> 16;\r\n            let green = (intColor & 0xff00) >> 8;\r\n            let blue = (intColor & 0xff);\r\n\r\n            let id: ColorClassIntrinsicData = {\r\n                red: red,\r\n                green: green,\r\n                blue: blue,\r\n                hex: ColorHelper.intColorToHexRGB(intColor)\r\n            }\r\n\r\n            r.intrinsicData = id;\r\n\r\n            let a: Attribute = new Attribute(colorName, this,\r\n                (value) => { value.value = r }, true, Visibility.public, true,\r\n                \"Die Farbe \" + colorName + \" (\" + ColorHelper.intColorToHexRGB(intColor) + \") oder \" + ColorHelper.intColorToRGB(intColor));\r\n\r\n            //@ts-ignore\r\n            a.color = ColorHelper.intColorToHexRGB(intColor);\r\n\r\n            this.addAttribute(a);\r\n        }\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"Color\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let red: number = Math.trunc(parameters[1].value);\r\n                let green: number = Math.trunc(parameters[2].value);\r\n                let blue: number = Math.trunc(parameters[3].value);\r\n\r\n\r\n                let intrinsicData: ColorClassIntrinsicData = {\r\n                    red: red,\r\n                    green: green,\r\n                    blue: blue,\r\n                    hex: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n            }, false, false, 'Instanziert eine neue Farbe. Red, green und blue sind die Farbanteile, jeweils als integer-Zahlen im Bereich von 0 bis 255.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return Math.floor(Math.random() * 0xffffff);\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n\r\n                let r: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let g: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let b: number = Math.floor(Math.random() * (256 - min)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maximumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                let max: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n                if (max < 0) max = 0;\r\n                if (max > 255) max = 255;\r\n\r\n                if (max < min) {\r\n                    let z = max;\r\n                    max = min;\r\n                    min = z;\r\n                }\r\n\r\n                let r: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let g: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let b: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, max der Höchstwert, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).hex;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen String.', false));\r\n\r\n        this.addMethod(new Method(\"toInt\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let cid = <ColorClassIntrinsicData>(o.intrinsicData);\r\n\r\n                return 0x10000 * cid.red + 0x100 * cid.green + cid.blue;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen int-Wert um, genauer: gibt 0x10000 * red + 0x100 * green + blue zurück.', false));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"otherColor\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let d = <ColorClassIntrinsicData>(o.intrinsicData);\r\n                let d1 = <ColorClassIntrinsicData>(o1.intrinsicData);\r\n\r\n                return (d.red == d1.red && d.green == d1.green && d.blue == d1.blue);\r\n\r\n            }, false, false, 'Vergleicht zwei Farben', false));\r\n\r\n        this.addMethod(new Method(\"getRed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).red;\r\n\r\n            }, false, false, 'Gibt den Rotanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getGreen\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).green;\r\n\r\n            }, false, false, 'Gibt den Grünanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getBlue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).blue;\r\n\r\n            }, false, false, 'Gibt den Blauanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"fromRGB\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                return (r * 0x10000 + g * 0x100 + b);\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromRGBA\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let color: string = (r * 0x1000000 + g * 0x10000 + b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSLA\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                let color: string = (rgb.r * 0x1000000 + rgb.g * 0x10000 + rgb.b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSL\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                return (rgb.r * 0x10000 + rgb.g * 0x100 + rgb.b);\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100)die Farbe.', false));\r\n\r\n\r\n    }\r\n\r\n    hslToRgb(h: number, s: number, l: number): { r: number, g: number, b: number } {\r\n\r\n        s /= 100;\r\n        l /= 100;\r\n\r\n        let c = (1 - Math.abs(2 * l - 1)) * s,\r\n            x = c * (1 - Math.abs((h / 60) % 2 - 1)),\r\n            m = l - c / 2,\r\n            r = 0,\r\n            g = 0,\r\n            b = 0;\r\n\r\n        if (0 <= h && h < 60) {\r\n            r = c; g = x; b = 0;\r\n        } else if (60 <= h && h < 120) {\r\n            r = x; g = c; b = 0;\r\n        } else if (120 <= h && h < 180) {\r\n            r = 0; g = c; b = x;\r\n        } else if (180 <= h && h < 240) {\r\n            r = 0; g = x; b = c;\r\n        } else if (240 <= h && h < 300) {\r\n            r = x; g = 0; b = c;\r\n        } else if (300 <= h && h < 360) {\r\n            r = c; g = 0; b = x;\r\n        }\r\n        r = Math.round((r + m) * 255);\r\n        g = Math.round((g + m) * 255);\r\n        b = Math.round((b + m) * 255);\r\n\r\n\r\n        return {r: r, g: g, b: b}\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class EllipseClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Ellipse\", module, \"Ellipse\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Ellipse\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let rx: number = parameters[3].value;\r\n                let ry: number = parameters[4].value;\r\n\r\n                let rh = new EllipseHelper(mx, my, rx, ry, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Ellipse. (mx, my) ist der Mittelpunt, rx und ry sind ihre Radien.', true));\r\n\r\n            this.addMethod(new Method(\"setRadiusX\", new Parameterlist([\r\n                { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusX(r);\r\n    \r\n                }, false, false, 'Setzt den x-Radius der Ellipse\"', false));\r\n\r\n            this.addMethod(new Method(\"setRadiusY\", new Parameterlist([\r\n                { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusY(r);\r\n    \r\n                }, false, false, 'Setzt den y-Radius der Ellipse\"', false));\r\n    \r\n                this.addMethod(new Method(\"copy\", new Parameterlist([\r\n                ]), this,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"copy\")) return;\r\n        \r\n                        return sh.getCopy(<Klass>o.class);\r\n        \r\n                    }, false, false, 'Erstellt eine Kopie des Ellipse-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class EllipseHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public rx: number, public ry: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: EllipseHelper = new EllipseHelper(this.mx, this.my, this.rx, this.ry, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    \r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI/8;\r\n        for(let i = 0; i < 16; i++){\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.rx*Math.cos(alpha),\r\n                y: this.my + this.ry*Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawEllipse(this.mx, this.my, this.rx, this.ry);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    setRadiusX(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    setRadiusY(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx*dx/(this.rx*this.rx) + dy*dy/(this.ry*this.ry) <= 1;\r\n    \r\n    }\r\n    \r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, Attribute, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper, ShapeClass } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class CollisionPairClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"CollisionPair\", module, \"Speichert die Referenzen auf zwei Figuren, die gerade kollidiert sind. Diese Klasse von den Kollisionsmethden der Klasse Group benutzt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n        this.addAttribute(new Attribute(\"shapeA\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeA\"];\r\n\r\n            }, false, Visibility.public, true, \"Erstes an der Kollision beteiligtes Shape\"));\r\n\r\n        this.addAttribute(new Attribute(\"shapeB\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeB\"];\r\n\r\n            }, false, Visibility.public, true, \"Zweites an der Kollision beteiligtes Shape\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class GroupClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Group\", module, \"Klasse zum Gruppieren grafischer Elemente. Die gruppierten Elemente können miteinander verschoben, gedreht, gestreckt sowie ein- und ausgeblendet werden. Zudem besitzt die Klasse Methoden zur schnellen Erkennung von Kollision mit Elementen außerhalb der Gruppe.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let collisionPairType = module.typeStore.getType(\"CollisionPair\");\r\n        let collisionPairArrayType = new ArrayType(collisionPairType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe. Ihr können mit der Methode add Elemente hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(module.typeStore.getType(\"Shape\")), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                for (let s of shapes) {\r\n                    rh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe und fügt die übergebenen Grafikobjekte der Gruppe hinzu. Der Gruppe können mit der Methode add weitere Grafikobjekte hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(shapeType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"add\")) return;\r\n\r\n                for (let s of shapes) {\r\n                    sh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Fügt die Grafikobjekte der Gruppe hinzu.', false));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"get\")) return;\r\n\r\n                return sh.getElement(index);\r\n\r\n            }, false, false, 'Gibt das Grafikelement der Gruppe mit dem entsprechenden Index zurück. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                sh.removeElementAt(index);\r\n\r\n            }, false, false, 'Entfernt das Grafikelement aus der Gruppe mit dem entsprechenden Index, zerstört es jedoch nicht. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"remove\")) return;\r\n\r\n                sh.remove(shape);\r\n                sh.worldHelper.shapes.push(shape.intrinsicData[\"Actor\"]);\r\n\r\n            }, false, false, 'Entfernt das übergebene Grafikelement aus der Gruppe, zerstört es jedoch nicht.', false));\r\n\r\n\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\") || shape == null) return [];\r\n\r\n                let shapes: RuntimeObject[] = sh.getCollidingObjects(shape);\r\n\r\n                let values: Value[] = [];\r\n                for (let sh of shapes) {\r\n                    values.push({\r\n                        type: shapeType,\r\n                        value: sh\r\n                    })\r\n\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, 'Gibt die Objekte der Gruppe zurück, die mit dem übergebenen Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"getCollisionPairs\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maxOneCollisionPerShape\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), collisionPairArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group2: RuntimeObject = parameters[1].value;\r\n                let maxOneCollisionPerShape: boolean = parameters[2].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n                let groupHelper2: GroupHelper = <GroupHelper>group2.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingObjects2(groupHelper2, collisionPairType, maxOneCollisionPerShape);\r\n\r\n            }, false, false, 'Überprüft, welche Objekte der Gruppe mit welchen der anderen kollidieren.' +\r\n            ' Gibt für jede Kollision ein Collisionpair-Objekt zurück, das die beiden kollidierenden Objekte enthält.' +\r\n        ' Falls maxOneCollisionPerShape == true ist jedes Objekt dabei aber nur in max. einem Collisionpair-Objekt enthalten.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"size\")) return;\r\n\r\n                return sh.shapes.length;\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Elemente in der Gruppe enthalten sind.', false));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"empty\")) return;\r\n\r\n                sh.removeAllChidren();\r\n\r\n            }, false, false, 'Entfernt alle Elemente aus der Gruppe, löscht die Elemente aber nicht.', false));\r\n\r\n        this.addMethod(new Method(\"destroyAllChildren\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"destroyAllChildren\")) return;\r\n\r\n                sh.destroyChildren();\r\n\r\n            }, false, false, 'Löscht alle Elemente der Gruppe, nicht aber die Gruppe selbst.', false));\r\n\r\n\r\n        (<Klass>shapeType).addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let groupHelper: GroupHelper = group.intrinsicData[\"Actor\"];\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingShapes(groupHelper, shapeType);\r\n\r\n            }, false, false, 'Gibt alle Shapes der Gruppe group zurück, die mit dem Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Group-Objekts (und aller seiner enthaltenen Grafikobjekte!) und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"renderAsStaticBitmap\", new Parameterlist([\r\n            { identifier: \"renderAsStaticBitmap\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let doCache: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"renderAsStaticBitmap\")) return;\r\n\r\n                sh.cacheAsBitmap(doCache);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Zeichnet alle Objekte dieser Group in ein Bild und verwendet fortan nur noch dieses Bild, ohne die Kindelemente der Group erneut zu zeichnen. Mit dieser Methode können komplexe Bilder (z.B. ein Sternenhimmel) aufgebaut und dann statisch gemacht werden. Nach dem Aufbau brauchen sie daher kaum mehr Rechenzeit.', false));\r\n\r\n            (<Klass>shapeType).addMethod(new Method(\"getParentGroup\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"getParentGroup\")) return;\r\n    \r\n                    return sh.getParentGroup();\r\n    \r\n                }, false, false, 'Gibt die Group zurück, in der sich das Grafikobjekt befindet, bzw. null, falls es in keiner Group ist.', false));\r\n    \r\n    }\r\n\r\n}\r\n\r\nexport class GroupHelper extends ShapeHelper {\r\n\r\n    shapes: RuntimeObject[] = [];\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.displayObject = new PIXI.Container();\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    setChildIndex(sh: ShapeHelper, index: number) {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject;\r\n        container.setChildIndex(sh.displayObject, index);\r\n\r\n        let oldIndex = this.shapes.indexOf(sh.runtimeObject);\r\n        this.shapes.splice(oldIndex, 1);\r\n        this.shapes.splice(index, 0, sh.runtimeObject);\r\n}\r\n\r\n\r\n    cacheAsBitmap(doCache: boolean) {\r\n        let container = <PIXI.Container>this.displayObject;\r\n\r\n        // If you set doCache to false and shortly afterwards to true: \r\n        // make shure there's at least one rendercycle in between.\r\n        if (doCache) {\r\n            setTimeout(() => {\r\n                container.cacheAsBitmap = true;\r\n            }, 300);\r\n        } else {\r\n            container.cacheAsBitmap = doCache;\r\n        }\r\n    }\r\n\r\n\r\n    removeElementAt(index: number) {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n\r\n        let shape = this.shapes[index];\r\n        this.remove(shape);\r\n    }\r\n\r\n    getElement(index: number): RuntimeObject {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n        return this.shapes[index];\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let groupHelperCopy: GroupHelper = new GroupHelper(this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = groupHelperCopy;\r\n\r\n        for (let ro of this.shapes) {\r\n            let shapeHelper: ShapeHelper = ro.intrinsicData[\"Actor\"];\r\n\r\n            let roCopy: RuntimeObject = shapeHelper.getCopy(<Klass>ro.class)\r\n            let shapeHelperCopy: ShapeHelper = roCopy.intrinsicData[\"Actor\"];\r\n\r\n            groupHelperCopy.add(roCopy);\r\n\r\n\r\n        }\r\n\r\n        groupHelperCopy.copyFrom(this);\r\n        groupHelperCopy.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.timerPaused = tp;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    add(shape: RuntimeObject) {\r\n\r\n        if(shape == null) return;\r\n\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        if (shapeHelper.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Ein schon zerstörtes Objekt kann keiner Gruppe hinzugefügt werden.\");\r\n            return;\r\n        }\r\n\r\n        if (this.hasCircularReference(shape)) {\r\n            return;\r\n        }\r\n\r\n        this.shapes.push(shape);\r\n\r\n        if (shapeHelper.belongsToGroup != null) {\r\n            shapeHelper.belongsToGroup.remove(shape);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(shapeHelper);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        shapeHelper.belongsToGroup = this;\r\n\r\n        this.displayObject.parent.updateTransform();\r\n        let inverse = new PIXI.Matrix().copyFrom(this.displayObject.transform.worldTransform);\r\n        inverse.invert();\r\n        shapeHelper.displayObject.localTransform.prepend(inverse.prepend(this.worldHelper.stage.localTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n\r\n        (<PIXI.Container>this.displayObject).addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let xSum: number = 0;\r\n        let ySum: number = 0;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            xSum += sh.getCenterX();\r\n            ySum += sh.getCenterY();\r\n        }\r\n\r\n        let x = xSum / this.shapes.length;\r\n        let y = ySum / this.shapes.length;\r\n\r\n        this.displayObject.updateTransform();\r\n        let p1: PIXI.Point = this.displayObject.worldTransform.applyInverse(new PIXI.Point(x, y));\r\n        this.centerXInitial = p1.x;\r\n        this.centerYInitial = p1.y;\r\n    }\r\n\r\n    public removeAllChidren() {\r\n        let index: number = 0;\r\n        for (let shape of this.shapes) {\r\n            this.deregister(shape, index++);\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    public remove(shape: RuntimeObject) {\r\n        let index = this.shapes.indexOf(shape);\r\n        if (index >= 0) {\r\n            this.shapes.splice(index, 1);\r\n            this.deregister(shape, index);\r\n        }\r\n    }\r\n\r\n    private deregister(shape: RuntimeObject, index: number) {\r\n        let shapeHelper: ShapeHelper = shape.intrinsicData['Actor'];\r\n\r\n        let transform = new PIXI.Matrix().copyFrom(shapeHelper.displayObject.transform.worldTransform);\r\n\r\n        (<PIXI.Container>this.displayObject).removeChild(shapeHelper.displayObject);\r\n\r\n        let inverseStageTransform = new PIXI.Matrix().copyFrom(this.worldHelper.stage.localTransform);\r\n        inverseStageTransform.invert();\r\n        shapeHelper.displayObject.localTransform.identity();\r\n        shapeHelper.displayObject.localTransform.append(transform.prepend(inverseStageTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n        this.worldHelper.stage.addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n        shapeHelper.belongsToGroup = null;\r\n\r\n    }\r\n\r\n\r\n    public render(): void {\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.destroyChildren();\r\n        super.destroy();\r\n    }\r\n\r\n    public destroyChildren(): void {\r\n        for (let shape of this.shapes.slice(0)) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.destroy();\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    hasOverlappingBoundingBoxWith(shapeHelper: ShapeHelper): boolean {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n        return true;\r\n    }\r\n\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (!this.hasOverlappingBoundingBoxWith(shapeHelper)) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.setHitPolygonDirty(dirty);\r\n        }\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        this.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n\r\n        if (x < bb.left || x > bb.left + bb.width || y < bb.top || y > bb.top + bb.height) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCollidingObjects(shape: RuntimeObject): RuntimeObject[] {\r\n\r\n        let collidingShapes: RuntimeObject[] = [];\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        for (let s of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>s.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                collidingShapes.push(s);\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n\r\n    }\r\n\r\n    getCollidingObjects2(groupHelper2: GroupHelper, collisionPairType: Type,\r\n        maxOneCollisionPerShape: boolean): Value[] {\r\n\r\n        let collisionPairs: Value[] = [];\r\n\r\n        let alreadyCollidedHelpers2: Map<ShapeHelper, boolean> = new Map();\r\n\r\n        for (let shape1 of this.shapes) {\r\n            let shapeHelper1: ShapeHelper = <ShapeHelper>shape1.intrinsicData[\"Actor\"];\r\n            for (let shape2 of groupHelper2.shapes) {\r\n                let shapeHelper2: ShapeHelper = <ShapeHelper>shape2.intrinsicData[\"Actor\"];\r\n                if (shapeHelper1.collidesWith(shapeHelper2)) {\r\n\r\n                    if (!maxOneCollisionPerShape || alreadyCollidedHelpers2.get(shapeHelper2) == null) {\r\n                        alreadyCollidedHelpers2.set(shapeHelper2, true);\r\n                        let rto: RuntimeObject = new RuntimeObject(<Klass>collisionPairType);\r\n\r\n                        rto.intrinsicData[\"ShapeA\"] = shapeHelper1.runtimeObject;\r\n                        rto.intrinsicData[\"ShapeB\"] = shapeHelper2.runtimeObject;\r\n                        collisionPairs.push({\r\n                            type: collisionPairType,\r\n                            value: rto\r\n                        });\r\n                    }\r\n\r\n                    if (maxOneCollisionPerShape) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisionPairs;\r\n\r\n    }\r\n\r\n    hasCircularReference(shapeToAdd: RuntimeObject) {\r\n        let gh = shapeToAdd.intrinsicData[\"Actor\"];\r\n        if (gh instanceof GroupHelper) {\r\n            if (gh == this) {\r\n                this.worldHelper.interpreter.throwException(\"Eine Group darf sich nicht selbst enthalten!\");\r\n                return true;\r\n            } else {\r\n                for (let shape of gh.shapes) {\r\n                    if (this.hasCircularReference(shape)) {\r\n                        return true;\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    tint(color: string) {\r\n        for (let child of this.shapes) {\r\n            (<ShapeHelper>child.intrinsicData[\"Actor\"]).tint(color);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class KeyClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Key\", module, \"Aufzählung von Sondertasten zur Benutzung in den Methoden Actor.onKeyUp, Actor.onKeyTyped und Actor.onKeyDown\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"ArrowUp\", stringPrimitiveType, (value) => { value.value = \"ArrowUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowDown\", stringPrimitiveType, (value) => { value.value = \"ArrowDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowLeft\", stringPrimitiveType, (value) => { value.value = \"ArrowLeft\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowRight\", stringPrimitiveType, (value) => { value.value = \"ArrowRight\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Enter\", stringPrimitiveType, (value) => { value.value = \"Enter\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Space\", stringPrimitiveType, (value) => { value.value = \" \" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Shift\", stringPrimitiveType, (value) => { value.value = \"Shift\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Alt\", stringPrimitiveType, (value) => { value.value = \"Alt\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Strg\", stringPrimitiveType, (value) => { value.value = \"Control\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageUp\", stringPrimitiveType, (value) => { value.value = \"PageUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageDown\", stringPrimitiveType, (value) => { value.value = \"PageDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Backspace\", stringPrimitiveType, (value) => { value.value = \"Backspace\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Escape\", stringPrimitiveType, (value) => { value.value = \"Escape\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Entf\", stringPrimitiveType, (value) => { value.value = \"Delete\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Einf\", stringPrimitiveType, (value) => { value.value = \"Insert\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Ende\", stringPrimitiveType, (value) => { value.value = \"End\" }, true, Visibility.public, true, \"\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\nimport { polygonEnthältPunkt, streckenzugEnthältPunkt } from \"../../tools/MatheTools.js\";\r\n\r\nexport class PolygonClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Polygon\", module, \"Wahlweise geschlossenes Polygon (mit Füllung und Rand) oder offener Streckenzug\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n        let shapeClass = <Klass>module.typeStore.getType(\"Shape\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als Array von double-Werten der Form {x1, y1, x2, y2, ...} übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als double-Werte der Form x1, y1, x2, y2, ... übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon ohne Punkte.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if(shape == null){\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n                shapeHelper.displayObject.getBounds();  // seems to work magic in updating transforms of children...\r\n                \r\n                let points: convexhull.Point[] = [];\r\n                points = this.extractPoints(shapeHelper, points);\r\n                points = convexhull.makeHull(points);\r\n\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let p of points){\r\n                    pointsNumber.push(p.x);\r\n                    pointsNumber.push(p.y);\r\n                }\r\n\r\n                if(pointsNumber.length > 0){\r\n                    pointsNumber = pointsNumber.concat(pointsNumber.slice(0, 2))\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o, true);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Seine Punkte sind die Punkte des Hitpolygons der übergebenen Figur.', true));\r\n            \r\n        this.addMethod(new Method(\"addPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoint\")) return;\r\n\r\n                sh.addPoint(x, y);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt hinzu.\"', false));\r\n\r\n            this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let points: Value[] = parameters[1].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"addPoints\")) return;\r\n    \r\n                    let p: { x: number, y: number }[];\r\n    \r\n                    sh.setPoints(points.map(value => value.value));\r\n    \r\n                }, false, false, 'Löscht alle Punkte des Polygons und setzt komplett neue. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n                \r\n        this.addMethod(new Method(\"addPoints\", new Parameterlist([\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let points: Value[] = parameters[1].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoints\")) return;\r\n\r\n                let p: { x: number, y: number }[];\r\n\r\n                for (let i = 0; i < points.length - 1; i += 2) {\r\n                    sh.addPoint(points[i].value, points[i + 1].value, i >= points.length - 2);\r\n                }\r\n\r\n            }, false, false, 'Fügt dem Polygon mehrere Punkte hinzu. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n\r\n        this.addMethod(new Method(\"insertPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.insertPoint(x, y, index);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt als \"index-ter\" Punkt hinzu. index == 0 => ganz am Anfang; index == Anzahl der bisherigen Punkte => ganz am Ende;\"', false));\r\n\r\n        this.addMethod(new Method(\"movePointTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.movePointTo(x, y, index);\r\n\r\n            }, false, false, 'schiebt den index-ten Punkt nach (x, y). index == 0 => erster Punkt, index == 1 => zweiter Punkt usw.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"close\")) return;\r\n\r\n                sh.isClosed = true;\r\n                sh.render();\r\n\r\n            }, false, false, 'Schließt das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"open\")) return;\r\n\r\n                sh.isClosed = false;\r\n                sh.render();\r\n\r\n            }, false, false, 'Öffnet das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Polygon-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[]{\r\n        if(shapeHelper instanceof GroupHelper){\r\n            let points1: convexhull.Point[] = [];\r\n            for(let sh of shapeHelper.shapes){\r\n                points1 = this.extractPoints(sh.intrinsicData[\"Actor\"], points1);\r\n            }\r\n            return points.concat(points1);\r\n        } else {\r\n            if(shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function(punkt){return {x: punkt.x, y: punkt.y}}));\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport class PolygonHelper extends FilledShapeHelper {\r\n\r\n    isClosed: boolean = false;\r\n\r\n    constructor(points: number[], private closeAndFill: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, isClosed: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.isClosed = isClosed;\r\n        let xSum = 0; let ySum = 0;\r\n        this.hitPolygonInitial = [];\r\n\r\n        for (let i = 0; i < points.length;) {\r\n            let x = points[i++];\r\n            let y = points[i++];\r\n            xSum += x;\r\n            ySum += y;\r\n            this.hitPolygonInitial.push({ x: x, y: y });\r\n        }\r\n\r\n        if (points.length > 1) {\r\n            this.centerXInitial = xSum / this.hitPolygonInitial.length;\r\n            this.centerYInitial = ySum / this.hitPolygonInitial.length;\r\n        }\r\n\r\n        if (!closeAndFill) {\r\n            this.borderColor = 0x0000ff;\r\n        }\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: PolygonHelper = new PolygonHelper([], this.closeAndFill, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if (this.hitPolygonInitial.length > 0) {\r\n            g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n            for (let i = 1; i < this.hitPolygonInitial.length; i++) {\r\n                g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n            }\r\n        }\r\n\r\n        if (this.closeAndFill || this.isClosed) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n    addPoint(x: number, y: number, render: boolean = true) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.push({ x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        if (render) this.render();\r\n    }\r\n\r\n    insertPoint(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.splice(index, 0, { x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    movePointTo(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        if(this.hitPolygonInitial.length == 0) return;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial[index].x = p.x;\r\n        this.hitPolygonInitial[index].y = p.y;\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setPoint(x: number, y: number, index: number) {\r\n        if (index == 0 || index == 1) {\r\n            this.hitPolygonInitial[index] = { x: x, y: y };\r\n            this.hitPolygonDirty = true;\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    setPoints(coordinates: number[]) {\r\n\r\n        this.hitPolygonInitial = [];\r\n        for(let i = 0; i < coordinates.length - 1; i += 2){\r\n            this.hitPolygonInitial.push({x: coordinates[i], y: coordinates[i+1]});\r\n        }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setAllPointsUntransformed(points: number[]) {\r\n        this.hitPolygonInitial = [];\r\n        for (let i = 0; i < points.length; i += 2) {\r\n            this.hitPolygonInitial.push({ x: points[i], y: points[i + 1] })\r\n        }\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        if(this.closeAndFill){\r\n            return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        } else {\r\n            return streckenzugEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class RectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Rectangle\", module, \"Rechteck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Rectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                \r\n                let rh = new RectangleHelper(left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n            \r\n            this.addMethod(new Method(\"setWidth\", new Parameterlist([\r\n                { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let width: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setWidth\")) return;\r\n\r\n                sh.width = width / sh.displayObject.scale.x;\r\n                sh.centerXInitial = sh.left + sh.width/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite des Rechtecks.\", false));\r\n\r\n            this.addMethod(new Method(\"setHeight\", new Parameterlist([\r\n                { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let height: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setHeight\")) return;\r\n\r\n                sh.height = height / sh.displayObject.scale.y;\r\n                sh.centerYInitial = sh.top + sh.height/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Höhe des Rechtecks.\", false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Rectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.render();\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RectangleHelper = new RectangleHelper(this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: this.left, y: this.top }, { x: this.left, y: this.top + this.height },\r\n             { x: this.left + this.width, y: this.top + this.height }, { x: this.left + this.width, y: this.top }\r\n        ];\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.moveTo(this.left, this.top);\r\n        g.lineTo(this.left + this.width, this.top);\r\n        g.lineTo(this.left + this.width, this.top + this.height);\r\n        g.lineTo(this.left, this.top + this.height);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class RepeatTypeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"RepeatType\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null, \r\n                identifier: \"once\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"loop\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"backAndForth\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Gibt an, auf welche Art eine Sprite-Animation abgespielt werden soll.\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RoundedRectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RoundedRectangle\", module, \"Rechteck mit abgerundeten Ecken\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"RoundedRectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let radius: number = parameters[5].value;\r\n\r\n                let rh = new RoundedRectangleHelper(left, top, width, height, radius, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles abgerundetes Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.radius * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt den Eckradius zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des RoundedRectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RoundedRectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number, public radius: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.addCenterCircle(left + radius, top + radius, Math.PI/2);\r\n        this.addCenterCircle(left + radius, top + height - radius, Math.PI);\r\n        this.addCenterCircle(left + width - radius, top + height - radius, 3*Math.PI/2);\r\n        this.addCenterCircle(left + width - radius, top + radius, 0);\r\n        this.hitPolygonInitial.push({x: left + radius, y: top});\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RoundedRectangleHelper = new RoundedRectangleHelper(this.left, this.top, this.width, this.height, this.radius, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    addCenterCircle(midx: number, midy: number, angleStart: number){\r\n        let n = 8;\r\n        let dw = Math.PI/2/n;\r\n\r\n        for(let i = 0; i <= n; i++){\r\n            this.hitPolygonInitial.push({x: midx + this.radius*Math.cos(angleStart + dw*i), y: midy - this.radius*Math.sin(angleStart + dw*i)})\r\n        }\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawRoundedRect(this.left,this.top, this.width, this.height, this.radius);\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n        // g.lineStyle(1, 0xff0000, 1);\r\n\r\n        // g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n        // for(let i = 1; i < this.hitPolygonInitial.length; i++){\r\n        //     g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n        // }\r\n        \r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class ScaleModeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"ScaleMode\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"linear\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"nearest_neighbour\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Art der Interpolation der Pixelfarben beim Skalieren von grafischen Objekten\"\r\n    }\r\n\r\n}","export type SoundType = {\r\n    url: string,\r\n    name: string,\r\n    //@ts-ignore\r\n    player?: Howl,\r\n    description: string\r\n}\r\n\r\nexport class SoundTools {\r\n\r\n    static sounds: SoundType[] = [\r\n        {\r\n            url: \"assets/mp3/nearby_explosion_with_debris.mp3\",\r\n            name: \"nearby_explosion_with_debris\",\r\n            description: \"nahe Explosion mit herabfallenden Trümmern\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/nearby_explosion.mp3\",\r\n            name: \"nearby_explosion\",\r\n            description: \"nahe Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_bomb.mp3\",\r\n            name: \"far_bomb\",\r\n            description: \"fernes Geräusch einer Bombe\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/cannon_boom.mp3\",\r\n            name: \"cannon_boom\",\r\n            description: \"einzelner Kanonendonner\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_explosion.mp3\",\r\n            name: \"far_explosion\",\r\n            description: \"ferne Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/laser_shoot.mp3\",\r\n            name: \"laser_shoot\",\r\n            description: \"Laserschuss (oder was man dafür hält...)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_bell.mp3\",\r\n            name: \"short_bell\",\r\n            description: \"kurzes Klingeln (wie bei alter Landenkasse)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/flamethrower.mp3\",\r\n            name: \"flamethrower\",\r\n            description: \"Flammenwerfer\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/digging.mp3\",\r\n            name: \"digging\",\r\n            description: \"Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_digging.mp3\",\r\n            name: \"short_digging\",\r\n            description: \"kurzes Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/shoot.mp3\",\r\n            name: \"shoot\",\r\n            description: \"Schussgeräusch\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_shoot.mp3\",\r\n            name: \"short_shoot\",\r\n            description: \"ein kurzer Schuss\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/step.mp3\",\r\n            name: \"step\",\r\n            description: \"ein Schritt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/boulder.mp3\",\r\n            name: \"boulder\",\r\n            description: \"Geräusch eines Steins, der auf einen zweiten fällt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_d5.wav\",\r\n            name: \"pong_d\",\r\n            description: \"Tiefer Pong-Ton\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_f5.wav\",\r\n            name: \"pong_f\",\r\n            description: \"Hoher Pong-Ton\"\r\n        },\r\n    ]\r\n\r\n    static soundMap: Map<string, SoundType> = new Map();\r\n\r\n    private static isInitialized: boolean = false;\r\n\r\n    public static init(){\r\n        let praefix: string = \"\";\r\n        //@ts-ignore\r\n        if(window.javaOnlineDir != null){\r\n            //@ts-ignore\r\n            praefix = window.javaOnlineDir;\r\n        }\r\n        if(!SoundTools.isInitialized){\r\n            SoundTools.isInitialized = true;\r\n            for(let sound of SoundTools.sounds){\r\n                //@ts-ignore\r\n                sound.player = new Howl({src: [praefix + sound.url], preload: true})\r\n                SoundTools.soundMap.set(sound.name, sound);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public static play(name: string){\r\n        let st: SoundType = SoundTools.soundMap.get(name);\r\n        if(st != null){\r\n            st.player.play();\r\n        }\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\n\r\nexport class SoundKlass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Sound\", module, \"Aufzählung aller Geräusche\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            this.addAttribute(new Attribute(sound.name, stringPrimitiveType, (value) => { value.value = sound.name }, true, Visibility.public, true, sound.description));\r\n        }\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n            { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let sound: string = parameters[1].value;\r\n            SoundTools.play(sound);\r\n        }    \r\n        , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Punkt, abstandPunktZuGerade, abstand } from \"../../tools/MatheTools.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class HitPolygonStore {\r\n\r\n    private static polygonStore: { [path: string]: Punkt[] } = {};\r\n\r\n    public static getPolygonForTexture(name: string, index: number, spriteHelper: SpriteHelper, sprite: PIXI.Sprite): Punkt[] {\r\n\r\n        if (index == null) {\r\n            index = 0;\r\n        }\r\n        name += \"#\" + index;\r\n\r\n        let polygon = HitPolygonStore.polygonStore[name];\r\n\r\n        if (polygon == null) {\r\n            // polygon = HitPolygonStore.getPolygon(<PIXI.Sprite>spriteHelper.displayObject, spriteHelper.worldHelper);\r\n            polygon = HitPolygonStore.getPolygon(sprite, spriteHelper.worldHelper);\r\n\r\n            HitPolygonStore.polygonStore[name] = polygon;\r\n        }\r\n\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static getPolygon(sprite: PIXI.Sprite, worldHelper: WorldHelper): Punkt[] {\r\n\r\n        let pixels = worldHelper.app.renderer.plugins.extract.pixels(sprite);\r\n        let w = sprite.width;\r\n        let h = sprite.height;\r\n\r\n        if (pixels.length !== 4 * w * h) {\r\n            return [{ x: 0, y: 0 }, { x: w, y: 0 }, { x: w, y: h }, { x: 0, y: h }];\r\n        }\r\n\r\n        let polygon: Punkt[] = [];\r\n        let additionalPointsPerHalfBorder = 3;\r\n        let pointsPerBorder = additionalPointsPerHalfBorder*2 + 3;\r\n\r\n        let probes: Punkt[] = [];\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: 0}, {x: w-1, y: 0}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: 0}, {x: w-1, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: h-1}, {x: 0, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: h-1}, {x: 0, y: 0}, \r\n            pointsPerBorder, probes);\r\n\r\n        let mid = {x: w/2, y: h/2};    \r\n        for(let probe of probes){\r\n            HitPolygonStore.probe(polygon, probe, mid,w, h, pixels);\r\n        }\r\n\r\n        let done: boolean = false;\r\n        while(!done){\r\n            done = true;\r\n            for(let i = 0; i < polygon.length - 1; i++){\r\n                let d = abstandPunktZuGerade(polygon[i], polygon[(i+2)%polygon.length], polygon[i+1]);\r\n                if(d < 2){\r\n                    polygon.splice(i+1, 1);\r\n                    done = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(polygon);\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static addPointsOnLine(start: Punkt, end: Punkt, n: number, points: Punkt[]){\r\n    \r\n        let fx = (end.x - start.x)/(n-1);\r\n        let fy = (end.y - start.y)/(n-1);\r\n\r\n        for(let i = 1; i <= n - 1 + 0.1; i++ ){\r\n            points.push({\r\n                x: start.x + fx*i,\r\n                y: start.y + fy*i\r\n            });\r\n        }    \r\n\r\n\r\n    }\r\n\r\n    private static probe(polygon: Punkt[], start: Punkt, end: Punkt, \r\n        width: number, height: number, pixels: Uint8Array) {\r\n\r\n        let length = abstand(start, end);\r\n        let fx = (end.x - start.x) / length;\r\n        let fy = (end.y - start.y) / length;\r\n\r\n        let x: number, y: number;\r\n\r\n        for (let i = 0; i <= length - 2; i++) {\r\n\r\n            x = start.x + i * fx;\r\n            y = start.y + i * fy;\r\n\r\n            if (!HitPolygonStore.isTransparent(x, y, width, height, pixels)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        polygon.push({ x: x, y: y });\r\n\r\n    }\r\n\r\n\r\n    private static isTransparent(x: number, y: number, width: number, height: number, pixels: Uint8Array) {\r\n\r\n        if (x < 0 || y < 0 || x > width || y > height) {\r\n            return true;\r\n        }\r\n\r\n        let p = pixels[4 * Math.round(x) + 4 * width * Math.round(y) + 3];\r\n        // console.log(\"x: \" + x + \", y: \" + y + \", width: \" + width + \" = \" + p);\r\n        // console.log(\"index: \" + (4 * x + 4 * width * y + 3) + \", length: \" + pixels.length);\r\n\r\n        return p == 0;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpriteLibraryPage } from \"../../help/SpriteLibraryPage.js\";\r\nimport { RenderTexture } from \"@pixi/core\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class SpriteClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sprite\", module, \"Ein Sprite ist eine kleine Pixelgrafik, die verschoben, gedreht und skaliert werden kann. Zudem besitzt es Methoden zum Erkennen von Kollisionen mit anderen grafischen Objekten.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let scaleModeClass = <Klass>module.typeStore.getType(\"ScaleMode\")\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[5].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o, null, scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], \"linear\");\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Aufzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, null, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let index: number = parameters[2].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier, index);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImageIndex\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n\r\n                sh.setTexture(sh.textureName, index);\r\n\r\n            }, false, false, 'Ändert den Bildindex des Sprites.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"indexArray\", type: new ArrayType(intPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let indexArray: Value[] = parameters[1].value;\r\n                let repeatType: EnumRuntimeObject = parameters[2].value;\r\n                let imagesPerSecond: number = parameters[3].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                let indices: number[] = [];\r\n                for (let v of indexArray) {\r\n                    indices.push(v.value);\r\n                }\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"toIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fromIndex: number = parameters[1].value;\r\n                let toIndex: number = parameters[2].value;\r\n                let repeatType: EnumRuntimeObject = parameters[3].value;\r\n                let imagesPerSecond: number = parameters[4].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                let indices: number[] = [];\r\n\r\n                if (Math.abs(toIndex - fromIndex) < 10000) {\r\n                    let delta = Math.sign(toIndex - fromIndex);\r\n                    for (let i = fromIndex; i != toIndex; i = i + delta) indices.push(i);\r\n                }\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"stopAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.stopAnimation(false);\r\n\r\n            }, false, false, 'Stoppt die gerade laufende Animation', false));\r\n\r\n        this.addMethod(new Method(\"pauseAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"pauseAnimation\")) return;\r\n\r\n                sh.pauseAnimation();\r\n\r\n            }, false, false, 'Pausiert die laufende Animation.', false));\r\n\r\n        this.addMethod(new Method(\"resumeAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"resumeAnimation\")) return;\r\n\r\n                sh.resumeAnimation();\r\n\r\n            }, false, false, 'Fährt mit einer pausierten Animation wieder fort.', false));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sprite-Objekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"makeTiling\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"makeTiling\")) return;\r\n\r\n                sh.makeTiling(width, height);\r\n\r\n            }, false, false, \"Fügt das identische Bild nach rechts und unten kachelartig ('tile'!) so oft hinzu, bis die angegebene Breite erreicht ist. \\nTIPP: Mit der Methode getTileImage() erhält man ein Tile-Objekt, dessen Methoden move, scale, mirrorX und mirrorY sich gleichzeitig auf jede einzelne Kachel auswirken.\", false));\r\n\r\n        this.addMethod(new Method(\"getTileImage\", new Parameterlist([\r\n        ]), <Klass>module.typeStore.getType(\"Tile\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getTileImage\")) return;\r\n\r\n                if(!sh.isTileSprite){\r\n                    sh.worldHelper.interpreter.throwException(\"Das Sprite hat kein TileImage. Sie müssen es zuerst mit der Methode makeTiling in ein Kachel-Sprite umwandeln.\")\r\n                    return;\r\n                }\r\n\r\n                let ret: RuntimeObject = new RuntimeObject(<Klass>module.typeStore.getType(\"Tile\"));\r\n\r\n                ret.intrinsicData[\"Actor\"] = new TileHelper(sh);\r\n\r\n                return ret;\r\n\r\n            }, false, false, \"Nachdem das Sprite mittels der Methode 'makeTiling' zum TileSprite gemacht wurde, kann wirken die Methoden move, scale und rotate immer auf den ganzen gekachelten Bereich. Will man das verfielfachte Bild ändern, so bekommt man über diese Methode das Sprite-Objekt, das diesem Bild entspricht. Ruft man für dieses Objekt die Methoden move, rotate oder scale auf, so wirken sie auf jede der einzelnen Kacheln.\", false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SpriteHelper extends ShapeHelper {\r\n\r\n    animationIndices: number[] = [];\r\n    animationRuns: boolean = false;\r\n    imagesPerMillisecond: number = 1;\r\n    animationTime: number = 0;\r\n    animationPaused: boolean = false;\r\n\r\n    repeatType = \"once\";\r\n    textureName: string = \"\";\r\n\r\n    isTileSprite: boolean = false;\r\n\r\n    constructor(public x: number, public y: number, public name: string, public index: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, copyFromOtherShape?: ShapeHelper,\r\n        public scaleMode: string = \"nearest_neighbour\") {\r\n        super(interpreter, runtimeObject);\r\n\r\n        if (copyFromOtherShape == null) {\r\n            this.setTexture(null, index);\r\n        } else {\r\n            this.copyBitmapFromShape(copyFromOtherShape);\r\n            let bounds = copyFromOtherShape.displayObject.getBounds();\r\n            this.x = bounds.left + bounds.width / 2;\r\n            this.y = bounds.top + bounds.height / 2;\r\n        }\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        this.displayObject.localTransform.translate(this.x - sprite.width / 2, this.y - sprite.height / 2);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.worldHelper.stage.addChild(sprite);\r\n\r\n        this.centerXInitial = sprite.width / 2;\r\n        this.centerYInitial = sprite.height / 2;\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    makeTiling(width: number, height: number) {\r\n        width /= this.scaleFactor;\r\n        height /= this.scaleFactor;\r\n        let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n        let tileSprite = new PIXI.TilingSprite(sprite.texture, width, height);\r\n        sprite.texture.baseTexture.mipmap = PIXI.MIPMAP_MODES.OFF;\r\n        tileSprite.setParent(sprite.parent);\r\n        tileSprite.transform.localTransform.copyFrom(sprite.transform.localTransform);\r\n        //@ts-ignore\r\n        tileSprite.transform.onChange();\r\n        tileSprite.updateTransform();\r\n        // tileSprite.clampMargin = -0.5;\r\n        this.displayObject = tileSprite;\r\n        this.centerXInitial += -sprite.width / 2 + width / 2;\r\n        this.centerYInitial += -sprite.height / 2 + height / 2;\r\n        let left = this.centerXInitial - width / 2;\r\n        let top = this.centerYInitial - height / 2;\r\n        let right = left + width;\r\n        let bottom = top + height;\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: right, y: top }, { x: right, y: bottom }, { x: left, y: bottom }\r\n        ];\r\n        this.setHitPolygonDirty(true);\r\n        sprite.destroy();\r\n        this.isTileSprite = true;\r\n    }\r\n\r\n    setTileOffset(x: number, y: number) {\r\n        if (this.isTileSprite) {\r\n            let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.displayObject;\r\n            tileSprite.tilePosition.set(x, y);\r\n        }\r\n    }\r\n\r\n\r\n    copyBitmapFromShape(copyFromOtherShape: ShapeHelper) {\r\n\r\n        let bounds = copyFromOtherShape.displayObject.getBounds();\r\n\r\n        let width = bounds.width;\r\n        let height = bounds.height;\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: this.scaleMode == \"nearest_neighbour\" ? PIXI.SCALE_MODES.NEAREST : PIXI.SCALE_MODES.LINEAR,\r\n                width: width,\r\n                height: height\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let dob = copyFromOtherShape.displayObject;\r\n        this.worldHelper.app.renderer.render(dob, {\r\n            renderTexture: rt,\r\n            transform: new PIXI.Matrix().translate(-bounds.left, -bounds.top)\r\n        });\r\n\r\n        let points: convexhull.Point[] = [];\r\n        points = this.extractPoints(copyFromOtherShape, points);\r\n\r\n        for (let p of points) {\r\n            p.x -= bounds.left;\r\n            p.y -= bounds.top;\r\n        }\r\n\r\n        this.hitPolygonInitial = points;\r\n        this.hitPolygonInitial = convexhull.makeHull(points);\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        this.displayObject = new PIXI.Sprite(rt);\r\n\r\n        copyFromOtherShape.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[] {\r\n        if (shapeHelper instanceof GroupHelper) {\r\n            for (let sh of shapeHelper.shapes) {\r\n                points = this.extractPoints(sh.intrinsicData[\"Actor\"], points);\r\n            }\r\n            return points;\r\n        } else {\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function (punkt) { return { x: punkt.x, y: punkt.y } }));\r\n\r\n        }\r\n    }\r\n\r\n    getWidth(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.width * this.scaleFactor;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.height * this.scaleFactor;\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SpriteHelper = new SpriteHelper(this.x, this.y, this.name, this.index, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    setAlpha(alpha: number) {\r\n        this.displayObject.alpha = alpha;\r\n    }\r\n\r\n    setTexture(name?: string, index?: number) {\r\n\r\n        if (name == this.name && index == this.index) return;\r\n\r\n        if (name == null) name = this.name;\r\n        if (index == null) index = 0;\r\n        this.index = index;\r\n\r\n        this.textureName = name;\r\n\r\n        // let prefix = \"\";\r\n        // //@ts-ignore\r\n        // if (window.javaOnlineDir != null) {\r\n        //     //@ts-ignore\r\n        //     prefix = window.javaOnlineDir;\r\n        // }\r\n\r\n        // let sheet = PIXI.Loader.shared.resources[prefix + \"assets/graphics/spritesheet.json\"].spritesheet;\r\n        let sheet = PIXI.Loader.shared.resources[\"spritesheet\"].spritesheet;\r\n        let nameWithIndex = name + \"#\" + index;\r\n        let texture = sheet.textures[nameWithIndex];\r\n\r\n        if (texture != null) {\r\n\r\n            if (this.scaleMode == \"linear\") {\r\n\r\n                let t = this.worldHelper.scaledTextures[nameWithIndex];\r\n\r\n                if (t == null) {\r\n                    let sprite = new PIXI.Sprite(texture);\r\n\r\n                    let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                        width: sprite.width,\r\n                        height: sprite.height,\r\n                        scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                    });\r\n\r\n                    this.worldHelper.app.renderer.render(sprite, {\r\n                        renderTexture: dynamicTexture1\r\n                    });\r\n                    this.worldHelper.scaledTextures[nameWithIndex] = dynamicTexture1;\r\n                    t = dynamicTexture1;\r\n                }\r\n\r\n                texture = t;\r\n                if (texture == null) texture = sheet.textures[nameWithIndex];\r\n\r\n                // let t = this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration];\r\n                // if( t != null){\r\n                //     texture = t;\r\n                // } else {\r\n                //     let sprite = new PIXI.Sprite(texture);\r\n\r\n                //     let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width,\r\n                //         height: sprite.height,\r\n                //         scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                //     });\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n\r\n                //     sprite = new PIXI.Sprite(dynamicTexture1);\r\n\r\n                //     let dynamicTexture2 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width * this.scaleOnTextureGeneration,\r\n                //         height: sprite.height * this.scaleOnTextureGeneration,\r\n                //         scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                //     });\r\n\r\n                //     let m = new PIXI.Matrix();\r\n                //     m.scale(this.scaleOnTextureGeneration, this.scaleOnTextureGeneration);\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture2, true,\r\n                //         m);\r\n\r\n                //     texture = dynamicTexture2;\r\n\r\n                //     this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration] = texture;\r\n            }\r\n\r\n            let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n            if (sprite == null) {\r\n                sprite = new PIXI.Sprite(texture);\r\n                this.displayObject = sprite;\r\n            } else {\r\n                sprite.texture = texture; // sheet.textures[nameWithIndex];\r\n            }\r\n\r\n            this.hitPolygonInitial = HitPolygonStore.getPolygonForTexture(name, index, this, new PIXI.Sprite(sheet.textures[nameWithIndex]));\r\n            this.hitPolygonDirty = true;\r\n\r\n        } else {\r\n            if (this.displayObject == null) {\r\n                this.displayObject = new PIXI.Sprite();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    playAnimation(indexArray: number[], repeatType: string, imagesPerSecond: number) {\r\n        this.stopAnimation(false);\r\n        this.animationIndices = indexArray;\r\n        this.repeatType = repeatType;\r\n        this.imagesPerMillisecond = imagesPerSecond / 1000;\r\n        this.animationTime = 0;\r\n        this.animationRuns = true;\r\n        this.worldHelper.spriteAnimations.push(this);\r\n    }\r\n\r\n    stopAnimation(setInvisible: boolean) {\r\n        if (this.animationRuns) {\r\n            let spriteHelperList = this.worldHelper.spriteAnimations;\r\n            let i = spriteHelperList.indexOf(this);\r\n            if (i >= 0) spriteHelperList.splice(i, 1);\r\n        }\r\n        this.animationRuns = false;\r\n        if (setInvisible) this.setVisible(false);\r\n    }\r\n\r\n    pauseAnimation() {\r\n        this.animationPaused = true;\r\n    }\r\n\r\n    resumeAnimation() {\r\n        this.animationPaused = false;\r\n    }\r\n\r\n    tick(deltaTime: number) {\r\n\r\n        if (this.animationPaused) return;\r\n\r\n        let image: number;\r\n\r\n        if (this.repeatType == \"backAndForth\") {\r\n            let period2 = this.animationIndices.length * 2 / this.imagesPerMillisecond;\r\n            let numberOfPeriodsDone = Math.trunc(this.animationTime / period2);\r\n            let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period2;\r\n            image = this.imagesPerMillisecond * timeIntoPeriod;\r\n            if (image >= this.animationIndices.length) {\r\n                image = Math.max(2 * this.animationIndices.length - 0.1 - image, 0);\r\n            }\r\n            image = Math.trunc(image);\r\n        } else\r\n            if (this.repeatType == \"loop\") {\r\n                let period = this.animationIndices.length / this.imagesPerMillisecond;\r\n                let numberOfPeriodsDone = Math.trunc(this.animationTime / period);\r\n                let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period;\r\n                image = this.imagesPerMillisecond * timeIntoPeriod;\r\n                image = Math.trunc(image);\r\n            } else {\r\n                image = Math.trunc(this.imagesPerMillisecond * this.animationTime);\r\n                if (image >= this.animationIndices.length) {\r\n                    this.stopAnimation(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n        this.animationTime += deltaTime;\r\n\r\n        this.setTexture(null, this.animationIndices[image]);\r\n    }\r\n\r\n}\r\n\r\nexport class TileClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Tile\", module, \"Eine Kachel in einem Sprite, das mithilfe der Methode makeTiling zu einer Kachelfläche gemacht wurde.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport class TileHelper {\r\n    constructor(public spriteHelper: SpriteHelper) {\r\n    }\r\n\r\n    move(dx: number, dy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tilePosition.x += dx;\r\n        tileSprite.tilePosition.y += dy;\r\n    }\r\n    \r\n    scale(fx: number, fy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tileScale.x *= fx;\r\n        tileSprite.tileScale.y *= fy;\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        return this.spriteHelper.testdestroyed(method);\r\n    }\r\n\r\n\r\n}","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\ntype SpriteLibraryEntry = {\r\n    filename: string,\r\n    name: string,\r\n    index?: number\r\n}\r\n\r\ndeclare var SpriteLibrary: SpriteLibraryEntry[];\r\n\r\nexport class SpriteLibraryClass extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SpriteLibrary\", module,\r\n\r\n            SpriteLibrary.filter(\r\n                (sle) => {\r\n                    return sle.index == null || sle.index == 0\r\n                }\r\n            ).map((sle: SpriteLibraryEntry) => {\r\n                return {\r\n                    type: TokenType.pushEnumValue,\r\n                    position: null,\r\n                    identifier: sle.name\r\n                };\r\n\r\n            })\r\n\r\n        );\r\n        this.documentation = \"Aufzählung der Sprite-Grafiken\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class TextClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Text\", module, \"Text, der innerhalb der Grafikausgabe dargestellt werden kann\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"font-family\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n                let fontFamily: string = parameters[5].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o, fontFamily);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"setFontsize\", new Parameterlist([\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fontsize: number = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setFontsize(fontsize);\r\n\r\n            }, false, false, 'Setzt die Schriftgröße des Textes (Einheit: Pixel).', false));\r\n\r\n        this.addMethod(new Method(\"setAlignment\", new Parameterlist([\r\n            { identifier: \"alignment\", type: module.typeStore.getType(\"Alignment\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alignment: EnumRuntimeObject = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setAlignment(alignment.enumValue.identifier);\r\n\r\n            }, false, false, 'Setzt die Ausrichtung in X-Richtung. Zulässige Werte sind \"Alignment.left\", \"Alignment.right\" und \"Alignment.center\".', false));\r\n\r\n        this.addMethod(new Method(\"setText\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let text: string = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, 'Setzt den Text.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Text-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, 'Gibt die Breite des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setStyle\", new Parameterlist([\r\n            { identifier: \"isBold\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"isItalic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let isBold: boolean = parameters[1].value;\r\n                let isItalic: boolean = parameters[2].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                sh.setStyle(isBold, isItalic);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class TextHelper extends FilledShapeHelper {\r\n\r\n    alignment: string = \"left\";\r\n\r\n    textStyle: PIXI.TextStyle =\r\n        new PIXI.TextStyle({\r\n            fontFamily: 'Arial',\r\n            fontSize: this.fontsize,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal',\r\n            fill: [this.fillColor], // gradient possible...\r\n            stroke: this.borderColor,\r\n            strokeThickness: this.borderWidth,\r\n            dropShadow: false,\r\n            wordWrap: false,\r\n            align: \"left\",\r\n            lineJoin: 'round'\r\n        });\r\n\r\n    constructor(public x: number, public y: number, public fontsize: number,\r\n        public text: string,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, public fontFamily?: string) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = x;\r\n        this.centerYInitial = y;\r\n\r\n        if (this.fontsize == 0) this.fontsize = 10;\r\n\r\n        this.borderColor = null;\r\n        this.textStyle.stroke = null;\r\n        if (fontFamily != null) {\r\n            this.textStyle.fontFamily = fontFamily;\r\n        }\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n    }\r\n\r\n    setStyle(isBold: boolean, isItalic: boolean){\r\n        this.textStyle.fontWeight = isBold ? \"bold\" : \"normal\";\r\n        this.textStyle.fontStyle = isItalic ? \"italic\" : \"normal\";\r\n        this.render();\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TextHelper = new TextHelper(this.x, this.y, this.fontsize, this.text, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.alignment = this.alignment;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        this.textStyle.fill = this.fillColor;\r\n        this.textStyle.stroke = this.borderColor;\r\n        this.textStyle.strokeThickness = this.borderWidth;\r\n        this.textStyle.fontSize = this.fontsize;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Text(this.text, this.textStyle);\r\n            this.displayObject = g;\r\n            this.displayObject.localTransform.translate(this.x, this.y);\r\n            //@ts-ignore\r\n            this.displayObject.transform.onChange();\r\n            this.worldHelper.stage.addChild(g);\r\n        } else {\r\n            g.text = this.text;\r\n            g.alpha = this.fillAlpha;\r\n            switch (this.alignment) {\r\n                case \"left\": g.anchor.x = 0; break;\r\n                case \"center\": g.anchor.x = 0.5; break;\r\n                case \"right\": g.anchor.x = 1.0; break;\r\n            }\r\n            g.style = this.textStyle;\r\n        }\r\n\r\n        this.centerXInitial = 0;\r\n        this.centerYInitial = 0;\r\n        if (this.text != null) {\r\n            let tm = PIXI.TextMetrics.measureText(this.text, this.textStyle);\r\n\r\n            this.centerXInitial = tm.width / 2;\r\n            this.centerYInitial = tm.height / 2;\r\n        }\r\n\r\n\r\n    };\r\n\r\n    setFontsize(fontsize: number) {\r\n        this.fontsize = fontsize;\r\n        if (this.fontsize == 0) this.fontsize = 10;\r\n        this.render();\r\n    }\r\n\r\n    setText(text: string) {\r\n        this.text = text;\r\n        this.render();\r\n    }\r\n\r\n    setAlignment(alignment: string) {\r\n        this.alignment = alignment;\r\n        this.render();\r\n    }\r\n\r\n    getWidth(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.width;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.height;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, charPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Input\", module, \"Klasse mit statischen Methoden zur Eingabe von Text per Tastatur\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n        /**\r\n         * Same methods without default value:\r\n         */\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n    }\r\n\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class GamepadClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Gamepad\", module, \"Klasse mit statischen Methoden zur Abfrage der Gamepads\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        // this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"isButtonDown\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let buttonIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\r\n\r\n            }, false, true, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\r\n\r\n        this.addMethod(new Method(\"isConnected\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\r\n\r\n            }, false, true, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\r\n\r\n        this.addMethod(new Method(\"getAxisValue\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let axisIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\r\n\r\n            }, false, true, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\r\n\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class MathClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Math\", module, \"Klasse mit statischen Methoden zur Berechnung mathematischer Funktionen (sin, cos, abs, ...) und zur Ermittlung von Zufallszahlen.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"round\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.round(<number>parameters[1].value);\r\n            }, false, true, \"**Rundet** den Wert\"));\r\n\r\n        this.addMethod(new Method(\"floor\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.floor(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert ab, sucht also die **nächstkleinere** ganze Zahl\"));\r\n\r\n        this.addMethod(new Method(\"ceil\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.ceil(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert auf, sucht also die **nächstgrößere** Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(<number>parameters[1].value);\r\n            }, false, true, \"Gibt das Vorzeichen der Zahl zurück, d.h. \\n  - -1, falls die Zahl **negativ** ist,\\n  - 0, falls die Zahl **0** ist und\\n  - +1, falls die Zahl **positiv** ist.\"));\r\n\r\n        this.addMethod(new Method(\"sqrt\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sqrt(<number>parameters[1].value);\r\n            }, false, true, \"Gibt die **Quadratwurzel** der Zahl zurück. Für andere Wurzeln benutze Math.pow(a, b), z.B. Math.pow(10, 1.0/3.0) für die Kubikwurzel aus 10.\"));\r\n\r\n        this.addMethod(new Method(\"random\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.random();\r\n            }, false, true, \"Gibt eine Zufallszahl aus dem Intervall [0;1[ zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pow\", new Parameterlist([\r\n            { identifier: \"Basis\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Exponent\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.pow(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, 'Math.pow(a, b) gibt \"a hoch b\" zurück.'));\r\n\r\n        this.addMethod(new Method(\"toDegrees\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / Math.PI * 180;\r\n            }, false, true, \"Wandelt einen Winkel von Rad in Grad um, d.h. berechnet Winkel/Pi*180.\"));\r\n\r\n        this.addMethod(new Method(\"toRadians\", new Parameterlist([\r\n            { identifier: \"WinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / 180 * Math.PI;\r\n            }, false, true, \"Wandelt einen Winkel von Grad in Rad um, d.h. berechnet Winkel/180*Pi.\"));\r\n\r\n        this.addMethod(new Method(\"exp\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.exp(<number>parameters[1].value);\r\n            }, false, true, 'Berechnet \"e hoch die Zahl\".'));\r\n\r\n        this.addMethod(new Method(\"log\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den natürlichen Logarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"log10\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log10(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Zehnerlogarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"sin\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Sinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"cos\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.cos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Cosinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"tan\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.tan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Tangens des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"asin\", new Parameterlist([\r\n            { identifier: \"WertDesSinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.asin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Sinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"acos\", new Parameterlist([\r\n            { identifier: \"WertDesCosinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.acos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Cosinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan\", new Parameterlist([\r\n            { identifier: \"WertDesTangens\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Tangens des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan2\", new Parameterlist([\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan2(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Sind (x, y) die kartesischen Koordinaten eines Punktes, so ist Math.atan2(x, y) der Winkel alpha der Polarkoordinaten (alpha, r) des Punktes. \\n**Bem.: **Alpha wird in Rad berechnet.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { abstandPunktZuGerade, abstandPunktZuStrecke, polygonEnthältPunkt, Punkt, schnittpunkteKreisStrecke, streckeSchneidetStrecke, vektorVonPolarkoordinaten } from \"../tools/MatheTools.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport class MathToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MathTools\", module, \"Klasse mit mathematischen Hilfsfunktionen als statische Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n        let vectorArrayClass = new ArrayType(vector2Class);\r\n\r\n        let xIndex = vector2Class.attributeMap.get(\"x\").index;\r\n        let yIndex = vector2Class.attributeMap.get(\"y\").index;\r\n\r\n\r\n        this.addMethod(new Method(\"intersectCircleWithPolygon\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vectorArrayClass,\r\n            (parameters) => {\r\n\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n                let points: Value[] = parameters[4].value;\r\n\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let schnittpunkte: Punkt[] = [];\r\n                let m: Punkt = {x: mx, y: my};\r\n                for(let i = 0; i < punkte.length; i++){\r\n                    let p1 = punkte[i];\r\n                    let p2 = punkte[(i+1)%punkte.length];\r\n                    schnittpunkteKreisStrecke(m, r, p1, p2, schnittpunkte);\r\n                }\r\n\r\n                let returnArray: Value[] = []\r\n\r\n                for(let p of schnittpunkte){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: p.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: p.y};\r\n                    returnArray.push({type: vector2Class, value:pVector});\r\n                }\r\n\r\n                return returnArray;\r\n\r\n            }, false, true, \"Zu einem gegebenen Kreis werden die Punkte berechnet, die auf den Seiten eines gegebenen Polygons liegen.\"));\r\n\r\n        this.addMethod(new Method(\"intersectLineSegments\", new Parameterlist([\r\n            { identifier: \"p0\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p1\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p2\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p3\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vector2Class,\r\n            (parameters) => {\r\n\r\n                let p: Punkt[] = [];\r\n                for(let i = 0; i < 4; i++){\r\n                    let att = parameters[i].value.attributes;\r\n                    p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                }\r\n\r\n                let ps: Punkt = {x: 0, y: 0};\r\n                if(streckeSchneidetStrecke(p[0], p[1], p[2], p[3], ps)){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: ps.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: ps.y};\r\n                    return pVector;\r\n                } else {\r\n                    return null;                    \r\n                }\r\n\r\n            }, false, true, \"Berechnet den Schnittpunkt der Strecken [p0, p1] und [p2, p3]. Gibt null zurück, wenn sich die Strecken nicht schneiden oder wenn sie parallel sind und teilweise aufeinander liegen.\"));\r\n\r\n        this.addMethod(new Method(\"polygonContainsPoint\", new Parameterlist([\r\n            { identifier: \"polygonPoints\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let points = parameters[1].value;\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let att = parameters[2].value.attributes;\r\n                let p: Punkt = {x: att[xIndex].value, y: att[yIndex].value}\r\n\r\n                return polygonEnthältPunkt(punkte, p);\r\n\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Polygon den Punkt enthält.\"));\r\n\r\n            this.addMethod(new Method(\"distancePointToLine\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuGerade(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Gerade AB.\"));\r\n    \r\n            this.addMethod(new Method(\"distancePointToLineSegment\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuStrecke(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Strecke [AB].\"));\r\n    \r\n    \r\n\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemClass extends Klass {\r\n\r\n    printStream: RuntimeObject;\r\n\r\n    deltaTimeMillis: number = 0; // when using WebSocket then the Server sends time synchronization\r\n\r\n    constructor(module: Module) {\r\n        super(\"System\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Sound, Löschen der Ausgabe usw.\");\r\n\r\n        this.printStream = new RuntimeObject(<Klass>module.typeStore.getType(\"PrintStream\"));\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"out\", module.typeStore.getType(\"PrintStream\"),\r\n            (value) => { value.value = this.printStream }, true, Visibility.public, true, \"PrintStream-Objekt, mit dem Text ausgegeben werden kann.\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        // this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        // ]), null,\r\n        //     (parameters) => {\r\n        //         module.main.getInterpreter().printManager.clear();\r\n        //     }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        // this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n        //     { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let r: RuntimeObject = parameters[1].value;\r\n        //     let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n        //     if (method != null) {\r\n\r\n        //         module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n        //             let program = method?.program;\r\n        //             let invoke = method?.invoke;\r\n\r\n        //             let stackElements: Value[] = [\r\n        //                 {\r\n        //                     type: r.class,\r\n        //                     value: r\r\n        //                 },\r\n        //                 {\r\n        //                     type: stringPrimitiveType,\r\n        //                     value: key\r\n        //                 }\r\n        //             ];\r\n\r\n        //             if (program != null) {\r\n        //                 module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n        //             } else if (invoke != null) {\r\n        //                 invoke([]);\r\n        //             }\r\n\r\n\r\n        //         });\r\n        //     }\r\n        // }    \r\n        // , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"currentTimeMillis\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Date.now() + this.deltaTimeMillis;\r\n            }\r\n            , false, true, \"Gibt die Anzahl der Millisekunden, die seit dem 01.01.1970 00:00:00 UTC vergangen sind, zurück.\"));\r\n\r\n        this.addMethod(new Method(\"exit\", new Parameterlist([\r\n            { identifier: \"status\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n                let console = module.main.getBottomDiv()?.console;\r\n                if(console != null){\r\n                    console.writeConsoleEntry(\"Das Programm wurde angehalten mit Statuswert: \" + parameters[1].value, null, \"#0000ff\");\r\n                    console.showTab();\r\n                }\r\n                module.main.getInterpreter().stop();\r\n            }\r\n            , false, true, \"Beendet das Programm und gibt den übergebenen Wert in der Konsole aus.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(\"\");\r\n            }, false, true, \"Setzt den Cursor in die nächste Zeile.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SystemTools\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Löschen der Ausgabe, Registrieren eines Tastaturlisteners usw.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.clear();\r\n            }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        this.addMethod(new Method(\"setSpeed\", new Parameterlist([\r\n            {identifier: \"speed\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let speed: number = parameters[1].value;\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(speed >= 1 ? speed : \"max\");\r\n\r\n            }, false, true, \"Setzt die Ausführungsgeschwindigkeit. Der Parameter speed wir in Steps/Sekunde angegeben. Eine negative Zahl bedeutet: 'maximal'.\"));\r\n\r\n        this.addMethod(new Method(\"getSpeed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return module.main.getInterpreter().controlButtons.speedControl.getSpeedInStepsPerSecond();\r\n\r\n            }, false, true, \"Gibt die Ausführungsgeschwindigkeit in Steps pro Sekunde zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pause\", new Parameterlist([\r\n            {identifier: \"durationInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n            }, false, true, \"Pausiert das Programm für die angegebene Zeit in ms.\"));\r\n\r\n        this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n            { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let r: RuntimeObject = parameters[1].value;\r\n                let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n                if (method != null) {\r\n\r\n                    module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n                        let program = method?.program;\r\n                        let invoke = method?.invoke;\r\n\r\n                        let stackElements: Value[] = [\r\n                            {\r\n                                type: r.class,\r\n                                value: r\r\n                            },\r\n                            {\r\n                                type: stringPrimitiveType,\r\n                                value: key\r\n                            }\r\n                        ];\r\n\r\n                        if (program != null) {\r\n                            module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n                        } else if (invoke != null) {\r\n                            invoke([]);\r\n                        }\r\n\r\n\r\n                    });\r\n                }\r\n            }\r\n            , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n    }\r\n}\r\n\r\nexport class KeyListener extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"KeyListener\", module, \"Interface mit Methode onKeyTyped. Eine Klasse, die dieses Interface implementiert, kann auf Tastatureingaben reagieren. Ein Objekt dieser Klasse muss zuvor aber mit System.addKeyListener() registriert werden.\");\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, nachdem eine Taste gedrückt wurde.\"));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { InterpreterState, Interpreter } from \"../interpreter/Interpreter.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\n\r\n\r\nexport class Runnable extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Runnable\", module);\r\n\r\n        this.addMethod(new Method(\"run\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird vom Timer immer wieder aufgerufen\"));\r\n    }\r\n\r\n}\r\n\r\ntype TimerEntry = {\r\n    timerListener: RuntimeObject,\r\n    dt: number,\r\n    running: boolean,\r\n    lastTimeFired: number,\r\n    method: Method\r\n}\r\n\r\nexport class TimerClass extends Klass {\r\n\r\n    timerEntries: TimerEntry[] = [];\r\n    timerRunning: boolean = false;\r\n\r\n    timerStarted: boolean = false;\r\n\r\n    constructor(module: Module) {\r\n        super(\"Timer\", module, \"Timer Klasse zur periodischen Ausführung von Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"repeat\", new Parameterlist([\r\n            {\r\n                identifier: \"runnable\", type: module.typeStore.getType(\"Runnable\"),\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n            {\r\n                identifier: \"deltaTimeInMs\", type: intPrimitiveType,\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let tl: RuntimeObject = <RuntimeObject>parameters[1].value;\r\n                let dt: number = <number>parameters[2].value;\r\n\r\n                let timerEntry: TimerEntry = {\r\n                    timerListener: tl,\r\n                    dt: dt,\r\n                    lastTimeFired: 0,\r\n                    running: true,\r\n                    method: tl.class.getMethod(\"run\", new Parameterlist([\r\n                        // {\r\n                        //     identifier: \"deltaTimeInMs\",\r\n                        //     type: intPrimitiveType,\r\n                        //     declaration: null,\r\n                        //     isFinal: true,\r\n                        //     usagePositions: null\r\n                        // }\r\n                    ]))\r\n                }\r\n\r\n                this.timerEntries.push(timerEntry);\r\n\r\n                // console.log(\"TimerListener added with dt = \" + dt + \" ms.\");\r\n\r\n            }, false, true, \"Fügt ein neues TimerListener-Objekt hinzu und ruft dessen tick-Methode immer wieder auf.\"));\r\n\r\n    }\r\n\r\n    startTimer(){\r\n        if(!this.timerStarted){\r\n            this.timerStarted = true;\r\n            this.processTimerEntries();\r\n        }\r\n    }\r\n    \r\n    stopTimer(){\r\n        this.timerStarted = false;\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if(!this.timerStarted){\r\n            return;\r\n        }\r\n\r\n        if (this.timerEntries.length > 0) {\r\n            let interpreter = this.module?.main?.getInterpreter();\r\n\r\n            if (interpreter != null) {\r\n                if (!this.timerRunning && interpreter.state == InterpreterState.running) {\r\n                    let t: number = performance.now();\r\n                    for (let timerentry of this.timerEntries) {\r\n                        let dt = t - timerentry.lastTimeFired;\r\n                        if (dt >= timerentry.dt) {\r\n                            this.runEntry(timerentry, interpreter, Math.round(dt));\r\n                            timerentry.lastTimeFired = t;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                switch (interpreter.state) {\r\n                    case InterpreterState.done:\r\n                    case InterpreterState.error:\r\n                    case InterpreterState.not_initialized:\r\n                        this.timerEntries = [];\r\n                        this.timerRunning = false;\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, 10);\r\n\r\n    }\r\n\r\n    runEntry(timerentry: TimerEntry, interpreter: Interpreter, dt: number) {\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: timerentry.timerListener.class,\r\n                value: timerentry.timerListener\r\n            },\r\n            // {\r\n            //     type: intPrimitiveType,\r\n            //     value: dt\r\n            // }\r\n        ];\r\n\r\n        this.timerRunning = true;\r\n        let that = this;\r\n\r\n        interpreter.runTimer(timerentry.method, stackElements, (interpreter) => {\r\n            that.timerRunning = false;\r\n        }, false);\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class MapClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Map\", module, \"Interface mit Methoden einer Map (Schlüssel-Wert-Speicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Map zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Map leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Map.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class MapHelper {\r\n\r\n    keyArray: Value[] = [];\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, Value> = new Map(); // Maps key objects to value-Values\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    get(key: Value){\r\n        return this.map.get(key.value);\r\n    }\r\n\r\n    set(key: Value, value: Value): Value {\r\n\r\n        let old = this.map.get(key.value);\r\n\r\n        if(old == null){\r\n            this.keyArray.push(key);\r\n        } else {\r\n            this.valueArray.splice(this.valueArray.indexOf(old), 1);\r\n        }\r\n\r\n        this.valueArray.push(value);\r\n        \r\n        this.map.set(key.value, value);\r\n\r\n        return old;\r\n\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.keyArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            let s = \"[\";\r\n            for (let i = 0; i < this.keyArray.length; i++) {\r\n                s += \"\" + this.keyArray[i].value + \" => \" + this.valueArray[i].value;\r\n                if (i < this.keyArray.length - 1) s += \", \";\r\n            }\r\n\r\n            return s + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.keyArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \" => \",\r\n                position: position,\r\n                stepFinished: false\r\n            });\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    leftType: stringPrimitiveType,\r\n                    operator: TokenType.plus,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    containsKey(key: Value): any {\r\n        return this.map.get(key.value) != null;\r\n    }\r\n\r\n    containsValue(value: Value): any {\r\n        for(let v of this.valueArray){\r\n            if(v.value == value.value) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.keyArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { MapHelper } from \"./MapHelper.js\";\r\n\r\nexport class HashMapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashMap\", module, \"Map-Klasse mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Map\")).clone();\r\n        setInterface.typeVariables = [tvK, tvV];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        this.addMethod(new Method(\"HashMap\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new MapHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert eine neue HashMap', true));\r\n\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let value: Value = parameters[2];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.set(key, value);\r\n\r\n            }, false, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Key-Value-Pairs aus dieser HashMap.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsKey(key);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let value: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsValue(value);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                let v: Value = ah.get(key);\r\n                return v == null ? null : v.value;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die HashMap leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der key-value-pairs der HashMap zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class TriangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Triangle\", module, \"Dreieck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Polygon\"));\r\n\r\n        this.addMethod(new Method(\"Triangle\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let i = 1; i <= 6; i++){\r\n                    pointsNumber.push(parameters[i].value);\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck.', true));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Triangle-Objekts und git sie zurück.', false));\r\n\r\n        }\r\n\r\n}\r\n","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport type LocalDateTimeIntrinsicData = {\r\n    date: Date\r\n}\r\n\r\nexport class LocalDateTimeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LocalDateTime\", module, \"Ein LocalDate-Objekt speichert einen Zeitpunkt (Datum und Uhrzeit).\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let dayOfWeekType = <Enum>module.typeStore.getType(\"DayOfWeek\");\r\n        let MonthType = <Enum>module.typeStore.getType(\"Month\");\r\n\r\n        // this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        // this.staticClass.classObject.initializeAttributeValues();\r\n        \r\n        this.addMethod(new Method(\"LocalDateTime\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return;\r\n\r\n            }, false, false, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , true));\r\n\r\n\r\n        this.addMethod(new Method(\"now\", new Parameterlist([]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: number = Math.trunc(parameters[2].value);\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month - 1, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"]= intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: MonthType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: EnumRuntimeObject = parameters[2].value;\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month.enumValue.ordinal, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"plusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() + days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen später liegt.', false));\r\n\r\n        this.addMethod(new Method(\"minusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() - days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen früher liegt.', false));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return Math.sign(oldMs - newMs);\r\n\r\n            }, false, false, 'Gibt 1 zurück, falls das Datum größer ist als das übergebene, 0, falls sie gleich sind und -1, falls das Datum kleiner ist als das übergebene.', false));\r\n\r\n        this.addMethod(new Method(\"until\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return (oldMs - newMs)/(24*3600);\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Tage (gerundet) zwischen den beiden Zeitpunkten liegen.', false));\r\n\r\n        this.addMethod(new Method(\"getYear\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getFullYear();\r\n\r\n            }, false, false, 'Gibt das Jahr zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMonthValue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth() + 1;\r\n\r\n            }, false, false, 'Gibt den Monat als Zahl zurück (Januar == 1, Februar == 2, ..., Dezember == 12).', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfMonth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDate();\r\n\r\n            }, false, false, 'Gibt den Tag innerhalb des Monats zurück (Zahl von 1 bis 31).', false));\r\n\r\n        this.addMethod(new Method(\"getHour\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getHours();\r\n\r\n            }, false, false, 'Gibt die Stunde innerhalb des Tages zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMinute\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMinutes();\r\n\r\n            }, false, false, 'Gibt die Minute zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getSecond\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getSeconds();\r\n\r\n            }, false, false, 'Gibt die Sekunde zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n\r\n                let td = (value: number) => {\r\n                    if(value < 10) return \"0\" + value;\r\n                    return \"\" + value;\r\n                }\r\n\r\n                return `${td(date.getDate())}.${td(date.getMonth() + 1)}.${td(date.getFullYear())} ${td(date.getHours())}:${td(date.getMinutes())}:${td(date.getSeconds())}`;\r\n\r\n            }, false, false, 'Gibt den Wert in der Form 12.03.2007 10:15:30 zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfWeek\", new Parameterlist([\r\n        ]), dayOfWeekType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let dow = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDay();\r\n                return dayOfWeekType.enumInfoList[dow - 1].object;\r\n\r\n            }, false, false, 'Gibt die den Wochentag zurück. Falls Du ihn als Zahl (0 == Montag, ...) benötigst, nutze getDayOfWeek().toOrdinal(). ', false));\r\n\r\n        this.addMethod(new Method(\"getMonth\", new Parameterlist([\r\n        ]), MonthType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let monthIndex = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth();\r\n                return MonthType.enumInfoList[monthIndex].object;\r\n\r\n            }, false, false, 'Gibt die den Monat zurück. Falls Du ihn als Zahl (1 == Januar, ...) benötigst, nutze getMonthValue()', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class DayOfWeekEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DayOfWeek\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Montag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dienstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mittwoch\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Donnerstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Freitag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Samstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Sonntag\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Wochentag\"\r\n    }\r\n}\r\n\r\nexport class MonthEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Month\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Januar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Februar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"März\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"April\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mai\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juni\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juli\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"August\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Septemter\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Oktober\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"November\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dezember\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Monat\"\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class LineClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Line\", module, \"Strecke (gerade Linie zwischen zwei Punkten)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Line\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n\r\n                let pointsNumber: number[] = [x1, y1, x2, y2];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert eine Strecke mit Anfangspunkt (x1/y1) und Endpunkt (x2/y2).', true));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie der Strecke und git sie zurück.', false));\r\n\r\n                this.addMethod(new Method(\"setPoint\", new Parameterlist([\r\n                    { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x: number = parameters[1].value;\r\n                        let y: number = parameters[2].value;\r\n                        let index: number = parameters[3].value;\r\n                        let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoint\")) return;\r\n        \r\n                        sh.setPoint(x, y, index - 1);\r\n        \r\n                    }, false, false, 'Ändert einen Punkt des Polygons. index == 1 bedeutet: Anfangspunkt; index == 2 bedeutet: Endpunkt', false));\r\n        \r\n                this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                    { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x1: number = parameters[1].value;\r\n                        let y1: number = parameters[2].value;\r\n                        let x2: number = parameters[3].value;\r\n                        let y2: number = parameters[4].value;\r\n                                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoints\")) return;\r\n        \r\n                        sh.setPoints([x1, y1, x2, y2]);\r\n        \r\n                    }, false, false, 'Ändert die Punkte der Strecke. (x1/y1) ist der neue Anfangspunkt, (x2/y2) ist der neue Endpunkt.', false));\r\n        \r\n     \r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class Vector2Class extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector2\", module, \"Repräsentiert einen zweidimensionalen Vektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"x-Komponente des Vektors\"));\r\n\r\n        this.addAttribute(new Attribute(\"y\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"y-Komponente des Vektors\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        let xIndex = this.attributeMap.get(\"x\").index;\r\n        let yIndex = this.attributeMap.get(\"y\").index;\r\n        \r\n\r\n        this.addMethod(new Method(\"Vector2\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n            }, false, false, 'Instanziert einen neuen zweidimensionalen Vektor mit den Komponenten x und y.', true));\r\n\r\n        this.addMethod(new Method(\"fromPolarCoordinates\", new Parameterlist([\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"alphaDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let r: number = parameters[1].value;\r\n                let alphaDeg: number = parameters[2].value;\r\n\r\n                alphaDeg *= Math.PI / 180.0;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: Math.cos(alphaDeg) * r };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: Math.sin(alphaDeg) * r };\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt einen neuen zweidimensionalen Vektor zurück, der mit den Polarkoordinaten (r/alphaDeg) gebildet wird. Datei ist r (Abstand zum Ursprung des Koordinatensystems) und alphaDeg (Winkel zur positiven x-Achse in Grad).', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return `(${x}/${y})`;\r\n\r\n            }, false, false, 'Gibt den Vektor als Zeichenkette in der Form \"(x/y)\" zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleDeg\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x) / Math.PI * 180;\r\n\r\n                return angle >= 0 ? angle : 360 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse in Grad zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleRad\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x);\r\n\r\n                return angle >= 0 ? angle : Math.PI * 2 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse im Bogenmaß zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLength\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return Math.sqrt(x * x + y * y);\r\n\r\n            }, false, false, 'Gibt die Länge des Vectors zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toUnitVector\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n                let length: number = Math.sqrt(x * x + y * y);\r\n\r\n                if (Math.abs(length) > 0.00000000001) {\r\n                    x /= length;\r\n                    y /= length;\r\n                } else {\r\n                    x = 0;\r\n                    y = 0;\r\n                }\r\n\r\n                o1.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o1.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt den zum Vektor zugehörigen Einheitsvektor (d.h. den Vektor mit derselben Richtung, aber der Länge 1) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setLength\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let length: number = parameters[1].value;\r\n\r\n                let l = Math.sqrt(x * x + y * y);\r\n                if (l > 0) {\r\n\r\n                    o.attributes[xIndex].value = x / l * length;\r\n                    o.attributes[yIndex].value = y / l * length;\r\n\r\n                }\r\n\r\n            }, false, false, 'Ändert den Vektor so, dass er seine Richtung beibehält, aber auf die angegebene Länge gestreckt/gestaucht wird.', false));\r\n\r\n        this.addMethod(new Method(\"plus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x + x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y + y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Summe zurück, die sich aus Addition dieses Vektor mit dem übergebenen Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"minus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x - x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y - y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Differenz zurück, die sich aus Subtraktion des übergebenen Vektors von diesem Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"scalarProduct\", new Parameterlist([\r\n            { identifier: \"vector1\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"vector2\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[1].value;\r\n                let o1: RuntimeObject = parameters[2].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                return x * x1 + y * y1;\r\n\r\n            }, false, true, 'Gibt das Skalarprodukt der beiden Vektoren zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"scaledBy\", new Parameterlist([\r\n            { identifier: \"scalar\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let s: number = parameters[1].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * s };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y * s };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt das Produkt zurück, das sich aus Multiplikation dieses Vektor mit dem übergebenen Skalar ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"rotatedBy\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle: number = -parameters[1].value * Math.PI / 180;\r\n                let sin: number = Math.sin(angle);\r\n                let cos: number = Math.cos(angle);\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * cos - y * sin };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: x * sin + y * cos };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt den um den übergebenen Winkel (in Grad) rotierten Vektor zurück. Positiver Winkel => Rotation GEGEN DEN Uhrzeigersinn. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n\r\n        this.addMethod(new Method(\"distance\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                let x1: number = <number>parameters[1].value;\r\n                let y1: number = <number>parameters[2].value;\r\n                let x2: number = <number>parameters[3].value;\r\n                let y2: number = <number>parameters[4].value;\r\n                let dx = x2 - x1;\r\n                let dy = y2 - y1;\r\n                return Math.sqrt(dx * dx + dy * dy);\r\n            }, false, true, \"Berechnet den Abstand der Punkte (x1/y1) und (x2/y2).\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class MouseListenerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseListener\", module, \"Interface mit Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class MouseAdapterClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseAdapter\", module, \"Klasse mit leeren Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt einer Kindklasse dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        this.implements.push(mouseListenerType);\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse } from \"../../communication/Data.js\";\r\nimport { WebSocketHelper } from \"./WebSocket.js\";\r\n\r\nexport class WebSocketClientClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocketClient\", module, \"Ein Objekt der Klasse WebSocketClient repräsentiert einen anderen Rechner, mit dem dieser Rechner über den WebSocket in Kontakt steht.\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addMethod(new Method(\"send\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.send(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an diesen Client. Den messageType kannst Du frei wählen. Die client bekommt ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"setUserData\", new Parameterlist([\r\n            { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"wert\", type: objectType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let key: string = parameters[1].value;\r\n                let value: RuntimeObject = parameters[2].value;\r\n\r\n                wh.setUserData(key, value);\r\n\r\n            }, false, false, 'Mit dieser Methode kannst Du beliebige Objektreferenzen in diesem WebSocketClient-Objekt speichern. Den Schlüssel kannst Du dabei frei wählen und später nutzen, um den Wert durch die Methode getUserData wieder zu holen.', false));\r\n\r\n        this.addMethod(new Method(\"getUserData\", new Parameterlist([\r\n            { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), objectType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let key: string = parameters[1].value;\r\n\r\n                return wh.getUserData(key);\r\n\r\n            }, false, false, 'Mit dieser Methode kannst Du eine Objektreferenz erhalten, die Du zuvor mit der Methode setUserData gespeichert hast. Bemerkung1: Diese Methode entfernt die Objekreferenz nicht aus dem WebSocketClient-Objekt. Bemerkung2: Damit Du alle Methoden des erhaltenen Objekts aufrufen kannst, musst Du dem Computer mitteilen, von welcher Klasse es ist (\"casten\"). Das geht für die Klasse MeineNutzerDaten bspw. so: MeineNutzerDaten mnd = (MeineNutzerDaten)client.getUserData(\"schlüssel\");', false));\r\n\r\n        let getterList: { att: string, getter: string, help: string }[] = [{ att: \"rufname\", getter: \"getFirstName\", help: \"Rufnamen\" },\r\n        { att: \"familienname\", getter: \"getLastName\", help: \"Familiennamen\" },\r\n        { att: \"username\", getter: \"getUsername\", help: \"Benutzernamen\" }, { att: \"nickname\", getter: \"getNickname\", help: \"Spielernamen\" }];\r\n\r\n        for (let getter of getterList) {\r\n            this.addMethod(new Method(getter.getter, new Parameterlist([\r\n            ]), stringPrimitiveType,\r\n                (parameters) => {\r\n\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    return wh[getter.att];\r\n\r\n                }, false, false, 'Gibt den ' + getter.help + \" des Clients zurück.\", false));\r\n\r\n        }\r\n\r\n        this.addMethod(new Method(\"getNumber\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                return wh.index;\r\n\r\n            }, false, false, 'Gehört ein Client zu einer mit findClient bzw. findClients gefundenen Gruppe, so erhältst Du mit dieser Methode die \"Rangfolge\" dieses Clients in dieser Gruppe. Allen Clients wird dieselbe Rangfolgeordnung vom Server mitgeteilt. So lässt sich bspw. einfach festlegen, welcher Client eine besondere Rolle (Server) in der Gruppe erhalten soll (z.B. Client mit Nummer 1). Bemerkung: Die Nummer ist eine Zahl zwischen 1 und der Anzahl der Clients in der Gruppe.', false));\r\n\r\n        this.addMethod(new Method(\"getIndex\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                return wh.index;\r\n\r\n            }, false, false, 'Diese Methode ist veraltet. Bitte benutze stattdessen getNumber.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketClientHelper {\r\n\r\n    keyValueStore: { [key: string]: RuntimeObject } = {};\r\n    index: number = 0;\r\n\r\n    public connected: boolean = true;\r\n\r\n    constructor(public runtimeObject: RuntimeObject, private webSocketHelper: WebSocketHelper,\r\n        private id: number, public rufname: string, public familienname: string, public username: string, public nickname: string) {\r\n\r\n    }\r\n\r\n    send(message: string, messageType: string) {\r\n        this.webSocketHelper.sendToClient(this.id, message, messageType);\r\n    }\r\n\r\n    getUserData(key: string): any {\r\n        return this.keyValueStore[key];\r\n    }\r\n\r\n    setUserData(key: string, value: RuntimeObject) {\r\n        this.keyValueStore[key] = value;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse, GetWebSocketTokenResponse, WebSocketResponsePairingFound, WebSocketRequestFindPairing } from \"../../communication/Data.js\";\r\nimport { WebSocketClientHelper } from \"./WebSocketClient.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { SystemClass } from \"../System.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\nexport class WebSocketClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocket\", module, \"Ein Objekt der Klasse WebSocket kann Daten über das Internet senden und empfangen. Um die Klasse benutzen zu können, musst Du eine eigene Klasse schreiben, die die Klasse WebSocket erweitert und die Methoden onConnect, onMessage, onOtherClientConnected und onOtherClientDisconnected überschreibt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let webSocketClientType = <Klass>module.typeStore.getType(\"WebSocketClient\");\r\n        let systemClassType = <SystemClass>module.typeStore.getType(\"System\");\r\n\r\n        this.addMethod(new Method(\"WebSocket\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let interpreter = this.module?.main?.getInterpreter();\r\n\r\n                let wh = new WebSocketHelper(o, interpreter, webSocketClientType, systemClassType);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Instanziert ein neues WebSocket-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n            { identifier: \"sessionCode\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"nickName\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sessionCode: string = parameters[1].value;\r\n                let nickName: string = parameters[2].value;\r\n\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                wh.connect(sessionCode, nickName);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Startet die Verbindung mit dem Server. Den SessionCode kannst Du frei wählen. Mit allen anderen Clients, die eine Verbindung mit demselben SessionCode aufbauen, kannst Du anschließend Daten austauschen. Auch der Nickname ist frei wählbar. Er ist für alle anderen Clients sichtbar.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"sendToAll\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.sendToAll(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an alle anderen Clients. Den messageType kannst Du frei wählen. Die empfangenden Clients bekommen ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"count\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let count: number = parameters[1].value;\r\n\r\n                wh.findClientsFromCount(count);\r\n\r\n            }, false, false, 'Sucht die übergebene Anzahl von \"kontaktbereiten\" Clients, d.h. solchen Clients, die exakt dieselbe Suchanfrage abgegeben haben. Findet der Server die Clients, so ruft er bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"nicknames\", type: new ArrayType(stringPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickNamesValues: Value[] = parameters[1].value;\r\n\r\n                let nicknames: string[] = nickNamesValues.map((nnv) => nnv.value);\r\n\r\n                wh.findClientsFromNicknames(nicknames);\r\n\r\n            }, false, false, 'Sucht die Clients mit den angegebenen Nicknames. Haben sie eine entsprechende Suchanfrage (d.h. dieselben Nicknames) abgegeben, so so ruft der Server bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClient\", new Parameterlist([\r\n            { identifier: \"nickname\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickName: string = parameters[1].value;\r\n\r\n                wh.findClientsFromNicknames([nickName]);\r\n\r\n            }, false, false, 'Sucht den Client mit dem angegebenen Nickname. Hat er eine entsprechende Suchanfrage (d.h. mit dem Nickname DIESES clients) abgegeben, so so ruft der Server bei beiden Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                wh.disconnect();\r\n\r\n            }, false, false, 'Beendet die Verbindung. Bei allen anderen Clients, die sich mit derselben sessionId verbunden haben, wird daraufhin die Methode onOtherClientDisconnected aufgerufen.', false));\r\n\r\n        this.addMethod(new Method(\"onOpen\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, sobald die Verbindung mit dem Server zustandegekommen ist.\", false));\r\n\r\n        this.addMethod(new Method(\"onClose\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem die Verbindung geschlossen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onMessage\", new Parameterlist([\r\n            { identifier: \"sender\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn eine Nachricht eines anderen Clients empfangen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn sich ein anderer Client unter Nutzung desselben sessionCodes mit dem Server verbunden hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientDisconnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn ein anderer Client unter Nutzung desselben sessionCodes die Verbindung mit dem Server beendet hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onClientsFound\", new Parameterlist([\r\n            { identifier: \"oherClients\", type: new ArrayType(webSocketClientType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ownNumber\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn die durch die Methoden findClient bzw. findClients zuvor gesuchten Clients gefunden wurden.\", false));\r\n\r\n        this.addMethod(new Method(\"getOtherClients\", new Parameterlist([]),\r\n            new ArrayType(webSocketClientType),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let ret = wh.clientList.map(client => {return {type: webSocketClientType, value: client.runtimeObject}});\r\n                \r\n                return ret;\r\n\r\n            }, // no statements!\r\n            false, false, \"Gibt alle bisher bei der selben Session angemeldeten Clients zurück.\", false));\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketHelper {\r\n\r\n    onOpenMethod: Method;\r\n    onCloseMethod: Method;\r\n    onMessageMethod: Method;\r\n    onClientConnectedMethod: Method;\r\n    onClientDisconnectedMethod: Method;\r\n    onClientsFoundMethod: Method;\r\n\r\n    clientList: WebSocketClientHelper[] = [];\r\n    idToClientMap: { [id: number]: WebSocketClientHelper } = {};\r\n\r\n    connection: WebSocket;\r\n    client_id: number; // own client-id\r\n    isOpen: boolean = false;\r\n\r\n    constructor(private runtimeObject: RuntimeObject, private interpreter: Interpreter,\r\n        private webSocketClientType: Klass, private systemClassType: SystemClass) {\r\n\r\n        let klass: Klass = <Klass>runtimeObject.class;\r\n\r\n        // [[Entries]]:Array(4)\r\n        // 0:{\"Test3()\" => Method}\r\n        // 1:{\"onConnect()\" => Method}\r\n        // 2:{\"onMessage(WebSocketClient, String, String)\" => Method}\r\n        // 3:{\"toJson()\" => Method}\r\n\r\n        this.onOpenMethod = klass.methods.find(m => m.signature == \"onOpen()\");\r\n        this.onCloseMethod = klass.methods.find(m => m.signature == \"onClose()\");\r\n        this.onMessageMethod = klass.methods.find(m => m.signature == \"onMessage(WebSocketClient, String, String)\");\r\n        this.onClientConnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientConnected(WebSocketClient)\");\r\n        this.onClientDisconnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientDisconnected(WebSocketClient)\");\r\n        this.onClientsFoundMethod = klass.methods.find(m => m.signature == \"onClientsFound(WebSocketClient[], int)\");\r\n\r\n    }\r\n\r\n    connect(sessionCode: string, nickName: string) {\r\n\r\n        if(this.interpreter.main.isEmbedded()){\r\n            this.interpreter.throwException(\"Die Netzwerkfunktionalitäten stehen nur eingeloggten Nutzern in der Entwicklungsumgebung zur Verfügung und können daher leider hier nicht ausprobiert werden.\");\r\n            return;\r\n        }\r\n\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    nickname: nickName,\r\n                    sessionCode: sessionCode\r\n                }\r\n\r\n                this.interpreter.webSocketsToCloseAfterProgramHalt.push(this.connection);\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n        this.runMethod(this.onCloseMethod, []);\r\n    }\r\n\r\n    sendToClient(clientId: number, data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToClient = {\r\n            command: 3,\r\n            data: data,\r\n            dataType: dataType,\r\n            recipient_id: clientId\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    sendToAll(data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToAll = {\r\n            command: 2,\r\n            data: data,\r\n            dataType: dataType\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        let wtr = this.interpreter.webSocketsToCloseAfterProgramHalt;\r\n        wtr.splice(wtr.indexOf(this.connection), 1);\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 1: // new Client\r\n                let clientRuntimeObject = new RuntimeObject(this.webSocketClientType);\r\n                let wch: WebSocketClientHelper = new WebSocketClientHelper(clientRuntimeObject, this, response.user_id,\r\n                    response.rufname, response.familienname, response.username, response.nickname);\r\n                clientRuntimeObject.intrinsicData[\"Helper\"] = wch;\r\n                this.clientList.push(wch);\r\n                this.idToClientMap[response.user_id] = wch;\r\n                this.runMethod(this.onClientConnectedMethod, [{ type: this.webSocketClientType, value: clientRuntimeObject }]);\r\n                break;\r\n            case 2: // message\r\n                let clientHelper = this.idToClientMap[response.from_client_id];\r\n                if (clientHelper == null) return;\r\n                this.runMethod(this.onMessageMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper.runtimeObject },\r\n                    { type: stringPrimitiveType, value: response.data },\r\n                    { type: stringPrimitiveType, value: response.dataType }\r\n                ]);\r\n                break;\r\n            case 3: // other client disconnected\r\n                let clientHelper1 = this.idToClientMap[response.disconnecting_client_id];\r\n                if (clientHelper1 == null) return;\r\n                this.clientList.splice(this.clientList.indexOf(clientHelper1), 1);\r\n                this.idToClientMap[response.disconnecting_client_id] = undefined;\r\n                this.runMethod(this.onClientDisconnectedMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper1.runtimeObject }\r\n                ]);\r\n                break;\r\n            case 4: // time synchronization\r\n                this.systemClassType.deltaTimeMillis = response.currentTimeMills - Date.now();\r\n                this.client_id = response.client_id\r\n                break;\r\n            case 5: // keep alive\r\n                break;\r\n            case 6: // Clients found\r\n                this.onClientsFound(response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onClientsFound(response: WebSocketResponsePairingFound) {\r\n        let own_index: number = 0;\r\n        let otherClients: Value[] = [];\r\n\r\n        for (let client of response.clients) {\r\n            if (client.id == this.client_id) {\r\n                own_index = client.index;\r\n            } else {\r\n                let otherClient = this.idToClientMap[client.id];\r\n                if (otherClient != null) {\r\n                    otherClient.index = client.index;\r\n                    otherClients.push({\r\n                        type: this.webSocketClientType,\r\n                        value: otherClient.runtimeObject\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        let arrayValue: Value = {\r\n            type: new ArrayType(this.webSocketClientType),\r\n            value: otherClients\r\n        }\r\n\r\n        this.runMethod(this.onClientsFoundMethod, [arrayValue, { type: intPrimitiveType, value: own_index }]);\r\n\r\n    }\r\n\r\n    onError(error: Event) {\r\n        this.interpreter.throwException(\"Kommunikationsfehler beim WebSocket\");\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if(this.unsentMessages.length > 0){\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n        this.runMethod(this.onOpenMethod, []);\r\n    }\r\n\r\n    runMethod(method: Method, stackElements: Value[]) {\r\n        if (method == null) return;\r\n        stackElements.splice(0, 0, {\r\n            type: this.runtimeObject.class,\r\n            value: this.runtimeObject\r\n        });\r\n\r\n        if (this.interpreter.state == InterpreterState.waitingForInput) {\r\n            this.interpreter.executeImmediatelyInNewStackframe(method.program, stackElements);\r\n        } else {\r\n            this.interpreter.runTimer(method, stackElements, () => { }, false);\r\n        }\r\n    }\r\n\r\n    findClientsFromCount(count: number) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: count,\r\n            nicknames: []\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    findClientsFromNicknames(nicknames: string[]) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: nicknames.length,\r\n            nicknames: nicknames\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Variable, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n// import * as p5 from \"p5\";\r\ntype p5 = any;\r\n\r\nexport class ProcessingClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"PApplet\", module, \"Processing-Applet\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.documentation = \"Wenn Du Deine Klasse von PApplet ableitest (class Test extends PApplet{...}), kannst Du auf diese Weise ein Processing-Applet erstellen (siehe https://processing.org), indem Du ihre Methoden draw(), mousePressed(), usw. überschreibst und mit Inhalt füllst. Du startest das Applet, indem Du ein Objekt Deiner Klasse instanzierst und davon die main-Methode aufrufst: new Test().main();\"\r\n\r\n        // this.addAttribute(new Attribute(\"mouseX\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseX) },\r\n        //     false, Visibility.public, true, \"aktuelle x-Koordinate des Mauszeigers\"));\r\n\r\n        // this.addAttribute(new Attribute(\"mouseY\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseY) },\r\n        //     false, Visibility.public, true, \"aktuelle y-Koordinate des Mauszeigers\"));\r\n\r\n        let intConstants: string[][] = [[\"mouseX\", \"aktuelle x-Koordinate des Mauszeigers\"], [\"mouseY\", \"aktuelle y-Koordinate des Mauszeigers\"],\r\n        [\"pMouseX\", \"x-Koordinate des Mauszeigers im vorhergehenden Frame\"], [\"pMouseY\", \"y-Koordinate des Mauszeigers im vorhergehenden Frame\"],\r\n        [\"LEFT\", \"links\"], [\"CENTER\", \"Mitte\"], [\"RIGHT\", \"rechts\"], [\"TOP\", \"obenbündig\"], [\"BASELINE\", \"bündig auf der Grundlinie\"], [\"BOTTOM\", \"untenbündig\"],\r\n        [\"width\", \"Breite des Zeichenbereichs\"], [\"height\", \"Höhe des Zeichenbereichs\"], [\"keyCode\", \"Zahlencode der zuletzt gedrückten Taste\"],\r\n        [\"mouseButton\", \"zuletzt gedrückte Maustaste, kann die Werte LEFT, RIGHT und CENTER annehmen\"],\r\n        [\"CORNER\", \"Mode zum Zeichnen von Rechtecken\"], [\"CORNERS\", \"Mode zum Zeichnen von Rechtecken\"], [\"RADIUS\", \"Mode zum Zeichnen von Rechtecken\"],\r\n\r\n        [\"POINTS\", \"zeichne nachfolgend Einzelpunkte\"],\r\n        [\"LINES\", \"zeichne nachfolgend einzelne Linien\"],\r\n        [\"TRIANGLES\", \"zeichne nachfolgend einzelne Dreiecke\"],\r\n        [\"TRIANGLE_STRIP\", \"zeichne nachfolgend einen Triangle-Strip\"],\r\n        [\"TRIANGLE_FAN\", \"zeichne nachfolgend einen Triangle-Fan\"],\r\n        [\"QUADS\", \"zeichne nachfolgend Vierecke\"],\r\n        [\"QUAD_STRIP\", \"zeichne nachfolgend einen Quad-Strip\"],\r\n        [\"TESS\", \"zeichne nachfolgend ein TESS - geht nur bei createCanvas(width, height, WEBGL)\"],\r\n        [\"CLOSE\", \"endShape(CLOSE) schließt den Linienzug\"],\r\n\r\n        [\"DEGREES\", \"angleMode(DEGREES) sorgt dafür, dass nachfolgende Winkelangaben in Grad interpretiert werden.\"],\r\n        [\"RADIANS\", \"angleMode(RADIANS) sorgt dafür, dass nachfolgende Winkelangaben im Bogenmaß interpretiert werden.\"],\r\n\r\n        ];\r\n\r\n        intConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], intPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        let stringConstants: string[][] = [[\"WEBGL\", \"WebGL-Renderer zur 3D-Ausgabe\"], [\"P2D\", \"Renderer zur zweidimensionalen Ausgabe\"],\r\n        [\"RGB\", \"Color-Mode RGB (rot, grün, blau)\"], [\"HSL\", \"Color-Mode HSL\"], [\"HSB\", \"Color-Mode HSB\"]\r\n        ];\r\n\r\n        stringConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], stringPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        this.addAttribute(new Attribute(\"key\", charPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o.key },\r\n            false, Visibility.public, true, \"letzte gedrückte Taste\"));\r\n\r\n\r\n        this.addMethod(new Method(\"PApplet\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = this.getProcessingHelper(o);\r\n                o.intrinsicData[\"Processing\"] = ph;\r\n\r\n            }, false, false, \"Legt eine neues Processing-Applet an\", true));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n            { identifier: \"name\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                // ph.main legt das aktuelle Programm (a) des Interpreters auf den programStack\r\n                // und setzt als currentProgram ein neues (b). Nach Ende dieser Methode erhöht\r\n                // der Interpreter currentProgramPosition im Glauben, (a) sei aktiv. Daher ist\r\n                // die gespeicherte ProgramPosition von (a) um eins zu niedrig (und wird daher gleich noch\r\n                // vor ph.main(); erhöht) und die bei (b) wird irrtümlich nach Rückkehr von dieser Methode \r\n                // um eins erhöht. Sie wird daher nach Ausführung von ph.main() um eins erniedrigt, damit\r\n                // der Effekt kompensiert wird. \r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"loop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.loop();\r\n\r\n            }, false, false, 'Startet nach noLoop() die Renderer-Loop wieder neu, so dass draw() wieder periodisch aufgerufen wird.', false));\r\n\r\n        this.addMethod(new Method(\"noLoop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.noLoop();\r\n\r\n            }, false, false, 'Stoppt die Render-Loop, so dass draw() nicht mehr aufgerufen wird. Kann mit loop() wieder gestartet werden.', false));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"renderer\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let renderer: string = parameters[3].value;\r\n\r\n                ph.renderer = renderer;\r\n                ph.createCanvas(width, height);\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"draw\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die draw-Methode wird 60-mal pro Sekunde aufgerufen (\"Render-Loop\"). Die Render-Loop kann mit der Methode noLoop() gestoppt und mit loop() wieder gestartet werden. redraw() ruft (im gestoppten Zustand) draw genau ein Mal auf.', false));\r\n\r\n        this.addMethod(new Method(\"settings\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die settings-Methode wird aufgerufen, nachdem das Processing-Applet durch Aufruf der Methode main gestartet wurde. Im Unterschied zur Original Java-Version von Processing hat die Methode settings hier keine andere Bewandtnis als die - unmittelbar darauf aufgerufene - Methode setup. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"setup\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die setup-Methode wird beim Programmstart nach der settings-Methode aufgerufen. Im Unterschied zur Original Java-Version von Processing hat die Methode setup hier keine andere Bewandtnis als die - unmittelbar davor aufgerufene - Methode settings. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"mousePressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mousePressed-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste heruntergedrückt wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade heruntergedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseReleased-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseClicked\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseClicked-Methode wird immer dann aufgerufen, wenn eine Maustaste auf dem Zeichenbereich gedrückt und anschließend losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseDragged\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseDragged-Methode wird immer dann aufgerufen, wenn eine Maustaste gerade heruntergedrückt ist und die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseMoved\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseMoved-Methode wird immer dann aufgerufen, wenn die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseEntered\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseEntered-Methode wird immer dann aufgerufen, wenn der Mauszeiger von außen neu in den Zeichenbereich hineinfährt.', false));\r\n\r\n        this.addMethod(new Method(\"mouseExited\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseExited-Methode wird immer dann aufgerufen, wenn der Mauszeiger den Zeichnbereich gerade verlassen hat.', false));\r\n\r\n        this.addMethod(new Method(\"keyPressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyPressed-Methode wird immer dann aufgerufen, wenn eine Taste gerade heruntergedrückt wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"keyReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyReleased-Methode wird immer dann aufgerufen, wenn eine Taste gerade losgelassen wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n\r\n\r\n        // this.addMethod(new Method(\"rect\", new Parameterlist([\r\n        //     { identifier: \"left\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"top\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"width\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"height\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        // ]), voidPrimitiveType,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n        //         let left: number = parameters[1].value;\r\n        //         let top: number = parameters[2].value;\r\n        //         let width: number = parameters[3].value;\r\n        //         let height: number = parameters[4].value;\r\n\r\n        //         ph.addStatement((p5o) => p5o.rect(left, top, width, height));\r\n\r\n\r\n        //     }, false, false, 'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.', false));\r\n\r\n\r\n        /**\r\n         * Setzen von Farben\r\n         */\r\n        this.addProcessingMethod('clear', [], [],\r\n            'Löscht die Zeichenfläche.');\r\n\r\n        this.addProcessingMethod('background', ['rgb'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe.');\r\n\r\n        this.addProcessingMethod('background', ['colorAsString'], stringPrimitiveType,\r\n            \"Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. Übergeben wird eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('background', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], intPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['gray'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('noFill', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden nicht gefüllt.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], intPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['gray'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('strokeWeight', ['weight'], floatPrimitiveType,\r\n            'Setzt die Linienbreite.');\r\n\r\n        this.addProcessingMethod('noStroke', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden ohne Rand gezeichnet.');\r\n\r\n        this.addProcessingMethod('color', ['gray'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['colorAsString'], stringPrimitiveType,\r\n            \"Gibt die Farbe zurück. Übergeben kann eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['gray', 'alpha'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 und alpha gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerpColor', ['colorA', 'colorB', 't'], [stringPrimitiveType, stringPrimitiveType, floatPrimitiveType],\r\n            'Gibt eine Zwischenfarbe zwischen colorA und colorB zurück. t == 0 bedeutet: colorA, t == 1 bedeutet: colorB, t == 0.5 bedeutet: genau zwischen beiden, usw.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('colorMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max'], [stringPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3', 'maxAlpha'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n\r\n\r\n        /**\r\n         * Zeichnen geometrischer Figuren\r\n         */\r\n        this.addProcessingMethod('rectMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von rect(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks. Radius ist der Eckenradius');\r\n\r\n        this.addProcessingMethod('ellipse', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet eine Ellipse. (left, top) ist die linke obere Ecke der Boundingbox der Ellipse, width ihre Breite und height ihre Höhe. Das lässt sich aber mit ellipseMode(...) ändern!');\r\n\r\n        this.addProcessingMethod('circle', ['x', 'y', 'extent'], floatPrimitiveType,\r\n            'Zeichnet einen Kreis. (x, y) ist der Mittelpunkt des Kreises, extent der doppelte Radius.');\r\n\r\n        this.addProcessingMethod('ellipseMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von ellipse(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1) nach (x2, y2).');\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'z1', 'x2', 'y2', 'z2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1, z1) nach (x2, y2, z2).');\r\n\r\n        this.addProcessingMethod('triangle', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3'], floatPrimitiveType,\r\n            'Zeichnet eine Dreieck mit den Eckpunkten (x1, y1), (x2, y2) und (x3, y3).');\r\n\r\n        this.addProcessingMethod('quad', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Viereck mit den Eckpunkten (x1, y1), (x2, y2), (x3, y3) und (x4, y4).');\r\n\r\n        this.addProcessingMethod('bezier', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine kubische Bezierkurve mit den Ankerpunkten (x1, y1), (x4, y4) und den Kontrollpunkten (x2, y2), (x3, y3).');\r\n\r\n        this.addProcessingMethod('curve', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Catmull-Rom-Kurve vom Punkt (x2, y2) nach (x3, y3) so, als würde sie von (x1, x2) kommen und es am Ende zu (x4, y4) weitergehen.');\r\n\r\n        this.addProcessingMethod('curvePoint', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('curveTangent', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierPoint', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierTangent', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n\r\n        this.addProcessingMethod('beginShape', [], [],\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt.');\r\n\r\n        this.addProcessingMethod('endShape', [], [],\r\n            'Endet das Zeichnen eines Polygons.');\r\n\r\n        this.addProcessingMethod('beginShape', ['kind'], stringPrimitiveType,\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt. Mögliche Werte für kind sind: POINTS, LINES, TRIANGLES, TRIANGLE_STRIP, TRIANGLE_FAN, QUADS, QUAD_STRIP');\r\n\r\n        this.addProcessingMethod('endShape', ['kind'], stringPrimitiveType,\r\n            'endShape(CLOSE) schließt den Linienzug.');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('set', ['x', 'y', 'color'], [floatPrimitiveType, floatPrimitiveType, stringPrimitiveType],\r\n            'Setzt die Farbe des Pixels bei (x, y).');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('curveVertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('curvevertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('box', ['size'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit der Seitenlänge size.');\r\n\r\n        this.addProcessingMethod('box', ['sizeX', 'sizeY', 'sizeZ'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit den angegebenen Seitenlängen.');\r\n\r\n        /**\r\n         * Transformationen\r\n         */\r\n        this.addProcessingMethod('resetMatrix', [], [],\r\n            'Setzt alle erfolgten Transformationen zurück.');\r\n\r\n        this.addProcessingMethod('push', [], [],\r\n            'Sichert den aktuellen Zeichenzustand, d.h. die Farben und Transformationen, auf einen Stack.');\r\n\r\n        this.addProcessingMethod('pop', [], [],\r\n            'Holt den obersten Zeichenzustand, d.h. die Farben und Transformationen, vom Stack.');\r\n\r\n        this.addProcessingMethod('scale', ['factor'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY', 'factorZ'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('rotate', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateX', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die X-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateY', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearX', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung derX-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearY', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung der Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateZ', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Z-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('angleMode', ['mode'], stringPrimitiveType,\r\n            'Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie winkel bei Rotationen interpretiert werden. Default ist RADIANS.');\r\n\r\n        /**\r\n         * Text\r\n         */\r\n        this.addProcessingMethod('textSize', ['size'], floatPrimitiveType,\r\n            'Setzt die Schriftgröße in Pixel.');\r\n\r\n        // this.addProcessingMethod('loadFont', ['fontname'], stringPrimitiveType,\r\n        //     'Lädt eine Schriftart. Diese Methode muss in der Methode preload aufgerufen werden.');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes in x-Richtung. Mögliche Werte sind CENTER, LEFT, RIGHT');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX', 'alignY'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes. Mögliche Werte für alignX sind CENTER, LEFT, RIGHT, mögliche Werte für alignY sind TOP, CENTER, BASELINE, BOTTOM');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus.');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y', 'x2', 'y2'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus. x2 und y2 sind die Breite und Höhe des Textausgabebereichs. Hat der Text horizontal nicht Platz, so wird er entsprechend umgebrochen.');\r\n\r\n        /**\r\n         * Mathematische Funktionen\r\n         */\r\n        this.addProcessingMethod('random', ['low', 'high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen low und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('random', ['high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen 0 und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['n'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel von n zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('pow', ['basis', 'exponent'], floatPrimitiveType,\r\n            'Gibt die den Wert der Potenz (\"basis hoch exponent\") zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('max', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den größeren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('min', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den kleineren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], floatPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sin', ['n'], floatPrimitiveType,\r\n            'Gibt den Sinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('cos', ['n'], floatPrimitiveType,\r\n            'Gibt den Cosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('tan', ['n'], floatPrimitiveType,\r\n            'Gibt den Tangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('asin', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('acos', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('radians', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Gradmaß ins Bogenmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('degrees', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Bogenmaß ins Gradmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan2', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sq', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt das Quadrat des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], intPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('round', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('ceil', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Aufrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('floor', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Abfrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('dist', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Berechnet den Abstand der Punkte (x1, y1) und (x2, y2).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerp', ['a', 'b', 't'], floatPrimitiveType,\r\n            'Berechnet den a + (b - a)*t. Wählt man t zwischen 0 und 1, so kann man damit die Zwischenwerte zwischen a und b errechnen.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('constrain', ['value', 'min', 'max'], floatPrimitiveType,\r\n            'Beschränkt value auf den Bereich [min, max], genauer: Ist value < min, so wird min zurückgegeben. Ist value > max, so wird max zurückgegeben. Ansonsten wird value zurückgegeben.', floatPrimitiveType);\r\n\r\n        /**\r\n         * Sonstiges\r\n         */\r\n\r\n        this.addProcessingMethod('year', [], [],\r\n            'Aktuelle Jahreszahl', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('month', [], [],\r\n            'Monat: 1 == Januar, 12 == Dezember', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('day', [], [],\r\n            'Tag (innerhalb des Monats) des aktuellen Datums', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('minute', [], [],\r\n            'Minutenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('second', [], [],\r\n            'Sekundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('frameRate', ['n'], intPrimitiveType,\r\n            'Setzt die Framerate (Anzahl der Aufrufe von draw() pro Sekunde)');\r\n\r\n        this.addProcessingMethod('textWidth', ['text'], stringPrimitiveType,\r\n            'Gibt die Breite des Texts zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textAscent', ['text'], stringPrimitiveType,\r\n            'Gibt den Ascent Textes zurück ( = Höhe des größten Zeichens über der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textDescent', ['text'], stringPrimitiveType,\r\n            'Gibt den Descent Textes zurück ( = Tiefe des tiefsten Zeichens unter der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textLeading', ['leading'], floatPrimitiveType,\r\n            'Setzt den Abstand zweier aufeinanderfolgender Textzeilen.');\r\n\r\n        this.addProcessingMethod('cursor', ['type'], stringPrimitiveType,\r\n            'Ändert das Aussehen des Mauscursors. Type ist einer der Werte \"arrow\", \"cross\", \"text\", \"move\", \"hand\", \"wait\", \"progress\".');\r\n\r\n        this.addProcessingMethod('noCursor', ['type'], stringPrimitiveType,\r\n            'Hat zur Folge, dass der Mauscursor über dem Zeichenbereich unsichtbar ist.');\r\n\r\n        this.addProcessingMethod('copy', ['sx', 'sy', 'sw', 'sh', 'dx', 'dy', 'dw', 'dh'], floatPrimitiveType,\r\n            'Kopiert den rechteckigen Bereich mit der linken oberen Ecke (sx, sy) sowie der Breite sw und der Höhe sh in den Bereich mit der linken oberen Ecke (dx, dy), der Breite dw und der Höhe dh.');\r\n\r\n        this.addProcessingMethod('millis', [], [],\r\n            'Gibt die Millisekunden zurück, die vergangen sind, seit setup() aufgerufen wurde.');\r\n\r\n        this.addProcessingMethod('redraw', [], [],\r\n            'Führt draw() genau ein Mal aus. Macht ggf. Sinn, wenn die Render-Loop zuvor mit noLoop() gestoppt wurde.');\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    addProcessingMethod(identifier: string, parameterNames: string[], parameterTypes: Type[] | Type, comment: string, returnType?: Type) {\r\n\r\n        let parameters: Variable[] = [];\r\n        if (Array.isArray(parameterTypes)) {\r\n            for (let i = 0; i < parameterNames.length; i++) {\r\n                parameters.push({ identifier: parameterNames[i], type: parameterTypes[i], declaration: null, usagePositions: null, isFinal: true });\r\n            }\r\n        } else {\r\n            parameters = parameterNames.map((name) => { return { identifier: name, type: parameterTypes, declaration: null, usagePositions: null, isFinal: true } })\r\n        }\r\n\r\n        if (returnType == null) {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), null,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n        } else {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), returnType,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    return ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getProcessingHelper(processingObject: RuntimeObject, breite: number = 800, höhe: number = 600): ProcessingHelper {\r\n\r\n        let interpreter = this.module?.main?.getInterpreter();\r\n\r\n\r\n        if (interpreter.processingHelper != null) {\r\n\r\n            interpreter.throwException(\"Es kann nur ein einziges Processing-Applet instanziert werden.\");\r\n            return;\r\n        }\r\n\r\n        if (interpreter.worldHelper != null) {\r\n\r\n            interpreter.throwException(\"Processing kann nicht gleichzeitig mit der herkömmlichen Grafikausgabe genutzt werden.\");\r\n            return;\r\n        }\r\n\r\n        return new ProcessingHelper(this.module, interpreter, processingObject);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ProcessingHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n\r\n    $div: JQuery<HTMLElement>;\r\n\r\n    width: number = 800;\r\n    height: number = 600;\r\n\r\n    p5o: p5;\r\n\r\n    renderer: string;\r\n    loopStopped: boolean = false;\r\n\r\n    onSizeChanged: () => void;\r\n\r\n\r\n    constructor(private module: Module, private interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n\r\n        this.interpreter.processingHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n\r\n        this.onSizeChanged = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (this.height / this.width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': this.width / this.height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': this.height / this.width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', this.onSizeChanged);\r\n\r\n        this.onSizeChanged();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    createCanvas(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.onSizeChanged();\r\n        this.p5o.createCanvas(this.width, this.height, this.renderer);\r\n        this.$div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n\r\n        });\r\n    }\r\n\r\n    main() {\r\n        this.interpreter.timerExtern = true;\r\n        this.setupProcessing(this.$containerInner);\r\n    }\r\n\r\n    setupProcessing($div: JQuery<HTMLElement>) {\r\n\r\n        let that = this;\r\n        let drawMethodPending: boolean = true;\r\n        this.$div = $div;\r\n\r\n        let sketch = (p5: p5) => {\r\n\r\n            p5.setup = function () {\r\n                that.renderer = p5.P2D;\r\n\r\n                let afterFinishingBoth = () => {\r\n                    // p5.createCanvas(that.width, that.height, that.renderer);\r\n                    drawMethodPending = false\r\n                    // $div.find('canvas').css({\r\n                    //     'width': '',\r\n                    //     'height': ''\r\n                    // })            \r\n                }\r\n\r\n                let i = 2;\r\n\r\n                that.runMethod('setup', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n                that.runMethod('settings', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n\r\n            };\r\n\r\n            p5.preload = function () {\r\n                that.runMethod('preload');\r\n            };\r\n\r\n            p5.draw = function () {\r\n                if (that.interpreter.state == InterpreterState.running && !that.loopStopped) {\r\n                    if (!drawMethodPending) {\r\n                        drawMethodPending = true;\r\n                        that.runMethod(\"draw\", () => {\r\n                            drawMethodPending = false;\r\n                        });\r\n                    }\r\n                }\r\n                that.tick();\r\n                // p5.background(50);\r\n                // p5.rect(p5.width / 2, p5.height / 2, 50, 50);\r\n\r\n            };\r\n\r\n            p5.mousePressed = function () {\r\n                that.runMethod('mousePressed');\r\n            };\r\n\r\n            p5.mouseReleased = function () {\r\n                that.runMethod('mouseReleased');\r\n            };\r\n\r\n            p5.mouseClicked = function () {\r\n                that.runMethod('mouseClicked');\r\n            };\r\n\r\n            p5.mouseDragged = function () {\r\n                that.runMethod('mouseDragged');\r\n            };\r\n\r\n            p5.mouseEntered = function () {\r\n                that.runMethod('mouseEntered');\r\n            };\r\n\r\n            p5.mouseExited = function () {\r\n                that.runMethod('mouseExited');\r\n            };\r\n\r\n            p5.mouseMoved = function () {\r\n                that.runMethod('mouseMoved');\r\n            };\r\n\r\n            p5.keyPressed = function () {\r\n                that.runMethod('keyPressed');\r\n            };\r\n\r\n            p5.keyReleased = function () {\r\n                that.runMethod('keyReleased');\r\n            };\r\n\r\n\r\n        }\r\n\r\n        //@ts-ignore\r\n        this.p5o = new p5(sketch, $div[0]);\r\n        $div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n        })\r\n\r\n    }\r\n\r\n\r\n    tick() {\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            this.interpreter.timerFunction(33.33, true, 0.5);\r\n            this.interpreter.timerStopped = false;\r\n            this.interpreter.timerFunction(33.33, false, 0.08);\r\n        }\r\n\r\n    }\r\n\r\n    loop() {\r\n        this.loopStopped = false;\r\n    }\r\n\r\n    noLoop() {\r\n        this.loopStopped = true;\r\n    }\r\n\r\n    runMethod(methodIdentifier: string, callback: () => void = null) {\r\n\r\n        let klass: Klass = <Klass>this.runtimeObject.class;\r\n        let method = klass.getMethodBySignature(methodIdentifier + \"()\");\r\n\r\n        let program = method?.program;\r\n\r\n        if (program == null) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: klass,\r\n                value: this.runtimeObject\r\n            },\r\n        ];\r\n\r\n        this.interpreter.runTimer(method, stackElements, (interpreter) => {\r\n            if (callback != null) callback();\r\n        }, methodIdentifier == \"draw\");\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        if (this.p5o != null) this.p5o.remove();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.processingHelper = null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { polygonBerührtPolygon, polygonEnthältPunkt, steckenzugSchneidetStreckenzug, streckenzugEnthältPunkt } from \"../../tools/MatheTools.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class TurtleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Turtle\", module, \"Turtle-Klasse zum Zeichnen von Streckenzügen oder gefüllten Figuren. Wichtig sind vor allem die Methoden forward(double length) und turn(double angleDeg), die die Turtle nach vorne bewegen bzw. ihre Blickrichtung ändern.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                let ph = new TurtleHelper(x, y, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Am Ende des Streckenzugs wird eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let showTurtle: boolean = parameters[3].value;\r\n\r\n                let ph = new TurtleHelper(x, y, showTurtle, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Falls showTurtle == true, wird am Ende des Streckenzuges eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let length: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(length);\r\n\r\n            }, false, false, 'Weist die Turtle an, die angegebene Länge vorwärts zu gehen. Ihr zurückgelegter Weg wird als gerade Strecke mit der aktuellen BorderColor gezeichnet. Mit setBorderColor(null) bewirkst Du, dass ein Stück ihres Weges nicht gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"turn\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"turn\")) return;\r\n\r\n                sh.turn(angle);\r\n\r\n            }, false, false, 'Bewirkt, dass sich die Turtle um den angegebenen Winkel (in Grad!) dreht, d.h. ihre Blickrichtung ändert. Ein positiver Winkel bewirkt eine Drehung gegen den Uhrzeigersinn. Diese Methode wirkt sich NICHT auf die bisher gezeichneten Strecken aus. Willst Du alles bisher Gezeichnete inklusive Turtle drehen, so nutze die Methode rotate.', false));\r\n\r\n        this.addMethod(new Method(\"penUp\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penUp\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"penDown\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penDown\")) return;\r\n\r\n                sh.penIsDown = true;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"closeAndFill\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"closeAndFill\")) return;\r\n\r\n                sh.closeAndFill(closeAndFill);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"showTurtle\", new Parameterlist([\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let showTurtle: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"showTurtle\")) return;\r\n\r\n                sh.setShowTurtle(showTurtle);\r\n\r\n            }, false, false, 'showTurtle == true bewirkt, dass am Ort der Turtle ein rotes Dreieck gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Turtle-Objekts und gibt es zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clear\")) return;\r\n\r\n                return sh.clear();\r\n\r\n            }, false, false, 'Löscht alle bis jetzt mit der Turtle gezeichneten Strecken.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\ntype LineElement = {\r\n    x: number,\r\n    y: number,\r\n    color: number,\r\n    alpha: number,\r\n    lineWidth: number\r\n}\r\n\r\nexport class TurtleHelper extends FilledShapeHelper {\r\n\r\n    lineElements: LineElement[] = [];\r\n    turtleAngleDeg: number = 0; // in Rad\r\n\r\n    isFilled: boolean = false;\r\n\r\n    turtle: PIXI.Graphics;\r\n    lineGraphic: PIXI.Graphics;\r\n\r\n    xSum: number = 0;\r\n    ySum: number = 0;\r\n\r\n    initialHitPolygonDirty: boolean = true;\r\n\r\n    turtleSize: number = 40;\r\n\r\n    penIsDown: boolean = true;\r\n\r\n    lastLineWidth: number = 0;\r\n    lastColor: number = 0;\r\n    lastAlpha: number = 0;\r\n\r\n    lastTurtleAngleDeg: number = 0; // angle in Rad\r\n\r\n    renderJobPresent: boolean = false;\r\n\r\n    constructor(xStart: number, yStart: number, private showTurtle: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.lineElements.push({\r\n            x: xStart,\r\n            y: yStart,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.borderColor = 0xffffff;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let container = new PIXI.Container();\r\n        this.displayObject = container;\r\n\r\n        this.lineGraphic = new PIXI.Graphics();\r\n        container.addChild(this.lineGraphic);\r\n        this.lineGraphic.moveTo(xStart, yStart);\r\n\r\n        this.turtle = new PIXI.Graphics();\r\n        container.addChild(this.turtle);\r\n        this.turtle.visible = this.showTurtle;\r\n        this.initTurtle(0, 0, this.turtleAngleDeg);\r\n        this.moveTurtleTo(xStart, yStart, this.turtleAngleDeg);\r\n\r\n\r\n        // let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    calculateCenter() {\r\n        let length = this.lineElements.length;\r\n        let lastLineElement = this.lineElements[length - 1];\r\n        this.xSum += lastLineElement.x;\r\n        this.ySum += lastLineElement.y;\r\n        this.centerXInitial = this.xSum / length;\r\n        this.centerYInitial = this.ySum / length;\r\n    }\r\n\r\n    closeAndFill(closeAndFill: boolean) {\r\n        if (closeAndFill != this.isFilled) {\r\n            this.isFilled = closeAndFill;\r\n            this.render();\r\n            this.initialHitPolygonDirty = true;\r\n        }\r\n    }\r\n\r\n    setShowTurtle(show: boolean) {\r\n        this.turtle.visible = show;\r\n    }\r\n\r\n    turn(angleDeg: number) {\r\n        this.turtleAngleDeg -= angleDeg;\r\n        if(Math.abs(this.turtleAngleDeg) > 360){\r\n            this.turtleAngleDeg -= Math.floor(this.turtleAngleDeg/360)*360;\r\n        }\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.moveTurtleTo(lastLineElement.x, lastLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n    rotate(angleInDegrees: number, cx?: number, cy?: number) {\r\n        // this.turn(angleInDegrees);\r\n        super.rotate(angleInDegrees, cx, cy);\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TurtleHelper = new TurtleHelper(this.lineElements[0].x, this.lineElements[0].y,\r\n            this.showTurtle, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.turtleAngleDeg = this.turtleAngleDeg;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    newTurtleX: number;\r\n    newTurtleY: number;\r\n    newAngleDeg: number;\r\n\r\n    forward(length: number) {\r\n\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n\r\n        let turtleAngleRad = this.turtleAngleDeg/180.0*Math.PI;\r\n\r\n        let newLineElement: LineElement = {\r\n            x: lastLineElement.x + length * Math.cos(turtleAngleRad),\r\n            y: lastLineElement.y + length * Math.sin(turtleAngleRad),\r\n            color: this.penIsDown ? this.borderColor : null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        // if (this.isFilled) {\r\n        //     this.render();\r\n        // } else {\r\n        //     if (this.borderColor != null) {\r\n        //         // this.lineGraphic.moveTo(lastLineElement.x, lastLineElement.y);\r\n        //         this.lineGraphic.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        //         this.lineGraphic.lineTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"LineTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     } else {\r\n        //         this.lineGraphic.moveTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"MoveTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     }\r\n        // }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n\r\n        this.newTurtleX = newLineElement.x;\r\n        this.newTurtleY = newLineElement.y;\r\n        this.newAngleDeg = this.turtleAngleDeg;\r\n\r\n        // don't render more frequent than every 1/100 s\r\n        if (!this.renderJobPresent) {\r\n            this.renderJobPresent = true;\r\n            setTimeout(() => {\r\n                this.renderJobPresent = false;\r\n                this.render();\r\n                this.moveTurtleTo(this.newTurtleX, this.newTurtleY, this.turtleAngleDeg);\r\n            }, 100);\r\n        }\r\n\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        let newLineElement: LineElement = {\r\n            x: x,\r\n            y: y,\r\n            color: null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n        this.moveTurtleTo(newLineElement.x, newLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n\r\n    initTurtle(x: number, y: number, angleDeg: number): void {\r\n        this.turtle.clear();\r\n        this.turtle.lineStyle(3, 0xff0000, 1, 0.5);\r\n        this.turtle.moveTo(x, y);\r\n\r\n        let angleRad = angleDeg/180.0*Math.PI;\r\n\r\n        let vx = Math.cos(angleRad);\r\n        let vy = Math.sin(angleRad);\r\n\r\n        let vxp = -Math.sin(angleRad);\r\n        let vyp = Math.cos(angleRad);\r\n\r\n        let lengthForward = this.turtleSize / 2;\r\n        let lengthBackward = this.turtleSize / 4;\r\n        let lengthBackwardP = this.turtleSize / 4;\r\n\r\n        this.turtle.moveTo(x + vx * lengthForward, y + vy * lengthForward);\r\n        this.turtle.lineTo(x - vx * lengthBackward + vxp * lengthBackwardP, y - vy * lengthBackward + vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x - vx * lengthBackward - vxp * lengthBackwardP, y - vy * lengthBackward - vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x + vx * lengthForward, y + vy * lengthForward);\r\n    }\r\n\r\n    moveTurtleTo(x: number, y: number, angleDeg: number){\r\n        this.turtle.localTransform.identity();\r\n        this.turtle.localTransform.rotate(angleDeg/180.0*Math.PI);\r\n        this.turtle.localTransform.translate(x, y);\r\n\r\n        // this.turtle.localTransform.translate(-this.turtleX, -this.turtleY);\r\n        // this.turtle.localTransform.rotate((angleDeg - this.lastTurtleAngleDeg)/180.0*Math.PI);\r\n        // this.turtle.localTransform.translate(x, y);\r\n        //@ts-ignore\r\n        this.turtle.transform.onChange();\r\n        this.turtle.updateTransform();\r\n\r\n        this.lastTurtleAngleDeg = this.turtleAngleDeg;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = this.lineGraphic;\r\n\r\n        this.lastLineWidth = 0;\r\n        this.lastColor = 0;\r\n        this.lastAlpha = 0;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n\r\n        let firstPoint = this.lineElements[0];\r\n        g.moveTo(firstPoint.x, firstPoint.y);\r\n\r\n        if (this.isFilled) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        }\r\n        for (let i = 1; i < this.lineElements.length; i++) {\r\n            let le: LineElement = this.lineElements[i];\r\n            if (le.color != null) {\r\n                if (!this.isFilled) {\r\n                    if (le.lineWidth != this.lastLineWidth || le.color != this.lastColor || le.alpha != this.lastAlpha) {\r\n                        g.lineStyle(le.lineWidth, le.color, le.alpha, 0.5)\r\n                        this.lastLineWidth = le.lineWidth;\r\n                        this.lastColor = le.color;\r\n                        this.lastAlpha = le.alpha;\r\n                    }\r\n                }\r\n                g.lineTo(le.x, le.y);\r\n                // console.log(\"LineTo: \" + le.x + \", \" + le.y);\r\n            } else {\r\n                g.moveTo(le.x, le.y);\r\n                // console.log(\"MoveTo: \" + le.x + \", \" + le.y);\r\n            }\r\n        }\r\n\r\n        if (this.isFilled) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    collidesWith(shapeHelper: any) {\r\n\r\n        if (shapeHelper instanceof TurtleHelper && shapeHelper.initialHitPolygonDirty) {\r\n            shapeHelper.setupInitialHitPolygon();\r\n        }\r\n\r\n        if (this.initialHitPolygonDirty) {\r\n            this.setupInitialHitPolygon();\r\n            this.transformHitPolygon();\r\n            this.render();\r\n        }\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        if(shapeHelper. hitPolygonTransformed.length == 2 && !this.isFilled){\r\n            return steckenzugSchneidetStreckenzug(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        }\r\n\r\n        return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n\r\n    }\r\n\r\n    setupInitialHitPolygon() {\r\n        this.hitPolygonInitial = this.lineElements.map((le) => { return { x: le.x, y: le.y } });\r\n    }\r\n\r\n    clear(x: number = null, y: number = null, angle: number = null) {\r\n        let lastLineElement = this.lineElements.pop();\r\n        if(x == null) x = lastLineElement.x;\r\n        if(y == null) y = lastLineElement.y;\r\n\r\n        this.lineElements = [];\r\n\r\n        this.lineElements.push({\r\n            x: x,\r\n            y: y,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.hitPolygonInitial = [];\r\n        if(angle != null){\r\n            this.turtleAngleDeg = angle;\r\n            this.lastTurtleAngleDeg = 0;\r\n            this.borderColor = 0;\r\n            this.turtleSize = 40;\r\n        }\r\n        this.render();\r\n        if(angle != null){\r\n            this.moveTurtleTo(x, y, angle);\r\n        }\r\n    }\r\n\r\n\r\n    touchesAtLeastOneFigure(): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesColor(farbe: number): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                if (sh instanceof FilledShapeHelper && sh.fillColor == farbe) return true;\r\n                // if(sh instanceof TurtleHelper) TODO\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesShape(shape: ShapeHelper) {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n        return shape.containsPoint(x, y);\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (this.initialHitPolygonDirty) {\r\n            this.setupInitialHitPolygon();\r\n            this.transformHitPolygon();\r\n            this.render();\r\n        }\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        if(this.isFilled){\r\n            return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        } else {\r\n            return streckenzugEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport type GNGAktionsempfaengerType = \"ausführen\" | \"taste\" | \"sondertaste\" | \"geklickt\";\r\n\r\nexport type GNGAktionsempfaengerData = {\r\n    type: GNGAktionsempfaengerType,\r\n    method: Method,\r\n    runtimeObject: RuntimeObject\r\n}\r\n\r\nexport class GNGEreignisbehandlung extends Klass {\r\n\r\n    constructor(module: Module, private moduleStore: ModuleStore) {\r\n\r\n        super(\"Ereignisbehandlung\", module, \"Zugriff auf Ereignisse einschließlich Taktgeber (Graphics'n Games-Bibliothek (Cornelsen-Verlag))\");\r\n\r\n\r\n        this.addMethod(new Method(\"Ereignisbehandlung\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let helper = GNGEreignisbehandlung.getHelper(module);\r\n\r\n                helper.registerEvents(o);\r\n\r\n            }, false, false, 'Instanziert ein neues Ereignisbehandlungs-Objekt.', true));\r\n\r\n        // this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n        //     { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n        //         let groesse: number = parameters[1].value;\r\n\r\n\r\n        //     }, false, false, \"Setzt die Größe der Figur.\", false));\r\n\r\n        this.addMethod(new Method(\"Starten\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                 GNGEreignisbehandlung.getHelper(module).startTimer();\r\n\r\n            }, false, false, \"Zeitgeber starten.\", false));\r\n\r\n        this.addMethod(new Method(\"Anhalten\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                GNGEreignisbehandlung.getHelper(module).stopTimer();\r\n\r\n            }, false, false, \"Zeitgeber anhalten.\", false));\r\n\r\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\r\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let dauer: number = parameters[1].value;\r\n                GNGEreignisbehandlung.getHelper(module).taktdauer = dauer;\r\n\r\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\r\n\r\n\r\n        this.addMethod(new Method(\"TaktImpulsAusführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n    }\r\n\r\n    static getHelper(module: Module):GNGEreignisbehandlungHelper{\r\n        let interpreter = module.main.getInterpreter();\r\n        if (interpreter.gngEreignisbehandlungHelper == null) {\r\n            interpreter.gngEreignisbehandlungHelper = new GNGEreignisbehandlungHelper(module);\r\n            interpreter.gngEreignisbehandlungHelper.bindEvents();\r\n        }\r\n\r\n        return interpreter.gngEreignisbehandlungHelper;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class GNGEreignisbehandlungHelper {\r\n\r\n    aktionsempfaengerTypes: string[] = [\"ausführen\", \"taste\", \"sondertaste\", \"geklickt\"];\r\n    methodSignatureList: string[] = [\"TaktImpulsAusführen()\", \"AktionAusführen()\", \"MausGeklickt(int, int, int)\", \"TasteGedrückt(char)\", \"SonderTasteGedrückt(int)\"];\r\n    methodToAktionsempfaengerTypeMap: { [signature: string]: string } = {\r\n        \"TaktImpulsAusführen()\": \"ausführen\",\r\n        \"AktionAusführen()\": \"ausführen\",\r\n        \"MausGeklickt(int, int, int)\": \"geklickt\",\r\n        \"TasteGedrückt(char)\": \"taste\",\r\n        \"SonderTasteGedrückt(int)\": \"sondertaste\"\r\n    };\r\n\r\n    // see https://www.freecodecamp.org/news/javascript-keycode-list-keypress-event-key-codes/\r\n    keyToKeyCodeMap: { [key: string]: number } = {\r\n        \"Enter\": 13,\r\n        \"ArrowLeft\": 37,\r\n        \"ArrowRight\": 39,\r\n        \"ArrowUp\": 38,\r\n        \"ArrowDown\": 40,\r\n        \"F1\": 112,\r\n        \"F2\": 113,\r\n        \"F3\": 114,\r\n        \"F4\": 115,\r\n        \"F5\": 116,\r\n        \"F6\": 117,\r\n        \"F7\": 118,\r\n        \"F8\": 119,\r\n        \"F9\": 120,\r\n        \"F10\": 121,\r\n        \"F11\": 122,\r\n        \"F12\": 123,\r\n        \"PageUp\": 33,\r\n        \"PageDown\": 34,\r\n        \"Insert\": 155\r\n    }\r\n\r\n    // For gng library (Cornelsen-Verlag):\r\n    aktionsempfaengerMap: { [aktionsempfaengerType: string]: GNGAktionsempfaengerData[] } = {};\r\n\r\n    timerRunning: boolean = false;\r\n    taktdauer: number = 300;\r\n    remainingTime: number = 0;\r\n\r\n    onKeyDownMethod: (key: string) => void;\r\n\r\n    constructor(private module:Module){\r\n        for (let type of this.aktionsempfaengerTypes) {\r\n            this.aktionsempfaengerMap[type] = [];\r\n        }\r\n\r\n    }\r\n\r\n    hasAktionsEmpfaenger(): boolean {\r\n\r\n        for(let type of this.aktionsempfaengerTypes){\r\n            if(this.aktionsempfaengerMap[type].length > 0){\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n\r\n    registerEvents(o: RuntimeObject) {\r\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\r\n\r\n        for (let ms of this.methodSignatureList) {\r\n            let method: Method = klass.getMethodBySignature(ms);\r\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n                this.aktionsempfaengerMap[type].push({\r\n                    type: <GNGAktionsempfaengerType>type,\r\n                    method: method,\r\n                    runtimeObject: o\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    unregisterEvents(o: RuntimeObject) {\r\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\r\n\r\n        for (let ms of this.methodSignatureList) {\r\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\r\n\r\n            this.aktionsempfaengerMap[type] =\r\n                this.aktionsempfaengerMap[type].filter(ae => ae.runtimeObject != o);\r\n        }\r\n    }\r\n\r\n\r\n    bindEvents() {\r\n        let interpreter = this.module.main.getInterpreter();\r\n\r\n        this.onKeyDownMethod = (key: string) => {\r\n            if (key.length == 1) {\r\n                for (let ae of this.aktionsempfaengerMap[\"taste\"]) {\r\n                    this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: key }]);\r\n                }\r\n            } else {\r\n                let keyCode = this.keyToKeyCodeMap[key];\r\n                if (keyCode != null) {\r\n                    for (let ae of this.aktionsempfaengerMap[\"sondertaste\"]) {\r\n                        this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: keyCode }]);\r\n                    }\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        interpreter.keyboardTool.keyDownCallbacks.push(this.onKeyDownMethod);\r\n\r\n        // this.startTimer();\r\n\r\n    }\r\n\r\n    detachEvents() {\r\n        let interpreter = this.module.main.getInterpreter();\r\n        let index = interpreter.keyboardTool.keyDownCallbacks.indexOf(this.onKeyDownMethod);\r\n        if (index >= 0) interpreter.keyboardTool.keyDownCallbacks.splice(index, 1);\r\n        this.stopTimer();\r\n    }\r\n\r\n\r\n    invokeMethod(method: Method, runtimeObject: RuntimeObject, parameters: Value[] = [], callback?: () => void) {\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        parameters = parameters.slice(0);\r\n        parameters.unshift({ type: runtimeObject.class, value: runtimeObject });\r\n\r\n        if (program != null) {\r\n            this.module.main.getInterpreter().runTimer(method, parameters, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke(parameters);\r\n        }\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        this.timerRunning = false;\r\n    }\r\n\r\n    startTimer() {\r\n\r\n        if (!this.timerRunning) {\r\n            this.timerRunning = true;\r\n            this.processTimerEntries();\r\n        }\r\n\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if (!this.timerRunning) return;\r\n\r\n        let dt = 10;\r\n\r\n        this.remainingTime += dt;\r\n        if (this.remainingTime > this.taktdauer) {\r\n            this.remainingTime -= this.taktdauer;\r\n\r\n            let liste = this.aktionsempfaengerMap[\"ausführen\"];\r\n            for (let ae of liste) {\r\n\r\n                this.invokeMethod(ae.method, ae.runtimeObject, []);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, dt);\r\n\r\n    }\r\n\r\n    handleMouseClickedEvent(x: number, y: number) {\r\n        let parameters: Value[] = [\r\n            { type: intPrimitiveType, value: Math.round(x) },\r\n            { type: intPrimitiveType, value: Math.round(y) },\r\n            { type: intPrimitiveType, value: 1 }\r\n        ]\r\n\r\n        let liste = this.aktionsempfaengerMap[\"geklickt\"];\r\n        for (let ae of liste) {\r\n            this.invokeMethod(ae.method, ae.runtimeObject, parameters);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper } from \"../graphics/World.js\";\r\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\r\n\r\nexport class GNGZeichenfensterClass extends Klass {\r\n\r\n    constructor(public module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Zeichenfenster\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\r\n\r\n        let aktionsempfaengerType = <GNGZeichenfensterClass>module.typeStore.getType(\"Aktionsempfaenger\");\r\n\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n\r\n        this.addMethod(new Method(\"MalflächenBreiteGeben\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return Math.round(this.getWorldHelper().width);\r\n\r\n            }, false, true, 'Gibt die Breite des Zeichenbereichs in Pixeln zurück.', false));\r\n\r\n        this.addMethod(new Method(\"MalflächenHöheGeben\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return Math.round(this.getWorldHelper().width);\r\n\r\n            }, false, true, 'Gibt die Höhe des Zeichenbereichs in Pixeln zurück.', false));\r\n\r\n        this.addMethod(new Method(\"AktionsEmpfängerEintragen\", new Parameterlist([\r\n            { identifier: \"neu\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.registerEvents(aktionsempfaenger);\r\n\r\n            }, false, true, 'Trägt einen neuen Aktionsempfänger ein.', false));\r\n\r\n        this.addMethod(new Method(\"AktionsEmpfängerEntfernen\", new Parameterlist([\r\n            { identifier: \"alt\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.unregisterEvents(aktionsempfaenger);\r\n\r\n            }, false, true, 'Löscht einen Aktionsempfänger aus der Liste.', false));\r\n\r\n        this.addMethod(new Method(\"TaktgeberStarten\", new Parameterlist([]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.startTimer();\r\n\r\n            }, false, true, 'Startet den Taktgeber', false));\r\n\r\n        this.addMethod(new Method(\"TaktgeberStoppen\", new Parameterlist([]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.stopTimer();\r\n\r\n            }, false, true, 'Stoppt den Taktgeber', false));\r\n\r\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\r\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let dauer: number = parameters[1].value;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.taktdauer = dauer;\r\n\r\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n        if (wh != null) {\r\n\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.localTransform.scale(wh.width / breite, wh.height / höhe);\r\n                wh.width = breite;\r\n                wh.height = höhe;\r\n                // this.stage.localTransform.rotate(45/180*Math.PI);\r\n                // this.stage.localTransform.translate(400,300);\r\n                //@ts-ignore\r\n                wh.stage.transform.onChange();\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n            let worldObject: RuntimeObject = new RuntimeObject(<Klass>this.module.typeStore.getType(\"World\"));\r\n            let wh = new WorldHelper(breite, höhe, this.module, worldObject);\r\n            worldObject.intrinsicData[\"World\"] = wh;\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\n\r\nexport class GNGRechteckClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Rechteck\", module, \"Rechteck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(Math.abs(sh.width * sh.displayObject.scale.x)); \r\n        }, false, Visibility.protected, false, \"Breite des Rechtecks\"));\r\n\r\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(Math.abs(sh.height * sh.displayObject.scale.x)); \r\n        }, false, Visibility.protected, false, \"Höhe des Rechtecks\"));\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.addMethod(new Method(\"Rechteck\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new RectangleHelper(10, 10, 100, 100, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\r\n\r\n                o.intrinsicData[\"Farbe\"] = \"rot\";\r\n                rh.setFillColor(0xff0000);\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\r\n\r\n                sh.height = höhe / sh.displayObject.scale.y;\r\n                sh.width = breite / sh.displayObject.scale.x;\r\n\r\n                sh.centerXInitial = sh.left + sh.width/2;\r\n                sh.centerYInitial = sh.top + sh.height/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite und Höhe des Rechtecks.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","export var GNGFarben: {[identifier: string]: number} = {\r\n    \"weiß\": 0xffffff,\r\n    \"weiss\": 0xffffff,\r\n    \"rot\": 0xff0000,\r\n    \"grün\": 0x00ff00,\r\n    \"gruen\": 0x00ff00,\r\n    \"blau\": 0x0000ff,\r\n    \"gelb\": 0xffff00,\r\n    \"magenta\": 0xff00ff,\r\n    \"cyan\": 0x00ffff,\r\n    \"hellgelb\": 0xffff80,\r\n    \"hellgrün\": 0x80ff80,\r\n    \"hellgruen\": 0x80ff80,\r\n    \"orange\": 0xff8000,\r\n    \"braun\": 0x804000,\r\n    \"grau\": 0x808080,\r\n    \"schwarz\": 0x000000\r\n} ","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\r\nimport { GNGFarben } from \"./GNGFarben.js\";\r\n\r\nexport class GNGBaseFigurClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"GNGBaseFigur\", module, \"Oberklasse der graphischen Elemente in der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        let objectType = <Klass>moduleStore.getType(\"Object\").type;\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addAttribute(new Attribute(\"farbe\", stringPrimitiveType, (value: Value) => { \r\n            let farbe = value.object.intrinsicData[\"Farbe\"];\r\n            value.value = farbe == null ? \"schwarz\" : farbe;\r\n        }, false, Visibility.protected, false, \"Farbe des Grafikobjekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.getCenterX()); \r\n        }, false, Visibility.protected, false, \"x-Position des Grafikobjekts\"));\r\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.getCenterY()); \r\n        }, false, Visibility.protected, false, \"y-Position des Grafikobjekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].angle \r\n        }, false, Visibility.protected, false, \"Blickrichtung des Grafikobjekts in Grad\"));\r\n\r\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \r\n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \r\n        }, false, Visibility.protected, false, \"Größe des Grafikobjekts (100 entspricht 'normalgroß')\"));\r\n\r\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \r\n        }, false, Visibility.protected, false, \"true, wenn das Grafikobjekt sichtbar ist\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\r\n\r\n                let moveAnchor: {x: number, y: number} = o.intrinsicData[\"moveAnchor\"];\r\n\r\n                let p: PIXI.Point = new PIXI.Point(moveAnchor.x, moveAnchor.y);\r\n                sh.displayObject.updateTransform();\r\n                sh.displayObject.transform.worldTransform.apply(p, p);\r\n        \r\n                sh.move(x - p.x, y - p.y);\r\n\r\n            }, false, false, \"Verschiebt das Rechteck so, dass seine linke obere Ecke bei (x,y) zu liegen kommt.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"Verschieben\", new Parameterlist([\r\n            { identifier: \"deltaX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"deltaY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"Verschieben\")) return;\r\n\r\n                sh.move(x, y);\r\n\r\n            }, false, false, \"Verschiebt die Figur um (x, y)\", false));\r\n\r\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\r\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let grad: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Drehen\")) return;\r\n\r\n                sh.rotate(grad);\r\n\r\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Drehpunkt ist der Diagonalenschnittpunkt der kleinsten achsenparallelen Bounding Box um die Figur.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let farbe: string = parameters[1].value;\r\n\r\n                o.intrinsicData[\"Farbe\"] = farbe;\r\n\r\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\r\n                if (color == null) color = 0x000000; // default: schwarz\r\n\r\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\r\n\r\n                sh.setFillColor(color);\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Farbe der Figur.\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\r\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let winkel: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\r\n\r\n                sh.rotate(winkel - sh.angle);\r\n\r\n            }, false, false, \"Setzt den Drehwinkel der Figur. Der Winkel wird in Grad angegebenen, positive Werte bedeuten eine Drehung gegen den Uhrzeigersinn.\", false));\r\n\r\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\r\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sichtbarkeit: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\r\n\r\n                sh.setVisible(sichtbarkeit);\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Entfernen\")) return;\r\n\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Zerstört das Objekt.\", false));\r\n\r\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\r\n\r\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class GNGAktionsempfaengerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Aktionsempfaenger\", module, \"GNG: Interface für die Aktionsausführung\");\r\n\r\n        this.addMethod(new Method(\"Ausführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"Taste\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTaste\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"Geklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\n\r\nexport class GNGDreieckClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Dreieck\", module, \"Dreieck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \r\n            let breite = value.object.intrinsicData[\"Breite\"];\r\n            value.value = Math.round(breite); \r\n        }, false, Visibility.protected, false, \"Breite des Dreiecks\"));\r\n\r\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \r\n            let höhe = value.object.intrinsicData[\"Höhe\"];\r\n            value.value = Math.round(höhe); \r\n        }, false, Visibility.protected, false, \"Höhe des Dreiecks\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Dreieck\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n\r\n                let rh = new PolygonHelper([60, 10, 110,110, 10, 110],true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 10};\r\n                rh.centerXInitial = 60;\r\n                rh.centerYInitial = 60;\r\n\r\n                o.intrinsicData[\"Breite\"] = 100;\r\n                o.intrinsicData[\"Höhe\"] = 100;\r\n\r\n                o.intrinsicData[\"Farbe\"] = \"rot\";\r\n                rh.setFillColor(0xff0000);\r\n\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck-Objekt.', true));\r\n\r\n            this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n                { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n                    let breite: number = parameters[1].value;\r\n                    let höhe: number = parameters[2].value;\r\n\r\n                    o.intrinsicData[\"Breite\"] = breite;\r\n                    o.intrinsicData[\"Höhe\"] = höhe;    \r\n\r\n                    breite /= sh.scaleFactor;\r\n                    höhe /= sh.scaleFactor;\r\n\r\n                    if (sh.testdestroyed(\"GrößeSetzen\")) return;\r\n    \r\n                    sh.setAllPointsUntransformed([60, 10, 60 - breite/2, 10 + höhe, 60 + breite/2, 10 + höhe ]);\r\n                    sh.centerXInitial = 60;\r\n                    sh.centerYInitial = 10 + höhe/2;\r\n                    \r\n                    // sh.setAllPointsUntransformed([60, 60 - höhe/2, 60 - breite/2, 60 + höhe/2, 60 + breite/2, 60 + höhe/2 ]);\r\n    \r\n                }, false, false, \"Setzt die Breite und Höhe des Dreiecks.\", false));\r\n    \r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\n\r\nexport class GNGKreisClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Kreis\", module, \"Kreis-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"radius\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.r * sh.displayObject.scale.x); \r\n        }, false, Visibility.protected, false, \"Radius des Kreises\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Kreis\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new CircleHelper(60, 60, 50, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 60};\r\n\r\n                o.intrinsicData[\"Farbe\"] = \"rot\";\r\n                rh.setFillColor(0xff0000);\r\n\r\n            }, false, false, 'Instanziert ein neues Kreis-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"RadiusSetzen\", new Parameterlist([\r\n            { identifier: \"radius\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n                let radius: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"radiusSetzen\")) return;\r\n\r\n                sh.setRadius(radius);\r\n\r\n            }, false, false, \"Setzt den Radius des Kreis-Objekts.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\nimport { TurtleHelper } from \"../graphics/Turtle.js\";\r\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\r\nimport { ShapeHelper } from \"../graphics/Shape.js\";\r\nimport { GNGFarben } from \"./GNGFarben.js\";\r\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\r\n\r\nexport class GNGTurtleClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        let objectType = moduleStore.getType(\"Object\").type;\r\n\r\n        super(\"GTurtle\", module, \"Turtle-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].x); \r\n        }, false, Visibility.protected, false, \"x-Position der Figur\"));\r\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].y); \r\n        }, false, Visibility.protected, false, \"x-Position der Figur\"));\r\n\r\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].turtleAngleDeg \r\n        }, false, Visibility.protected, false, \"Blickrichtung der Figur in Grad\"));\r\n\r\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \r\n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \r\n        }, false, Visibility.protected, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\r\n\r\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \r\n        }, false, Visibility.protected, false, \"true, wenn die Figur sichtbar ist\"));\r\n\r\n        this.addAttribute(new Attribute(\"stiftUnten\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].penIsDown; \r\n        }, false, Visibility.protected, false, \"true, wenn die Turtle beim Gehen zeichnet\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"GTurtle\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new TurtleHelper(100, 200, true, module.main.getInterpreter(), o);\r\n                rh.borderWidth = 1;\r\n                rh.setShowTurtle(true);\r\n                rh.setBorderColor(0);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.registerEvents(o);\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let größe: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"größeSetzen\")) return;\r\n\r\n                sh.turtleSize = größe;\r\n                sh.turn(0);\r\n\r\n            }, false, false, \"Setzt die Größe des Turtle-Dreiecks.\", false));\r\n\r\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let farbe: string = parameters[1].value;\r\n\r\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\r\n                if (color == null) color = 0x000000; // default: schwarz\r\n\r\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Zeichenfarbe der Turtle.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\r\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let grad: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Drehen\")) return;\r\n\r\n                sh.turn(grad);\r\n\r\n            }, false, false, \"Dreht die Turtle um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\r\n\r\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\r\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let länge: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Gehen\")) return;\r\n\r\n                sh.forward(länge);\r\n\r\n            }, false, false, \"Bewirkt, dass die Turtle um die angegebene Länge nach vorwärts geht.\", false));\r\n\r\n        this.addMethod(new Method(\"StiftHeben\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"StiftHeben\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.\", false));\r\n\r\n        this.addMethod(new Method(\"StiftSenken\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"StiftSenken\")) return;\r\n\r\n                sh.penIsDown = true;\r\n\r\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.\", false));\r\n\r\n        this.addMethod(new Method(\"Löschen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Löschen\")) return;\r\n\r\n                sh.clear(100, 200, 0);\r\n\r\n            }, false, false, \"Löscht alles von der Turtle gezeichnete und versetzt die Turtle in den Ausgangszustand.\", false));\r\n\r\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\r\n\r\n                sh.moveTo(x, y);\r\n\r\n            }, false, false, \"Verschiebt die Turtle an die Position (x, y) ohne eine neue Linie zu zeichnen.\", false));\r\n\r\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\r\n\r\n                sh.moveTo(100, 200);\r\n\r\n            }, false, false, \"Verschiebt die Turtle an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\r\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let winkel: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\r\n\r\n                sh.turn(winkel + sh.turtleAngleDeg);\r\n\r\n            }, false, false, \"Setzt den Blickwinkel der Turtle. 0° => nach rechts, 90°: => nach oben, usw..\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\r\n\r\n                return Math.round(-sh.turtleAngleDeg);\r\n\r\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\r\n\r\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].x);\r\n\r\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\r\n\r\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].y);\r\n\r\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\r\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sichtbarkeit: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\r\n\r\n                sh.setVisible(sichtbarkeit);\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Entfernen\")) return;\r\n\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\r\n\r\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                return sh.touchesAtLeastOneFigure();\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur befindet.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbeString: string = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                return sh.touchesColor(farbe);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur mit der angegebenen Farbe befindet.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\r\n\r\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                return sh.touchesShape(objectShapeHelper);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die übergebene Figur die aktuelle Turtleposition enthält.', false));\r\n\r\n\r\n\r\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { TextHelper } from \"../graphics/Text.js\";\r\n\r\nexport class GNGTextClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"GText\", module, \"Text-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"text\", stringPrimitiveType, (value: Value) => { \r\n            let text = value.object.intrinsicData[\"Actor\"].text;\r\n            value.value = text; \r\n        }, false, Visibility.private, false, \"Angezeigter Text\"));\r\n\r\n        this.addAttribute(new Attribute(\"textgröße\", intPrimitiveType, (value: Value) => { \r\n            let fontsize = value.object.intrinsicData[\"Actor\"].fontsize;\r\n            value.value = Math.round(fontsize); \r\n        }, false, Visibility.private, false, \"Textgröße\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new TextHelper(2, -8, 12, \"Text\", module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"moveAnchor\"] = {x: 6, y: 16};\r\n\r\n                rh.setFillColor(0);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Text-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"TextSetzen\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n                let text: string = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"TextSetzen\")) return;\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, \"Ändert den Text des Text-Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"TextGrößeSetzen\", new Parameterlist([\r\n            { identifier: \"textGröße\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n                let größe: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"TextGrößeSetzen\")) return;\r\n\r\n                sh.setFontsize(größe);\r\n\r\n            }, false, false, \"Setzt die Schriftgröße des Text-Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"TextVergrößern\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"TextVergrößern\")) return;\r\n\r\n                let size = sh.fontsize;\r\n                if (size <= 10) {\r\n                    size += 1;\r\n                }\r\n                else if (size <= 40) {\r\n                    size += 2;\r\n                }\r\n                else {\r\n                    size += 4;\r\n                }\r\n\r\n                sh.setFontsize(size);\r\n\r\n            }, false, false, \"Vergrößert die Schriftgröße des Text-Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"TextVerkleinern\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"TextVerkleinern\")) return;\r\n\r\n                let size = sh.fontsize;\r\n                if (size <= 10) {\r\n                    size -= 1;\r\n                }\r\n                else if (size <= 40) {\r\n                    size -= 2;\r\n                }\r\n                else {\r\n                    size -= 4;\r\n                }\r\n                if (size < 1) {\r\n                    size = 1;\r\n                }\r\n\r\n\r\n                sh.setFontsize(size);\r\n\r\n            }, false, false, \"Verkleinert die Schriftgröße des Text-Objekts.\", false));\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore, TypeStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\r\nimport { ShapeHelper } from \"../graphics/Shape.js\";\r\nimport { GroupHelper } from \"../graphics/Group.js\";\r\nimport { GNGFarben } from \"./GNGFarben.js\";\r\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { EllipseHelper } from \"../graphics/Ellipse.js\";\r\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\r\n\r\ntype GNGPoint = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport class GNGFigurClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        let objectType = <Klass>moduleStore.getType(\"Object\").type;\r\n\r\n        super(\"Figur\", module, \"Figur-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(objectType);\r\n\r\n        let polygonClass: Klass = <Klass>moduleStore.getType(\"Polygon\").type;\r\n        let circleClass: Klass = <Klass>moduleStore.getType(\"Circle\").type;\r\n        let ellipseClass: Klass = <Klass>moduleStore.getType(\"Ellipse\").type;\r\n        let rectangleClass: Klass = <Klass>moduleStore.getType(\"Rectangle\").type;\r\n\r\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].x) }, false, Visibility.private, false, \"x-Position der Figur\"));\r\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].y) }, false, Visibility.private, false, \"y-Position der Figur\"));\r\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].angle \r\n        }, false, Visibility.private, false, \"Blickrichtung der Figur in Grad\"));\r\n\r\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \r\n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \r\n        }, false, Visibility.private, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\r\n\r\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \r\n        }, false, Visibility.private, false, \"true, wenn die Figur sichtbar ist\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Figur\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                let rh = new FigurHelper(interpreter, o, helper);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                let center: GNGPoint = {\r\n                    x: 100,\r\n                    y: 200\r\n                };\r\n\r\n                o.intrinsicData[\"Center\"] = center;\r\n\r\n                this.drawInitialTriangle(rh, polygonClass, circleClass, interpreter, center);\r\n                o.intrinsicData[\"isInitialTriangle\"] = true;\r\n\r\n                rh.scale(0.4, center.x, center.y);\r\n                rh.displayObject.updateTransform();\r\n\r\n                helper.registerEvents(o);\r\n\r\n\r\n            }, false, false, 'Instanziert ein neues Figur-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let groesse: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n                let newFactor = groesse / 100;\r\n                sh.scale(newFactor / sh.scaleFactor, center.x, center.y);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Setzt die Größe der Figur.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\r\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let grad: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Drehen\")) return;\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                sh.rotate(grad, center.x, center.y);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\r\n\r\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\r\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let länge: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Gehen\")) return;\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                let angleRad = sh.angle / 180 * Math.PI;\r\n                let dx = länge * Math.cos(angleRad);\r\n                let dy = länge * Math.sin(-angleRad);\r\n                center.x += dx;\r\n                center.y += dy;                \r\n\r\n                sh.move(dx, dy);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Bewirkt, dass die Figur um die angegebene Länge 'nach vorne' geht.\", false));\r\n\r\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                sh.move(x - center.x, y - center.y);\r\n                sh.displayObject.updateTransform();\r\n                center.x = x;\r\n                center.y = y;\r\n\r\n            }, false, false, \"Verschiebt die Figur an die Position (x, y).\", false));\r\n\r\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                sh.move(100 - center.x, 200 - center.y);\r\n                sh.displayObject.updateTransform();\r\n                center.x = 100;\r\n                center.y = 200;\r\n\r\n            }, false, false, \"Verschiebt die Figur an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\r\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let winkel: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\r\n\r\n                sh.rotate(winkel - sh.angle);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Setzt den Blickwinkel der Figur. 0° => nach rechts (initial), 90°: => nach oben, usw..\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\r\n\r\n                if(sh.angle < 0) sh.angle += 360*Math.ceil(sh.angle/(-360));\r\n                if(sh.angle >= 360) sh.angle -= 360*Math.floor(sh.angle/360);\r\n                return Math.round(sh.angle);\r\n\r\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n                return center.x;\r\n\r\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n                return center.y;\r\n\r\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\r\n            { identifier: \"sichtbarkeit\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sichtbarkeit: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\r\n\r\n                sh.setVisible(sichtbarkeit);\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FigurHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Entfernen\")) return;\r\n\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\r\n\r\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\r\n\r\n        this.addMethod(new Method(\"EigeneFigurLöschen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"EigeneFigurLöschen\")) return;\r\n\r\n                sh.destroyChildren();\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                this.drawInitialTriangle(sh, polygonClass, circleClass, this.module.main.getInterpreter(), center);\r\n                o.intrinsicData[\"isInitialTriangle\"] = true;\r\n\r\n\r\n            }, false, false, 'Löscht die hinzugefügten Figuren', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                for (let shape of sh.worldHelper.shapes) {\r\n                    if (shape != sh &&  sh.collidesWith(shape)) return true;\r\n                }\r\n\r\n                return false;\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt kollidiert.', false));\r\n    \r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbeString: string = parameters[1].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                for (let shape of sh.worldHelper.shapes) {\r\n                    if (shape != sh) {\r\n                        if(shape instanceof FigurHelper){\r\n                            for(let part of shape.shapes){\r\n                                let partHelper = part.intrinsicData[\"Actor\"];\r\n                                if (partHelper instanceof FilledShapeHelper && farbe == partHelper.fillColor){\r\n                                    if(sh.collidesWith(partHelper)){\r\n                                        return true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n\r\n                            if(shape instanceof FilledShapeHelper && farbe == shape.fillColor){\r\n                                if (sh.collidesWith(shape)) return true;\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                return false;\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt der angegebenen Farbe kollidiert.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\r\n\r\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                return sh.collidesWith(objectShapeHelper);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit dem übergebenen graphischen Objekt kollidiert.', false));\r\n\r\n        this.addMethod(new Method(\"FigurteilFestlegenDreieck\", new Parameterlist([\r\n            { identifier: \"x1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n                let x3: number = parameters[5].value;\r\n                let y3: number = parameters[6].value;\r\n                let farbeString: string = parameters[7].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"FigurteilFestlegenDreieck\")) return;\r\n\r\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\r\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\r\n                    sh.destroyChildren();\r\n                }\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                let rto = new RuntimeObject(polygonClass);\r\n                let triangle = new PolygonHelper([x1, y1, x2, y2, x3, y3], true, this.module.main.getInterpreter(), rto);\r\n                rto.intrinsicData[\"Actor\"] = triangle;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                triangle.rotate(sh.angle, 0, 0);\r\n                triangle.scale(sh.scaleFactor, 0, 0);\r\n                triangle.move(center.x, center.y);\r\n                triangle.setFillColor(farbe);\r\n                triangle.setBorderColor(\"black\");\r\n                triangle.setBorderWidth(2);\r\n                sh.add(rto);\r\n\r\n            }, false, false, 'Erzeugt ein neues, dreieckiges Element einer eigenen Darstellung der Figur.', false));\r\n\r\n        this.addMethod(new Method(\"FigurteilFestlegenRechteck\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let breite: number = parameters[3].value;\r\n                let höhe: number = parameters[4].value;\r\n                let farbeString: string = parameters[5].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"FigurteilFestlegenRechteck\")) return;\r\n\r\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\r\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\r\n                    sh.destroyChildren();\r\n                }\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                let rto = new RuntimeObject(rectangleClass);\r\n                let rectangleHelper = new RectangleHelper(x + 0.05, y + 0.05, breite - 0.1, höhe - 0.1, this.module.main.getInterpreter(), rto);\r\n                rto.intrinsicData[\"Actor\"] = rectangleHelper;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                rectangleHelper.rotate(sh.angle, 0, 0);\r\n                rectangleHelper.scale(sh.scaleFactor, 0, 0);\r\n                rectangleHelper.move(center.x, center.y);\r\n                rectangleHelper.setFillColor(farbe);\r\n                rectangleHelper.setBorderColor(\"black\");\r\n                rectangleHelper.setBorderWidth(2);\r\n                sh.add(rto);\r\n\r\n            }, false, false, 'Erzeugt ein neues, rechteckiges Element einer eigenen Darstellung der Figur.', false));\r\n\r\n        this.addMethod(new Method(\"FigurteilFestlegenEllipse\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let breite: number = parameters[3].value;\r\n                let höhe: number = parameters[4].value;\r\n                let farbeString: string = parameters[5].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"FigurteilFestlegenEllipse\")) return;\r\n                \r\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\r\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\r\n                    sh.destroyChildren();\r\n                }\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                höhe = höhe - 0.1;      // hack to ensure collision-handling identical to gng (also 0.05 two lines below)\r\n                breite = breite - 0.1;\r\n\r\n                let rto = new RuntimeObject(ellipseClass);\r\n                let ellipseHelper = new EllipseHelper(x + breite / 2 + 0.05, y + höhe / 2 + 0.05, breite / 2, höhe / 2, this.module.main.getInterpreter(), rto);\r\n                rto.intrinsicData[\"Actor\"] = ellipseHelper;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                ellipseHelper.rotate(sh.angle, 0, 0);\r\n                ellipseHelper.scale(sh.scaleFactor, 0, 0);\r\n                ellipseHelper.move(center.x, center.y);\r\n                ellipseHelper.setFillColor(farbe);\r\n                ellipseHelper.setBorderColor(\"black\");\r\n                ellipseHelper.setBorderWidth(2);\r\n                sh.add(rto);\r\n\r\n            }, false, false, 'Erzeugt ein neues, elliptisches Element einer eigenen Darstellung der Figur.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    drawInitialTriangle(gh: GroupHelper, triangleClass: Klass, circleClass: Klass, interpreter: Interpreter, center: GNGPoint) {\r\n        let t: RuntimeObject = new RuntimeObject(triangleClass);\r\n        let th: PolygonHelper = new PolygonHelper([-50, -50, 50, 0, -50, 50], true, interpreter, t);\r\n        t.intrinsicData[\"Actor\"] = th;\r\n        th.move(center.x, center.y);\r\n        th.setFillColor(\"yellow\");\r\n        th.setBorderColor(\"black\");\r\n        th.setBorderWidth(2);\r\n        gh.add(t);\r\n\r\n        let c: RuntimeObject = new RuntimeObject(circleClass);\r\n        let ch: CircleHelper = new CircleHelper(0, 0, 10, interpreter, c);\r\n        c.intrinsicData[\"Actor\"] = ch;\r\n        ch.move(center.x, center.y);\r\n        ch.setFillColor(\"blue\");\r\n        ch.setBorderColor(\"black\");\r\n        ch.setBorderWidth(2);\r\n        gh.add(c);\r\n\r\n    }\r\n}\r\n\r\n\r\nclass FigurHelper extends GroupHelper {\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject, private gngEreignisbehandlungsHelper: GNGEreignisbehandlungHelper) {\r\n        super(interpreter, runtimeObject);\r\n    }\r\n\r\n    destroy(){\r\n        this.gngEreignisbehandlungsHelper.unregisterEvents(this.runtimeObject);\r\n        super.destroy();\r\n    }\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class RandomClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Random\", module, \"Zufallszahlengenerator\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.addMethod(new Method(\"nextInt\", new Parameterlist([\r\n            { identifier: \"bound\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let bound: number = parameters[1].value;\r\n\r\n                return Math.floor(Math.random()*bound);\r\n\r\n            }, false, false, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {0, 1, ..., bound - 1} zurück.', false));\r\n\r\n        this.addMethod(new Method(\"randint\", new Parameterlist([\r\n            { identifier: \"from\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"to\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let from: number = parameters[1].value;\r\n                let to: number = parameters[2].value;\r\n\r\n                return Math.floor(Math.random()*(to - from + 1) + from);\r\n\r\n            }, false, true, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {from, from + 1, ..., to} zurück.', false));\r\n\r\n        this.addMethod(new Method(\"randdouble\", new Parameterlist([\r\n            { identifier: \"from\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"to\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let from: number = parameters[1].value;\r\n                let to: number = parameters[2].value;\r\n\r\n                return Math.random()*(to - from) + from;\r\n\r\n            }, false, true, 'Gibt eine Zufallszahl aus dem Intervall [from, to[ zurück.', false));\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class DirectionClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Direction\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Richtung (oben, rechts, unten, links)\"\r\n    }\r\n\r\n}","type Patch = {\r\n    old: RegExp, \r\n    new: string\r\n}\r\n\r\nexport class Patcher {\r\n\r\n    static patches: Patch[] = [\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 0\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 1\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 2\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 3\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 4\"},\r\n\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 5\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 6\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 7\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 8\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 9\"},\r\n\r\n        {old: /SpriteLibrary.Asteroid_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 10\"},\r\n        {old: /SpriteLibrary.Gegner_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 11\"},\r\n\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 12\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 13\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 14\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 15\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 16\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*5/g, new: \"SpriteLibrary.Space_Shooter_1, 17\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*6/g, new: \"SpriteLibrary.Space_Shooter_1, 18\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*7/g, new: \"SpriteLibrary.Space_Shooter_1, 19\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*8/g, new: \"SpriteLibrary.Space_Shooter_1, 20\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*9/g, new: \"SpriteLibrary.Space_Shooter_1, 21\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*10/g, new: \"SpriteLibrary.Space_Shooter_1, 22\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*11/g, new: \"SpriteLibrary.Space_Shooter_1, 23\"},\r\n    ] \r\n\r\n    static patch(text: string): {patchedText: string, modified: boolean} {\r\n\r\n        let modified: boolean = false;\r\n\r\n        for(let patch of Patcher.patches){\r\n            if(text.match(patch.old) != null){\r\n                text = text.replace(patch.old, patch.new);\r\n                modified = true;\r\n            }\r\n        }\r\n\r\n        return {patchedText: text, modified: modified}\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\n\r\ntype Key = {name: string, code: number};\r\n\r\nexport class KeyEvent extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"KeyEvent\", module, \"Nachbildung von java.awt.event.KeyEvent\");\r\n\r\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\r\n\r\n        /**\r\n         *  \"Enter\": 13,\r\n        \"ArrowLeft\": 37,\r\n        \"ArrowRight\": 39,\r\n        \"ArrowUp\": 38,\r\n        \"ArrowDown\": 40,\r\n        \"F1\": 112,\r\n        \"F2\": 113,\r\n        \"F3\": 114,\r\n        \"F4\": 115,\r\n        \"F5\": 116,\r\n        \"F6\": 117,\r\n        \"F7\": 118,\r\n        \"F8\": 119,\r\n        \"F9\": 120,\r\n        \"F10\": 121,\r\n        \"F11\": 122,\r\n        \"F12\": 123,\r\n        \"PageUp\": 33,\r\n        \"PageDown\": 34,\r\n        \"Insert\": 155\r\n         */\r\n\r\n        let keys: Key[] = [{name: \"VK_ENTER\", code: 13}, {name: \"VK_LEFT\", code: 37}, {name: \"VK_UP\", code: 38}, \r\n        {name: \"VK_RIGHT\", code: 39}, {name: \"VK_DOWN\", code: 40}, {name: \"VK_PAGE_UP\", code: 33}, {name: \"VK_PAGE_DOWN\", code: 34},\r\n        {name: \"VK_INSERT\", code: 155}];\r\n\r\n        for(let i = 1; i <= 12; i++){\r\n            keys.push({name: \"VK\" + i, code: 111 + i});\r\n        }\r\n        \r\n        for(let key of keys){\r\n            this.addAttribute(new Attribute(key.name, intPrimitiveType, (value) => {value.value = key.code}, \r\n            true, Visibility.public, true, \"KeyCode für die Taste \" + key.name));\r\n        }\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n    }\r\n\r\n}\r\n\r\n","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.keywordSwitch:\r\n                    switchHappend = true;\r\n                    break;\r\n                case TokenType.keywordCase:\r\n                case TokenType.keywordDefault:\r\n                    // outdent: line with case:\r\n                    if (t.position.column > 3) {\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                    }\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            if(lastNonSpaceToken.position.line == t.position.line){\r\n                                this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && [TokenType.newline, TokenType.keywordFor].indexOf(lastToken2.tt) < 0 && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let nextNonSpaceToken = this.getNextNonSpaceToken(i, tokenlist);\r\n\r\n                        // no additional indent after \"case 12 :\"\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt) && lastNonSpaceToken?.tt != TokenType.colon;\r\n                        let nextTokenIsOperator = this.isBinaryOperator(nextNonSpaceToken.tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline || nextNonSpaceToken.tt == TokenType.comment) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.keywordFor:\r\n                case TokenType.keywordWhile:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt == TokenType.leftBracket) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.assignment, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space || tokenlist[j].tt == TokenType.return)){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.colon;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","export class Boxes3d {\r\n    public static createCube3d(material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createCube3dMesh(), material);\r\n    }\r\n    public static createCube3dMesh() {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n                buffer: new Float32Array([-1, 1, 1, -1, -1, -1, -1, -1, 1, -1, 1, -1,  // 0, 1, 2, 3\r\n                -1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1,  // 4, 5, 6, 7\r\n                    1, 1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, // 8, 9, 10, 11\r\n                    1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1,  // 12, 13, 14, 15\r\n                    1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, 1,  // 16, 17, 18, 19\r\n                -1, 1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1]) // 20, 21, 22, 23\r\n            },\r\n            indices: {\r\n                buffer: new Uint8Array([0, 1, 2, 0, 3, 1, 4, 5, 6, 4, 7, 5, 8, 9, 10, 8, 11, 9, 12, 13, 14, 12, 15, 13, 16, 17, 18, 16, 19, 17, 20, 21, 22, 20, 23, 21])\r\n            },\r\n            normals: {\r\n                buffer: new Float32Array([-1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n                buffer: new Float32Array([\r\n                    0.66666, 0.00, 0.33333, 1.00,  0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0,       0,    0.33333, 0.25, 0.33333, 0,    0,       0.25, \r\n                    0.66666, 0, 1.0, 1.0, 1.0, 0, 0.66666, 1.00])\r\n                // buffer: new Float32Array([0.66666, 1, 0.33333, 0.75, 0.33333, 1,   0.66666, 0.75, 0.66666, 0.75, 0.33333, 0.5, 0.33333, 0.75, 0.66666, 0.5, \r\n                //  0.66666, 0.5, 0.33333, 0.25, 0.33333, 0.5, 0.66666, 0.25, 0.66666, 0.25, 0.33333, 0, 0.33333, 0.25, 0.66666, 0, \r\n                //  0.33333, 0.25, 0.125, 0.5, 0.33333, 0.5, 0.125, 0.25, \r\n                //1.0, 0.25, 0.66666, 0.5, 1.0, 0.5, 0.66666, 0.25])\r\n            }],\r\n            tangents: {\r\n                buffer: new Float32Array([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1])\r\n            }\r\n        })\r\n    }\r\n\r\n    public static createHalfheightCube3d(material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createHalfheightCube3dMesh(), material);\r\n    }\r\n    public static createHalfheightCube3dMesh() {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n                buffer: new Float32Array([-1, 1, 1, -1, 0, -1, -1, 0, 1, -1, 1, -1,  // 0, 1, 2, 3\r\n                -1, 1, -1, 1, 0, -1, -1, 0, -1, 1, 1, -1,  // 4, 5, 6, 7\r\n                    1, 1, -1, 1, 0, 1, 1, 0, -1, 1, 1, 1, // 8, 9, 10, 11\r\n                    1, 1, 1, -1, 0, 1, 1, 0, 1, -1, 1, 1,  // 12, 13, 14, 15\r\n                    1, 0, 1, -1, 0, -1, 1, 0, -1, -1, 0, 1,  // 16, 17, 18, 19\r\n                -1, 1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1]) // 20, 21, 22, 23\r\n            },\r\n            indices: {\r\n                buffer: new Uint8Array([0, 1, 2, 0, 3, 1, 4, 5, 6, 4, 7, 5, 8, 9, 10, 8, 11, 9, 12, 13, 14, 12, 15, 13, 16, 17, 18, 16, 19, 17, 20, 21, 22, 20, 23, 21])\r\n            },\r\n            normals: {\r\n                buffer: new Float32Array([-1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n                buffer: new Float32Array([\r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0,       0,    0.33333, 0.25, 0.33333, 0,    0,       0.25, \r\n                    0.66666, 0, 1.0, 1.0, 1.0, 0, 0.66666, 1.00])\r\n                // buffer: new Float32Array([0.6, 1, 0.4, 0.75, 0.4, 1, 0.6, 0.75, 0.6, 0.75, 0.4, 0.5, 0.4, 0.75, \r\n                //                           0.6, 0.5, 0.6, 0.5, 0.4, 0.25, 0.4, 0.5, 0.6, 0.25, 0.6, 0.25, 0.4, 0, \r\n                //                           0.4, 0.25, 0.6, 0, 0.4, 0.25, 0.125, 0.5, 0.4, 0.5, 0.125, 0.25, 1.0, 0.25, 0.6, \r\n                //                           0.5, 1.0, 0.5, 0.6, 0.25])\r\n            }],\r\n            tangents: {\r\n                buffer: new Float32Array([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1])\r\n            }\r\n        })\r\n    }\r\n\r\n    public static createPlane3d(repeatTextureU: number = 1, repeatTextureV: number = 1, material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createPlane3dMesh(repeatTextureU, repeatTextureV), material);\r\n    }\r\n\r\n    public static createPlane3dMesh(repeatTextureU: number = 1, repeatTextureV: number = 1) {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n              buffer: new Float32Array([-1, 0, 1, 1, 0, -1, -1, 0, -1, 1, 0, 1])\r\n            },\r\n            indices: {\r\n              buffer: new Uint8Array([0, 1, 2, 0, 3, 1])\r\n            },\r\n            normals: {\r\n              buffer: new Float32Array([0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n              buffer: new Float32Array([0, repeatTextureV, repeatTextureU, 0, 0, 0, repeatTextureU, repeatTextureV])\r\n            }]\r\n          })\r\n    }\r\n\r\n\r\n}\r\n","import { WorldHelper } from \"../World.js\";\r\nimport { Boxes3d } from \"./Boxes3d.js\";\r\n\r\nexport function getSpritesheetTexture(identifier: string, copy: boolean = false, renderer: PIXI.Renderer = null) {\r\n    let sheet = PIXI.Loader.shared.resources[\"spritesheet\"].spritesheet;\r\n    let texture = sheet.textures[identifier];\r\n\r\n    if (copy) {\r\n        let sprite = new PIXI.Sprite(texture);\r\n\r\n        let dynamicTexture1 = PIXI.RenderTexture.create({\r\n            width: sprite.width,\r\n            height: sprite.height,\r\n            scaleMode: PIXI.SCALE_MODES.NEAREST,\r\n            wrapMode: PIXI.WRAP_MODES.REPEAT\r\n        });\r\n\r\n        renderer.render(sprite, {\r\n            renderTexture: dynamicTexture1\r\n        });\r\n\r\n        return new Pixi3d.StandardMaterialTexture(dynamicTexture1.baseTexture);\r\n    } else {\r\n        let smt = new Pixi3d.StandardMaterialTexture(texture.baseTexture);\r\n        smt.transform = new Pixi3d.TextureTransform()\r\n        smt.transform.offset.set(\r\n            (texture.frame.x + 0) / texture.baseTexture.width,\r\n            (texture.frame.y + 0) / texture.baseTexture.height\r\n        )\r\n        smt.transform.scale.set(\r\n            texture.frame.width / texture.baseTexture.width,\r\n            texture.frame.height / texture.baseTexture.height\r\n        )\r\n        return smt;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class RobotMarker extends Pixi3d.Mesh3D {\r\n    constructor(geometry: Pixi3d.MeshGeometry3D, material: Pixi3d.Material, public farbe: string) {\r\n        super(geometry, material);\r\n    }\r\n}\r\n\r\nexport class RobotBrick extends Pixi3d.Mesh3D {\r\n    constructor(geometry: Pixi3d.MeshGeometry3D, material: Pixi3d.Material, public farbe: string) {\r\n        super(geometry, material);\r\n    }\r\n}\r\n\r\nexport class RobotCubeFactory {\r\n\r\n    farben: string[] = [\"rot\", \"gelb\", \"grün\", \"blau\"];\r\n    farbeToColorInfoMap: { [farbe: string]: number[] } = {\r\n        \"rot\": [1.0, 0.0, 0.0],\r\n        \"gelb\": [1.0, 1.0, 0.0],\r\n        \"grün\": [0.0, 1.0, 0.0],\r\n        \"blau\": [0.0, 0.0, 1.0]\r\n    }\r\n    farbeToMarkerMaterialMap: { [farbe: string]: Pixi3d.StandardMaterial } = {};\r\n    farbeToBrickMaterialMap: { [farbe: string]: Pixi3d.StandardMaterial } = {};\r\n\r\n\r\n    grassBrickMaterial: Pixi3d.StandardMaterial;\r\n    groundPlaneMaterial: Pixi3d.StandardMaterial;\r\n\r\n    planeMaterial: { [key: string]: Pixi3d.StandardMaterial } = {};\r\n\r\n    cloudMaterial: Pixi3d.StandardMaterial;\r\n\r\n    light1: Pixi3d.Light;\r\n    light2: Pixi3d.Light;\r\n    lightingEnvironment: Pixi3d.LightingEnvironment;\r\n\r\n\r\n\r\n    getBrick(farbe: string) {\r\n        return new RobotBrick(Boxes3d.createHalfheightCube3dMesh(), this.farbeToBrickMaterialMap[farbe], farbe);\r\n    }\r\n\r\n    getGrassBrick() {\r\n        return new Pixi3d.Mesh3D(Boxes3d.createCube3dMesh(), this.grassBrickMaterial);\r\n    }\r\n\r\n    getGrassPlane(x: number, z: number) {\r\n        let mesh = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(x, z), this.groundPlaneMaterial);\r\n        mesh.scale.x = x;\r\n        mesh.scale.z = z;\r\n        mesh.x += x - 1;\r\n        mesh.z += z - 1;\r\n        //let plane = Pixi3d.Mesh3D.createPlane();\r\n        // (<Pixi3d.StandardMaterial>plane.material).baseColor = new Pixi3d.Color(0, 1, 0, 1); // The base color will be blended together with base color texture (if available).\r\n        // plane.y = -0.5;\r\n        // plane.scale.set(10);\r\n        return mesh;\r\n    }\r\n\r\n    makePlane(container: Pixi3d.Container3D, x: number, y: number, z: number, widthX: number, widthZ: number, spriteOrColor: string | Pixi3d.Color) {\r\n        let material: Pixi3d.StandardMaterial;\r\n        if (typeof spriteOrColor == \"string\") {\r\n            material = this.getPlaneMaterial(spriteOrColor);\r\n        } else {\r\n            material = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(material);\r\n            material.baseColor = spriteOrColor;\r\n        }\r\n        let mesh = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(widthX, widthZ), material);\r\n        mesh.y = y;\r\n        mesh.x = x;\r\n        mesh.z = z;\r\n        mesh.scale.set(widthX, 1, widthZ);\r\n        container.addChild(mesh);\r\n    }\r\n\r\n    getMarker(farbe: string) {\r\n        let marker = new RobotMarker(Boxes3d.createCube3dMesh(), this.farbeToMarkerMaterialMap[farbe], farbe);\r\n        marker.scale.set(0.9, 0.1, 0.9);\r\n        return marker;\r\n    }\r\n\r\n    getSidePlanes(worldX: number, worldY: number, sideSprite: string, radius: number, deep: number): Pixi3d.Mesh3D[] {\r\n        let planes: Pixi3d.Mesh3D[] = [];\r\n\r\n        let sideMaterial = this.getPlaneMaterial(sideSprite); //3d#3\r\n\r\n        let mesh1 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), sideMaterial);\r\n        mesh1.scale.x = worldX + 2 * radius;\r\n        mesh1.x += worldX - 1;\r\n        mesh1.y -= 1 + 2 * deep;\r\n        mesh1.z -= 1 + 2 * radius;\r\n        mesh1.rotationQuaternion.setEulerAngles(-90, 0, 180);\r\n        planes.push(mesh1);\r\n\r\n        let mesh2 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), sideMaterial);\r\n        mesh2.scale.x = worldX + 2 * radius;\r\n        mesh2.x += worldX - 1;\r\n        mesh2.y -= 1 + 2 * deep;\r\n        mesh2.z += 2 * worldY - 1 + 2 * radius;\r\n        mesh2.rotationQuaternion.setEulerAngles(90, 0, 0);\r\n        planes.push(mesh2);\r\n\r\n        let mesh3 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), sideMaterial);\r\n        mesh3.scale.x = worldY + 2 * radius;\r\n        mesh3.y -= 1 + 2 * deep;\r\n        mesh3.x -= 1 + 2 * radius;\r\n        mesh3.z += worldY - 1;\r\n        mesh3.rotationQuaternion.setEulerAngles(90, -90, 0);\r\n        planes.push(mesh3);\r\n\r\n        let mesh4 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), sideMaterial);\r\n        mesh4.scale.x = worldY + 2 * radius;\r\n        mesh4.y -= 1 + 2 * deep;\r\n        mesh4.x += 2 * worldX - 1 + 2 * radius;\r\n        mesh4.z += worldY - 1;\r\n        mesh4.rotationQuaternion.setEulerAngles(90, 90, 0);\r\n        planes.push(mesh4);\r\n\r\n        return planes;\r\n    }\r\n\r\n    getHorizontalPlanes(worldX: number, worldY: number, topSprite: string, radius: number, deep: number): Pixi3d.Mesh3D[] {\r\n        let planes: Pixi3d.Mesh3D[] = [];\r\n\r\n        let topMaterial = this.getPlaneMaterial(topSprite);\r\n\r\n        let mesh5 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh5.scale.x = worldX + 2 * radius;\r\n        mesh5.x += worldX - 1;\r\n        mesh5.y -= 2 + 2 * deep;\r\n        mesh5.z -= 2 + 2 * radius;\r\n        mesh5.rotationQuaternion.setEulerAngles(180, 0, 180);\r\n        planes.push(mesh5);\r\n\r\n        let mesh6 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), topMaterial);\r\n        mesh6.scale.x = worldX + 2 * radius;\r\n        mesh6.x += worldX - 1;\r\n        mesh6.y -= 2 + 2 * deep;\r\n        mesh6.z += 2 * worldY + 2 * radius;\r\n        mesh6.rotationQuaternion.setEulerAngles(0, 0, 0);\r\n        planes.push(mesh6);\r\n\r\n        let mesh7 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh7.scale.x = worldY + 2 * radius + 2;\r\n        mesh7.y -= 2 + 2 * deep;\r\n        mesh7.x -= 2 + 2 * radius;\r\n        mesh7.z += worldY - 1;\r\n        mesh7.rotationQuaternion.setEulerAngles(0, -90, 0);\r\n        planes.push(mesh7);\r\n\r\n        let mesh8 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh8.scale.x = worldY + 2 * radius + 2;\r\n        mesh8.y -= 2 + 2 * deep;\r\n        mesh8.x += 2 * worldX + 2 * radius;\r\n        mesh8.z += worldY - 1;\r\n        mesh8.rotationQuaternion.setEulerAngles(0, 90, 0);\r\n        planes.push(mesh8);\r\n\r\n        return planes;\r\n    }\r\n\r\n    makeClouds(container: Pixi3d.Container3D, height: number, originX: number, originZ: number) {\r\n        let count = 150;\r\n        let numberOfBatches = 20;\r\n        let todo = count;\r\n\r\n        let f = () => {\r\n            if (todo <= 0) return;\r\n            let radius = 1500;\r\n            let maxWidth = 20;\r\n            for (let i = 0; i < count / numberOfBatches; i++) {\r\n                todo--;\r\n                let distance = Math.sqrt(Math.random()) * radius;\r\n                let angle = Math.random() * 2 * Math.PI;\r\n\r\n                let x1 = Math.floor(distance * Math.cos(angle)) + originX;\r\n                let z1 = Math.floor(distance * Math.sin(angle)) + originZ;\r\n\r\n                let count = Math.random() * 10 + 2;\r\n\r\n                for (let j = 0; j < count; j++) {\r\n                    let mesh = Boxes3d.createCube3d(this.cloudMaterial);\r\n\r\n                    let scaleX = Math.floor(Math.random() * maxWidth + 2);\r\n                    let scaleY = Math.floor(Math.random() * maxWidth / 4 + 2);\r\n                    let scaleZ = Math.floor(Math.random() * maxWidth + 2);\r\n\r\n                    let dx = Math.floor(Math.random() * 3 * (5 + count + scaleX));\r\n                    let dz = Math.floor(Math.random() * 3 * (5 + count + scaleZ));\r\n\r\n                    mesh.x = x1 + dx;\r\n                    mesh.z = z1 + dz;\r\n\r\n                    mesh.y = height + scaleY / 2;\r\n\r\n                    mesh.scale.set(scaleX, scaleY, scaleZ);\r\n\r\n                    container.addChild(mesh);\r\n\r\n                }\r\n\r\n            }\r\n\r\n            setTimeout(f, 200);\r\n\r\n        }\r\n\r\n        f();\r\n\r\n    }\r\n\r\n    constructor(private worldHelper: WorldHelper, private camera: Pixi3d.Camera) {\r\n\r\n        let renderer = <PIXI.Renderer>worldHelper.app.renderer;\r\n\r\n        this.light1 = Object.assign(new Pixi3d.Light(), {\r\n            type: Pixi3d.LightType.ambient,\r\n            range: 100,\r\n            intensity: 30,\r\n            color: new Pixi3d.Color(1, 1, 1)\r\n        });\r\n        this.light1.position.set(-4, 4, 4);\r\n\r\n        this.light2 = Object.assign(new Pixi3d.Light(), {\r\n            type: Pixi3d.LightType.directional,\r\n            range: 600,\r\n            intensity: 4,\r\n            color: new Pixi3d.Color(1, 1, 1)\r\n        });\r\n        this.light2.position.set(12, 16, -12);\r\n        this.light2.rotationQuaternion.setEulerAngles(25, 45, 0);\r\n\r\n        this.lightingEnvironment = new Pixi3d.LightingEnvironment(<PIXI.Renderer>worldHelper.app.renderer);\r\n        this.lightingEnvironment.lights.push(this.light1, this.light2);\r\n\r\n\r\n        this.grassBrickMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.grassBrickMaterial);\r\n        this.grassBrickMaterial.baseColorTexture = getSpritesheetTexture(\"robot#0\");\r\n\r\n        this.cloudMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.cloudMaterial);\r\n        this.cloudMaterial.baseColor = new Pixi3d.Color(1.0, 1.0, 1.0, 0.5);\r\n\r\n        this.groundPlaneMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.groundPlaneMaterial);\r\n        this.groundPlaneMaterial.baseColorTexture = getSpritesheetTexture(\"robot#2\", true, renderer);\r\n\r\n        for (let farbe of this.farben) {\r\n            let material = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(material);\r\n            let colorInfo = this.farbeToColorInfoMap[farbe];\r\n            material.baseColor = new Pixi3d.Color(colorInfo[0], colorInfo[1], colorInfo[2], 1);\r\n            this.farbeToMarkerMaterialMap[farbe] = material;\r\n\r\n            let brickMaterial = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(brickMaterial);\r\n            let index = this.farben.indexOf(farbe) + 4;\r\n            brickMaterial.baseColorTexture = getSpritesheetTexture(\"robot#\" + index);\r\n            this.farbeToBrickMaterialMap[farbe] = brickMaterial;\r\n        }\r\n\r\n    }\r\n\r\n    initMaterial(material: Pixi3d.StandardMaterial) {\r\n        material.camera = this.camera;\r\n        material.exposure = 1;\r\n        material.roughness = 0.9;\r\n        material.lightingEnvironment = this.lightingEnvironment;\r\n    }\r\n\r\n    getPlaneMaterial(spriteKey: string): Pixi3d.StandardMaterial {\r\n        let renderer = <PIXI.Renderer>this.worldHelper.app.renderer;\r\n\r\n        if (this.planeMaterial[spriteKey] != null) return this.planeMaterial[spriteKey];\r\n\r\n        let material = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(material);\r\n        material.baseColorTexture = getSpritesheetTexture(spriteKey, true, renderer);\r\n        // material.doubleSided = true;\r\n        this.planeMaterial[spriteKey] = material;\r\n\r\n        return material;\r\n    }\r\n\r\n    makeSprite3d(textureKey: string, container: Pixi3d.Container3D){\r\n        let material = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(material);\r\n        material.baseColorTexture = getSpritesheetTexture(textureKey, false);\r\n        material.alphaMode = Pixi3d.StandardMaterialAlphaMode.mask;\r\n        let sprite = Boxes3d.createPlane3d(1, 1, material);\r\n        container.addChild(sprite);\r\n        return sprite;\r\n    }\r\n\r\n}","import { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"../FilledShape.js\";\r\nimport { WorldHelper } from \"../World.js\";\r\nimport { Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { FilledShapeDefaults } from \"../FilledShapeDefaults.js\";\r\nimport { ShapeHelper } from \"../Shape.js\";\r\nimport { Boxes3d } from \"./Boxes3d.js\";\r\nimport { RobotBrick, RobotCubeFactory, RobotMarker } from \"./RobotCubeFactory.js\";\r\n\r\nexport class RobotClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Robot\", module, \"Robot Karol\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let robotWorldType = <Klass>module.typeStore.getType(\"RobotWorld\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, 1, 1, 5, 8)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter steht anfangs an der Stelle (1/1)', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, 5, 10)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt.', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n                let worldX: number = parameters[3].value;\r\n                let worldY: number = parameters[4].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, worldX, worldY)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt. Wenn die RobotWorld noch nicht instanziert ist, wird sie mit der Größe worldX * worldY neu erstellt.', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"initialeWelt\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n                let initialeWelt: string = parameters[3].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, 0, 0, initialeWelt)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt. Wenn die RobotWorld noch nicht instanziert ist, wird sie auf Grundlage des Strings initialeWelt erstellt.', true));\r\n\r\n        this.addMethod(new Method(\"getWelt\", new Parameterlist([\r\n        ]), robotWorldType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.robotWorldHelper.runtimeObject;\r\n\r\n            }, false, false, 'Gibt das RobotWorld-Objekt zurück', false));\r\n\r\n        this.addMethod(new Method(\"rechtsDrehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.direction.turnRight();\r\n                rh.adjustAngle();\r\n\r\n            }, false, false, 'Dreht den Roboter um 90° nach rechts.', false));\r\n\r\n        this.addMethod(new Method(\"linksDrehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.direction.turnLeft();\r\n                rh.adjustAngle();\r\n\r\n            }, false, false, 'Dreht den Roboter um 90° nach links.', false));\r\n\r\n        this.addMethod(new Method(\"schritt\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.schritt();\r\n\r\n            }, false, false, 'Lässt den Roboter einen Schritt nach vorne gehen.', false));\r\n\r\n        this.addMethod(new Method(\"schritt\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.schritt()) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl Schritte nach vorne gehen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.hinlegen(\"rot\");\r\n\r\n            }, false, false, 'Lässt den Roboter einen roten Ziegel vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"markeLöschen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeLöschen();\r\n\r\n            }, false, false, 'Lässt den Roboter eine Marke, die direkt unter ihm liegt, löschen.', false));\r\n\r\n        this.addMethod(new Method(\"markeSetzen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeSetzen(\"gelb\");\r\n\r\n            }, false, false, 'Lässt den Roboter eine gelbe Marke direkt unter sich setzen.', false));\r\n\r\n        this.addMethod(new Method(\"markeSetzen\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeSetzen(farbe);\r\n\r\n            }, false, false, 'Lässt den Roboter eine Marke der angegebenen Farbe direkt unter sich setzen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.hinlegen(\"rot\")) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl rote Ziegel vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.hinlegen(farbe);\r\n\r\n            }, false, false, 'Lässt den Roboter einen Ziegel der angegebenen Farbe vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"aufheben\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.aufheben();\r\n\r\n            }, false, false, 'Lässt den Roboter einen roten Ziegel vor sich aufheben.', false));\r\n\r\n        this.addMethod(new Method(\"aufheben\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.aufheben()) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl rote Ziegel vor sich aufheben.', false));\r\n\r\n        this.addMethod(new Method(\"warten\", new Parameterlist([\r\n            { identifier: \"ZeitInMillisekunden\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n            }, false, false, \"Pausiert das Programm für die angegebene Zeit in ms.\"));\r\n\r\n        this.addMethod(new Method(\"langsam\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(5);\r\n\r\n            }, false, false, \"Setzt die Ausführungsgeschwindigkeit auf 5 Programmschritte/Sekunde.\"));\r\n\r\n        this.addMethod(new Method(\"schnell\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(\"max\");\r\n            }, false, false, \"Setzt die Ausführungsgeschwindigkeit auf 'maximal'.\"));\r\n\r\n        this.addMethod(new Method(\"beenden\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                let console = module.main.getBottomDiv()?.console;\r\n                if (console != null) {\r\n                    console.writeConsoleEntry(\"Das Programm wurde durch einen Roboter angehalten.\", null, \"#0000ff\");\r\n                    console.showTab();\r\n                }\r\n                module.main.getInterpreter().stop();\r\n            }, false, false, \"Beendet das Programm.\"));\r\n\r\n        this.addMethod(new Method(\"istWand\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istWand();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter direkt vor einer Wand steht.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstWand\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istWand();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter nicht direkt vor einer Wand steht.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter mindestens ein Ziegel liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(anzahl);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter genau Anzahl Ziegel liegen.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn auf dem Ziegelstapel direkt vor dem Roboter mindestens ein Ziegel mit der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter kein Ziegel liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(anzahl);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter nicht genau Anzahl Ziegel liegen.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn auf dem Ziegelstapel direkt vor dem Roboter kein Ziegel mit der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istMarke\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istMarke(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter eine Marke in der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istMarke\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istMarke(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter eine Marke (egal in welcher Farbe) liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstMarke\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istMarke(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter keine Marke in der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstMarke\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istMarke(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter keine Marke (egal in welcher Farbe) liegt.\"));\r\n\r\n        let himmelsrichtungen = [\"Norden\", \"Osten\", \"Süden\", \"Westen\"];\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            let hr: string = himmelsrichtungen[i];\r\n\r\n            this.addMethod(new Method(\"ist\" + hr, new Parameterlist([\r\n            ]), booleanPrimitiveType,\r\n                (parameters) => {\r\n\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                    return rh.direction.index == i;\r\n\r\n                }, false, false, \"Gibt genau dann true zurück, wenn der Roboter nach \" + hr + \" blickt.\"));\r\n        }\r\n\r\n        this.addMethod(new Method(\"istLeer\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine == 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter keinen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"istVoll\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine == rh.maxSteine;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter die maximale Anzahl von Steinen mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstLeer\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine > 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens einen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"hatZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine > 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens einen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"hatZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.hatSteine >= anzahl;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens Anzahl Steine mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstVoll\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine < rh.maxSteine;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter weniger als die maximale Anzahl von Steinen mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"setzeAnzahlSteine\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.hatSteine = anzahl;\r\n\r\n            }, false, false, \"Befüllt den Rucksack des Roboters mit genau Anzahl Steinen.\"));\r\n\r\n        this.addMethod(new Method(\"setzeRucksackgröße\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.maxSteine = anzahl;\r\n\r\n            }, false, false, \"Gibt dem Roboter einen Rucksack, der maximal Anzahl Steine fasst.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RobotWorldClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RobotWorld\", module, \"Welt für Robot Karol\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"RobotWorld\", new Parameterlist([\r\n            { identifier: \"worldX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let worldX: number = parameters[1].value;\r\n                let worldY: number = parameters[2].value;\r\n\r\n                const interpreter = module.main.getInterpreter();\r\n\r\n                let rh = new RobotWorldHelper(interpreter, o, worldX, worldY, null);\r\n                o.intrinsicData[\"RobotWorldHelper\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Robot-Welt', true));\r\n\r\n        this.addMethod(new Method(\"RobotWorld\", new Parameterlist([\r\n            { identifier: \"initialeWelt\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let initialeWelt: string = parameters[1].value;\r\n\r\n                const interpreter = module.main.getInterpreter();\r\n\r\n                let rh = new RobotWorldHelper(interpreter, o, 0, 0, initialeWelt);\r\n                o.intrinsicData[\"RobotWorldHelper\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Robot-Welt.', true));\r\n\r\n            this.addMethod(new Method(\"setzeMaximalhöhe\", new Parameterlist([\r\n                { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let anzahl: number = parameters[1].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n    \r\n                    return rh.maximumHeight = anzahl;\r\n    \r\n                }, false, false, \"Ändert die maximale Höhe der Ziegelstapel.\"));\r\n    \r\n            this.addMethod(new Method(\"setzeZiegel\", new Parameterlist([\r\n                { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let x: number = parameters[1].value;\r\n                    let y: number = parameters[2].value;\r\n                    let farbe: string = parameters[3].value;\r\n                    let anzahl: number = parameters[4].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n                    \r\n                    if(x < 1 || x > rh.worldX || y < 1 || y > rh.worldY){\r\n                        rh.interpreter.throwException(`Die Position (${x}/${y}) ist außerhalb der Weltgrenzen.`);\r\n                        return;\r\n                    }\r\n\r\n                    for(let i = 0; i < anzahl; i++){\r\n                        rh.addBrick(x-1, y-1, farbe);\r\n                    }\r\n    \r\n                }, false, false, \"Setzt Anzahl Ziegel an der angegebenen Position mit der angegebenen Farbe. Die x- und y-Koordinaten beginnen bei 1.\"));\r\n    \r\n            this.addMethod(new Method(\"setzeMarke\", new Parameterlist([\r\n                { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let x: number = parameters[1].value;\r\n                    let y: number = parameters[2].value;\r\n                    let farbe: string = parameters[3].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n\r\n                    if(x < 1 || x > rh.worldX || y < 1 || y > rh.worldY){\r\n                        rh.interpreter.throwException(`Die Position (${x}/${y}) ist außerhalb der Weltgrenzen.`);\r\n                        return;\r\n                    }\r\n\r\n                    rh.setMarker(x-1, y-1, farbe);\r\n    \r\n                }, false, false, \"Setzt einen Marker an der angegebenen Position mit der angegebenen Farbe. Die x- und y-Koordinaten beginnen bei 1.\"));\r\n    \r\n    \r\n    }\r\n\r\n}\r\n\r\nexport class RobotWorldHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n\r\n    robotCubeFactory: RobotCubeFactory;\r\n    camera: Pixi3d.Camera;\r\n    displayObject: PIXI.DisplayObject;\r\n    container3D: Pixi3d.Container3D;\r\n\r\n    markers: RobotMarker[][] = [];    // x, y\r\n    bricks: RobotBrick[][][] = [];   // x, y, height\r\n\r\n    maximumHeight: number = 15;\r\n\r\n    robots: RobotHelper[] = [];\r\n\r\n    constructor(public interpreter: Interpreter, public runtimeObject: RuntimeObject,\r\n        public worldX: number, public worldY: number, initialeWelt: string) {\r\n\r\n        this.fetchWorld(interpreter);\r\n\r\n        if (this.worldHelper.robotWorldHelper != null) {\r\n            this.interpreter.throwException(\"Es wurde bereits ein Robot-World-Objekt instanziert. Davon kann es aber nur ein einziges geben. \\nTipp: Jedes Robot-Objekt kann das Robot-World-Objekt mit der getRobotWorld() holen.\");\r\n            return;\r\n        }\r\n\r\n        this.worldHelper.robotWorldHelper = this;\r\n\r\n        this.camera = new Pixi3d.Camera(<PIXI.Renderer>this.worldHelper.app.renderer);\r\n\r\n        this.robotCubeFactory = new RobotCubeFactory(this.worldHelper, this.camera);\r\n\r\n        this.markers = [];\r\n        this.bricks = [];\r\n\r\n        this.container3D = new Pixi3d.Container3D();\r\n        this.displayObject = this.container3D;\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n\r\n        if (initialeWelt != null) {\r\n            this.initFromString(initialeWelt);\r\n        } else {\r\n            this.initWorldArrays(worldX, worldY);\r\n        }\r\n\r\n        this.renderOrnamentsAndInitCamera();\r\n\r\n    }\r\n\r\n    adjustRobotPositions(x: number, y: number){\r\n        for(let robot of this.robots){\r\n            if(robot.x == x && robot.y == y){\r\n                robot.model.y = this.getBrickCount(x, y) + 1.6;\r\n            }\r\n        }\r\n    }\r\n\r\n    initWorldArrays(worldX: number, worldY: number) {\r\n        for (let x = 0; x < worldX; x++) {\r\n            let markerColumn = [];\r\n            this.markers.push(markerColumn);\r\n            let brickColumn = [];\r\n            this.bricks.push(brickColumn);\r\n            for (let y = 0; y < worldY; y++) {\r\n                markerColumn.push(null);\r\n                brickColumn.push([]);\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchWorld(interpreter: Interpreter) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            interpreter.worldHelper = worldHelper;\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n\r\n    renderOrnamentsAndInitCamera() {\r\n        this.worldHelper.app.renderer.backgroundColor = 0x8080ff;\r\n\r\n        let gp = this.robotCubeFactory.getGrassPlane(this.worldX, this.worldY);\r\n        this.container3D.addChild(gp);\r\n\r\n        let deep: number = 0;\r\n        let radius: number = 0;\r\n        this.robotCubeFactory.getSidePlanes(this.worldX, this.worldY, \"robot#3\", radius, deep++)\r\n            .forEach(p => { this.container3D.addChild(p); });\r\n\r\n            this.robotCubeFactory.getSidePlanes(this.worldX, this.worldY, \"robot#10\", radius, deep++)\r\n                .forEach(p => { this.container3D.addChild(p); });\r\n\r\n        this.robotCubeFactory.makeClouds(this.container3D, 60, this.worldX/2, this.worldY/2);\r\n\r\n        this.robotCubeFactory.makePlane(this.container3D, this.worldX/2, -4, this.worldY/2, 3000, 3000, \r\n        new Pixi3d.Color(55.0/255, 174.0/255, 77.0/255));\r\n\r\n        let northSprite = this.robotCubeFactory.makeSprite3d(\"robot#11\", this.container3D);\r\n        // northSprite.position.set(this.worldX + 6, 1, this.worldY - 1);\r\n        northSprite.position.set(2*this.worldX + 1, -1, 2*this.worldY - 6);\r\n        northSprite.scale.set(257.0/40, 1, 1);\r\n        northSprite.rotationQuaternion.setEulerAngles(0, 90, 0);\r\n\r\n        let control = new Pixi3d.CameraOrbitControl(this.worldHelper.app.view, this.camera);\r\n        control.angles.x = 45;\r\n        control.angles.y = -20;\r\n        control.target = { x: this.worldX - 1, y: 0, z: this.worldY - 1 }\r\n        control.distance = Math.max(this.worldX, this.worldY) * 2.3;\r\n\r\n    }\r\n\r\n    addBrick(x: number, y: number, farbe: string): boolean {\r\n        let oldHeight = this.bricks[x][y].length;\r\n        if (oldHeight < this.maximumHeight) {\r\n            let brick = this.robotCubeFactory.getBrick(farbe);\r\n            this.setToXY(x, y, oldHeight, brick);\r\n            this.bricks[x][y].push(brick);\r\n            this.container3D.addChild(brick);\r\n            this.adjustMarkerHeight(x, y);\r\n            this.adjustRobotPositions(x, y);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    removeBrick(x: number, y: number): boolean {\r\n        if (this.bricks[x][y].length > 0) {\r\n            let brick = this.bricks[x][y].pop();\r\n            brick.destroy();\r\n            this.adjustMarkerHeight(x, y);\r\n            this.adjustRobotPositions(x, y);\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    getBrickCount(x: number, y: number) {\r\n        return this.bricks[x][y].length;\r\n    }\r\n\r\n    hasBrickColor(x: number, y: number, farbe: string): boolean {\r\n        for (let brick of this.bricks[x][y]) {\r\n            if (brick.farbe == farbe) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getMarkerColor(x: number, y: number): string {\r\n        let marker = this.markers[x][y];\r\n        if (marker == null) return null;\r\n        return marker.farbe;\r\n    }\r\n\r\n    setMarker(x: number, y: number, farbe: string) {\r\n        if (this.markers[x][y] != null) {\r\n            this.markers[x][y].destroy();\r\n        }\r\n        let marker = this.robotCubeFactory.getMarker(farbe);\r\n        this.markers[x][y] = marker;\r\n        this.container3D.addChild(marker);\r\n        this.setToXY(x, y, 0, marker);\r\n        this.adjustMarkerHeight(x, y);\r\n    }\r\n\r\n    removeMarker(x: number, y: number): boolean {\r\n        let marker = this.markers[x][y];\r\n        if (marker == null) {\r\n            return false;\r\n        } else {\r\n            this.markers[x][y] = null;\r\n            marker.destroy();\r\n            return true;\r\n        }\r\n    }\r\n\r\n    adjustMarkerHeight(x: number, y: number) {\r\n        let marker = this.markers[x][y];\r\n        if (marker != null) {\r\n            let height = this.bricks[x][y].length\r\n            marker.y = height + 0.1;\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        for (let x = 0; x < this.bricks.length; x++) {\r\n            for (let y = 0; y < this.bricks[x].length; y++) {\r\n                let brickList = this.bricks[x][y];\r\n                while (brickList.length > 0) {\r\n                    brickList.pop().destroy();\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let x = 0; x < this.markers.length; x++) {\r\n            for (let y = 0; y < this.markers[x].length; y++) {\r\n                let marker = this.markers[x][y];\r\n                if (marker != null) {\r\n                    this.markers[x][y] = null;\r\n                    marker.destroy();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setDimensions(worldX: number, worldY: number) {\r\n        this.clear();\r\n\r\n        this.worldX = worldX;\r\n        this.worldY = worldY;\r\n\r\n        this.markers = [];\r\n        this.bricks = [];\r\n        for (let x = 0; x < worldX; x++) {\r\n            let markerColumn = [];\r\n            this.markers.push(markerColumn);\r\n            let brickColumn = [];\r\n            this.bricks.push(brickColumn);\r\n            for (let y = 0; y < worldY; y++) {\r\n                markerColumn.push(null);\r\n                brickColumn.push([]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getNumberOfBricks(x: number, y: number) {\r\n        return this.bricks[x][y].length;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param initString \r\n     * \" \": empty \r\n     * \"_\": no brick, yellow marker\r\n     * \"Y\", \"G\", \"B\", \"R\": switch marker color\r\n     * \"y\", \"g\", \"b\", \"r\": switch brick color\r\n     * \"1\", ..., \"9\": 1, ..., 9 bricks \r\n     * \"1m\", ..., \"9m\": 1, ..., 9 bricks with markers on them\r\n     */\r\n    initFromString(initString: string) {\r\n\r\n        let lowerCaseCharToColor = { \"r\": \"rot\", \"g\": \"grün\", \"b\": \"blau\", \"y\": \"gelb\" };\r\n        let upperCaseCharToColor = { \"R\": \"rot\", \"G\": \"grün\", \"B\": \"blau\", \"Y\": \"gelb\" };\r\n        let digits = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"];\r\n\r\n        this.clear();\r\n        let rows = initString.split(\"\\n\");\r\n        let maxColumns = 0;\r\n        rows.forEach((row) => { let rowLength = this.rowLength(row); if (rowLength > maxColumns) maxColumns = rowLength });\r\n        this.initWorldArrays(maxColumns, rows.length);\r\n\r\n        this.worldX = maxColumns;\r\n        this.worldY = rows.length;\r\n\r\n        let c1: string;\r\n        let c2: string;\r\n        let brickColor = \"rot\";\r\n        let markerColor = \"gelb\";\r\n\r\n        for (let y = 0; y < rows.length; y++) {\r\n            let row = rows[y];\r\n            let x = 0;\r\n            let pos = 0;\r\n            while (pos < row.length) {\r\n                c1 = row.charAt(pos);\r\n                c2 = pos < row.length - 1 ? row.charAt(pos + 1) : null;\r\n                pos++;\r\n                if (lowerCaseCharToColor[c1] != null) {\r\n                    brickColor = lowerCaseCharToColor[c1];\r\n                    continue;\r\n                }\r\n                if (upperCaseCharToColor[c1] != null) {\r\n                    markerColor = upperCaseCharToColor[c1];\r\n                    continue;\r\n                }\r\n                let index = digits.indexOf(c1);\r\n                if (index >= 0) {\r\n                    for (let i = 0; i < index + 1; i++) {\r\n                        this.addBrick(x, y, brickColor);\r\n                    }\r\n                    if (c2 == \"m\") {\r\n                        this.setMarker(x, y, markerColor);\r\n                        pos++;\r\n                    }\r\n                    x++;\r\n                    continue;\r\n                }\r\n                if (c1 == \" \") {\r\n                    x++;\r\n                    continue;\r\n                }\r\n                if (c1 == \"_\") {\r\n                    this.setMarker(x, y, markerColor);\r\n                    x++;\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    rowLength(row: string) {\r\n        let l: number = 0;\r\n        let forwardChars = \" _1234567890\";\r\n\r\n        for (let i = 0; i < row.length; i++) {\r\n            if (forwardChars.indexOf(row.charAt(i)) >= 0) {\r\n                l++;\r\n            }\r\n        }\r\n        return l;\r\n    }\r\n\r\n    setToXY(x: number, y: number, height: number, mesh: Pixi3d.Mesh3D) {\r\n        mesh.x = 2 * (this.worldX - x - 1);\r\n        mesh.z = 2 * (this.worldY - y - 1);\r\n        mesh.y = height;\r\n    }\r\n\r\n    // Wird von WorldHelper aufgerufen\r\n    destroy() {\r\n\r\n    }\r\n\r\n    gibtFarbe(farbe: string): boolean {\r\n        return this.robotCubeFactory.farben.indexOf(farbe) >= 0;\r\n    }\r\n\r\n}\r\n\r\n\r\nclass Direction {\r\n    names: string[] = [\"top\", \"right\", \"bottom\", \"left\"];\r\n    deltas: { dx: number, dy: number }[] = [{ dx: 0, dy: -1 }, { dx: -1, dy: 0 }, { dx: 0, dy: 1 }, { dx: 1, dy: 0 }];\r\n    angles: number[] = [0, 90, 180, 270];\r\n\r\n    public index: number = 2; // top\r\n\r\n    turnRight() {\r\n        this.index = (this.index - 1 + 4) % 4;\r\n    }\r\n\r\n    turnLeft() {\r\n        this.index = (this.index + 1 + 4) % 4;\r\n    }\r\n\r\n    getAngle() {\r\n        return this.angles[this.index];\r\n    }\r\n\r\n    getDeltas() {\r\n        return this.deltas[this.index];\r\n    }\r\n\r\n}\r\n\r\nexport class RobotHelper {\r\n\r\n    robotWorldHelper: RobotWorldHelper;\r\n    model: Pixi3d.Model;\r\n    x: number;\r\n    y: number;\r\n\r\n    hatSteine: number = 10000000;\r\n    maxSteine: number = 100000000;\r\n\r\n    direction: Direction = new Direction();\r\n\r\n    constructor(private interpreter: Interpreter, private runtimeObject: RuntimeObject,\r\n        startX: number, startY: number,\r\n        worldX: number, worldY: number,\r\n        initialeWelt: string = null\r\n    ) {\r\n\r\n        this.fetchRobotWorld(interpreter, worldX, worldY, initialeWelt);\r\n        this.robotWorldHelper.robots.push(this);\r\n\r\n        this.render();\r\n\r\n        this.moveTo(startX - 1, startY - 1);\r\n        this.adjustAngle();\r\n\r\n    }\r\n\r\n    fetchRobotWorld(interpreter: Interpreter, worldX: number, worldY: number, initialeWelt: string) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        this.robotWorldHelper = worldHelper?.robotWorldHelper;\r\n\r\n        if (this.robotWorldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"RobotWorld\").type);\r\n            this.robotWorldHelper = new RobotWorldHelper(interpreter, w, worldX, worldY, initialeWelt);\r\n            w.intrinsicData[\"RobotWorldHelper\"] = this.robotWorldHelper;\r\n        }\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n        //@ts-ignore\r\n        let robot = Pixi3d.Model.from(PIXI.Loader.shared.resources[\"steve\"].gltf);\r\n        robot.scale.set(0.1);\r\n        for (let mesh of robot.meshes) {\r\n            let sm = <Pixi3d.StandardMaterial>mesh.material;\r\n            sm.camera = this.robotWorldHelper.camera;\r\n            sm.exposure = 0.5;\r\n            sm.lightingEnvironment = this.robotWorldHelper.robotCubeFactory.lightingEnvironment;\r\n        }\r\n        this.robotWorldHelper.container3D.addChild(robot);\r\n        this.model = robot;\r\n\r\n    };\r\n\r\n    crop(n: number, min: number, max: number): number {\r\n        if (n < min) n = min;\r\n        if (n > max) n = max;\r\n        return n;\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        const rw = this.robotWorldHelper;\r\n        x = this.crop(x, 0, rw.worldX - 1);\r\n        y = this.crop(y, 0, rw.worldY - 1);\r\n\r\n        this.model.x = 2 * (rw.worldX - x - 1);\r\n        this.model.z = 2 * (rw.worldY - y - 1);\r\n        this.model.y = rw.getNumberOfBricks(x, y) + 1.6;\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    adjustAngle() {\r\n        this.model.transform.rotationQuaternion.setEulerAngles(0, this.direction.getAngle(), 0);\r\n    }\r\n\r\n    schritt(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter ist gegen eine Wand geprallt!\");\r\n            return false;\r\n        }\r\n\r\n        let oldHeight = rw.getNumberOfBricks(this.x, this.y);\r\n        let newHeight = rw.getNumberOfBricks(newX, newY);\r\n\r\n        if (newHeight < oldHeight - 1) {\r\n            this.interpreter.throwException(\"Der Roboter kann maximal einen Ziegel nach unten springen.\");\r\n            return false;\r\n        }\r\n\r\n        if (newHeight > oldHeight + 1) {\r\n            this.interpreter.throwException(\"Der Roboter kann maximal einen Ziegel hoch springen.\");\r\n            return false;\r\n        }\r\n\r\n        this.moveTo(newX, newY);\r\n        return true;\r\n    }\r\n\r\n    hinlegen(farbe: string): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter steht direkt vor einer Wand. Da kann er keine Ziegel hinlegen.\");\r\n            return false;\r\n        }\r\n\r\n        farbe = farbe.toLocaleLowerCase();\r\n        if (!rw.gibtFarbe(farbe)) {\r\n            this.interpreter.throwException(\"Es gibt nur Ziegel der Farben \" + rw.robotCubeFactory.farben.join(\", \") + \". Die Farbe \" + farbe + \" ist nicht darunter.\");\r\n            return false;\r\n        }\r\n\r\n        if (this.hatSteine == 0) {\r\n            this.interpreter.throwException(\"Der Roboter hat keine Ziegel mehr bei sich und kann daher keinen mehr hinlegen.\");\r\n            return false;\r\n        }\r\n\r\n        if(rw.bricks[newX][newY].length >= rw.maximumHeight){\r\n            this.interpreter.throwException(\"Der Ziegelstapel darf die maximale Höhe \" + rw.maximumHeight + \" nicht überschreiten.\");\r\n            return false;\r\n        }\r\n\r\n        rw.addBrick(newX, newY, farbe);\r\n        this.hatSteine--;\r\n\r\n        return true;\r\n    }\r\n\r\n    aufheben(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter steht direkt vor einer Wand. Da kann er keinen Ziegel aufheben.\");\r\n            return false;\r\n        }\r\n\r\n        if (rw.getNumberOfBricks(newX, newY) < 1) {\r\n            this.interpreter.throwException(\"Vor dem Roboter liegt kein Ziegel, er kann daher keinen aufheben.\");\r\n            return false;\r\n        }\r\n\r\n        rw.removeBrick(newX, newY);\r\n\r\n        if (this.hatSteine < this.maxSteine) {\r\n            this.hatSteine++;\r\n        } else {\r\n            this.interpreter.throwException(\"Der Roboter kann nicht mehr Steine aufheben, da er keinen Platz mehr in seinem Rucksack hat.\");\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    markeSetzen(farbe: string) {\r\n        const rw = this.robotWorldHelper;\r\n        farbe = farbe.toLocaleLowerCase();\r\n\r\n        if (!rw.gibtFarbe(farbe)) {\r\n            this.interpreter.throwException(\"Es gibt nur Marken der Farben \" + rw.robotCubeFactory.farben.join(\", \") + \". Die Farbe \" + farbe + \" ist nicht darunter.\");\r\n            return false;\r\n        }\r\n\r\n        rw.setMarker(this.x, this.y, farbe);\r\n    }\r\n\r\n    markeLöschen() {\r\n        const rw = this.robotWorldHelper;\r\n\r\n        rw.removeMarker(this.x, this.y);\r\n    }\r\n\r\n    istWand(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        return (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY)\r\n\r\n    }\r\n\r\n    istZiegel(param: number | string | null): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            return false;\r\n        }\r\n\r\n        if (param == null) return rw.getBrickCount(newX, newY) > 0;\r\n\r\n        if (typeof param == \"string\") {\r\n            return rw.hasBrickColor(newX, newY, param.toLocaleLowerCase());\r\n        }\r\n\r\n        return rw.bricks[newX][newY].length == param;\r\n\r\n    }\r\n\r\n    istMarke(param: string | null): boolean {\r\n        const rw = this.robotWorldHelper;\r\n        let marke = rw.markers[this.x][this.y];\r\n        if (param == null) return marke != null;\r\n\r\n        if (typeof param == \"string\") {\r\n            return marke != null && marke.farbe == param.toLocaleLowerCase();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n","import { QueryResult } from \"../../tools/database/DatabaseTool.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, StringPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class ResultSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"ResultSet\", module, \"Ein ResultSet-Objekt speichert das Ergebnis einer Abfrage an die Datenbank.\");\r\n\r\n        let resultSetType = <Klass>module.typeStore.getType(\"ResultSet\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n \r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n                return rsh.next();\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"wasNull\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n                return rsh.wasNull;\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn der zuletzt gelesene Wert null war.',\r\n            false));\r\n\r\n        let types = [booleanPrimitiveType, intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n\r\n        for(let type of types){\r\n\r\n            let typeIdFirstUppercase = type.identifier.charAt(0).toUpperCase() + type.identifier.substring(1);\r\n\r\n            this.addMethod(new Method(\"get\"+typeIdFirstUppercase, new Parameterlist([\r\n                { identifier: \"columnIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), type,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let columnIndex: number = parameters[1].value;\r\n\r\n                    let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    let interpreter = module.main.getInterpreter();\r\n                    if(columnIndex < 1 || columnIndex > rsh.columnCount()){\r\n                        interpreter.throwException(\"Das Ergebnis hat keine Spalte \" + columnIndex + \".\");\r\n                        return;\r\n                    }\r\n\r\n                    if(rsh.isAfterLast()){\r\n                        interpreter.throwException(\"Der Cursor befindet sich hinter dem letzten Datensatz des ResultSet.\");\r\n                    }\r\n    \r\n                    return rsh.getValue(type, columnIndex);\r\n    \r\n                }, false, false, 'Gibt den Wert der Spalte mit dem angegebenen Spaltenindex als ' + type.identifier + \" zurück.\",\r\n                false));\r\n\r\n            this.addMethod(new Method(\"get\"+typeIdFirstUppercase, new Parameterlist([\r\n                { identifier: \"columnLabel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), type,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let columnLabel: string = parameters[1].value;\r\n\r\n                    let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    let interpreter = module.main.getInterpreter();\r\n\r\n\r\n                    if(rsh.isAfterLast()){\r\n                        interpreter.throwException(\"Der Cursor befindet sich hinter dem letzten Datensatz des ResultSet.\");\r\n                    }\r\n\r\n                    let columnIndex: number = rsh.getColumnIndex(columnLabel);\r\n                    if(columnIndex < 0){\r\n                        interpreter.throwException(\"Das Ergebnis hat keine Spalte mit dem Bezeichner \" + columnLabel + \".\");\r\n                        return;\r\n                    }\r\n    \r\n                    return rsh.getValue(type, columnIndex);\r\n    \r\n                }, false, false, 'Gibt den Wert der Spalte mit dem angegebenen Spaltenindex als ' + type.identifier + \" zurück.\",\r\n                false));\r\n\r\n        }\r\n\r\n\r\n        \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class ResultsetHelper {\r\n    cursor: number = -1;\r\n    wasNull: boolean = false;\r\n\r\n    constructor(private result: QueryResult){\r\n\r\n    }\r\n\r\n    getColumnIndex(columnLabel: string): number {\r\n        \r\n        columnLabel = columnLabel.toLocaleLowerCase();\r\n\r\n        let index = this.result.columns.findIndex((value, index) => {return value.toLocaleLowerCase() == columnLabel});\r\n        if(index < 0) return index;\r\n        return index + 1;\r\n    }\r\n\r\n\r\n    next(): boolean {\r\n        this.cursor++;\r\n        return this.cursor < this.result.values.length;\r\n    }\r\n\r\n    columnCount(): number {\r\n        return this.result.columns.length;\r\n    }\r\n\r\n    getValue(type: Type, columnIndex: number) {\r\n\r\n        let value = this.result.values[this.cursor][columnIndex - 1];\r\n        this.wasNull = value == null;\r\n\r\n        if(type == stringPrimitiveType){\r\n            return value == null ? null : \"\" + value;\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(value == null || !(typeof value == \"number\")){\r\n                return 0;\r\n            }\r\n            return Math.floor(value);\r\n        }\r\n\r\n        if(type == floatPrimitiveType || type == doublePrimitiveType){\r\n            if(value == null || !(typeof value == \"number\")){\r\n                return 0;\r\n            }\r\n            return value;\r\n        }\r\n\r\n        if(type == booleanPrimitiveType){\r\n            if(value == null) return false;\r\n            return (value + \"\").indexOf(\"1\") >= 0;\r\n        }\r\n\r\n    }\r\n\r\n    isAfterLast(): boolean {\r\n        return this.cursor > this.result.values.length - 1;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ConnectionHelper } from \"./Connection.js\";\r\nimport { ResultsetHelper } from \"./ResultSet.js\";\r\n\r\nexport class DatabaseStatementClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Statement\", module, \"Ein Statement-Objekt repräsentiert eine Anweisung an die Datenbank.\");\r\n\r\n\r\n        let resultSetType = <Klass>module.typeStore.getType(\"ResultSet\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n \r\n        this.addMethod(new Method(\"executeQuery\", new Parameterlist([\r\n            { identifier: \"query\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), resultSetType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let query: string = parameters[1].value;\r\n\r\n                let connectionHelper: ConnectionHelper = o.intrinsicData[\"ConnectionHelper\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                query = query.trim();\r\n                if(!query.toLocaleLowerCase().startsWith(\"select\")){\r\n                    module.main.getInterpreter().resumeAfterInput(null);\r\n                    interpreter.throwException(\"Mit der Methode executeQuery können nur select-Anweisungen ausgeführt werden. Benutze für datenverändernde Anweisungen die Methode executeUpdate.\");                    \r\n                    return null;\r\n                }\r\n\r\n                interpreter.pauseForInput();\r\n                \r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n\r\n\r\n                connectionHelper.executeQuery(query, (error, result) => {\r\n                module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if(error != null){\r\n                        module.main.getInterpreter().resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                        return;\r\n                    }\r\n                    let rsh = new ResultsetHelper(result);\r\n                    let rs = new RuntimeObject(resultSetType);\r\n                    rs.intrinsicData[\"Helper\"] = rsh;\r\n                    interpreter.resumeAfterInput({value: rs, type: resultSetType}, true);\r\n                })\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus, das eine selct-Anweisung enthält.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"executeUpdate\", new Parameterlist([\r\n            { identifier: \"query\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let query: string = parameters[1].value;\r\n\r\n                let connectionHelper: ConnectionHelper = o.intrinsicData[\"ConnectionHelper\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n\r\n                query = query.trim();\r\n                if(query.toLocaleLowerCase().startsWith(\"select\")){\r\n                    module.main.getInterpreter().resumeAfterInput(null);\r\n                    interpreter.throwException(\"Mit der Methode executeUpdate können nur datenverändernde Anweisungen ausgeführt werden. Benutze für select-Anweisungen die Methode executeQuery.\");                    \r\n                    return;\r\n                }\r\n\r\n                interpreter.pauseForInput();\r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n\r\n                connectionHelper.executeWriteStatement(query, (error) => {\r\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if(error != null){\r\n                        module.main.getInterpreter().resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                        return;\r\n                    }\r\n                    interpreter.resumeAfterInput({value: 0, type: intPrimitiveType}, true);\r\n                })\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus, das eine datenverändernde Anweisung enthält.',\r\n            false));\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","export class WorkerSim {\r\n\r\n    //@ts-ignore\r\n    initsql = initSqlJs({locateFile: (path, scriptDirectory) => \"https://embed.learn-sql.de/include/lib/sql.js/sql-wasm.wasm\"});\r\n    db;\r\n    SQL;\r\n\r\n    onmessage: (event: {data: any}) => void;\r\n\r\n    onError: (event: ErrorEvent) => void;\r\n\r\n    postMessageToClient(message: any) {\r\n        this.onmessage({data: message})\r\n    }\r\n\r\n    postMessage(data: any){\r\n        let that = this;\r\n        if (that.db == null) {\r\n            that.initsql.then((SQL1) => {\r\n                that.SQL = SQL1;\r\n                that.db = createDb(SQL1, undefined);\r\n                that.worker(data);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n                //@ts-ignore\r\n                return that.postMessageToClient({\r\n                    id: this[\"data\"][\"id\"],\r\n                    error: err[\"message\"]\r\n                });\r\n            })\r\n        } else {\r\n            that.worker(data);\r\n        }\r\n    }\r\n\r\n    terminate() {\r\n\r\n    }\r\n\r\n    worker(data: any) {\r\n        var buff; var result;\r\n        var config = data[\"config\"] ? data[\"config\"] : {};\r\n        try {\r\n            switch (data && data[\"action\"]) {\r\n                case \"open\":\r\n                    buff = data[\"buffer\"];\r\n                    this.db = createDb(this.SQL, buff && new Uint8Array(buff));\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"],\r\n                        ready: true\r\n                    });\r\n                case \"exec\":\r\n                    if (this.db === null) {\r\n                        this.db = createDb(this.SQL, undefined);\r\n                    }\r\n                    if (!data[\"sql\"]) {\r\n                        throw \"exec: Missing query string\";\r\n                    }\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"],\r\n                        results: this.db.exec(data[\"sql\"], data[\"params\"], config)\r\n                    });\r\n                case \"each\":\r\n                    if (this.db === null) {\r\n                        this.db = createDb(this.SQL, undefined);\r\n                    }\r\n                    var callback = function callback(row) {\r\n                        //@ts-ignore\r\n                        return this.postMessage({\r\n                            id: data[\"id\"],\r\n                            row: row,\r\n                            finished: false\r\n                        });\r\n                    };\r\n                    var done = function done() {\r\n                        //@ts-ignore\r\n                        return this.postMessage({\r\n                            id: data[\"id\"],\r\n                            finished: true\r\n                        });\r\n                    };\r\n                    return this.db.each(data[\"sql\"], data[\"params\"], callback, done, config);\r\n                case \"export\":\r\n                    buff = this.db[\"export\"]();\r\n                    result = {\r\n                        id: data[\"id\"],\r\n                        results: [\r\n                            {\r\n                                buffer: buff\r\n                            }\r\n                        ]\r\n                    };\r\n                    try {\r\n                        //@ts-ignore\r\n                        return this.postMessageToClient(result);\r\n                    } catch (error) {\r\n                        //@ts-ignore\r\n                        return this.postMessageToClient(result);\r\n                    }\r\n                case \"close\":\r\n                    if (this.db) {\r\n                        this.db.close();\r\n                    }\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"]\r\n                    });\r\n                default:\r\n                    throw new Error(\"Invalid action : \" + (data && data[\"action\"]));\r\n            }\r\n\r\n        } catch (err) {\r\n\r\n            //@ts-ignore\r\n            return this.postMessageToClient({\r\n                id: data[\"id\"],\r\n                error: err[\"message\"]\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { MainBase } from \"src/client/main/MainBase.js\";\r\nimport { WorkerSim } from \"./sqljsWorkerSim.js\";\r\n\r\nexport type DatabaseDumpType = \"binaryUncompressed\" | \"binaryCompressed\" | \"other\";\r\n\r\nexport type DatabaseDirectoryEntry = {\r\n    name: string,\r\n    description: string,\r\n    filename: string\r\n}\r\n\r\nexport type QueryResult = {\r\n    columns: string[],\r\n    values: any[][],\r\n    buffer?: Uint8Array\r\n}\r\n\r\nexport type QuerySuccessCallback = (results: QueryResult[]) => void;\r\nexport type QueryErrorCallback = (error: string) => void;\r\n\r\nexport type ColumnStructure = {\r\n    name: string;\r\n    table: TableStructure;\r\n\r\n    typeLengths?: number[]; // for varchar(5), ...\r\n    completeTypeSQL: string;\r\n\r\n    references?: ColumnStructure;\r\n    referencesRawData?: any[];\r\n    isPrimaryKey: boolean;\r\n    isAutoIncrement: boolean;\r\n\r\n    notNull: boolean;\r\n    defaultValue: string;\r\n\r\n    dumpValueFunction?: (any) => string\r\n}\r\n\r\nexport type TableStructure = {\r\n    name: string;\r\n    size: number;\r\n    columns: ColumnStructure[];\r\n    completeSQL: string;\r\n}\r\n\r\nexport type DatabaseStructure = {\r\n    tables: TableStructure[]\r\n}\r\n\r\n\r\nexport class DatabaseTool {\r\n\r\n    databaseDirectoryEntries: DatabaseDirectoryEntry[] = null;\r\n\r\n    worker: Worker;\r\n\r\n    queryId: number = 0;\r\n\r\n    querySuccessCallbacksMap: Map<number, QuerySuccessCallback> = new Map();\r\n    queryErrorCallbackMap: Map<number, QueryErrorCallback> = new Map();\r\n\r\n    databaseStructure: DatabaseStructure;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    initializeWorker(template: Uint8Array, queries: string[], callbackAfterInitializing?: (error: string) => void) {\r\n        \r\n        this.main.getBottomDiv().console.writeConsoleEntry('Bitte warten, die Datenbank wird initialisiert...', null);\r\n        \r\n            if (this.worker != null) {\r\n            this.worker.terminate();\r\n        }\r\n\r\n        let t = performance.now();\r\n\r\n        // console.log(\"Starting worker...\");\r\n\r\n        let url: string = \"js/tools/database/sqljsWorker.js\"\r\n        if(this.main.isEmbedded()){\r\n            //@ts-ignore\r\n            url = window.javaOnlineDir + url;\r\n        }\r\n\r\n        //@ts-ignore\r\n        if(window.jo_doc){\r\n            //@ts-ignore\r\n            this.worker = new WorkerSim();\r\n        } else {\r\n            this.worker = new Worker(url);\r\n        }\r\n        let that = this;\r\n\r\n        let error: string;\r\n\r\n        this.worker.onmessage = () => {\r\n            // console.log(\"Database opened (\" + (performance.now() - t)/1000 + \" s)\");\r\n            that.worker.onmessage = event => {\r\n\r\n                // console.log(event.data);\r\n\r\n                let id = event.data.id;\r\n                if (event.data.error == null) {\r\n                    let querySuccessCallback = that.querySuccessCallbacksMap.get(id);\r\n                    if (querySuccessCallback != null) {\r\n                        querySuccessCallback(event.data.results);\r\n                    }\r\n                } else {\r\n                    let queryErrorCallback = that.queryErrorCallbackMap.get(id);\r\n                    if (queryErrorCallback != null) {\r\n                        queryErrorCallback(event.data.error);\r\n                    }\r\n                }\r\n\r\n                // if(event.data.buffer){\r\n                //     console.log(event.data.buffer);\r\n                // }\r\n\r\n\r\n                this.queryErrorCallbackMap.delete(id);\r\n                this.querySuccessCallbacksMap.delete(id);\r\n\r\n            };\r\n\r\n            if(queries == null) queries = [];\r\n            queries = queries.slice();\r\n            let queryCount = queries.length;\r\n\r\n            let execQuery = () => {\r\n                if (queries.length > 0) {\r\n                    // this.main.getWaitOverlay().setProgress(`${Math.round((1-queries.length/queryCount)*100) + \" %\"}`)\r\n                    let query = queries.shift();\r\n                    that.executeQuery(query, (result) => {\r\n                        execQuery();\r\n                    }, (error) => {\r\n                        error = (\"Error while setting up database: \" + error + \", query: \" + query);\r\n                        console.log({\"error\": \"Error while setting up database: \" + error, \"query\": query});\r\n                        console.log()\r\n                        execQuery();\r\n                    })\r\n                } else {\r\n                    if (callbackAfterInitializing != null) callbackAfterInitializing(error);\r\n                   \r\n                }\r\n            }\r\n\r\n            execQuery();\r\n\r\n        };\r\n\r\n        this.worker.onerror = (e) => {\r\n            error = (\"Worker error: \" + e.error);\r\n            console.log(\"Worker error: \" + e.error);\r\n        }\r\n\r\n        this.worker.postMessage({\r\n            id: that.queryId++,\r\n            action: \"open\",\r\n            buffer: template, /*Optional. An ArrayBuffer representing an SQLite Database file*/\r\n        });\r\n\r\n    }\r\n\r\n    executeQuery(query: string, successCallback: QuerySuccessCallback, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, successCallback);\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"exec\",\r\n            sql: query,\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    executeWriteQueries(queries: string[], successCallback: () => void, errorCallback: QueryErrorCallback){\r\n\r\n        if(queries.length == 0){\r\n            successCallback()\r\n            return;\r\n        }\r\n\r\n        let query = queries.shift();\r\n\r\n        this.executeQuery(query, () => {\r\n            this.executeWriteQueries(queries, successCallback, errorCallback);\r\n        }, (message) => {\r\n            this.executeWriteQueries(queries, () => {}, (error) => {});\r\n            errorCallback(message); // report first error\r\n        });\r\n\r\n    }\r\n\r\n    static getDumpType(dump: Uint8Array): DatabaseDumpType {\r\n\r\n        let sqliteMagicBytes: number[] = [0x53, 0x51, 0x4c, 0x69, 0x74, 0x65];\r\n        let zlibMagicByte: number = 0x78;\r\n\r\n        let found: boolean = true;\r\n        for (let i = 0; i < sqliteMagicBytes.length; i++) {\r\n            if (sqliteMagicBytes[i] != dump[i]) {\r\n                found = false;\r\n                break;\r\n            }\r\n        }\r\n        if (found) return \"binaryUncompressed\";\r\n\r\n        if (dump[0] == zlibMagicByte) return \"binaryCompressed\";\r\n\r\n        return \"other\";\r\n\r\n    }\r\n\r\n    close(){\r\n        if(this.worker != null){\r\n            this.worker.terminate();\r\n            this.worker = null;\r\n        }\r\n    }\r\n\r\n}","import { DatabaseLongPollingListenerRequest, JMessageFromServer, JWebSocketMessageConnect, JWebSocketMessageDisconnect, JWebSocketMessageExecuteStatement, LongPollingListenerResponse, SendingStatementsMessageFromServer, WebSocketRequestConnect } from \"../../communication/Data.js\";\r\nimport { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ConnectionHelper } from \"../../runtimelibrary/database/Connection.js\";\r\n\r\nexport class DatabaseLongPollingListener {\r\n\r\n    identifier: number = Math.floor(Math.random() * 999999999);\r\n    isClosed: boolean = false;\r\n\r\n    constructor(private networkManager: NetworkManager,\r\n        private token: string,\r\n        private onServerSentStatementsCallback: (firstNewStatementIndex: number, newStatements: string[], rollbackToVersion: number) => void) {\r\n    }\r\n\r\n    longPoll() {\r\n        let that = this;\r\n\r\n        let request: DatabaseLongPollingListenerRequest = {\r\n            token: this.token,\r\n            listenerIdentifier: this.identifier\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: that.networkManager.sqlIdeURL + \"jRegisterLongPollingListener\",\r\n            success: function (resp: string) {\r\n                if (resp != null && !that.isClosed && resp != \"\") {\r\n                    let response: LongPollingListenerResponse = JSON.parse(resp);\r\n                    if (response.success) {\r\n                        that.onServerSentStatementsCallback(response.firstNewStatementIndex,\r\n                            response.newStatements, response.rollbackToVersion);\r\n                    }\r\n                }\r\n\r\n                if (!that.isClosed) {\r\n                    setTimeout(() => {\r\n                        that.longPoll();\r\n                    }, 1000);\r\n                }\r\n            },\r\n            error: function (jqXHR, message) {\r\n                if (!that.isClosed) {\r\n                    setTimeout(() => {\r\n                        that.longPoll();\r\n                    }, 3000);\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    close(){\r\n        this.isClosed = true;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ConnectionHelper } from \"./Connection.js\";\r\nimport { ResultsetHelper } from \"./ResultSet.js\";\r\n\r\n\r\nexport class DatabasePreparedStatementClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PreparedStatement\", module, \"Ein PreparedStatement-Objekt repräsentiert eine parametrisierte Anweisung an die Datenbank.\");\r\n\r\n\r\n        let resultSetType = <Klass>module.typeStore.getType(\"ResultSet\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"executeQuery\", new Parameterlist([\r\n        ]), resultSetType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let query: string = parameters[1].value;\r\n\r\n                let psh: PreparedStatementHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                if (!psh.query.toLocaleLowerCase().startsWith(\"select\")) {\r\n                    module.main.getInterpreter().resumeAfterInput(null);\r\n                    interpreter.throwException(\"Mit der Methode executeQuery können nur select-Anweisungen ausgeführt werden. Benutze für datenverändernde Anweisungen die Methode executeUpdate.\");\r\n                    return null;\r\n                }\r\n\r\n                interpreter.pauseForInput();\r\n\r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n\r\n                let error = psh.checkQuery();\r\n\r\n                if (error != null) {\r\n                    interpreter.throwException(error);\r\n                    return null;\r\n                }\r\n\r\n\r\n                psh.connectionHelper.executeQuery(psh.getQueryWithParameterValuesFilledIn(), (error, result) => {\r\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if (error != null) {\r\n                        module.main.getInterpreter().resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                        return;\r\n                    }\r\n                    let rsh = new ResultsetHelper(result);\r\n                    let rs = new RuntimeObject(resultSetType);\r\n                    rs.intrinsicData[\"Helper\"] = rsh;\r\n                    interpreter.resumeAfterInput({ value: rs, type: resultSetType }, true);\r\n                })\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus, das eine select-Anweisung enthält.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"executeUpdate\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let psh: PreparedStatementHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                if (psh.query.toLocaleLowerCase().startsWith(\"select\")) {\r\n                    module.main.getInterpreter().resumeAfterInput(null);\r\n                    interpreter.throwException(\"Mit der Methode execute können nur datenverändernde Anweisungen ausgeführt werden.\" + \r\n                    \"Benutze für select-Anweisungen die Methode executeQuery.\");\r\n                    return null;\r\n                }\r\n\r\n                interpreter.pauseForInput();\r\n\r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n\r\n                let error = psh.checkQuery();\r\n\r\n                if (error != null) {\r\n                    interpreter.resumeAfterInput(null);\r\n                    interpreter.throwException(error);\r\n                    return null;\r\n                }\r\n                \r\n                psh.connectionHelper.executeWriteStatement(psh.getQueryWithParameterValuesFilledIn(), (error) => {\r\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if (error != null) {\r\n                        module.main.getInterpreter().resumeAfterInput(null);\r\n                        interpreter.resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                        return;\r\n                    }\r\n                    interpreter.resumeAfterInput({ value: 0, type: intPrimitiveType }, true);\r\n                })\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus, das eine datenverändernde Anweisung enthält.',\r\n            false));\r\n\r\n        let types = [booleanPrimitiveType, intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n\r\n        for (let type of types) {\r\n\r\n            let typeIdFirstUppercase = type.identifier.charAt(0).toUpperCase() + type.identifier.substring(1);\r\n\r\n\r\n            this.addMethod(new Method(\"set\"+typeIdFirstUppercase, new Parameterlist([\r\n                { identifier: \"parameterIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"value\", type: type, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), voidPrimitiveType,\r\n                (parameters) => {\r\n\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let index: number = parameters[1].value;\r\n                    let value: any = parameters[2].value;\r\n                    let psh: PreparedStatementHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    let error = psh.setValue(value, index);\r\n                    if (error != null) {\r\n                        module.main.getInterpreter().resumeAfterInput(null);\r\n                        module.main.getInterpreter().throwException(error);\r\n                    }\r\n\r\n                    return;\r\n\r\n                }, false, false, 'Setzt im Parameter mit dem angegebenen Index den ' + type.identifier + '-Wert ein.'));\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PreparedStatementHelper {\r\n\r\n    parameterValues: string[];\r\n    parameterPositions: number[];\r\n    query: string;\r\n\r\n    constructor(public connectionHelper: ConnectionHelper, query: string) {\r\n        this.query = query.trim();\r\n        this.prepareStatement(this.query);\r\n    }\r\n\r\n    prepareStatement(sql: string) {\r\n\r\n        let insideQuotation: boolean = false;\r\n        this.parameterPositions = [];\r\n\r\n        for (let i = 0; i < sql.length; i++) {\r\n\r\n            let c = sql.charAt(i);\r\n            switch (c) {\r\n                case \"'\": insideQuotation = !insideQuotation;\r\n                    break;\r\n                case \"?\": if (!insideQuotation) {\r\n                    this.parameterPositions.push(i);\r\n                }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        this.parameterValues = new Array(this.parameterPositions.length);\r\n\r\n    }\r\n\r\n    setValue(value: any, position: number): string {\r\n        if (position < 1 || position > this.parameterPositions.length) {\r\n            if (this.parameterPositions.length == 0) {\r\n                return \"Es gibt keine Parameter (mit ? besetzte Stellen) in dieser Anweisung.\";\r\n            }\r\n            return \"Es gibt nur die Parameterpositionen 1 bis \" + this.parameterPositions.length + \" in der SQL-Anweisung, keine Position \" + position + \".\";\r\n        }\r\n\r\n        if(value == null){\r\n            this.parameterValues[position - 1] = \"null\";\r\n        } else\r\n        if (typeof value == \"string\") {\r\n            value = value.replace(/'/g, \"''\");\r\n            this.parameterValues[position - 1] = \"'\" + value + \"'\";\r\n        } else {\r\n            this.parameterValues[position - 1] = \"\" + value;\r\n        }\r\n        return;\r\n    }\r\n\r\n    checkQuery(): string {\r\n        return null;\r\n    }\r\n\r\n    getQueryWithParameterValuesFilledIn(): string {\r\n        let query = this.query;\r\n        let queryParts: string[] = [];\r\n        let pos = 0;\r\n\r\n        for (let i = 0; i < this.parameterPositions.length; i++) {\r\n            queryParts.push(query.substring(pos, this.parameterPositions[i]));\r\n            pos = this.parameterPositions[i] + 1;\r\n        }\r\n\r\n        if (pos < query.length) {\r\n            queryParts.push(query.substring(pos));\r\n        }\r\n\r\n        let queryWithParameterValues = \"\";\r\n        for (let i = 0; i < this.parameterPositions.length; i++) {\r\n            queryWithParameterValues += queryParts[i] + this.parameterValues[i];\r\n        }\r\n\r\n        if (queryParts.length > this.parameterPositions.length) {\r\n            queryWithParameterValues += queryParts[queryParts.length - 1];\r\n        }\r\n\r\n        return queryWithParameterValues;\r\n    }\r\n\r\n}","import { DatabaseData, SendingStatementsMessageFromServer } from \"../../communication/Data.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { DatabaseTool, QueryResult } from \"../../tools/database/DatabaseTool.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { DatabaseLongPollingListener } from \"../../tools/database/DatabaseLongPollingListener.js\";\r\nimport { stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { PreparedStatementHelper } from \"./DatabasePreparedStatement.js\";\r\n\r\nexport class ConnectionClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Connection\", module, \"Ein Connection-Objekt repräsentiert die Verbindung zu einer Datenbank auf www.sql-ide.de\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let preparedStatementType = <Klass>module.typeStore.getType(\"PreparedStatement\");\r\n        let statementType = <Klass>module.typeStore.getType(\"Statement\");\r\n\r\n        this.addMethod(new Method(\"createStatement\", new Parameterlist([\r\n        ]), statementType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ch: ConnectionHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let stmt: RuntimeObject = new RuntimeObject(statementType);\r\n                stmt.intrinsicData[\"ConnectionHelper\"] = ch;\r\n\r\n                return stmt;\r\n\r\n            }, false, false, 'Erstellt ein Statement-Objekt, mit dem Statements zur Datenbank geschickt werden können.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"prepareStatement\", new Parameterlist([\r\n            { identifier: \"query\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), preparedStatementType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let query: string = parameters[1].value;\r\n\r\n                let ch: ConnectionHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let stmt: RuntimeObject = new RuntimeObject(preparedStatementType);\r\n                stmt.intrinsicData[\"Helper\"] = new PreparedStatementHelper(ch, query);\r\n\r\n                return stmt;\r\n\r\n            }, false, false, 'Erstellt ein PreparedStatement-Objekt, mit dem Anweisungen zur Datenbank geschickt werden können.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ch: ConnectionHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                ch.close();\r\n\r\n            }, false, false, 'Schließt die Verbindung zur Datenbank.',\r\n            false));\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class ConnectionHelper {\r\n\r\n    database: DatabaseTool;\r\n    databaseData: DatabaseData;\r\n    token: string;\r\n    longPollingListener: DatabaseLongPollingListener;\r\n\r\n    constructor(private main: Main) {\r\n\r\n        main.getInterpreter().registerDatabaseConnection(this);\r\n\r\n    }\r\n\r\n    connect(code: string, callback: (error: string) => void) {\r\n        let that = this;\r\n        this.main.networkManager.fetchDatabaseAndToken(code, (dbData, token, error) => {\r\n            if (error == null) {\r\n                that.token = token;\r\n                that.databaseData = dbData;\r\n                that.database = new DatabaseTool(that.main);\r\n                that.database.initializeWorker(dbData.templateDump, dbData.statements, (error) => {\r\n\r\n                    that.longPollingListener = new DatabaseLongPollingListener(that.main.networkManager,\r\n                        that.token, (firstNewStatementIndex, newStatements, rollbackToVersion) => {\r\n                            that.onServerSentStatements(firstNewStatementIndex, newStatements, rollbackToVersion);\r\n                        })\r\n\r\n                    that.longPollingListener.longPoll();\r\n                    callback(null);\r\n                });\r\n            } else {\r\n                callback(error);\r\n            }\r\n        })\r\n    }\r\n\r\n    close() {\r\n        if (this.longPollingListener != null) {\r\n            this.longPollingListener.close();\r\n            this.longPollingListener = null;\r\n        }\r\n\r\n        if(this.database != null){\r\n            this.database.close();\r\n            this.database = null;\r\n        }\r\n\r\n    }\r\n\r\n    skipNextServerSentStatement: boolean = false;\r\n    onServerSentStatements(firstNewStatementIndex: number, newStatements: string[], rollbackToVersion: number) {\r\n\r\n        if(this.skipNextServerSentStatement){\r\n            this.skipNextServerSentStatement = false;\r\n            return;\r\n        }\r\n\r\n        if (rollbackToVersion != null) {\r\n            // Rollback\r\n            this.databaseData.statements.splice(rollbackToVersion);\r\n            this.database.initializeWorker(this.databaseData.templateDump, this.databaseData.statements);\r\n            return;\r\n        } else {\r\n            this.executeStatementsFromServer(firstNewStatementIndex, newStatements);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    executeStatementsFromServer(firstStatementIndex: number, statements: string[],\r\n        callback?: (error: string) => void) {\r\n\r\n        // connection already closed?\r\n        if (this.database == null) {\r\n            if(callback) callback(\"Keine Datenbankverbindung.\");\r\n            return;\r\n        }\r\n\r\n        let currentDBVersion = this.databaseData.statements.length;\r\n        let delta = currentDBVersion - firstStatementIndex + 1; // these statements are already there\r\n        if (delta >= statements.length) {\r\n            if(callback) callback(null);\r\n            return;\r\n        }\r\n        statements = statements.slice(delta);\r\n        this.databaseData.statements = this.databaseData.statements.concat(statements);\r\n\r\n        this.database.executeWriteQueries(statements, () => {\r\n            if (callback != null) callback(null);\r\n        }, (errorMessage) => {\r\n            if (callback != null) callback(errorMessage);\r\n        })\r\n    }\r\n\r\n    executeWriteStatement(query: string, callback: (error: string, lastRowId: number) => void, retrieveLastRowId: boolean = false) {\r\n\r\n        // connection already closed?\r\n        if (this.database == null) {\r\n            callback(\"Es besteht keine Verbindung zur Datenbank.\", 0);\r\n        }\r\n\r\n        let that = this;\r\n        let oldStatementIndex = that.databaseData.statements.length;\r\n        this.database.executeQuery(\"explain \" + query, () => {\r\n\r\n            that.skipNextServerSentStatement = true;\r\n            that.main.networkManager.addDatabaseStatement(that.token, oldStatementIndex,\r\n                [query], (statementsBefore, new_version, errorMessage) => {\r\n                    if (errorMessage != null) {\r\n                        callback(errorMessage, 0);\r\n                        return;\r\n                    }\r\n\r\n                    that.executeStatementsFromServer(oldStatementIndex + 1, statementsBefore, (error: string) => {\r\n\r\n                        that.database.executeWriteQueries([query], () => {\r\n                            that.databaseData.statements.push(query);\r\n                            if (!retrieveLastRowId) {\r\n                                callback(null, 0);\r\n                                return;\r\n                            }\r\n                            that.executeQuery(\"select last_insert_rowid()\", (error, data) => {\r\n                                callback(null, data.values[0][0]);\r\n                            })\r\n                        }, (errorMessage) => {\r\n                            that.databaseData.statements.push(query);\r\n                            if (callback != null) callback(errorMessage, 0);\r\n                            // try rollback so that server doesn't store this statement\r\n                            that.main.networkManager.rollbackDatabaseStatement(that.token, that.databaseData.statements.length, () => {})\r\n                        })\r\n                \r\n\r\n                    });\r\n\r\n                })\r\n\r\n        }, (error) => {\r\n            callback(error, 0);\r\n        })\r\n\r\n    }\r\n\r\n    executeQuery(query: string, callback: (error: string, data: QueryResult) => void) {\r\n\r\n        if (this.database == null || this.longPollingListener == null) {\r\n            callback(\"Es besteht keine Verbindung zur Datenbank.\", null);\r\n            return;\r\n        }\r\n\r\n        this.database.executeQuery(query, (results: QueryResult[]) => {\r\n            callback(null, results[0]);\r\n        }, (error: string) => {\r\n            callback(error, null);\r\n        })\r\n\r\n    }\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ConnectionHelper } from \"./Connection.js\";\r\n\r\nexport class DatabaseManagerClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DatabaseManager\", module, \"Über die statische Methode DatabaseManager.getConnection(String code) kann die Verbindung zu einer Datenbank auf www.sql-ide.de aufgebaut werden.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let connectionType = <Klass>module.typeStore.getType(\"Connection\");\r\n \r\n        this.addMethod(new Method(\"getConnection\", new Parameterlist([\r\n            { identifier: \"code\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), connectionType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let code: string = parameters[1].value;\r\n\r\n                let main = module.main;\r\n                let interpreter = module.main.getInterpreter();\r\n                if(main.isEmbedded()){\r\n                    interpreter.throwException(\"Verbindung zu einer Datenbank kann nur von www.online-ide.de aus aufgebaut werden.\");\r\n                    return null;\r\n                }\r\n\r\n                let ch: ConnectionHelper = new ConnectionHelper(<Main>module.main);\r\n                interpreter.pauseForInput();\r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n                ch.connect(code, (error: string) => {\r\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if(error == null){\r\n                        let connectionRuntimeObject = new RuntimeObject(connectionType);\r\n                        connectionRuntimeObject.intrinsicData[\"Helper\"] = ch;\r\n                        interpreter.resumeAfterInput({value: connectionRuntimeObject, type: connectionType}, true);\r\n                    } else {\r\n                        interpreter.resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                    }\r\n                })\r\n\r\n                return;\r\n\r\n            }, false, true, 'Baut eine Verbindung mit einer Datenbank auf www.sql-ide.de auf. Gibt ein Connection-Objekt zurück, das diese Verbindung repräsentiert.',\r\n            false));\r\n\r\n    }\r\n\r\n}","import { FileData, WorkspaceSettings } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { ArrayListClass } from \"../../runtimelibrary/collections/ArrayList.js\";\r\nimport { CollectionClass } from \"../../runtimelibrary/collections/Collection.js\";\r\nimport { IterableClass } from \"../../runtimelibrary/collections/Iterable.js\";\r\nimport { IteratorClass } from \"../../runtimelibrary/collections/Iterator.js\";\r\nimport { ListClass } from \"../../runtimelibrary/collections/List.js\";\r\nimport { ListIteratorImplClass } from \"../../runtimelibrary/collections/ListIteratorImpl.js\";\r\nimport { StackClass } from \"../../runtimelibrary/collections/Stack.js\";\r\nimport { VectorClass } from \"../../runtimelibrary/collections/Vector.js\";\r\nimport { SetClass } from \"../../runtimelibrary/collections/Set.js\";\r\nimport { SetIteratorImplClass } from \"../../runtimelibrary/collections/SetIteratorImpl.js\";\r\nimport { HashSetClass } from \"../../runtimelibrary/collections/HashSet.js\";\r\nimport { LinkedHashSetClass } from \"../../runtimelibrary/collections/LinkedHashSet.js\";\r\nimport { QueueClass } from \"../../runtimelibrary/collections/Queue.js\";\r\nimport { DequeClass } from \"../../runtimelibrary/collections/Deque.js\";\r\nimport { LinkedListClass } from \"../../runtimelibrary/collections/LinkedList.js\";\r\nimport { ConsoleClass } from \"../../runtimelibrary/Console.js\";\r\nimport { Actor as ActorClass } from \"../../runtimelibrary/graphics/Actor.js\";\r\nimport { AlignmentClass } from \"../../runtimelibrary/graphics/Alignment.js\";\r\nimport { BitmapClass } from \"../../runtimelibrary/graphics/Bitmap.js\";\r\nimport { CircleClass as CircleClass } from \"../../runtimelibrary/graphics/Circle.js\";\r\nimport { SectorClass } from \"../../runtimelibrary/graphics/Sector.js\";\r\nimport { ArcClass } from \"../../runtimelibrary/graphics/Arc.js\";\r\nimport { ColorClass } from \"../../runtimelibrary/graphics/Color.js\";\r\nimport { EllipseClass } from \"../../runtimelibrary/graphics/Ellipse.js\";\r\nimport { FilledShapeClass } from \"../../runtimelibrary/graphics/FilledShape.js\";\r\nimport { CollisionPairClass, GroupClass } from \"../../runtimelibrary/graphics/Group.js\";\r\nimport { KeyClass } from \"../../runtimelibrary/graphics/Key.js\";\r\nimport { PolygonClass } from \"../../runtimelibrary/graphics/Polygon.js\";\r\nimport { RectangleClass } from \"../../runtimelibrary/graphics/Rectangle.js\";\r\nimport { RepeatTypeClass } from \"../../runtimelibrary/graphics/RepeatType.js\";\r\nimport { RoundedRectangleClass } from \"../../runtimelibrary/graphics/RoundedRectangle.js\";\r\nimport { ScaleModeClass } from \"../../runtimelibrary/graphics/ScaleMode.js\";\r\nimport { ShapeClass } from \"../../runtimelibrary/graphics/Shape.js\";\r\nimport { SoundKlass as SoundClass } from \"../../runtimelibrary/graphics/Sound.js\";\r\nimport { SpriteClass, TileClass } from \"../../runtimelibrary/graphics/Sprite.js\";\r\nimport { SpriteLibraryClass } from \"../../runtimelibrary/graphics/SpriteLibraryEnum.js\";\r\nimport { TextClass } from \"../../runtimelibrary/graphics/Text.js\";\r\nimport { WorldClass } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\nimport { GamepadClass } from \"../../runtimelibrary/Gamepad.js\";\r\nimport { MathClass } from \"../../runtimelibrary/Math.js\";\r\nimport { MathToolsClass } from \"../../runtimelibrary/MathToolsClass.js\";\r\nimport { PrintStreamClass, SystemClass } from \"../../runtimelibrary/System.js\";\r\nimport { KeyListener, SystemToolsClass } from \"../../runtimelibrary/SystemTools.js\";\r\nimport { Runnable, TimerClass } from \"../../runtimelibrary/Timer.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { Interface, Klass, Visibility } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, BooleanType, CharacterType, charPrimitiveType, doublePrimitiveType, DoubleType, floatPrimitiveType, FloatType, IntegerType, intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType, varType, longPrimitiveType, LongType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, PrimitiveType, Type, Variable } from \"../types/Types.js\";\r\nimport { ASTNode, MethodDeclarationNode, TypeNode } from \"./AST.js\";\r\nimport { Breakpoint, Program, Statement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { MapClass } from \"../../runtimelibrary/collections/Map.js\";\r\nimport { HashMapClass } from \"../../runtimelibrary/collections/HashMap.js\";\r\nimport { TriangleClass } from \"../../runtimelibrary/graphics/Triangle.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { LocalDateTimeClass, DayOfWeekEnum, MonthEnum } from \"../../runtimelibrary/graphics/LocalDateTime.js\";\r\nimport { LineClass } from \"../../runtimelibrary/graphics/Line.js\";\r\nimport { Vector2Class } from \"../../runtimelibrary/Vector2.js\";\r\nimport { MouseAdapterClass, MouseListenerInterface } from \"../../runtimelibrary/graphics/MouseListener.js\";\r\nimport { WebSocketClass } from \"../../runtimelibrary/network/WebSocket.js\";\r\nimport { WebSocketClientClass } from \"../../runtimelibrary/network/WebSocketClient.js\";\r\nimport { ProcessingClass } from \"../../runtimelibrary/graphics/Processing.js\";\r\nimport { TurtleClass } from \"../../runtimelibrary/graphics/Turtle.js\";\r\nimport { GNGZeichenfensterClass } from \"../../runtimelibrary/gng/GNGZeichenfenster.js\";\r\nimport { GNGRechteckClass } from \"../../runtimelibrary/gng/GNGRechteck.js\";\r\nimport { GNGBaseFigurClass } from \"../../runtimelibrary/gng/GNGBaseFigur.js\";\r\nimport { GNGAktionsempfaengerInterface } from \"../../runtimelibrary/gng/GNGAktionsempfaenger.js\";\r\nimport { GNGDreieckClass } from \"../../runtimelibrary/gng/GNGDreieck.js\";\r\nimport { GNGKreisClass } from \"../../runtimelibrary/gng/GNGKreis.js\";\r\nimport { GNGTurtleClass } from \"../../runtimelibrary/gng/GNGTurtle.js\";\r\nimport { GNGTextClass } from \"../../runtimelibrary/gng/GNGText.js\";\r\nimport { GNGEreignisbehandlung } from \"../../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GNGFigurClass } from \"../../runtimelibrary/gng/GNGFigur.js\";\r\nimport { RandomClass } from \"../../runtimelibrary/Random.js\";\r\nimport { DirectionClass } from \"../../runtimelibrary/graphics/Direction.js\";\r\nimport { Patcher } from \"./Patcher.js\";\r\nimport { KeyEvent as KeyEventClass } from \"../../runtimelibrary/graphics/KeyEvent.js\";\r\nimport { Formatter } from \"../../main/gui/Formatter.js\";\r\nimport { RobotClass, RobotWorldClass } from \"../../runtimelibrary/graphics/3d/Robot.js\";\r\nimport { ResultSetClass } from \"../../runtimelibrary/database/ResultSet.js\";\r\nimport { DatabaseStatementClass } from \"../../runtimelibrary/database/DatabaseStatement.js\";\r\nimport { ConnectionClass } from \"../../runtimelibrary/database/Connection.js\";\r\nimport { DatabaseManagerClass } from \"../../runtimelibrary/database/DatabaseManager.js\";\r\nimport { DatabasePreparedStatementClass } from \"../../runtimelibrary/database/DatabasePreparedStatement.js\";\r\n\r\nexport type ExportedWorkspace = {\r\n    name: string;\r\n    modules: ExportedModule[];\r\n    settings: WorkspaceSettings;\r\n}\r\n\r\nexport type ExportedModule = {\r\n    name: string;\r\n    text: string;\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: Type | Method | Attribute | Variable;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: Method[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    isSystemModule: boolean = false;\r\n\r\n    breakpoints: Breakpoint[] = [];\r\n    breakpointDecorators: string[] = [];\r\n    decoratorIdToBreakpointMap: { [id: string]: Breakpoint } = {};\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    colorInformation: monaco.languages.IColorInformation[] = [];\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    mainProgramAst: ASTNode[];\r\n    classDefinitionsAST: ASTNode[];\r\n    typeNodes: TypeNode[];\r\n\r\n    // 3rd pass: TypeResolver fill in resolvedType in typeNodes and populate typeStore\r\n    typeStore: TypeStore;\r\n\r\n    // 4th pass: generate code and symbol tables\r\n\r\n    /*\r\n    The mainProgramAST holds statements to:\r\n    1. call static constructor of each used class\r\n    2. execute main Program\r\n    */\r\n\r\n    mainProgram?: Program;\r\n    mainProgramEnd: TextPosition;\r\n    mainSymbolTable: SymbolTable;\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    dependsOnModules: Map<Module, boolean>;\r\n    isStartable: boolean;\r\n    dependsOnModulesWithErrors: boolean;\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"myJava\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3, bracketColorizationOptions: {enabled: true} });\r\n        let formatter = new Formatter();\r\n\r\n        if(main.isEmbedded() && file.text != null && file.text.length > 3){\r\n            let edits = <monaco.languages.TextEdit[]>formatter.format(this.model);\r\n            this.model.applyEdits(edits);\r\n        }\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.file.identical_to_repository_version = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if(main1.workspacesOwnerId != main1.user.id){\r\n                    if(that.file.text_before_revision == null || that.file.student_edited_after_revision){\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    toExportedModule(): ExportedModule {\r\n        return {\r\n            name: this.file.name,\r\n            text: this.getProgramTextFromMonacoModel(),\r\n            identical_to_repository_version: this.file.identical_to_repository_version,\r\n            is_copy_of_id: this.file.is_copy_of_id,\r\n            repository_file_version: this.file.repository_file_version\r\n        }\r\n    }\r\n\r\n    getMethodDeclarationAtPosition(position: { lineNumber: number; column: number; }): MethodDeclarationNode {\r\n\r\n        if(this.classDefinitionsAST == null) return null;\r\n        \r\n        for(let cd of this.classDefinitionsAST){\r\n            if(cd.type == TokenType.keywordClass || cd.type == TokenType.keywordEnum){\r\n                for(let methodAST of cd.methods){\r\n                    if(methodAST.position != null && methodAST.scopeTo != null){\r\n                        if(methodAST.position.line <= position.lineNumber && methodAST.scopeTo.line >= position.lineNumber){\r\n                            return methodAST;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    \r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let patched = Patcher.patch(f.text);\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: patched.patchedText,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: !patched.modified,\r\n            version: f.version,\r\n            id: f.id,\r\n            is_copy_of_id: f.is_copy_of_id,\r\n            repository_file_version: f.repository_file_version,\r\n            identical_to_repository_version: f.identical_to_repository_version\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            is_copy_of_id: file.is_copy_of_id,\r\n            repository_file_version: file.repository_file_version,\r\n            identical_to_repository_version: file.identical_to_repository_version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 0\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n    pushMethodCallPosition(identifierPosition: TextPosition, commaPositions: TextPosition[],\r\n        possibleMethods: Method[] | string, rightBracketPosition: TextPosition) {\r\n\r\n        let lines: number[] = [];\r\n        lines.push(identifierPosition.line);\r\n        for (let cp of commaPositions) {\r\n            if (lines.indexOf[cp.line] < 0) {\r\n                lines.push(cp.line);\r\n            }\r\n        }\r\n\r\n        let mcp: MethodCallPosition = {\r\n            identifierPosition: identifierPosition,\r\n            commaPositions: commaPositions,\r\n            possibleMethods: possibleMethods,\r\n            rightBracketPosition: rightBracketPosition\r\n        };\r\n\r\n        for (let line of lines) {\r\n            let mcpList = this.methodCallPositions[line];\r\n            if (mcpList == null) {\r\n                this.methodCallPositions[line] = [];\r\n                mcpList = this.methodCallPositions[line];\r\n            }\r\n            mcpList.push(mcp);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    toggleBreakpoint(lineNumber: number, rerender: boolean) {\r\n        this.getBreakpointPositionsFromEditor();\r\n        if (this.getBreakpoint(lineNumber, true) == null) {\r\n            this.setBreakpoint(lineNumber, 1);\r\n        }\r\n        if (rerender) {\r\n            this.renderBreakpointDecorators();\r\n        }\r\n    }\r\n\r\n    getBreakpoint(line: number, remove: boolean = false): Breakpoint {\r\n\r\n        for (let i = 0; i < this.breakpoints.length; i++) {\r\n            let b = this.breakpoints[i];\r\n            if (b.line == line) {\r\n                this.breakpoints.splice(i, 1);\r\n                if (b.statement != null) {\r\n                    b.statement.breakpoint = undefined;\r\n                }\r\n                return b;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    setBreakpoint(line: number, column: number): Breakpoint {\r\n\r\n        let breakpoint: Breakpoint = {\r\n            line: line,\r\n            column: column,\r\n            statement: null\r\n        }\r\n\r\n        this.attachToStatement(breakpoint);\r\n        this.breakpoints.push(breakpoint);\r\n\r\n        return breakpoint;\r\n\r\n    }\r\n\r\n    attachToStatement(breakpoint: Breakpoint, programList?: Program[]) {\r\n\r\n        if (breakpoint.statement != null) {\r\n            breakpoint.statement.breakpoint = undefined;\r\n        }\r\n\r\n        if (programList == null) programList = this.getPrograms();\r\n\r\n        let nearestStatement: Statement = null;\r\n        let nearestDistance: number = 100000;\r\n\r\n        for (let program of programList) {\r\n            for (let statement of program.statements) {\r\n\r\n                let line = statement?.position?.line;\r\n                if (line != null && line >= breakpoint.line) {\r\n                    if (line - breakpoint.line < nearestDistance) {\r\n                        nearestStatement = statement;\r\n                        nearestDistance = line - breakpoint.line;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        breakpoint.statement = nearestStatement;\r\n        if (nearestStatement != null) {\r\n            nearestStatement.breakpoint = breakpoint;\r\n            // let pp = new ProgramPrinter();\r\n            // console.log(\"Attached Breakpoint line \" + breakpoint.line + \", column \" + \r\n            //     breakpoint.column + \" to statement \" + pp.print([nearestStatement]));\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    getPrograms(): Program[] {\r\n        let programList: Program[] = [];\r\n\r\n        if (this.mainProgram != null) {\r\n            programList.push(this.mainProgram);\r\n        }\r\n\r\n        if (this.typeStore != null) {\r\n\r\n            for (let type of this.typeStore.typeList) {\r\n                if (type instanceof Klass) {\r\n                    if (type.attributeInitializationProgram != null) {\r\n                        programList.push(type.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                    if (type.staticClass.attributeInitializationProgram != null) {\r\n                        programList.push(type.staticClass.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.staticClass.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return programList;\r\n\r\n    }\r\n\r\n    renderBreakpointDecorators() {\r\n\r\n        this.getBreakpointPositionsFromEditor();\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        for (let breakpoint of this.breakpoints) {\r\n            decorations.push({\r\n                range: { startLineNumber: breakpoint.line, endLineNumber: breakpoint.line, startColumn: 1, endColumn: 1 },\r\n                options: {\r\n                    isWholeLine: true, className: \"jo_decorate_breakpoint\",\r\n                    overviewRuler: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.OverviewRulerLane.Left\r\n                    },\r\n                    minimap: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.MinimapPosition.Inline\r\n                    },\r\n                    marginClassName: \"jo_margin_breakpoint\",\r\n                    stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\r\n                },\r\n                //@ts-ignore\r\n                breakpoint: breakpoint\r\n            });\r\n        }\r\n\r\n        this.breakpointDecorators = this.main.getMonacoEditor().deltaDecorations(this.breakpointDecorators, decorations);\r\n\r\n        this.decoratorIdToBreakpointMap = {};\r\n        for (let i = 0; i < this.breakpointDecorators.length; i++) {\r\n            this.decoratorIdToBreakpointMap[this.breakpointDecorators[i]] = this.breakpoints[i];\r\n        }\r\n\r\n    }\r\n\r\n    getBreakpointPositionsFromEditor() {\r\n        for (let decoration of this.main.getMonacoEditor().getModel().getAllDecorations()) {\r\n            if (decoration.options.marginClassName == \"margin_breakpoint\") {\r\n                let breakpoint = this.decoratorIdToBreakpointMap[decoration.id];\r\n                if (breakpoint != null) {\r\n                    breakpoint.line = decoration.range.startLineNumber;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    hasMainProgram() {\r\n\r\n        if (this.mainProgram == null) return false;\r\n        if (this.mainProgram.statements == null) return false;\r\n        return this.mainProgram.statements.length > 2 || this.mainProgram.statements.length == 2 && this.mainProgram.statements[0].type == TokenType.callMainMethod;\r\n\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n\r\n    getTypeAtPosition(line: number, column: number): { type: Type, isStatic: boolean } {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let foundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n                foundPosition = p;\r\n                let element = foundPosition.element;\r\n                if (element instanceof Method) {\r\n                    return { type: element, isStatic: false };\r\n                }\r\n                // Attribute, Variable\r\n                let type: Type = (element instanceof Type) ? element : element.type;\r\n                //@ts-ignore\r\n                if (foundPosition.position.length > 0 && element.type != null) {\r\n                    //@ts-ignore\r\n                    return { type: <Type>type, isStatic: false };\r\n                }\r\n\r\n                return { type: type, isStatic: foundPosition.position.length > 0 };\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): Klass | Interface | Method | Attribute | Variable {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    } else {\r\n                        if(p.element instanceof Method && bestFoundPosition.element instanceof Klass){\r\n                            bestFoundPosition = p;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainProgram = this.mainProgram;\r\n        this.mainProgram = null;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n        m.typeStore = this.typeStore;\r\n        // this.typeStore = null;\r\n        m.isStartable = this.isStartable;\r\n        m.dependsOnModulesWithErrors = this.dependsOnModulesWithErrors;\r\n\r\n        m.breakpoints = this.breakpoints;\r\n        this.breakpoints = [];\r\n        let programs = m.getPrograms();\r\n\r\n        programs.forEach((p) => p.module = m);\r\n\r\n        for (let b of m.breakpoints) {\r\n            this.breakpoints.push({\r\n                line: b.line,\r\n                column: b.column,\r\n                statement: null\r\n            });\r\n\r\n            m.attachToStatement(b, programs);\r\n\r\n        }\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n        this.typeNodes = [];\r\n        this.typeStore = new TypeStore();\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n        this.mainProgram = null;\r\n\r\n        this.methodCallPositions = {};\r\n        this.dependsOnModules = new Map();\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if(el.find(error => error.level == \"error\")){\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if(this.errorLevelCompare(e1.level, e2.level) == 1){\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if(level1 == \"error\") return 1;\r\n        if(level2 == \"error\") return 2;\r\n        if(level1 == \"warning\") return 1;\r\n        if(level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n\r\n    renderStartButton() {\r\n        let $buttonDiv = this.file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonStart');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_startButton').remove();\r\n\r\n        if (this.isStartable) {\r\n            let $startButtonDiv = jQuery('<div class=\"jo_startButton img_start-dark jo_button jo_active\" title=\"Hauptprogramm in der Datei starten\"></div>');\r\n            $buttonDiv.append($startButtonDiv);\r\n            let that = this;\r\n            $startButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n            $startButtonDiv.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.main.setModuleActive(that);\r\n\r\n                that.main.getInterpreter().start();\r\n            });\r\n\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BaseModule extends Module {\r\n    constructor(main: MainBase) {\r\n\r\n        super({ name: \"Base Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n\r\n        this.typeStore.addType(voidPrimitiveType);\r\n        this.typeStore.addType(intPrimitiveType); \r\n        this.typeStore.addType(longPrimitiveType); \r\n        this.typeStore.addType(floatPrimitiveType);\r\n        this.typeStore.addType(doublePrimitiveType);\r\n        this.typeStore.addType(charPrimitiveType);\r\n        this.typeStore.addType(booleanPrimitiveType);\r\n        this.typeStore.addType(stringPrimitiveType);\r\n        this.typeStore.addType(objectType);\r\n        this.typeStore.addType(varType);\r\n\r\n        this.typeStore.addType(IntegerType);\r\n        this.typeStore.addType(LongType);\r\n        this.typeStore.addType(FloatType);\r\n        this.typeStore.addType(DoubleType);\r\n        this.typeStore.addType(CharacterType);\r\n        this.typeStore.addType(BooleanType);\r\n\r\n        // Collections Framework\r\n        this.typeStore.addType(new IteratorClass(this));\r\n        this.typeStore.addType(new IterableClass(this));\r\n        this.typeStore.addType(new CollectionClass(this));\r\n        this.typeStore.addType(new ListClass(this));\r\n        this.typeStore.addType(new ArrayListClass(this));\r\n        this.typeStore.addType(new VectorClass(this));\r\n        this.typeStore.addType(new QueueClass(this));\r\n        this.typeStore.addType(new DequeClass(this));\r\n        this.typeStore.addType(new LinkedListClass(this));\r\n        this.typeStore.addType(new StackClass(this));\r\n        this.typeStore.addType(new ListIteratorImplClass(this));\r\n        this.typeStore.addType(new SetClass(this));\r\n        this.typeStore.addType(new HashSetClass(this));\r\n        this.typeStore.addType(new LinkedHashSetClass(this));\r\n        this.typeStore.addType(new SetIteratorImplClass(this));\r\n        this.typeStore.addType(new MapClass(this));\r\n        this.typeStore.addType(new HashMapClass(this));\r\n\r\n        this.typeStore.addType(new ConsoleClass(this));\r\n        this.typeStore.addType(new MathClass(this));\r\n        this.typeStore.addType(new RandomClass(this));\r\n        this.typeStore.addType(new Vector2Class(this));\r\n        this.typeStore.addType(new MathToolsClass(this));\r\n        this.typeStore.addType(new KeyClass(this));\r\n        this.typeStore.addType(new SoundClass(this));\r\n        this.typeStore.addType(new InputClass(this));\r\n        this.typeStore.addType(new Runnable(this));\r\n        this.typeStore.addType(new TimerClass(this));\r\n        this.typeStore.addType(new ColorClass(this));\r\n        this.typeStore.addType(new ActorClass(this));\r\n        this.typeStore.addType(new DirectionClass(this));\r\n        this.typeStore.addType(new ShapeClass(this));\r\n        this.typeStore.addType(new FilledShapeClass(this));\r\n        this.typeStore.addType(new RectangleClass(this));\r\n        this.typeStore.addType(new RoundedRectangleClass(this));\r\n        this.typeStore.addType(new CircleClass(this));\r\n        this.typeStore.addType(new SectorClass(this));\r\n        this.typeStore.addType(new ArcClass(this));\r\n        this.typeStore.addType(new EllipseClass(this));\r\n        this.typeStore.addType(new BitmapClass(this));\r\n        this.typeStore.addType(new AlignmentClass(this));\r\n        this.typeStore.addType(new TextClass(this));\r\n        this.typeStore.addType(new ScaleModeClass(this));\r\n        this.typeStore.addType(new SpriteLibraryClass(this));\r\n        this.typeStore.addType(new RepeatTypeClass(this));\r\n        this.typeStore.addType(new TileClass(this));\r\n        this.typeStore.addType(new SpriteClass(this));\r\n        this.typeStore.addType(new CollisionPairClass(this));\r\n        this.typeStore.addType(new GroupClass(this));\r\n        this.typeStore.addType(new PolygonClass(this));\r\n        this.typeStore.addType(new LineClass(this));\r\n        this.typeStore.addType(new TriangleClass(this));\r\n        this.typeStore.addType(new TurtleClass(this));\r\n\r\n        this.typeStore.addType(new MouseListenerInterface(this));\r\n        this.typeStore.addType(new MouseAdapterClass(this));\r\n        this.typeStore.addType(new GamepadClass(this));\r\n        this.typeStore.addType(new WorldClass(this));\r\n        this.typeStore.addType(new ProcessingClass(this));\r\n\r\n        (<ActorClass>this.typeStore.getType(\"Actor\")).registerWorldType();\r\n\r\n\r\n        this.typeStore.addType(new PrintStreamClass(this));\r\n        this.typeStore.addType(new KeyListener(this));\r\n        this.typeStore.addType(new SystemClass(this));\r\n        this.typeStore.addType(new SystemToolsClass(this));\r\n        this.typeStore.addType(new DayOfWeekEnum(this));\r\n        this.typeStore.addType(new MonthEnum(this));\r\n        this.typeStore.addType(new LocalDateTimeClass(this));\r\n    \r\n        this.typeStore.addType(new WebSocketClientClass(this));\r\n        this.typeStore.addType(new WebSocketClass(this));\r\n\r\n        this.typeStore.addType(new RobotWorldClass(this));\r\n        this.typeStore.addType(new RobotClass(this));\r\n\r\n        this.typeStore.addType(new ResultSetClass(this));\r\n        this.typeStore.addType(new DatabaseStatementClass(this));\r\n        this.typeStore.addType(new DatabasePreparedStatementClass(this));\r\n        this.typeStore.addType(new ConnectionClass(this));\r\n        this.typeStore.addType(new DatabaseManagerClass(this));\r\n\r\n    \r\n\r\n        stringPrimitiveType.module = this;\r\n        // stringPrimitiveType.baseClass = <any>(this.typeStore.getType(\"Object\"));\r\n        // stringPrimitiveType.baseClass = objectType;\r\n        // IntegerType.baseClass = objectType;\r\n        // DoubleType.baseClass = objectType;\r\n        // FloatType.baseClass = objectType;\r\n        // CharacterType.baseClass = objectType;\r\n        // BooleanType.baseClass = objectType;\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class GNGModule extends Module {\r\n    constructor(main: MainBase, moduleStore: ModuleStore) {\r\n\r\n        super({ name: \"Graphics and Games - Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n        this.typeStore.addType(new GNGAktionsempfaengerInterface(this));\r\n        this.typeStore.addType(new GNGBaseFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGZeichenfensterClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGEreignisbehandlung(this, moduleStore));\r\n        this.typeStore.addType(new GNGRechteckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGDreieckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGKreisClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTextClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTurtleClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new KeyEventClass(this, moduleStore));\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: {[name: string]: Module} = {};\r\n    private baseModule: BaseModule;\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase, withBaseModule: boolean, private additionalLibraries: string[] = []) {\r\n        if (withBaseModule) {\r\n            this.baseModule = new BaseModule(main);\r\n            this.putModule(this.baseModule);\r\n        }\r\n        \r\n        // additionalLibraries = [\"gng\"];\r\n\r\n        for(let lib of additionalLibraries){\r\n            this.addLibraryModule(lib);\r\n        }\r\n    }\r\n\r\n    addLibraryModule(identifier: string){\r\n        switch(identifier){\r\n            case \"gng\": this.putModule(new GNGModule(this.main, this));\r\n            break;\r\n        }\r\n    }\r\n\r\n    setAdditionalLibraries(additionalLibraries: string[]){\r\n\r\n        this.modules = this.modules.filter( m => (!m.isSystemModule) || m instanceof BaseModule);\r\n        this.moduleMap = {};\r\n\r\n        for(let m of this.modules){\r\n            this.moduleMap[m.file.name] =  m;\r\n        }\r\n\r\n        if(additionalLibraries != null){\r\n            for(let lib of additionalLibraries){\r\n                this.addLibraryModule(lib);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for(let module of this.modules){\r\n            if(module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getBaseModule() {\r\n        return this.baseModule;\r\n    }\r\n\r\n    public clearUsagePositions() {\r\n        this.baseModule.clearUsagePositions();\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main, true);\r\n        for (let m of this.modules) {\r\n            if (!m.isSystemModule) {\r\n                ms.putModule(m.copy());\r\n            }\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                if (!mo.isSystemModule) {\r\n                    return mo;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                if (!m.isSystemModule || includeSystemModules) {\r\n                    ret.push(m);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n    getType(identifier: string): { type: Type, module: Module } {\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                let type = module.typeStore.getType(identifier);\r\n                if (type != null) {\r\n                    return { type: type, module: module }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getTypeCompletionItems(moduleContext: Module, rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                for (let type of module.typeStore.typeList) {\r\n                    if (module == moduleContext || (type instanceof Klass && type.visibility == Visibility.public)\r\n                        || module.isSystemModule) {\r\n\r\n                        let detail = \"Klasse\";\r\n\r\n                        if(type.documentation != null){\r\n                            detail = type.documentation;\r\n                        } else if (module.isSystemModule) {\r\n                            if (type instanceof PrimitiveType) {\r\n                                detail = \"Primitiver Datentyp\";\r\n                            } else {\r\n                                detail = \"Systemklasse\";\r\n                            }\r\n                        }\r\n\r\n                        let item = {\r\n                            label: type.identifier,\r\n                            detail: detail,\r\n                            insertText: type.identifier,\r\n                            kind: type instanceof PrimitiveType ?\r\n                                monaco.languages.CompletionItemKind.Struct : monaco.languages.CompletionItemKind.Class,\r\n                            range: rangeToReplace,\r\n                            generic: ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0)\r\n                        };\r\n\r\n                        completionItems.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return completionItems;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class TypeStore {\r\n\r\n    typeList: Type[] = [];\r\n    typeMap: Map<string, Type> = new Map();\r\n\r\n    addType(type: Type) {\r\n        this.typeList.push(type);\r\n        this.typeMap.set(type.identifier, type);\r\n    }\r\n\r\n    clear() {\r\n        this.typeList.length = 0;\r\n        this.typeMap.clear();\r\n    }\r\n\r\n    getType(identifier: string) {\r\n        return this.typeMap.get(identifier);\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Value, Type, Variable } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\n\r\nexport class DebuggerElement {\r\n\r\n    caption: string; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: DebuggerElement;\r\n    children: DebuggerElement[] = [];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    value: Value;\r\n    variable: Variable;\r\n\r\n    type: Type;\r\n    identifier: string;\r\n\r\n    $debuggerElement: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string, parent: DebuggerElement, identifier: string, value: Value, type: Type, variable: Variable) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n        this.type = type;\r\n        this.variable = variable;\r\n        this.identifier = identifier;\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.$debuggerElement == null) {\r\n            this.$debuggerElement = jQuery('<div>');\r\n            this.$debuggerElement.addClass(\"jo_debuggerElement\");\r\n            this.$debuggerElement.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n            let $deFirstLine = jQuery('<div class=\"jo_deFirstline\"><span class=\"jo_deIdentifier\">' +\r\n                this.identifier + '</span>:&nbsp;<span class=\"jo_deValue\"></span></div>');\r\n\r\n            this.$debuggerElement.append($deFirstLine);\r\n\r\n            // show compound types in own branch of visible tree\r\n            if (this.type instanceof ArrayType ||\r\n                (this.type instanceof Klass && !(this.type instanceof Enum) && !(this.type == stringPrimitiveType))\r\n                || this.type instanceof StaticClass\r\n                || this.type instanceof Interface\r\n            ) {\r\n                this.canOpen = true;\r\n                this.$debuggerElement.addClass('jo_canOpen');\r\n                this.$debuggerElement.append(jQuery('<div class=\"jo_deChildContainer\"></div>'));\r\n\r\n                this.$debuggerElement.find('.jo_deFirstline').on('mousedown', (event) => {\r\n                    if (this.value != null && this.value.value != null) {\r\n                        if (this.children.length == 0) {\r\n                            this.onFirstOpening();\r\n                        }\r\n                        this.$debuggerElement.toggleClass('jo_expanded');\r\n                        this.isOpen = !this.isOpen;\r\n                    } else {\r\n                        this.children = [];\r\n                    }\r\n\r\n                    event.stopPropagation();\r\n\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        if (this.type instanceof Klass) {\r\n\r\n            let ro: RuntimeObject = this.value.value;\r\n            let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n            if (listHelper != null) {\r\n                this.renderListElements(listHelper);\r\n            } else {\r\n                for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n            }\r\n\r\n\r\n        } else if (this.type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$debuggerElement.find('.jo_deChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new DebuggerElement(null, this, \"[\" + i + \"]\", a[i], this.type.arrayOfType, null);\r\n                de.render();\r\n                $childContainer.append(de.$debuggerElement);\r\n\r\n            }\r\n\r\n        } else if (this.type instanceof StaticClass) {\r\n\r\n            for (let a of this.type.getAttributes(Visibility.private)) {\r\n                let ro = this.type.classObject;\r\n                let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n            }\r\n\r\n        } else if (this.type instanceof Interface) {\r\n\r\n            if (this.value.value != null && this.value.value instanceof RuntimeObject) {\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n\r\n            } else {\r\n                this.children == [];\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderListElements(listHelper: ListHelper) {\r\n\r\n        let valueArray = listHelper.valueArray;\r\n        if (this.children.length > valueArray.length) {\r\n            for (let i = valueArray.length; i < this.children.length; i++) {\r\n                let childElement = this.children[i];\r\n                childElement.$debuggerElement.remove();\r\n            }\r\n            this.children.splice(valueArray.length);\r\n        }\r\n\r\n        if (this.children.length < valueArray.length && this.children.length < 100) {\r\n            for (let i = this.children.length; i < valueArray.length && i <= 100; i++) {\r\n                let v: Value = valueArray[i];\r\n                let title = \"\" + i;\r\n                if (i == 100) {\r\n                    v = { type: stringPrimitiveType, value: \"\" + (listHelper.valueArray.length - 100) + \" weitere...\" };\r\n                    title = \"...\";\r\n                }\r\n                let de = new DebuggerElement(null, this, title, v, v.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').first().append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n        let s: string;\r\n        let v = this.value;\r\n\r\n        if (v == null) {\r\n            this.$debuggerElement.hide();\r\n            return;\r\n        }\r\n\r\n        this.$debuggerElement.show();\r\n        if (v.value == null) {\r\n            s = \"null\";\r\n            this.removeAllChildren();\r\n        } else {\r\n\r\n            if (v.updateValue != null) {\r\n                v.updateValue(v);\r\n            }\r\n\r\n            s = v.type?.debugOutput(v);\r\n\r\n            if (this.type instanceof Klass) {\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n                let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n                if (listHelper != null) {\r\n                    this.renderListElements(listHelper);\r\n                    if(listHelper.allElementsPrimitive()){\r\n                        s = \"\" +listHelper.valueArray.length + \" El: \"\r\n                        s += \"[\" + listHelper.objectArray.slice(0, 20).map(o => \"\" + o).join(\", \") + \"]\"\r\n                    } else {\r\n                        s = v.type.identifier + \" (\" +listHelper.valueArray.length + \" Elemente)\";\r\n                    }\r\n                }\r\n            } \r\n            \r\n        }\r\n\r\n        this.$debuggerElement.find('.jo_deValue').first().html(s == null ? \"\" : s);\r\n\r\n\r\n        for (let child of this.children) {\r\n            child.renderValue();\r\n        }\r\n    }\r\n\r\n    removeAllChildren() {\r\n        for (let de of this.children) {\r\n            de.$debuggerElement.remove();\r\n        }\r\n        this.children = []\r\n    }\r\n\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver, getArrayType } from \"./parser/TypeResolver.js\";\r\nimport { SymbolTable } from \"./parser/SymbolTable.js\";\r\nimport { Program } from \"./parser/Program.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Heap } from \"./types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { TokenType } from \"./lexer/Token.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport type Compilation = {\r\n    errors: Error[],\r\n    program: Program,\r\n    symbolTable: SymbolTable\r\n}\r\n\r\nexport class AdhocCompiler {\r\n\r\n    moduleStore: ModuleStore;\r\n    lexer: Lexer;\r\n    module: Module;\r\n    parser: Parser;\r\n    codeGenerator: CodeGenerator;\r\n\r\n    constructor(private main: MainBase) {\r\n        this.moduleStore = new ModuleStore(this.main, true);\r\n        this.lexer = new Lexer();\r\n        this.parser = new Parser(true);\r\n        this.codeGenerator = new CodeGenerator();\r\n        this.module = new Module(null, main);\r\n    }\r\n\r\n    compile(code: string, moduleStore: ModuleStore, heap: Heap, symbolTable?: SymbolTable): Compilation {\r\n\r\n        let t0 = performance.now();\r\n\r\n        let errors: Error[] = [];\r\n\r\n        this.module.clear();\r\n        if (symbolTable == null) {\r\n            symbolTable = new SymbolTable(null, { column: 1, line: 1, length: 0 }, { column: 1, line: 100, length: 0 });\r\n            symbolTable.beginsNewStackframe = true;\r\n        } else {\r\n            symbolTable = symbolTable.getImitation();\r\n        }\r\n\r\n        // 1st pass: lexing\r\n        let lexed = this.lexer.lex(code);\r\n        errors = lexed.errors;\r\n        this.module.tokenList = lexed.tokens;\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        let parser: Parser = new Parser(true);\r\n        parser.parse(this.module);\r\n        errors = errors.concat(this.module.errors[1]);\r\n\r\n        // 3rd pass: resolve types and populate typeStores\r\n\r\n        for (let typenode of this.module.typeNodes) {\r\n            if (typenode.resolvedType == null) {\r\n                let resolvedTypeAndModule = moduleStore.getType(typenode.identifier);\r\n                if (resolvedTypeAndModule == null) {\r\n                    errors.push({\r\n                        text: \"Der Datentyp \" + typenode.identifier + \" ist nicht bekannt.\",\r\n                        position: typenode.position,\r\n                        level: \"error\"\r\n                    })\r\n                } else {\r\n                    typenode.resolvedType = getArrayType(resolvedTypeAndModule.type, typenode.arrayDimension);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 4th pass: code generation\r\n\r\n        // let codeGeneratorErrors = this.codeGenerator\r\n        //     .startAdhocCompilation(this.module, this.moduleStore, symbolTable, heap);\r\n        let codeGeneratorErrors = this.codeGenerator\r\n            .startAdhocCompilation(this.module, moduleStore, symbolTable, heap);\r\n        errors = errors.concat(codeGeneratorErrors);\r\n\r\n\r\n\r\n        if (errors.length == 0) {\r\n\r\n            let statements = this.module.mainProgram.statements;\r\n            for (let statement of statements) {\r\n                statement.stepFinished = false;\r\n            }\r\n\r\n            if (statements.length > 0 && statements[statements.length - 1].type == TokenType.programEnd) {\r\n                statements.splice(statements.length - 1, 1);\r\n            }\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        return {\r\n            program: this.module.mainProgram,\r\n            errors: errors,\r\n            symbolTable: symbolTable\r\n        };\r\n    }\r\n\r\n\r\n}","import { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { Heap, Value } from \"../compiler/types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Evaluator {\r\n\r\n    private programMap: Map<string, Map<number, Program>> = new Map();\r\n    private compiler: AdhocCompiler;\r\n\r\n    constructor(private workspace: Workspace, private main: MainBase){\r\n        this.compiler = new AdhocCompiler(main);\r\n    }\r\n\r\n    compile(expression: string, symbolTable: SymbolTable): {error: string, program: Program} {\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        let pmEntry = this.programMap.get(expression);\r\n        if(pmEntry != null){\r\n            let program = pmEntry.get(symbolTable.id);\r\n            if(program != null){\r\n                return {error: null, program: program};\r\n            }\r\n        } else {\r\n            pmEntry = new Map();\r\n            this.programMap.set(expression, pmEntry);\r\n        }\r\n\r\n        let moduleStore = this.workspace.moduleStore;\r\n        let heap: Heap = this.main.getInterpreter().heap;\r\n\r\n        if (expression.length > 0 && moduleStore != null) {\r\n\r\n            let compilation = this.compiler.compile(expression, moduleStore, heap, symbolTable);\r\n\r\n            if (compilation.errors.length > 0) {\r\n                return { error: compilation.errors[0].text, program: null};\r\n            } else {\r\n\r\n                pmEntry.set(symbolTable.id, compilation.program);\r\n\r\n                return {error: null, program: compilation.program};\r\n            }\r\n\r\n        } else {\r\n            return {error: \"Leerer Ausdruck\", program: null};\r\n        }\r\n    }\r\n\r\n    evaluate(expression: string, symbolTable?: SymbolTable): { error: string, value: Value } {\r\n\r\n        if(symbolTable == null) symbolTable = this.main.getDebugger().lastSymboltable;\r\n\r\n        let c = this.compile(expression, symbolTable);\r\n\r\n        if(c?.error != null){\r\n            return { error: c.error, value: null};\r\n        }\r\n\r\n        if(c == null){\r\n            return { error: \"Fehler beim Kompilieren\", value: null};\r\n        }\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n\r\n        return interpreter.evaluate(c.program);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { WorkspaceData, WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { ExportedWorkspace, Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Evaluator } from \"../interpreter/Evaluator.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string;\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    // published_to 0: none; 1: class; 2: school; 3: all\r\n    published_to: number;\r\n    \r\n    repository_id: number;    // id of repository-workspace\r\n    has_write_permission_to_repository: boolean; // true if owner of this working copy has write permission to repository workspace\r\n\r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    evaluator: Evaluator;\r\n\r\n    settings: WorkspaceSettings = {\r\n        libraries: []\r\n    };\r\n    \r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main, true, this.settings.libraries);\r\n        this.evaluator = new Evaluator(this, main);\r\n    }\r\n\r\n    toExportedWorkspace(): ExportedWorkspace {\r\n        return {\r\n            name: this.name,\r\n            modules: this.moduleStore.getModules(false).map(m => m.toExportedModule()),\r\n            settings: this.settings\r\n        }\r\n    }\r\n\r\n\r\n    alterAdditionalLibraries() {\r\n        this.moduleStore.setAdditionalLibraries(this.settings.libraries);\r\n        this.moduleStore.dirty = true;\r\n    }\r\n\r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            path: this.path,\r\n            isFolder: this.isFolder,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            version: this.version,\r\n            repository_id: this.repository_id,\r\n            has_write_permission_to_repository: this.has_write_permission_to_repository,\r\n            language: 0,\r\n            sql_baseDatabase: \"\",\r\n            sql_history: \"\",\r\n            sql_manipulateDatabaseStatements: \"\",\r\n            settings: JSON.stringify(this.settings)\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n\r\n    renderSynchronizeButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonRepository');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        let that = this;\r\n        let myMain: Main = <Main>this.main;\r\n\r\n        if (this.repository_id != null && this.owner_id == myMain.user.id) {\r\n            let $button = jQuery('<div class=\"jo_startButton img_open-change jo_button jo_active\" title=\"Workspace mit Repository synchronisieren\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.synchronizeWithRepository();\r\n\r\n            });\r\n\r\n        } else {\r\n            $buttonDiv.find('.jo_startButton').remove();\r\n        }\r\n    }\r\n\r\n    synchronizeWithRepository(){\r\n        let myMain: Main = <Main>this.main;\r\n        if(this.repository_id != null && this.owner_id == myMain.user.id){\r\n            myMain.networkManager.sendUpdates(() => {\r\n                myMain.synchronizationManager.synchronizeWithWorkspace(this);\r\n            }, true);\r\n        }\r\n    }\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let settings: WorkspaceSettings = (ws.settings != null && ws.settings.startsWith(\"{\")) ? JSON.parse(ws.settings) : {libraries: []}; \r\n\r\n        //@ts-ignore\r\n        if(settings.libaries){\r\n            //@ts-ignore\r\n            settings.libraries = settings.libaries;\r\n        }\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.version = ws.version;\r\n        w.repository_id = ws.repository_id;\r\n        w.has_write_permission_to_repository = ws.has_write_permission_to_repository;\r\n        w.settings = settings;\r\n\r\n        if(w.settings.libraries == null){\r\n            w.settings.libraries = [];\r\n        }\r\n\r\n        if(w.settings.libraries.length > 0){\r\n            w.moduleStore.setAdditionalLibraries(w.settings.libraries);\r\n        }\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport type CheckboxState = () => boolean;\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    addDiv($div: JQuery<HTMLElement>){\r\n        this.$dialogMain.append($div);\r\n    }\r\n\r\n    subHeading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-subheading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    addCheckbox(description: string, ischecked: boolean, name: string): CheckboxState {\r\n        let cb: string = '<input type=\"checkbox\" name=\"' + name + '\"' + (ischecked ? ' checked' : '') + '>';\r\n        let $checkbox = jQuery(cb);\r\n        let $description = jQuery('<label for=\"' + name + '\">' + description + \"</label>\");\r\n        \r\n        let $div = jQuery('<div class=\"jo_checkbox_div\"></div>')\r\n        $div.append($checkbox, $description);\r\n\r\n        $description.on('click', () => {$checkbox.prop(\"checked\", !$checkbox.prop(\"checked\"))})\r\n\r\n        this.$dialogMain.append($div);\r\n        return () => {\r\n            return $checkbox.is(':checked');\r\n        }\r\n    }\r\n\r\n\r\n}","import { ExportedWorkspace, File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\n\r\nexport class WorkspaceImporter {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main, private path: string[] = []) {\r\n\r\n        this.dialog = new Dialog();\r\n        \r\n    }\r\n\r\n    show() {\r\n        let that = this;\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Workspace importieren\");\r\n        this.dialog.description(\"Bitte klicken Sie auf den Button 'Datei auswählen...' oder ziehen Sie eine Datei auf das gestrichelt umrahmte Feld.\")\r\n        let pathDescription = \"Dieser Workspace wird auf unterster Ordnerebene in der Workspaceliste importiert.\";\r\n        if(this.path.length  > 0){\r\n            pathDescription = \"Dieser Workspace wird in den Ordner \" + this.path.join(\"/\") + \" importiert.\";\r\n        }\r\n        this.dialog.description(pathDescription);\r\n\r\n        let $fileInputButton = jQuery('<input type=\"file\" id=\"file\" name=\"file\" multiple />');\r\n        this.dialog.addDiv($fileInputButton);\r\n        \r\n        let exportedWorkspaces: ExportedWorkspace[] = [];\r\n        \r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let $workspacePreviewDiv = jQuery(`<ul></ul>`);\r\n        \r\n        let registerFiles = (files: FileList) => {\r\n            for (let i = 0; i < files.length; i++) {\r\n                let f = files[i];\r\n                var reader = new FileReader();\r\n                reader.onload = (event) => {\r\n                    let text: string = <string>event.target.result;\r\n                    if (!text.startsWith(\"{\")) {\r\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\r\n                        return;\r\n                    }\r\n                    \r\n                    let ew: ExportedWorkspace = JSON.parse(text);\r\n                    \r\n                    if(ew.modules == null || ew.name == null || ew.settings == null){\r\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\r\n                        return;\r\n                    }\r\n\r\n                    exportedWorkspaces.push(ew);\r\n                    $workspacePreviewDiv.append(jQuery(`<li>Workspace ${ew.name} mit ${ew.modules.length} Dateien</li>`));\r\n\r\n                };\r\n                reader.readAsText(f);\r\n            }\r\n        }\r\n\r\n        $fileInputButton.on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            registerFiles(files);\r\n        })\r\n\r\n        let $dropZone = jQuery(`<div class=\"jo_workspaceimport_dropzone\">Dateien hierhin ziehen</div>`);\r\n        this.dialog.addDiv($dropZone);\r\n        this.dialog.description('<b>Diese Workspaces werden importiert:</b>');\r\n\r\n\r\n\r\n        $dropZone.on('dragover', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\r\n        })\r\n        $dropZone.on('drop', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n\r\n            var files = evt.originalEvent.dataTransfer.files;\r\n            registerFiles(files);\r\n        })\r\n\r\n        this.dialog.addDiv($workspacePreviewDiv);\r\n\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => { this.dialog.close() }\r\n            },\r\n            {\r\n                caption: \"Importieren\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    \r\n                    let networkManager = this.main.networkManager;\r\n                    let projectExplorer = this.main.projectExplorer;\r\n\r\n                    let owner_id: number = this.main.user.id;\r\n                    if (this.main.workspacesOwnerId != null) {\r\n                        owner_id = this.main.workspacesOwnerId;\r\n                    }\r\n\r\n                    let count = 0;\r\n                    for(let wse of exportedWorkspaces) count += 1 + wse.modules.length;\r\n\r\n                    let firstWorkspace: Workspace;\r\n\r\n                    for(let wse of exportedWorkspaces){\r\n\r\n                        let ws: Workspace = new Workspace(wse.name, this.main, owner_id);\r\n                        if(firstWorkspace == null) firstWorkspace = ws;\r\n                        ws.isFolder = false;\r\n                        ws.path = this.path.join(\"/\");\r\n                        ws.settings = wse.settings;\r\n                        this.main.workspaceList.push(ws);\r\n                        ws.alterAdditionalLibraries();\r\n\r\n                        networkManager.sendCreateWorkspace(ws, owner_id, (error: string) => {\r\n                            count--;\r\n                            if (error == null) {\r\n                                projectExplorer.workspaceListPanel.addElement({\r\n                                    name: ws.name,\r\n                                    externalElement: ws,\r\n                                    iconClass: \"workspace\",\r\n                                    isFolder: false,\r\n                                    path: that.path\r\n                                }, true);\r\n\r\n                                for(let mo of wse.modules){\r\n                                    let f: File = {\r\n                                        name: mo.name,\r\n                                        dirty: false,\r\n                                        saved: true,\r\n                                        text: mo.text,\r\n                                        text_before_revision: null,\r\n                                        submitted_date: null,\r\n                                        student_edited_after_revision: false,\r\n                                        version: 1,\r\n                                        is_copy_of_id: null,\r\n                                        repository_file_version: null,\r\n                                        identical_to_repository_version: null\r\n                                    };\r\n                                    let m = new Module(f, this.main);\r\n                                    ws.moduleStore.putModule(m);\r\n                                    networkManager.sendCreateFile(m, ws, owner_id,\r\n                                        (error: string) => {\r\n                                            count--;\r\n                                            if (error == null) {\r\n                                                projectExplorer.workspaceListPanel.sortElements();\r\n                                                this.dialog.close();\r\n                                                if(firstWorkspace != null) projectExplorer.setWorkspaceActive(firstWorkspace, true);\r\n                                            } else {\r\n                                                alert('Der Server ist nicht erreichbar!');\r\n                    \r\n                                            }\r\n                                        });\r\n                                }\r\n\r\n                            } else {\r\n                                alert('Der Server ist nicht erreichbar!');\r\n        \r\n                            }\r\n                        });\r\n\r\n\r\n\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { openContextMenu, makeEditable, ContextMenuItem, jo_mouseDetected, animateToTransparent } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { isJSDocThisTag, isThisTypeNode } from \"typescript\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonHomework\"></div>\r\n           <div class=\"jo_additionalButtonStart\"></div>\r\n           <div class=\"jo_additionalButtonRepository\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neuer Workspace...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            that.$buttonNew.trigger(mousePointer + 'down');\r\n                        }\r\n                    }, {\r\n                        caption: \"Workspace importieren...\",\r\n                        callback: () => {\r\n                            new WorkspaceImporter(<Main>that.accordion.main, element.path.concat([element.name])).show();\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'down', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class WatcherElement {\r\n\r\n    constructor(public expression: string, public accordionElement: AccordionElement,\r\n        private main: MainBase, private $secondLine: JQuery<HTMLElement>, private $rightTextInFirstLine: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    setError(error: string) {\r\n        this.$secondLine.empty();\r\n        this.$secondLine.append(jQuery('<div class=\"jo_watcherResult\">' + \"---\" + '</div>'));\r\n    }\r\n\r\n    evaluate() {\r\n\r\n        let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n        let result = evaluator.evaluate(this.expression);\r\n        if (result.error != null) {\r\n            this.setError(result.error);\r\n        } else {\r\n\r\n            let v = \"---\";\r\n            if (result.value != null) {\r\n                v = result.value.type.debugOutput(result.value);\r\n            }\r\n\r\n            this.$secondLine.empty();\r\n            this.$rightTextInFirstLine.empty();\r\n\r\n            monaco.editor.colorize(v, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n                let $result = jQuery('<div class=\"jo_watcherResult\">' + command + '</div>');\r\n\r\n                if (this.expression.length + v.length < 20) {\r\n                    this.$rightTextInFirstLine.append($result);\r\n                } else {\r\n                    this.$secondLine.append($result);\r\n                }\r\n\r\n            }\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Interpreter, ProgramStackElement, InterpreterState } from \"./Interpreter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Value, Heap } from \"../compiler/types/Types.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { DebuggerElement } from \"./DebuggerElement.js\";\r\nimport { Accordion, AccordionPanel, AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { StaticClass } from \"../compiler/types/Class.js\";\r\nimport { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { WatcherElement } from \"./WatcherElement.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Debugger {\r\n\r\n    lastSymboltable: SymbolTable;\r\n    lastDebuggerElements: DebuggerElement[] = [];\r\n    accordion: Accordion;\r\n\r\n    variablePanel: AccordionPanel;\r\n\r\n    watchPanel: AccordionPanel;\r\n\r\n\r\n    constructor(private main: MainBase, private $debuggerDiv: JQuery<HTMLElement>, private $projectexplorerDiv?: JQuery<HTMLElement>) {\r\n\r\n        this.accordion = new Accordion(main, $debuggerDiv);\r\n\r\n        this.variablePanel = new AccordionPanel(this.accordion, \"Variablen\", \"3\", null, null, \"\", false, false, \"file\", false, []);\r\n        this.variablePanel.$listElement.css('margin-left', '4px');\r\n\r\n        this.watchPanel = new AccordionPanel(this.accordion, \"Beobachten\", \"2\",\r\n            \"img_add-dark\", \"Beobachtungsterm hinzufügen\",\r\n            \"watcher\", true, false, \"file\", false, []);\r\n        this.watchPanel.$listElement.css('margin-left', '4px');\r\n\r\n        let that = this;\r\n        this.watchPanel.newElementCallback = (accordionElement, callbackIfSuccesful) => {\r\n            that.addWatchExpression(accordionElement);\r\n            callbackIfSuccesful(accordionElement.externalElement);\r\n            return null;\r\n        };\r\n\r\n        this.watchPanel.deleteCallback = (watchExpression, callbackIfSuccesful) => {\r\n            that.deleteWatchExpression(watchExpression);\r\n            callbackIfSuccesful();\r\n        };\r\n\r\n        this.watchPanel.renameCallback = (watchExpression, newName) => {\r\n            that.renameWatchExpression(watchExpression, newName);\r\n            return newName;\r\n        }\r\n\r\n        this.$debuggerDiv.hide();\r\n    }\r\n\r\n    public enable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.hide();\r\n        }\r\n        this.$debuggerDiv.show();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").hide();\r\n    }\r\n\r\n    public disable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.show();\r\n        }\r\n        this.$debuggerDiv.hide();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").show();\r\n    }\r\n\r\n    showData(currentProgram: Program, textPosition: TextPosition,\r\n        stack: Value[], stackframe: number, heap: Heap) {\r\n\r\n        if (currentProgram.module.file == null) return; // inside command line\r\n\r\n        let elementsToKeep: HTMLElement[] = [];\r\n\r\n        let module = currentProgram.module;\r\n        let symbolTable = module.findSymbolTableAtPosition(textPosition.line, textPosition.column);\r\n\r\n        let oldDebuggerElements = this.lastDebuggerElements;\r\n\r\n        this.lastDebuggerElements = [];\r\n        let $variableList = this.variablePanel.$listElement;\r\n\r\n        let st = symbolTable;\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        if (st.classContext != null) {\r\n\r\n            let object = stack[stackframe];\r\n            // same object context as before?\r\n            if (oldDebuggerElements.length > 0 && oldDebuggerElements[0].value == object && oldDebuggerElements[0].variable == null) {\r\n                // yes => keep old Debugger Element and html-Element\r\n                this.lastDebuggerElements.push(oldDebuggerElements[0]);\r\n                elementsToKeep.push(this.lastDebuggerElements[0].$debuggerElement[0]);\r\n            } else {\r\n                // no => make a new one\r\n                let thisString = (st.classContext instanceof StaticClass) ? st.classContext.identifier : \"this\";\r\n                let de: DebuggerElement = new DebuggerElement(null, null, thisString, object, st.classContext, null);\r\n                this.lastDebuggerElements.push(de);\r\n            }\r\n\r\n        }\r\n\r\n        // in nested scopes there may be a variable in inner scope with same\r\n        // identifier as variable in outer scope. We only want to show the variable in \r\n        // the inner scope, so we iterate from inner scope to outer scope and keep\r\n        // track of already shown variable names:\r\n        let visibleVariablesMap: { [identifier: string]: boolean } = {};\r\n\r\n        // iterate over SymbolTable from inside to outside\r\n        while (st != null) {\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                // had there been a variable with same identifier in inner scope?\r\n                if (visibleVariablesMap[variable.identifier] == null) {\r\n                    // no\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    // Reuse old Debugger Element vor variable, if present\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable && oldDe.$debuggerElement != null) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            if (de.value == null && de.variable != null) {\r\n                                de.value = stack[stackframe + de.variable.stackPos];\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // no old debugger element present, so make a new one\r\n                    if (de == null) {\r\n                        let value = stack[stackframe + variable.stackPos];\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n\r\n            }, this);\r\n\r\n            // next outer symbol table\r\n            st = st.parent;\r\n        }\r\n\r\n        // if we are outside class context, then variables on heap are visible:\r\n        if (symbolTable.classContext == null) {\r\n            for (let identifier in heap) {\r\n\r\n                let variable = heap[identifier];\r\n\r\n                if (visibleVariablesMap[variable.identifier] != true) {\r\n\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            de.value = de.variable.value;\r\n\r\n                        }\r\n                    }\r\n\r\n                    if (de == null) {\r\n                        let value = variable.value;\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // remove unused elements from html DOM:\r\n        for (let child of $variableList.children()) {\r\n            if (!(elementsToKeep.indexOf(child) >= 0)) {\r\n                child.remove();\r\n            }\r\n        }\r\n\r\n        // inject new values into debugger elements:\r\n        for (let de of this.lastDebuggerElements) {\r\n\r\n            if (de.variable != null) {\r\n                if (de.variable.stackPos != null) {\r\n                    de.value = stack[stackframe + de.variable.stackPos];\r\n                } else {\r\n                    de.value = de.variable.value;\r\n                }\r\n            }\r\n\r\n            de.render();\r\n\r\n            // if html element corresponding to debugger element is not already present in Browser-DOM\r\n            // then append it to DOM\r\n            if (elementsToKeep.indexOf(de.$debuggerElement[0]) < 0) {\r\n                $variableList.append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n        this.lastSymboltable = symbolTable;\r\n\r\n        // this.evaluateWatcherExpressions(currentProgram, textPosition, stack, stackframe);\r\n        this.evaluateWatcherExpressions();\r\n\r\n    }\r\n\r\n    renameWatchExpression(watcherElement: WatcherElement, newName: string) {\r\n        watcherElement.expression = newName;\r\n\r\n        monaco.editor.colorize(newName, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = watcherElement.accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', watcherElement.expression);\r\n\r\n        });\r\n\r\n        if (this.main.getInterpreter().state == InterpreterState.paused) {\r\n            watcherElement.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteWatchExpression(watchExpression: any) {\r\n        // nothing to do\r\n    }\r\n\r\n    addWatchExpression(accordionElement: AccordionElement) {\r\n\r\n        accordionElement.$htmlSecondLine = jQuery('<div></div>');\r\n        let $rightTextAfterFilename = accordionElement.$htmlFirstLine.parent().find('.jo_textAfterName').first();\r\n\r\n        let we = new WatcherElement(accordionElement.name, accordionElement,\r\n            this.main, accordionElement.$htmlSecondLine, $rightTextAfterFilename);\r\n\r\n        accordionElement.externalElement = we;\r\n\r\n        monaco.editor.colorize(accordionElement.name, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', accordionElement.externalElement.expression);\r\n\r\n        });\r\n\r\n        we.evaluate();\r\n\r\n    }\r\n\r\n    evaluateWatcherExpressions() {\r\n\r\n        for (let ae of this.watchPanel.elements) {\r\n            let we: WatcherElement = ae.externalElement;\r\n            we.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n\r\n                /*\r\n                 * Event is bubbling down to body element\r\n                 * when pressing space bar in embedded mode while program runs.\r\n                 * This leads to scrolling page down. To prevent this:\r\n                 */\r\n                if(event.key == \" \" && that.main.isEmbedded() && \r\n                   that.main.getInterpreter().state == InterpreterState.running && !that.main.getMonacoEditor().hasTextFocus()){\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            button.on(mousePointer + 'down', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n                if(identifier == \"interpreter.start\"){\r\n                    SoundTools.init();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Variable } from \"../types/Types.js\";\r\nimport { Statement } from \"./Program.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Klass } from \"../types/Class.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype Label = {\r\n    number: number;\r\n}\r\n\r\nexport class ProgramPrinter {\r\n\r\n\r\n\r\n    private $pcodeTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>){\r\n        this.$pcodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n    }\r\n\r\n    showNode(node: Statement) {\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pCodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n        $pCodeTab.find('div').removeClass(\"jo_revealProgramPointer\");\r\n        let $div:JQuery<HTMLElement> = node[\"$div\"];\r\n        if($div != null){\r\n            $div.addClass(\"jo_revealProgramPointer\");\r\n            let pos = $div.position().top + this.$pcodeTab.scrollTop();\r\n            pos -= this.$pcodeTab.height()/2;\r\n            this.$pcodeTab.scrollTop(pos);\r\n\r\n            // $div[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\r\n        }\r\n    }\r\n\r\n    initGUI(){\r\n        this.$pcodeTab.on('myshow', () => {\r\n            this.main.printProgram();\r\n        });\r\n\r\n    }\r\n\r\n    printModuleToBottomDiv(workspace: Workspace, m: Module){\r\n\r\n        if(m == null) return;\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pcode = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n        $pcode.html(\"\");\r\n        $pcode.append(this.printModule(m));\r\n\r\n        if(workspace != null && workspace.compilerMessage != null){\r\n            $pcode.prepend(\"<div>\" + workspace.compilerMessage + \"</div>\");\r\n        }\r\n        \r\n\r\n        $pcode.find('.jo_label_destination').on(\"click\", (ev) => {\r\n            let dest = jQuery(ev.target).data('destination');\r\n            if(dest == null){\r\n                dest = jQuery(ev.target).parent().data('destination');\r\n            }\r\n            if(dest != null){\r\n                let $dest = this.$pcodeTab.find('.' + dest);\r\n                $dest[0].scrollIntoView();            \r\n            } \r\n                \r\n        });\r\n\r\n    }\r\n\r\n    printModule(m: Module): JQuery<HTMLElement>[] {\r\n\r\n        if (m == null) {\r\n            return [jQuery(\"<div></div>\")];\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n\r\n        if (m.mainProgram != null) {\r\n            s.push(jQuery(\"<h3>Main Program: </h3>\"));\r\n            s = s.concat(this.print(m.mainProgram.statements));\r\n        }\r\n\r\n        if (m.typeStore != null && m.typeStore.typeList != null) {\r\n\r\n            for (let c of m.typeStore.typeList) {\r\n                if (c instanceof Klass) {\r\n                    s.push(jQuery(\"<h2>Class \" + c.identifier + \":</h2>\"));\r\n\r\n                    if(c.attributeInitializationProgram.statements.length > 0){\r\n                        s.push(jQuery(\"<h3>Attribute-initialization:</h3>\"));\r\n                        s = s.concat(this.print(c.attributeInitializationProgram.statements));\r\n                }\r\n\r\n                    for (let m of c.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                    for (let m of c.staticClass.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Static Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    print(statements: Statement[], indent: string = \"\"): JQuery<HTMLElement>[] {\r\n\r\n        let labels: Map<number, Label> = new Map();\r\n        let lastLabelNumber: number = 0;\r\n\r\n        for(let statement of statements){\r\n            if(statement.type == TokenType.jumpAlways || statement.type == TokenType.jumpIfFalse || \r\n                statement.type == TokenType.jumpIfTrue || statement.type == TokenType.jumpIfFalseAndLeaveOnStack || \r\n                statement.type == TokenType.jumpIfTrueAndLeaveOnStack || statement.type ==TokenType.extendedForLoopCheckCounterAndGetElement ){\r\n                let dest = statement.destination;\r\n                let label = labels.get(dest);\r\n                if(label == null){\r\n                    labels.set(dest, {\r\n                        number: lastLabelNumber++\r\n                    });\r\n                }\r\n            }\r\n            if(statement.type == TokenType.keywordSwitch){\r\n                for(let value in statement.destinationMap){\r\n                    let dest = statement.destinationMap[value];\r\n                    let label = labels.get(dest);\r\n                    if(label == null){\r\n                        labels.set(dest, {\r\n                            number: lastLabelNumber++\r\n                        });\r\n                    }                        \r\n                }\r\n                if(statement.defaultDestination != null){\r\n                    let label = labels.get(statement.defaultDestination);\r\n                    if(label == null){\r\n                        labels.set(statement.defaultDestination, {\r\n                            number: lastLabelNumber++\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n        let i = 0;\r\n\r\n        for (let statement of statements) {\r\n            s.push(this.printNode(statement, indent, i, labels));\r\n            i++;\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    printNode(node: Statement, indent: string, n: number, labels: Map<number, Label>): JQuery<HTMLElement> {\r\n\r\n        let s = indent;\r\n\r\n        let label = labels.get(n);\r\n        if(label != null){\r\n            s += \"<span style='font-weight: bold' class='label\" + label.number + \"'>Label&nbsp;<span style='color: green'>\" + label.number + \":</span></span><br>\";\r\n        }\r\n\r\n        if (node.position != null) {\r\n            s += \"(l\" + this.format3(node.position.line) + \",&nbsp;c\" + this.format3(node.position.column) + \"): \";\r\n        } else {\r\n            s += \"(l&nbsp;xxx,&nbsp;c&nbsp;xxx):\";\r\n        }\r\n        // s += \"<span style='fontweight: bold; color: darkgreen'>[\" + n + \"]</span>&nbsp;\";\r\n        s += \"<span style='fontweight: bold; color: #8080ff'>\" + TokenType[node.type] + \"</span>&nbsp;\";\r\n\r\n        let s1: string = \"\";\r\n        switch (node.type) {\r\n            case TokenType.localVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                s1 += \"StackPos: \" + node.stackposOfVariable;\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                s1 += \"v: \" + node.identifier;    \r\n            break;\r\n            case TokenType.pushAttribute:\r\n                s1 += \"Attribut: \" + node.attributeIdentifier + \", use THIS-Object: \" + node.useThisObject\r\n                break;\r\n            case TokenType.assignment:\r\n            case TokenType.plusAssignment:\r\n            case TokenType.minusAssignment:\r\n            case TokenType.multiplicationAssignment:\r\n            case TokenType.divisionAssignment:\r\n                s1 += \"Assignmenttype: \" + TokenTypeReadable[node.type] + \"&nbsp;&nbsp;\";\r\n                if(node.type == TokenType.assignment){\r\n                    s1 += \", leaveValueOnStack: \" + node.leaveValueOnStack;\r\n                }\r\n                \r\n                break;\r\n            case TokenType.binaryOp:\r\n            case TokenType.unaryOp:\r\n                s1 += \"Operator: \" + TokenTypeReadable[node.operator];\r\n                break;\r\n            case TokenType.pushConstant:\r\n                s1 += \"Value: \" + node.value;\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                s1 += \"Static class: \" + node.klass.identifier;\r\n                break;\r\n            case TokenType.castValue:\r\n                s1 += \"New Type: \" + node.newType.identifier;\r\n                break;\r\n            case TokenType.selectArrayElement:\r\n                break;\r\n            case TokenType.callMethod:\r\n                s1 += node.method.identifier;\r\n                s1 += \", StackframeBegin: \" + node.stackframeBegin\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                s1 += \"count: \" + node.popCount;\r\n                break;\r\n            case TokenType.return:\r\n                s1 += \"copyReturnValueToStackframePos0: \" + node.copyReturnValueToStackframePos0;\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n            case TokenType.jumpAlways:\r\n            case TokenType.jumpIfFalse:\r\n            case TokenType.jumpIfTrue:\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                let number: number = labels.get(node.destination).number;\r\n                s1 += \"destination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                s1 += \"amount: \" + node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.beginArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                break;\r\n            case TokenType.addToArray:\r\n                s1 += \"count: \" + node.numberOfElementsToAdd;\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                s1 += \", dimension: \" + node.dimension;\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                s1 += \"destinationMap: {\";\r\n                for(let key in node.destinationMap){\r\n                    let number: number = labels.get(node.destinationMap[key]).number;\r\n                    s1 += key + \": <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\" + \", \";\r\n                }\r\n\r\n                if(s1.endsWith(\", \")) s1 = s1.substring(0, s1.length - 2);\r\n\r\n                s1 += \"}\";\r\n                if(node.defaultDestination != null){\r\n                    let number = labels.get(node.defaultDestination).number;\r\n                    s1 += \", defaultDestination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                if(node.klass != null)\r\n                s1 += \"class: \" + node.klass.identifier + \", attribute: \" + node.attributeIdentifier;\r\n                break;\r\n            case TokenType.newObject: \r\n                s1 += \"class: \" + node.class.identifier;\r\n                break;\r\n        }\r\n\r\n\r\n        if(s1 != \"\") s += ` [${s1}]`;\r\n\r\n        if (node.stepFinished == true) {\r\n            s += \"::\"\r\n        }\r\n\r\n        s = \"<div>\" + s + \"</div>\";\r\n\r\n        let $div = jQuery(s);\r\n\r\n        node[\"$div\"] = $div;\r\n\r\n        return $div;\r\n    }\r\n\r\n    printVariable(v: Variable): string {\r\n        return v.type.identifier + \" \" + v.identifier + (v.stackPos == null ? \"\" :\" (sp: \" + v.stackPos + \")\");\r\n    }\r\n\r\n    format3(n: number):string{\r\n        if(n >= 100) return \"\" + n;\r\n        if(n >= 10) return \"&nbsp;\" + n;\r\n        return \"&nbsp;&nbsp;\" + n;\r\n    }\r\n\r\n}","import { Value } from \"../../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ConsoleEntry {\r\n\r\n    caption: string|JQuery<HTMLElement>; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: ConsoleEntry;\r\n    children: ConsoleEntry[];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    identifier: string;\r\n    value: Value;\r\n\r\n    $consoleEntry: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string|JQuery<HTMLElement>, value: Value, identifier: string, parent: ConsoleEntry, \r\n        private withBottomBorder: boolean, private color: string = null ) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n\r\n        this.identifier = identifier;\r\n\r\n        this.render();\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        this.$consoleEntry = jQuery('<div>');\r\n        this.$consoleEntry.addClass(\"jo_consoleEntry\");\r\n        this.$consoleEntry.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n        if(this.color != null){\r\n            this.$consoleEntry.css('background-color', this.color);\r\n        }\r\n\r\n        if(this.withBottomBorder){\r\n            this.$consoleEntry.addClass('jo_withBorder');\r\n        }\r\n\r\n        let $deFirstLine = jQuery('<div class=\"jo_ceFirstline\"></div>');\r\n\r\n        this.$consoleEntry.append($deFirstLine);\r\n\r\n\r\n        if (this.value != null && this.value.type != null && (this.value.type instanceof ArrayType ||\r\n            (this.value.type instanceof Klass && !(this.value.type instanceof Enum) && !(this.value.type == stringPrimitiveType))\r\n            || this.value.type instanceof Interface\r\n            )) {\r\n            this.canOpen = true;\r\n            this.$consoleEntry.addClass('jo_canOpen');\r\n            this.$consoleEntry.append(jQuery('<div class=\"jo_ceChildContainer\"></div>'));\r\n\r\n            this.$consoleEntry.find('.jo_ceFirstline').on('mousedown', (event) => {\r\n                if (this.value != null && this.value.value != null) {\r\n                    if (this.children == null) {\r\n                        this.onFirstOpening();\r\n                    }\r\n                    this.$consoleEntry.toggleClass('jo_expanded');\r\n                    this.isOpen = !this.isOpen;\r\n                } else {\r\n                    this.children = null;\r\n                }\r\n\r\n                event.stopPropagation();\r\n\r\n            });\r\n\r\n        } else {\r\n            if(this.caption == null && this.getLevel() == 0){\r\n                this.$consoleEntry.addClass('jo_cannotOpen');\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        let type = this.value.type;\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                let ro = <RuntimeObject>this.value.value;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                this.$consoleEntry.find('.jo_ceChildContainer').append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new ConsoleEntry(null, a[i], \"[\" + i + \"]\", this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n\r\n            }\r\n\r\n        } else if (type instanceof StaticClass) {\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let a of type.getAttributes(Visibility.private)) {\r\n                let ro = type.classObject;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof Interface) {\r\n\r\n            if(this.value.value != null && this.value.value instanceof RuntimeObject){\r\n\r\n                let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                    de.render();\r\n                    $childContainer.append(de.$consoleEntry);\r\n                }\r\n\r\n            } else {\r\n                this.children == null;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n\r\n        let $firstLine = this.$consoleEntry.find('.jo_ceFirstline');\r\n\r\n        let v = this.value;\r\n        \r\n        if (v == null) {\r\n            if(this.caption != null){\r\n                if(typeof this.caption == \"string\" ){\r\n                    $firstLine.append(jQuery('<span class=\"jo_ceCaption\">' + this.caption + \"</span>\"));\r\n                } else {\r\n                    let span = jQuery('<span class=\"jo_ceCaption\"></span>');\r\n                    span.append(this.caption);\r\n                    $firstLine.append(span);\r\n                }\r\n            } else {\r\n                $firstLine.append(jQuery('<span class=\"jo_ceNoValue\">Kein Wert zurückgegeben.</span>'));\r\n            }\r\n            return;\r\n        }\r\n        \r\n        let valueString = \"\";\r\n        if (v.value == null) {\r\n            valueString = \"null\";\r\n        } else {\r\n            valueString = v.type.debugOutput(v, 400);\r\n        }\r\n        \r\n        if(this.identifier != null){\r\n            $firstLine.append(jQuery('<span class=\"jo_ceIdentifier\">' + this.identifier + \":&nbsp;</span>\"));\r\n        }\r\n        $firstLine.append(jQuery('<span class=\"jo_ceValue\">' + valueString + \"</span>\"));\r\n    }\r\n\r\n    detachValue() {\r\n        this.value = undefined;\r\n        this.$consoleEntry.removeClass('jo_canOpen');\r\n        if(this.getLevel() == 0 && this.caption == null){\r\n            this.$consoleEntry.addClass('jo_cannotOpen');\r\n        }\r\n    }\r\n\r\n}","import { AdhocCompiler } from \"../../../compiler/AdhocCompiler.js\";\r\nimport { Error } from \"../../../compiler/lexer/Lexer.js\";\r\nimport { Heap, Value } from \"../../../compiler/types/Types.js\";\r\nimport { InterpreterState, Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { ConsoleEntry } from \"./ConsoleEntry.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { TextPosition, TokenType } from \"../../../compiler/lexer/Token.js\";\r\nimport { Program } from \"../../../compiler/parser/Program.js\";\r\nimport { Helper } from \"../Helper.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport class MyConsole {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n    history: string[] = [];\r\n    historyPos: number = 0;\r\n\r\n    timerHandle: any;\r\n    isDirty: boolean = false;\r\n    readyToExecute: boolean = false;\r\n\r\n    compiler: AdhocCompiler;\r\n\r\n    consoleEntries: ConsoleEntry[] = [];\r\n\r\n    errorDecoration: string[] = [];\r\n    $consoleTabHeading: JQuery<HTMLElement>;\r\n    $consoleTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>){\r\n        if($bottomDiv == null) return; // Console is only used to highlight exceptions\r\n\r\n        this.$consoleTabHeading = $bottomDiv.find('.jo_tabheadings>.jo_console-tab');\r\n        this.$consoleTab = $bottomDiv.find('.jo_tabs>.jo_consoleTab');\r\n    }\r\n\r\n    initConsoleClearButton(){\r\n\r\n        let that = this;\r\n\r\n        let $consoleClear = this.$consoleTabHeading.parent().find('.jo_console-clear');\r\n\r\n        this.$consoleTab.on('myshow', () => {\r\n            $consoleClear.show();\r\n            that.editor.layout();\r\n        });\r\n\r\n        this.$consoleTab.on('myhide', () => {\r\n            $consoleClear.hide();\r\n        });\r\n\r\n        $consoleClear.on('mousedown', (e) => {\r\n            e.stopPropagation();\r\n            that.clear();\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        if(this.$bottomDiv == null) return;\r\n\r\n        this.initConsoleClearButton();\r\n\r\n        let $editorDiv = this.$consoleTab.find('.jo_commandline');\r\n\r\n        this.editor = monaco.editor.create($editorDiv[0], {\r\n            value: [\r\n                ''\r\n            ].join('\\n'),\r\n            automaticLayout: false,\r\n            renderLineHighlight: \"none\",\r\n            guides: {\r\n                bracketPairs: false,\r\n                highlightActiveIndentation: false,\r\n                indentation: false\r\n            },\r\n            overviewRulerLanes: 0,\r\n            lineNumbers: 'off',\r\n            glyphMargin: false,\r\n            folding: false,\r\n            // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882\r\n            lineDecorationsWidth: 0,\r\n            lineNumbersMinChars: 0,\r\n            fixedOverflowWidgets: true,\r\n            language: 'myJava',\r\n\r\n            fontSize: 14,\r\n            //@ts-ignore\r\n            fontFamily: window.javaOnlineFont == null ? \"Consolas, Roboto Mono\" : window.javaOnlineFont,\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            occurrencesHighlight: false,\r\n            suggest: { \r\n                localityBonus: true,\r\n                snippetsPreventQuickSuggestions: false\r\n            },\r\n            minimap: {\r\n                enabled: false\r\n            },\r\n            scrollbar: {\r\n                vertical: 'hidden',\r\n                horizontal: 'hidden'\r\n            },\r\n            theme: \"myCustomThemeDark\"\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.layout();\r\n        \r\n        let that = this;\r\n\r\n        this.editor.addCommand(monaco.KeyCode.Enter, () => {\r\n\r\n            that.compileIfDirty();\r\n\r\n            if (that.readyToExecute) {\r\n                let command = that.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n\r\n                if(command == \"\"){\r\n                    return;\r\n                }\r\n\r\n                that.history.push(command);\r\n                that.historyPos = 0;\r\n\r\n                that.execute();\r\n\r\n                that.editor.setValue(\"\");\r\n\r\n            } else {\r\n                // TODO: Fehlermeldung!\r\n            }\r\n\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.UpArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos + 1);\r\n            if (nextHistoryPos >= 0) {\r\n                that.historyPos++;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.DownArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos - 1);\r\n            if (nextHistoryPos <= that.history.length - 1) {\r\n                that.historyPos--;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            } else {\r\n                that.editor.setValue(\"\");\r\n                that.historyPos = 0;\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.compiler = new AdhocCompiler(this.main);\r\n\r\n        let model = this.editor.getModel();\r\n        let lastVersionId = 0;\r\n\r\n        model.onDidChangeContent(() => {\r\n            let versionId = model.getAlternativeVersionId();\r\n\r\n            if (versionId != lastVersionId) {\r\n                that.isDirty = true;\r\n                lastVersionId = versionId;\r\n            }\r\n        });\r\n\r\n        this.startTimer();\r\n\r\n        this.$consoleTabHeading.on(\"mousedown\", ()=>{\r\n            Helper.showHelper(\"consoleHelper\", this.main);\r\n\r\n            setTimeout(() => {\r\n                that.editor.focus();\r\n            }, 500);\r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        this.stopTimer();\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n            this.timerHandle = null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.isDirty) {\r\n\r\n            let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n            let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n            let symbolTable = this.main.getDebugger().lastSymboltable;\r\n            let heap = this.main.getInterpreter().heap;\r\n\r\n            if (command.length > 0 && moduleStore != null) {\r\n\r\n                let compilation = this.compiler.compile(command, moduleStore, heap, symbolTable);\r\n\r\n                this.readyToExecute = compilation.errors.length == 0;\r\n\r\n                this.showErrors(compilation.errors);\r\n\r\n                this.isDirty = false;\r\n\r\n            } else {\r\n                this.showErrors([]);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    showErrors(errors: Error[]) {\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n\r\n        for (let error of errors) {\r\n            markers.push({\r\n                startLineNumber: error.position.line,\r\n                startColumn: error.position.column,\r\n                endLineNumber: error.position.line,\r\n                endColumn: error.position.column + error.position.length,\r\n                message: error.text,\r\n                severity: monaco.MarkerSeverity.Error\r\n            });\r\n\r\n        }\r\n\r\n        monaco.editor.setModelMarkers(this.editor.getModel(), 'Fehler', markers);\r\n\r\n    }\r\n\r\n    execute() {\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n        let module = this.compiler.module;\r\n        let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n        let program = module.mainProgram;\r\n\r\n        monaco.editor.colorize(command, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            // if(this.programHasMethodCalls(program)){\r\n                // this.executeInStepMode(interpreter, program, command);\r\n            // } else {\r\n                this.executeRapidly(interpreter, program, command);\r\n                interpreter.showProgramPointerAndVariables();\r\n            // }\r\n\r\n        });\r\n\r\n    }\r\n    programHasMethodCalls(program: Program): boolean {\r\n        \r\n        for(let statement of program.statements){\r\n            if(statement.type == TokenType.callMethod && statement.method.invoke == null){\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n\r\n    }\r\n\r\n    executeInStepMode(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        interpreter.pushCurrentProgram();\r\n\r\n        interpreter.currentProgram = program;\r\n        interpreter.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = interpreter.stack.length;\r\n        let oldInterpreterState = interpreter.state;\r\n\r\n        interpreter.setState(InterpreterState.paused);\r\n\r\n        interpreter.start(() => {\r\n\r\n            let stackTop: Value;\r\n            if (interpreter.stack.length > stacksizeBefore) {\r\n                stackTop = interpreter.stack.pop();\r\n\r\n                while (interpreter.stack.length > stacksizeBefore) {\r\n                    interpreter.stack.pop();\r\n                }\r\n\r\n            }\r\n\r\n            this.writeConsoleEntry(command, stackTop);\r\n\r\n            interpreter.setState(oldInterpreterState);\r\n            if (oldInterpreterState == InterpreterState.paused) {\r\n                interpreter.showProgramPointerAndVariables();\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    executeRapidly(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        let result = interpreter.evaluate(program);\r\n\r\n        if(result.error == null){\r\n            \r\n            this.writeConsoleEntry(command, result.value);\r\n\r\n        } else {\r\n\r\n            let $entry = jQuery('<div><div>' + command + '</div></div>');\r\n            $entry.append(jQuery('<div class=\"jo_console-error\"> ' + result.error + '</div>'));\r\n\r\n            this.writeConsoleEntry($entry, null)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showTab(){\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        this.$consoleTabHeading.trigger(mousePointer + \"down\");\r\n    }\r\n\r\n    writeConsoleEntry(command: string|JQuery<HTMLElement>, stackTop: Value, color: string = null) {\r\n\r\n        if(this.$consoleTab == null){\r\n            return;\r\n        }\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n\r\n        let commandEntry = new ConsoleEntry(command, null, null, null, stackTop == null, color);\r\n        this.consoleEntries.push(commandEntry);\r\n        consoleTop.append(commandEntry.$consoleEntry);\r\n\r\n        if(stackTop != null){\r\n            let resultEntry = new ConsoleEntry(null, stackTop, null, null, true, color);\r\n            this.consoleEntries.push(resultEntry);\r\n            consoleTop.append(resultEntry.$consoleEntry);\r\n        }\r\n\r\n        var height = consoleTop[0].scrollHeight;\r\n        consoleTop.scrollTop(height);\r\n\r\n    }\r\n\r\n    clear() {\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        consoleTop.children().remove(); // empty();\r\n        this.consoleEntries = [];\r\n    }\r\n\r\n    detachValues() {\r\n        for(let ce of this.consoleEntries){\r\n            ce.detachValue();\r\n        }\r\n    }\r\n\r\n    showError(m: Module, position: TextPosition) {\r\n\r\n        if(this.main instanceof Main){\r\n            if (m?.file?.name != this.main.projectExplorer.getCurrentlyEditedModule()?.file?.name) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealError' }\r\n\r\n            },\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealErrorWholeLine', isWholeLine: true }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n    clearErrors(){\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n        ]);\r\n    }\r\n\r\n    clearExceptions(){\r\n        if(this.$bottomDiv == null) return;\r\n        let $consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        $consoleTop.find('.jo_exception').parents('.jo_consoleEntry').remove();\r\n    }\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 800);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\")\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton);\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('jo_active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace, true);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MyConsole } from \"./console/MyConsole.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    programPrinter: ProgramPrinter;\r\n    console: MyConsole;\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n        if (this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab').length > 0) {\r\n            this.programPrinter = new ProgramPrinter(main, $bottomDiv);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_console-tab').length > 0) {\r\n            this.console = new MyConsole(main, $bottomDiv);\r\n        } else {\r\n            this.console = new MyConsole(main, null);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.programPrinter != null) this.programPrinter.initGUI();\r\n        if (this.console != null) this.console.initGUI();\r\n        if(this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n        let that = this;\r\n        jQuery(\".jo_pcodeTab\").on(\"myshow\", () => {\r\n            that.printCurrentlyExecutedModule();\r\n        });\r\n\r\n    }\r\n\r\n    printCurrentlyExecutedModule() {\r\n        let interpreter = this.main.getInterpreter();\r\n        if (interpreter.state == InterpreterState.running || interpreter.state == InterpreterState.paused) {\r\n            let module = interpreter.currentProgram?.module;\r\n            this.printModuleToBottomDiv(null, module);\r\n        }\r\n    }\r\n\r\n    printModuleToBottomDiv(currentWorkspace: Workspace, module: Module) {\r\n        if (this.programPrinter != null) this.programPrinter.printModuleToBottomDiv(currentWorkspace, module);\r\n    }\r\n\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_homeworkTabheading').trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_tabheadings').children().first().trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n    showHideDbBusyIcon(visible: boolean){\r\n        let displayValue: string = visible ? \"block\" : \"none\";\r\n        jQuery(\".jo_db-busy\").css(\"display\", displayValue);\r\n    }\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, getVisibilityUpTo, Interface, Visibility, StaticClass } from \"../../compiler/types/Class.js\";\r\nimport { SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' '];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"]?.widget;\r\n            if (sw != null && sw._widget != null && this.first) {\r\n                sw._widget.toggleDetails();\r\n                this.first = false;\r\n            }\r\n            // sw.toggleSuggestionDetails();\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.toggleSuggestionDetails', {});\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.triggerSuggest', {});\r\n            // this.main.monaco.trigger(monaco.KeyMod.CtrlCmd + monaco.KeyCode.Space, 'type', {});\r\n        }, 300);\r\n\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        this.isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(this.isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = this.isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        if (context.triggerCharacter == \" \") {\r\n            let newMatch = textUntilPosition.match(/.*(new )$/);\r\n            if (newMatch != null) {\r\n                return this.getCompletionItemsAfterNew(module);\r\n            }\r\n            let classMatch = textUntilPosition.match(/.*(class )[\\wöäüÖÄÜß<> ,]*[\\wöäüÖÄÜß<> ] $/);\r\n            if (classMatch != null) {\r\n\r\n                let classIndex = textUntilPosition.lastIndexOf('class');\r\n                let countLower = 0;\r\n                let countGreater = 0;\r\n                for (let i = classIndex; i < textUntilPosition.length; i++) {\r\n                    let c = textUntilPosition.charAt(i);\r\n                    switch (c) {\r\n                        case '<': countLower++; break;\r\n                        case '>': countGreater++; break;\r\n                    }\r\n                }\r\n\r\n                return this.getCompletionItemsAfterClass(module, countLower > countGreater, textAfterPosition);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*\\(?)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        let leftBracketAlreadyThere = identifierAndBracketAfterCursor.endsWith(\"(\");\r\n\r\n        // First guess:  dot followed by part of Identifier?\r\n        let dotMatch = textUntilPosition.match(/.*(\\.)([\\wöäüÖÄÜß]*)$/);\r\n        if (dotMatch != null) {\r\n            if (this.isConsole) {\r\n                this.main.getBottomDiv()?.console?.compileIfDirty();\r\n            } else {\r\n                this.main.compileIfDirty();\r\n            }\r\n        }\r\n\r\n        let symbolTable = this.isConsole ? this.main.getDebugger().lastSymboltable : module.findSymbolTableAtPosition(position.lineNumber, position.column);\r\n        let classContext = symbolTable == null ? null : symbolTable.classContext;\r\n\r\n\r\n        if (dotMatch != null) {\r\n            return this.getCompletionItemsAfterDot(dotMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere);\r\n        }\r\n\r\n        let varOrClassMatch = textUntilPosition.match(/.*[^\\wöäüÖÄÜß]([\\wöäüÖÄÜß]*)$/);\r\n\r\n        if (varOrClassMatch == null) {\r\n            varOrClassMatch = textUntilPosition.match(/^([\\wöäüÖÄÜß]*)$/);\r\n        }\r\n\r\n        if (varOrClassMatch != null) {\r\n\r\n            return this.getCompletionItemsInsideIdentifier(varOrClassMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere, symbolTable);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getCompletionItemsAfterNew(module: Module): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        for (let i = 0; i < completionItems.length; i++) {\r\n            let item = completionItems[i];\r\n            if (item.detail.match('Primitiv')) {\r\n                completionItems.splice(i, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n            if (item[\"generic\"]) {\r\n                item.insertText += \"<>($0)\";\r\n            } else {\r\n                item.insertText += \"($0)\";\r\n            }\r\n            item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n            item.command = {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            };\r\n\r\n        }\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterClass(module: Module, insideGenericParameterDefinition: boolean, textAfterPosition: string): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let startsWithCurlyBrace: boolean = textAfterPosition.trimLeft().startsWith(\"{\");\r\n\r\n        completionItems = completionItems.concat([\r\n            {\r\n                label: \"extends\",\r\n                insertText: \"extends $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"extends-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"implements\",\r\n                insertText: \"implements $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"implements-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"{}\",\r\n                insertText: \"{\\n\\t$0\\n}\",\r\n                detail: \"Klassenrumpf\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            },\r\n        ]);\r\n\r\n        // completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsInsideIdentifier(varOrClassMatch: RegExpMatchArray, position: monaco.Position, module: Module, identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean, symbolTable: SymbolTable): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let text = varOrClassMatch[1];\r\n\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - text.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        if (symbolTable?.classContext != null && symbolTable?.method == null && symbolTable.classContext instanceof Klass) {\r\n            completionItems = completionItems.concat(this.getOverridableMethodsCompletion(symbolTable.classContext));\r\n        }\r\n\r\n        if (symbolTable != null) {\r\n            completionItems = completionItems.concat(symbolTable.getLocalVariableCompletionItems(rangeToReplace).map(ci => {\r\n                ci.sortText = \"aaa\" + ci.label;\r\n                return ci;\r\n            }));\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, rangeToReplace));\r\n\r\n        if (classContext != null && symbolTable?.method != null) {\r\n            completionItems = completionItems.concat(\r\n                classContext.getCompletionItems(Visibility.private, leftBracketAlreadyThere, identifierAndBracketAfterCursor, rangeToReplace, symbolTable.method)\r\n                    .map(ci => {\r\n                        ci.sortText = \"aa\" + ci.label;\r\n                        return ci;\r\n                    })\r\n            );\r\n            completionItems.push(\r\n                {\r\n                    label: \"super\",\r\n                    filterText: \"super\",\r\n                    insertText: \"super.\",\r\n                    detail: \"Aufruf einer Methode einer Basisklasse\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined,\r\n                    command: {\r\n                        id: \"editor.action.triggerSuggest\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    }    \r\n                }\r\n            )\r\n        } else {\r\n            // Use filename to generate completion-item for class ... ?\r\n            let name = module.file?.name;\r\n            if (name != null) {\r\n                if (name.endsWith(\".java\")) name = name.substr(0, name.indexOf(\".java\"));\r\n                let m = name.match(/([\\wöäüÖÄÜß]*)$/);\r\n                if (module.classDefinitionsAST.length == 0 && m != null && m.length > 0 && m[0] == name && name.length > 0) {\r\n                    name = name.charAt(0).toUpperCase() + name.substring(1);\r\n                    completionItems.push({\r\n                        label: \"class \" + name,\r\n                        filterText: \"class\",\r\n                        insertText: \"class ${1:\" + name + \"} {\\n\\t$0\\n}\\n\",\r\n                        detail: \"Definition der Klasse \" + name,\r\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                        kind: monaco.languages.CompletionItemKind.Snippet,\r\n                        range: undefined\r\n                    },\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.getKeywordCompletion(symbolTable));\r\n\r\n\r\n        // console.log(\"Complete variable/Class/Keyword \" + text);\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterDot(dotMatch: RegExpMatchArray, position: monaco.Position, module: Module,\r\n        identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let textAfterDot = dotMatch[2];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let tStatic = module.getTypeAtPosition(position.lineNumber, dotColumn);\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        if (tStatic == null) return null;\r\n\r\n        let { type, isStatic } = tStatic;\r\n\r\n\r\n        // console.log(\"Complete element.praefix; praefix: \" + textAfterDot + \", Type: \" + (type == null ? null : type.identifier));\r\n\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(type, classContext);\r\n\r\n            if (isStatic) {\r\n                return Promise.resolve({\r\n                    suggestions: type.staticClass.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace)\r\n                });\r\n            } else {\r\n                return Promise.resolve({\r\n                    suggestions: type.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace, null)\r\n                });\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n            return Promise.resolve({\r\n                suggestions: type.getCompletionItems(leftBracketAlreadyThere,\r\n                    identifierAndBracketAfterCursor, rangeToReplace)\r\n            });\r\n        }\r\n\r\n        if (type instanceof ArrayType) {\r\n            return Promise.resolve({\r\n                suggestions: [\r\n                    {\r\n                        label: \"length\",\r\n                        filterText: \"length\",\r\n                        kind: monaco.languages.CompletionItemKind.Field,\r\n                        insertText: \"length\",\r\n                        range: rangeToReplace,\r\n                        documentation: {\r\n                            value: \"Anzahl der Elemente des Arrays\"\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getKeywordCompletion(symbolTable: SymbolTable): monaco.languages.CompletionItem[] {\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n        if (!this.isConsole && (symbolTable?.classContext == null || symbolTable?.method != null))\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"while(Bedingung){Anweisungen}\",\r\n                    detail: \"while-Wiederholung\",\r\n                    filterText: 'while',\r\n                    // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                    insertText: \"while($1){\\n\\t$0\\n}\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for( $1 ; $2 ; $3 ){\\n\\t$0\\n}\",\r\n                    detail: \"for-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(int i = 0; i < 10; i++){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for(int ${1:i} = 0; ${1:i} < ${2:10}; ${1:i}++){\\n\\t$0\\n}\",\r\n                    detail: \"Zähl-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"switch(){case...}\",\r\n                    // insertText: \"switch(${1:Selektor}){\\n\\tcase ${2:Wert_1}: {\\n\\t\\t ${3:Anweisungen}\\n\\t\\t}\\n\\tcase ${4:Wert_2}: {\\n\\t\\t ${0:Anweisungen}\\n\\t\\t}\\n}\",\r\n                    insertText: \"switch($1){\\n\\tcase $2:\\n\\t\\t $3\\n\\t\\tbreak;\\n\\tcase $4:\\n\\t\\t $5\\n\\t\\tbreak;\\n\\tdefault:\\n\\t\\t $0\\n}\",\r\n                    detail: \"switch-Anweisung\",\r\n                    filterText: 'switch',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){}\",\r\n                    // insertText: \"if(${1:Bedingung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"if($1){\\n\\t$0\\n}\",\r\n                    detail: \"Bedingung\",\r\n                    filterText: 'if',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){} else {}\",\r\n                    insertText: \"if($1){\\n\\t$2\\n}\\nelse {\\n\\t$0\\n}\",\r\n                    detail: \"Zweiseitige Bedingung\",\r\n                    filterText: 'if',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"else {}\",\r\n                    insertText: \"else {\\n\\t$0\\n}\",\r\n                    detail: \"else-Zweig\",\r\n                    filterText: 'el',\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n            ]);\r\n\r\n        if (symbolTable?.classContext == null || symbolTable?.method != null) {\r\n\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"instanceof\",\r\n                    insertText: \"instanceof $0\",\r\n                    detail: \"instanceof-Operator\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"print\",\r\n                    insertText: \"print($1);$0\",\r\n                    detail: \"Ausgabe (ggf. mit Farbe \\nals zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"println\",\r\n                    insertText: \"println($1);$0\",\r\n                    detail: \"Ausgabe mit Zeilenumbruch (ggf. mit \\nFarbe als zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n\r\n            ]);\r\n        }\r\n\r\n        if (!this.isConsole && (symbolTable == null || symbolTable.classContext == null)) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"class\",\r\n                    filterText: \"class\",\r\n                    insertText: \"class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public class\",\r\n                    filterText: \"public class\",\r\n                    insertText: \"public class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Öffentliche Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n\r\n            ]);\r\n        } else if (!this.isConsole && symbolTable?.method == null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"public\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public \",\r\n                    detail: \"Schlüsselwort public\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public void method(){}\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public ${1:void} ${2:Bezeichner}(${3:Parameter}) {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Methodendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"protected\",\r\n                    filterText: \"protected\",\r\n                    insertText: \"protected \",\r\n                    detail: \"Schlüsselwort protected\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"static\",\r\n                    filterText: \"static\",\r\n                    insertText: \"static \",\r\n                    detail: \"Schlüsselwort static\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"private\",\r\n                    filterText: \"private\",\r\n                    insertText: \"private \",\r\n                    detail: \"Schlüsselwort private\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        if (symbolTable != null && symbolTable.method != null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"return\",\r\n                    filterText: \"return\",\r\n                    insertText: \"return\",\r\n                    detail: \"Schlüsselwort return\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n    getOverridableMethodsCompletion(classContext: Klass) {\r\n\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let methods: Method[] = [];\r\n        let c = classContext.baseClass;\r\n        while (c != null) {\r\n            methods = methods.concat(c.methods.filter((m) => {\r\n                if (m.isAbstract || (m.program == null && m.invoke == null) || m.identifier.startsWith('onMouse') || m.identifier.startsWith('onKey')) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }));\r\n            c = c.baseClass;\r\n        }\r\n\r\n        for (let i of classContext.implements) {\r\n            methods = methods.concat(i.getMethods());\r\n        }\r\n\r\n        for (let m of methods) {\r\n\r\n            let alreadyImplemented = false;\r\n            for (let m1 of classContext.methods) {\r\n                if (m1.signature == m.signature) {\r\n                    alreadyImplemented = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (alreadyImplemented) continue;\r\n\r\n            let label: string = (m.isAbstract ? \"implement \" : \"override \") + m.getCompletionLabel();\r\n            let filterText = m.identifier;\r\n            let insertText = Visibility[m.visibility] + \" \" + (m.getReturnType() == null ? \"void\" : m.getReturnType().identifier) + \" \";\r\n            insertText += m.identifier + \"(\";\r\n            for (let i = 0; i < m.getParameterList().parameters.length; i++) {\r\n                let p = m.getParameterList().parameters[i];\r\n                insertText += m.getParameterType(i).identifier + \" \" + p.identifier;\r\n                if (i < m.getParameterCount() - 1) {\r\n                    insertText += \", \";\r\n                }\r\n            }\r\n            insertText += \") {\\n\\t$0\\n}\";\r\n\r\n            keywordCompletionItems.push(\r\n                {\r\n                    label: label,\r\n                    detail: (m.isAbstract ? \"Implementiere \" : \"Überschreibe \") + \"die Methode \" + label + \" der Basisklasse.\",\r\n                    filterText: filterText,\r\n                    insertText: insertText,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            );\r\n\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n}","import { Klass, Interface, Visibility } from \"./Class.js\";\r\nimport { Method, Attribute, Type, PrimitiveType, Variable } from \"./Types.js\";\r\nimport { objectType } from \"./PrimitiveTypes.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { formatAsJavadocComment } from \"../../tools/StringTools.js\";\r\n\r\nexport function getDeclarationAsString(element: Klass | Interface | Method | Attribute | Variable,\r\n    indent: string = \"\", short: boolean = false): string {\r\n\r\n    if (element instanceof Klass) {\r\n\r\n        if (element.isTypeVariable) {\r\n            return getTypeVariableDeclaration(element);\r\n        }\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\") {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                // s += indent + \"/**  \\n\" + element.documentation + \"  \\n**/  \\n\" + indent;\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n        if (element.isAbstract) s += \"abstract \";\r\n        s += \"class \" + element.identifier + \" \";\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            s += getGenericParameterDefinition(element);\r\n        }\r\n\r\n\r\n        if (element.baseClass != null && element.baseClass.identifier != \"Object\") {\r\n            s += \"extends \" + element.baseClass.identifier + \" \";\r\n            if (element.baseClass.typeVariables.length > 0) {\r\n                s += getGenericParameterDefinition(element.baseClass);\r\n            }\r\n        }\r\n\r\n        if (element.implements != null && element.implements.length > 0) {\r\n            s += \"implements \";\r\n            for (let i = 0; i < element.implements.length; i++) {\r\n                s += element.implements[i].identifier;\r\n                if (element.implements[i].typeVariables.length > 0) {\r\n                    s += getGenericParameterDefinition(element.implements[i]);\r\n                }\r\n                if (i < element.implements.length - 1) {\r\n                    s += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (short) return s;\r\n\r\n        s += indent + \"{\\n  \";\r\n\r\n        for (let a of element.getAttributes(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let a of element.staticClass.getAttributes(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n        for (let m of element.getMethods(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let m of element.staticClass.getMethods(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n\r\n        s += \"\\n}\";\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    if (element instanceof Interface) {\r\n\r\n        let decl = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                decl += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                decl += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        decl += indent + \"interface \" + element.identifier;\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            decl += getGenericParameterDefinition(element);\r\n        }\r\n\r\n        if (element.extends != null && element.extends.length > 0) {\r\n            decl += \"extends \";\r\n            for (let i = 0; i < element.extends.length; i++) {\r\n                decl += element.extends[i].identifier;\r\n                if (element.extends[i].typeVariables.length > 0) {\r\n                    decl += getGenericParameterDefinition(element.extends[i]);\r\n                }\r\n                if (i < element.extends.length - 1) {\r\n                    decl += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!short) {\r\n\r\n            decl += \"{\\n\";\r\n\r\n            for (let m of element.methods) {\r\n                decl += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n\r\n            decl += \"\\n}\";\r\n        }\r\n\r\n        return decl;\r\n\r\n    }\r\n\r\n    if (element instanceof Attribute) {\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        s += getTypeIdentifier(element.type) + \" \" + element.identifier;\r\n\r\n        return s;\r\n    }\r\n\r\n    if (element instanceof Method) {\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        if (element.getReturnType() != null) {\r\n            s += getTypeIdentifier(element.getReturnType()) + \" \";\r\n        } else {\r\n            s += element.isConstructor ? \"\" : \"void \";\r\n        }\r\n\r\n        s += element.identifier + \"(\";\r\n\r\n        let parameters = element.getParameterList().parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            let type: Type = element.getParameterType(i);\r\n\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            s += getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n\r\n            if (i < parameters.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        s += \")\";\r\n\r\n        return s;\r\n\r\n\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nfunction getTypeVariableDeclaration(element: Klass) {\r\n    let s: string = element.identifier;\r\n\r\n    if (element.isGenericVariantFrom != objectType) s += \" extends \" + getTypeIdentifier(element.isGenericVariantFrom);\r\n    if (element.implements.length > 0) {\r\n        let implList = element.implements.filter(impl => element.isGenericVariantFrom.implements.indexOf(impl) < 0)\r\n            .map(impl => getTypeIdentifier(impl)).join(\", \");\r\n        if (implList != \"\") {\r\n            s += \" implements \" + implList;\r\n        }\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if (type instanceof Klass || type instanceof Interface) {\r\n        if (type.typeVariables.length > 0) {\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type.isGenericVariantFrom?.identifier) : type.identifier)\r\n                + \"<\";\r\n            s += type.typeVariables.map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n\r\nexport function getGenericParameterDefinition(element: Klass | Interface): string {\r\n\r\n    let s: string = \"\";\r\n\r\n    if (element.typeVariables.length > 0) {\r\n        s = \"<\";\r\n\r\n        let typeList: string[] = [];\r\n        for (let tv of element.typeVariables) {\r\n            let t: string = tv.type.identifier;\r\n            let k: Klass = tv.type;\r\n            if (k.isGenericVariantFrom != null && k.isGenericVariantFrom.identifier != \"Object\") {\r\n                t += \" extends \" + k.isGenericVariantFrom.identifier;\r\n            }\r\n            if (k.implements != null) {\r\n\r\n                let implList = k.implements;\r\n                if (k.isGenericVariantFrom != null) {\r\n                    implList = implList.filter(impl => k.isGenericVariantFrom.implements.indexOf(impl) < 0);\r\n                }\r\n\r\n                for (let im of implList) {\r\n                    t += \" & \" + im.identifier;\r\n                }\r\n            }\r\n            typeList.push(t);\r\n        }\r\n\r\n        s += typeList.join(\", \");\r\n        s += \"> \";\r\n    }\r\n\r\n    return s;\r\n}","import { Main } from \"../Main.js\";\r\nimport { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { sign } from \"crypto\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { getTypeIdentifier } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model == this.main.getBottomDiv()?.console?.editor?.getModel());\r\n\r\n        if (!isConsole && model != this.main.getMonacoEditor().getModel()) {\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                if (isConsole) {\r\n                    this.main.getBottomDiv()?.console?.compileIfDirty();\r\n                } else {\r\n                    this.main.compileIfDirty();\r\n                }\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        if ((typeof methodCallPosition.possibleMethods) == \"string\") {\r\n            signatureInformationList = signatureInformationList.concat(this.makeIntrinsicSignatureInformation(<string>methodCallPosition.possibleMethods, parameterIndex));\r\n        } else {\r\n            for (let method of methodCallPosition.possibleMethods) {\r\n                let m = <Method>method;\r\n                if (m.getParameterCount() > parameterIndex) {\r\n\r\n                    signatureInformationList = signatureInformationList.concat(this.makeSignatureInformation(m));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n    makeIntrinsicSignatureInformation(method: string, parameterIndex: number): monaco.languages.SignatureInformation[] {\r\n\r\n        switch (method) {\r\n            case \"while\":\r\n                return [\r\n                    {\r\n                        label: \"while(Bedingung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit Anfangsbedingung (while-loop)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                        ]\r\n                    }];\r\n            case \"if\":\r\n                return [\r\n                    {\r\n                        label: \"if(Bedingung){ Anweisungen1 } else { Anweisungen2 }\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Ist die Bedingung erfüllt (d.h. hat sie den Wert true), so werden die Anweisungen1 ausgeführt. Trifft die Bedingung nicht zu (d.h. hat sie den Wert false), so werden die Anweisungen2 ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"switch\":\r\n                return [\r\n                    {\r\n                        label: \"switch(Selektor){case Wert_1: Anweisungen1; break; case Wert_2 Anweisungen2; break; default: Defaultanweisungen; break;}\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Selektor\", documentation: \"Der Wert des Selektor-Terms wird ausgewertet. Hat er den Wert Wert_1, so werden die Anweisungen1 ausgeführt. Hat er den Wert Wert_2, so werden die Anweisungen2 ausgeführt usw. Hat er keinen der bei case... aufgeführten Werte, so werden die Defaultanweisungen ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"for\":\r\n                return [\r\n                    {\r\n                        label: \"for(Startanweisung; Bedingung; Anweisung am Ende jeder Wiederholung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit for (for-loop)\",\r\n                        parameters: [\r\n                            { label: \"Startanweisung\", documentation: \"Diese Anweisung wird vor der ersten Wiederholung einmal ausgeführt.\" },\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                            { label: \"Anweisung am Ende jeder Wiederholung\", documentation: \"Diese Anweisung wird stets am Ende jeder Wiederholung ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"print\":\r\n                let methods: monaco.languages.SignatureInformation[] =\r\n                    [\r\n                        {\r\n                            label: \"print(text: String, color: String)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255)) oder statisches Attribut der Klasse Color, z.B. Color.red\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String, color: int)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe als int-Wert kodiert, z.B. 0xff00ff\" },\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String)\",\r\n                            documentation: \"Gibt Text in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                            ]\r\n                        }\r\n                    ];\r\n                return methods;\r\n            case \"println\":\r\n\r\n                return [\r\n                    {\r\n                        label: \"println(text: String, color: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255) oder statisches Attribut der Klasse Color, z.B. Color.red)\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String, color: int)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: int\", documentation: \"Farbe als int-kodierter Wert, z.B. 0xffffff\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                        ]\r\n                    },\r\n                ];\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeSignatureInformation(method: Method): monaco.languages.SignatureInformation[] {\r\n\r\n        let label: string = \"\";\r\n\r\n        if (method.getReturnType() != null && !method.isConstructor) {\r\n            label += getTypeIdentifier(method.getReturnType()) + \" \";\r\n        }\r\n\r\n        label += method.identifier + \"(\";\r\n\r\n        let parameterInformationList: monaco.languages.ParameterInformation[] = [];\r\n\r\n        let pl = method.getParameterList().parameters;\r\n\r\n        for (let i = 0; i < pl.length; i++) {\r\n\r\n            let p = pl[i];\r\n            let posFrom = label.length;\r\n            let type = p.type;\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            let pLabel = getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n            label += pLabel;\r\n            let posTo = label.length;\r\n\r\n            if (i < pl.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n            let pi: monaco.languages.ParameterInformation = {\r\n                label: [posFrom, posTo],\r\n                documentation: \"\" //Test: Parameter documentation\"\r\n            };\r\n\r\n            parameterInformationList.push(pi);\r\n\r\n        }\r\n\r\n\r\n\r\n        label += \")\";\r\n\r\n        return [{\r\n            label: label,\r\n            parameters: parameterInformationList,\r\n            documentation: method.documentation == null ? \"\" : method.documentation\r\n        }]\r\n\r\n    }\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString, getGenericParameterDefinition } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"|\": \"```\\na | b\\n```  \\n (sprich: 'a or b') berechnet die **bitweise oder-Verknüpfung** der Werte a und b.\",\r\n        \"&\": \"```\\na & b\\n```  \\n (sprich: 'a und b') berechnet die **bitweise und-Verknüpfung** der Werte a und b.\",\r\n        \"^\": \"```\\na ^ b\\n```  \\n (sprich: 'a xor b') berechnet die **bitweise exklusiv-oder-Verknüpfung** der Werte a und b.\",\r\n        \">>\": \"```\\na >> b\\n```  \\n (sprich: 'a right shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach rechts verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a/(2 hoch b).\",\r\n        \"<<\": \"```\\na >> b\\n```  \\n (sprich: 'a left shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach links verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a*(2 hoch b).\",\r\n        \"~\": \"```\\n~a\\n```  \\n (sprich: 'nicht a') berechnet den Wert, der entsteht, wenn man **alle Bits von a umkehrt**.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwort ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n        \"var\": \"```\\nvar\\n```  \\nWird einer Variable beim Deklarieren sofort ein Startwert zugewiesen (z.B. Circle c = new Circle(100, 100, 10)), so kann statt des Datentyps das Schlüsselwort ```var``` verwendet werden (also var c = new Circle(100, 100, 10)).\",\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null && element.identifier != \"var\") {\r\n            if (element instanceof Klass || element instanceof Method || element instanceof Interface\r\n                || element instanceof Attribute) {\r\n                declarationAsString = getDeclarationAsString(element);\r\n            } else if (element instanceof PrimitiveType) {\r\n                declarationAsString = \"```\\n\" + element.identifier + \"\\n```  \\nprimitiver Datentyp: \" + element.description + \"\";\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: declarationAsString }],\r\n                }\r\n            } else {\r\n                // Variable\r\n                let typeIdentifier: string = element?.type?.identifier;\r\n                if(element?.type instanceof Klass || element?.type instanceof Interface){\r\n                    typeIdentifier += \" \" + getGenericParameterDefinition(element.type);\r\n                }\r\n\r\n                if (typeIdentifier == null) {\r\n                    typeIdentifier = \"\";\r\n                } else {\r\n                    typeIdentifier += \" \";\r\n                }\r\n\r\n                declarationAsString = typeIdentifier + element?.identifier;\r\n            }\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n        let state = this.editor.main.getInterpreter().state;\r\n\r\n        let value: string = null;\r\n\r\n        if (state == InterpreterState.paused) {\r\n            let evaluator = this.editor.main.getCurrentWorkspace().evaluator;\r\n\r\n            let identifier: string = this.widenDeclaration(model, position, element?.identifier);\r\n\r\n            if(identifier == null){\r\n                return null;\r\n            }\r\n\r\n            let result = evaluator.evaluate(identifier);\r\n            if (result.error == null && result.value != null) {\r\n                value = result.value.type.debugOutput(result.value);\r\n                declarationAsString = identifier;\r\n            }\r\n\r\n        }\r\n\r\n        let contents = [];\r\n\r\n        if (value == null && declarationAsString.length == 0) {\r\n            return null;\r\n        }\r\n\r\n        if (value != null) {\r\n            if (value.length + declarationAsString.length > 40) {\r\n                contents.push({ value: '```\\n' + declarationAsString + ' ==\\n```' });\r\n                contents.push({ value: '```\\n' + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            } else {\r\n                contents.push({ value: '```\\n' + declarationAsString + \" == \" + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            }\r\n        } else {\r\n            contents.push({ value: '```\\n' + declarationAsString + '\\n```' });\r\n        }\r\n\r\n        let range = null;\r\n\r\n        return {\r\n            range: range,\r\n            contents: contents,\r\n        }\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyColorProvider implements monaco.languages.DocumentColorProvider {\r\n    \r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    provideDocumentColors(model: monaco.editor.ITextModel, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorInformation[]> {\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        let isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n    \r\n        if(this.main.getCompiler() == null){\r\n            let that = this;\r\n            let i = 3;\r\n            return new Promise(function(resolve, reject){\r\n\r\n                let f = () => {\r\n                    if(that.main.getCompiler() != null){\r\n                        that.main.compileIfDirty();\r\n                        resolve(module.colorInformation);\r\n                    } else {\r\n                        i--;\r\n                        if(i == 0){\r\n                            resolve([]);\r\n                        } else {\r\n                            setTimeout(f, 500);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                setTimeout(f, 500);       \r\n            })\r\n        }\r\n\r\n        this.main.compileIfDirty();\r\n        \r\n        return module.colorInformation;\r\n\r\n    }\r\n\r\n    provideColorPresentations(model: monaco.editor.ITextModel, colorInfo: monaco.languages.IColorInformation, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorPresentation[]> {\r\n        var color = colorInfo.color;\r\n        var oldColor: string = model.getValueInRange(colorInfo.range);\r\n\r\n        var red256 = Math.round(color.red * 255);\r\n        var green256 = Math.round(color.green * 255);\r\n        var blue256 = Math.round(color.blue * 255);\r\n        var label;\r\n\r\n        let hex6Digits = this.toHex2Digits(red256) + this.toHex2Digits(green256) + this.toHex2Digits(blue256);\r\n        let rgbCommaSeparated = red256 + ', ' + green256 + ', ' + blue256;\r\n\r\n        if(oldColor.startsWith('#')){\r\n            label = '#' + hex6Digits; \r\n        } else if(oldColor.startsWith('0x') ){\r\n            label = '0x' + hex6Digits;\r\n        } else if(oldColor.startsWith('rgb')){\r\n            if(color.alpha < 0.999){\r\n                label = 'rgba(' + rgbCommaSeparated + ', ' + color.alpha + ')';\r\n            } else {\r\n                label = 'rgb(' + rgbCommaSeparated + ')';\r\n            }\r\n        } else if(oldColor.startsWith(\"new\") || oldColor.startsWith('Color')){\r\n            label = 'new Color(' + rgbCommaSeparated + ')';\r\n        }\r\n\r\n        return [\r\n            {\r\n                label: label\r\n            }\r\n        ];\r\n    }\r\n\r\n    toHex2Digits(n: number){\r\n        let hex = n.toString(16);\r\n        while(hex.length < 2){\r\n            hex = '0' + hex;\r\n        }\r\n        return hex;\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { MySemanticTokenProvider } from \"./MySemanticTokenProvider.js\";\r\nimport { MyColorProvider } from \"./MyColorProvider.js\";\r\n\r\nexport type HistoryEntry = {\r\n    module_id: number,\r\n    workspace_id: number,\r\n    position: monaco.Position;\r\n}\r\n\r\nexport class Editor implements monaco.languages.RenameProvider {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    highlightCurrentMethod: boolean = true;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    lastPosition: HistoryEntry;\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineMyJava();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'print', foreground: 'dcdcaa', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: 'b5cea8' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: '9cdcfe' },\r\n                { token: 'statement', foreground: 'bb96c0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '68bed4', fontStyle: 'bold' },\r\n                { token: 'string3', foreground: 'ff0000' },\r\n\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n\r\n                // semantic tokens:\r\n                {token: 'property', foreground: 'ffffff' ,fontStyle: 'bold'},\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightMethod\": \"#2b2b7d\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'print', foreground: '811f3f', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '001080' },\r\n                { token: 'statement', foreground: '8000e0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightMethod\": \"#babaec\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'myJava',\r\n            \"semanticHighlighting.enabled\": true,\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            //@ts-ignore\r\n            fontFamily: window.javaOnlineFont == null ? \"Consolas, Roboto Mono\" : window.javaOnlineFont,\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.onKeyDown((e: monaco.IKeyboardEvent) => {\r\n            let state = this.main.getInterpreter().state;\r\n\r\n            if ([InterpreterState.done, InterpreterState.error, InterpreterState.not_initialized].indexOf(state) < 0) {\r\n\r\n                if (e.code.indexOf(\"Arrow\") >= 0 || e.code.indexOf(\"Page\") >= 0) return; // don't react to Cursor keys\r\n\r\n                this.main.getActionManager().trigger(\"interpreter.stop\");\r\n            }\r\n        });\r\n\r\n        // this.uri = monaco.Uri.from({ path: '/file1.java', scheme: 'file' })\r\n        // this.modelJava = monaco.editor.createModel(\"\", \"myJava\", this.uri);\r\n        // this.editor.setModel(this.modelJava);\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n        if (!this.isEmbedded) {\r\n\r\n            let _main: Main = <Main>this.main;\r\n\r\n            _main.windowStateManager.registerBackButtonListener((event: PopStateEvent) => {\r\n                let historyEntry: HistoryEntry = <HistoryEntry>event.state;\r\n                if(event.state == null) return;\r\n                let workspace: Workspace = _main.workspaceList.find((ws) => ws.id == historyEntry.workspace_id);\r\n                if(workspace == null) return;\r\n                let module: Module = workspace.moduleStore.findModuleById(historyEntry.module_id);\r\n                if(module == null) return; \r\n\r\n                // console.log(\"Processing pop state event, returning to module \" + historyEntry.module_id);\r\n\r\n                if(workspace != _main.currentWorkspace) \r\n                {\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setWorkspaceActive(workspace);\r\n                    that.dontPushNextCursorMove--;\r\n                }\r\n                if(module != _main.getCurrentlyEditedModule()){\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setModuleActive(module);\r\n                    that.dontPushNextCursorMove--;\r\n                } \r\n                that.dontPushNextCursorMove++;\r\n                that.editor.setPosition(historyEntry.position);\r\n                that.editor.revealPosition(historyEntry.position);\r\n                that.dontPushNextCursorMove--;\r\n                that.pushHistoryState(true, historyEntry);\r\n            });\r\n        }\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            let currentModelId = this.main.getCurrentlyEditedModule()?.file?.id;\r\n            if(currentModelId == null) return;\r\n            let pushNeeded = this.lastPosition == null\r\n                || event.source == \"api\"\r\n                || currentModelId != this.lastPosition.module_id\r\n                || Math.abs(this.lastPosition.position.lineNumber - event.position.lineNumber) > 20;\r\n            \r\n            if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                this.pushHistoryState(false, this.getPositionForHistory());\r\n            } else if(currentModelId == history.state?.module_id){\r\n\r\n                    this.pushHistoryState(true, this.getPositionForHistory());\r\n            }\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n            that.onEvaluateSelectedText(event);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                // if(!this.dontPushHistoryStateOnNextModelChange){\r\n                //     this.lastPosition = {\r\n                //         position: this.editor.getPosition(),\r\n                //         workspace_id: this.main.getCurrentWorkspace().id,\r\n                //         module_id: module.file.id\r\n                //     }\r\n                //     this.pushHistoryState(false);\r\n                // }\r\n                // this.dontPushHistoryStateOnNextModelChange = false;\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n\r\n                let pushNeeded = this.lastPosition == null\r\n                    || module.file.id != this.lastPosition.module_id;\r\n                \r\n                if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                    this.pushHistoryState(false, this.getPositionForHistory());\r\n                }    \r\n\r\n            }\r\n\r\n        });\r\n\r\n//        monaco.languages.registerDocumentRangeSemanticTokensProvider('myJava', new MySemanticTokenProvider(this.main));\r\n\r\n        monaco.languages.registerRenameProvider('myJava', this);\r\n        monaco.languages.registerColorProvider('myJava', new MyColorProvider(this.main));\r\n\r\n        monaco.languages.registerDefinitionProvider('myJava', {\r\n            provideDefinition: (model, position, cancellationToken) => {\r\n                return that.provideDefinition(model, position, cancellationToken);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('myJava', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('myJava', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('myJava', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('myJava', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('myJava', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        // console.log(this.editor.getSupportedActions().map(a => a.id));\r\n\r\n        return this.editor;\r\n    }\r\n\r\n    getPositionForHistory(): HistoryEntry {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if(module == null) return;\r\n        \r\n        return {\r\n            position: this.editor.getPosition(),\r\n            workspace_id: this.main.getCurrentWorkspace().id,\r\n            module_id: this.main.getCurrentlyEditedModule().file.id\r\n        }\r\n    }\r\n\r\n    lastPushTime: number = 0;\r\n    pushHistoryState(replace: boolean, historyEntry: HistoryEntry){\r\n\r\n        if(this.main.isEmbedded() || historyEntry == null) return;\r\n\r\n        if(replace){\r\n            history.replaceState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${this.lastPosition.position.lineNumber}, Spalte ${this.lastPosition.position.column})`);\r\n            // console.log(\"Replace History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        } else {\r\n            let time = new Date().getTime();\r\n            if(time - this.lastPushTime > 200){\r\n                history.pushState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${historyEntry.position.lineNumber}, Spalte ${historyEntry.position.column})`);\r\n            } else {\r\n                history.replaceState(historyEntry, \"\");\r\n            }\r\n            this.lastPushTime = time;\r\n            // console.log(\"Pushed History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        }\r\n\r\n        this.lastPosition = historyEntry;\r\n    }\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertTextAndSetCursor = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if(!nextLine.trim().startsWith(\"*\")){\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertTextAndSetCursor(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertTextAndSetCursor(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        } else if(text == '\"') {\r\n            //a: x| -> x\"|\"\r\n            //d: \"|x -> \"\"|x\r\n            //c: \"|\" -> \"\"\"\\n|\\n\"\"\"\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const selection = this.editor.getSelection();\r\n\r\n            const isSelected = selection.startColumn != selection.endColumn || selection.startLineNumber != selection.endLineNumber;\r\n\r\n            const line = model.getLineContent(position.lineNumber);\r\n            let doInsert: boolean = true;\r\n            let charBefore: string = \"x\";\r\n            if(position.column > 1){\r\n                charBefore = line.charAt(position.column - 3);\r\n            }\r\n            let charAfter: string = \"x\";\r\n            if(position.column - 1 < line.length){\r\n                charAfter = line.charAt(position.column - 1);\r\n            }\r\n\r\n            if(!isSelected){\r\n                if(charBefore != '\"'){\r\n                    insertTextAndSetCursor(position, '\"', position.lineNumber, position.column);\r\n                } else if(charAfter == '\"'){\r\n                    let pos1 = {...position, column: position.column + 1};\r\n                    insertTextAndSetCursor(pos1, '\\n\\n\"\"\"', position.lineNumber + 1, 1);\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n            let bottomDiv1 = this.main.getBottomDiv();\r\n            if (bottomDiv1 != null && bottomDiv1.console != null) {\r\n                bottomDiv1.console.editor.updateOptions({\r\n                    fontSize: fontSizePx / factor\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        let bottomDiv = this.main.getBottomDiv();\r\n        if (bottomDiv != null && bottomDiv.console != null) {\r\n            let $commandLine = bottomDiv.$bottomDiv.find('.jo_commandline');\r\n            $commandLine.css({\r\n                height: (fontSizePx * 1.1 + 4) + \"px\",\r\n                \"line-height\": (fontSizePx * 1.1 + 4) + \"px\"\r\n            })\r\n            bottomDiv.console.editor.layout();\r\n        }\r\n\r\n\r\n        // let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        // console.log({editorFS: editorfs, newFs: fontSizePx, newEditorFs: newEditorfs});\r\n\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // Strg + # funktioniert bei Firefox nicht, daher alternativ Strg + ,:\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Toggle line comment',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Zeilenkommentar ein-/ausschalten',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.US_COMMA ],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'insert',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                console.log('Hier!');\r\n                ed.getAction('editor.action.commentLine').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onEvaluateSelectedText(event: monaco.editor.ICursorPositionChangedEvent) {\r\n\r\n        let that = this;\r\n\r\n        if (that.cw != null) {\r\n            that.editor.removeContentWidget(that.cw);\r\n            that.cw = null;\r\n        }\r\n\r\n        if (that.main.getInterpreter().state == InterpreterState.paused) {\r\n\r\n            let model = that.editor.getModel();\r\n            let text = model.getValueInRange(that.editor.getSelection());\r\n            if (text != null && text.length > 0) {\r\n                let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n                let result = evaluator.evaluate(text);\r\n                if (result.error == null && result.value != null) {\r\n                    let v = result.value.type.debugOutput(result.value);\r\n\r\n                    monaco.editor.colorize(text + \": \", 'myJava', { tabSize: 3 }).then((text) => {\r\n                        if (text.endsWith(\"<br/>\")) text = text.substr(0, text.length - 5);\r\n                        that.cw = {\r\n                            getId: function () {\r\n                                return 'my.content.widget';\r\n                            },\r\n                            getDomNode: function () {\r\n                                let dn = jQuery('<div class=\"jo_editorTooltip jo_codeFont\">' + text + v + '</div>');\r\n                                return dn[0];\r\n                            },\r\n                            getPosition: function () {\r\n                                return {\r\n                                    position: event.position,\r\n                                    preference: [monaco.editor.ContentWidgetPositionPreference.ABOVE, monaco.editor.ContentWidgetPositionPreference.BELOW]\r\n                                };\r\n                            }\r\n                        };\r\n                        that.editor.addContentWidget(that.cw);\r\n\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        module.toggleBreakpoint(lineNumber, true);\r\n\r\n        if (this.main.getInterpreter().moduleStore != null) {\r\n            let runningModule = this.main.getInterpreter().moduleStore.findModuleByFile(module.file);\r\n            if (runningModule != null) runningModule.toggleBreakpoint(lineNumber, false);\r\n        }\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (this.highlightCurrentMethod) {\r\n\r\n            let method = module.getMethodDeclarationAtPosition(position);\r\n            if (method != null) {\r\n                decorations.push({\r\n                    range: { startColumn: 0, startLineNumber: method.position.line, endColumn: 100, endLineNumber: method.scopeTo.line },\r\n                    options: {\r\n                        className: 'jo_highlightMethod', isWholeLine: true, overviewRuler: {\r\n                            color: { id: \"jo_highlightMethod\" },\r\n                            darkColor: { id: \"jo_highlightMethod\" },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: 'jo_highlightMethod' },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n    dontDetectLastChange() {\r\n        // this.dontDetectLastChanging = true;\r\n    }\r\n\r\n    resolveRenameLocation(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.RenameLocation & monaco.languages.Rejection> {\r\n\r\n            let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n            if (currentlyEditedModule == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n            \r\n            let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n            if (element == null || element.declaration == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n    \r\n            let pos = element.declaration.position;\r\n\r\n            return {\r\n                range: {startColumn: position.column, startLineNumber: position.lineNumber, endLineNumber: position.lineNumber, endColumn: position.column + pos.length},\r\n                text: element.identifier\r\n            };\r\n\r\n    }\r\n\r\n    provideRenameEdits(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        newName: string, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.WorkspaceEdit & monaco.languages.Rejection> {\r\n\r\n        let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n        if (currentlyEditedModule == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let resourceEdits: monaco.languages.WorkspaceTextEdit[] = [];\r\n\r\n        usagePositions.forEach((usagePositionsInModule, module) => {\r\n            if (usagePositionsInModule != null) {\r\n                let edits: monaco.languages.TextEdit[] = [];\r\n                for (let up of usagePositionsInModule) {\r\n                    resourceEdits.push(\r\n                        {\r\n                            resource: module.uri, edit:\r\n                            {\r\n                                range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length },\r\n                                text: newName\r\n                            }\r\n                        });\r\n                }\r\n                if (edits.length > 0) {\r\n                    module.file.dirty = true;\r\n                    module.file.saved = false;\r\n                    module.file.identical_to_repository_version = false;\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n//        console.log(resourceEdits);\r\n\r\n        return {\r\n            edits: resourceEdits\r\n        }\r\n\r\n    }\r\n\r\n    provideDefinition(model: monaco.editor.ITextModel, position: monaco.Position, cancellationToken: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Definition> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) return null;\r\n\r\n        let decl = element.declaration;\r\n\r\n        if (decl == null) {\r\n            // class from Base-Module? Let definition point to current position, so that ctrl + click opens peek references widget\r\n            if (element instanceof Klass || element instanceof Enum || element instanceof Interface || element instanceof Method || element instanceof Attribute) {\r\n                return Promise.resolve({\r\n                    range: {\r\n                        startLineNumber: position.lineNumber, endLineNumber: position.lineNumber,\r\n                        startColumn: position.column, endColumn: position.column + element.identifier.length\r\n                    },\r\n                    uri: module.uri\r\n                });\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            range: {\r\n                startLineNumber: decl.position.line, endLineNumber: decl.position.line,\r\n                startColumn: decl.position.column, endColumn: decl.position.column + decl.position.length\r\n            },\r\n            uri: decl.module.uri\r\n        });\r\n\r\n    }\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineMyJava() {\r\n    monaco.languages.register({ id: 'myJava', \r\n    extensions: ['.learnJava'],\r\n    //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        indentationRules: {\r\n            // ^(.*\\*/)?\\s*\\}.*$\r\n            decreaseIndentPattern: /^(.*\\*\\/)?\\s*\\}.*$/,\r\n            // ^.*\\{[^}\"']*$\r\n            increaseIndentPattern: /^.*\\{[^}\"']*$/\r\n        },\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                // beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                beforeText: /^(\\t|(\\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        // the default separators except `@$`\r\n        wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n        comments: {\r\n            lineComment: '//',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')'],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            // { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n            { open: '<', close: '>' },\r\n        ],\r\n        folding: {\r\n            markers: {\r\n                start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n                end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n            }\r\n        },\r\n\r\n    };\r\n    let language = {\r\n        defaultToken: '',\r\n        tokenPostfix: '.java',\r\n        keywords: [\r\n            'abstract', 'continue', 'new', 'switch', 'assert', 'default',\r\n            'goto', 'package', 'synchronized', 'private',\r\n            'this', 'implements', 'protected', 'throw',\r\n            'import', 'public', 'throws', 'case', 'instanceof', 'return',\r\n            'transient', 'catch', 'extends', 'try', 'final',\r\n            'static', 'finally', 'strictfp',\r\n            'volatile', 'const', 'native', 'super', 'true', 'false', 'null'\r\n        ],\r\n        print: ['print', 'println'],\r\n        statements: ['for', 'while', 'if', 'then', 'else', 'do', 'break', 'continue'],\r\n        types: ['int', 'boolean', 'char', 'float', 'double', 'long', 'void', 'byte', 'short',\r\n        'class', 'enum', 'interface', 'var'],\r\n        operators: [\r\n            '=', '>', '<', '!', '~', '?', ':',\r\n            '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n            '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n            '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n            '^=', '%=', '<<=', '>>=', '>>>='\r\n        ],\r\n        // we include these common regular expressions\r\n        symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        digits: /\\d+(_+\\d+)*/,\r\n        octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n        binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n        hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n        // The main tokenizer for our languages\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                // [/[a-zA-Z_$][\\w$]*/, {\r\n                [/\\.[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@print': { token: 'print.$0' },\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöüß][\\w$äöüßÄÖÜ]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*/, 'class'],\r\n                // whitespace\r\n                { include: '@whitespace' },\r\n                // delimiters and operators\r\n                [/[{}()\\[\\]]/, '@brackets'],\r\n                [/[<>](?!@symbols)/, '@brackets'],\r\n                [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n                // @ annotations.\r\n                [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n                // numbers\r\n                [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n                [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n                [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n                [/(@digits)[fFdD]/, 'number.float'],\r\n                [/(@digits)[lL]?/, 'number'],\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, 'delimiter'],\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n                [/\"\"\"/, 'string', '@string'],\r\n                [/\"/, 'string', '@string'],\r\n                // characters\r\n                [/'[^\\\\']'/, 'string'],\r\n                [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n                [/'/, 'string.invalid']\r\n            ],\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, ''],\r\n                [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\r\n                [/\\/\\*/, 'comment', '@comment'],\r\n                [/\\/\\/.*$/, 'comment'],\r\n            ],\r\n            comment: [\r\n                [/[^\\/*]+/, 'comment'],\r\n                // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n                // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n                [/\\*\\//, 'comment', '@pop'],\r\n                [/[\\/*]/, 'comment']\r\n            ],\r\n            //Identical copy of comment above, except for the addition of .doc\r\n            javadoc: [\r\n                [/[^\\/*]+/, 'comment.doc'],\r\n                // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\r\n                [/\\/\\*/, 'comment.doc.invalid'],\r\n                [/\\*\\//, 'comment.doc', '@pop'],\r\n                [/[\\/*]/, 'comment.doc']\r\n            ],\r\n            string: [\r\n                [/[^\\\\\"]+/, 'string'],\r\n                [/@escapes/, 'string.escape'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/\"\"\"/, 'string', '@pop'],\r\n                [/\"/, 'string', '@pop']\r\n            ],\r\n            \r\n        },\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('myJava', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('myJava', language);\r\n\r\n    // monaco.languages.registerCompletionItemProvider(\"myJava\", {    // Or any other language...\r\n    //     provideCompletionItems: (model, position) => {\r\n    //         // Retrieve the text until the current cursor's position, anything\r\n    //         // after that doesn't really matter.\r\n    //         var textToMatch = model.getValueInRange({\r\n    //             startLineNumber: 1,\r\n    //             startColumn: 1,\r\n    //             endLineNumber: position.lineNumber,\r\n    //             endColumn: position.column\r\n    //         });\r\n\r\n    //         // Return JSON array containing all completion suggestions.\r\n    //         return {\r\n    //             suggestions: [\r\n    //                 // Example: io.write ()\r\n    //                 {\r\n    //                     label: \"io.write (string)\",\r\n    //                     kind: monaco.languages.CompletionItemKind.Function,\r\n    //                     documentation: \"Writes a string to stdout.\",\r\n    //                     insertText: \"io.write (\\\"\\\")\",  // Escape JSON as needed.\r\n    //                     range: {\r\n    //                         startLineNumber: position.lineNumber,\r\n    //                         endLineNumber: position.lineNumber,\r\n    //                         startColumn: position.column,\r\n    //                         endColumn: position.column\r\n    //                     }\r\n    //                 },  // Other items.\r\n    //             ]\r\n    //         };\r\n    //     }\r\n    // });\r\n\r\n\r\n}","import { convertPxToNumber } from \"../../tools/HtmlTools.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class SpeedControl {\r\n\r\n    position: number = 0;\r\n    xMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $bar: JQuery<HTMLElement>;\r\n    $display: JQuery<HTMLElement>;\r\n    $outer: JQuery<HTMLElement>;\r\n\r\n    gripWidth: number = 10;\r\n    overallWidth: number = 100;\r\n\r\n    interpreter: Interpreter\r\n\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n\r\n\r\n    constructor($container: JQuery<HTMLElement>){\r\n\r\n        this.$outer = jQuery('<div class=\"jo_speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\"></div>');\r\n        this.$bar = jQuery('<div class=\"jo_speedcontrol-bar\" draggable=\"false\"></div>');\r\n        this.$grip = jQuery('<div class=\"jo_speedcontrol-grip\" draggable=\"false\"></div>');\r\n        this.$display = jQuery('<div class=\"jo_speedcontrol-display\" draggable=\"false\">100 Schritte/s</div>');\r\n\r\n        this.$grip.append(this.$display);\r\n        this.$outer.append(this.$bar, this.$grip);\r\n\r\n        $container.append(this.$outer);\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n    }\r\n\r\n    initGUI(){\r\n        \r\n        let mousedownX: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallWidth = convertPxToNumber(this.$outer.css('width'));\r\n        that.gripWidth = convertPxToNumber(that.$grip.css('width'));\r\n        that.xMax = that.overallWidth - that.gripWidth;\r\n        \r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        \r\n        that.$outer.on(mousePointer + 'down', (e) => {\r\n            \r\n            \r\n\r\n            let x = e.pageX - that.$outer.offset().left - 4;\r\n            that.setSpeed(x);\r\n            that.$grip.css('left', x + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientX]);\r\n\r\n            // jQuery('#speedcontrol-display').show();\r\n            // jQuery(document).on('mouseup.speedcontrol1', () => {\r\n            //     jQuery(document).off('mouseup.speedcontrol1');\r\n            //     jQuery('#speedcontrol-display').hide();\r\n            // });\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, x) => {\r\n            if(x == null) x = e.clientX;\r\n            mousedownX = x;\r\n            oldPosition = that.position;\r\n            jQuery('.joe_controlPanel_top').css(\"z-index\", \"1000\");\r\n            that.$display.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.speedcontrol', (e)=>{\r\n                let deltaX = e.clientX - mousedownX;\r\n                that.setSpeed(oldPosition + deltaX);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.speedcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.speedcontrol');\r\n                jQuery(document).off(mousePointer + 'move.speedcontrol');\r\n                that.$display.hide();\r\n                jQuery('.joe_controlPanel_top').css(\"z-index\", \"0\");\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    getSpeedInStepsPerSecond(): number {\r\n        return this.interpreter.stepsPerSecond;\r\n    }\r\n\r\n    setSpeedInStepsPerSecond(stepsPerSecond: number | \"max\"){\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        if(stepsPerSecond == \"max\") stepsPerSecond = this.interpreter.maxStepsPerSecond;\r\n        stepsPerSecond = Math.min(stepsPerSecond, this.interpreter.maxStepsPerSecond);\r\n        stepsPerSecond = Math.max(stepsPerSecond, 1);\r\n\r\n        for(let i = 0; i < intervalBorders.length - 1; i++){\r\n            let left = intervalBorders[i];\r\n            let right = intervalBorders[i+1];\r\n            if(stepsPerSecond >= left && stepsPerSecond <= right){\r\n                let gripIntervalLength = this.xMax/(intervalBorders.length - 1);\r\n                let gripPosition = Math.round(gripIntervalLength * i + gripIntervalLength * (stepsPerSecond - left)/(right - left));\r\n                this.$grip.css('left', gripPosition + 'px');\r\n                this.position = gripPosition;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setInterpreterSpeed(stepsPerSecond);\r\n\r\n    }\r\n\r\n    setSpeed(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.xMax){\r\n            newPosition = this.xMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('left', newPosition + \"px\");\r\n\r\n        // in steps/s\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        let intervalDelta = this.xMax / (intervalBorders.length - 1);\r\n        let intervalIndex = Math.floor(newPosition/intervalDelta);\r\n        if(intervalIndex == intervalBorders.length - 1) intervalIndex--;\r\n        let factorInsideInterval = (newPosition - intervalIndex*intervalDelta)/intervalDelta;\r\n\r\n        let intervalMin = intervalBorders[intervalIndex];\r\n        let intervalMax = intervalBorders[intervalIndex + 1];\r\n\r\n        let speed = intervalMin + (intervalMax - intervalMin) * factorInsideInterval;\r\n\r\n        this.setInterpreterSpeed(speed);\r\n        \r\n        // console.log( speed + ' steps/s entspricht ' + this.interpreter.timerDelayMs + ' ms zwischen Steps')\r\n\r\n    }\r\n    \r\n    setInterpreterSpeed(stepsPerSecond: number){\r\n        this.interpreter.stepsPerSecond = stepsPerSecond;\r\n\r\n        this.interpreter.hideProgrampointerPosition();\r\n\r\n        let speedString = \"\" + Math.ceil(stepsPerSecond);\r\n        if(stepsPerSecond >= this.interpreter.maxStepsPerSecond - 10){\r\n            speedString = \"Maximale Geschwindigkeit\";\r\n        }\r\n\r\n        this.$display.html(speedString + \" Schritte/s\");\r\n    }\r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpeedControl } from \"./SpeedControl.js\";\r\n\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    speedControl: SpeedControl;\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonPause: JQuery<HTMLElement>;\r\n    $buttonStop: JQuery<HTMLElement>;\r\n    $buttonStepOver: JQuery<HTMLElement>;\r\n    $buttonStepInto: JQuery<HTMLElement>;\r\n    $buttonStepOut: JQuery<HTMLElement>;\r\n    $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n    private interpreter: Interpreter;\r\n\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private $editorContainer: JQuery<HTMLElement>){\r\n\r\n        this.speedControl = new SpeedControl($buttonsContainer);\r\n        this.speedControl.initGUI();\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonPause, this.$buttonStop,\r\n            this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart);\r\n\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n        this.speedControl.setInterpreter(i);\r\n        this.speedControl.setSpeed(20);\r\n    }\r\n}","import { convertPxToNumber } from \"../../../tools/HtmlTools.js\";\r\n\r\nexport class ZoomControl {\r\n    \r\n    public static preventFading:boolean = false;\r\n\r\n    position: number = 0;\r\n    yMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $zoomcontrolDisplay: JQuery<HTMLElement>;\r\n\r\n    gripHeight: number = 10;\r\n    overallHeight: number = 150;\r\n\r\n    zoomMin: number = 0.2;\r\n    zoomMax: number = 2;\r\n\r\n\r\n    constructor($parentElement: JQuery<HTMLElement>, private callback?: (zoomfactor: number) => void){\r\n        let $zoomcontrolOuter = jQuery('<div class=\"jo_zoomcontrol-outer\" title=\"Zoom\" draggable=\"false\"></div>');\r\n        $parentElement.append($zoomcontrolOuter);\r\n        let $zoomcontrolBar = jQuery('<div class=\"jo_zoomcontrol-bar\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append($zoomcontrolBar);\r\n        this.$grip = jQuery('<div class=\"jo_zoomcontrol-grip\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append(this.$grip);\r\n        this.$zoomcontrolDisplay = jQuery('<div class=\"jo_zoomcontrol-display\"></div>');\r\n        this.$grip.append(this.$zoomcontrolDisplay);\r\n\r\n        let mousedownY: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallHeight = convertPxToNumber($zoomcontrolOuter.css('height'));\r\n        that.gripHeight = convertPxToNumber(that.$grip.css('height'));\r\n        that.yMax = that.overallHeight - that.gripHeight;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $zoomcontrolBar.on(mousePointer + 'down', (e) => {\r\n\r\n            let y = e.pageY - $zoomcontrolOuter.offset().top - 4;\r\n            that.setZoom(y);\r\n            that.$grip.css('top', y + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientY]);\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, y) => {\r\n            if(y == null) y = e.clientY;\r\n            mousedownY = y;\r\n            oldPosition = that.position;\r\n            this.$zoomcontrolDisplay.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.zoomcontrol', (e)=>{\r\n                let deltaY = e.clientY - mousedownY;\r\n                that.setZoom(oldPosition + deltaY);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.zoomcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.zoomcontrol');\r\n                jQuery(document).off(mousePointer + 'move.zoomcontrol');\r\n                this.$zoomcontrolDisplay.hide();\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n        $parentElement.on(mousePointer + \"enter\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeIn();\r\n        });\r\n        \r\n        $parentElement.on(mousePointer + \"leave\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeOut();\r\n        });\r\n\r\n        let factor = (1.0 - this.zoomMin)/(this.zoomMax - this.zoomMin);\r\n        this.position = factor*(this.overallHeight - this.gripHeight);\r\n        this.$grip.css('top', this.position + \"px\");\r\n    }\r\n\r\n    setZoom(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.yMax){\r\n            newPosition = this.yMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('top', newPosition + \"px\");\r\n\r\n        let zoomfactor = newPosition/(this.overallHeight - this.gripHeight);\r\n        zoomfactor = this.zoomMin + zoomfactor*(this.zoomMax - this.zoomMin);\r\n\r\n        let zfs = Math.round(zoomfactor * 100) + \" %\";\r\n        this.$zoomcontrolDisplay.html(zfs);\r\n\r\n        if(this.callback != null){\r\n            this.callback(zoomfactor);\r\n        }\r\n\r\n    }\r\n\r\n}","import { ZoomControl } from \"./ZoomControl.js\";\r\nimport { ClassBox } from \"./classdiagram/ClassBox.js\";\r\nimport { Rectangle, Point } from \"./classdiagram/Router.js\";\r\nimport { DiagramElement } from \"./DiagramElement.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport var DiagramUnitCm = 0.2; // in cm\r\n\r\nexport class Diagram {\r\n\r\n    zoomControl: ZoomControl;\r\n    zoomfactor: number = 1.0;\r\n\r\n    $canvas: JQuery<HTMLElement>;\r\n    svgElement: Element;\r\n\r\n    $menuButton: JQuery<HTMLElement>;\r\n\r\n    defs: Element;\r\n    style: Element;\r\n\r\n    inlineStyles: { [selector: string]: { [key: string]: string } } = {};\r\n    marginCm = 1.6;\r\n    minDistance = 2.0;\r\n    minWidthHeightCm = 10;\r\n    widthCm = this.minWidthHeightCm;\r\n    heightCm = this.minWidthHeightCm;\r\n\r\n    $centerRectangle: JQuery<SVGElement>;\r\n\r\n    constructor($htmlElement: JQuery<HTMLElement>, public main: MainBase){\r\n\r\n        this.$menuButton = jQuery('<div class=\"jo_classDiagram_Menubutton jo_button jo_active img_menu-three-bars\"></div>');\r\n        $htmlElement.append(this.$menuButton);\r\n\r\n        let $scrollpane = jQuery('<div></div>');\r\n        $htmlElement.append($scrollpane);\r\n        $scrollpane.addClass('jo_scrollable');\r\n        $scrollpane.css({overflow: \"auto\", position: \"relative\", width: \"100%\", height: \"100%\"});\r\n\r\n        this.$canvas = jQuery('<div class=\"jo_diagram-canvas\"></div>');\r\n        $scrollpane.append(this.$canvas);\r\n        this.zoomControl = new ZoomControl($htmlElement, (factor: number) => {\r\n            this.$canvas.css({\r\n                transform: \"scale(\" + factor + \")\"\r\n            });\r\n            this.zoomfactor = factor;\r\n        });\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        this.svgElement = document.createElementNS(ns, 'svg');\r\n        // jQuery(this.svgElement).css('pointer-events', 'none');\r\n        jQuery(this.svgElement).addClass(\"jo_diagram-svg svg_all_pointer_events\");\r\n\r\n        // this.insertStyleElement({\".svp_draggable\": {cursor: \"pointer\"}});\r\n\r\n        this.$canvas[0].appendChild(this.svgElement);\r\n\r\n        this.$centerRectangle = <any>jQuery(this.createElement(\"rect\", this.svgElement));\r\n\r\n        this.$centerRectangle.css({fill: \"#ffffff\", \"stroke\": \"none\"});\r\n\r\n        this.adjustCenterRectangle();\r\n\r\n        let $svgElement =  jQuery(this.svgElement);\r\n\r\n        let x: number;\r\n        let y: number;\r\n\r\n        $svgElement.on('mousedown', (ev1) => {\r\n            x = ev1.screenX;\r\n            y = ev1.screenY;\r\n            \r\n            jQuery(document).on('mousemove.diagram', (ev) => {\r\n                let dx = ev.screenX - x;\r\n                let dy = ev.screenY - y;\r\n                x = ev.screenX;\r\n                y = ev.screenY;\r\n                $scrollpane.scrollLeft($scrollpane.scrollLeft() - dx);\r\n                $scrollpane.scrollTop($scrollpane.scrollTop() - dy);\r\n            })\r\n\r\n            jQuery(document).on('mouseup.diagram', () => {\r\n                jQuery(document).off('mousemove.diagram');\r\n                jQuery(document).off('mouseup.diagram');\r\n            });\r\n\r\n\r\n        });\r\n\r\n\r\n    }    \r\n\r\n    adjustCenterRectangle(){\r\n        this.$centerRectangle.attr({\r\n            x: this.marginCm + \"cm\",\r\n            y: this.marginCm + \"cm\",\r\n            width: (this.widthCm - 2*this.marginCm) + \"cm\",    \r\n            height: (this.heightCm - 2*this.marginCm) + \"cm\"\r\n        });\r\n    }\r\n\r\n    setSize(widthCm: number, heightCm: number){\r\n        if(widthCm < this.minWidthHeightCm) widthCm = this.minWidthHeightCm;\r\n        if(heightCm < this.minWidthHeightCm) heightCm = this.minWidthHeightCm;\r\n\r\n        this.$canvas.css({\r\n            width: widthCm + \"cm\",\r\n            height: heightCm + \"cm\"\r\n        })\r\n\r\n        this.widthCm = widthCm;\r\n        this.heightCm = heightCm;\r\n\r\n        this.adjustCenterRectangle();\r\n    }\r\n\r\n    adjustSizeAndElements(diagramElements: DiagramElement[]): {isAdjusted: boolean}{\r\n\r\n        let xMin = 100000;\r\n        let yMin = 100000;\r\n        let xMax = -100000;\r\n        let yMax = -100000;\r\n\r\n        for(let rr of diagramElements){\r\n            if(xMin > rr.leftCm) xMin = rr.leftCm;\r\n            if(xMax < rr.leftCm + rr.widthCm) xMax = rr.leftCm + rr.widthCm;\r\n            if(yMin > rr.topCm) yMin = rr.topCm;\r\n            if(yMax < rr.topCm + rr.heightCm) yMax = rr.topCm + rr.heightCm;\r\n        }\r\n\r\n        xMin -= this.marginCm;\r\n        xMax += this.marginCm;\r\n        yMin -= this.marginCm;\r\n        yMax += this.marginCm;\r\n\r\n        let isAdjusted: boolean = false;\r\n        let newWidthCm = this.widthCm;\r\n        let newHeightCm = this.heightCm;\r\n\r\n        if(xMin < 0 || xMax > this.widthCm || (xMax - xMin <= this.widthCm && this.widthCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newWidthCm = Math.max(this.minWidthHeightCm, xMax - xMin);\r\n\r\n            if(xMin < 0){\r\n                delta = -xMin;\r\n            }\r\n\r\n            if(xMin > 0 && xMax > newWidthCm){\r\n                delta = newWidthCm - xMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(delta, 0, true, true);\r\n            }\r\n\r\n        }\r\n\r\n        if(yMin < 0 || yMax > this.heightCm || (yMax - yMin <= this.heightCm && this.heightCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newHeightCm = Math.max(this.minWidthHeightCm, yMax - yMin);\r\n\r\n            if(yMin < 0){\r\n                delta = -yMin;\r\n            }\r\n\r\n            if(yMin > 0 && yMax > newHeightCm){\r\n                delta = newHeightCm - yMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(0, delta, true, true);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        this.setSize(newWidthCm, newHeightCm);\r\n        \r\n\r\n        return {isAdjusted: isAdjusted};\r\n\r\n    }\r\n\r\n    public insertStyleElement(styles: { [selector: string]: { [key: string]: string } } = null) {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n\r\n        if (this.style == null) {\r\n            this.defs = document.createElementNS(ns, 'defs');\r\n            this.style = document.createElementNS(ns, 'style');\r\n            this.defs.appendChild(this.style);\r\n            this.svgElement.appendChild(this.defs);\r\n        }\r\n\r\n        if (styles != null) {\r\n            this.inlineStyles = styles;\r\n            this.refreshInlineStyles();\r\n        }\r\n\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    private refreshInlineStyles() {\r\n\r\n        let s: string = \"\";\r\n\r\n        for (let selector in this.inlineStyles) {\r\n            let stylesForSelector = this.inlineStyles[selector];\r\n            if (stylesForSelector != null) {\r\n                s += selector + \"{\\n\";\r\n                for (let key in stylesForSelector) {\r\n                    s += \"   \" + key + \":\" + stylesForSelector[key] + \";\\n\";\r\n                }\r\n                s += \"}\\n\";\r\n            } else {\r\n                s += selector + \"\\n\";\r\n            }\r\n        }\r\n\r\n        this.style.textContent = s;\r\n\r\n    }\r\n\r\n    findFreeSpace(elements: DiagramElement[], width: number, height: number, minDistance: number): Point {\r\n\r\n        let radius = 0;\r\n        let fertig: boolean = false;\r\n        let xCm = 0;\r\n        let yCm = 0;\r\n        while(!fertig){\r\n\r\n            let y = radius;\r\n            let x = 0;\r\n            for(x = 0; x <= radius; x++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(fertig) break;\r\n            x--;\r\n            for(y = 0; y <= radius - 1; y++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            radius += 2;\r\n\r\n        }\r\n\r\n        return {x: xCm, y: yCm};\r\n\r\n    }\r\n\r\n    isFree(elements: DiagramElement[], widthCm: number, heightCm: number, leftCm: number, topCm: number, minDistance: number):boolean {\r\n\r\n        for(let element of elements){\r\n\r\n            let insideX = Math.abs(element.leftCm + element.widthCm/2 - leftCm - widthCm/2) \r\n                       <= (element.widthCm + widthCm)/2 + minDistance;\r\n\r\n            let insideY = Math.abs(element.topCm + element.heightCm/2 - topCm - heightCm/2) <= (element.heightCm + heightCm)/2 + minDistance;\r\n\r\n            if(insideX && insideY) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"./Diagram.js\"; \r\nimport { Rectangle } from \"./classdiagram/Router.js\";\r\n\r\nexport enum Alignment {\r\n    left, center, right\r\n}\r\n\r\nexport type TextLine = {\r\n    type: \"text\",\r\n    text: string,\r\n    tooltip?: string,\r\n    alignment?: Alignment,\r\n    bold?: boolean,\r\n    italics?: boolean,\r\n    textHeightCm?: number,\r\n    textWidthCm?: number,\r\n    yCm?: number\r\n    $element?: JQuery<SVGTextElement>,\r\n    onClick?: () => void\r\n}\r\n\r\nexport type HorizontalLine = {\r\n    type: \"line\",\r\n    $element?: JQuery<SVGLineElement>,\r\n    thicknessCm: number,\r\n    yCm?: number\r\n}\r\n\r\nexport abstract class DiagramElement {\r\n\r\n    public static cmPerPx: number = 2.54/96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    public leftCm: number = 0; // x-Koordinate in cm\r\n    public topCm: number = 0; // y-Koordinate in cm\r\n \r\n    public widthCm: number;\r\n    public heightCm: number; \r\n\r\n    protected lines: (TextLine | HorizontalLine)[] = [];\r\n\r\n    public backgroundColor: string = \"#ffffff\";\r\n\r\n    constructor(protected parent: Element) {\r\n\r\n    }\r\n\r\n    getRoutingRectangle(): Rectangle{\r\n        return {\r\n            left: Math.round(this.leftCm/DiagramUnitCm),\r\n            top: Math.round(this.topCm/DiagramUnitCm),\r\n            width: Math.round(this.widthCm/DiagramUnitCm),\r\n            height: Math.round(this.heightCm/DiagramUnitCm) \r\n        };\r\n    }\r\n\r\n    public show(){\r\n        if(this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide(){\r\n        if(this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if(this.$element == null) return;\r\n        this.$element.detach();        \r\n    }\r\n\r\n    remove() {\r\n        if(this.$element == null) return;\r\n        this.$element.remove();\r\n        this.$element = null;        \r\n    }\r\n\r\n    appendTo($element: JQuery<Element>){\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear(){\r\n        if(this.$element == null) return;\r\n        this.$element.empty();\r\n        this.lines = [];\r\n    }\r\n\r\n    public move(xCm: number, yCm: number, withRaster: boolean, adjustToRaster: boolean = false) {\r\n        this.leftCm += xCm;\r\n        this.topCm += yCm;\r\n\r\n        let x = this.leftCm;\r\n        let y = this.topCm;\r\n\r\n        if(withRaster){\r\n            x = Math.round(x/DiagramUnitCm)*DiagramUnitCm;\r\n            y = Math.round(y/DiagramUnitCm)*DiagramUnitCm;\r\n        }\r\n\r\n        if(adjustToRaster){\r\n            this.leftCm = x;\r\n            this.topCm = y;\r\n        }\r\n\r\n        jQuery(this.$element).css(\"transform\", \"translate(\" + x + \"cm,\" + y + \"cm)\");\r\n    }\r\n\r\n    public moveTo(xCm: number, yCm: number, withRaster: boolean) {\r\n        this.move(xCm - this.leftCm, yCm - this.topCm, withRaster);\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n            let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n                font: \"16px Roboto\",\r\n                \"font-family\": \"sans-serif\",\r\n                fill: \"#000\",\r\n                \"alignment-baseline\":\"hanging\",\r\n                \"dominant-baseline\":\"hanging\"\r\n            });\r\n\r\n            if(attributes != null) $element.attr(attributes);\r\n\r\n            $element.text(text);\r\n\r\n            return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>):{height: number, width: number}{\r\n        let bbox:DOMRect = textElement[0].getBBox();\r\n        \r\n        return {\r\n            height: bbox.height * DiagramElement.cmPerPx,\r\n            width: bbox.width * DiagramElement.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n    public addTextLine(line: TextLine | HorizontalLine){\r\n\r\n        this.lines.push(line);\r\n\r\n        if(line.type == \"text\"){\r\n            if(line.alignment == null) line.alignment = Alignment.left;\r\n            if(line.bold == null) line.bold = false;\r\n            if(line.italics == null) line.italics = false;\r\n        }\r\n\r\n    }\r\n\r\n    public render(){\r\n\r\n        let $group = this.$element;\r\n        if($group == null){\r\n            $group = this.createElement(\"g\", this.parent);\r\n            $group.addClass(\"svg_draggable\");\r\n            $group.addClass(\"svg_all_pointer_events\");\r\n            this.$element = $group;\r\n            jQuery(this.$element).css(\"transform\", \"translate(\" + this.leftCm + \"cm,\" + this.topCm + \"cm)\");\r\n        }\r\n\r\n        let $rect = this.createElement(\"rect\", $group[0]);\r\n\r\n        let textPosYCm: number = 0.1;\r\n        let maxWidthCm: number = 0;\r\n\r\n        let first: boolean = true;\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n                if(first) textPosYCm += 0.1;\r\n                first = false;\r\n                line.yCm = textPosYCm;\r\n                line.$element = <JQuery<SVGTextElement>>this.createTextElement(line.text, $group[0], {\r\n                    \"font-weight\" : line.bold?\"bold\":\"normal\",\r\n                    \"font-size\": \"12pt\",\r\n                    \"font-style\": line.italics?\"italic\":\"normal\",\r\n                    \"text-anchor\": line.alignment == Alignment.left ? \"start\" : line.alignment == Alignment.center ? \"middle\" : \"end\",\r\n                    \"cursor\": line.onClick == null ? \"\" : \"pointer\"\r\n                } );\r\n\r\n                line.$element.css(\"transform\", \"translate(0cm,0cm)\");\r\n                // line.$element.css(\"transform\", \"translate(0cm,\" + textPosYCm + \"cm)\");\r\n                // if(line.onClick != null){\r\n                //     line.$element.addClass(\"clickable\");\r\n                //     line.$element.on(\"mousedown\", (event) => {\r\n                //         //@ts-ignore\r\n                //         line.onClick();\r\n                //         event.stopPropagation();\r\n                //     })\r\n                // }\r\n                let metrics = this.getTextMetrics(line.$element);\r\n                line.textHeightCm = metrics.height;\r\n                line.textWidthCm = metrics.width;\r\n                maxWidthCm = Math.max(maxWidthCm, line.textWidthCm);\r\n                textPosYCm += line.textHeightCm;\r\n                if(line.tooltip != null){\r\n                    let $tooltip = this.createElement(\"title\", line.$element[0]);\r\n                    $tooltip.text(line.tooltip);\r\n                }\r\n            } else {\r\n                line.yCm = textPosYCm + line.thicknessCm/2;\r\n                textPosYCm += line.thicknessCm + 0.1;\r\n                first = true;\r\n            }\r\n        }\r\n\r\n        let width = 2 * 0.05 + 2*0.2 + maxWidthCm;\r\n        this.widthCm = (Math.trunc(width/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n        this.heightCm = (Math.trunc(textPosYCm/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n\r\n        let textLeft = 0.05 + 0.2;\r\n        let textCenter = width/2;\r\n        let textRight = width - textLeft;\r\n\r\n        $rect.css({\r\n            width: this.widthCm + \"cm\",\r\n            height: this.heightCm + \"cm\",\r\n            fill: this.backgroundColor,\r\n            stroke: \"#000\",\r\n            \"stroke-width\": \"0.05cm\"\r\n        });\r\n\r\n\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n\r\n                let x: number;\r\n                switch(line.alignment){\r\n                    case Alignment.center: x = textCenter; break;\r\n                    case Alignment.left: x = textLeft; break;\r\n                    case Alignment.right: x = textRight; break;\r\n                }\r\n\r\n                // Unfortunately we have to wrap Text-Elements in <g> due to a bug in safari,\r\n                // see \r\n                //@ts-ignore\r\n                let $g = this.createElement(\"g\", $group[0]);\r\n                $g.append(line.$element);\r\n                //@ts-ignore\r\n                line.$element = $g;\r\n\r\n                line.$element.css(\"transform\", \"translate(\" + x + \"cm,\"+line.yCm + \"cm)\");\r\n\r\n                if(line.onClick != null){\r\n                    line.$element.addClass(\"clickable\");\r\n                    line.$element.on(\"mousedown\", (event) => {\r\n                        //@ts-ignore\r\n                        line.onClick();\r\n                        event.stopPropagation();\r\n                    })\r\n                }\r\n\r\n\r\n            } else {\r\n                line.$element = <JQuery<SVGLineElement>>this.createElement(\"line\", $group[0], {\r\n                    x1: \"0\",\r\n                    y1: line.yCm + \"cm\",\r\n                    x2: this.widthCm + \"cm\",\r\n                    y2: line.yCm + \"cm\"\r\n                });\r\n\r\n                line.$element.css({\r\n                    stroke: \"#000\",\r\n                    \"stroke-width\": line.thicknessCm + \"cm\"        \r\n                });\r\n\r\n            }\r\n        }\r\n\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver } from \"./parser/TypeResolver.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { Klass, Interface } from \"./types/Class.js\";\r\nimport { SemicolonAngel } from \"./parser/SemicolonAngel.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        moduleStore.clearUsagePositions();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            m.colorInformation = lexed.colorInformation;\r\n            \r\n            if(m.file.name == this.main.getCurrentlyEditedModule()?.file?.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser(false);\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n\r\n        // 3rd pass: resolve types and populate typeStores; checks intermodular dependencies\r\n\r\n        let typeResolver: TypeResolver = new TypeResolver(this.main);\r\n\r\n        // Klass.count = 0;\r\n        // Interface.count = 0;\r\n        typeResolver.start(moduleStore);\r\n        // console.log(\"Klass-Klone: \" + Klass.count + \", Interface-Klone: \" + Interface.count);\r\n\r\n        // 4th pass: code generation\r\n\r\n        let codeGenerator = new CodeGenerator();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            codeGenerator.start(m, moduleStore);\r\n        }\r\n\r\n        let errorfree = true;\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.dependsOnModulesWithErrors = m.hasErrors();\r\n            if(m.dependsOnModulesWithErrors) errorfree = false;\r\n        }\r\n\r\n        let done = false;\r\n        while(!done){\r\n            done = true;\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if(!m.dependsOnModulesWithErrors)\r\n                for (let m1 of moduleStore.getModules(false)) {\r\n                    if(m.dependsOnModules.get(m1) && m1.dependsOnModulesWithErrors){\r\n                        m.dependsOnModulesWithErrors = true;\r\n                        done = false;\r\n                        break;\r\n                    }\r\n                }                            \r\n            }            \r\n        }\r\n        \r\n        this.atLeastOneModuleIsStartable = false;        \r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.isStartable = m.hasMainProgram() && !m.dependsOnModulesWithErrors;\r\n            if(m.isStartable){\r\n                this.atLeastOneModuleIsStartable = true;\r\n            }\r\n            if(!(this.main instanceof MainEmbedded) || this.main.config.withFileList){\r\n                m.renderStartButton();\r\n            } \r\n        }\r\n\r\n        if (this.atLeastOneModuleIsStartable) {\r\n\r\n            this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        } else {\r\n\r\n            this.compilerStatus = errorfree ? CompilerStatus.error : CompilerStatus.compiledButNothingToRun;\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { DiagramElement, Alignment } from \"../DiagramElement.js\";\r\nimport { Klass, Visibility, Interface } from \"../../../../compiler/types/Class.js\";\r\nimport { getDeclarationAsString, getTypeIdentifier } from \"../../../../compiler/types/DeclarationHelper.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { Point } from \"./Router.js\";\r\nimport { ClassDiagram } from \"./ClassDiagram.js\";\r\nimport { TextLine } from \"../DiagramElement.js\";\r\nimport { hash } from \"../../../../tools/StringTools.js\";\r\nimport { Method, Attribute } from \"../../../../compiler/types/Types.js\";\r\n\r\nexport type SerializedClassBox = {\r\n    className: string,\r\n    filename: string,\r\n    hashedSignature: number,\r\n    withMethods: boolean,\r\n    withAttributes: boolean,\r\n    leftCm: number,\r\n    topCm: number,\r\n    isSystemClass: boolean,\r\n    workspaceId?: number\r\n}\r\n\r\nexport class ClassBox extends DiagramElement {\r\n\r\n    className: string;\r\n    klass: Klass | Interface;\r\n    filename: string;\r\n    hashedSignature: number;\r\n    documentation: string;\r\n    active: boolean = true;\r\n    withMethods: boolean = true;\r\n    withAttributes: boolean = true;\r\n\r\n    inDebounce: any;\r\n\r\n    isSystemClass: boolean;\r\n\r\n    $dropdownTriangle: JQuery<Element>;\r\n\r\n    constructor(public diagram: Diagram, leftCm: number, topCm: number, klass: Klass | Interface) {\r\n        super(diagram.svgElement);\r\n\r\n        this.klass = klass;\r\n\r\n        if (klass != null) {\r\n            this.attachToClass(this.klass);\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.withAttributes = false; //!this.isSystemClass;\r\n            this.withMethods = false; // !this.isSystemClass;\r\n        }\r\n\r\n        this.moveTo(leftCm, topCm, true);\r\n\r\n    }\r\n\r\n    serialize(): SerializedClassBox {\r\n        return {\r\n            className: this.className,\r\n            filename: this.filename,\r\n            hashedSignature: this.hashedSignature,\r\n            withAttributes: this.withAttributes,\r\n            withMethods: this.withMethods,\r\n            isSystemClass: this.isSystemClass,\r\n            leftCm: this.leftCm,\r\n            topCm: this.topCm\r\n        }\r\n    }\r\n\r\n    static deserialize(diagram: Diagram, scb: SerializedClassBox): ClassBox {\r\n\r\n        let cb = new ClassBox(diagram, scb.leftCm, scb.topCm, null);\r\n        cb.hashedSignature = scb.hashedSignature;\r\n        cb.className = scb.className;\r\n        cb.filename = scb.filename;\r\n        cb.withAttributes = scb.withAttributes;\r\n        cb.withMethods = scb.withMethods;\r\n        cb.isSystemClass = scb.isSystemClass;\r\n\r\n        return cb;\r\n\r\n    }\r\n\r\n    attachToClass(klass: Klass | Interface) {\r\n\r\n        this.klass = klass;\r\n        let klassSignature: number = this.getSignature(klass);\r\n\r\n        if (this.className != klass.identifier || this.hashedSignature != klassSignature || this.widthCm < 0.7 || this.documentation != klass.documentation) {\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.renderLines();\r\n        } else {\r\n            this.addMouseEvents();\r\n        }\r\n\r\n        this.className = klass.identifier;\r\n        this.filename = klass.module.file.name;\r\n        this.hashedSignature = klassSignature;\r\n        this.documentation = klass.documentation;\r\n    }\r\n\r\n    jumpToDeclaration(element: Klass | Interface | Method | Attribute) {\r\n        this.diagram.main.jumpToDeclaration(this.klass.module, element.declaration);\r\n    }\r\n\r\n\r\n    renderLines() {\r\n\r\n        this.clear();\r\n\r\n        let parametersWithTypes = (<ClassDiagram>this.diagram).currentClassBoxes.parametersWithTypes;\r\n\r\n        this.addTextLine({\r\n            type: \"text\",\r\n            text: (this.klass instanceof Interface ? \"<<interface>> \" : ( this.klass.isAbstract ? \"<<abstract>> \" : \"\")) + this.klass.identifier,\r\n            tooltip: getDeclarationAsString(this.klass, \"\", true),\r\n            alignment: Alignment.center,\r\n            bold: true,\r\n            italics: this.klass instanceof Interface || this.klass.isAbstract,\r\n            onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(this.klass) }\r\n        });\r\n\r\n        if (this.klass instanceof Klass && this.withAttributes) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            for (let a of this.klass.attributes) {\r\n\r\n                let text: string = this.getVisibilityText(a.visibility) + getTypeIdentifier(a.type) + \" \" +  a.identifier;\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(a),\r\n                    alignment: Alignment.left,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(a) }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withMethods) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            this.klass.methods.filter(m => m.signature != \"toJson()\").forEach(m => {\r\n                let text: string = this.getVisibilityText(m.visibility) + m.identifier + \"()\";\r\n\r\n                if (parametersWithTypes) {\r\n                    let returnType: string = m.isConstructor ? \"\" :\r\n                        (m.returnType == null ? \"void \" : getTypeIdentifier(m.returnType) + \" \");\r\n                    text = this.getVisibilityText(m.visibility) + returnType + m.identifier + \"(\" +\r\n                        m.parameterlist.parameters.map((p) => { return getTypeIdentifier(p.type) + \" \" + p.identifier }).join(\", \") + \")\";\r\n                }\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(m),\r\n                    alignment: Alignment.left,\r\n                    italics: this.klass instanceof Interface || m.isAbstract,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(m) }\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n        this.backgroundColor = this.isSystemClass ? \"#aaaaaa\" : \"#ffffff\";\r\n        this.render();\r\n\r\n        this.$dropdownTriangle = this.createElement(\"path\", this.$element[0], {\r\n            d: this.getTrianglePath(),\r\n            class: \"dropdown-triangle\",\r\n            style: \"transform: \" + \"translate(\" + (this.widthCm - 0.35) + \"cm,0.05cm)\", // + (<TextLine>this.lines[0]).textHeightCm + \"cm)\"\r\n        })\r\n\r\n        this.addMouseEvents();\r\n    }\r\n\r\n    getTrianglePath() {\r\n        if (this.withMethods) {\r\n            return \"M 0 8 L 11 8 L 5.5 2 L 0 8\";\r\n        } else {\r\n            return \"M 0 2 L 11 2 L 5.5 8 L 0 2\";\r\n        }\r\n        // if (this.withMethods) {\r\n        //     return \"M 3 6 L 11 6 L 7 2 L 3 6\";\r\n        // } else {\r\n        //     return \"M 3 2 L 11 2 L 7 6 L 3 2\";\r\n        // }\r\n    }\r\n\r\n    detach() {\r\n        this.$element?.off('mousedown.diagramElement');\r\n        jQuery(document).off('mouseup.diagramElement');\r\n        jQuery(document).off('mousemove.diagramElement');\r\n        super.detach();\r\n    }\r\n\r\n    addMouseEvents() {\r\n        let that = this;\r\n\r\n        if (this.$dropdownTriangle != null) {\r\n            this.$dropdownTriangle.off(\"mouseup.dropdowntriangle\");\r\n            this.$dropdownTriangle.off(\"mousedown.dropdowntriangle\");\r\n        }\r\n\r\n        this.$dropdownTriangle.on(\"mousedown.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n        });\r\n        this.$dropdownTriangle.on(\"mouseup.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n            this.withMethods = !this.withMethods;\r\n            this.withAttributes = !this.withAttributes;\r\n            this.$dropdownTriangle.attr(\"d\", this.getTrianglePath());\r\n            this.renderLines();\r\n            (<ClassDiagram><any>this.diagram).adjustClassDiagramSize();\r\n            (<ClassDiagram><any>this.diagram).updateArrows();\r\n        });\r\n\r\n        this.$element.on('mousedown.diagramElement', (event: JQuery.MouseDownEvent) => {\r\n\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n\r\n            if (event.button != 0) return;\r\n\r\n            let x = event.screenX;\r\n            let y = event.screenY;\r\n\r\n            that.$element.find('rect').addClass('dragging');\r\n\r\n            jQuery(document).off('mouseup.diagramElement');\r\n            jQuery(document).off('mousemove.diagramElement');\r\n\r\n            jQuery(document).on('mousemove.diagramElement', (event: JQuery.MouseMoveEvent) => {\r\n                let cmPerPixel = 1 / 96 * 2.36 / this.diagram.zoomfactor;\r\n                let dx = (event.screenX - x) * cmPerPixel;\r\n                let dy = (event.screenY - y) * cmPerPixel;\r\n\r\n                x = event.screenX;\r\n                y = event.screenY;\r\n\r\n                that.move(dx, dy, true);\r\n\r\n\r\n                clearTimeout(that.inDebounce);\r\n                that.inDebounce = setTimeout(() => {\r\n                    let classDiagram = <ClassDiagram><any>that.diagram;\r\n                    classDiagram.updateArrows();\r\n                }, 200);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.diagramElement', () => {\r\n                that.move(0, 0, true, true);\r\n                let classDiagram = <ClassDiagram><any>that.diagram;\r\n                classDiagram.adjustClassDiagramSize();\r\n                classDiagram.updateArrows();\r\n                that.$element.find('rect').removeClass('dragging');\r\n                jQuery(document).off('mouseup.diagramElement');\r\n                jQuery(document).off('mousemove.diagramElement');\r\n                classDiagram.dirty = true;\r\n            });\r\n\r\n\r\n        })\r\n    }\r\n\r\n    getVisibilityText(visibility: Visibility) {\r\n        switch (visibility) {\r\n            case Visibility.private: return \"-\";\r\n            case Visibility.protected: return \"#\";\r\n            case Visibility.public: return \"+\";\r\n        }\r\n    }\r\n\r\n    getSignature(klass: Klass | Interface): number {\r\n\r\n        let s: string = \"\";\r\n\r\n        if (klass instanceof Klass && this.withAttributes && klass.attributes.length > 0) {\r\n            for (let a of klass.attributes) s += this.getVisibilityText(a.visibility) + a.type.identifier + \" \" + a.identifier;\r\n        }\r\n\r\n        if (this.withMethods && klass.methods.length > 0) {\r\n            for (let m of klass.methods) {\r\n                if (m.isConstructor) continue;\r\n                let rt: string = m.returnType == null ? \"void\" : m.returnType.identifier;\r\n                s += this.getVisibilityText(m.visibility) + rt + \" \" + m.identifier + \"(\" +\r\n                    m.parameterlist.parameters.map((p) => { return p.type.identifier + \" \" + p.identifier }).join(\", \") + \")\";\r\n            }\r\n        }\r\n\r\n        return hash(s);\r\n\r\n    }\r\n\r\n    hasSignatureAndFileOf(klass: Klass | Interface) {\r\n        return klass.module.file.name == this.filename &&\r\n            this.getSignature(klass) == this.hashedSignature;\r\n    }\r\n\r\n\r\n\r\n}","import { Point } from \"./Router.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { DiagramUnitCm } from \"../Diagram.js\";\r\n\r\ntype Step = {r: number, f: number};\r\ntype Arrow = {\r\n    steps: Step[],\r\n    stroke: string,\r\n    fill: string,\r\n    \"stroke-dasharray\": string\r\n}\r\n\r\nexport class ArrowHead {\r\n\r\n    static rauteAlpha = 60;\r\n    static arrows: {[type: string]: Arrow} = {\r\n        \"inheritance\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined //\"4\"\r\n        },\r\n        \"realization\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#8080ff\",\r\n            \"stroke-dasharray\": \"4\"\r\n        },\r\n        \"composition\": {\r\n            steps: [{r: 90 + ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3},\r\n                 {r: 2*ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined\r\n        },\r\n    }\r\n\r\n    static makeHead(position1Cm: Point, position2Cm: Point, type: string): {\r\n        path: string,\r\n        stroke: string,\r\n        fill: string,\r\n    } {\r\n\r\n        let dx = position2Cm.x - position1Cm.x;\r\n        let dy = position2Cm.y - position1Cm.y;\r\n\r\n        let d = Math.sqrt(dx*dx+dy*dy);\r\n        \r\n        if(d < 0.00001) return {path: \"\", stroke: \"none\", fill: \"none\"};\r\n\r\n        let ex = dx/d;\r\n        let ey = dy/d;\r\n\r\n        let path: string = \"M \" + position2Cm.x * DiagramUnitCm / DiagramArrow.cmPerPx \r\n            + \" \" + position2Cm.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n\r\n        let arrow = this.arrows[type];\r\n\r\n        for(let step of arrow.steps){\r\n            let angle = step.r / 180 * Math.PI;\r\n            let ex1 = ex * Math.cos(angle) - ey * Math.sin(angle);\r\n            let ey1 = ex * Math.sin(angle) + ey * Math.cos(angle);\r\n            path += \" l \" + ex1 * step.f / DiagramArrow.cmPerPx + \" \" + ey1 * step.f / DiagramArrow.cmPerPx;\r\n            ex = ex1;\r\n            ey = ey1;\r\n        }\r\n\r\n        return {\r\n            path: path,\r\n            fill: arrow.fill,\r\n            stroke: arrow.stroke\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"../Diagram.js\";\r\nimport { RoutingArrow, Point } from \"./Router.js\";\r\nimport { ArrowHead } from \"./ArrowHead.js\";\r\n\r\nexport class DiagramArrow {\r\n\r\n    public static cmPerPx: number = 2.54 / 96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    constructor(protected parent: Element, private routingArrow: RoutingArrow, private color: string) {\r\n\r\n    }\r\n\r\n    public show() {\r\n        if (this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide() {\r\n        if (this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if (this.$element == null) return;\r\n        this.$element.detach();\r\n    }\r\n\r\n    remove() {\r\n        if (this.$element == null) return;\r\n        this.$element.remove();\r\n    }\r\n\r\n    appendTo($element: JQuery<Element>) {\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear() {\r\n        if (this.$element == null) return;\r\n        this.$element.empty();\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        if (parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n            font: \"16px Roboto\",\r\n            \"font-family\": \"sans-serif\",\r\n            fill: \"#000\",\r\n            \"alignment-baseline\": \"hanging\"\r\n        });\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        $element.text(text);\r\n\r\n        return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>): { height: number, width: number } {\r\n        let bbox: DOMRect = textElement[0].getBBox();\r\n\r\n        return {\r\n            height: bbox.height * DiagramArrow.cmPerPx,\r\n            width: bbox.width * DiagramArrow.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public render() {\r\n\r\n        let $group = this.$element;\r\n        if ($group == null) {\r\n            $group = this.createElement(\"g\", this.parent);\r\n            this.$element = $group;\r\n            $group.css(\"stroke\", this.color);\r\n        } else {\r\n            $group.empty();\r\n        }\r\n\r\n        let points = this.routingArrow.minimalPoints;\r\n        if (points == null || points.length < 2) {\r\n            return;\r\n        }\r\n\r\n        let path = \"M \" + this.getPathCoordinates(points[0]);\r\n\r\n        for (let i = 1; i < points.length; i++) {\r\n            path += \" L \" + this.getPathCoordinates(points[i]);\r\n        }\r\n\r\n        let arrowData = ArrowHead.arrows[this.routingArrow.arrowType];\r\n        let $path = this.createElement(\"path\", $group[0], { d: path });\r\n        $path.css({\r\n            // stroke: \"#000000\",\r\n            \"stroke-width\": \"0.2 cm\",\r\n            \"fill\": \"none\",\r\n            \"stroke-dasharray\": arrowData[\"stroke-dasharray\"]\r\n        });\r\n\r\n        while (points.length > 1 && points[points.length - 1].x == points[points.length - 2].x &&\r\n            points[points.length - 1].y == points[points.length - 2].y) {\r\n            points.pop();\r\n        }\r\n\r\n        if (points.length > 1 && this.routingArrow.endsOnArrowWithIdentifier == null) {\r\n            let head = ArrowHead.makeHead(points[points.length - 2], points[points.length - 1],\r\n                this.routingArrow.arrowType);\r\n\r\n            let $head = this.createElement(\"path\", $group[0], { d: head.path });\r\n            $head.css({\r\n                stroke: this.color,\r\n                \"stroke-width\": \"0.2 cm\",\r\n                \"fill\": head.fill\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getPathCoordinates(point: Point): string {\r\n        let x = point.x * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        let y = point.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        return \"\" + x + \" \" + y;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Interface, Klass } from \"../../../../compiler/types/Class.js\";\r\nimport { Workspace } from \"../../../../workspace/Workspace.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram, DiagramUnitCm } from \"../Diagram.js\";\r\nimport { ClassBox, SerializedClassBox } from \"./ClassBox.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { RoutingInput, RoutingOutput } from \"./Router.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\nimport { openContextMenu } from \"../../../../tools/HtmlTools.js\";\r\nimport { TeachersWithClassesMI } from \"../../../../administration/TeachersWithClasses.js\";\r\n\r\ntype ClassBoxes = {\r\n    active: ClassBox[],\r\n    inactive: ClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n};\r\n\r\nexport type SerializedClassDiagram = {\r\n    classBoxes: SerializedClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n}\r\n\r\nexport class ClassDiagram extends Diagram {\r\n\r\n    classBoxesRepository: { [workspaceId: number]: ClassBoxes } = {};\r\n\r\n    arrows: DiagramArrow[] = [];\r\n\r\n    currentWorkspaceId: number = null;\r\n    currentWorkspace: Workspace;\r\n    currentClassBoxes: ClassBoxes;\r\n\r\n    version: number = 0;\r\n\r\n    straightArrowSectionAfterRectangle = 2;\r\n    distanceFromRectangles = 2;\r\n    slotDistance = 2;\r\n\r\n    dirty: boolean = false;\r\n    routingWorker: Worker;\r\n\r\n    constructor(private $htmlElement: JQuery<HTMLElement>, main: MainBase) {\r\n        super($htmlElement, main);\r\n\r\n        let that = this;\r\n        this.$menuButton.on('click', (ev) => {\r\n            ev.preventDefault();\r\n            let displaysSystemClasses = that.currentClassBoxes.displaySystemClasses == true;\r\n            let parametersWithTypes = that.currentClassBoxes.parametersWithTypes == true;\r\n            openContextMenu([\r\n                {\r\n                    caption: displaysSystemClasses ? \"Systemklassen ausblenden\" : \"Systemklassen einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.displaySystemClasses = !displaysSystemClasses;\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n                {\r\n                    caption: parametersWithTypes ? \"Parameter ausblenden\" : \"Parameter einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.parametersWithTypes = !parametersWithTypes;\r\n                        that.currentClassBoxes.active.forEach((cb) => {cb.hashedSignature = -1});\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n            ], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        });\r\n    }\r\n\r\n    clearAfterLogout() {\r\n        this.classBoxesRepository = {};\r\n        this.arrows.forEach((arrow) => { arrow.remove(); });\r\n        $(this.svgElement).empty();\r\n    }\r\n\r\n    serialize(): SerializedClassDiagram {\r\n\r\n        if(this.currentClassBoxes == null) return;\r\n\r\n        let scd: SerializedClassDiagram = {\r\n            classBoxes: [],\r\n            displaySystemClasses: this.currentClassBoxes.displaySystemClasses,\r\n            parametersWithTypes: this.currentClassBoxes.parametersWithTypes\r\n        }\r\n\r\n        for (let workspaceId in this.classBoxesRepository) {\r\n            let classBox = this.classBoxesRepository[workspaceId];\r\n            for (let cb of classBox.active) {\r\n                let cbs = cb.serialize();\r\n                cbs.workspaceId = Number.parseInt(workspaceId);\r\n                scd.classBoxes.push(cbs);\r\n            }\r\n        }\r\n\r\n        return scd;\r\n\r\n    }\r\n\r\n    deserialize(serializedClassDiagram: SerializedClassDiagram) {\r\n        for (let cb of serializedClassDiagram.classBoxes) {\r\n            let classBoxes: ClassBoxes = this.classBoxesRepository[cb.workspaceId];\r\n            if (classBoxes == null) {\r\n                classBoxes = {\r\n                    active: [],\r\n                    inactive: [],\r\n                    displaySystemClasses: false,\r\n                    parametersWithTypes: false\r\n                }\r\n                this.classBoxesRepository[cb.workspaceId] = classBoxes;\r\n            }\r\n            classBoxes.inactive.push(ClassBox.deserialize(this, cb));\r\n            classBoxes.displaySystemClasses = serializedClassDiagram.displaySystemClasses;\r\n            classBoxes.parametersWithTypes = serializedClassDiagram.parametersWithTypes;\r\n        }\r\n    }\r\n\r\n\r\n    adjustClassDiagramSize() {\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n        this.adjustSizeAndElements(classBoxes.active);\r\n    }\r\n\r\n    getClassBoxes(workspace: Workspace): ClassBoxes {\r\n        let cb: ClassBoxes = this.classBoxesRepository[workspace.id];\r\n        if (cb == null) {\r\n            cb = {\r\n                active: [],\r\n                inactive: [],\r\n                displaySystemClasses: false,\r\n                parametersWithTypes: false\r\n            }\r\n            this.classBoxesRepository[workspace.id] = cb;\r\n        }\r\n        return cb;\r\n    }\r\n\r\n    switchToWorkspace(workspace: Workspace): ClassBoxes {\r\n        let cbs1 = this.getClassBoxes(workspace);\r\n\r\n        if (this.currentWorkspaceId != workspace.id) {\r\n            if (this.currentWorkspaceId != null) {\r\n                let cbs = this.classBoxesRepository[this.currentWorkspaceId];\r\n                if (cbs != null) {\r\n                    for (let cb of cbs.active) {\r\n                        cb.detach();\r\n                    }\r\n                    for (let cb of cbs.inactive) {\r\n                        cb.detach();\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let cb of cbs1.active) {\r\n                this.svgElement.appendChild(cb.$element[0]);\r\n            }\r\n            for (let cb of cbs1.inactive) {\r\n                if (cb.$element != null) {\r\n                    this.svgElement.appendChild(cb.$element[0]);\r\n                }\r\n            }\r\n\r\n            this.adjustSizeAndElements(cbs1.active);\r\n        }\r\n\r\n        this.currentWorkspaceId = workspace.id;\r\n\r\n        return cbs1;\r\n\r\n    }\r\n\r\n    drawDiagram(workspace: Workspace, onlyUpdateIdentifiers: boolean) {\r\n\r\n        if (workspace == null) return;\r\n        this.currentWorkspace = workspace;\r\n        this.currentClassBoxes = this.switchToWorkspace(workspace);\r\n\r\n        let moduleStore = workspace.moduleStore;\r\n\r\n        let newClassBoxes: ClassBox[] = [];\r\n\r\n        let anyTypelistThere: boolean = false;\r\n        let newClassesToDraw: (Klass | Interface)[] = [];\r\n        let usedSystemClasses: (Klass | Interface)[] = [];\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let typeList = module?.typeStore?.typeList;\r\n            if (typeList == null) continue;\r\n            anyTypelistThere = true;\r\n\r\n\r\n            typeList.filter((type) => {\r\n                return type instanceof Klass ||\r\n                    type instanceof Interface\r\n            }).forEach((klass: Klass | Interface) => {\r\n                let cb: ClassBox = this.findAndEnableClass(klass, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n                if (klass instanceof Klass) {\r\n                    klass.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            });\r\n        }\r\n\r\n        // recursively register system classes that are used by other system classes\r\n        let uscList1: (Klass | Interface)[] = [];\r\n        while (uscList1.length < usedSystemClasses.length) {\r\n            uscList1 = usedSystemClasses.slice(0);\r\n            for (let usc of uscList1) {\r\n                if (usc instanceof Klass) {\r\n                    usc.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.currentClassBoxes.displaySystemClasses) {\r\n            for (let usc of usedSystemClasses) {\r\n                let cb: ClassBox = this.findAndEnableClass(usc, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n            }\r\n        }\r\n\r\n        this.dirty = this.dirty || newClassesToDraw.length > 0;\r\n\r\n        for (let klass of newClassesToDraw) {\r\n            let cb = new ClassBox(this, Math.random() * 10 * DiagramUnitCm, Math.random() * 10 * DiagramUnitCm, klass);\r\n\r\n            cb.renderLines();\r\n\r\n            let freePos = this.findFreeSpace(newClassBoxes, cb.widthCm, cb.heightCm, this.minDistance);\r\n\r\n            cb.moveTo(freePos.x, freePos.y, true);\r\n\r\n            newClassBoxes.push(cb);\r\n\r\n        }\r\n\r\n        if (newClassesToDraw.length > 0) {\r\n            this.adjustSizeAndElements(newClassBoxes);\r\n        }\r\n\r\n        if (!anyTypelistThere) return;\r\n\r\n        for (let cb of this.currentClassBoxes.active) {\r\n            cb.hide();\r\n            cb.active = false;\r\n            this.currentClassBoxes.inactive.push(cb);\r\n        }\r\n\r\n        this.currentClassBoxes.active = newClassBoxes;\r\n\r\n        if (!onlyUpdateIdentifiers) {\r\n            this.adjustClassDiagramSize();\r\n            this.updateArrows();\r\n        }\r\n\r\n    }\r\n\r\n    updateArrows() {\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n        // return;\r\n\r\n        let colors: string[] = [\"#0075dc\", \"#993f00\", \"#005c31\", \"#ff5005\", \"#2bce48\",\r\n            \"#0000ff\", \"#ffa405\", '#ffa8bb', '#740aff', '#990000', '#ff0000'];\r\n        let colorIndex = 0;\r\n\r\n        let routingInput = this.drawArrows();\r\n\r\n        this.version++;\r\n        routingInput.version = this.version;\r\n\r\n        if (this.routingWorker != null) {\r\n            this.routingWorker.terminate();\r\n        }\r\n\r\n        this.routingWorker = new Worker('js/main/gui/diagrams/classdiagram/Router.js');\r\n        let that = this;\r\n        this.routingWorker.onmessage = function (e) {\r\n            // when worker finished:\r\n            let ro: RoutingOutput = e.data;\r\n            if (ro.version == that.version) {\r\n                that.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n                that.arrows.forEach((arrow) => { arrow.remove(); });\r\n\r\n                let arrowIdentifierToColorMap: { [identifier: string]: string } = {};\r\n\r\n                let arrowsWithoutColor: number = ro.arrows.length + 1;\r\n                let arrowsWithoutColorLast: number;\r\n                do {\r\n                    arrowsWithoutColorLast = arrowsWithoutColor;\r\n                    arrowsWithoutColor = 0;\r\n                    ro.arrows.forEach((arrow) => {\r\n                        if (arrow.color == null) {\r\n                            arrowsWithoutColor++;\r\n                            if (arrow.endsOnArrowWithIdentifier == null) {\r\n                                arrow.color = colors[colorIndex];\r\n                                arrowIdentifierToColorMap[arrow.identifier] = arrow.color;\r\n                                colorIndex++;\r\n                                if (colorIndex > colors.length - 1) colorIndex = 0;\r\n                            } else {\r\n                                arrow.color = arrowIdentifierToColorMap[arrow.endsOnArrowWithIdentifier];\r\n                            }\r\n                        }\r\n                    });\r\n                } while (arrowsWithoutColor < arrowsWithoutColorLast);\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    if (arrow.color == null) {\r\n                        arrow.color = \"#ff0000\";\r\n                    }\r\n                });\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    let da: DiagramArrow = new DiagramArrow(that.svgElement, arrow, arrow.color);\r\n                    da.render();\r\n                    that.arrows.push(da);\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n\r\n        this.routingWorker.postMessage(routingInput); // start worker!\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').show();\r\n\r\n    }\r\n\r\n    drawArrows(): RoutingInput {\r\n\r\n        let routingInput: RoutingInput = {\r\n            rectangles: [],\r\n            arrows: [],\r\n            xMax: Math.ceil(this.widthCm / DiagramUnitCm),\r\n            yMax: Math.ceil(this.heightCm / DiagramUnitCm),\r\n            straightArrowSectionAfterRectangle: this.straightArrowSectionAfterRectangle,\r\n            distanceFromRectangles: this.distanceFromRectangles,\r\n            slotDistance: this.slotDistance\r\n        }\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n            routingInput.rectangles.push(cb.getRoutingRectangle());\r\n        });\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n\r\n            if (cb.klass instanceof Klass) {\r\n                if (cb.klass.baseClass != null) {\r\n                    let cb1 = this.findClassbox(cb.klass.baseClass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"inheritance\", routingInput);\r\n                    }\r\n                }\r\n                for (let intf of cb.klass.implements) {\r\n                    let cb1 = this.findClassbox(intf, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"realization\", routingInput);\r\n                    }\r\n                }\r\n                for (let cd of cb.klass.getCompositeData()) {\r\n                    let cb1 = this.findClassbox(cd.klass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb1, cb, \"composition\", routingInput);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return routingInput;\r\n\r\n    }\r\n\r\n    drawArrwow(cb1: ClassBox, cb2: ClassBox, arrowType: string, routingInput: RoutingInput) {\r\n\r\n        let rect1 = cb1.getRoutingRectangle();\r\n        let rect2 = cb2.getRoutingRectangle();\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        routingInput.arrows.push({\r\n            arrowType: arrowType,\r\n\r\n            destRectangleIndex: classBoxes.active.indexOf(cb2),\r\n\r\n            sourceRectangleIndex: classBoxes.active.indexOf(cb1),\r\n\r\n            destinationIdentifier: cb2.className,\r\n            identifier: cb1.className + \"(extends)\" + cb2.className\r\n        });\r\n\r\n    }\r\n\r\n    findClassbox(klass: Klass | Interface, classBoxes: ClassBox[]): ClassBox {\r\n\r\n        for (let cb of classBoxes) {\r\n            if (cb.klass == klass) return cb;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAndEnableClass(klass: Klass | Interface, classBoxes: ClassBoxes, newClassesToDraw: (Klass | Interface)[]): ClassBox {\r\n        let i = 0;\r\n        while (i < classBoxes.active.length) {\r\n            let k = classBoxes.active[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                k.attachToClass(klass);\r\n                classBoxes.active.splice(i, 1);\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        i = 0;\r\n        while (i < classBoxes.inactive.length) {\r\n            let k = classBoxes.inactive[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                classBoxes.inactive.splice(i, 1);\r\n                k.klass = klass;\r\n                k.renderLines();\r\n                k.show();\r\n                k.active = true;\r\n                this.dirty = true;\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        newClassesToDraw.push(klass);\r\n\r\n        return null;\r\n    }\r\n\r\n    clear() {\r\n\r\n        let cb = this.classBoxesRepository[this.currentWorkspaceId];\r\n        if (cb != null) {\r\n            for (let c of cb.active) {\r\n                c.detach();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Klass, Interface, Visibility } from \"../../../../compiler/types/Class.js\";\r\nimport { Variable, Value } from \"../../../../compiler/types/Types.js\";\r\nimport { ObjectClass } from \"../../../../compiler/types/ObjectClass.js\";\r\nimport { RuntimeObject } from \"../../../../interpreter/RuntimeObject.js\";\r\n\r\ntype Reference = {\r\n    sourceValue: RuntimeObject,\r\n    destValue: RuntimeObject,\r\n    attributeIdentifier: string\r\n}\r\n\r\nexport class ListDiagram extends ObjectDiagramVariant {\r\n\r\n    rootIdentifier: string;\r\n\r\n    $selectElement: JQuery<HTMLSelectElement>;\r\n\r\n    getSettingsElement(): JQuery<HTMLElement> {\r\n\r\n        let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n\r\n        let $element = jQuery('<span>Start der Liste:&nbsp;</span>');\r\n        this.$selectElement = jQuery('<select></select>');\r\n        $element.append(this.$selectElement);\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let childSymbolTables = module.mainSymbolTable?.childSymbolTables;\r\n            if (childSymbolTables == null || childSymbolTables.length == 0) continue;\r\n            let variableMap = childSymbolTables[0].variableMap;\r\n            if (variableMap == null || childSymbolTables[0].classContext != null) continue;\r\n            variableMap.forEach((variable, identifier) => {\r\n                let type = variable.type;\r\n                if (type != null && type instanceof Klass && type.module != null && !type.module.isSystemModule) {\r\n                    let selected: string = identifier == this.rootIdentifier ? \" selected\" : \"\";\r\n                    this.$selectElement.append('<option value=\"' + identifier + selected + '\">' + identifier +\r\n                        ' (Modul \"' + module.file.name + '\")</option>');\r\n                }\r\n            });\r\n        }\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    getName(): string { return \"Liste\" }\r\n\r\n    updateDiagram(): void {\r\n\r\n        let heap = this.main.getInterpreter().heap;\r\n        let rootValue = heap[this.rootIdentifier]?.value;\r\n        if (rootValue == null) {\r\n            this.objectDiagram.error(\"Konnte die Variable \" + this.rootIdentifier + \" nicht finden.\");\r\n            return;\r\n        }\r\n\r\n        if (rootValue.type == null || !(rootValue.type instanceof Klass)) {\r\n            this.objectDiagram.error(\"Die Variable \" + this.rootIdentifier + \" zeigt auf kein Objekt.\");\r\n        }\r\n\r\n        let klass: Klass = <Klass>rootValue.type;\r\n        let rto: RuntimeObject = rootValue.value;\r\n\r\n        // if rootValue is self of self referncing type then this array holds values:\r\n        let rootValueSelfReferenceType = this.analyzeSelfReference(klass);\r\n\r\n        // ... else find referenced class which is of self referencing type;\r\n        let attributesWithSelfReference: string[] = [];\r\n        let selfReferenceType: Klass | Interface;\r\n\r\n        if (rootValueSelfReferenceType == null) {\r\n\r\n            let k = klass;\r\n            while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n                for (let a of k.attributes) {\r\n                    let value = rto.attributes[a.index];\r\n                    if (!(value.type instanceof Klass)) continue;\r\n                    if (selfReferenceType != null && selfReferenceType == a.type) {\r\n                        attributesWithSelfReference.push(a.identifier);\r\n                    } else {\r\n                        let sr = this.analyzeSelfReference(value.type);\r\n                        if (sr != null) {\r\n                            selfReferenceType = sr;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                k = k.baseClass;\r\n            }\r\n\r\n        }\r\n\r\n        if (rootValueSelfReferenceType == null && selfReferenceType == null) {\r\n            this.objectDiagram.error(\"Konnte kein sich selbst referenzierendes Objekt finden.\");\r\n        } else {\r\n            this.drawDiagram(rootValue, rootValueSelfReferenceType, attributesWithSelfReference, selfReferenceType);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    drawDiagram(rootValue: Value, rootValueSelfReferenceType: Klass | Interface,\r\n        attributesWithSelfReference: string[], selfReferenceType: Klass | Interface) {\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n    analyzeSelfReference(klass: Klass): Klass | Interface {\r\n\r\n        let tImplements: Interface[] = [];\r\n        let tExtends: Klass[];\r\n\r\n        let k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n            if (k.implements.length > 0)\r\n                tImplements = tImplements.concat(k.implements);\r\n\r\n            if (k.baseClass != null && !(k.baseClass instanceof ObjectClass)) {\r\n                tExtends.push(k.baseClass);\r\n            }\r\n            k = k.baseClass;\r\n        }\r\n\r\n        k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n            for (let a of k.attributes) {\r\n                let type = a.type;\r\n                if (tImplements.indexOf(<Interface>type) >= 0 || tExtends.indexOf(<Klass>type) >= 0) {\r\n                    return <Klass | Interface>type;\r\n                }\r\n            }\r\n\r\n            k = k.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    clear(): void {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../../../Main.js\";\r\nimport { ObjectDiagram } from \"./ObjectDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\n\r\nexport abstract class ObjectDiagramVariant {\r\n\r\n    constructor(protected main: MainBase, protected objectDiagram: ObjectDiagram){\r\n\r\n    }\r\n\r\n    abstract getName(): string;\r\n\r\n    abstract getSettingsElement(): JQuery<HTMLElement>;\r\n    \r\n    abstract updateDiagram(): void;\r\n\r\n    abstract clear(): void;\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { ListDiagram } from \"./ListDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\nexport class ObjectDiagram extends Diagram {\r\n\r\n    variants: ObjectDiagramVariant[] = [];\r\n    currentVariant: ObjectDiagramVariant = null;\r\n\r\n    constructor(main: MainBase, private $objectDiagramDiv: JQuery<HTMLElement>) {\r\n        super($objectDiagramDiv.find('.jo_objectdiagram-canvas'), main);\r\n        this.variants.push(new ListDiagram(main, this));\r\n\r\n        let $typeOption = $objectDiagramDiv.find('.jo_objectdiagram-type');\r\n        $typeOption.empty();\r\n        $typeOption.append('<option value=\"none\" selected>Bitte auswählen...</option>');\r\n\r\n        let i = 0;\r\n        for (let variant of this.variants) {\r\n            $typeOption.append('<option value=\"' + i + '\">' + variant.getName() + '</option>');\r\n        }\r\n\r\n        let that = this;\r\n        $typeOption.on('change', (e) => {\r\n            //@ts-ignore\r\n            let value: string = e.currentTarget.value;\r\n            if(value == null){\r\n                if(that.currentVariant != null){\r\n                    that.$canvas.find('.jo_objectDiagramError').remove();\r\n                    that.currentVariant.clear();\r\n                }\r\n                that.currentVariant = null;\r\n            } else {\r\n                let intValue = Number.parseInt(value);\r\n                that.currentVariant = that.variants[intValue];\r\n            }\r\n            that.updateSettings();\r\n        });\r\n\r\n    }\r\n\r\n    error(error: string){\r\n        this.$canvas.append('<div class=\"jo_objectDiagramError\">' + error + '</div>')\r\n    }\r\n\r\n\r\n    updateSettings(){\r\n        let $settingsDiv = this.$objectDiagramDiv.find('.jo_objectdiagram-settings');\r\n        if(this.currentVariant != null){\r\n            $settingsDiv.empty();\r\n            $settingsDiv.append(this.currentVariant.getSettingsElement());\r\n        } else {\r\n            $settingsDiv.empty();\r\n        }\r\n    }\r\n    \r\n    updateDiagram(){\r\n        if(this.currentVariant != null){\r\n            this.currentVariant.updateDiagram();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { WorldHelper } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassDiagram } from \"./diagrams/classdiagram/ClassDiagram.js\";\r\nimport { ObjectDiagram } from \"./diagrams/objectdiagram/ObjectDiagram.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    classDiagram: ClassDiagram;\r\n    objectDiagram: ObjectDiagram;\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        if(withClassDiagram){\r\n            this.classDiagram = new ClassDiagram(this.$tabs.find('.jo_classdiagram'), main);\r\n            this.$headings.find('.jo_classDiagramTabHeading').on(\"click\", () => { that.main.drawClassDiagrams(false) });\r\n        }\r\n\r\n        if(withObjectDiagram){\r\n            this.objectDiagram = new ObjectDiagram(this.main, this.$tabs.find('.jo_objectdiagram'));\r\n            this.$headings.find('.jo_objectDiagramTabHeading').on(\"click\", () => { that.onObjectDiagramEnabled() });\r\n        }\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    adjustWidthToWorld() {\r\n        let worldHelper: WorldHelper = this.main.getInterpreter().worldHelper;\r\n        if (worldHelper != null && this.isWholePage) {\r\n            let screenHeight = window.innerHeight - this.$headings.height() - 6;\r\n            let screenWidthToHeight = window.innerWidth / (screenHeight);\r\n            let worldWidthToHeight = worldHelper.width / worldHelper.height;\r\n            if (worldWidthToHeight <= screenWidthToHeight) {\r\n                let newWidth = worldWidthToHeight * screenHeight;\r\n                this.$tabs.find('.jo_run').css('width', newWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', screenHeight + \"px\");\r\n            } else {\r\n                let newHeight = window.innerWidth / worldWidthToHeight;\r\n                this.$tabs.find('.jo_run').css('width', window.innerWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', newHeight + \"px\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n    isClassDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_classDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    isObjectDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_objectDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    updateObjectDiagramSettings() {\r\n        if (this.isObjectDiagramEnabled) {\r\n            this.objectDiagram.updateSettings();\r\n        }\r\n    }\r\n\r\n    onObjectDiagramEnabled() {\r\n        this.objectDiagram.updateSettings();\r\n        if (this.main.getInterpreter().state == InterpreterState.paused || this.main.getInterpreter().state == InterpreterState.running) {\r\n            this.objectDiagram.updateDiagram();\r\n        }\r\n    }\r\n\r\n\r\n}","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$sliderDiv.on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider\");\r\n                jQuery(document).off(mousePointer + \"up.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        if($fileListDiv != null){\r\n            let $filesDiv = $fileListDiv.parent();\r\n            let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n            $filesDiv.append($addButton);\r\n    \r\n            $addButton.on(\"click\", () => {\r\n    \r\n                let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"java\" });\r\n                let fileData = this.addModule(module);\r\n    \r\n                this.renameElement(fileData, () => {\r\n                    // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                    if (that.currentFile != fileData) {\r\n                        that.selectFile(fileData);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        if(this.$fileListDiv != null){\r\n            this.$fileListDiv.append($fileDiv);\r\n        }\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"java\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv,\r\n            isFolder: false,\r\n            path: []\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"java\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        if(this.$fileListDiv == null) return;\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(\"LearnJ\", 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStore = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n\r\n\r\n                objectStore.transaction.oncomplete = function(event) {\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File, ExportedWorkspace } from \"../compiler/parser/Module.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { downloadFile, makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { HitPolygonStore } from \"../runtimelibrary/graphics/PolygonStore.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withPCode?: boolean,\r\n    withConsole?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    speed?: number | \"max\",\r\n    id?: string,\r\n    hideStartPanel?: boolean,\r\n    hideEditor?: boolean,\r\n    libraries?: string[],\r\n    jsonFilename?: string\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    isEmbedded(): boolean { return true; }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) { };\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n    $runDiv: JQuery<HTMLElement>;\r\n\r\n    debugger: Debugger;\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $resetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.initGUI($div);\r\n\r\n        this.initScripts();\r\n\r\n        if (!this.config.hideStartPanel) {\r\n            this.indexedDB = new EmbeddedIndexedDB();\r\n            this.indexedDB.open(() => {\r\n\r\n                if (this.config.id != null) {\r\n                    this.readScripts();\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"java-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if (this.config.hideEditor == null) this.config.hideEditor = false;\r\n        if (this.config.hideStartPanel == null) this.config.hideStartPanel = false;\r\n\r\n        if (this.config.withBottomPanel == null) {\r\n            this.config.withBottomPanel = this.config.withConsole || this.config.withPCode || this.config.withFileList || this.config.withErrorList;\r\n        }\r\n\r\n        if (this.config.hideEditor) {\r\n            this.config.withBottomPanel = false;\r\n            this.config.withFileList = false;\r\n            this.config.withConsole = false;\r\n            this.config.withPCode = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n        if (this.config.withBottomPanel) {\r\n            if (this.config.withFileList == null) this.config.withFileList = true;\r\n            if (this.config.withPCode == null) this.config.withPCode = true;\r\n            if (this.config.withConsole == null) this.config.withConsole = true;\r\n            if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        }\r\n\r\n        if (this.config.speed == null) this.config.speed = 9;\r\n        if (this.config.libraries == null) this.config.libraries = [];\r\n        if(this.config.jsonFilename == null) this.config.jsonFilename = \"workspace.json\";\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if(module == null) return;\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n        module.renderBreakpointDecorators();\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            script = this.eraseDokuwikiSearchMarkup(script);\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"java\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$resetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n        this.currentWorkspace.settings.libraries = this.config.libraries;\r\n        this.currentWorkspace.alterAdditionalLibraries();\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"java\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            identical_to_repository_version: false,\r\n            file_type: 0\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n        let $resetModalWindow = this.makeCodeResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$resetButton = jQuery('<div class=\"joe_resetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$resetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        this.$resetButton.hide();\r\n\r\n        this.$resetButton.on(\"click\", () => { $resetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n        let $buttonOpen = jQuery('<label type=\"file\" class=\"img_open-file jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace aus Datei laden\"><input type=\"file\" style=\"display:none\"></label>');\r\n\r\n        let that = this;\r\n\r\n        $buttonOpen.find('input').on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            that.loadWorkspaceFromFile(files[0]);\r\n        })\r\n\r\n        let $buttonSave = jQuery('<div class=\"img_save-dark jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace in Datei speichern\"></div>');\r\n\r\n\r\n        $buttonSave.on('click', () => { that.saveWorkspaceToFile() });\r\n\r\n        $controlsDiv.append($buttonOpen, $buttonSave);\r\n\r\n\r\n\r\n        if (this.config.withBottomPanel) {\r\n            let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n            this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n            $bottomDiv.append($bottomDivInner);\r\n            if (this.config.withFileList) {\r\n                let $filesDiv = this.makeFilesDiv();\r\n                $bottomDiv.prepend($filesDiv);\r\n                new EmbeddedSlider($filesDiv, false, false, () => { });\r\n            }\r\n            makeTabs($bottomDivInner);\r\n\r\n\r\n            $centerDiv.append($editorDiv, $bottomDiv);\r\n            new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n        } else {\r\n            $centerDiv.prepend($editorDiv);\r\n        }\r\n\r\n\r\n\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            if (this.config.hideEditor) {\r\n                $rightDiv.prepend($controlsDiv);\r\n            } else {\r\n                $centerDiv.prepend($controlsDiv);\r\n                $controlsDiv.addClass('joe_controlPanel_top');\r\n                $editorDiv.css({\r\n                    'position': 'relative',\r\n                    'height': '1px'\r\n                });\r\n            }\r\n        }\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n        $div.append($centerDiv, $rightDiv);\r\n\r\n        if (!this.config.hideEditor) {\r\n            new EmbeddedSlider($rightDiv, true, false, () => {\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n                this.editor.editor.layout();\r\n            });\r\n        }\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\">');\r\n        let $coordinates = jQuery('<div class=\"jo_coordinates\">(0/0)</div>');\r\n        this.$rightDivInner.append($rightSideContainer);\r\n        $rightSideContainer.append($coordinates);\r\n\r\n        this.debugger = new Debugger(this, this.$debuggerDiv, null);\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons($controlsDiv, $editorDiv),\r\n            this.$runDiv);\r\n\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-left: 16px\"></div>');\r\n        $controlsDiv.append($infoButton);\r\n\r\n        $infoButton.on('mousedown', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über die Online-IDE ...\",\r\n                link: \"https://www.online-ide.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.interpreter.initGUI();\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.interpreter.controlButtons.speedControl.setSpeedInStepsPerSecond(this.config.speed);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n        if (this.config.hideEditor) {\r\n            $centerDiv.hide();\r\n            $rightDiv.css(\"flex\", \"1\");\r\n            if (!this.config.hideStartPanel) {\r\n                $div.find(\".joe_rightDivInner\").css('height', 'calc(100% - 24px)');\r\n                $div.find(\".joe_controlsDiv\").css('padding', '2px');\r\n                $div.find(\".jo_speedcontrol-outer\").css('z-index', '10');\r\n            } else {\r\n                $div.find(\".joe_controlsDiv\").hide();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        jQuery(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        jQuery(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$resetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            let fileData = this.fileExplorer.files.find((fileData) => fileData.module.file == file);\r\n            if (fileData == null) {\r\n                return;\r\n            }\r\n\r\n            if (fileData.module != this.getCurrentlyEditedModule()) {\r\n                this.setModuleActive(fileData.module);\r\n            }\r\n\r\n            this.programPointerModule = fileData.module;\r\n        } else {\r\n            this.programPointerModule = this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n        this.programPointerDecoration = this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealProgramPointer', isWholeLine: true }\r\n            },\r\n            {\r\n                range: range,\r\n                options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n            }\r\n        ]);\r\n\r\n\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Programmdateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n        // for (let index = 0; index < 20; index++) {            \r\n        //     let $file = jQuery('<div class=\"jo_file jo_java\"><div class=\"jo_fileimage\"></div><div class=\"jo_filename\"></div></div></div>');\r\n        //     $filesList.append($file);\r\n        // }\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                    bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                this.version++;\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    if (this.config.hideStartPanel) {\r\n                        this.actionManager.trigger('interpreter.start');\r\n                    }\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                // this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$resetButton.fadeIn(1000);\r\n        }\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        // clearTimeout(this.debounceDiagramDrawing);\r\n        // this.debounceDiagramDrawing = setTimeout(() => {\r\n        //     this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        // }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    saveWorkspaceToFile() {\r\n        let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", this.config.jsonFilename);\r\n        if (filename == null) {\r\n            alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n            return;\r\n        }\r\n        if (!filename.endsWith(\".json\")) filename = filename + \".json\";\r\n        let ws = this.currentWorkspace;\r\n        let name: string = ws.name.replace(/\\//g, \"_\");\r\n        downloadFile(ws.toExportedWorkspace(), filename)\r\n    }\r\n\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading\"></div>');\r\n\r\n        $thRightSide.append($buttonDiv);\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsoleClear = jQuery('<div class=\"img_clear-dark jo_button jo_active jo_console-clear\"' +\r\n                'style=\"display: none; margin-left: 8px;\" title=\"Console leeren\"></div>');\r\n            $thRightSide.append($thConsoleClear);\r\n        }\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsole = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_consoleTab\" style=\"line-height: 24px\">Console</div>');\r\n            $tabheadings.append($thConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading\" data-target=\"jo_pcodeTab\" style=\"line-height: 24px\">PCode</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withConsole) {\r\n            let $tabConsole = jQuery(\r\n                `\r\n        <div class=\"jo_editorFontSize jo_consoleTab\">\r\n        <div class=\"jo_console-inner\">\r\n            <div class=\"jo_scrollable jo_console-top\"></div>\r\n            <div class=\"jo_commandline\"></div>\r\n        </div>\r\n        </div>\r\n    `);\r\n\r\n            $tabs.append($tabConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $tabPCode = jQuery('<div class=\"jo_scrollable jo_pcodeTab\">PCode</div>');\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n    loadWorkspaceFromFile(file: globalThis.File) {\r\n        let that = this;\r\n        if (file == null) return;\r\n        var reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            let text: string = <string>event.target.result;\r\n            if (!text.startsWith(\"{\")) {\r\n                alert(`<div>Das Format der Datei ${file.name} passt nicht.</div>`);\r\n                return;\r\n            }\r\n\r\n            let ew: ExportedWorkspace = JSON.parse(text);\r\n\r\n            if (ew.modules == null || ew.name == null || ew.settings == null) {\r\n                alert(`<div>Das Format der Datei ${file.name} passt nicht.</div>`);\r\n                return;\r\n            }\r\n\r\n            let ws: Workspace = new Workspace(ew.name, this, 0);\r\n            ws.settings = ew.settings;\r\n            ws.alterAdditionalLibraries();\r\n\r\n            for (let mo of ew.modules) {\r\n                let f: File = {\r\n                    name: mo.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: mo.text,\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    is_copy_of_id: null,\r\n                    repository_file_version: null,\r\n                    identical_to_repository_version: null\r\n                };\r\n\r\n                let m = new Module(f, this);\r\n                ws.moduleStore.putModule(m);\r\n            }\r\n            that.currentWorkspace = ws;\r\n\r\n            if(that.fileExplorer != null){\r\n                that.fileExplorer.removeAllFiles();\r\n                ws.moduleStore.getModules(false).forEach(module => that.fileExplorer.addModule(module));\r\n                that.fileExplorer.setFirstFileActive();\r\n            } else {\r\n                this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n            }\r\n\r\n            that.saveScripts();\r\n\r\n        };\r\n        reader.readAsText(file);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n        this.$debuggerDiv = jQuery('<div class=\"joe_debuggerDiv\"></div>');\r\n        this.$runDiv = jQuery(\r\n            `\r\n            <div class=\"jo_tab jo_active jo_run\">\r\n            <div class=\"jo_run-programend\">Programm beendet</div>\r\n            <div class=\"jo_run-input\">\r\n            <div>\r\n            <div>\r\n        <div class=\"jo_run-input-message\" class=\"jo_rix\">Bitte geben Sie eine Zahl ein!</div>\r\n        <input class=\"jo_run-input-input\" type=\"text\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button-outer\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button\" class=\"jo_rix\">OK</div>\r\n        </div>\r\n        \r\n        <div class=\"jo_run-input-error\" class=\"jo_rix\"></div>\r\n    </div>\r\n    </div>\r\n    </div> \r\n    <div class=\"jo_run-inner\">\r\n    <div class=\"jo_graphics\"></div>\r\n    <div class=\"jo_output jo_scrollable\"></div>\r\n    </div>\r\n    \r\n    </div>\r\n    \r\n    `);\r\n\r\n\r\n        if (!this.config.hideEditor) {\r\n            let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n            $tabheadings.css('position', 'relative');\r\n            let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_run\" style=\"line-height: 24px\">Ausgabe</div>');\r\n            let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_variablesTab\" style=\"line-height: 24px\">Variablen</div>');\r\n            $tabheadings.append($thRun, $thVariables);\r\n            this.$rightDivInner.append($tabheadings);\r\n            let $vd = jQuery('<div class=\"jo_scrollable jo_editorFontSize jo_variablesTab\"></div>');\r\n\r\n            let $alternativeText = jQuery(`\r\n            <div class=\"jo_alternativeText jo_scrollable\">\r\n            <div style=\"font-weight: bold\">Tipp:</div>\r\n            Die Variablen sind nur dann sichtbar, wenn das Programm\r\n            <ul>\r\n            <li>im Einzelschrittmodus ausgeführt wird(Klick auf <span class=\"img_step-over-dark jo_inline-image\"></span>),</li>\r\n            <li>an einem Breakpoint hält (Setzen eines Breakpoints mit Mausklick links neben den Zeilennummern und anschließendes Starten des Programms mit \r\n                <span class=\"img_start-dark jo_inline-image\"></span>) oder </li>\r\n                <li>in sehr niedriger Geschwindigkeit ausgeführt wird (weniger als 10 Schritte/s).\r\n                </ul>\r\n                </div>\r\n                `);\r\n\r\n            $vd.append(this.$debuggerDiv, $alternativeText);\r\n            let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n            $tabs.append(this.$runDiv, $vd);\r\n            this.$rightDivInner.append($tabs);\r\n            makeTabs($rightDiv);\r\n        } else {\r\n            this.$rightDivInner.append(this.$runDiv);\r\n        }\r\n\r\n        return $rightDiv;\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData, serverURL: string) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Workspace importieren\",\r\n                                action: () => { new WorkspaceImporter(this.main).show(); }\r\n                            },\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); }},\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Repository\", subMenu: {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Eigene Repositories verwalten ...\",\r\n                                action: () => {this.main.repositoryUpdateManager.show(null)}\r\n                            },\r\n                            {\r\n                                identifier: \"Workspace mit Repository verbinden (checkout) ...\",\r\n                                action: () => {this.main.repositoryCheckoutManager.show(null)}\r\n                            },\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Hilfe\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Kurze Video-Tutorials zur Bedienung dieser IDE\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:ide_manual:start\"\r\n                            },\r\n                            {\r\n                                identifier: \"Interaktives Java-Tutorial mit vielen Beispielen\",\r\n                                link: \"https://www.learnj.de/doku.php\"\r\n                            },\r\n                            {\r\n                                identifier: \"Materialien für Lehrkräfte\",\r\n                                link: \"servlet/teachers/index.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"API-Dokumentation\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                // link: \"api_documentation.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"API-Verzeichnis\",\r\n                                //link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                link: serverURL + \"api_documentation.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Sprite-Bilderübersicht\",\r\n                                link: serverURL + \"spriteLibrary.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Tastaturkommandos (Shortcuts)\",\r\n                                link: serverURL + \"shortcuts.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Java-Online Changelog\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:changelog\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Roadmap\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:roadmap\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Befehlspalette (F1)\",\r\n                                action: () => {\r\n                                    setTimeout(() => {\r\n                                        that.main.getMonacoEditor().focus();\r\n                                        editor.getAction(\"editor.action.quickCommand\").run();\r\n                                    }, 500);\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Passwort ändern...\",\r\n                                action: () => {\r\n                                    let passwortChanger = new PasswordChanger(that.main);\r\n                                    passwortChanger.show();\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Über die Online-IDE...\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:ueber\"\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n                // ,\r\n                // {\r\n                //     identifier: \"Bearbeiten\", subMenu:\r\n                //     {\r\n                //         items: [\r\n                //             { identifier: \"Undo\" },\r\n                //             { identifier: \"Redo\" },\r\n                //             { identifier: \"Kopieren\" },\r\n                //             { identifier: \"Formatieren\"}\r\n                //         ]\r\n                //     }\r\n                // },\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin || user.is_schooladmin || user.is_teacher)) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Schulen/Klassen/Benutzer ...\",\r\n                            link: serverURL + \"administration_mc.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        if (user != null && (user.is_admin )) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Serverauslastung ...\",\r\n                            link: serverURL + \"statistics.html\"\r\n                        },{\r\n                            identifier:\"Shutdown server...\",\r\n                            action: () => {\r\n                                if(confirm(\"Server wirklich herunterfahren?\")){\r\n                                    ajax(\"shutdown\", {}, () => {\r\n                                        alert('Server erfolgreich heruntergefahren.');\r\n                                    }, (message) => {\r\n                                        alert(message);\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n            )\r\n        }\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { window.history.back(); });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.close();\r\n        });\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        window.history.back();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Workspace } from \"src/client/workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { CheckboxState, Dialog } from \"./Dialog.js\";\r\n\r\n\r\ntype Library = {\r\n    identifier: string,\r\n    description: string,\r\n    checkboxState?: CheckboxState\r\n}\r\n\r\nexport class WorkspaceSettingsDialog{\r\n\r\n    libraries: Library[] = [\r\n        {identifier: \"gng\", description: \"Graphics'n Games-Bibliothek zu den Informatikbüchern des Cornelsen-Verlages für das Land Bayern (Bemerkung: Die Klassen Turtle und Text heißen hier GTurtle und GText)\"}\r\n    ]\r\n\r\n    constructor(private workspace: Workspace, private main: Main){\r\n\r\n    }\r\n\r\n    open(){\r\n        let dialog = new Dialog();\r\n        dialog.init();\r\n        dialog.heading(\"Einstellungen zum Workspace \" + this.workspace.name);\r\n        dialog.subHeading(\"A. Verwendete Bibliotheken:\");\r\n\r\n        let currentLibraries = this.workspace.settings.libraries;\r\n\r\n        for(let library of this.libraries){\r\n            let cbs = dialog.addCheckbox(library.description, currentLibraries.indexOf(library.identifier) >= 0, library.identifier);\r\n            library.checkboxState = cbs;\r\n        }\r\n\r\n        dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    let changed: boolean = false;\r\n                    let newLibs: string[] = [];\r\n                    for(let lib of this.libraries){\r\n                        let used = lib.checkboxState();\r\n                        changed = changed || (used != (currentLibraries.indexOf(lib.identifier) >= 0));\r\n                        if(used) newLibs.push(lib.identifier);\r\n                    }\r\n\r\n                    if(changed){\r\n                        this.workspace.settings.libraries = newLibs;\r\n                        this.workspace.saved = false;\r\n                        this.workspace.alterAdditionalLibraries();\r\n                        this.main.networkManager.sendUpdates(null, true);\r\n                    }\r\n\r\n                    dialog.close();\r\n                }\r\n            },\r\n        ])\r\n \r\n\r\n    }\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { downloadFile, makeEditable, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { text } from \"express\";\r\nimport { WorkspaceData, Workspaces, ClassData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { WorkspaceSettingsDialog } from \"./WorkspaceSettingsDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n    $synchronizeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"3\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement,\r\n                    identical_to_repository_version: false\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n\r\n                    let module: Module = element.externalElement;\r\n\r\n                    let f: File = {\r\n                        name: module.file.name + \" - Kopie\",\r\n                        dirty: true,\r\n                        saved: false,\r\n                        text: module.file.text,\r\n                        text_before_revision: null,\r\n                        submitted_date: null,\r\n                        student_edited_after_revision: false,\r\n                        version: module.file.version,\r\n                        panelElement: null,\r\n                        identical_to_repository_version: false\r\n                    };\r\n\r\n                    let m = new Module(f, that.main);\r\n                    let workspace = that.main.currentWorkspace;\r\n                    let modulStore = workspace.moduleStore;\r\n                    modulStore.putModule(m);\r\n                    that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                        (error: string) => {\r\n                            if (error == null) {\r\n                                let element: AccordionElement = {\r\n                                    isFolder: false,\r\n                                    name: f.name,\r\n                                    path: [],\r\n                                    externalElement: m\r\n                                }\r\n                                f.panelElement = element;\r\n                                that.fileListPanel.addElement(element, true);\r\n                                that.fileListPanel.sortElements();\r\n                                that.setModuleActive(m);\r\n                                that.fileListPanel.renameElement(element);\r\n                            } else {\r\n                                alert('Der Server ist nicht erreichbar!');\r\n\r\n                            }\r\n                        });\r\n\r\n\r\n                }\r\n            });\r\n\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                if (file.submitted_date == null) {\r\n                    cmiList.push({\r\n                        caption: \"Als Hausaufgabe markieren\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = dateToString(new Date());\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n                        }\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Hausaufgabenmarkierung entfernen\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = null;\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n        this.$synchronizeAction = jQuery('<div class=\"img_open-change jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Workspace mit Repository synchronisieren\">');\r\n\r\n        \r\n\r\n        this.$synchronizeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            this.main.getCurrentWorkspace().synchronizeWithRepository();\r\n\r\n        })\r\n\r\n        this.fileListPanel.addAction(this.$synchronizeAction);\r\n        this.$synchronizeAction.hide();\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"WORKSPACES\", \"3\",\r\n            \"img_add-workspace-dark\", \"Neuer Workspace...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        this.workspaceListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                let owner_id: number = that.main.user.id;\r\n                if (that.main.workspacesOwnerId != null) {\r\n                    owner_id = that.main.workspacesOwnerId;\r\n                }\r\n\r\n                let w: Workspace = new Workspace(accordionElement.name, that.main, owner_id);\r\n                w.isFolder = false;\r\n                w.path = accordionElement.path.join(\"/\");\r\n                that.main.workspaceList.push(w);\r\n\r\n                that.main.networkManager.sendCreateWorkspace(w, that.main.workspacesOwnerId, (error: string) => {\r\n                    if (error == null) {\r\n                        that.fileListPanel.enableNewButton(true);\r\n                        successfulNetworkCommunicationCallback(w);\r\n                        that.setWorkspaceActive(w);\r\n                        w.renderSynchronizeButton(accordionElement);\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            };\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.clear();\r\n                        that.fileListPanel.setCaption('Bitte Workspace selektieren');\r\n                        this.$synchronizeAction.hide();\r\n                        that.fileListPanel.enableNewButton(false);\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if (workspace != null && !workspace.isFolder) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            that.main.networkManager.sendCreateWorkspace(folder, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    successCallback(folder);\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null,\r\n                identical_to_repository_version: false\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n        this.$homeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    this.main.networkManager.sendDuplicateWorkspace(element.externalElement,\r\n                        (error: string, workspaceData) => {\r\n                            if (error == null && workspaceData != null) {\r\n                                let newWorkspace: Workspace = Workspace.restoreFromData(workspaceData, this.main);\r\n                                this.main.workspaceList.push(newWorkspace);\r\n                                let path = workspaceData.path.split(\"/\");\r\n                                if (path.length == 1 && path[0] == \"\") path = [];\r\n                                newWorkspace.panelElement = {\r\n                                    name: newWorkspace.name,\r\n                                    externalElement: newWorkspace,\r\n                                    iconClass: newWorkspace.repository_id == null ? 'workspace' : 'repository',\r\n                                    isFolder: false,\r\n                                    path: path\r\n                                };\r\n\r\n                                this.workspaceListPanel.addElement(newWorkspace.panelElement, true);\r\n                                this.workspaceListPanel.sortElements();\r\n                            }\r\n                            if (error != null) {\r\n                                alert(error);\r\n                            }\r\n                        })\r\n                }\r\n            },\r\n            {\r\n                caption: \"Exportieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    let ws: Workspace = <Workspace>element.externalElement;\r\n                    let name: string = ws.name.replace(/\\//g, \"_\");\r\n                    downloadFile(ws.toExportedWorkspace(), name + \".json\")\r\n                }\r\n            } \r\n            );\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            if (this.main.repositoryOn && this.main.workspacesOwnerId == this.main.user.id) {\r\n                if (workspaceAccordionElement.externalElement.repository_id == null) {\r\n                    cmiList.push({\r\n                        caption: \"Repository anlegen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n\r\n                            that.main.repositoryCreateManager.show(workspace);\r\n                        },\r\n                        subMenu: null,\r\n                        // [{ n: 0, text: \"nur privat sichtbar\" }, { n: 1, text: \"sichtbar für die Klasse\" },\r\n                        // { n: 2, text: \"sichtbar für die Schule\" }].map((k) => {\r\n                        //     return {\r\n                        //         caption: k.text,\r\n                        //         callback: (element: AccordionElement) => {\r\n\r\n\r\n                        // this.main.networkManager.sendCreateRepository(workspace, k.n, (error: string, repository_id?: number) => {\r\n                        //     if (error == null) {\r\n                        //         this.workspaceListPanel.setElementClass(element, \"repository\");\r\n                        //         workspace.renderSynchronizeButton();\r\n                        //         this.showRepositoryButtonIfNeeded(workspace);\r\n                        //     } else {\r\n                        //         alert(error);\r\n                        //     }\r\n                        // });\r\n\r\n                        //         }\r\n                        //     }\r\n                        // })\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Mit Repository synchronisieren\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.synchronizeWithRepository();\r\n                        }\r\n                    });\r\n                    cmiList.push({\r\n                        caption: \"Vom Repository loslösen\",\r\n                        color: \"#ff8080\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.repository_id = null;\r\n                            workspace.saved = false;\r\n                            this.main.networkManager.sendUpdates(() => {\r\n                                that.workspaceListPanel.setElementClass(element, \"workspace\");\r\n                                workspace.renderSynchronizeButton(element);\r\n                            }, true);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            cmiList.push({\r\n                caption: \"Einstellungen...\",\r\n                callback: (element: AccordionElement) => {\r\n                    let workspace: Workspace = element.externalElement;\r\n                    new WorkspaceSettingsDialog(workspace, this.main).open();\r\n                }\r\n            })\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: w.repository_id == null ? 'workspace' : 'repository',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n\r\n            w.renderSynchronizeButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n        // setTimeout(() => {\r\n        //     this.workspaceListPanel.collapseAll();\r\n        // }, 500);\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    showRepositoryButtonIfNeeded(w: Workspace) {\r\n        if (w.repository_id != null && w.owner_id == this.main.user.id) {\r\n            this.$synchronizeAction.show();\r\n\r\n            if (!this.main.user.settings.helperHistory.repositoryButtonDone) {\r\n\r\n                Helper.showHelper(\"repositoryButton\", this.main, this.$synchronizeAction);\r\n\r\n            }\r\n\r\n\r\n\r\n        } else {\r\n            this.$synchronizeAction.hide();\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace, scrollIntoView: boolean = false) {\r\n\r\n        this.workspaceListPanel.select(w, false, scrollIntoView);\r\n\r\n        if (this.main.interpreter.state == InterpreterState.running) {\r\n            this.main.interpreter.stop();\r\n        }\r\n\r\n        this.main.currentWorkspace = w;\r\n        this.renderFiles(w);\r\n\r\n        if (w != null) {\r\n            let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n            if (w.currentlyOpenModule != null) {\r\n                this.setModuleActive(w.currentlyOpenModule);\r\n            } else if (nonSystemModules.length > 0) {\r\n                this.setModuleActive(nonSystemModules[0]);\r\n            } else {\r\n                this.setModuleActive(null);\r\n            }\r\n\r\n            for (let m of nonSystemModules) {\r\n                m.file.dirty = true;\r\n            }\r\n\r\n            if (nonSystemModules.length == 0 && !this.main.user.settings.helperHistory.newFileHelperDone) {\r\n\r\n                Helper.showHelper(\"newFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n            }\r\n\r\n            this.showRepositoryButtonIfNeeded(w);\r\n\r\n        } else {\r\n            this.setModuleActive(null);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.getBreakpointPositionsFromEditor();\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            this.fileListPanel.setCaption('Keine Datei vorhanden');\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        m.renderBreakpointDecorators();\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine WORKSPACES\";\r\n        } else {\r\n            caption = \"Schüler-WS\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ZoomControl } from \"./diagrams/ZoomControl.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 0\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces, false);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace, true);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return -1;\r\n            if (b.familienname > a.familienname) return 1;\r\n            if (a.rufname > b.rufname) return -1;\r\n            if (b.rufname > a.rufname) return 1;\r\n            return 0;\r\n        })\r\n\r\n        for(let i = 0; i < userDataList.length; i++){\r\n            let ud = userDataList[i];\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, TicketLoginRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { userInfo } from \"os\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI(isLoginWithTicket: boolean) {\r\n\r\n        let that = this;\r\n        if(!isLoginWithTicket){\r\n            jQuery('#login').css('display','flex');\r\n            jQuery('#bitteWarten').css('display','none');\r\n            this.startAnimations();\r\n        }\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n\r\n        jQuery('#jo_testuser-login-button').on('click', () => {\r\n            jQuery('#login-username').val('Testuser');\r\n            jQuery('#login-password').val('');\r\n            jQuery('#login-button').trigger('click');\r\n\r\n        })\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            SoundTools.init();\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            this.sendLoginRequest(null);\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            if(that.main.user.is_testuser){\r\n                that.showLoginForm();\r\n                return;\r\n            }\r\n\r\n            this.main.interpreter.closeAllWebsockets();\r\n\r\n            jQuery('#bitteWartenText').html('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n            jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                this.main.rightDiv.classDiagram.clearAfterLogout();\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n\r\n                    that.showLoginForm();\r\n\r\n                });\r\n            });\r\n\r\n            this.main.networkManager.notifierClient.disconnect();\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    sendLoginRequest(ticket: string){\r\n        let that = this;\r\n\r\n        let servlet = \"login\";\r\n\r\n        let loginRequest: LoginRequest|TicketLoginRequest = {\r\n            username: <string>jQuery('#login-username').val(),\r\n            password: <string>jQuery('#login-password').val(),\r\n            language: 0\r\n        }\r\n\r\n        if(ticket != null){\r\n            servlet = \"ticketLogin\";\r\n            loginRequest = {\r\n                ticket: ticket,\r\n                language: 0\r\n            }\r\n        }\r\n\r\n        ajax(servlet, loginRequest, (response: LoginResponse) => {\r\n\r\n            if (!response.success) {\r\n                jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                jQuery('#login-spinner>img').hide();\r\n            } else {\r\n\r\n                // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                // Alternatively we now set a long expiry interval for cookie.\r\n                // credentials.username = loginRequest.username;\r\n                // credentials.password = loginRequest.password;\r\n\r\n                jQuery('#login').hide();\r\n                jQuery('#main').css('visibility', 'visible');\r\n\r\n                jQuery('#bitteWartenText').html('Bitte warten ...');\r\n                jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n                let user: UserData = response.user;\r\n                user.is_testuser = response.isTestuser;\r\n\r\n                if (user.settings == null || user.settings.helperHistory == null) {\r\n                    user.settings = {\r\n                        helperHistory: {\r\n                            consoleHelperDone: false,\r\n                            newFileHelperDone: false,\r\n                            newWorkspaceHelperDone: false,\r\n                            speedControlHelperDone: false,\r\n                            homeButtonHelperDone: false,\r\n                            stepButtonHelperDone: false,\r\n                            repositoryButtonDone: false,\r\n                            folderButtonDone: false\r\n                        },\r\n                        viewModes: null,\r\n                        classDiagram: null\r\n                    }\r\n                }\r\n                \r\n                that.main.user = user;\r\n\r\n                this.main.waitForGUICallback = () => {\r\n                    \r\n                    that.main.mainMenu.initGUI(user, \"\");\r\n                    \r\n                    jQuery('#bitteWarten').hide();\r\n                    let $loginSpinner = jQuery('#login-spinner>img');\r\n                    $loginSpinner.hide();\r\n                    jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n                    \r\n                    new UserMenu(that.main).init();\r\n                    \r\n                    if (user.is_teacher) {\r\n                        that.main.initTeacherExplorer(response.classdata);\r\n                    }\r\n                    \r\n\r\n                    that.main.workspacesOwnerId = user.id;\r\n                    that.main.restoreWorkspaces(response.workspaces, true);\r\n\r\n                    that.main.networkManager.initializeTimer();\r\n\r\n                    that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                    that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                    that.main.rightDiv?.classDiagram?.clear();\r\n\r\n                    if (user.settings.classDiagram != null) {\r\n                        that.main.rightDiv?.classDiagram?.deserialize(user.settings.classDiagram);\r\n                    }\r\n\r\n                    that.main.viewModeController.initViewMode();\r\n                    that.main.bottomDiv.hideHomeworkTab();\r\n                    \r\n                    if (!this.main.user.settings.helperHistory.folderButtonDone && that.main.projectExplorer.workspaceListPanel.elements.length > 5) {\r\n                        \r\n                        Helper.showHelper(\"folderButton\", this.main, jQuery('.img_add-folder-dark'));\r\n        \r\n                    }\r\n        \r\n                    that.main.networkManager.initializeNotifierClient();\r\n\r\n                }\r\n\r\n                if (this.main.startupComplete == 0) {\r\n                    this.main.waitForGUICallback();\r\n                    this.main.waitForGUICallback = null;\r\n                }\r\n\r\n            }\r\n\r\n        }, (errorMessage: string) => {\r\n            jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n            jQuery('#login-spinner>img').hide();\r\n        }\r\n        );\r\n\r\n    }\r\n\r\n    loginWithTicket(ticket: string) {\r\n        jQuery('#login').hide();\r\n        jQuery('#main').css('visibility', 'visible');\r\n\r\n        jQuery('#bitteWartenText').html('Bitte warten ...');\r\n        jQuery('#bitteWarten').css('display', 'flex');\r\n        this.sendLoginRequest(ticket);\r\n\r\n    }\r\n\r\n\r\n    private showLoginForm(){\r\n        jQuery('#login').show();\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        jQuery('#bitteWarten').css('display', 'none');\r\n        jQuery('#login-message').empty();\r\n        this.main.interpreter.setState(InterpreterState.not_initialized);\r\n        this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n        this.main.projectExplorer.fileListPanel.clear();\r\n        this.main.projectExplorer.fileListPanel.setCaption('');\r\n        this.main.projectExplorer.workspaceListPanel.clear();\r\n        this.main.bottomDiv?.console?.clear();\r\n        this.main.interpreter.printManager.clear();\r\n\r\n        if (this.main.user.is_teacher) {\r\n            this.main.teacherExplorer.removePanels();\r\n            this.main.teacherExplorer = null;\r\n        }\r\n\r\n        this.main.currentWorkspace = null;\r\n        this.main.user = null;\r\n\r\n    }\r\n\r\n\r\n    startAnimations() {\r\n        // let $loginAnimationDiv = $('#jo_login_animations');\r\n        // $loginAnimationDiv.empty();\r\n\r\n\r\n        // let $gifAnimation = $('<img src=\"assets/startpage/code_1.gif\" class=\"jo_gif_animation\">');\r\n        // $loginAnimationDiv.append($gifAnimation);\r\n        \r\n        // let left = Math.trunc(Math.random()*(screen.width - 400)) + \"px\";\r\n        // let top = Math.trunc(Math.random()*(screen.height - 400)) + \"px\";\r\n\r\n        // $gifAnimation.css({\r\n        //     \"left\": left,\r\n        //     \"top\": top\r\n        // })\r\n    }\r\n\r\n\r\n}","import { ThemeManager } from \"./ThemeManager\";\r\nimport { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    rightDivWidth: number;\r\n    editorWidth: number;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 8px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').css('width', this.rightDivWidth + \"px\");\r\n            jQuery('#editor>.monaco-editor').css('width', this.editorWidth + 'px');\r\n\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            \r\n            this.rightDivWidth = Number.parseInt(jQuery('#rightdiv').css('width').replace('px', ''));\r\n            this.editorWidth = Number.parseInt(jQuery('#editor>.monaco-editor').css('width').replace('px', ''));\r\n\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n            this.main.getInterpreter().stop();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\n\r\nexport type WindowBackButtonListener = (event: PopStateEvent) => void;\r\n\r\nexport class WindowStateManager {\r\n\r\n    backButtonListener: WindowBackButtonListener;\r\n    oneTimeBackButtonListener: () => void;\r\n\r\n    constructor(private main: Main){\r\n        let that = this;\r\n        history.pushState(\"PreventLeavingSite\", \"\");\r\n        window.addEventListener('popstate', (event: PopStateEvent) => {\r\n            if(event.state == \"PreventLeavingSite\"){\r\n                history.pushState(\"PreventLeavingSite\", \"\");\r\n                that.main.editor.pushHistoryState(false, that.main.editor.getPositionForHistory());\r\n            } else if(this.oneTimeBackButtonListener == null){\r\n                this.backButtonListener(event);\r\n            }\r\n            if(this.oneTimeBackButtonListener != null){\r\n                this.oneTimeBackButtonListener();\r\n                this.oneTimeBackButtonListener = null;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    registerBackButtonListener(listener: WindowBackButtonListener){\r\n        this.backButtonListener = listener;\r\n    }\r\n\r\n    registerOneTimeBackButtonListener(oneTimeBackButtonListener: () => void){\r\n        this.oneTimeBackButtonListener = oneTimeBackButtonListener;\r\n        history.pushState({}, \"\");\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"./Workspace.js\";\r\n\r\nexport class InconsistencyFixer {\r\n    start(workspaceList: Workspace[], networkManager: NetworkManager, main: MainBase) {\r\n        let updateNeeded: boolean = false;\r\n\r\n        // is there a folder which contains files?\r\n        for (let ws of workspaceList) {\r\n            if (ws.isFolder && ws.moduleStore.getModules(false).length > 0) {\r\n\r\n                console.log(\"Folder \" + ws.path + \"/\" + ws.name + \" contains files. -> Make new folder and transforming existing one to workspace.\")\r\n\r\n                // create new Folder\r\n                let newFolder: Workspace = new Workspace(ws.name, main, ws.owner_id);\r\n                newFolder.isFolder = true;\r\n                newFolder.path = ws.path;\r\n                workspaceList.push(newFolder);\r\n\r\n                networkManager.sendCreateWorkspace(newFolder, newFolder.owner_id, (error: string) => {\r\n                    if(error == null || error == \"\"){\r\n                        console.log(\"Successfully created new Folder.\");\r\n                    } else {\r\n                        console.log(\"Error creating folder: \" + error);\r\n                    }\r\n                });\r\n\r\n                // transform old folder into real workspace\r\n                ws.isFolder = false;\r\n                ws.name += \" (ws)\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n\r\n            }\r\n        }\r\n\r\n        // Are there several folders with identical path and name?\r\n        let folderList = workspaceList.filter(ws => ws.isFolder);\r\n\r\n        for (let ws1 of folderList) {\r\n            let identicalFolders: Workspace[] = [];\r\n            for (let ws2 of folderList) {\r\n                if (ws2 != ws1 && ws2.path == ws1.path && ws2.name == ws1.name) {\r\n                    identicalFolders.push(ws2);\r\n                }\r\n            }\r\n            if (identicalFolders.length > 0) {\r\n                console.log(\"\" + (identicalFolders.length + 1) + \" folders with name \" + ws1.path + \"/\" + ws1.name + \"=> renaming them with suffixes (1), (2), ...\");\r\n                for (let i = 0; i < identicalFolders.length; i++) {\r\n                    identicalFolders[i].name += \" (\" + (i + 1) + \")\";\r\n                    identicalFolders[i].saved = false;\r\n                }\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n        // Is there a workspace which belongs to a folder that doesn't exist?\r\n        let folderPathAndNames: string[] = [];\r\n        for (let folder of folderList) {\r\n            let fnap = folder.path;\r\n            if (fnap != \"\" && !fnap.endsWith(\"/\")) fnap += \"/\";\r\n            fnap += folder.name;\r\n            folderPathAndNames.push(fnap);\r\n        }\r\n\r\n        for (let ws of workspaceList) {\r\n            if (!ws.isFolder && ws.path != \"\" && ws.path != null && folderPathAndNames.indexOf(ws.path) < 0) {\r\n                console.log(\"Found workspace (\" + ws.path + \"/\" + ws.name + \") with path not corresponding to any folder => Set path = ''.\");\r\n                ws.path = \"\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n\r\n        if(updateNeeded){ \r\n            networkManager.sendUpdates(()=> {}, true);\r\n        }\r\n\r\n    }\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, DoubleType, CharacterType, BooleanType, FloatType, longPrimitiveType, LongType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { MainBase } from \"./MainBase.js\"\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\nimport { WindowStateManager } from \"./gui/WindowStateManager.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { InconsistencyFixer } from \"../workspace/InconsistencyFixer.js\";\r\n\r\nexport class Main implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    repositoryOn: boolean = true;\r\n\r\n    isEmbedded(): boolean { return false; }\r\n\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n        this.projectExplorer.showProgramPointerPosition(file, position);\r\n    }\r\n    hideProgramPointerPosition() {\r\n        this.projectExplorer.hideProgramPointerPosition();\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) {\r\n        this.projectExplorer.setModuleActive(module);\r\n        this.editor.editor.revealLineInCenter(declaration.position.line);\r\n        this.editor.editor.setPosition({column: declaration.position.column, lineNumber: declaration.position.line});\r\n    }\r\n\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    synchronizationManager: SynchronizationManager;\r\n    repositoryCreateManager: RepositoryCreateManager;\r\n    repositoryUpdateManager: RepositorySettingsManager;\r\n    repositoryCheckoutManager: RepositoryCheckoutManager;\r\n\r\n    windowStateManager: WindowStateManager = new WindowStateManager(this);\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n\r\n    debugger: Debugger;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n        \r\n        this.login = new Login(this);\r\n        let hashIndex: number = window.location.href.indexOf('#');\r\n        if(hashIndex > 0){\r\n    \r\n            var ticket = window.location.href.substr(hashIndex + 1);\r\n            window.history.replaceState({}, \"Online-IDE\", window.location.href.substr(0, hashIndex));\r\n            this.login.initGUI(true);\r\n            this.login.loginWithTicket(ticket);\r\n    \r\n        } else {\r\n            this.login.initGUI(false);\r\n        }\r\n    \r\n\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.debugger = new Debugger(this, jQuery('#leftpanel>.jo_debugger'), jQuery('#leftpanel>.jo_projectexplorer'));\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons(jQuery('#controls'), jQuery('#editor')),\r\n            jQuery('#rightdiv-inner .jo_run'));\r\n        this.interpreter.initGUI();\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                // get the matrix values of the displayobject based on its transform properties..\r\n                // lt.a = this._cx * this.scale.x;\r\n                // lt.b = this._sx * this.scale.x;\r\n                // lt.c = this._cy * this.scale.y;\r\n                // lt.d = this._sy * this.scale.y;\r\n                // lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\r\n                // lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '150px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 150 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n//        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    // loadWorkspace() {\r\n    //     this.workspaceList.push(getMockupWorkspace(this));\r\n    //     this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n    //     this.projectExplorer.setWorkspaceActive(this.workspaceList[0]);\r\n    //     this.checkStartupComplete();\r\n\r\n    // }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        longPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        LongType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false, true);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n                that.interpreter.closeAllWebsockets();\r\n            }\r\n            \r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.projectExplorer.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        clearTimeout(this.debounceDiagramDrawing);\r\n        this.debounceDiagramDrawing = setTimeout(() => {\r\n            this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces, fixInconsistencies: boolean) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                this.currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Find inconsistencies and fix them\r\n         */\r\n        if(fixInconsistencies){\r\n            new InconsistencyFixer().start(this.workspaceList, this.networkManager, this);\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (this.currentWorkspace == null && this.workspaceList.length > 0) {\r\n            this.currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(this.currentWorkspace, true);\r\n        } else {\r\n            this.projectExplorer.setModuleActive(null);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newWorkspaceHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Repository } from \"../../communication/Data.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { HistoryElement } from \"./HistoryElement.js\";\r\nimport { RepositoryHistoryEntry, RepositoryFileEntry, CommitFilesResponse, CommitFilesRequest } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { SynchronizationManager } from \"./RepositorySynchronizationManager.js\";\r\n\r\n\r\nexport type SynchroFileState = \"original\" | \"changed\" | \"new\" | \"deleted\";\r\n\r\nexport type SynchroFile = {\r\n    idInsideRepository: number,\r\n    idInsideWorkspace?: number,\r\n    workspaceFile: File,\r\n    committedFromFile?: SynchroFile,\r\n    name: string,\r\n    repository_file_version: number,\r\n    identical_to_repository_version: boolean,\r\n    text: string,\r\n    synchroWorkspace: SynchroWorkspace,\r\n    \r\n    state: SynchroFileState,\r\n    markedAsMerged: boolean,\r\n\r\n    originalText?: string,\r\n    monacoModel?: monaco.editor.ITextModel,\r\n}\r\n\r\n\r\nexport class SynchroWorkspace {\r\n\r\n    files: SynchroFile[] = [];\r\n    copiedFromWorkspace: Workspace;\r\n    isCurrentRepositoryVersion: boolean = false;\r\n\r\n    name: string;\r\n\r\n    constructor(private manager: SynchronizationManager) {\r\n\r\n    }\r\n\r\n    hasChanges(): boolean {\r\n        for(let file of this.files){\r\n            if(file.state != \"original\") return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    isWritable(): boolean {\r\n        return this.copiedFromWorkspace != null || (this.isCurrentRepositoryVersion && this.manager.repositoryIsWritable );\r\n    }\r\n\r\n    copyFromWorkspace(workspace: Workspace):SynchroWorkspace {\r\n\r\n        this.files = [];\r\n        workspace.moduleStore.getModules(false).forEach(module => {\r\n            let file = module.file;\r\n\r\n            if (module.model != null) {\r\n                module.file.text = module.getProgramTextFromMonacoModel();\r\n            }\r\n\r\n            this.files.push({\r\n                name: file.name,\r\n                repository_file_version: file.repository_file_version,\r\n                identical_to_repository_version: file.identical_to_repository_version,\r\n                idInsideRepository: file.is_copy_of_id,\r\n                idInsideWorkspace: file.id,\r\n                workspaceFile: file,\r\n                text: file.text.replace(/\\r\\n/g, \"\\n\"),\r\n                synchroWorkspace: this,\r\n                \r\n                state: \"original\",\r\n                markedAsMerged: false,\r\n\r\n                originalText: file.text,\r\n                monacoModel: null\r\n            })\r\n        });\r\n\r\n        this.name = \"Workspace: \" + workspace.name;\r\n        this.copiedFromWorkspace = workspace;\r\n\r\n        return this;\r\n    }\r\n\r\n    copyFromRepository(repository: Repository, isCurrentRepositoryVersion: boolean): SynchroWorkspace {\r\n        this.isCurrentRepositoryVersion = isCurrentRepositoryVersion;\r\n        this.files = [];\r\n        repository.fileEntries.forEach((fileEntry) => {\r\n            this.files.push({\r\n                name: fileEntry.filename,\r\n                idInsideRepository: fileEntry.id,\r\n                idInsideWorkspace: null,\r\n                workspaceFile: null,\r\n                repository_file_version: fileEntry.version,\r\n                identical_to_repository_version: true,\r\n                text: fileEntry.text.replace(/\\r\\n/g, \"\\n\"),\r\n                synchroWorkspace: this,\r\n                \r\n                state: \"original\",\r\n                markedAsMerged: false,\r\n\r\n                monacoModel: null\r\n            })\r\n        })\r\n\r\n        this.name = \"Repository: \" + repository.name + \" (V \" + repository.version + \")\";\r\n\r\n        return this;\r\n    }\r\n\r\n    copyFromHistoryElement(historyElement: HistoryElement): SynchroWorkspace {\r\n        let repo = historyElement.getRepositoryState();\r\n        this.copyFromRepository(repo, false);\r\n        this.name = \"History-Version \" + repo.version;\r\n        return this;\r\n    }\r\n\r\n    commit(workspace: Workspace, oldRepository: Repository, comment: string, main: Main,\r\n        callback: (repository: Repository, errormessage: string) => void) {\r\n\r\n        let oldIdToFileMap: { [id: number]: RepositoryFileEntry } = {};\r\n        let newIdToFileMap: { [id: number]: SynchroFile } = {};\r\n\r\n        let newlyVersionedFileIds: number[] = [];\r\n\r\n        oldRepository.fileEntries.forEach(file => oldIdToFileMap[file.id] = file);\r\n        this.files.forEach(file => {\r\n            if (file.idInsideRepository != null) {\r\n                newIdToFileMap[file.idInsideRepository] = file;\r\n            }\r\n        });\r\n\r\n        let repositoryHistoryEntry: RepositoryHistoryEntry = {\r\n            comment: comment,\r\n            name: main.user.rufname + \" \" + main.user.familienname,\r\n            username: main.user.username,\r\n            isIntermediateEntry: false,\r\n            timestamp: new Date().toUTCString(),\r\n            userId: main.user.id,\r\n            version: oldRepository.version + 1,\r\n            historyFiles: []\r\n        }\r\n\r\n        for (let file of this.files) {\r\n            if(file.state == \"deleted\") continue;\r\n\r\n            let oldFile = oldIdToFileMap[file.idInsideRepository];\r\n            if (oldFile == null) {\r\n\r\n                // if file.committedFromFile.\r\n                if (file.idInsideRepository == null) {\r\n                    newlyVersionedFileIds.push(file.committedFromFile.idInsideWorkspace);\r\n                    file.committedFromFile.idInsideRepository = file.committedFromFile.idInsideWorkspace;\r\n                    file.committedFromFile.repository_file_version = 1;\r\n                    file.idInsideRepository = file.committedFromFile.idInsideWorkspace;\r\n                    file.committedFromFile.idInsideRepository = file.committedFromFile.idInsideWorkspace;\r\n                }\r\n\r\n                repositoryHistoryEntry.historyFiles.push({\r\n                    id: file.idInsideRepository,\r\n                    type: \"create\",\r\n                    version: 1,\r\n                    content: file.text,\r\n                    filename: file.name\r\n                });\r\n            } else if (oldFile.text != file.text) {\r\n                oldFile.version++;\r\n                let patch: string = this.getPatch(oldFile.text, file.text);\r\n                if (patch == null) {\r\n                    repositoryHistoryEntry.historyFiles.push({\r\n                        id: oldFile.id,\r\n                        type: \"intermediate\",\r\n                        version: oldFile.version,\r\n                        content: file.text,\r\n                        filename: file.name\r\n                    });\r\n                } else {\r\n                    repositoryHistoryEntry.historyFiles.push({\r\n                        id: oldFile.id,\r\n                        type: \"change\",\r\n                        version: oldFile.version,\r\n                        content: patch,\r\n                        filename: (oldFile.filename == file.name) ? undefined : file.name\r\n                    });\r\n                }\r\n\r\n                let cff = file.committedFromFile;\r\n                if(cff != null){\r\n                    cff.repository_file_version = oldFile.version;\r\n                    cff.workspaceFile.repository_file_version = oldFile.version;\r\n                    cff.workspaceFile.saved = false;                    \r\n                }\r\n\r\n            } else if (oldFile.filename != file.name) {\r\n                repositoryHistoryEntry.historyFiles.push({\r\n                    id: oldFile.id,\r\n                    type: \"intermediate\",\r\n                    version: oldFile.version,\r\n                    filename: file.name\r\n                });\r\n            }\r\n        }\r\n\r\n        for (let oldFile of oldRepository.fileEntries) {\r\n            if (newIdToFileMap[oldFile.id] == null || newIdToFileMap[oldFile.id].state == \"deleted\") {\r\n                repositoryHistoryEntry.historyFiles.push({\r\n                    id: oldFile.id,\r\n                    type: \"delete\",\r\n                    version: oldFile.version\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        let newFileEntries: RepositoryFileEntry[] = this.files.filter(file => file.state != \"deleted\").map((synchroFile) => {\r\n            return {\r\n                filename: synchroFile.name,\r\n                id: synchroFile.idInsideRepository,\r\n                text: synchroFile.text,\r\n                version: synchroFile.repository_file_version\r\n            }\r\n        })\r\n\r\n\r\n        let commitFilesRequest: CommitFilesRequest = {\r\n            files: newFileEntries,\r\n            repositoryVersionBeforeCommit: oldRepository.version,\r\n            repository_id: oldRepository.id,\r\n            workspace_id: workspace.id,\r\n            repositoryHistoryEntry: repositoryHistoryEntry,\r\n            newlyVersionedFileIds: newlyVersionedFileIds\r\n        }\r\n\r\n        let that = this;\r\n        ajax(\"commitFiles\", commitFilesRequest, (cfr: CommitFilesResponse) => {\r\n            workspace.moduleStore.getModules(false).map(m => m.file).forEach((file) => {\r\n                if (newlyVersionedFileIds.indexOf(file.id) >= 0) {\r\n                    file.is_copy_of_id = file.id;\r\n                    file.repository_file_version = 1;\r\n                    file.identical_to_repository_version = true;\r\n                    file.saved = false;\r\n                }\r\n            });\r\n            that.manager.currentUserSynchroWorkspace.files.forEach(synchroFile => {\r\n                let workspaceFile = synchroFile.workspaceFile;\r\n                if(workspaceFile != null){\r\n                    if(synchroFile.text == workspaceFile.text && \r\n                        (synchroFile.repository_file_version != workspaceFile.repository_file_version  || synchroFile.identical_to_repository_version != workspaceFile.identical_to_repository_version)){\r\n                            workspaceFile.identical_to_repository_version = synchroFile.identical_to_repository_version;\r\n                            workspaceFile.repository_file_version = synchroFile.repository_file_version;\r\n                            workspaceFile.saved = false;\r\n                    }\r\n                }\r\n                if(workspaceFile.is_copy_of_id != null){\r\n                    synchroFile.idInsideRepository = workspaceFile.is_copy_of_id;\r\n                }\r\n            });\r\n            that.manager.main.networkManager.sendUpdates(() => {\r\n                callback(cfr.repository, null);\r\n            }, true);\r\n        }, (error: string) => { callback( null, error) })\r\n\r\n    }\r\n\r\n    getPatch(contentOld: string, contentNew: string): string {\r\n        //@ts-ignore\r\n        let dmp: diff_match_patch = new diff_match_patch();\r\n        //@ts-ignore\r\n        let patchObject: patch_obj[] = dmp.patch_make(contentOld, contentNew);\r\n\r\n        let patch: string = JSON.stringify(patchObject);\r\n\r\n        // Test patch and only return it if it is valid!\r\n        let deSerializedPatchObject = JSON.parse(patch);\r\n\r\n        let result: [string, boolean[]] = dmp.patch_apply(deSerializedPatchObject, contentOld);\r\n\r\n        if (result == null || result[0] == null) return null;\r\n\r\n        if (result[0] == contentNew) {\r\n            return patch;\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n    writeChangesToWorkspace() {\r\n        let workspace = this.copiedFromWorkspace;\r\n        let oldIdToModuleMap: { [id: number]: Module } = {};\r\n        let newIdToFileMap: { [id: number]: SynchroFile } = {};\r\n\r\n        workspace.moduleStore.getModules(false).forEach(m => {\r\n            if (m.file.is_copy_of_id != null) oldIdToModuleMap[m.file.is_copy_of_id] = m;\r\n        });\r\n\r\n        this.files.forEach(file => {\r\n            if (file.idInsideWorkspace != null) newIdToFileMap[file.idInsideWorkspace] = file;\r\n        });\r\n\r\n        let main = this.manager.main;\r\n        for (let module of workspace.moduleStore.getModules(false)) {\r\n\r\n            let synchroFile = newIdToFileMap[module.file.id];\r\n            if (synchroFile != null && synchroFile.state != 'deleted') {\r\n                module.file.text = synchroFile.monacoModel.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n                synchroFile.text = module.file.text;\r\n                module.file.is_copy_of_id = synchroFile.idInsideRepository;\r\n                module.file.repository_file_version = synchroFile.repository_file_version;\r\n                module.model.setValue(synchroFile.text);\r\n                module.file.identical_to_repository_version = synchroFile.identical_to_repository_version;\r\n                module.file.saved = false;\r\n                module.file.dirty = true;\r\n                module.file.name = synchroFile.name;\r\n                if(module.file.panelElement != null){\r\n                    module.file.panelElement.$htmlFirstLine.find('.jo_filename');\r\n                }\r\n            } else {\r\n\r\n                main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n                    }\r\n                });\r\n\r\n                this.files.splice(this.files.indexOf(synchroFile), 1);\r\n                workspace.moduleStore.removeModule(module);\r\n                main.projectExplorer.fileListPanel.removeElement(module);\r\n                if (main.currentWorkspace == workspace && main.projectExplorer.getCurrentlyEditedModule() == module) {\r\n                    main.projectExplorer.setModuleActive(null);\r\n                }\r\n                \r\n            }\r\n\r\n        }\r\n\r\n        for (let synchroFile of this.files) {\r\n            if (synchroFile.idInsideRepository != null && oldIdToModuleMap[synchroFile.idInsideRepository] == null) {\r\n\r\n                let f: File = {\r\n                    name: synchroFile.name,\r\n                    dirty: true,\r\n                    saved: true,\r\n                    text: synchroFile.text,\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    is_copy_of_id: synchroFile.idInsideRepository,\r\n                    repository_file_version: synchroFile.repository_file_version,\r\n                    identical_to_repository_version: synchroFile.identical_to_repository_version\r\n                };\r\n                let m = new Module(f, main);\r\n                workspace.moduleStore.putModule(m);\r\n                main.networkManager.sendCreateFile(m, workspace, main.user.id,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            }\r\n        }\r\n\r\n        main.networkManager.sendUpdates(null, true);\r\n\r\n        if (main.currentWorkspace == workspace) {\r\n            let cem = main.getCurrentlyEditedModule();\r\n            main.projectExplorer.setWorkspaceActive(workspace, true);\r\n\r\n            // if module hadn't been deleted while synchronizing:\r\n            if(workspace.moduleStore.getModules(false).indexOf(cem) >= 0){\r\n                main.projectExplorer.setModuleActive(cem);\r\n                main.projectExplorer.fileListPanel.select(cem, false);\r\n            }\r\n\r\n        }\r\n\r\n        workspace.moduleStore.dirty = true;\r\n\r\n    }\r\n\r\n}","import { RepositoryHistoryEntry, Repository, RepositoryHistoryFileEntry, RepositoryFileEntry } from \"../../communication/Data.js\";\r\nimport { SynchronizationManager } from \"./RepositorySynchronizationManager.js\";\r\nimport { makeDiv, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { SynchroWorkspace } from \"./SynchroWorkspace.js\";\r\n\r\nexport class HistoryElement {\r\n\r\n    $historyElementDiv: JQuery<HTMLDivElement>;\r\n\r\n    static currentlyDragged: HistoryElement;\r\n\r\n    constructor(private manager: SynchronizationManager, private repository: Repository, private repositoryHistoryEntry: RepositoryHistoryEntry, private historyEntryIndex: number) {\r\n\r\n        this.$historyElementDiv = makeDiv(null, \"jo_synchro_historyElement\");\r\n        this.$historyElementDiv.attr(\"draggable\", \"true\");\r\n\r\n        let that = this;\r\n        this.$historyElementDiv.on('drag', () => {\r\n            HistoryElement.currentlyDragged = that;\r\n        });\r\n\r\n        let line1 = makeDiv(null, \"jo_synchro_historyElementLine1\");\r\n        line1.append(jQuery(`<div class=\"jo_synchro_he_version\">V ${repositoryHistoryEntry.version}</div>`));\r\n        line1.append(jQuery(`<div class=\"jo_synchro_he_name\">${repositoryHistoryEntry.name}</div>`));\r\n        this.$historyElementDiv.append(line1);\r\n\r\n        let line2 = makeDiv(null, \"jo_synchro_historyElementLine2\");\r\n        line2.append(jQuery(`<div class=\"jo_synchro_he_timestamp\">${repositoryHistoryEntry.timestamp}</div>`))\r\n        this.$historyElementDiv.append(line2);\r\n\r\n        let line3 = makeDiv(null, \"jo_synchro_historyElementLine3\");\r\n        line3.append(jQuery(`<div class=\"jo_synchro_he_comment\">${repositoryHistoryEntry.comment}</div>`))\r\n        this.$historyElementDiv.append(line3);\r\n\r\n        manager.$historyScrollDiv.prepend(this.$historyElementDiv);\r\n\r\n        this.$historyElementDiv.on(\"click contextmenu\", (ev) => {\r\n            ev.preventDefault();\r\n            openContextMenu([\r\n                {\r\n                    caption: \"Auf der linken Seite darstellen\",\r\n                    callback: () => {\r\n                        let sw = new SynchroWorkspace(this.manager).copyFromHistoryElement(this);\r\n                        this.manager.leftSynchroWorkspace = sw;\r\n                        this.manager.setupSynchronizationListElements();\r\n                    }\r\n                },\r\n                {\r\n                    caption: \"Auf der rechten Seite darstellen\",\r\n                    callback: () => {\r\n                        let sw = new SynchroWorkspace(this.manager).copyFromHistoryElement(this);\r\n                        this.manager.rightSynchroWorkspace = sw;\r\n                        this.manager.setupSynchronizationListElements();\r\n                    }\r\n                },\r\n            ],\r\n                ev.pageX + 2, ev.pageY + 2)\r\n        });\r\n\r\n    }\r\n\r\n    getRepositoryState(): Repository {\r\n\r\n        let entries = this.repository.historyEntries;\r\n\r\n        // get last intermediate state\r\n        let startIndex = this.historyEntryIndex;\r\n\r\n        while (startIndex > 0 && !(entries[startIndex].isIntermediateEntry)) {\r\n            startIndex--;\r\n        }\r\n\r\n        let files: RepositoryFileEntry[] = [];\r\n\r\n        for (let index = startIndex; index <= this.historyEntryIndex; index++) {\r\n\r\n            let entry = entries[index];\r\n            for (let fileEntry of entry.historyFiles) {\r\n\r\n                if (entry.isIntermediateEntry) {\r\n                    this.setIntermediateState(fileEntry, files);\r\n                } else {\r\n                    switch (fileEntry.type) {\r\n                        case \"create\":\r\n                            this.createFile(fileEntry, files);\r\n                            break;\r\n                        case \"delete\":\r\n                            this.deleteFile(fileEntry, files);\r\n                            break;\r\n                        case \"change\":\r\n                            this.changeFile(fileEntry, files);\r\n                            break;\r\n                        case \"intermediate\":\r\n                            this.setIntermediateState(fileEntry, files);\r\n                            break;\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let repository: Repository = Object.assign({}, this.repository);\r\n        repository.fileEntries = files;\r\n        repository.version = this.repositoryHistoryEntry.version;\r\n\r\n        return repository;\r\n\r\n    }\r\n\r\n    setIntermediateState(fileEntry: RepositoryHistoryFileEntry, files: RepositoryFileEntry[]) {\r\n        let file: RepositoryFileEntry = files.find(file => file.id == fileEntry.id);\r\n        if (file != null) {\r\n            file.text = fileEntry.content;\r\n            file.version = fileEntry.version;\r\n        }\r\n    }\r\n\r\n    changeFile(fileEntry: RepositoryHistoryFileEntry, files: RepositoryFileEntry[]) {\r\n        let file: RepositoryFileEntry = files.find(file => file.id == fileEntry.id);\r\n        if (file != null) {\r\n            if (fileEntry.content != null) {\r\n                //@ts-ignore\r\n                let patch: patch_obj[] = JSON.parse(fileEntry.content);\r\n                let oldText = file.text;\r\n                //@ts-ignore\r\n                let dmp: diff_match_patch = new diff_match_patch();\r\n                let newText: [string, boolean[]] = dmp.patch_apply(patch, oldText);\r\n                file.text = newText[0];\r\n                file.version = fileEntry.version;\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteFile(fileEntry: RepositoryHistoryFileEntry, files: RepositoryFileEntry[]) {\r\n        let index: number = files.findIndex(file => file.id == fileEntry.id);\r\n        if (index != null) {\r\n            files.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    createFile(fileEntry: RepositoryHistoryFileEntry, files: RepositoryFileEntry[]) {\r\n        let file: RepositoryFileEntry = {\r\n            id: fileEntry.id,\r\n            text: fileEntry.content,\r\n            filename: fileEntry.filename,\r\n            version: fileEntry.version\r\n        }\r\n        files.push(file);\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TeachersWithClassesMI } from \"../../administration/TeachersWithClasses.js\";\r\nimport { RepositoryFileEntry } from \"../../communication/Data.js\";\r\nimport { File } from \"../../compiler/parser/Module.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { SynchronizationManager } from \"./RepositorySynchronizationManager.js\";\r\nimport { SynchroFile, SynchroWorkspace } from \"./SynchroWorkspace.js\";\r\n\r\ntype ButtonKind = \"create\" | \"delete\" | \"update\" | \"commit\" | \"updateAll\" | \"commitAll\";\r\nexport type LeftRight = \"left\" | \"right\";\r\n\r\n\r\nexport class SynchronizationListElement {\r\n\r\n    $leftFileDiv: JQuery<HTMLDivElement>;\r\n    $rightFileDiv: JQuery<HTMLDivElement>;\r\n    $buttonLeftDiv: JQuery<HTMLDivElement>;\r\n    $buttonRightDiv: JQuery<HTMLDivElement>;\r\n\r\n    $markAsMergedButtonDiv: JQuery<HTMLDivElement>;\r\n    $mergedFlag: JQuery<HTMLDivElement>;\r\n\r\n    editorState: monaco.editor.IDiffEditorViewState;\r\n\r\n    $buttons: JQuery<HTMLDivElement>[] = [];\r\n\r\n    constructor(private manager: SynchronizationManager, public leftSynchroFile: SynchroFile, public rightSynchroFile: SynchroFile,\r\n        public leftSynchroWorkspace: SynchroWorkspace, public rightSynchroWorkspace: SynchroWorkspace) {\r\n\r\n        this.$leftFileDiv = makeDiv(null, \"jo_synchro_workspaceFileDiv jo_synchro_listDiv\");\r\n        this.$buttonLeftDiv = makeDiv(null, \"jo_synchro_buttonDiv jo_synchro_listDiv jo_synchro_buttonLeftDiv\");\r\n        this.$buttonRightDiv = makeDiv(null, \"jo_synchro_buttonDiv jo_synchro_listDiv jo_synchro_buttonRightDiv\");\r\n        this.$rightFileDiv = makeDiv(null, \"jo_synchro_repositoryFileDiv jo_synchro_listDiv\");\r\n        manager.$fileListDivs[0].append(this.$leftFileDiv);\r\n        manager.$fileListDivs[1].append(this.$buttonLeftDiv);\r\n        manager.$fileListDivs[2].append(this.$buttonRightDiv);\r\n        manager.$fileListDivs[3].append(this.$rightFileDiv);\r\n\r\n        if (leftSynchroFile != null && leftSynchroFile.state != \"original\") this.$leftFileDiv.addClass('jo_dirty');\r\n        if (rightSynchroFile != null && rightSynchroFile.state != \"original\") this.$rightFileDiv.addClass('jo_dirty');\r\n\r\n\r\n\r\n        let allDivs: JQuery<HTMLDivElement>[] = [this.$leftFileDiv, this.$buttonLeftDiv, this.$buttonRightDiv, this.$rightFileDiv];\r\n\r\n        let that = this;\r\n\r\n        for (let $div of allDivs) {\r\n            $div.on(\"mouseenter\", () => {\r\n                for (let $div of allDivs) $div.addClass('jo_synchro_hoverLine');\r\n            });\r\n            $div.on(\"mouseleave\", () => {\r\n                for (let $div of allDivs) $div.removeClass('jo_synchro_hoverLine').removeClass(\"jo_synchro_hoverActiveLine\");\r\n            });\r\n\r\n            $div.on(\"mousedown\", () => {\r\n                for (let $div of allDivs) $div.addClass('jo_synchro_hoverActiveLine')\r\n            });\r\n            $div.on(\"mouseup\", () => { for (let $div of allDivs) $div.removeClass('jo_synchro_hoverActiveLine') });\r\n\r\n            $div.on(\"click\", () => {\r\n                that.select();\r\n            })\r\n        }\r\n\r\n        this.createLeftFileModel();\r\n        this.createRightFileModel();\r\n\r\n    }\r\n\r\n\r\n    select() {\r\n        let allDivs: JQuery<HTMLDivElement>[] = [this.$leftFileDiv, this.$buttonLeftDiv, this.$buttonRightDiv, this.$rightFileDiv];\r\n        jQuery('#jo_synchro_fileListOuter').find('.jo_synchro_activeLine').removeClass('jo_synchro_activeLine');\r\n        for (let $div of allDivs) $div.addClass('jo_synchro_activeLine');\r\n\r\n        if (this.manager.lastShownSynchronizationElement != null) {\r\n            this.manager.lastShownSynchronizationElement.editorState = this.manager.diffEditor.saveViewState()\r\n        }\r\n\r\n        this.manager.lastShownSynchronizationElement = this;\r\n\r\n        this.setEditorModel();\r\n\r\n        if (this.editorState != null) {\r\n            this.manager.diffEditor.restoreViewState(this.editorState);\r\n        }\r\n\r\n        this.manager.diffEditor.updateOptions({\r\n            originalEditable: this.leftSynchroFile?.originalText != null\r\n        })\r\n\r\n    }\r\n\r\n    createRightFileModel() {\r\n        if (this.rightSynchroFile != null) {\r\n            this.rightSynchroFile.monacoModel = monaco.editor.createModel(this.rightSynchroFile.text, \"myJava\");\r\n        }\r\n    }\r\n\r\n    setEditorModel() {\r\n        if (this.manager.lastShownSynchronizationElement == this) {\r\n            this.manager.diffEditor.setModel({\r\n                original: this.leftSynchroFile == null ? this.getEmptyMonacoModel() : this.leftSynchroFile.monacoModel,\r\n                modified: this.rightSynchroFile == null ? this.getEmptyMonacoModel() : this.rightSynchroFile.monacoModel\r\n            });\r\n        }\r\n    }\r\n\r\n    getEmptyMonacoModel(): monaco.editor.ITextModel {\r\n        return monaco.editor.createModel(\"\", \"myJava\")\r\n    }\r\n\r\n    pending: boolean = false;\r\n    createLeftFileModel() {\r\n        if (this.leftSynchroFile != null) {\r\n            this.leftSynchroFile.monacoModel = monaco.editor.createModel(this.leftSynchroFile.text, \"myJava\");\r\n            this.leftSynchroFile.monacoModel.onDidChangeContent((event) => {\r\n\r\n                // throttle comparison to avoid editor-slowdown\r\n                if (!this.pending) {\r\n                    this.pending = true;\r\n                    setTimeout(() => {\r\n                        if (this.leftSynchroFile != null && this.leftSynchroFile?.state != \"deleted\") {\r\n\r\n                            let newText: string = this.leftSynchroFile.monacoModel.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n                            if (this.leftSynchroFile?.originalText != null &&\r\n                                newText == this.leftSynchroFile.originalText) {\r\n                                this.$leftFileDiv.removeClass(\"jo_dirty\");\r\n                                this.leftSynchroFile.state = \"original\";\r\n                            } else {\r\n                                this.$leftFileDiv.addClass(\"jo_dirty\");\r\n                                this.leftSynchroFile.state = \"changed\";\r\n                                this.leftSynchroFile.identical_to_repository_version = false;\r\n                            }\r\n                            this.manager.onContentChanged(\"left\");\r\n                            this.leftSynchroFile.text = newText;\r\n\r\n                            this.compareFilesAndAdaptGUI();\r\n                        }\r\n                        this.pending = false;\r\n                    }, 700);\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    onFileChanged(leftRight: LeftRight) {\r\n        if (leftRight == \"left\") {\r\n            this.createLeftFileModel();\r\n        } else {\r\n            this.createRightFileModel();\r\n        }\r\n        this.setEditorModel();\r\n        this.compareFilesAndAdaptGUI();\r\n        switch (leftRight) {\r\n            case \"left\":\r\n                if (this.leftSynchroFile != null && this.leftSynchroFile.state != \"original\") {\r\n                    this.$leftFileDiv.addClass(\"jo_dirty\");\r\n                } else {\r\n                    this.$leftFileDiv.removeClass(\"jo_dirty\");\r\n                }\r\n                break;\r\n            case \"right\":\r\n                if (this.rightSynchroFile != null && this.rightSynchroFile.state != \"original\") {\r\n                    this.$rightFileDiv.addClass(\"jo_dirty\");\r\n                } else {\r\n                    this.$rightFileDiv.removeClass(\"jo_dirty\");\r\n                }\r\n                break;\r\n        }\r\n        this.manager.onContentChanged(leftRight);\r\n    }\r\n\r\n    compareFilesAndAdaptGUI() {\r\n\r\n        this.emptyGUI();\r\n        let that = this;\r\n\r\n        let leftCaption: string = \"---\";\r\n        let leftVersionCaption: string = \"\";\r\n\r\n        let needsMerge = false;\r\n\r\n        if (this.leftSynchroFile != null) {\r\n            leftCaption = this.leftSynchroFile.name;\r\n            if (this.leftSynchroFile.repository_file_version == null) {\r\n                leftVersionCaption = \"(ohne Version)\";\r\n            } else {\r\n                leftVersionCaption = \"(V \" + this.leftSynchroFile.repository_file_version;\r\n                if (!(this.leftSynchroFile.identical_to_repository_version || this.leftSynchroFile?.text == this.rightSynchroFile?.text)) {\r\n                    leftVersionCaption += '<span class=\"jo_synchro_withChanges\"> mit Änderungen</span>';\r\n                }\r\n                if (this.rightSynchroFile != null && this.leftSynchroFile.synchroWorkspace.isWritable()) {\r\n                    if (this.rightSynchroFile.repository_file_version > this.leftSynchroFile.repository_file_version) {\r\n                        needsMerge = !this.leftSynchroFile.markedAsMerged;\r\n                    }\r\n                }\r\n\r\n                leftVersionCaption += \")\";\r\n            }\r\n\r\n            if (this.leftSynchroFile.state == \"deleted\") {\r\n                leftCaption += \" - GELÖSCHT\";\r\n                leftVersionCaption = \"\";\r\n            }\r\n        }\r\n\r\n        let rightCaption = this.rightSynchroFile == null ? \"---\" : this.rightSynchroFile.name;\r\n        let rightVersionCaption = this.rightSynchroFile == null ? \"\" : \"(V \" + this.rightSynchroFile.repository_file_version + \")\";\r\n        if (this.rightSynchroFile?.state == \"deleted\") {\r\n            rightCaption += \" - GELÖSCHT\";\r\n            rightVersionCaption = \"\";\r\n        }\r\n\r\n        let $spacer1 = makeDiv(\"\", \"jo_synchro_5px_spacer\");\r\n        let $spacer2 = makeDiv(\"\", \"jo_synchro_5px_spacer\");\r\n\r\n        this.$buttonRightDiv.append($spacer2);\r\n\r\n        if (this.leftSynchroFile == null) {\r\n            if (this.leftSynchroWorkspace.isWritable() && that.rightSynchroFile.state != \"deleted\") {\r\n                this.$buttonLeftDiv.append(SynchronizationListElement.makeButton(\"create\", \"left\", () => {\r\n                    that.leftSynchroFile = {\r\n                        name: that.rightSynchroFile.name,\r\n                        idInsideRepository: that.rightSynchroFile.idInsideRepository,\r\n                        repository_file_version: that.rightSynchroFile.repository_file_version,\r\n                        identical_to_repository_version: true,\r\n                        state: \"new\",\r\n                        markedAsMerged: false,\r\n                        text: this.rightSynchroFile.text,\r\n                        synchroWorkspace: that.leftSynchroWorkspace,\r\n                        idInsideWorkspace: null,\r\n                        workspaceFile: null,\r\n                        originalText: null,\r\n                        monacoModel: null\r\n                    };\r\n                    that.leftSynchroWorkspace.files.push(that.leftSynchroFile);\r\n                    that.onFileChanged(\"left\");\r\n                }, false));\r\n            }\r\n            if (that.rightSynchroWorkspace.isWritable() && that.rightSynchroFile.state != \"deleted\") {\r\n                this.$buttonRightDiv.append(SynchronizationListElement.makeButton(\"delete\", \"right\", () => {\r\n                    that.rightSynchroFile.state = \"deleted\";\r\n                    that.onFileChanged(\"right\");\r\n                }, false));\r\n            }\r\n        } else if (this.rightSynchroFile == null) {\r\n            if (this.rightSynchroWorkspace.isWritable() && that.leftSynchroFile.state != \"deleted\") {\r\n                this.$buttonRightDiv.append(SynchronizationListElement.makeButton(\"create\", \"right\", () => {\r\n                    that.rightSynchroFile = {\r\n                        name: that.leftSynchroFile.name,\r\n                        committedFromFile: that.leftSynchroWorkspace.isWritable() ? that.leftSynchroFile : null,\r\n                        idInsideRepository: that.leftSynchroFile.idInsideRepository,\r\n                        repository_file_version: that.leftSynchroFile.repository_file_version == null ? 1 : that.leftSynchroFile.repository_file_version,\r\n                        identical_to_repository_version: that.leftSynchroFile.identical_to_repository_version,\r\n                        state: \"new\",\r\n                        markedAsMerged: false,\r\n                        text: this.leftSynchroFile.text,\r\n                        synchroWorkspace: that.rightSynchroWorkspace,\r\n                        idInsideWorkspace: this.leftSynchroFile.idInsideWorkspace,\r\n                        workspaceFile: null,\r\n                        originalText: null,\r\n                        monacoModel: null\r\n                    }\r\n                    that.rightSynchroWorkspace.files.push(that.rightSynchroFile);\r\n                    that.leftSynchroFile.repository_file_version = that.rightSynchroFile.repository_file_version;\r\n                    that.leftSynchroFile.identical_to_repository_version = true;\r\n                    that.onFileChanged(\"right\");\r\n                }, false));\r\n            }\r\n            if (that.leftSynchroWorkspace.isWritable() && that.leftSynchroFile.state != \"deleted\") {\r\n                this.$buttonLeftDiv.append(SynchronizationListElement.makeButton(\"delete\", \"left\", () => {\r\n                    that.leftSynchroFile.state = \"deleted\";\r\n                    that.onFileChanged(\"left\");\r\n                },false));\r\n            }\r\n        } else {\r\n            // Both SynchroFiles != null\r\n            let isSynchronized: boolean = true;\r\n\r\n            let isRename: boolean = this.leftSynchroFile.name != this.rightSynchroFile.name;\r\n            let isUpdateOrCommit: boolean = this.leftSynchroFile.text != this.rightSynchroFile.text;\r\n            let onlyRename = isRename && !isUpdateOrCommit;\r\n\r\n            if (this.leftSynchroFile.repository_file_version == this.rightSynchroFile.repository_file_version) {\r\n                if (isUpdateOrCommit || isRename) {\r\n                    isSynchronized = false;\r\n                }\r\n            } else {\r\n                isSynchronized = false;\r\n            }\r\n\r\n            if (isSynchronized) {\r\n                this.$buttonLeftDiv.append(jQuery('<div>synchron - </div>'));\r\n                this.$buttonRightDiv.append(jQuery('<div> - synchron</div>'));\r\n            } else {\r\n                if (this.leftSynchroWorkspace.isWritable()) {\r\n                    this.$buttonLeftDiv.append(SynchronizationListElement.makeButton(\"update\", \"left\", () => {\r\n                        that.leftSynchroFile.text = that.rightSynchroFile.text;\r\n                        that.leftSynchroFile.repository_file_version = that.rightSynchroFile.repository_file_version;\r\n                        that.leftSynchroFile.identical_to_repository_version = true;\r\n                        that.leftSynchroFile.name = that.rightSynchroFile.name;\r\n                        that.leftSynchroFile.state = \"changed\";\r\n                        that.onFileChanged(\"left\");\r\n                    }, onlyRename));\r\n                }\r\n                if (this.rightSynchroWorkspace.isWritable() && !needsMerge) {\r\n                    this.$buttonRightDiv.append(SynchronizationListElement.makeButton(\"commit\", \"right\", () => {\r\n                        that.rightSynchroFile.text = that.leftSynchroFile.text;\r\n                        that.rightSynchroFile.name = that.leftSynchroFile.name;\r\n                        that.rightSynchroFile.repository_file_version++;\r\n                        if (that.leftSynchroWorkspace.isWritable()) that.rightSynchroFile.committedFromFile = that.leftSynchroFile;\r\n                        if (that.leftSynchroWorkspace.isWritable()) {\r\n                            that.leftSynchroFile.repository_file_version = that.rightSynchroFile.repository_file_version;\r\n                            this.leftSynchroFile.identical_to_repository_version = true;\r\n                        }\r\n                        that.rightSynchroFile.state = \"changed\";\r\n                        that.onFileChanged(\"right\");\r\n                    }, onlyRename));\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.$buttonLeftDiv.append($spacer1);\r\n\r\n\r\n        this.$leftFileDiv.append(jQuery(`<div class=\"jo_synchro_filename\">${leftCaption}<span class=\"jo_synchro_fileVersion\">${leftVersionCaption}</span></div>`));\r\n        this.$rightFileDiv.append(jQuery(`<div class=\"jo_synchro_filename\">${rightCaption}<span class=\"jo_synchro_fileVersion\">${rightVersionCaption}</span></div>`));\r\n\r\n        if (needsMerge) {\r\n            this.$markAsMergedButtonDiv = jQuery(`<div class=\"jo_synchro_button jo_synchro_markAsMergedButton\">Als \"merged\" markieren</div>`);\r\n            this.$leftFileDiv.append(this.$markAsMergedButtonDiv);\r\n            this.$markAsMergedButtonDiv.on(\"click\", (e) => {\r\n                e.stopPropagation();\r\n                this.leftSynchroFile.markedAsMerged = true;\r\n                this.compareFilesAndAdaptGUI();\r\n            });\r\n        }\r\n\r\n        if (this.leftSynchroFile != null && this.leftSynchroFile.markedAsMerged) {\r\n            this.showMergedDiv();\r\n        }\r\n\r\n        this.manager.updateCenterButtons();\r\n\r\n    }\r\n\r\n    showMergedDiv() {\r\n        let $mergedDiv = jQuery(`<div class=\"jo_synchro_mergedDiv\">merged</div><div class=\"img_errorfree\"></div>`);\r\n        this.$leftFileDiv.append($mergedDiv);\r\n    }\r\n\r\n    emptyGUI() {\r\n        this.$leftFileDiv.empty();\r\n        this.$rightFileDiv.empty();\r\n        this.$buttonLeftDiv.empty();\r\n        this.$buttonRightDiv.empty();\r\n    }\r\n\r\n    static makeButton(kind: ButtonKind, arrowDirection: LeftRight, callback: () => void, onlyRename: boolean): JQuery<HTMLDivElement> {\r\n\r\n        let caption = \"\";\r\n        let klass = \"\";\r\n\r\n        switch (kind) {\r\n            case \"commit\":\r\n                caption = onlyRename ? \"rename\" : \"commit\"; klass = \"jo_synchro_commitButton\"; break;\r\n            case \"commitAll\":\r\n                caption = \"commit all\"; klass = \"jo_synchro_commitButton\"; break;\r\n            case \"update\":\r\n                caption = onlyRename ? \"rename\" : \"update\"; klass = \"jo_synchro_updateButton\"; break;\r\n            case \"updateAll\":\r\n                caption = \"update all\"; klass = \"jo_synchro_updateButton\"; break;\r\n            case \"create\": caption = \"create\"; klass = \"jo_synchro_createButton\"; break;\r\n            case \"delete\": caption = \"delete\"; klass = \"jo_synchro_deleteButton\"; break;\r\n        }\r\n\r\n        switch (arrowDirection) {\r\n            case \"left\": klass += \" jo_synchro_arrowLeft\"; break;\r\n            case \"right\": klass += \" jo_synchro_arrowRight\"; break;\r\n        }\r\n\r\n        let div: JQuery<HTMLDivElement> = jQuery(`<div class=\"jo_synchro_button ${klass}\">${caption}</div>`);\r\n\r\n        div.on(\"click\", (e) => {\r\n            e.stopPropagation();\r\n            if (callback != null) callback();\r\n        });\r\n\r\n        div.on(\"mousedown\", (e) => { e.stopPropagation() })\r\n\r\n        return div;\r\n\r\n    }\r\n\r\n\r\n}","import { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { GetRepositoryRequest, GetRepositoryResponse, Repository, GainRepositoryLockRequest, GainRepositoryLockResponse, LeaseRepositoryLockRequest, LeaseRepositoryLockResponse } from \"../../communication/Data.js\";\r\nimport { EmbeddedSlider } from \"../../embedded/EmbeddedSlider.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { HistoryElement } from \"./HistoryElement.js\";\r\nimport { RepositoryTool } from \"./RepositoryTool.js\";\r\nimport { LeftRight, SynchronizationListElement } from \"./SynchronizationListElement.js\";\r\nimport { SynchroFile, SynchroWorkspace } from \"./SynchroWorkspace.js\";\r\nimport { Dialog } from \"../../main/gui/Dialog.js\";\r\n\r\n\r\ntype FileElement = {\r\n    id: number,\r\n    name: string,\r\n    leftSynchroFile: SynchroFile,\r\n    rightSynchroFile: SynchroFile\r\n}\r\n\r\nexport class SynchronizationManager {\r\n\r\n    $mainHeadingDiv: JQuery<HTMLDivElement>; // heading \"Java-Online: Synchronize repositories\"\r\n\r\n    $writeWorkspaceChangesButton: JQuery<HTMLDivElement>;\r\n    $writeRepositoryChangesButton: JQuery<HTMLDivElement>;\r\n\r\n    $backToWorkspaceButton: JQuery<HTMLDivElement>;\r\n    $backToCurrentRepositoryVersionButton: JQuery<HTMLDivElement>;\r\n\r\n    $exitButton: JQuery<HTMLDivElement>;\r\n\r\n    $belowMainHeadingDiv: JQuery<HTMLDivElement>; // contains all elements below main heading\r\n\r\n    $leftDiv: JQuery<HTMLDivElement>; // contains headings, file lists and editors\r\n    $historyOuterDiv: JQuery<HTMLDivElement>; // contains history\r\n    $historyScrollDiv: JQuery<HTMLDivElement>;\r\n\r\n    $leftUpperDiv: JQuery<HTMLDivElement>; // contains file list header, file list and file list footer\r\n\r\n    $fileListHeaderOuterDiv: JQuery<HTMLDivElement>;\r\n    $fileListHeaderDivs: JQuery<HTMLDivElement>[] = [];\r\n\r\n    $fileListHeaderContainerRight: JQuery<HTMLDivElement>;\r\n\r\n    $updateAllButton: JQuery<HTMLElement>;\r\n    $commitAllButton: JQuery<HTMLElement>;\r\n\r\n\r\n    $fileListOuterDiv: JQuery<HTMLDivElement>;\r\n    $fileListDivs: JQuery<HTMLDivElement>[] = [];\r\n\r\n    $fileListFooterDiv: JQuery<HTMLDivElement>;\r\n\r\n    $editorDiv: JQuery<HTMLDivElement>;\r\n\r\n    guiReady: boolean = false;\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    currentUserSynchroWorkspace: SynchroWorkspace;\r\n    currentRepositorySynchroWorkspace: SynchroWorkspace;\r\n    currentRepository: Repository;\r\n\r\n    leftSynchroWorkspace: SynchroWorkspace;\r\n    rightSynchroWorkspace: SynchroWorkspace;\r\n\r\n    lastShownSynchronizationElement: SynchronizationListElement;\r\n    synchronizationListElements: SynchronizationListElement[] = [];\r\n\r\n    lastShownHistoryElement: HistoryElement;\r\n    historyElements: HistoryElement[] = [];\r\n\r\n    timer: any;\r\n\r\n    repositoryIsWritable: boolean;\r\n\r\n    constructor(public main: Main) {\r\n    }\r\n\r\n    synchronizeWithWorkspace(workspace: Workspace) {\r\n\r\n        this.gainRepositoryLock(workspace.repository_id, (success) => {\r\n            if (success) {\r\n                this.repositoryIsWritable = true;\r\n                this.attachToWorkspaceAndRepository(workspace);\r\n                this.show();\r\n\r\n                this.timer = setInterval(() => {\r\n\r\n                    this.gainRepositoryLock(this.currentRepository.id, (success) => {\r\n                        if (!success) {\r\n                            alert('Der Server ist temporär nicht erreichbar.');\r\n                            window.history.back();\r\n                        }\r\n                    })\r\n\r\n                }, 10000)\r\n            } else {\r\n                // User has no write permission to repository => no lock needed.\r\n                this.attachToWorkspaceAndRepository(workspace);\r\n                this.repositoryIsWritable = false;\r\n                this.show();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    gainRepositoryLock(repository_id: number, callback: (success: boolean) => void) {\r\n        let request: GainRepositoryLockRequest = { repository_id: repository_id };\r\n        ajax('gainRepositoryLock', request, (response: GainRepositoryLockResponse) => {\r\n            callback(response.success);\r\n            // console.log(\"Lock for repository_id \" + repository_id + \" has been granted.\")\r\n        }, (message) => {\r\n            alert(message);\r\n            callback(false);\r\n        });\r\n    }\r\n\r\n    attachToWorkspaceAndRepository(workspace: Workspace) {\r\n\r\n        this.currentUserSynchroWorkspace = new SynchroWorkspace(this).copyFromWorkspace(workspace);\r\n        this.leftSynchroWorkspace = this.currentUserSynchroWorkspace;\r\n\r\n        let that = this;\r\n\r\n        let request: GetRepositoryRequest = { repository_id: workspace.repository_id, workspace_id: workspace.id };\r\n        ajax(\"getRepository\", request, (response: GetRepositoryResponse) => {\r\n\r\n            that.attachToRepository(response.repository);\r\n\r\n        }, (message: string) => {\r\n            alert(message);\r\n            window.history.back();\r\n        })\r\n\r\n    }\r\n\r\n    attachToRepository(repository: Repository) {\r\n        this.currentRepository = repository;\r\n        RepositoryTool.deserializeRepository(this.currentRepository);\r\n        this.currentRepositorySynchroWorkspace = new SynchroWorkspace(this).copyFromRepository(this.currentRepository, true);\r\n\r\n        this.rightSynchroWorkspace = this.currentRepositorySynchroWorkspace;\r\n        this.setupSynchronizationListElements();\r\n        this.setupHistoryElements();\r\n    }\r\n\r\n    setupHistoryElements() {\r\n        this.$historyScrollDiv.empty();\r\n        this.historyElements = [];\r\n        this.lastShownHistoryElement = null;\r\n\r\n        this.currentRepository.historyEntries.forEach((he, index) => {\r\n            this.historyElements.push(new HistoryElement(this, this.currentRepository, he, index));\r\n        });\r\n    }\r\n\r\n    setupSynchronizationListElements() {\r\n\r\n        let lastSynchroFileLeft = null;\r\n        let lastSynchroFileRight = null;\r\n        if (this.lastShownSynchronizationElement != null) {\r\n            lastSynchroFileLeft = this.lastShownSynchronizationElement.leftSynchroFile;\r\n            lastSynchroFileRight = this.lastShownSynchronizationElement.rightSynchroFile;\r\n        }\r\n\r\n        this.$fileListDivs.forEach($div => $div.empty());\r\n\r\n        this.synchronizationListElements.forEach(se => se.emptyGUI());\r\n        this.synchronizationListElements = [];\r\n        this.lastShownSynchronizationElement = null;\r\n\r\n        let fileElements: FileElement[] = [];\r\n        let synchroFileMap: { [id: string]: FileElement } = {};\r\n\r\n        this.leftSynchroWorkspace.files.forEach(sfile => {\r\n            let fileElement = {\r\n                id: sfile.idInsideRepository,\r\n                name: sfile.name,\r\n                leftSynchroFile: sfile,\r\n                rightSynchroFile: null\r\n            };\r\n\r\n            fileElements.push(fileElement);\r\n            if (sfile.idInsideRepository != null) {\r\n                synchroFileMap[\"r\" + sfile.idInsideRepository] = fileElement;\r\n            } else {\r\n                synchroFileMap[\"w\" + sfile.idInsideWorkspace] = fileElement;\r\n            }\r\n        });\r\n\r\n        this.rightSynchroWorkspace.files.forEach(sfile => {\r\n            let fileElement: FileElement = null;\r\n            if (sfile.idInsideRepository != null){\r\n                fileElement = synchroFileMap[\"r\" + sfile.idInsideRepository];\r\n            }  else {\r\n                fileElement = synchroFileMap[\"w\" + sfile.idInsideWorkspace];\r\n            }\r\n            if (fileElement == null) {\r\n                fileElement = {\r\n                    id: sfile.idInsideRepository,\r\n                    name: sfile.name,\r\n                    leftSynchroFile: null,\r\n                    rightSynchroFile: sfile\r\n                };\r\n                fileElements.push(fileElement);\r\n            } else {\r\n                fileElement.rightSynchroFile = sfile;\r\n            }\r\n        });\r\n\r\n        fileElements.sort((fe1, fe2) => fe1.name.localeCompare(fe2.name));\r\n\r\n        fileElements.forEach(fe => {\r\n\r\n            let synchroListElement = new SynchronizationListElement(this, fe.leftSynchroFile, fe.rightSynchroFile, this.leftSynchroWorkspace, this.rightSynchroWorkspace);\r\n            this.synchronizationListElements.push(synchroListElement);\r\n            synchroListElement.compareFilesAndAdaptGUI();\r\n\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: monaco.editor.createModel(\"Wählen Sie oben eine Datei aus!\", \"myJava\"),\r\n            modified: monaco.editor.createModel(\"Wählen Sie oben eine Datei aus!\", \"myJava\")\r\n        });\r\n\r\n        this.diffEditor.updateOptions({\r\n            originalEditable: false\r\n        })\r\n\r\n        if (this.leftSynchroWorkspace == this.currentUserSynchroWorkspace) {\r\n            this.setHeader(\"left\", \"Dein Workspace:\");\r\n            this.$backToWorkspaceButton.hide();\r\n        } else {\r\n            this.setHeader(\"left\", this.leftSynchroWorkspace.name + \":\");\r\n            this.$backToWorkspaceButton.show();\r\n            this.$writeWorkspaceChangesButton.hide();\r\n        }\r\n\r\n        if (this.rightSynchroWorkspace == this.currentRepositorySynchroWorkspace) {\r\n            let writable: string = this.repositoryIsWritable ? \", mit Schreibzugriff\" : \", ohne Schreibzugriff\";\r\n            this.setHeader(\"right\", \"Repository (aktuelle Version\" + writable + \"):\");\r\n            this.$backToCurrentRepositoryVersionButton.hide();\r\n        } else {\r\n            this.setHeader(\"right\", this.rightSynchroWorkspace.name + \":\");\r\n            this.$backToCurrentRepositoryVersionButton.show();\r\n            this.$writeRepositoryChangesButton.hide();\r\n        }\r\n\r\n        jQuery('#jo_synchro_main_heading_text').text(`Synchronisieren mit Repository \"${this.currentRepository.name}\"`);\r\n\r\n        let lastFileSelected: boolean = false;\r\n        if (lastSynchroFileLeft != null || lastSynchroFileRight != null) {\r\n            for (let sle of this.synchronizationListElements) {\r\n                if (\r\n                    sle.leftSynchroFile != null && sle.leftSynchroFile == lastSynchroFileLeft ||\r\n                    sle.rightSynchroFile != null && sle.rightSynchroFile == lastSynchroFileRight\r\n                ) {\r\n                    sle.select();\r\n                    lastFileSelected = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!lastFileSelected && this.synchronizationListElements.length > 0) {\r\n            this.synchronizationListElements[0].select();\r\n        }\r\n\r\n    }\r\n\r\n    show() {\r\n        if (!this.guiReady) {\r\n            this.initGUI();\r\n        }\r\n        let $synchroDiv = jQuery('#synchronize-div');\r\n        $synchroDiv.css('visibility', 'visible');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'hidden');\r\n\r\n        this.$writeWorkspaceChangesButton.hide();\r\n        this.$writeRepositoryChangesButton.hide();\r\n\r\n        let that = this;\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.hide();\r\n        });\r\n    }\r\n\r\n    hide() {\r\n        let $synchroDiv = jQuery('#synchronize-div');\r\n        $synchroDiv.css('visibility', 'hidden');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'visible');\r\n\r\n        clearInterval(this.timer);\r\n\r\n        if(this.currentRepository == null) return;   // Testuser...\r\n\r\n        let request: LeaseRepositoryLockRequest = { repository_id: this.currentRepository.id };\r\n        ajax('leaseRepositoryLock', request, (response: LeaseRepositoryLockResponse) => {\r\n            // console.log(\"Lock for repository_id \" + request.repository_id + \" has been released.\")\r\n        }, (message) => {\r\n        });\r\n    }\r\n\r\n    initGUI() {\r\n        this.guiReady = true;\r\n        let $synchroDiv = jQuery('#synchronize-div');\r\n        let that = this;\r\n\r\n        $synchroDiv.append(\r\n\r\n            this.$mainHeadingDiv = jQuery('<div id=\"jo_synchro_main_heading\"><span id=\"jo_synchro_main_heading_text\">Java-Online: Workspace mit Repository synchronisieren</span></div>'),\r\n\r\n            this.$belowMainHeadingDiv = makeDiv(\"jo_synchro_below_main_heading\"));\r\n\r\n        let $buttonsTopRightDiv = makeDiv(\"jo_synchro_buttonsTopRight\");\r\n        this.$mainHeadingDiv.append($buttonsTopRightDiv);\r\n\r\n        $buttonsTopRightDiv.append(this.$exitButton = jQuery('<div id=\"jo_synchro_exitButton\" class=\"jo_synchro_button\">Zurück zum Programmieren</div>'));\r\n\r\n        this.$exitButton.on('click', () => {\r\n            window.history.back();\r\n        });\r\n\r\n        this.$leftDiv = makeDiv(\"jo_synchro_leftDiv\");\r\n        this.$historyOuterDiv = makeDiv(\"jo_synchro_historyOuterDiv\");\r\n\r\n        this.$historyOuterDiv.append(jQuery('<div id=\"jo_synchro_historyHeader\"><div class=\"jo_synchro_tabHeading\">History:</div></div>)'));\r\n\r\n        this.$belowMainHeadingDiv.append(this.$leftDiv, this.$historyOuterDiv);\r\n\r\n        new EmbeddedSlider(this.$historyOuterDiv, true, false, () => { this.diffEditor.layout(); }).$sliderDiv.css('left', '-3px');\r\n        this.$historyOuterDiv.find('.joe_slider').css('position', 'absolute');\r\n\r\n        this.$historyScrollDiv = makeDiv(\"historyScrollDiv\", \"jo_scrollable\");\r\n        this.$historyOuterDiv.append(this.$historyScrollDiv);\r\n\r\n\r\n        this.$leftDiv.append(\r\n            this.$leftUpperDiv = makeDiv(\"jo_synchro_leftUpper\"),\r\n            this.$editorDiv = makeDiv(\"jo_synchro_editor\")\r\n        );\r\n\r\n        this.$leftUpperDiv.append(\r\n            this.$fileListHeaderOuterDiv = makeDiv(\"jo_synchro_fileListHeaderOuter\"),\r\n            this.$fileListOuterDiv = makeDiv(\"jo_synchro_fileListOuter\", \"jo_scrollable\"),\r\n            this.$fileListFooterDiv = makeDiv(\"jo_synchro_fileListFooter\")\r\n        )\r\n\r\n        this.$fileListHeaderContainerRight = makeDiv(null, \"jo_synchro_fileListHeaderContainerRight\");\r\n        let fileListHeaderRight = makeDiv(null, \"jo_synchro_fileListHeader\");\r\n        this.$fileListHeaderContainerRight.append(fileListHeaderRight);\r\n\r\n        let $fileListHeaderCenter = makeDiv(null, \"jo_synchro_fileListHeaderCenter\");\r\n        $fileListHeaderCenter.append(this.$updateAllButton = SynchronizationListElement.makeButton(\"updateAll\", \"left\", () => { that.updateAll() }, false));\r\n        $fileListHeaderCenter.append(this.$commitAllButton = SynchronizationListElement.makeButton(\"commitAll\", \"right\", () => { that.commitAll() }, false));\r\n\r\n        this.$fileListHeaderDivs.push(makeDiv(null, \"jo_synchro_fileListHeader\", \"\", { \"flex\": \"2 0\" }), $fileListHeaderCenter, this.$fileListHeaderContainerRight, makeDiv(null, \"jo_synchro_scrollbarPlaceholder\"));\r\n        this.$fileListDivs.push(makeDiv(null, \"jo_synchro_fileList\"), makeDiv(null, \"jo_synchro_fileListButtonsLeft\"), makeDiv(null, \"jo_synchro_fileListButtonsRight\"), makeDiv(null, \"jo_synchro_fileList\"));\r\n\r\n        this.$fileListHeaderOuterDiv.append(this.$fileListHeaderDivs);\r\n        this.$fileListOuterDiv.append(this.$fileListDivs);\r\n\r\n        this.$fileListHeaderDivs[0].append(\"<div class='jo_synchro_tabHeading'>Dein Workspace:</div>\");\r\n        fileListHeaderRight.append(\"<div class='jo_synchro_tabHeading'>Repository (aktuelle Version):</div>\");\r\n\r\n\r\n        this.$fileListHeaderDivs[0].append(this.$backToWorkspaceButton = jQuery('<div class=\"jo_synchro_button jo_synchro_backToButton\">Zeige eigenen Workspace</div>'));\r\n        this.$backToWorkspaceButton.on('click', () => {\r\n            that.backToWorkspace();\r\n        });\r\n        this.$backToWorkspaceButton.hide();\r\n\r\n\r\n\r\n\r\n        fileListHeaderRight.append(this.$backToCurrentRepositoryVersionButton = jQuery('<div class=\"jo_synchro_button jo_synchro_backToButton\">Zeige aktuelle Repository-Version</div>'));\r\n        this.$backToCurrentRepositoryVersionButton.on('click', () => {\r\n            that.backToCurrentRepositoryVersion();\r\n        });\r\n        this.$backToWorkspaceButton.hide();\r\n\r\n        this.$fileListHeaderDivs[0].append(this.$writeWorkspaceChangesButton = jQuery('<div id=\"jo_synchro_writeChangesButton\" class=\"jo_synchro_button\">Änderungen am Workspace (rot!) speichern</div>'));\r\n        this.$writeWorkspaceChangesButton.on('click', () => {\r\n            that.writeWorkspaceChanges();\r\n        });\r\n        this.$writeWorkspaceChangesButton.hide();\r\n\r\n        fileListHeaderRight.append(this.$writeRepositoryChangesButton = jQuery('<div id=\"jo_synchro_writeChangesButton\" class=\"jo_synchro_button\">Änderungen am Repository (rot!) speichern</div>'));\r\n        this.$writeRepositoryChangesButton.on('click', () => {\r\n            that.writeRepositoryChanges();\r\n        });\r\n        this.$writeRepositoryChangesButton.hide();\r\n\r\n\r\n\r\n\r\n        let horizontalSlider = new EmbeddedSlider(this.$editorDiv, true, true, () => { this.diffEditor.layout(); });\r\n        horizontalSlider.setColor('var(--slider)');\r\n\r\n        this.makeDroppable(\"left\", this.$fileListDivs[0]);\r\n        this.makeDroppable(\"right\", this.$fileListDivs[3]);\r\n\r\n        this.initEditor();\r\n    }\r\n\r\n    backToWorkspace() {\r\n        this.leftSynchroWorkspace = this.currentUserSynchroWorkspace;\r\n        this.setupSynchronizationListElements();\r\n        this.onContentChanged(\"left\");\r\n    }\r\n\r\n    backToCurrentRepositoryVersion() {\r\n        this.rightSynchroWorkspace = this.currentRepositorySynchroWorkspace;\r\n        this.setupSynchronizationListElements();\r\n        this.onContentChanged(\"right\");\r\n    }\r\n\r\n    makeDroppable(leftRight: LeftRight, $dropZoneDiv: JQuery<HTMLDivElement>) {\r\n        let that = this;\r\n        $dropZoneDiv.on(\"dragover\", (e) => {\r\n            $dropZoneDiv.addClass('jo_synchro_dragZone');\r\n            e.preventDefault();\r\n        });\r\n        $dropZoneDiv.on(\"dragleave\", () => {\r\n            $dropZoneDiv.removeClass('jo_synchro_dragZone');\r\n        });\r\n        $dropZoneDiv.on(\"drop\", (e) => {\r\n            let sw = new SynchroWorkspace(that).copyFromHistoryElement(HistoryElement.currentlyDragged);\r\n            switch (leftRight) {\r\n                case \"left\":\r\n                    that.leftSynchroWorkspace = sw;\r\n                    break;\r\n                case \"right\":\r\n                    that.rightSynchroWorkspace = sw;\r\n                    break;\r\n            }\r\n            that.setupSynchronizationListElements();\r\n            $dropZoneDiv.removeClass('jo_synchro_dragZone');\r\n        })\r\n\r\n    }\r\n\r\n    setHeader(leftRight: LeftRight, caption: string) {\r\n        let index: number = leftRight == \"left\" ? 0 : 2;\r\n        this.$fileListHeaderDivs[index].find('.jo_synchro_tabHeading').text(caption);\r\n    }\r\n\r\n    writeRepositoryChanges() {\r\n\r\n        let that = this;\r\n        this.$writeRepositoryChangesButton.hide();\r\n\r\n        let $dialogDiv = makeDiv(\"\", \"jo_synchro_commitDialogDiv\");\r\n        $dialogDiv.hide();\r\n        this.$fileListHeaderContainerRight.append($dialogDiv);\r\n\r\n        $dialogDiv.append(makeDiv(\"\", \"jo_synchro_commitDialogCaption\", \"Bitte beschreibe kurz die vorgenommenen Änderungen am Repository:\"));\r\n        let $dialogTextarea: JQuery<HTMLTextAreaElement> = jQuery('<textarea class=\"jo_synchro_commitDialogTextarea\"></textarea>');\r\n        $dialogDiv.append($dialogTextarea);\r\n\r\n        let $dialogButtonDiv = makeDiv(\"\", \"jo_synchro_commitDialogButtonDiv\");\r\n        $dialogDiv.append($dialogButtonDiv);\r\n\r\n        let $buttonCancel = makeDiv(\"\", \"jo_synchro_button\", \"Abbrechen\", { \"background-color\": \"var(--updateButtonBackground)\", \"color\": \"var(--updateButtonColor)\" })\r\n        $dialogButtonDiv.append($buttonCancel);\r\n\r\n        $buttonCancel.on(\"click\", () => {\r\n            $dialogDiv.remove();\r\n            that.$writeRepositoryChangesButton.show();\r\n        })\r\n\r\n        let $buttonOK = makeDiv(\"\", \"jo_synchro_button\", \"OK\", { \"background-color\": \"var(--createButtonBackground)\", \"color\": \"var(--createButtonColor)\" })\r\n        $dialogButtonDiv.append($buttonOK);\r\n\r\n        $dialogDiv.show(600);\r\n\r\n        $buttonOK.on(\"click\", () => {\r\n            let comment = <string>$dialogTextarea.val();\r\n            $dialogDiv.remove();\r\n\r\n            this.currentRepositorySynchroWorkspace.commit(this.currentUserSynchroWorkspace.copiedFromWorkspace, this.currentRepository, comment,\r\n                this.main, (repository: Repository, errorMessage: string) => {\r\n\r\n                    if (errorMessage != null) {\r\n                        alert(errorMessage);\r\n                        this.attachToWorkspaceAndRepository(this.currentRepositorySynchroWorkspace.copiedFromWorkspace);\r\n                    } else {\r\n                        this.attachToRepository(repository);\r\n                        this.$writeRepositoryChangesButton.hide();\r\n                    }\r\n\r\n                });\r\n\r\n        })\r\n\r\n        $dialogTextarea.focus();\r\n\r\n    }\r\n\r\n    writeWorkspaceChanges() {\r\n        this.currentUserSynchroWorkspace.writeChangesToWorkspace();\r\n        this.currentUserSynchroWorkspace = new SynchroWorkspace(this).copyFromWorkspace(this.currentUserSynchroWorkspace.copiedFromWorkspace);\r\n        this.leftSynchroWorkspace = this.currentUserSynchroWorkspace;\r\n        this.setupSynchronizationListElements();\r\n        this.$writeWorkspaceChangesButton.hide();\r\n    }\r\n\r\n    initEditor() {\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"jo_synchro_editor\"), {\r\n            originalEditable: true, // for left pane\r\n            readOnly: true,         // for right pane\r\n            automaticLayout: true\r\n        });\r\n    }\r\n\r\n    onContentChanged(leftRight: LeftRight) {\r\n        let $button: JQuery<HTMLDivElement> = leftRight == \"left\" ? this.$writeWorkspaceChangesButton : this.$writeRepositoryChangesButton\r\n        let synchroWorkspace: SynchroWorkspace = leftRight == \"left\" ? this.currentUserSynchroWorkspace : this.currentRepositorySynchroWorkspace;\r\n\r\n        if (synchroWorkspace.hasChanges()) {\r\n            $button.show();\r\n        } else {\r\n            $button.hide();\r\n        }\r\n\r\n    }\r\n\r\n    updateAll() {\r\n        let updateButtons = this.$fileListDivs[1].find('.jo_synchro_updateButton');\r\n        updateButtons.click();\r\n    }\r\n\r\n    commitAll() {\r\n        let commitButtons = this.$fileListDivs[2].find('.jo_synchro_commitButton');\r\n        commitButtons.click();\r\n    }\r\n\r\n\r\n    updateCenterButtons() {\r\n        let updateButtons = this.$fileListDivs[1].find('.jo_synchro_updateButton');\r\n        if (updateButtons.length > 0) {\r\n            this.$updateAllButton.css(\"visibility\", \"inherit\");\r\n        } else {\r\n            this.$updateAllButton.css(\"visibility\", \"hidden\");\r\n        }\r\n\r\n        let commitButtons = this.$fileListDivs[2].find('.jo_synchro_commitButton');\r\n        if (commitButtons.length > 0) {\r\n            this.$commitAllButton.css(\"visibility\", \"inherit\");\r\n        } else {\r\n            this.$commitAllButton.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n\r\n}","import { Repository } from \"../../communication/Data.js\";\r\n\r\nexport class RepositoryTool {\r\n\r\n    static deserializeRepository(repo: Repository) {\r\n\r\n        if (repo.files != null && repo.files.startsWith('[')) {\r\n            repo.fileEntries = JSON.parse(repo.files);\r\n        } else {\r\n            repo.fileEntries = [];\r\n        }\r\n\r\n        repo.fileEntries.forEach(fe => fe.text = fe.text.replace(/\\r\\n/g, \"\\n\"));\r\n\r\n        if (!repo.history.endsWith(\"]\")) repo.history += \"]\";\r\n        repo.historyEntries = JSON.parse(repo.history);\r\n\r\n    }\r\n\r\n    static copyRepository(repo: Repository, withHistoryElements: boolean): Repository {\r\n\r\n        let crepo: Repository = Object.assign({}, repo);\r\n\r\n        if (repo.fileEntries != null) {\r\n            crepo.fileEntries = [];\r\n            for (let fe of repo.fileEntries) {\r\n                crepo.fileEntries.push(Object.assign({}, fe));\r\n            }\r\n        }\r\n\r\n        if (repo.historyEntries != null && withHistoryElements) {\r\n            crepo.historyEntries = [];\r\n            for (let he of repo.historyEntries) {\r\n                let che = Object.assign({}, he);\r\n\r\n                if (he.historyFiles != null) {\r\n                    che.historyFiles = [];\r\n                    for (let hfe of he.historyFiles) {\r\n                        che.historyFiles.push(Object.assign({}, hfe));\r\n                    }\r\n                }\r\n\r\n                crepo.historyEntries.push(che);\r\n            }\r\n        }\r\n\r\n        return crepo;\r\n\r\n    }\r\n\r\n    \r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { makeDiv, SelectItem, getSelectedObject, setSelectItems } from \"../../tools/HtmlTools.js\";\r\nimport { RepositoryUser, GetRepositoryRequest, GetRepositoryResponse, GetRepositoryUserListRequest, GetRepositoryUserListResponse, UserData } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\n\r\n\r\n\r\nexport class RepositoryCreateManager {\r\n\r\n    guiReady: boolean = false;\r\n\r\n    $mainHeading: JQuery<HTMLDivElement>;\r\n    $settingsDiv: JQuery<HTMLElement>;\r\n\r\n    $repoName: JQuery<HTMLInputElement>;\r\n    $repoDescription: JQuery<HTMLTextAreaElement>;\r\n    $repoPublishedTo: JQuery<HTMLSelectElement>;\r\n\r\n    $cancelButton: JQuery<HTMLElement>;\r\n    $createButton: JQuery<HTMLElement>;\r\n\r\n\r\n    publishedToItems: SelectItem[] = [];\r\n\r\n    workspace: Workspace;\r\n\r\n    constructor(public main: Main) {\r\n    }\r\n\r\n    initGUI() {\r\n        this.guiReady = true;\r\n        let that = this;\r\n        let $updateDiv = jQuery('#createRepo-div');\r\n\r\n        $updateDiv.append(this.$mainHeading = makeDiv('', \"createUpdateRepo-mainHeading\"));\r\n\r\n        $updateDiv.append(this.$settingsDiv = makeDiv('', \"createUpdateRepo-settingsDiv\"));\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Name des Repositorys:</div>'));\r\n        this.$settingsDiv.append(this.$repoName = jQuery('<input type=\"text\" class=\"createUpdateRepo-inputcolumn\"></input>'));\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Beschreibung:</div>'));\r\n        this.$settingsDiv.append(this.$repoDescription = jQuery('<textarea class=\"createUpdateRepo-inputcolumn\" style=\"min-height: 4em\"></textarea>'));\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Veröffentlicht für:</div>'));\r\n        this.$settingsDiv.append(this.$repoPublishedTo = jQuery('<select class=\"createUpdateRepo-inputcolumn\"></select>'));\r\n\r\n        let $buttonDiv = makeDiv(\"createRepo-buttonDiv\");\r\n\r\n        $buttonDiv.append(this.$createButton = makeDiv(\"\", \"jo_synchro_button\", \"Repository erstellen\", { \"background-color\": \"var(--createButtonBackground)\", \"color\": \"var(--createButtonColor)\" }));\r\n        this.$createButton.on(\"click\", () => { that.createButtonClicked() })\r\n\r\n        $buttonDiv.append(this.$cancelButton = makeDiv(\"\", \"jo_synchro_button\", \"Abbrechen\", { \"background-color\": \"var(--cancelButtonBackground)\", \"color\": \"var(--cancelButtonColor)\" }));\r\n        this.$cancelButton.on(\"click\", () => { that.cancelButtonClicked() })\r\n\r\n        $updateDiv.append($buttonDiv);\r\n\r\n\r\n    }\r\n\r\n    show(workspace: Workspace) {\r\n\r\n        this.workspace = workspace;\r\n\r\n        if (!this.guiReady) {\r\n            this.initGUI();\r\n        }\r\n\r\n        let user = this.main.user;\r\n        let isStudent = !(user.is_admin || user.is_schooladmin || user.is_teacher);\r\n\r\n        this.publishedToItems =\r\n            [\r\n                { value: \"0\", object: 0, caption: \"Keine Veröffentlichung (privates Repository)\" },\r\n                { value: \"1\", object: 1, caption: isStudent ? \"Veröffentlicht für alle Schüler/innen der Klasse\" : \"Veröffentlicht für alle Schüler/innen der unterrichteten Klassen\" },\r\n                { value: \"2\", object: 2, caption: \"Veröffentlicht für alle Schüler/innen der Schule\" },\r\n            ];\r\n        setSelectItems(this.$repoPublishedTo, this.publishedToItems, \"0\");\r\n\r\n\r\n        let $synchroDiv = jQuery('#createRepo-div');\r\n        $synchroDiv.css('visibility', 'visible');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'hidden');\r\n\r\n\r\n        this.initCreateMode(workspace);\r\n\r\n        let that = this;\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.hide();\r\n        });\r\n\r\n    }\r\n\r\n    initCreateMode(workspace: Workspace) {\r\n        let user = this.main.user;\r\n\r\n        let userInfo: RepositoryUser = {\r\n            firstName: user.rufname,\r\n            lastName: user.familienname,\r\n            username: user.username,\r\n            user_id: user.id,\r\n            canWrite: true,\r\n            klasse: \"\"\r\n        }\r\n\r\n        this.$mainHeading.text(`Repository anlegen und mit Workspace \"${workspace.name}\" verknüpfen:`);\r\n        this.$createButton.show();\r\n        this.$repoName.val(workspace.name);\r\n    }\r\n\r\n    hide() {\r\n        let $synchroDiv = jQuery('#createRepo-div');\r\n        $synchroDiv.css('visibility', 'hidden');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'visible');\r\n    }\r\n\r\n    createButtonClicked() {\r\n\r\n        let publishedTo: number = getSelectedObject(this.$repoPublishedTo);\r\n        let repoName: string = <string>this.$repoName.val();\r\n        let repoDescription: string = <string>this.$repoDescription.val();\r\n\r\n        this.main.networkManager.sendCreateRepository(this.workspace, publishedTo, repoName, repoDescription, (error: string, repository_id?: number) => {\r\n            if (error == null) {\r\n                let projectExplorer = this.main.projectExplorer;\r\n                let element = projectExplorer.workspaceListPanel.findElement(this.workspace);\r\n                projectExplorer.workspaceListPanel.setElementClass(element, \"repository\");\r\n                this.workspace.renderSynchronizeButton(element);\r\n                projectExplorer.showRepositoryButtonIfNeeded(this.workspace);\r\n                window.history.back(); // close modal window\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    cancelButtonClicked() {\r\n        window.history.back(); // close modal window\r\n    }\r\n\r\n\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { makeDiv, SelectItem, setSelectItems, getSelectedObject, openContextMenu, copyTextToClipboard } from \"../../tools/HtmlTools.js\";\r\nimport { RepositoryUser, GetRepositoryRequest, GetRepositoryResponse, GetRepositoryUserListRequest, GetRepositoryUserListResponse, UserData, GetRepositoryListRequest, GetRepositoryListResponse, RepositoryInfo, UpdateRepositoryRequest, UpdateRepositoryResponse, RepositoryUserWriteAccessData, UpdateRepositoryUserWriteAccessRequest, UpdateRepositoryUserWriteAccessResponse, DeleteRepositoryRequest } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\n\r\nexport class RepositorySettingsManager {\r\n\r\n    guiReady: boolean = false;\r\n\r\n    $mainHeading: JQuery<HTMLDivElement>;\r\n\r\n    $settingsDiv: JQuery<HTMLElement>;\r\n    $repoName: JQuery<HTMLInputElement>;\r\n    $repoDescription: JQuery<HTMLTextAreaElement>;\r\n    $repoPublishedTo: JQuery<HTMLSelectElement>;\r\n    $repoOwner: JQuery<HTMLSelectElement>;\r\n\r\n    $repoListDiv: JQuery<HTMLElement>;\r\n\r\n    $userlistDiv: JQuery<HTMLElement>;\r\n\r\n    $exitButton: JQuery<HTMLElement>;\r\n    $saveButton: JQuery<HTMLElement>;\r\n    $deleteButton: JQuery<HTMLElement>;\r\n\r\n    $settingsSecretRead: JQuery<HTMLElement>;\r\n    $settingsSecretWrite: JQuery<HTMLElement>;\r\n\r\n    publishedToItems: SelectItem[] = [];\r\n\r\n    repositoryOwnerItems: SelectItem[] = [];\r\n\r\n    users: RepositoryUser[] = [];\r\n\r\n    workspace: Workspace;\r\n    repositoryInfo: RepositoryInfo;\r\n\r\n    constructor(public main: Main) {\r\n    }\r\n\r\n    initGUI() {\r\n        this.guiReady = true;\r\n        let that = this;\r\n        let $updateDiv = jQuery('#updateRepo-div');\r\n\r\n        $updateDiv.append(this.$mainHeading = makeDiv('updateRepo-mainHeading', \"createUpdateRepo-mainHeading\", \"\"));\r\n        this.$mainHeading.append(makeDiv(\"\", \"\", \"Repositories verwalten\"));\r\n        this.$mainHeading.append(this.$exitButton = makeDiv(\"\", \"jo_synchro_button\", \"Zurück zum Programmieren\", { \"background-color\": \"var(--speedcontrol-grip)\", \"color\": \"var(--fontColorLight)\", \"font-size\": \"10pt\" }));\r\n        this.$exitButton.on(\"click\", () => { that.exitButtonClicked() })\r\n\r\n\r\n        let $divBelow = makeDiv(\"updateRepo-divBelow\");\r\n        $updateDiv.append($divBelow);\r\n\r\n        let $divLeft = makeDiv(\"updateRepo-divLeft\");\r\n        $divBelow.append($divLeft);\r\n\r\n        $divLeft.append(makeDiv('', 'updateRepo-minorHeading', 'Repositories:'));\r\n\r\n        this.$repoListDiv = makeDiv(\"updateRepo-repoListDiv\");\r\n        $divLeft.append(this.$repoListDiv);\r\n\r\n        let $rightDiv = makeDiv(\"updateRepo-divRight\");\r\n        $divBelow.append($rightDiv);\r\n\r\n        this.$settingsDiv = makeDiv(\"\", \"createUpdateRepo-settingsDiv\");\r\n        $rightDiv.append(this.$settingsDiv);\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Name des Repositorys:</div>'));\r\n        this.$settingsDiv.append(this.$repoName = jQuery('<input type=\"text\" class=\"createUpdateRepo-inputcolumn\"></input>'));\r\n        this.$repoName.on(\"input\", () => { that.enableSaveButton() });\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Beschreibung:</div>'));\r\n        this.$settingsDiv.append(this.$repoDescription = jQuery('<textarea class=\"createUpdateRepo-inputcolumn\" style=\"min-height: 4em\"></textarea>'));\r\n        this.$repoDescription.on(\"input\", () => { that.enableSaveButton() });\r\n\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Veröffentlicht für:</div>'));\r\n        this.$settingsDiv.append(this.$repoPublishedTo = jQuery('<select class=\"createUpdateRepo-inputcolumn\"></select>'));\r\n        this.$repoPublishedTo.on(\"change\", () => { that.enableSaveButton() });\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Eigentümer:</div>'));\r\n        this.$settingsDiv.append(this.$repoOwner = jQuery('<select class=\"createUpdateRepo-inputcolumn\"></select>'));\r\n        this.$repoOwner.on(\"change\", () => { that.enableSaveButton() });\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Code zum lesenden Zugriff aufs Repository:</div>'));\r\n        let $setSecrDivRead = jQuery('<div class=\"createUpdateRepo-settingsSecret\"></div>');\r\n        this.$settingsDiv.append($setSecrDivRead);\r\n        this.$settingsSecretRead = jQuery('<div class=\"createUpdateRepo-settingsSecretSecret\">---</div>')\r\n        $setSecrDivRead.append(this.$settingsSecretRead);\r\n\r\n        let $setSecrReadCopyButton = jQuery('<button class=\"jo_button jo_copy_secret_button jo_active\">Kopieren</button>');\r\n        $setSecrDivRead.append($setSecrReadCopyButton);\r\n        $setSecrReadCopyButton.on(\"pointerdown\", () => {copyTextToClipboard(this.$settingsSecretRead.text())})\r\n\r\n        let $setSecrReadButton = jQuery('<button class=\"jo_button jo_set_secret_button jo_active\">Ändern</button>');\r\n        $setSecrDivRead.append($setSecrReadButton);\r\n        $setSecrReadButton.on(\"pointerdown\", () => {that.setSecret(true, false)})\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Code zum schreibenden Zugriff aufs Repository:</div>'));\r\n        let $setSecrDivWrite = jQuery('<div class=\"createUpdateRepo-settingsSecret\"></div>');\r\n        this.$settingsDiv.append($setSecrDivWrite);\r\n        this.$settingsSecretWrite = jQuery('<div class=\"createUpdateRepo-settingsSecretSecret\">---</div>')\r\n        $setSecrDivWrite.append(this.$settingsSecretWrite);\r\n\r\n        let $setSecrWriteCopyButton = jQuery('<button class=\"jo_button jo_copy_secret_button jo_active\">Kopieren</button>');\r\n        $setSecrDivWrite.append($setSecrWriteCopyButton);\r\n        $setSecrWriteCopyButton.on(\"pointerdown\", () => {copyTextToClipboard(this.$settingsSecretWrite.text())})\r\n\r\n        let $setSecrWriteButton = jQuery('<button class=\"jo_button jo_set_secret_button jo_active\">Ändern</button>');\r\n        $setSecrDivWrite.append($setSecrWriteButton);\r\n        $setSecrWriteButton.on(\"pointerdown\", () => {that.setSecret(false, true)})\r\n\r\n        $rightDiv.append(this.$userlistDiv = makeDiv(\"updateRepo-userlistDiv\"));\r\n\r\n        this.$userlistDiv.append(makeDiv(null, \"updateRepo-userlistheading\", \"Benutzer, die das Repository nutzen\", { \"grid-column\": 1 }))\r\n        this.$userlistDiv.append(makeDiv(null, \"updateRepo-userlistheading\", \"Schreibberechtigung\", { \"grid-column\": 2 }))\r\n\r\n        let $buttonDiv = makeDiv(\"updateRepo-buttonDiv\");\r\n\r\n        $buttonDiv.append(this.$saveButton = makeDiv(\"\", \"jo_synchro_button\", \"Änderungen speichern\", { \"background-color\": \"var(--updateButtonBackground)\", \"color\": \"var(--updateButtonColor)\" }));\r\n        this.$saveButton.on(\"click\", () => { that.saveButtonClicked() })\r\n        this.$saveButton.hide();\r\n\r\n        $rightDiv.append($buttonDiv);\r\n\r\n    }\r\n\r\n    setSecret(read: boolean, write: boolean){\r\n\r\n        this.main.networkManager.sendSetSecret(this.repositoryInfo.id, read, write, (response) => {\r\n            let praefix = this.repositoryInfo.id + \"T\";\r\n            this.$settingsSecretRead.text(praefix + response.secret_read);\r\n            this.$settingsSecretWrite.text(praefix + response.secret_write);\r\n        })\r\n\r\n    }\r\n\r\n    enableSaveButton() {\r\n        this.$saveButton.show();\r\n    }\r\n\r\n    show(repository_id: number) {\r\n\r\n        if (!this.guiReady) {\r\n            this.initGUI();\r\n        }\r\n\r\n        let $synchroDiv = jQuery('#updateRepo-div');\r\n        $synchroDiv.css('visibility', 'visible');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'hidden');\r\n\r\n        let user = this.main.user;\r\n        let is_student = !(user.is_teacher || user.is_admin || user.is_schooladmin);\r\n\r\n        this.publishedToItems = [\r\n            { value: 0, object: 0, caption: \"Keine Veröffentlichung (privates Repository)\" },\r\n            { value: 1, object: 1, caption: is_student ? \"Veröffentlicht für alle Schüler/innen der Klasse\" : \"Veröffentlicht für alle Schüler/innen der unterrichteten Klassen\" },\r\n            { value: 2, object: 2, caption: \"Veröffentlicht für alle Schüler/innen der Schule\" },\r\n        ];\r\n\r\n        setSelectItems(this.$repoPublishedTo, this.publishedToItems, 0);\r\n\r\n        this.$saveButton.show();\r\n\r\n        this.showRepositoryList();\r\n\r\n        let that = this;\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.hide();\r\n        });\r\n\r\n    }\r\n\r\n    deleteRepository(repInfo: RepositoryInfo) {\r\n\r\n        let that = this;\r\n        let request: DeleteRepositoryRequest = { repository_id: repInfo.id };\r\n        ajax('deleteRepository', request, () => {\r\n            that.showRepositoryList();\r\n            let workspaces = that.main.workspaceList.filter((ws) => {return ws.repository_id == repInfo.id});\r\n            for(let ws of workspaces){\r\n                ws.repository_id = null;\r\n                ws.panelElement.iconClass = \"workspace\";\r\n                ws.panelElement.$htmlFirstLine.removeClass(\"jo_repository\");\r\n                ws.panelElement.$htmlFirstLine.addClass(\"jo_workspace\");\r\n                ws.panelElement.$htmlFirstLine.find(\".jo_additionalButtonRepository\").empty();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    showRepositoryList() {\r\n        this.emptyRepositoryInfo();\r\n        let grlq: GetRepositoryListRequest = {\r\n            onlyOwnRepositories: true\r\n        }\r\n\r\n        this.$repoListDiv.empty();\r\n        let that = this;\r\n        ajax('getRepositoryList', grlq, (response: GetRepositoryListResponse) => {\r\n\r\n            let $firstDiv: JQuery<HTMLDivElement>;\r\n            let firstRepInfo: RepositoryInfo;\r\n\r\n            if(response.repositories.length == 0){\r\n                alert('Sie haben noch keine Repositories, und\\nkönnen daher keine verwalten.\\nTipp: Ein Repository können Sie durch Rechtsklick auf einen Workspace anlegen.');\r\n                that.exitButtonClicked();\r\n                return;\r\n            }\r\n\r\n            response.repositories.forEach(repInfo => {\r\n                let $div = makeDiv('', 'updateRepo-repoListItem');\r\n                let $namediv = makeDiv('', '', repInfo.name);\r\n                let $deleteDiv = jQuery('<div class=\"img_delete jo_button jo_active\" title=\"Repository löschen...\"></div>');\r\n                $div.append($namediv, $deleteDiv);\r\n                this.$repoListDiv.append($div);\r\n                $div.on('click', (e) => {\r\n                    that.selectRepository($div, repInfo);\r\n                })\r\n                $div.data('repoInfo', repInfo);\r\n                if (firstRepInfo == null) {\r\n                    firstRepInfo = repInfo;\r\n                    $firstDiv = $div;\r\n                }\r\n\r\n                $deleteDiv.on(\"click\", (ev) => {\r\n                    ev.preventDefault();\r\n                    openContextMenu([{\r\n                        caption: \"Abbrechen\",\r\n                        callback: () => { }\r\n                    }, {\r\n                        caption: \"Ich bin mir sicher: löschen!\",\r\n                        color: \"#ff6060\",\r\n                        callback: () => {\r\n                            that.deleteRepository(repInfo);\r\n                        }\r\n                    }], ev.pageX + 2, ev.pageY + 2);\r\n                    ev.stopPropagation();\r\n                });\r\n            });\r\n\r\n            if ($firstDiv != null) {\r\n                this.selectRepository($firstDiv, firstRepInfo);\r\n            }\r\n\r\n        }, (message) => {\r\n            console.log(message);\r\n            alert('Sie haben noch keine Repositories, und\\nkönnen daher keine verwalten.\\nTipp: Ein Repository können Sie durch Rechtsklick auf einen Workspace anlegen.');\r\n            that.exitButtonClicked();\r\n            return;\r\n        });\r\n    }\r\n\r\n    selectRepository($repoDiv: JQuery<HTMLDivElement>, repInfo: RepositoryInfo) {\r\n        this.repositoryInfo = repInfo;\r\n        \r\n        this.emptyRepositoryInfo();\r\n        if (this.$saveButton.is(\":visible\")) {\r\n            let selectedItem = this.$repoListDiv.find('.active').first();\r\n            let repoData: RepositoryInfo = <any>selectedItem.data('repoInfo');\r\n            if (repoData) {\r\n                alert(`Deine Änderungen am Repository \"${repoData.name}\" wurden nicht gespeichert.`);\r\n            }\r\n        }\r\n\r\n        this.$saveButton.hide();\r\n        this.$repoListDiv.find('.updateRepo-repoListItem').removeClass('active');\r\n        $repoDiv.addClass('active');\r\n        this.$repoName.val(repInfo.name);\r\n        this.$repoDescription.val(repInfo.description);\r\n        this.$repoPublishedTo.val(repInfo.published_to);\r\n        this.$settingsSecretRead.text(repInfo.secret_read == null ? \"--------\" : repInfo.id + \"T\" + repInfo.secret_read);\r\n        this.$settingsSecretWrite.text(repInfo.secret_write == null ? \"--------\" : repInfo.id + \"T\" + repInfo.secret_write);\r\n\r\n        this.$repoOwner.empty();\r\n        this.$userlistDiv.children().not('.updateRepo-userlistheading').remove();\r\n\r\n        let req: GetRepositoryUserListRequest = { repository_id: repInfo.id };\r\n        let that = this;\r\n\r\n        ajax('getRepositoryUserList', req, (response: GetRepositoryUserListResponse) => {\r\n\r\n            response.repositoryUserList.forEach(userData => {\r\n\r\n                let $userDiv = makeDiv(\"\", \"updateRepo-userDiv\", `${userData.firstName} ${userData.lastName} (${userData.username})`, { 'grid-column': 1 });\r\n\r\n                let $canWriteDiv = makeDiv(\"\", \"canWriteDiv\", \"\", { 'grid-column': 2 });\r\n                let $canWriteCheckBox = jQuery('<input type=\"checkbox\">');\r\n                $canWriteDiv.append($canWriteCheckBox);\r\n\r\n                //@ts-ignore\r\n                $canWriteCheckBox.attr('checked', userData.canWrite);\r\n                $canWriteCheckBox.data('user', userData);\r\n                $canWriteCheckBox.on(\"change\", () => { that.enableSaveButton() });\r\n\r\n                that.$userlistDiv.append($userDiv, $canWriteDiv);\r\n            });\r\n\r\n            that.$repoOwner.empty();\r\n            let selectedItems = response.repositoryUserList.map(userData => {\r\n                let se: SelectItem = {\r\n                    caption: `${userData.firstName} ${userData.lastName} (${userData.username})`,\r\n                    object: userData,\r\n                    value: userData.user_id + \"\"\r\n                }\r\n                return se;\r\n            });\r\n\r\n            if(!response.repositoryUserList.some(user => user.user_id == repInfo.owner_id)){\r\n                selectedItems.push({\r\n                    caption: `${repInfo.owner_name} (${repInfo.owner_username})`,\r\n                    object: {\r\n                        user_id: repInfo.owner_id,\r\n                        username: repInfo.owner_username,\r\n                        firstName: \"\",\r\n                        lastName: \"\",\r\n                        klasse: \"\",\r\n                        canWrite: true\r\n                    },\r\n                    value: repInfo.owner_id + \"\"\r\n                })\r\n            }\r\n\r\n            setSelectItems(that.$repoOwner, selectedItems, repInfo.owner_id + \"\")\r\n\r\n        });\r\n\r\n    }\r\n\r\n    emptyRepositoryInfo() {\r\n        this.$repoOwner.empty();\r\n        this.$repoName.val('');\r\n        this.$repoDescription.val('');\r\n        this.$userlistDiv.find('.updateRepo-userDiv').remove();\r\n        this.$userlistDiv.find('.canWriteDiv').remove();\r\n    }\r\n\r\n    hide() {\r\n        let $synchroDiv = jQuery('#updateRepo-div');\r\n        $synchroDiv.css('visibility', 'hidden');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'visible');\r\n    }\r\n\r\n    saveButtonClicked() {\r\n\r\n        let that = this;\r\n\r\n        let selectedItem = this.$repoListDiv.find('.active').first();\r\n        let repoData: RepositoryInfo = <any>selectedItem.data('repoInfo');\r\n\r\n        let name: string = <string>this.$repoName.val();\r\n        let owner: RepositoryUser = getSelectedObject(this.$repoOwner);\r\n        let published_to: number = getSelectedObject(this.$repoPublishedTo);\r\n\r\n        let updateRepositoryRequest: UpdateRepositoryRequest = {\r\n            owner_id: owner.user_id,\r\n            description: <string>this.$repoDescription.val(),\r\n            published_to: published_to,\r\n            repository_id: repoData.id,\r\n            name: name\r\n        };\r\n\r\n\r\n        // update user write access:\r\n\r\n        let writeAccessList: RepositoryUserWriteAccessData[] = [];\r\n\r\n        that.$userlistDiv.find('input').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            let user: RepositoryUser = <any>$element.data('user');\r\n            writeAccessList.push({\r\n                has_write_access: <any>jQuery(element).is(':checked'),\r\n                user_id: user.user_id\r\n            });\r\n        });\r\n\r\n        let request: UpdateRepositoryUserWriteAccessRequest = {\r\n            repository_id: repoData.id,\r\n            writeAccessList: writeAccessList\r\n        }\r\n\r\n        if (repoData.owner_id == owner.user_id || \r\n              confirm(\"Soll die Eigentümerschaft über das Repository \" + repoData.name + \" wirklich an \" + owner.firstName + \" \" + owner.lastName + \" übertragen werden?\")) {\r\n            ajax('updateRepositoryUserWriteAccess', request, (response: UpdateRepositoryUserWriteAccessResponse) => {\r\n\r\n\r\n                ajax(\"updateRepository\", updateRepositoryRequest, (response: UpdateRepositoryResponse) => {\r\n\r\n                    repoData.name = name;\r\n                    repoData.owner_id = owner.user_id;\r\n                    repoData.owner_name = owner.firstName + \" \" + owner.lastName;\r\n                    repoData.owner_username = owner.username;\r\n                    repoData.published_to = published_to;\r\n                    repoData.description = updateRepositoryRequest.description;\r\n\r\n                    alert('Die Änderungen wurden erfolgreich gespeichert.')\r\n                    that.$saveButton.hide();\r\n                    that.showRepositoryList();\r\n\r\n\r\n                }, (errorMessage: string) => {\r\n                    alert(\"Fehler: \" + errorMessage);\r\n                    that.exitButtonClicked();\r\n                });\r\n\r\n            }, (errorMessage: string) => {\r\n                alert(\"Fehler: \" + errorMessage);\r\n                that.exitButtonClicked();\r\n            }\r\n            );\r\n        } else {\r\n            alert(\"Der Speichervorgang wurde nicht durchgeführt.\");\r\n        }\r\n    }\r\n\r\n\r\n    exitButtonClicked() {\r\n        window.history.back();\r\n    }\r\n\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { makeDiv, SelectItem, setSelectItems, getSelectedObject } from \"../../tools/HtmlTools.js\";\r\nimport { RepositoryUser, GetRepositoryRequest, GetRepositoryResponse, GetRepositoryUserListRequest, GetRepositoryUserListResponse, UserData, GetRepositoryListRequest, GetRepositoryListResponse, RepositoryInfo, UpdateRepositoryRequest, UpdateRepositoryResponse, AttachWorkspaceToRepositoryRequest, WorkspaceData, AttachWorkspaceToRepositoryResponse } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { TeachersWithClassesMI } from \"../../administration/TeachersWithClasses.js\";\r\nimport { ProjectExplorer } from \"../../main/gui/ProjectExplorer.js\";\r\n\r\n\r\nexport class RepositoryCheckoutManager {\r\n\r\n    guiReady: boolean = false;\r\n\r\n    $mainHeading: JQuery<HTMLDivElement>;\r\n\r\n    $repoListDiv: JQuery<HTMLElement>;\r\n\r\n    $exitButton: JQuery<HTMLElement>;\r\n    $checkoutButton: JQuery<HTMLElement>;\r\n\r\n    $workspaceDropdown: JQuery<HTMLSelectElement>;\r\n    $filterButtonDiv: JQuery<HTMLElement>;\r\n    $filterInput: JQuery<HTMLInputElement>;\r\n\r\n    filterbuttonOptions = [\"alle\", \"private\", \"für die Klasse freigegebene\", \"für die Schule freigegebene\"];\r\n\r\n    workspace: Workspace;\r\n\r\n    repositories: RepositoryInfo[] = [];\r\n    $codeInput: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: Main) {\r\n    }\r\n\r\n    initGUI() {\r\n        this.guiReady = true;\r\n        let that = this;\r\n        let $checkoutDiv = jQuery('#checkoutRepo-div');\r\n\r\n        $checkoutDiv.append(this.$mainHeading = makeDiv('checkoutRepo-mainHeading', \"createUpdateRepo-mainHeading\", \"\"));\r\n        this.$mainHeading.append(makeDiv(\"\", \"\", \"Checkout Repository - Workspace mit Repository verbinden\"));\r\n        this.$mainHeading.append(this.$exitButton = makeDiv(\"\", \"jo_synchro_button\", \"Zurück zum Programmieren\", { \"background-color\": \"var(--speedcontrol-grip)\", \"color\": \"var(--fontColorLight)\", \"font-size\": \"10pt\" }));\r\n        this.$exitButton.on(\"click\", () => { that.exitButtonClicked() })\r\n\r\n\r\n        let $divBelow = makeDiv(\"checkoutRepo-divBelow\");\r\n        $checkoutDiv.append($divBelow);\r\n\r\n        let $chooseWorkspaceDiv = makeDiv(\"\", \"checkoutRepo-chooseDiv\");\r\n        $divBelow.append($chooseWorkspaceDiv);\r\n        $chooseWorkspaceDiv.append(makeDiv(\"\", \"checkoutRepo-minorHeading\", \"Diesen Worspace mit dem Repository verbinden:\"));\r\n        this.$workspaceDropdown = jQuery('<select></select>');\r\n        $chooseWorkspaceDiv.append(this.$workspaceDropdown);\r\n\r\n        let $codeDiv = makeDiv(\"\", \"checkoutRepo-chooseDiv\");\r\n        $divBelow.append($codeDiv);\r\n        $codeDiv.append(makeDiv(\"\", \"checkoutRepo-minorHeading\", \"Alternativ zur Auswahl unten Eingabe eines Repository-Codes:\"));\r\n        this.$codeInput = jQuery('<input type=\"text\"></input>');\r\n        $codeDiv.append(this.$codeInput);\r\n\r\n        this.$codeInput.on(\"input\", (e) => {\r\n            let text = that.$codeInput.val();\r\n            if(text == ''){\r\n                this.$repoListDiv.show();\r\n            } else {\r\n                this.$repoListDiv.hide();\r\n            }\r\n        });\r\n\r\n        let $publishedToFilterDiv = makeDiv(\"\", \"checkoutRepo-chooseDiv\");\r\n        $divBelow.append($publishedToFilterDiv);\r\n        $publishedToFilterDiv.append(makeDiv(\"\", \"checkoutRepo-minorHeading\", \"Diese Repositories anzeigen:\"));\r\n        this.$filterButtonDiv = jQuery('<fieldset></fieldset>');\r\n        $publishedToFilterDiv.append(this.$filterButtonDiv);\r\n\r\n        this.filterbuttonOptions.forEach((value, index) => {\r\n            let $radioButton = jQuery(`<input type=\"radio\" id=\"b${index}\" name=\"publishedFilter\" value=\"${index}\" ${index == 0 ? \"checked\" : \"\"}>`);\r\n            $radioButton.data('value', index);\r\n            $radioButton.on(\"change\", (e) => {\r\n                that.showRepositories();\r\n            })\r\n            this.$filterButtonDiv.append($radioButton);\r\n            this.$filterButtonDiv.append(jQuery(`<label for=\"b${index}\">${value}</label>`));\r\n        })\r\n\r\n        let $inputFilterDiv = makeDiv(\"\", \"checkoutRepo-chooseDiv\");\r\n        $divBelow.append($inputFilterDiv);\r\n        $inputFilterDiv.append(makeDiv(\"\", \"checkoutRepo-minorHeading\", \"Filter/Suche:\"));\r\n        this.$filterInput = jQuery('<input type=\"text\"></input>');\r\n        $inputFilterDiv.append(this.$filterInput);\r\n\r\n        this.$filterInput.on(\"input\", (e) => {\r\n            that.showRepositories();\r\n        });\r\n\r\n        $divBelow.append(makeDiv('', 'updateRepo-minorHeading', 'Repositories:', {'margin-bottom': '10px', 'margin-top': '20px'}));\r\n\r\n        this.$repoListDiv = makeDiv('checkoutRepo-repoListDiv', 'jo_scrollable');\r\n        $divBelow.append(this.$repoListDiv);\r\n\r\n        let $buttonDiv = makeDiv(\"updateRepo-buttonDiv\");\r\n\r\n        $buttonDiv.append(this.$checkoutButton = makeDiv(\"\", \"jo_synchro_button\", \"Checkout\", { \"background-color\": \"var(--updateButtonBackground)\", \"color\": \"var(--updateButtonColor)\" }));\r\n        this.$checkoutButton.on(\"click\", () => { that.checkoutButtonClicked() })\r\n\r\n        $divBelow.append($buttonDiv);\r\n\r\n    }\r\n\r\n    show(workspace: Workspace) {\r\n\r\n        if (!this.guiReady) {\r\n            this.initGUI();\r\n        }\r\n\r\n        let $checkoutDiv = jQuery('#checkoutRepo-div');\r\n        $checkoutDiv.css('visibility', 'visible');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'hidden');\r\n\r\n        let user = this.main.user;\r\n\r\n        let grlq: GetRepositoryListRequest = {\r\n            onlyOwnRepositories: false\r\n        }\r\n\r\n        this.$repoListDiv.empty();\r\n        let that = this;\r\n        ajax('getRepositoryList', grlq, (response: GetRepositoryListResponse) => {\r\n\r\n            this.repositories = response.repositories;\r\n\r\n            this.showRepositories();\r\n\r\n        });\r\n\r\n        // Init Workspace-Dropdown\r\n        this.$workspaceDropdown.empty();\r\n        setSelectItems(this.$workspaceDropdown, [{\r\n            caption: \"Neuen Workspace erstellen\",\r\n            object: null,\r\n            value: -1\r\n        }].concat(this.main.workspaceList.filter(ws => ws.repository_id == null && !ws.isFolder).map(ws => {\r\n            return {\r\n                caption: ws.name,\r\n                object: ws,\r\n                value: ws.id\r\n            }\r\n        }))\r\n        , -1);\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.hide();\r\n        });\r\n\r\n    }\r\n\r\n\r\n    showRepositories(){\r\n\r\n        let that = this;\r\n\r\n        this.$repoListDiv.find('.checkoutRepo-repoListItem').remove();\r\n\r\n        let published_to = this.$filterButtonDiv.find('input:checked').data('value') - 1;\r\n\r\n        let filteredRepositories: RepositoryInfo[] = published_to < 0 ? this.repositories :\r\n            this.repositories.filter(repoInfo => repoInfo.published_to == published_to);\r\n\r\n        let filterSearch: string = <string>this.$filterInput.val();\r\n        filterSearch = filterSearch.toLocaleLowerCase();\r\n\r\n        if(filterSearch != \"\"){\r\n            filteredRepositories = filteredRepositories.filter(\r\n                repInfo => [repInfo.owner_username , repInfo.owner_name , repInfo.name , repInfo.description].join(\" \").toLocaleLowerCase().indexOf(filterSearch) >= 0\r\n            )\r\n        }\r\n\r\n        filteredRepositories.forEach(repInfo => {\r\n            let $div = makeDiv('', 'checkoutRepo-repoListItem');\r\n            let $divLeft = makeDiv('', 'checkoutRepo-repoListItemLeft');\r\n            $div.append($divLeft);\r\n\r\n            $divLeft.append(makeDiv('', 'checkoutRepo-repoListName', repInfo.name));\r\n            $divLeft.append(makeDiv('', 'checkoutRepo-repoListOwner', repInfo.owner_name + \" (\" + repInfo.owner_username + \")\"));\r\n\r\n            let $divRight = makeDiv('', 'checkoutRepo-repoListItemRight', repInfo.description);\r\n            $div.append($divRight);\r\n\r\n            this.$repoListDiv.append($div);\r\n            $div.data('repoInfo', repInfo);\r\n            $div.on(\"click\", () => {\r\n                that.selectRepository($div, repInfo);\r\n            })\r\n        });\r\n\r\n        this.selectFirstRepository();\r\n\r\n    }\r\n\r\n    selectRepository($repoDiv: JQuery<HTMLDivElement>, repInfo: RepositoryInfo) {\r\n        this.$repoListDiv.find('.checkoutRepo-repoListItem').removeClass('active');\r\n        if($repoDiv != null){\r\n            $repoDiv.addClass('active');\r\n        }\r\n    }\r\n\r\n    selectFirstRepository(){\r\n        this.$repoListDiv.find('.checkoutRepo-repoListItem').removeClass('active');\r\n        this.$repoListDiv.find('.checkoutRepo-repoListItem').first().addClass('active');\r\n    }\r\n\r\n    hide() {\r\n        let $synchroDiv = jQuery('#checkoutRepo-div');\r\n        $synchroDiv.css('visibility', 'hidden');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'visible');\r\n    }\r\n\r\n    checkoutButtonClicked() {\r\n\r\n        let repositoryId: number = -1;\r\n        let secret: string = null;\r\n\r\n        let combinedSecret = <string>this.$codeInput.val();\r\n        if(combinedSecret != \"\"){\r\n            let tIndex = combinedSecret.indexOf('T');\r\n            if(tIndex < 0){\r\n                alert(\"Der Code muss den Buchstaben T enthalten.\");\r\n                return;\r\n            }\r\n            let number = Number.parseInt(combinedSecret.substring(0, tIndex));\r\n            if(number >= 0){\r\n                repositoryId = number;\r\n                secret = combinedSecret.substring(tIndex + 1);\r\n            } else {\r\n                alert (\"Im Code muss vor dem T eine Zahl stehen.\");\r\n                return;\r\n            }\r\n        } else {\r\n            let selectedItem = this.$repoListDiv.find('.active').first();\r\n            let repoData: RepositoryInfo = <any>selectedItem.data('repoInfo');\r\n            repositoryId = repoData.id;\r\n        }\r\n\r\n        let workspace: Workspace = getSelectedObject(this.$workspaceDropdown);\r\n\r\n        let request: AttachWorkspaceToRepositoryRequest = {\r\n            repository_id: repositoryId,\r\n            createNewWorkspace: workspace == null,\r\n            workspace_id: workspace == null ? null : workspace.id,\r\n            secret: secret\r\n        }\r\n\r\n        let that = this;\r\n        ajax('attachWorkspaceToRepository', request, (response: AttachWorkspaceToRepositoryResponse) => {\r\n\r\n            if(response.message != null){\r\n                alert(response.message);\r\n                return;\r\n            }\r\n\r\n            if(workspace == null && response.new_workspace != null){\r\n\r\n                let newWorkspace = that.main.networkManager.createNewWorkspaceFromWorkspaceData(response.new_workspace);\r\n                that.main.projectExplorer.workspaceListPanel.sortElements();\r\n                setTimeout(() => {\r\n                    that.main.projectExplorer.setWorkspaceActive(newWorkspace, true);                    \r\n                }, 400);\r\n\r\n                alert('Der neue Workspace ' + response.new_workspace.name + \" wurde erfolgreich angelegt.\");\r\n\r\n            } else {\r\n\r\n                workspace.repository_id = repositoryId;\r\n                let explorer = that.main.projectExplorer;\r\n                explorer.workspaceListPanel.setElementClass(workspace.panelElement, \"repository\");\r\n                alert(`Der Workspace ${workspace.name} wurde erfolgreich mit dem Repository verknüpft.`);\r\n\r\n            }\r\n\r\n            window.history.back();\r\n\r\n        });\r\n\r\n        // let updateRepositoryRequest: UpdateRepositoryRequest = {\r\n        //     owner_id: owner.user_id,\r\n        //     description: <string>this.$repoDescription.val(),\r\n        //     published_to: published_to,\r\n        //     repository_id: repoData.id\r\n        // };\r\n\r\n        // ajax(\"updateRepository\", updateRepositoryRequest, (response: UpdateRepositoryResponse) => {\r\n\r\n        //     //TODO: update user write access..\r\n\r\n\r\n        // });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    exitButtonClicked() {\r\n        this.hide();\r\n    }\r\n\r\n\r\n}","import { Main } from \"./Main.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\n\r\n\r\njQuery(function () {\r\n\r\n    let main = new Main();\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': 'lib/monaco-editor/dev/vs' } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        main.initEditor();\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.bottomDiv.initGUI();\r\n        main.checkStartupComplete();\r\n\r\n        if(main.repositoryOn){\r\n            main.synchronizationManager = new SynchronizationManager(main);\r\n            main.synchronizationManager.initGUI();\r\n            main.repositoryCreateManager = new RepositoryCreateManager(main);\r\n            main.repositoryCreateManager.initGUI();\r\n            main.repositoryUpdateManager = new RepositorySettingsManager(main);\r\n            main.repositoryUpdateManager.initGUI();\r\n            main.repositoryCheckoutManager = new RepositoryCheckoutManager(main);\r\n            main.repositoryCheckoutManager.initGUI();\r\n\r\n        }\r\n        // main.loadWorkspace();\r\n\r\n        \r\n    });\r\n    \r\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n    PIXI.Loader\r\n    .shared.add(\"spritesheet\", \"assets/graphics/spritesheet.json\")\r\n    .add(\"steve\", \"assets/graphics/robot/minecraft_steve/scene.gltf\")\r\n    .load(() => { });\r\n    \r\n    main.initGUI();\r\n\r\n});"],"names":["PerformanceCollector","static","url","startTime","pe","performanceData","find","count","sumTime","push","dt","Math","round","performance","now","performanceDataCount","lastTimeSent","request","data","ajax","successCallback","errorCallback","startsWith","showNetworkBusy","time","$","type","async","JSON","stringify","contentType","success","response","registerPerformanceEntry","error","message","indexOf","console","log","jqXHR","statusText","status","busy","jQuery","show","hide","NotifierClient","constructor","main","networkManager","unsentMessages","this","connect","state","window","location","protocol","host","connection","WebSocket","onerror","onError","onclose","event","onClose","onmessage","onMessage","onopen","command","token","sendIntern","setTimeout","forcedUpdateEvery","counterTillForcedUpdate","disconnect","send","exception","parse","undefined","sendUpdates","CacheManager","fetchTemplateFromCache","databaseId","callback","that","cacheAvailable","getCache","cache","match","databaseIdToCacheIdentifier","then","value","arrayBuffer","buffer","Uint8Array","catch","saveTemplateToCache","templateDump","put","Response","self","caches","open","NetworkManager","$updateTimerDiv","sqlIdeURL","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","forcedUpdatesInARow","secondsTillNextUpdate","errorHappened","initializeTimer","attr","interval","clearInterval","setInterval","user","doForceUpdate","$rect","css","sendDataToServer","initializeNotifierClient","notifierClient","sendIfNothingIsDirty","sendBeacon","is_testuser","projectExplorer","writeEditorTextToFile","classDiagram","rightDiv","userSettings","settings","dirty","userDataDirty","serialize","sendUpdateUserSettings","wdList","fdList","ws","workspaceList","saved","getWorkspaceData","m","moduleStore","getModules","file","text","getProgramTextFromMonacoModel","getFileData","workspacesWithoutFiles","files","owner_id","workspacesOwnerId","userId","id","language","currentWorkspaceId","currentWorkspace","getModifiedWorkspaces","length","navigator","workspaces","updateWorkspaces","filesToForceUpdate","updateFiles","sendCreateWorkspace","w","random","entity","sendCreateFile","sendDuplicateWorkspace","workspace_id","workspace","sendDistributeWorkspace","klasse","student_ids","class_id","sendSetSecret","repositoryId","read","write","repository_id","newSecretRead","newSecretWrite","alert","sendCreateRepository","publish_to","repoName","repoDescription","name","description","forEach","is_copy_of_id","repository_file_version","has_write_permission_to_repository","sendDeleteWorkspaceOrFile","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","Map","fileIdsSended","wd","set","newWorkspaceNames","remoteWorkspace","filter","createNewWorkspaceFromWorkspaceData","get","idToRemoteFileDataMap","fd","idToModuleMap","module","fileId","remoteFileData","fileListPanel","removeElement","removeModule","model","setValue","lastSavedVersionId","getAlternativeVersionId","version","remoteFile","createFile","join","workspaceListPanel","sortElements","filesFromServer","fileIdToLocalModuleMap","withSort","createNewWorkspace","path","isFolder","remoteWorkspaceSettings","setAdditionalLibraries","libraries","split","panelElement","externalElement","iconClass","addElement","renderSynchronizeButton","fileData","ae","f","identical_to_repository_version","getNewModule","putModule","fetchDatabaseAndToken","code","fetchDatabase","database","errormessage","cacheManager","based_on_template_id","pako","inflate","fetchTemplate","template","xhrFields","responseType","addDatabaseStatement","version_before","statements","statements_before","new_version","rollbackDatabaseStatement","current_version","TokenType","LexerState","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordClass","keywordThis","keywordSuper","keywordNew","keywordInterface","keywordEnum","keywordVoid","keywordAbstract","keywordPublic","keywordProtected","keywordPrivate","keywordTransient","keywordStatic","keywordExtends","keywordImplements","keywordWhile","keywordDo","keywordFor","keywordSwitch","keywordCase","keywordDefault","keywordIf","keywordThen","keywordElse","keywordReturn","keywordBreak","keywordContinue","keywordNull","keywordFinal","keywordInstanceof","keywordPrint","keywordPrintln","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","doubleMinus","doublePlus","lower","greater","lowerOrEqual","greaterOrEqual","equal","notEqual","assignment","plusAssignment","minusAssignment","multiplicationAssignment","divisionAssignment","moduloAssignment","ampersand","and","or","not","ANDAssigment","XORAssigment","ORAssigment","shiftLeftAssigment","shiftRightAssigment","shiftRightUnsignedAssigment","OR","XOR","tilde","shiftLeft","shiftRight","shiftRightUnsigned","ternaryOperator","semicolon","colon","ellipsis","comma","backslash","at","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","linefeed","keywordList","EscapeSequenceList","ColorLexer","hexColorRegExp","rgbColorRegExp","rgbaColorRegExp","getColorInfo","s","m1","Number","parseInt","red","green","blue","alpha","m2","parseFloat","m3","ColorHelper","color","toString","c","predefinedColors","substr","Visibility","booleanPrimitiveTypeCopy","endChar","Lexer","colorLexer","spaceTokens","correspondingBracket","lex","input","replace","tokenList","errorList","bracketError","bracketStack","pos","line","column","nonSpaceLastTokenType","colorInformation","colorIndices","tokens","errors","currentChar","charAt","nextChar","mainState","bracketOpen","pop","bracketClosed","setBracketError","processColorIndices","colorIndex","colorToken","previousToken","getLastNonSpaceToken","tt","nextTokens","getNextNonSpaceTokens","compareTokenTypes","range","startLineNumber","position","startColumn","endLineNumber","endColumn","colorIdentifier","colorValue","tokenTypeList","i","tokenIndex","d","foundToken","checkClosingBracket","openBracket","next","char","specialCharToken","pushToken","lexMultilineComment","lexEndofLineComment","isDigit","lexNumber","lexShiftLeft","lexShiftRight","lexCharacterConstant","lexTripleQuoteStringConstant","lexStringConstant","lexSpace","lexAnnotation","lexIdentifierOrKeyword","lexShiftRightUnsigned","t","pushError","errorLevel","level","a","base","charCode","charCodeAt","posStart","posEnd","substring","escapeChar","parseStringLiteralEscapeCharacter","StringLines","restOfLine","trim","currentStringLine","lastLine","indent","map","hex","String","fromCodePoint","lastCharWasNewline","sign","firstChar","radix","exponent","hasExponential","posExponentStart","exponentString","pow","isSpace","Type","onlyFirstPass","usagePositions","documentation","toTokenType","clearUsagePositions","PrimitiveType","initialValue","equals","getResultType","operation","secondOperandType","opTypeMap","operationTable","canCastTo","canCastToMap","getCastInformation","allowsNull","valueToString","Attribute","updateValue","isStatic","visibility","isFinal","parameterlist","returnType","invokeOrAST","isAbstract","isConstructor","super","isVirtual","reserveStackForLocalVariables","genericTypeMap","invoke","program","method","signature","p","parameters","hasGenericTypes","implements","myParameter","mParameter","hasEllipsis","isEllipsis","getParameterType","index","getParameter","getReturnType","getParameterCount","getParameterList","getSignatureWithReturnParameter","getCompletionLabel","label","getTypeIdentifier","arrayOfType","getCompletionSnippet","leftBracketAlreadyThere","snippet","isVoidReturnDelta","debugOutput","compute","firstOperand","secondOperand","castTo","computeId","tv","RuntimeObject","klass","intrinsicData","class","initializeAttributeValues","getValue","attributeIndex","av","attributes","Array","numberOfAttributesIncludingBaseClass","fill","att","v","object","baseClass","LabelManager","maxLabelIndex","labeledNodes","labelMap","jumpNodesToResolve","switchStatements","correctPositionsAfterInsert","insertPosition","insertedLength","ln","registerSwitchStatement","switchStatement","insertJumpNode","codeGenerator","labelIndex","statementList","node","stepFinished","pushStatements","registerJumpNode","markJumpDestination","offset","labeledNode","removeNode","n","newNode","registerJumpDestination","ntr","resolveNodes","noOp","jn","dest","destination","sw","dl","destinationLabels","destinationMap","constant","defaultDestination","typeVariables","isTypeVariable","typeVariablesReady","firstPassImplements","postConstructorCallbacks","methods","methodMap","attributeMap","public","staticClass","StaticClass","attributeInitializationProgram","labelManager","setupAttributeIndicesRecursive","numberOfAttributesInBaseClasses","getNonGenericClass","k","isGenericVariantFrom","getNonGenericIdentifier","implementsInterface","i1","getThisOrExtendedInterface","getImplementedInterface","i2","registerUsedSystemClasses","usedSystemClasses","isSystemModule","cd","getCompositeData","interf","cdMap","Interface","cda","multiples","ArrayType","getPostConstructorCallbacks","callbacks","concat","getCompletionItems","visibilityUpTo","identifierAndBracketAfterCursor","rangeToReplace","currentMethod","itemList","attribute","getAttributes","kind","monaco","languages","CompletionItemKind","Field","insertText","getMethods","pushSuperCompletionItem","filterText","title","arguments","Method","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","pushStaticInitializationPrograms","programStack","programPosition","textPosition","callbackAfterReturn","isCalledFromOutside","getMethodBySignature","setBaseClass","addMethod","addAttribute","nullType","firstOpClass","typeLeft","typeRight","Klass","upToVisibility","baseClassUptoVisibility","protected","found","upToVisibilityInBaseClass","a1","hasConstructor","hasParameterlessConstructor","hasConstructorWithParameters","getParameterlessConstructor","getConstructor","parameterTypes","classIdentifier","constructors","findSuitableMethods","getMethodsThatFitWithCasting","searchConstructor","methodList","staticMethods","getMethod","getAttribute","foundButInvisible","attributeNotFound","baseClassAttribute","min","shouldImplement","checkInheritance","dontInheritFrom","missingMethods","missingAbstractMethods","implementedMethods","missingInterfaceMethods","hierarchy","abstractMethods","isImplemented","hasAncestorOrIs","maxLength","private","clone","newKlass","Object","create","slice","classObject","detail","Color","visibilityUpToBaseClass","notFound","baseClassAttributeWithError","extends","if1","if2","newInterface","methodsWithSubInterfaces","visitedInterfaces","visitedMethods","todo","nonGenericCastable","type2","type1","suitableMethods","howManyCastingsMax","oneWithCorrectIdentifierFound","howManyCastings","suits","mParameterType","givenType","mParameterTypeEllispsis","j","typeString","getVisibilityUpTo","objectType","currentClassContext","UnboxableKlass","unboxableAs","includes","Error","ObjectClass","escapeHtml","unsafe","twoDez","z","formatAsJavadocComment","indentString","RegExp","stringWrap","nullToString","floatToString","val","isInteger","IntPrimitiveType","init","longPrimitiveType","intPrimitiveType","floatPrimitiveType","doublePrimitiveType","negation","booleanPrimitiveType","automatic","needsStatement","charPrimitiveType","fromCharCode","trunc","StringPrimitiveType","stringClass","declaration","localeCompare","caseFirst","sensitivity","toLowerCase","endsWith","toLocaleLowerCase","toLocaleUpperCase","lastIndexOf","pattern","regExp","strings","values","err","nullAllowedFor","typeAndNull","OperandIsNull","checkNotNull","voidPrimitiveType","longConstant","InterpreterState","convexhull","varType","IntegerType","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","v0","v1","LongType","FloatType","MAX_VALUE","MIN_VALUE","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","isNaN","Infinity","DoubleType","CharacterType","BooleanType","TokenTypeToDataTypeMap","lengthAttribute","referenceElement","array","destType","s1","SymbolTable","parentSymbolTable","positionFrom","positionTo","maxId","beginsNewStackframe","childSymbolTables","variableMap","classContext","parent","getImitation","imitation","st","maxStackPos","variable","stackPos","stackframeSize","getLocalVariableCompletionItems","completionItems","Snippet","Variable","findTableAtPosition","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","EnumRuntimeObject","en","enumValue","Enum","enumValueNodes","enumInfoList","identifierToInfoMap","indexToInfoMap","valueList","evn","ev","ordinal","ei","vi","getOrdinal","valueIdentifier","enumInfo","enumObject","CodeGenerator","initStackFrameNodes","startAdhocCompilation","symbolTable","heap","symbolTableStack","currentSymbolTable","oldStackframeSize","nextFreeRelativeStackPos","currentProgram","breakNodeStack","continueNodeStack","generateMain","start","lastToken","mainSymbolTable","generateClasses","lookForStaticVoidMain","mainProgram","classNode1","mainMethod","classNode","classDefinitionsAST","ct","resolvedType","pt","initCurrentProgram","callMainMethod","closeStackframe","generateClass","generateEnum","checkDoubleMethodDeclaration","enumNode","pushNewSymbolTable","scopeFrom","scopeTo","enumClass","initialization","initializeAttribute","lastStatement","copyReturnValueToStackframePos0","leaveThisObjectOnStack","methodNode","compileMethod","popSymbolTable","enumValueNode","constructorParameters","pushEnumValue","processEnumConstructorCall","commaPositions","rightBracketPosition","programEnd","constructorCallProgram","parameterNodes","typeNode","processNode","pushMethodCallPosition","isAssignable","srcType","castValue","newType","stackPosRelative","stackframeDelta","ellipsisParameterCount","makeEllipsisArray","parameterCount","arrayType","callMethod","isSuperCall","stackframeBegin","inheritanceError","getInheritanceQuickFix","annotation","cie","signatureMap","cieType","editsProvider","uri","resource","edit","getSuperconstructorCalls","nodes","superconstructorCallsFound","isFirstStatement","superConstructorCall","scopeNode","checkIfMethodIsVirtual","superconstructorCalls","superconstructorCallEnsured","quickFix","methodCall","severity","MarkerSeverity","baseClassConstructor","pushLocalVariableToStack","stackposOfVariable","actorClass","getType","returnIfDestroyed","generateStatements","withReturnStatement","rt","mo","typeStore","typeList","pushStaticAttribute","attributeIdentifier","pushAttribute","useThisObject","initializationType","ensureAutomaticCasting","attributeType","leaveValueOnStack","isAdhocCompilation","mainProgramAst","hasMainProgram","decreaseStackpointer","removeLastStatement","lastPosition","mainProgramEnd","pauseAfterProgramEnd","typeFrom","typeTo","nodeFrom","nullTypeForbidden","checkIfAssignmentInstedOfEqual","ensureAutomaticToString","codepos","textposition","automaticToString","toStringMethod","insertOrPushStatements","conditionType","binaryOp","operator","endPosition","processStatementsInsideBlock","lastNode","assign","popCount","insertStatements","isArray","splice","statement","deleteStepFinishedFlagOnStepBefore","jumpAlways","lst","beginNewStackframe","initStackFrameNode","initStackframe","reserveForLocalVariables","declarationError","usedBeforeInitialization","initStackframeNode","jumpIfTrue","jumpIfFalse","jumpIfFalseAndLeaveOnStack","jumpIfTrueAndLeaveOnStack","openBreakScope","openContinueScope","pushBreakNode","breakNode","pushContinueNode","continueNode","closeBreakScope","breakTargetLabel","lm","breakNodes","bn","closeContinueScope","continueTargetLabel","continueNodes","breakOccured","isLeftSideOfAssignment","processBinaryOp","unaryOp","processUnaryOp","pushConstant","stackType","resolveIdentifier","initialized","selectArrayElement","incrementDecrementBefore","incrementDecrementAfter","incrementDecrementBeforeOrAfter","constructorCall","superconstructorCall","pushThisOrSuper","newObject","processWhile","processDo","processFor","forLoopOverCollection","processForLoopOverCollection","processIf","processSwitch","processReturn","localVariableDeclaration","arrayInitialization","processArrayLiteral","newArray","processNewArray","processPrint","processManualCast","termInsideBrackets","pushTypePosition","typeFrom1","whatToCast","castToType","pushCastToStatement","checkCast","print","println","withColor","empty","dimension","ec","elementCount","pushEmptyArray","bes","beginArray","ain","sType","targetType","addToArray","numberOfElementsToAdd","dontWarnWhenNoInitialization","variableType","declareVariableOnHeap","pushUsagePosition","heapVariableDeclaration","pushOnTopOfStackForInitialization","initType","initializer","term","condition","isString","isEnum","switchType","endLabel","caseNodes","caseNode","caseTerm","info","ls","endOfIf","withReturnStatementElse","beginElse","withReturnStatementIf","statementsIfTrue","statementsIfFalse","statementsBefore","labelBeforeCondition","labelAfterForLoop","continueLabelIndex","statementsAfter","stackPosForCollection","collection","collectionElementType","collectionType","popAndStoreIntoVariable","noCastingNeeded","variableIdentifier","variablePosition","variableStackPos","stackPosOfCounterVariableOrIterator","extendedForLoopInit","stackPosOfCollection","stackPosOfElement","typeOfElement","stackPosOfCounter","lastStatementBeforeCasting","jumpNode","extendedForLoopCheckCounterAndGetElement","oldStatementCount","conditionBeginLabel","afterWhileStatementLabel","pc","insertNoOp","statementsBeginLabel","classType","newStatement","subsequentConstructorCall","positionsAfterParameterStatements","allStatements","constructorOperands","staticClassContext","castingStatements","processPostConstructorCallbacks","ot","attributeWithError","staticAttributeWithError","pushArrayLength","element","addIdentifierPosition","isSuper","methodContext","isSuperConstructorCall","superclassType","operands","errorInOperands","operand","incrementDecrementBy","indexType","positionList","findLocalVariable","pushFromHeapToStack","findAttribute","cc","scc","klassModule","pushStaticClassObject","staticAttribute","objectNode","thisClass","posBeforeParameterEvaluation","visible","isSystemMethod","callInputMethod","setPauseDuration","pause","constantType","dataType","isAssignment","assignmentOperators","processTernaryOperator","leftType","programPosAfterLeftOpoerand","lazyEvaluationDest","rightType","convertedLeftType","resultType","unboxableLeft","unboxableRight","leftTypes","rightTypes","lt","booleanOperators","betterOperators","opIndex","variantFalseLabel","firstType","secondType","Parser","isInConsoleMode","lookahead","endToken","tokensNotAfterCasting","typeNodes","initializeLookahead","astNodes","parseMain","mainProgramAST","classDefinitionAST","token1","lastComment","commentBefore","cct","nextToken","expect","skip","invokeSemicolonAngel","isOperatorOrDot","getSemicolonAngel","register","op","operatorPrecedence","isEnd","comesToken","getCurrentPosition","getEndOfCurrentToken","classDefinitions","oldPos","BeforeClassDefinitionTokens","parseClassDefinition","parseStatement","checkIfStatementHasNoEffekt","expectSemicolon","retStatements","ret","parseVariableDeclarationOrTerm","parseWhile","parseFor","parseDo","parseIf","parseReturn","parsePrint","parseSwitch","position1","parseTerm","semicolonPositions","parseForLoopOverCollection","parseType","variableIdentifierPosition","mcp","parseMethodCallParameters","paramenters","switchTerm","switchNode","defaultAlreadyThere","casePosition","isDefault","parseUnary","switchCaseNode","elseStatements","comesGenericType","vd","parseVariableDeclaration","parseTermBinary","precedence","left","parsePlusPlusMinusMinus","operators","first","right","opData","wrong","correctOp","position2","constantFolding","isConstant","pcLeft","pcRight","result","considerIntDivisionWarning","leftConstant","rightConstant","isIntegerType","floor","parseDotOrArrayChains","bracketOrCasting","tt1","pcTerm","typeTerm","parseNew","isStringConstant","identifier1","identifierPosition","genericParameterTypes","typenode","arrayDimension","parseArrayLiteral","newDimension","al","parameter","positionEnd","modifiers","collectModifiers","ClassTokens","typeParameters","parseTypeParameterDefinition","extendsImplements","parseExtendsImplements","parseEnum","methodsAndAttributes","parseClassBody","identifierMap","tp","typeParameter","parseTypeParameterBounds","im","parseEnumValues","className","parseMethodDeclarationParameters","methodDeclaration","isTransient","attributeDeclaration","parameterDeclaration","parameterType","isInterface","sextends","simplements","done","asError","TokenTypeToVisibilityMap","forwardToInsideClass","VisibilityTokens","JsonTool","primitiveTypes","toJson","objectToIndexMap","nextIndex","json","toJsonObj","rto","objectToJsonObj","serializedObject","serializedAttributes","fromJson","jsonString","interpreter","indexToObjectMap","valuesToResolve","obj","fromJsonObj","vtr","objectFromJsonObj","klass1","instantiateObjectImmediately","TypeResolver","moduleToTypeParameterListMap","genericTypes","genericTypesInClassDefinitions","typeParameterList","classes","interfaces","enums","unresolvedTypes","resolveTypesInModules","setupClassesAndInterfaces","unresolvedGenericTypesInClasses","resolveTypeVariables","resolveUnresolvedTypes","resolveGenericTypes","resolveExtendsImplements","unresolvedGenericTypes","setupMethodsAndAttributes","checkDoubleIdentifierDefinition","checkGenericTypesAgainsTypeGuards","setupAttributeIndices","cl","tn","ci","actualType","typeGuard","genericParameterType","ifList","tgInterface","adjustMethodsAndAttributesToTypeParameters","WATCHDOG","classOrInterface","watchdog","methodListAltered","newMethodList","newMethod","getAdjustedMethod","altered","newAttributes","newAttributeMap","attributesAltered","newAttribute","getAdjustedAttribute","ext","nt","getAdjustedType","nrt","parameterAltered","newParameters","pNew","adjustMethodsAndAttributesRecursive","newTypeVariables","newClassInterface","todoList","resolveGenericType","genericParameterTypesResolved","typeVariablesOldToNewMap","oldTypeVariable","newTypeVariable","newCi","propagateTypeParameterToBaseClassesAndImplementedInterfaces","newClass","tv1","baseKlass","impl","identifierModuleMap","otherModule","otherType","baseModule","getBaseModule","tpn","lastPass","dependsOnModules","ut","utNew","resolveType","addFromJsonMethod","getInterpreter","addToJsonMethod","classesOrEnums","cn","mn","setupMethod","ic","typesOK","par","definition","pl","typeModule","getArrayType","registerGenericType","tg","typKlasse","toUpperCase","iNode","iType","eType","cdn","addType","registerTypeVariables","e","ready","extType","resolveTypeVariable","typeParameterKlass","tp1","isInClassDefinition","ListIteratorImplClass","listHelper","IteratorHelper","typeE","tvE","iteratorInterface","hasNext","remove","nextPos","objectArray","throwException","valueArray","ArrayListClass","collectionInterface","typeA","tvA","listInterface","iteratorType","o","ah","ListHelper","getIterator","r","add","addAll","clear","contains","removeObject","isEmpty","size","to_String","runtimeObject","allElementsPrimitive","toStringParameters","methodWasInjected","runTimer","getIteratorMethod","iteratorWithError","execute","iterator","nextMethod","hasNextMethod","iteratorAsValue","objWithError","executeImmediatelyInNewStackframe","peek","peek_last_or_null","peek_first_or_null","removeLast_or_error","addLast","addFirst","removeFirstOccurrence","peek_or_null","poll_or_null","removeFirst_or_error","CollectionClass","iterableInterface","IterableClass","IteratorClass","ListClass","StackClass","vectorType","VectorClass","SetClass","SetIteratorImplClass","MapHelper","SetIteratorHelper","SetHelper","key","adAll","addToSet","delete","HashSetClass","setInterface","mh","LinkedHashSetClass","QueueClass","DequeClass","QueueInterface","LinkedListClass","dequeInterface","ConsoleClass","getBottomDiv","$consoleTab","append","PrintManager","$runDiv","lastSpan","maxLines","$lines","newLines","printCommands","currentLinelength","beginOfLineState","$outputDiv","lastPrinting","doPrinting","scrollTop","scrollHeight","getGraphicsDiv","showProgramEnd","$programEndDiv","addClass","removeClass","nl","newLine","$lastSpan","$lastDiv","$input","inputManager","insertBefore","linesToDelete","$linesToDelete","$line","tList","InputManager","readInput","defaultValue","printManager","dvt","on","onSubmit","focus","valueAndError","detach","scrollIntoView","off","Helper","targetElement","direction","$helper","top","bottom","to","b","delta","width","height","html","$button","stopPropagation","close","fadeIn","fadeOut","mainBase","$element","Main","helperHistory","flag","controlButtons","speedControl","$grip","$buttonStepOver","bottomDiv","openHelper","KeyboardTool","pressedKeys","keyPressedCallbacks","keyUpCallbacks","keyDownCallbacks","registerListeners","unregisterListeners","shiftKey","ctrlKey","altKey","kpc","isEmbedded","running","getMonacoEditor","hasTextFocus","preventDefault","isPressed","unsubscribeAllListeners","GamepadTool","gamepads","addEventListener","gamepad","buttons","axes","isGamepadButtonPressed","gamepadIndex","buttonIndex","gp","getGamepads","button","pressed","getGamepadAxisValue","axisIndex","isGamepadConnected","Interpreter","debugger_","moduleStoreVersion","stepsPerSecond","maxStepsPerSecond","timerDelayMs","stack","stackframes","timerStopped","timerExtern","steps","timeNetto","timeWhenProgramStarted","stepOverNestingLevel","leaveLine","additionalStepFinishedFlag","showProgrampointerUptoStepsPerSecond","databaseConnectionHelpers","webSocketsToCloseAfterProgramHalt","actions","buttonActiveMatrix","timerEvents","lastStepTime","lastTimeBetweenEvents","lastPrintedModule","runningStates","paused","waitingForInput","keyboardTool","gamepadTool","debugger","setInterpreter","timerId","timerFunction","req","initGUI","am","getActionManager","startFunction","pauseFunction","registerAction","isActive","$buttonStart","$buttonPause","stop","$buttonStop","oneStep","$buttonStepInto","stepOut","$buttonStepOut","$buttonRestart","setState","not_initialized","getStartableModule","cem","getCurrentlyEditedModule","currentlyEditedModuleIsClassOnly","currentlyEditedModule","findModuleByFile","hasErrors","isStartable","mainModule","lastMainModule","getBreakpointPositionsFromEditor","clearExceptions","getCompiler","atLeastOneModuleIsStartable","copyExecutableModuleStoreToInterpreter","detachValues","newMainModule","currentProgramPosition","currentStackframe","initializeEnums","initializeClasses","popProgram","currentCallbackAfterReturn","currentIsCalledFromOutside","stackElementsToPushBeforeFirstExecuting","se","staticValueList","valueInitializationProgram","hasAttributeInitializationProgram","initializeEnumValue","clearErrors","callbackAfterExecution","pauseUntil","resetRuntime","hideProgrampointerPosition","getTimerClass","startTimer","getCurrentWorkspace","getModule","forceRun","maxWorkloadFactor","t0","timeBetweenSteps","n_stepsPerTimerGoal","nextStep","showProgramPointerAndVariables","comesStatement","$errorDiv","consolePresent","config","withBottomPanel","withConsole","positionString","currentStatement","showError","pushCurrentProgram","errorLine","writeConsoleEntry","showTab","hideProgramPointerPosition","worldHelper","destroyWorld","processingHelper","gngEreignisbehandlungHelper","detachEvents","restart","spriteAnimations","stopTimer","cacheAsBitmap","ch","showProgramPointerPosition","showData","programPrinter","printModuleToBottomDiv","showNode","stepInto","return","oldStepOverNestingLevel","executeNode","breakpoint","stackTop","relPos","casted","object1","value1","resultValue","oldValue","parameterBegin2","ellipsisArray","parameterBegin","parameters1","returnValue","method1","parameterBegin1","pauseForInput","resumeAfterInput","aip","pcc","counter","list","list1","shapes","hasActors","hasAktionsEmpfaenger","timerEntries","showHelper","counts","makeEmptyArray","tvo","switchValue","shapeRuntimeObject","duration","oldState","popPriorValue","closeAllWebsockets","actionId","setActive","clearActorLists","disable","enable","socket","stackElements","isActor","evaluate","stacksizeBefore","oldInterpreterState","stepCount","valuesToPushBeforeExecuting","oldProgramPosition","numberOfStackframesBefore","registerDatabaseConnection","FilledShapeDefaults","defaultFillColor","defaultFillAlpha","defaultBorderColor","defaultBorderAlpha","defaultBorderWidth","defaultVisibility","parseColorToOpenGL","WorldClass","groupType","shapeType","mouseListenerType","breite","gh","getWorldHelper","setBackgroundColor","x","y","wh","matrix","PIXI","Matrix","copyFrom","stage","projectionTransform","identity","translate","prepend","computeCurrentWorldBounds","shapesNotAffectedByWorldTransforms","shape","move","frameWidth","xMin","xMax","yMin","yMax","shapeHelper","moveX","moveY","shapeX","getCenterX","shapeY","getCenterY","outsideRight","currentLeft","currentWidth","outsideLeft","outsideBottom","currentTop","currentHeight","outsideTop","angle","angleRad","PI","rotate","factor","scale","initialWidth","initialHeight","group","defaultGroup","getDefaultGroup","listener","addMouseListener","cursor","setCursor","worldObject","ratio","$containerOuter","getRightDiv","adjustWidthToWorld","WorldHelper","WorldContainer","Container","sourceFrame","destinationFrame","render","renderer","projection","projectionMatrix","transform","renderTexture","bind","current","batch","flush","world","actActors","keyPressedActors","keyUpActors","keyDownActors","actorHelpersToDestroy","mouseListenerShapes","mouseListeners","actorsFinished","summedDelta","scaledTextures","actorsNotFinished","ticks","deltaSum","SCALE_MODE","SCALE_MODES","NEAREST","TARGET_FPMS","globalScale","$graphicsDiv","$coordinateDiv","$rightDiv","$jo_tabs","parents","maxWidth","maxHeight","$containerInner","oncontextmenu","pixiApp","app","resize","backgroundColor","Application","antialias","tickerFunction","tick","Ticker","shared","elapsedMS","ticker","maxFPS","Rectangle","addChild","view","kpa","runActorWhenKeyEvent","listenerType","eventType","PointerEvent","offsetX","offsetY","Point","applyInverse","onMouseEvent","types","invokeMouseListener","gngEreignisbehandlung","handleMouseClickedEvent","mousePointer","p1","p2","abs","setAllHitpolygonsDirty","setHitPolygonDirty","spriteHelper","actorData","actorHelper","timerPaused","isDestroyed","runActor","actorList","displayObject","destroy","hasRobot","robotWorldHelper","scaleMin","sqrt","brt","BaseRenderTexture","scaleMode","LINEAR","RenderTexture","children","removeChildren","sprite","Sprite","localTransform","onChange","initDefaultValues","containsPoint","trackMouseMove","invokeShapeMouseListener","mouseLastSeenInsideObject","reactToMouseEventsWhenInvisible","findIndex","mls","listenerTypes","sd","Actor","methodSignatures","actorListIdentifier","ms","ActorHelper","isKeyDown","setTimerPaused","registerWorldType","testdestroyed","AlignmentClass","streckeSchneidetStrecke","p0","p3","schnittpunkt","a2","b1","b2","c1","c2","det","schneidet","abstand","dx","dy","punkte","punkt","abstandPunktZuStrecke","inside","vertexCount","schnittpunkteKreisStrecke","schnittpunkte","x1","y1","x2","y2","determiante","t1","t2","q","lambda","fx","fy","s2","abstandPunktZuGerade","l","punkte1","punkte2","istGeschlossen1","istGeschlossen2","endIndex1","endIndex2","minAbstand","minIndex","p1a","p1b","ShapeClass","directionType","vector2Class","helper","sh","angleInDeg","centerX","centerY","mirrorXY","isOutsideView","sh1","collidesWith","collidesWithAnyShape","keepColliding","moveBackFrom","directionRelativeTo","defineCenter","defineCenterRelative","angleDeg","setDefaultVisibility","setVisible","setStatic","tint","react","directionRad","distance","forward","getCopy","bringToFront","sendToBack","getHitPolygon","ShapeHelper","hitPolygonInitial","hitPolygonTransformed","hitPolygonDirty","scaleFactor","lastMoveDx","lastMoveDy","centerXInitial","centerYInitial","updateTransform","bringOnePlaneFurtherToFront","container","highestIndex","getChildIndex","setChildIndex","bringOnePlaneFurtherToBack","belongsToGroup","addToDefaultGroupAndSetDefaultVisibility","transformHitPolygon","bb","getBounds","bb1","dx1","dx2","dy1","dy2","enuminfo","pairs","max","lmdx","lmdy","parameterMax","currentParameter","newParameter","parameterMin","isColliding","np","worldTransform","apply","tx","ty","bounds","cos","sin","cX","cY","scaleX","scaleY","index1","getCollidingShapes","groupHelper","collidingShapes","ro","getParentGroup","BitmapClass","colorType","pointsX","pointsY","rh","BitmapHelperNew","getFarbeAsObject","setzeFarbe","istFarbe","fillAll","getCopyOrClone","anzahlX","anzahlY","bitmapToCopy","isBigEndian","uInt32","Uint32Array","uInt8","initGraphics","bh","u8Array","texture","bufferResource","BufferResource","bt","BaseTexture","Texture","uploadData","baseTexture","update","intColorToHexRGB","setzeFarbeRGBA","g","getFarbe","getAlpha","FilledShapeClass","fillColor","borderColor","borderWidth","setAlpha","fillAlpha","setFillColor","setDefaultBorder","setDefaultFillColor","setBorderColor","setBorderWidth","rgbaToHex","rgb","FilledShapeHelper","borderAlpha","fsh","CircleClass","mx","my","CircleHelper","setRadius","deltaAlpha","Graphics","beginFill","lineStyle","drawCircle","closePath","endFill","radius1","radius2","d1","d2","SectorClass","startAngle","endAngle","SectorHelper","drawRadii","ceil","startAngleRad","endAngleRad","moveTo","arc","lineTo","atan2","towPI","normalizedStartAngle","normalizedEndAngle","ArcClass","ri","ra","ArcHelper","beginHole","endHole","r2","ColorClass","colorName","intColor","intColorToRGB","cid","o1","h","hslToRgb","EllipseClass","rx","ry","EllipseHelper","setRadiusX","setRadiusY","drawEllipse","CollisionPairClass","GroupClass","collisionPairType","collisionPairArrayType","GroupHelper","getElement","removeElementAt","shapeArrayType","getCollidingObjects","group2","maxOneCollisionPerShape","groupHelper2","getCollidingObjects2","removeAllChidren","destroyChildren","doCache","oldIndex","groupHelperCopy","roCopy","hasCircularReference","inverse","invert","xSum","ySum","deregister","removeChild","inverseStageTransform","hasOverlappingBoundingBoxWith","collisionPairs","alreadyCollidedHelpers2","shape1","shapeHelper1","shape2","shapeHelper2","shapeToAdd","child","KeyClass","makeHull","points","newPoints","sort","POINT_COMPARATOR","makeHullPresorted","upperHull","lowerHull","PolygonClass","shapeClass","closeAndFill","pointsNumber","ph","PolygonHelper","extractPoints","addPoint","setPoints","insertPoint","movePointTo","isClosed","points1","setPoint","coordinates","setAllPointsUntransformed","RectangleClass","RectangleHelper","RepeatTypeClass","RoundedRectangleClass","radius","RoundedRectangleHelper","addCenterCircle","midx","midy","angleStart","dw","drawRoundedRect","ScaleModeClass","SoundTools","praefix","javaOnlineDir","isInitialized","sound","sounds","player","Howl","src","preload","soundMap","play","SoundKlass","HitPolygonStore","polygon","polygonStore","getPolygon","pixels","plugins","extract","probes","addPointsOnLine","additionalPointsPerHalfBorder","mid","probe","end","isTransparent","SpriteClass","scaleModeClass","spriteLibraryEntry","SpriteHelper","setTexture","textureName","indexArray","repeatType","imagesPerSecond","indices","playAnimation","fromIndex","toIndex","stopAnimation","pauseAnimation","resumeAnimation","getWidth","getHeight","makeTiling","isTileSprite","TileHelper","copyFromOtherShape","animationIndices","animationRuns","imagesPerMillisecond","animationTime","animationPaused","copyBitmapFromShape","tileSprite","TilingSprite","mipmap","MIPMAP_MODES","OFF","setParent","setTileOffset","tilePosition","dob","sheet","Loader","resources","spritesheet","nameWithIndex","textures","dynamicTexture1","getPolygonForTexture","setInvisible","spriteHelperList","deltaTime","image","period2","numberOfPeriodsDone","timeIntoPeriod","period","TileClass","tileScale","SpriteLibraryClass","SpriteLibrary","sle","TextClass","fontsize","TextHelper","fontFamily","setFontsize","alignment","setAlignment","setText","isBold","isItalic","setStyle","textStyle","TextStyle","fontSize","fontStyle","fontWeight","stroke","strokeThickness","dropShadow","wordWrap","align","lineJoin","Text","anchor","style","tm","TextMetrics","measureText","InputClass","GamepadClass","MathClass","E","exp","log10","tan","asin","acos","atan","MathToolsClass","vectorArrayClass","xIndex","yIndex","returnArray","pVector","ps","SystemClass","deltaTimeMillis","printStream","Date","PrintStreamClass","SystemToolsClass","speed","setSpeedInStepsPerSecond","getSpeedInStepsPerSecond","KeyListener","Runnable","TimerClass","timerRunning","timerStarted","tl","timerEntry","timerListener","lastTimeFired","processTimerEntries","timerentry","runEntry","MapClass","typeK","tvK","typeV","tvV","keyArray","old","containsKey","containsValue","HashMapClass","TriangleClass","LocalDateTimeClass","dayOfWeekType","MonthType","date","year","month","dayOfMonth","hour","minute","second","days","oldDate","newDate","getTime","oldMs","newMs","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","td","dow","getDay","monthIndex","DayOfWeekEnum","MonthEnum","LineClass","Vector2Class","alphaDeg","oRet","MouseListenerInterface","MouseAdapterClass","WebSocketClientClass","messageType","setUserData","getUserData","getterList","getter","help","WebSocketClientHelper","webSocketHelper","rufname","familienname","username","nickname","keyValueStore","connected","sendToClient","WebSocketClass","webSocketClientType","systemClassType","WebSocketHelper","sessionCode","nickName","sendToAll","findClientsFromCount","nicknames","nnv","findClientsFromNicknames","clientList","client","idToClientMap","isOpen","onOpenMethod","onCloseMethod","onMessageMethod","onClientConnectedMethod","onClientDisconnectedMethod","onClientsFoundMethod","onOpen","runMethod","clientId","recipient_id","wtr","clientRuntimeObject","wch","user_id","clientHelper","from_client_id","clientHelper1","disconnecting_client_id","currentTimeMills","client_id","onClientsFound","own_index","otherClients","clients","otherClient","arrayValue","ProcessingClass","p5o","getProcessingHelper","loop","noLoop","createCanvas","addProcessingMethod","parameterNames","pList","processingObject","ProcessingHelper","loopStopped","onSizeChanged","$div","setupProcessing","drawMethodPending","p5","setup","P2D","afterFinishingBoth","draw","mousePressed","mouseReleased","mouseClicked","mouseDragged","mouseEntered","mouseExited","mouseMoved","keyPressed","keyReleased","methodIdentifier","TurtleClass","TurtleHelper","showTurtle","turn","penIsDown","setShowTurtle","xStart","yStart","lineElements","turtleAngleDeg","isFilled","initialHitPolygonDirty","turtleSize","lastLineWidth","lastColor","lastAlpha","lastTurtleAngleDeg","renderJobPresent","lineWidth","calculateCenter","lineGraphic","turtle","initTurtle","moveTurtleTo","lastLineElement","angleInDegrees","cx","cy","turtleAngleRad","newLineElement","newTurtleX","newTurtleY","newAngleDeg","vx","vy","vxp","vyp","lengthForward","lengthBackward","lengthBackwardP","firstPoint","le","setupInitialHitPolygon","steckenzugSchneidetStreckenzug","touchesAtLeastOneFigure","touchesColor","farbe","touchesShape","GNGEreignisbehandlung","getHelper","registerEvents","dauer","taktdauer","GNGEreignisbehandlungHelper","bindEvents","aktionsempfaengerTypes","methodSignatureList","methodToAktionsempfaengerTypeMap","keyToKeyCodeMap","aktionsempfaengerMap","remainingTime","unregisterEvents","onKeyDownMethod","invokeMethod","keyCode","unshift","liste","GNGZeichenfensterClass","aktionsempfaengerType","aktionsempfaenger","GNGRechteckClass","GNGFarben","GNGBaseFigurClass","moveAnchor","grad","winkel","sichtbarkeit","GNGAktionsempfaengerInterface","GNGDreieckClass","GNGKreisClass","GNGTurtleClass","farbeString","objectShapeHelper","GNGTextClass","GNGFigurClass","polygonClass","circleClass","ellipseClass","rectangleClass","FigurHelper","center","drawInitialTriangle","groesse","newFactor","part","partHelper","x3","y3","triangle","rectangleHelper","ellipseHelper","triangleClass","th","gngEreignisbehandlungsHelper","RandomClass","bound","from","DirectionClass","Patcher","modified","patch","patches","new","patchedText","KeyEvent","keys","Formatter","autoFormatTriggerCharacters","displayName","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","provideOnTypeFormattingEdits","options","edits","format","Promise","resolve","deleteOverlappingRanges","e1","provideDocumentFormattingEdits","editor","EndOfLinePreference","LF","tokenlist","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","deleteSpaces","replaceBetween","insertSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","nextNonSpaceToken","getNextNonSpaceToken","lastTokenIsOperator","nextTokenIsOperator","beginNextLine","token2","currentIndentation","il","correctIndentation","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","currentIndex","numberOfSpaces","Boxes3d","material","Pixi3d","StandardMaterial","Mesh3D","createCube3dMesh","MeshGeometry3D","positions","Float32Array","normals","uvs","tangents","createHalfheightCube3dMesh","repeatTextureU","repeatTextureV","createPlane3dMesh","getSpritesheetTexture","copy","wrapMode","WRAP_MODES","REPEAT","StandardMaterialTexture","smt","TextureTransform","frame","RobotMarker","geometry","RobotBrick","RobotCubeFactory","camera","farben","farbeToColorInfoMap","farbeToMarkerMaterialMap","farbeToBrickMaterialMap","planeMaterial","light1","Light","LightType","ambient","intensity","light2","directional","rotationQuaternion","setEulerAngles","lightingEnvironment","LightingEnvironment","lights","grassBrickMaterial","initMaterial","baseColorTexture","cloudMaterial","baseColor","groundPlaneMaterial","colorInfo","brickMaterial","getBrick","getGrassBrick","getGrassPlane","mesh","makePlane","widthX","widthZ","spriteOrColor","getPlaneMaterial","getMarker","marker","getSidePlanes","worldX","worldY","sideSprite","deep","planes","sideMaterial","mesh1","mesh2","mesh3","mesh4","getHorizontalPlanes","topSprite","topMaterial","mesh5","mesh6","mesh7","mesh8","makeClouds","originX","originZ","z1","createCube3d","scaleZ","dz","exposure","roughness","spriteKey","makeSprite3d","textureKey","alphaMode","StandardMaterialAlphaMode","mask","createPlane3d","RobotClass","robotWorldType","RobotHelper","startX","startY","initialeWelt","turnRight","adjustAngle","turnLeft","schritt","anzahl","hinlegen","markeSetzen","aufheben","istWand","istZiegel","istMarke","himmelsrichtungen","hr","hatSteine","maxSteine","RobotWorldClass","RobotWorldHelper","maximumHeight","addBrick","setMarker","markers","bricks","robots","fetchWorld","Camera","robotCubeFactory","container3D","Container3D","initFromString","initWorldArrays","renderOrnamentsAndInitCamera","adjustRobotPositions","robot","getBrickCount","markerColumn","brickColumn","northSprite","control","CameraOrbitControl","angles","target","oldHeight","brick","setToXY","adjustMarkerHeight","removeBrick","hasBrickColor","getMarkerColor","removeMarker","brickList","setDimensions","getNumberOfBricks","initString","lowerCaseCharToColor","upperCaseCharToColor","digits","rows","maxColumns","row","rowLength","brickColor","markerColor","gibtFarbe","Direction","names","deltas","getAngle","getDeltas","fetchRobotWorld","Model","gltf","meshes","sm","crop","rw","newX","newY","newHeight","param","marke","ResultSetClass","wasNull","typeIdFirstUppercase","columnIndex","rsh","columnCount","isAfterLast","columnLabel","getColumnIndex","ResultsetHelper","columns","DatabaseStatementClass","resultSetType","query","connectionHelper","showHideDbBusyIcon","executeQuery","rs","executeWriteStatement","WorkerSim","initsql","initSqlJs","locateFile","scriptDirectory","postMessageToClient","postMessage","db","SQL1","SQL","createDb","worker","terminate","buff","results","exec","each","finished","DatabaseTool","databaseDirectoryEntries","queryId","querySuccessCallbacksMap","queryErrorCallbackMap","initializeWorker","queries","callbackAfterInitializing","jo_doc","Worker","querySuccessCallback","queryErrorCallback","execQuery","shift","action","sql","params","executeWriteQueries","dump","sqliteMagicBytes","DatabaseLongPollingListener","onServerSentStatementsCallback","longPoll","listenerIdentifier","resp","firstNewStatementIndex","newStatements","rollbackToVersion","DatabasePreparedStatementClass","psh","checkQuery","getQueryWithParameterValuesFilledIn","PreparedStatementHelper","prepareStatement","insideQuotation","parameterPositions","parameterValues","queryParts","queryWithParameterValues","ConnectionClass","preparedStatementType","statementType","stmt","ConnectionHelper","skipNextServerSentStatement","dbData","databaseData","longPollingListener","onServerSentStatements","executeStatementsFromServer","firstStatementIndex","errorMessage","retrieveLastRowId","oldStatementIndex","DatabaseManagerClass","connectionType","connectionRuntimeObject","Module","oldErrorDecorations","breakpoints","breakpointDecorators","decoratorIdToBreakpointMap","identifierPositions","methodCallPositions","uriCounter","uriMap","Uri","scheme","createModel","updateOptions","tabSize","bracketColorizationOptions","enabled","formatter","applyEdits","onDidChangeContent","versionId","main1","text_before_revision","student_edited_after_revision","homeworkManager","showHomeWorkRevisionButton","renderHomeworkButton","toExportedModule","getMethodDeclarationAtPosition","methodAST","lineNumber","patched","f1","submitted_date","forceUpdate","file_type","possibleMethods","lines","cp","mcpList","toggleBreakpoint","rerender","getBreakpoint","setBreakpoint","renderBreakpointDecorators","attachToStatement","programList","getPrograms","nearestStatement","nearestDistance","decorations","isWholeLine","overviewRuler","OverviewRulerLane","Left","minimap","MinimapPosition","Inline","marginClassName","stickiness","TrackedRangeStickiness","NeverGrowsWhenTypingAtEdges","deltaDecorations","decoration","getModel","getAllDecorations","findSymbolTableAtPosition","getErrorCount","el","getTypeAtPosition","positionsOnLine","foundPosition","getElementAtPosition","bestFoundPosition","dependsOnModulesWithErrors","programs","TypeStore","getSortedAndFilteredErrors","e2","errorLevelCompare","level1","level2","renderStartButton","$buttonDiv","$htmlFirstLine","$startButtonDiv","setModuleActive","maxUriNumber","BaseModule","GNGModule","ModuleStore","withBaseModule","additionalLibraries","modules","moduleMap","lib","addLibraryModule","findModuleById","module_id","getFirstModule","isDirty","includeSystemModules","excludedModuleName","removeModuleWithFile","moduleName","getTypeCompletionItems","moduleContext","item","Struct","Class","generic","typeMap","DebuggerElement","caption","getLevel","getIndent","$debuggerElement","$deFirstLine","canOpen","onFirstOpening","toggleClass","renderValue","renderListElements","de","$childContainer","removeAllChildren","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","setSelectionRange","after","newValue","openContextMenu","items","$contextMenu","$openSubMenu","parentMenuItem","mi","link","$item","subMenu","document","$link","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","tabs","trigger","convertPxToNumber","pxString","makeDiv","div","setSelectItems","$selectElement","activeItemValue","selected","getSelectedObject","$selectDiv","selectedValue","jo_mouseDetected","animateToTransparent","cssProperty","startColorRgb","colorPraefix","animate","downloadFile","filename","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","createElement","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","copyTextToClipboard","clipboard","writeText","textArea","body","appendChild","select","execCommand","fallbackCopyTextToClipboard","AdhocCompiler","lexer","parser","compile","lexed","resolvedTypeAndModule","codeGeneratorErrors","Evaluator","programMap","compiler","expression","pmEntry","compilation","getDebugger","lastSymboltable","Workspace","evaluator","toExportedWorkspace","alterAdditionalLibraries","withFiles","currentFileId","currentlyOpenModule","sql_baseDatabase","sql_history","sql_manipulateDatabaseStatements","myMain","synchronizeWithRepository","synchronizationManager","synchronizeWithWorkspace","libaries","restoreFromData","getModuleByMonacoModel","Dialog","$dialog","$dialogMain","heading","addDiv","subHeading","placeholder","$buttonRow","waitMessage","$message","addCheckbox","ischecked","$checkbox","$description","prop","is","WorkspaceImporter","dialog","pathDescription","$fileInputButton","exportedWorkspaces","$workspacePreviewDiv","registerFiles","reader","FileReader","onload","ew","readAsText","originalEvent","$dropZone","evt","dataTransfer","dropEffect","firstWorkspace","wse","setWorkspaceActive","AccordionPanel","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","elements","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","addAction","$collapseAllAction","collapseAll","hasClass","slideUp","$captionElement","$listElement","setFixed","fixed","grow","enableNewButton","$buttonNew","getCurrentlySelectedPath","pathArray","selectedElement","getSelectedElement","compareWithPath","name1","path1","isFolder1","name2","path2","isFolder2","cmp","getElementIndex","insertElement","insertIndex","$elements","elementAtIndex","before","renderElement","renameElement","renderOuterHtmlElements","$accordionDiv","newElementCallback","$htmlSecondLine","insertAfter","selectCallback","$listOuter","$ce","$li","targetGrow","parts","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","aName","sortName","bName","setTextAfterFilename","cssClass","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","effectAllowed","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","contextMenuProvider","cmi","pageX","pageY","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","moveCallback","folder","pointPos","selection","newText","invokeCallback","ae1","findElement","pathString","elPath","getPathString","setElementClass","setCaption","Accordion","$html","panel","WatcherElement","accordionElement","$secondLine","$rightTextInFirstLine","setError","colorize","$result","Debugger","$debuggerDiv","$projectexplorerDiv","lastDebuggerElements","variablePanel","watchPanel","callbackIfSuccesful","addWatchExpression","watchExpression","deleteWatchExpression","newName","renameWatchExpression","stackframe","elementsToKeep","oldDebuggerElements","$variableList","thisString","visibleVariablesMap","oldDe","evaluateWatcherExpressions","watcherElement","$rightTextAfterFilename","we","ActionManager","$mainElement","keyEntries","executeKeyDownEvent","actionIdentifier","active","activeElement","tagName","actionEntries","actionEntry","ProgramPrinter","$bottomDiv","$pcodeTab","printProgram","$pcode","printModule","compilerMessage","labels","lastLabelNumber","number","printNode","format3","printVariable","ConsoleEntry","withBottomBorder","$consoleEntry","$firstLine","span","valueString","detachValue","MyConsole","history","historyPos","readyToExecute","consoleEntries","errorDecoration","$consoleTabHeading","initConsoleClearButton","$consoleClear","layout","$editorDiv","automaticLayout","renderLineHighlight","guides","bracketPairs","highlightActiveIndentation","indentation","overviewRulerLanes","lineNumbers","glyphMargin","folding","lineDecorationsWidth","lineNumbersMinChars","fixedOverflowWidgets","javaOnlineFont","roundedSelection","occurrencesHighlight","suggest","localityBonus","snippetsPreventQuickSuggestions","scrollbar","vertical","horizontal","theme","addCommand","KeyCode","Enter","compileIfDirty","UpArrow","nextHistoryPos","setPosition","DownArrow","lastVersionId","timerHandle","showErrors","setModelMarkers","executeRapidly","programHasMethodCalls","executeInStepMode","$entry","consoleTop","commandEntry","resultEntry","ce","dontDetectLastChange","revealRangeInCenter","ErrorManager","$mainDiv","oldDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","showParenthesisWarning","errorCountMap","$errorList","linesDecorationsClassName","borderLeftClass","lightBulbClass","onClickFunction","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$lineColumn","category","HomeworkManager","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","hideRevision","showRevision","hideHomeworkRevisionButton","originalModel","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","dispose","attachToWorkspaces","daysWithModules","dateString","stringToDate","dateWithoutTime","dateToStringWithoutTime","dwm","day","moduleWithWorkspace","BottomDiv","errorManager","printCurrentlyExecutedModule","showHomeworkTab","hideHomeworkTab","displayValue","MyCompletionItemProvider","triggerCharacters","provideCompletionItems","context","_contentWidgets","widget","_widget","toggleDetails","consoleModel","isConsole","isMainWindow","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","triggerCharacter","getCompletionItemsAfterNew","countLower","countGreater","getCompletionItemsAfterClass","ibMatch","dotMatch","getCompletionItemsAfterDot","varOrClassMatch","getCompletionItemsInsideIdentifier","posMin","posMax","watchDog","posOld","suggestions","insideGenericParameterDefinition","startsWithCurlyBrace","trimLeft","getOverridableMethodsCompletion","sortText","getKeywordCompletion","textAfterDot","dotColumn","tStatic","keywordCompletionItems","alreadyImplemented","getDeclarationAsString","short","implList","getTypeVariableDeclaration","getGenericParameterDefinition","decl","MySignatureHelpProvider","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","provideSignatureHelp","reject","provideSignatureHelpLater","methodCallPosition","rightMostPosition","getSignatureHelp","parameterIndex","signatureInformationList","makeIntrinsicSignatureInformation","makeSignatureInformation","activeParameter","activeSignature","signatures","parameterInformationList","posFrom","posTo","pi","MyHoverProvider","provideHover","getSelection","declarationAsString","contents","typeIdentifier","word","getWordUnderCursor","desc","keywordDescriptions","widenDeclaration","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","provideCodeActions","diagnostics","isPreferred","MyReferenceProvider","provideReferences","referencePositions","upInCurrentModule","up","MyColorProvider","provideDocumentColors","provideColorPresentations","oldColor","red256","green256","blue256","hex6Digits","toHex2Digits","rgbCommaSeparated","Editor","showMinimap","highlightCurrentMethod","cw","dontPushNextCursorMove","lastPushTime","lastTime","elementDecoration","extensions","conf","indentationRules","decreaseIndentPattern","increaseIndentPattern","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","symbols","escapes","octaldigits","binarydigits","hexdigits","tokenizer","root","cases","include","whitespace","javadoc","string","defineMyJava","defineTheme","inherit","rules","foreground","colors","lightbulb","peekWidgetDefaultFocus","quickSuggestions","quickSuggestionsDelay","selectOnLineNumbers","scrollBeyondLastLine","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","insertMode","parameterHints","cycle","mouseWheelZoom","onKeyDown","mouseWheelListener","changeEditorFontSize","deltaY","_main","windowStateManager","registerBackButtonListener","historyEntry","revealPosition","pushHistoryState","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","currentModelId","source","getPositionForHistory","onEvaluateSelectedText","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerRenameProvider","registerColorProvider","registerDefinitionProvider","provideDefinition","cancellationToken","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","getPosition","replaceState","pushState","insertTextAndSetCursor","newColumn","prevLine","getLineContent","trimRight","getLineCount","spacesAtBeginningOfLine","isSelected","charBefore","charAfter","setFontSize","fontSizePx","editorfs","getOptions","viewModeController","saveFontSize","bottomDiv1","documentElement","setProperty","dynamic","newEditorFs","keybindings","KeyMod","CtrlCmd","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","US_COMMA","removeContentWidget","getId","getDomNode","preference","ContentWidgetPositionPreference","ABOVE","BELOW","addContentWidget","runningModule","darkColor","zIndex","resolveRenameLocation","rejectReason","provideRenameEdits","resourceEdits","usagePositionsInModule","SpeedControl","$container","gripWidth","overallWidth","$outer","$bar","$display","mousedownX","oldPosition","setSpeed","clientX","deltaX","intervalBorders","gripIntervalLength","gripPosition","setInterpreterSpeed","newPosition","intervalDelta","intervalIndex","intervalMin","speedString","ProgramControlButtons","$buttonsContainer","$editorContainer","ZoomControl","$parentElement","gripHeight","overallHeight","zoomMin","zoomMax","$zoomcontrolOuter","mousedownY","$zoomcontrolBar","$zoomcontrolDisplay","setZoom","clientY","preventFading","zoomfactor","zfs","Alignment","CompilerStatus","DiagramUnitCm","Diagram","$htmlElement","inlineStyles","marginCm","minDistance","minWidthHeightCm","widthCm","heightCm","$menuButton","$scrollpane","overflow","$canvas","zoomControl","svgElement","createElementNS","$centerRectangle","adjustCenterRectangle","ev1","screenX","screenY","scrollLeft","setSize","adjustSizeAndElements","diagramElements","rr","leftCm","topCm","isAdjusted","newWidthCm","newHeightCm","insertStyleElement","styles","ns","defs","refreshInlineStyles","selector","stylesForSelector","textContent","findFreeSpace","fertig","xCm","yCm","isFree","insideX","insideY","DiagramElement","getRoutingRectangle","appendTo","withRaster","adjustToRaster","createTextElement","font","getTextMetrics","textElement","bbox","getBBox","cmPerPx","addTextLine","bold","italics","$group","textPosYCm","maxWidthCm","onClick","metrics","textHeightCm","textWidthCm","tooltip","thicknessCm","textCenter","textRight","$g","ClassBox","diagram","withMethods","withAttributes","attachToClass","isSystemClass","hashedSignature","scb","cb","klassSignature","getSignature","renderLines","addMouseEvents","jumpToDeclaration","parametersWithTypes","currentClassBoxes","getVisibilityText","$dropdownTriangle","getTrianglePath","adjustClassDiagramSize","updateArrows","stopImmediatePropagation","cmPerPixel","inDebounce","chr","hash","hasSignatureAndFileOf","ArrowHead","position1Cm","position2Cm","ex","ey","DiagramArrow","arrow","arrows","step","ex1","ey1","rauteAlpha","routingArrow","minimalPoints","getPathCoordinates","arrowData","arrowType","endsOnArrowWithIdentifier","head","makeHead","point","ClassDiagram","classBoxesRepository","straightArrowSectionAfterRectangle","distanceFromRectangles","slotDistance","displaysSystemClasses","displaySystemClasses","drawDiagram","clearAfterLogout","scd","classBoxes","workspaceId","classBox","cbs","deserialize","serializedClassDiagram","inactive","getClassBoxes","switchToWorkspace","cbs1","onlyUpdateIdentifiers","newClassBoxes","anyTypelistThere","newClassesToDraw","findAndEnableClass","uscList1","usc","freePos","routingInput","drawArrows","routingWorker","arrowsWithoutColorLast","arrowIdentifierToColorMap","arrowsWithoutColor","da","rectangles","cb1","findClassbox","drawArrwow","intf","cb2","destRectangleIndex","sourceRectangleIndex","destinationIdentifier","ListDiagram","objectDiagram","getSettingsElement","rootIdentifier","getName","updateDiagram","rootValue","selfReferenceType","rootValueSelfReferenceType","analyzeSelfReference","attributesWithSelfReference","sr","tExtends","tImplements","ObjectDiagram","$objectDiagramDiv","variants","currentVariant","$typeOption","variant","currentTarget","intValue","updateSettings","$settingsDiv","RightDiv","isWholePage","$tabs","$headings","withClassDiagram","withObjectDiagram","drawClassDiagrams","onObjectDiagramEnabled","rightdiv_width","$wholeWindow","screenHeight","screenWidthToHeight","worldWidthToHeight","newWidth","isClassDiagramEnabled","isObjectDiagramEnabled","updateObjectDiagramSettings","EmbeddedSlider","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","md","mm","slide","setColor","otherHeight","newOtherHeight","otherWidth","newOtherWidth","EmbeddedFileExplorer","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeAllFiles","removeFile","addHint","script","$fileDiv","hint","onDelete","setFirstFileActive","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","code_inline","idx","env","content","md2","codeMap","uncoloredtext","markFile","EmbeddedIndexedDB","indexedDB","onsuccess","onupgradeneeded","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","writeScript","scriptId","objectStore","removeScript","getScript","SemicolonAngel","startRegistering","isThereAgain","oldEvidence","firstSeenMs","healSemicolons","cursorLine","isCurrentModule","editOperations","setSelection","MainEmbedded","scriptList","programPointerDecoration","programIsExecutable","compileRunsAfterCodeReset","readConfig","initScripts","hideStartPanel","readScripts","semicolonAngel","actionManager","withFileList","fileExplorer","initWorkspace","$filesListDiv","configJson","hideEditor","withPCode","withErrorList","jsonFilename","editorState","saveViewState","restoreViewState","eraseDokuwikiSearchMarkup","scriptListJSon","saveScripts","countDown","$resetButton","oneNotSaved","deleteScriptsInDB","considerShowingCodeResetButton","$centerDiv","$resetModalWindow","makeCodeResetModalWindow","makeRightDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","$buttonOpen","loadWorkspaceFromFile","$buttonSave","saveWorkspaceToFile","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$coordinates","$infoButton","Compiler","$parent","$window","programPointerModule","revealRangeInCenterIfOutsideViewport","beforeContentClassName","$filesHeader","compilerStatus","compiling","startable","prompt","$tabheadings","$thRightSide","$thConsoleClear","$thErrors","$thConsole","$thPCode","$tabError","$tabConsole","$tabPCode","$thRun","$thVariables","$vd","$alternativeText","compiledButNothingToRun","errorfree","readyToRun","UserMenu","$userSettingsButton","PasswordChanger","$oldPassword","$newPassword1","$newPassword2","waitDiv","oldPassword","newPassword","MainMenu","currentSubmenu","openSubmenusOnMousemove","serverURL","mainMenu","switchTheme","repositoryUpdateManager","repositoryCheckoutManager","is_admin","is_schooladmin","is_teacher","confirm","initMenu","setTheme","menu","initMenuitemCallbacks","opensubmenu","DistributeToStudentsDialog","studentCount","$studentList","student","students","$studentLine","$studentClass","$studentName","back","distributeWorkspace","registerOneTimeBackButtonListener","WorkspaceSettingsDialog","currentLibraries","library","checkboxState","changed","newLibs","used","ProjectExplorer","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","callbackIfSuccessful","cmiList","$synchronizeAction","$homeworkButtonDiv","removeWorkspace","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","workspaceAccordionElement","workspaceData","newWorkspace","teacherExplorer","classPanel","repositoryOn","repositoryCreateManager","restoreOwnWorkspaces","renderFiles","moduleList","renderWorkspaces","renderErrorCount","errorCount","errorCountS","showRepositoryButtonIfNeeded","repositoryButtonDone","nonSystemModules","newFileHelperDone","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","Center","setExplorerColor","Sliders","initSliders","moveLeftPanel","moveBottomDiv","moveRightDiv","sliderknobLeft","sliderknobRight","$editor","mewidth","meheight","$leftPanel","TeacherExplorer","classData","removePanels","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","ea","renderStudents","userDataList","ud","classDataList","ThemeManager","themes","initThemes","internalSwitchTheme","monacoTheme","cssColors","highlightColor","Login","isLoginWithTicket","startAnimations","$loginSpinner","loginHappened","sendLoginRequest","showLoginForm","ticket","servlet","loginRequest","password","isTestuser","consoleHelperDone","newWorkspaceHelperDone","speedControlHelperDone","homeButtonHelperDone","stepButtonHelperDone","folderButtonDone","viewModes","waitForGUICallback","initTeacherExplorer","classdata","initViewMode","startupComplete","loginWithTicket","ViewModeController","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","toggleEditorFullwidth","setMode","rightDivWidth","editorWidth","mode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","toggleHighContrast","monitor","presentation","WindowStateManager","oneTimeBackButtonListener","backButtonListener","InconsistencyFixer","updateNeeded","newFolder","folderList","ws1","identicalFolders","ws2","folderPathAndNames","fnap","revealLineInCenter","matchMedia","matches","login","hashIndex","initTypes","checkStartupComplete","correctPIXITransform","utils","skipHello","Transform","prototype","parentTransform","_localID","_currentLocalID","_parentID","_worldID","wt","initEditor","debounceDiagramDrawing","fixInconsistencies","currentWorkspace_id","SynchroWorkspace","manager","isCurrentRepositoryVersion","hasChanges","isWritable","copiedFromWorkspace","repositoryIsWritable","copyFromWorkspace","idInsideRepository","idInsideWorkspace","workspaceFile","synchroWorkspace","markedAsMerged","originalText","monacoModel","copyFromRepository","repository","fileEntries","fileEntry","copyFromHistoryElement","historyElement","repo","getRepositoryState","commit","oldRepository","oldIdToFileMap","newIdToFileMap","newlyVersionedFileIds","repositoryHistoryEntry","isIntermediateEntry","timestamp","toUTCString","historyFiles","oldFile","committedFromFile","getPatch","cff","commitFilesRequest","synchroFile","repositoryVersionBeforeCommit","cfr","currentUserSynchroWorkspace","contentOld","contentNew","dmp","diff_match_patch","patchObject","patch_make","deSerializedPatchObject","patch_apply","writeChangesToWorkspace","oldIdToModuleMap","HistoryElement","historyEntryIndex","$historyElementDiv","currentlyDragged","line1","line2","line3","$historyScrollDiv","leftSynchroWorkspace","setupSynchronizationListElements","rightSynchroWorkspace","entries","historyEntries","startIndex","entry","setIntermediateState","deleteFile","changeFile","oldText","SynchronizationListElement","leftSynchroFile","rightSynchroFile","$buttons","pending","$leftFileDiv","$buttonLeftDiv","$buttonRightDiv","$rightFileDiv","$fileListDivs","allDivs","createLeftFileModel","createRightFileModel","lastShownSynchronizationElement","setEditorModel","getEmptyMonacoModel","onContentChanged","compareFilesAndAdaptGUI","onFileChanged","emptyGUI","leftCaption","leftVersionCaption","needsMerge","rightCaption","rightVersionCaption","$spacer1","$spacer2","makeButton","isSynchronized","isRename","isUpdateOrCommit","onlyRename","$markAsMergedButtonDiv","showMergedDiv","updateCenterButtons","$mergedDiv","arrowDirection","SynchronizationManager","$fileListHeaderDivs","guiReady","synchronizationListElements","historyElements","gainRepositoryLock","attachToWorkspaceAndRepository","timer","currentRepository","attachToRepository","fe","withHistoryElements","crepo","he","che","hfe","deserializeRepository","currentRepositorySynchroWorkspace","setupHistoryElements","lastShownHistoryElement","lastSynchroFileLeft","lastSynchroFileRight","fileElements","synchroFileMap","sfile","fileElement","fe1","fe2","synchroListElement","setHeader","$backToWorkspaceButton","$writeWorkspaceChangesButton","writable","$backToCurrentRepositoryVersionButton","$writeRepositoryChangesButton","lastFileSelected","$synchroDiv","$mainHeadingDiv","$belowMainHeadingDiv","$buttonsTopRightDiv","$exitButton","$leftDiv","$historyOuterDiv","$leftUpperDiv","$fileListHeaderOuterDiv","$fileListOuterDiv","$fileListFooterDiv","$fileListHeaderContainerRight","fileListHeaderRight","$fileListHeaderCenter","$updateAllButton","updateAll","$commitAllButton","commitAll","backToWorkspace","backToCurrentRepositoryVersion","writeWorkspaceChanges","writeRepositoryChanges","makeDroppable","$dropZoneDiv","$dialogDiv","$dialogTextarea","$dialogButtonDiv","$buttonCancel","$buttonOK","click","RepositoryCreateManager","publishedToItems","$updateDiv","$mainHeading","$repoName","$repoDescription","$repoPublishedTo","$createButton","createButtonClicked","$cancelButton","cancelButtonClicked","isStudent","initCreateMode","publishedTo","RepositorySettingsManager","repositoryOwnerItems","users","exitButtonClicked","$divBelow","$divLeft","$repoListDiv","enableSaveButton","$repoOwner","$setSecrDivRead","$settingsSecretRead","$setSecrReadCopyButton","$setSecrReadButton","setSecret","$setSecrDivWrite","$settingsSecretWrite","$setSecrWriteCopyButton","$setSecrWriteButton","$userlistDiv","$saveButton","saveButtonClicked","repositoryInfo","secret_read","secret_write","is_student","showRepositoryList","deleteRepository","repInfo","emptyRepositoryInfo","onlyOwnRepositories","$firstDiv","firstRepInfo","repositories","$namediv","$deleteDiv","selectRepository","$repoDiv","repoData","published_to","repositoryUserList","userData","$userDiv","firstName","lastName","$canWriteDiv","$canWriteCheckBox","canWrite","selectedItems","some","owner_name","owner_username","owner","updateRepositoryRequest","writeAccessList","has_write_access","RepositoryCheckoutManager","filterbuttonOptions","$checkoutDiv","$chooseWorkspaceDiv","$workspaceDropdown","$codeDiv","$codeInput","$publishedToFilterDiv","$filterButtonDiv","$radioButton","showRepositories","$inputFilterDiv","$filterInput","$checkoutButton","checkoutButtonClicked","filteredRepositories","repoInfo","filterSearch","$divRight","selectFirstRepository","secret","combinedSecret","tIndex","new_workspace","require","paths","availableLanguages","ignoreDuplicateModules","load"],"sourceRoot":""}